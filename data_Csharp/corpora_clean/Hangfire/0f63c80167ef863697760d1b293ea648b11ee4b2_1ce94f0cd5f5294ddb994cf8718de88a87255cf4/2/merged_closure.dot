digraph  {
m1_2 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="AutomaticRetryAttribute.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m1_3 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="AutomaticRetryAttribute.cs", label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m1_0 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="AutomaticRetryAttribute.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m1_1 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="AutomaticRetryAttribute.cs", label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m2_11 [cluster="Unk.NotNull", file="AutomaticRetryProcess.cs", label="Entry Unk.NotNull", span=""];
m2_12 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="AutomaticRetryProcess.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m2_0 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m2_1 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs", label="_name = name", span="16-16"];
m2_2 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", color=green, community=0, file="AutomaticRetryProcess.cs", label="_results = results", prediction=0, span="17-17"];
m2_5 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs", label="Entry HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21"];
m2_6 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="AutomaticRetryProcess.cs", label="Assert.NotNull(context)", prediction=1, span="23-23"];
m2_7 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs", label="_results.Add(_name)", span="25-25"];
m2_8 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs", label="_changeState != null", span="27-27"];
m2_9 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs", label="context.CandidateState = _changeState", span="29-29"];
m2_10 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="AutomaticRetryProcess.cs", label="Exit HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21"];
m2_3 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs", label="HangFire.Filters.ClientExceptionContext", span=""];
m2_4 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="AutomaticRetryProcess.cs", label="Exit HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m2_13 [file="AutomaticRetryProcess.cs", label="HangFire.Tests.TestStateChangingFilter", span=""];
m3_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJob.Instance.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_0 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m3_1 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=green, community=0, file="BackgroundJob.Instance.cs", label="id == null", prediction=2, span="27-27"];
m3_4 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Job = job", span="30-30"];
m3_5 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="CreatedAt = createdAt", span="31-31"];
m3_2 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", color=green, community=0, file="BackgroundJob.Instance.cs", label="throw new ArgumentNullException(''id'');", prediction=3, span="27-27"];
m3_6 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJob.Instance.cs", label="Exit Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m3_8 [file="BackgroundJob.Instance.cs", label="Hangfire.BackgroundJob", span=""];
m4_0 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs", label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35"];
m4_1 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="BackgroundJobClientException.cs", label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35"];
m5_0 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m5_1 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="BackgroundJobClientFacts.cs", label="_redis = redis", span="22-22"];
m5_3 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=green, community=0, file="BackgroundJobClientFacts.cs", label="type == null", prediction=4, span="71-71"];
m5_4 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=green, community=0, file="BackgroundJobClientFacts.cs", label="throw new ArgumentNullException(''type'');", prediction=5, span="71-71"];
m5_18 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="jobId == null", span="56-56"];
m5_76 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="Method.DeclaringType == null", span="210-210"];
m5_78 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="215-215"];
m5_79 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="217-220"];
m5_80 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="!Method.IsPublic", span="223-223"];
m5_82 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="typeof (Task).IsAssignableFrom(Method.ReturnType)", span="228-228"];
m5_84 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="var parameters = Method.GetParameters()", span="233-233"];
m5_85 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="parameters.Length != Arguments.Length", span="235-235"];
m5_77 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="212-212"];
m5_81 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="225-225"];
m5_83 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="230-230"];
m5_87 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label=parameters, span="240-240"];
m5_86 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="237-237"];
m5_89 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="248-249"];
m5_91 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="254-255"];
m5_90 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="parameter.ParameterType.IsByRef", span="252-252"];
m5_88 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="parameter.IsOut", span="246-246"];
m5_92 [cluster="Hangfire.Common.Job.Validate()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.Validate()", span="208-208"];
m5_95 [cluster="string.Format(string, object, object)", file="BackgroundJobClientFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_165 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="BackgroundJobClientFacts.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m5_33 [cluster="Unk.CreatePipeline", file="BackgroundJobClientFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m5_107 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="var parameters = Method.GetParameters()", span="286-286"];
m5_108 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="var result = new List<object>(Arguments.Length)", span="287-287"];
m5_112 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="var argument = Arguments[i]", span="292-292"];
m5_110 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="i < parameters.Length", span="289-289"];
m5_111 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="var parameter = parameters[i]", span="291-291"];
m5_109 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="var i = 0", span="289-289"];
m5_122 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="result.Add(value)", span="324-324"];
m5_124 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="return result.ToArray();", span="327-327"];
m5_113 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="object value", span="294-294"];
m5_116 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="value = argument != null\r\n								? JobHelper.FromJson(argument, parameter.ParameterType)\r\n								: null", span="304-306"];
m5_119 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="value = argument", span="314-314"];
m5_121 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="value = converter.ConvertFromInvariantString(argument)", span="319-319"];
m5_115 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="value = cancellationToken", span="298-298"];
m5_114 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="296-296"];
m5_123 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="i++", span="289-289"];
m5_118 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="parameter.ParameterType == typeof (object)", span="310-310"];
m5_120 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="318-318"];
m5_117 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label=Exception, span="308-308"];
m5_126 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="331-333"];
m5_125 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label=Exception, span="329-329"];
m5_127 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="282-282"];
m5_93 [cluster="System.Type.IsAssignableFrom(System.Type)", file="BackgroundJobClientFacts.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m5_36 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="BackgroundJobClientFacts.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="124-126"];
m5_41 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", prediction=6, span="131-133"];
m5_66 [cluster="object.GetType()", file="BackgroundJobClientFacts.cs", label="Entry object.GetType()", span="0-0"];
m5_47 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="invocationData.Type = x[0]", span="92-92"];
m5_105 [cluster="string.Format(string, object)", file="BackgroundJobClientFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_29 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="BackgroundJobClientFacts.cs", label="result = InvokeMethod(instance, deserializedArguments)", span="112-112"];
m5_173 [cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m5_30 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="return result;", prediction=7, span="119-119"];
m5_5 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", color=green, community=0, file="BackgroundJobClientFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", prediction=8, span="0-0"];
m5_6 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="Entry HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", prediction=9, span="27-27"];
m5_7 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="string jobId", prediction=10, span="29-29"];
m5_10 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", prediction=9, span="35-35"];
m5_11 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="queueIndex = (queueIndex + 1) % _queueNames.Count", prediction=12, span="37-37"];
m5_12 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="queueName = _queueNames[queueIndex]", prediction=13, span="38-38"];
m5_14 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="var fetchedKey = String.Format(''hangfire:queue:{0}:dequeued'', queueName)", span="41-41"];
m5_15 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="queueIndex == 0", span="43-43"];
m5_35 [cluster="Unk.Flush", file="BackgroundJobClientFacts.cs", label="Entry Unk.Flush", span=""];
m5_37 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="79-82"];
m5_32 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="BackgroundJobClientFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m5_97 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label="var instance = activator.ActivateJob(Type)", span="264-264"];
m5_99 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="268-269"];
m5_98 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label="instance == null", span="266-266"];
m5_100 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label="return instance;", span="272-272"];
m5_102 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="276-278"];
m5_101 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label=Exception, span="274-274"];
m5_103 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="260-260"];
m5_46 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Entry lambda expression", span="90-97"];
m5_177 [cluster="System.Type.ToGenericTypeString()", file="BackgroundJobClientFacts.cs", label="Entry System.Type.ToGenericTypeString()", span="8-8"];
m5_94 [cluster="System.ArgumentException.ArgumentException(string)", file="BackgroundJobClientFacts.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_19 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="var invocationData = new InvocationData()", span="73-73"];
m5_26 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="return new JobPayload(jobId, queueName, invocationData)\r\n            {\r\n                Args = args,\r\n                Arguments = arguments\r\n            };", span="106-110"];
m5_27 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="Exit HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
m5_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="BackgroundJobClientFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m5_21 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="string args = null", span="75-75"];
m5_23 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="pipeline.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow)))", span="79-82"];
m5_25 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="pipeline.Flush()", span="99-99"];
m5_20 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="string arguments = null", span="74-74"];
m5_22 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="var pipeline = _redis.CreatePipeline()", span="77-77"];
m5_31 [cluster="Unk.PopAndPushItemBetweenLists", file="BackgroundJobClientFacts.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m5_38 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="79-82"];
m5_64 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410"];
m5_167 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="Debug.Assert(expression != null)", span="412-412"];
m5_168 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="var constantExpression = expression as ConstantExpression", span="414-414"];
m5_171 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="421-421"];
m5_170 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="return constantExpression.Value;", span="418-418"];
m5_169 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="constantExpression != null", span="416-416"];
m5_172 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410"];
m5_161 [cluster="System.Diagnostics.Debug.Assert(bool)", file="BackgroundJobClientFacts.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m5_163 [cluster="Unk.ToArray", file="BackgroundJobClientFacts.cs", label="Entry Unk.ToArray", span=""];
m5_65 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundJobClientFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_34 [cluster="Unk.QueueCommand", file="BackgroundJobClientFacts.cs", label="Entry Unk.QueueCommand", span=""];
m5_134 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs", label="return Method.Invoke(instance, deserializedArguments);", span="341-341"];
m5_137 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs", label="throw ex.InnerException;", span="350-350"];
m5_138 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="353-355"];
m5_136 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs", label="ex.InnerException is OperationCanceledException", span="345-345"];
m5_135 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs", label=TargetInvocationException, span="343-343"];
m5_139 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="337-337"];
m5_130 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="BackgroundJobClientFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m5_140 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="BackgroundJobClientFacts.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m5_67 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377"];
m5_153 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="string value = null", span="386-386"];
m5_149 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="Debug.Assert(callExpression != null)", span="379-379"];
m5_150 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="var arguments = callExpression.Arguments.Select(GetExpressionValue).ToArray()", span="381-381"];
m5_152 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label=arguments, span="384-384"];
m5_154 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="argument != null", span="388-388"];
m5_158 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="serializedArguments.Add(value)", span="404-404"];
m5_159 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="return serializedArguments.ToArray();", span="407-407"];
m5_151 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="383-383"];
m5_155 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="argument is DateTime", span="390-390"];
m5_156 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="value = ((DateTime) argument).ToString(''o'', CultureInfo.InvariantCulture)", span="392-392"];
m5_157 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="value = JobHelper.ToJson(argument)", span="396-396"];
m5_160 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377"];
m5_133 [cluster="System.Collections.Generic.List<T>.ToArray()", file="BackgroundJobClientFacts.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m5_104 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m5_63 [cluster="System.NotSupportedException.NotSupportedException(string)", file="BackgroundJobClientFacts.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m5_68 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m5_69 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="methodCall == null", prediction=14, span="194-194"];
m5_70 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="throw new ArgumentNullException(''methodCall'');", prediction=15, span="194-194"];
m5_71 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="196-196"];
m5_74 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="202-205"];
m5_72 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs", label="callExpression == null", span="197-197"];
m5_73 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="199-199"];
m5_75 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m5_39 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="79-82"];
m5_44 [cluster="lambda expression", file="BackgroundJobClientFacts.cs", label="Exit lambda expression", span="87-89"];
m5_45 [cluster="Unk.GetValuesFromHash", file="BackgroundJobClientFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m5_166 [cluster="Unk.ToJson", file="BackgroundJobClientFacts.cs", label="Entry Unk.ToJson", span=""];
m5_43 [cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m5_48 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m5_42 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129"];
m5_50 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="throw new ArgumentNullException(''methodCall'');", span="152-152"];
m5_51 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="154-154"];
m5_52 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="callExpression == null", span="155-155"];
m5_40 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129"];
m5_162 [cluster="Unk.Select", file="BackgroundJobClientFacts.cs", label="Entry Unk.Select", span=""];
m5_128 [cluster="System.Collections.Generic.List<T>.List(int)", file="BackgroundJobClientFacts.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m5_17 [cluster="HangFire.Redis.RedisJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobClientFacts.cs", label="jobId = _redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="52-53"];
m5_164 [cluster="List<string>.cstr", file="BackgroundJobClientFacts.cs", label="Entry List<string>.cstr", span=""];
m5_129 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m5_132 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobClientFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_106 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m5_141 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.Dispose(object)", span="359-359"];
m5_142 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label="var disposable = instance as IDisposable", span="363-363"];
m5_143 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label="disposable != null", span="364-364"];
m5_144 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label="disposable.Dispose()", span="366-366"];
m5_146 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="371-373"];
m5_145 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label=Exception, span="369-369"];
m5_147 [cluster="Hangfire.Common.Job.Dispose(object)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.Dispose(object)", span="359-359"];
m5_174 [cluster="Hangfire.Common.Job.ToString()", file="BackgroundJobClientFacts.cs", label="Entry Hangfire.Common.Job.ToString()", span="424-424"];
m5_175 [cluster="Hangfire.Common.Job.ToString()", file="BackgroundJobClientFacts.cs", label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="426-426"];
m5_176 [cluster="Hangfire.Common.Job.ToString()", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.ToString()", span="424-424"];
m5_131 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="BackgroundJobClientFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m5_96 [cluster="System.Reflection.MethodBase.GetParameters()", file="BackgroundJobClientFacts.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m5_148 [cluster="System.IDisposable.Dispose()", file="BackgroundJobClientFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m5_60 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="type = callExpression.Method.DeclaringType", prediction=16, span="174-174"];
m5_55 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label=invocationData, span=""];
m5_61 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="return new Job(\r\n                type, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="179-182"];
m5_59 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="BackgroundJobClientFacts.cs", label="type = objectValue.GetType()", prediction=17, span="170-170"];
m5_56 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="var objectValue = GetExpressionValue(callExpression.Object)", span="164-164"];
m5_57 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="objectValue == null", span="165-165"];
m5_54 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label=jobId, span=""];
m5_58 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="throw new InvalidOperationException(''Expression object should not be null.'');", span="167-167"];
m5_53 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="HangFire.Redis.RedisJobFetcher", span=""];
m5_62 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs", label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m5_178 [file="BackgroundJobClientFacts.cs", label="Hangfire.Common.Job", span=""];
m6_292 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m6_36 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44"];
m6_35 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'');\r\n                Assert.Equal(''my-state'', hash[''State'']);\r\n            })", prediction=18, span="46-59"];
m6_34 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44"];
m6_26 [cluster="Unk.GetTimeToLive", file="BackgroundJobServer.cs", label="Entry Unk.GetTimeToLive", span=""];
m6_241 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m6_183 [cluster="Unk.EnqueueItemOnList", file="BackgroundJobServer.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m6_45 [cluster="Mock<IState>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<IState>.cstr", span=""];
m6_249 [cluster="Unk.SortedSetContainsItem", file="BackgroundJobServer.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m6_201 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", span="196-196"];
m6_202 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="198-207"];
m6_203 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", span="196-196"];
m6_214 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m6_11 [cluster="Unk.UseConnection", file="BackgroundJobServer.cs", label="Entry Unk.UseConnection", span=""];
m6_324 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m6_49 [cluster="Unk.GetAllEntriesFromHash", file="BackgroundJobServer.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m6_50 [cluster="Unk.Equal", file="BackgroundJobServer.cs", label="Entry Unk.Equal", span=""];
m6_27 [cluster="System.TimeSpan.FromHours(double)", file="BackgroundJobServer.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_330 [cluster="Unk.CreateTransaction", file="BackgroundJobServer.cs", label="Entry Unk.CreateTransaction", span=""];
m6_78 [cluster="Unk.SetEntryInHash", file="BackgroundJobServer.cs", label="Entry Unk.SetEntryInHash", span=""];
m6_61 [cluster="Unk.SetJobState", file="BackgroundJobServer.cs", label="Entry Unk.SetJobState", span=""];
m6_175 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169"];
m6_176 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'');\r\n\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="171-178"];
m6_177 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169"];
m6_8 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20"];
m6_9 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'');\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'');\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)));\r\n\r\n                // Assert\r\n                var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'');\r\n                var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n                var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n\r\n                Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25));\r\n            })", prediction=19, span="22-40"];
m6_10 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20"];
m6_64 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", span="63-63"];
m6_63 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntryInHash(''hangfire:job:my-job:state'', ''OldName'', ''OldValue'');\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''Name'', ''Value'' }\r\n                    });\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'');\r\n                Assert.False(stateHash.ContainsKey(''OldName''));\r\n                Assert.Equal(''my-state'', stateHash[''State'']);\r\n                Assert.Equal(''my-reason'', stateHash[''Reason'']);\r\n                Assert.Equal(''Value'', stateHash[''Name'']);\r\n            })", prediction=20, span="65-88"];
m6_62 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", span="63-63"];
m6_24 [cluster="Unk.SetEntry", file="BackgroundJobServer.cs", label="Entry Unk.SetEntry", span=""];
m6_267 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263"];
m6_268 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'');\r\n\r\n                Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''));\r\n\r\n                Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="265-272"];
m6_269 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263"];
m6_25 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322"];
m6_325 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs", label="var transaction = new RedisWriteOnlyTransaction(redis.CreateTransaction())", span="324-324"];
m6_326 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs", label="action(transaction)", span="326-326"];
m6_327 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs", label="transaction.Commit()", span="327-327"];
m6_328 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="322-322"];
m6_333 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331"];
m6_335 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs", label="action(redis)", span="335-335"];
m6_334 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs", label="var redis = RedisUtils.CreateClient()", span="333-333"];
m6_336 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="331-331"];
m6_162 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157"];
m6_163 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''));\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", prediction=21, span="159-165"];
m6_164 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157"];
m6_148 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m6_3 [cluster="Unk.>", file="BackgroundJobServer.cs", label="Entry Unk.>", span=""];
m6_262 [cluster="Unk.GetItemScoreInSortedSet", file="BackgroundJobServer.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m6_293 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289"];
m6_294 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n                redis.AddItemToList(''hangfire:list'', ''another-value'');\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.RemoveFromList(''list'', ''value''));\r\n\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="291-301"];
m6_295 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289"];
m6_128 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m6_80 [cluster="Unk.False", file="BackgroundJobServer.cs", label="Entry Unk.False", span=""];
m6_228 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225"];
m6_229 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="227-236"];
m6_230 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225"];
m6_0 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="13-13"];
m6_1 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="BackgroundJobServer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new RedisWriteOnlyTransaction(null))", span="15-16"];
m6_2 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="13-13"];
m6_275 [cluster="Unk.AddItemToSortedSet", file="BackgroundJobServer.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m6_227 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m6_103 [cluster="Unk.GetListCount", file="BackgroundJobServer.cs", label="Entry Unk.GetListCount", span=""];
m6_253 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m6_32 [cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobServer.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_217 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211"];
m6_216 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry''));\r\n\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero);\r\n            })", span="213-221"];
m6_215 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211"];
m6_331 [cluster="System.Action<T>.Invoke(T)", file="BackgroundJobServer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m6_280 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276"];
m6_281 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.InsertToList(''list'', ''new-value''));\r\n\r\n                Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="278-285"];
m6_282 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276"];
m6_146 [cluster="Unk.GetItemFromList", file="BackgroundJobServer.cs", label="Entry Unk.GetItemFromList", span=""];
m6_279 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m6_93 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92"];
m6_94 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''));\r\n            })", prediction=22, span="94-106"];
m6_95 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92"];
m6_131 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130"];
m6_130 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                // Act\r\n                Commit(redis, x => x.AddJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0);\r\n                Assert.NotNull(serializedEntry);\r\n\r\n                var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry);\r\n                Assert.Equal(''my-state'', entry[''State'']);\r\n                Assert.Equal(''my-reason'', entry[''Reason'']);\r\n                Assert.Equal(''Value'', entry[''Name'']);\r\n                Assert.True(entry.ContainsKey(''CreatedAt''));\r\n            })", prediction=23, span="132-153"];
m6_129 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130"];
m6_161 [cluster="Unk.AddJobState", file="BackgroundJobServer.cs", label="Entry Unk.AddJobState", span=""];
m6_113 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110"];
m6_114 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", color=green, community=0, file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1));\r\n\r\n                // Act\r\n                Commit(redis, x => x.PersistJob(''my-job''));\r\n\r\n                // Assert\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero);\r\n            })", prediction=21, span="112-126"];
m6_115 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110"];
m6_242 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240"];
m6_243 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value''));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="242-247"];
m6_244 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240"];
m6_47 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_147 [cluster="Unk.NotNull", file="BackgroundJobServer.cs", label="Entry Unk.NotNull", span=""];
m6_329 [cluster="RedisWriteOnlyTransaction.cstr", file="BackgroundJobServer.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m6_46 [cluster="Unk.Setup", file="BackgroundJobServer.cs", label="Entry Unk.Setup", span=""];
m6_288 [cluster="Unk.AddItemToList", file="BackgroundJobServer.cs", label="Entry Unk.AddItemToList", span=""];
m6_54 [cluster="Unk.SerializeData", file="BackgroundJobServer.cs", label="Entry Unk.SerializeData", span=""];
m6_332 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m6_4 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="16-16"];
m6_12 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="22-40"];
m6_14 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'')", prediction=25, span="26-26"];
m6_13 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:job:my-job'', ''job'')", span="25-25"];
m6_15 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'')", span="27-27"];
m6_16 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)))", prediction=25, span="30-30"];
m6_17 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'')", prediction=27, span="33-33"];
m6_29 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="30-30"];
m6_18 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", prediction=28, span="34-34"];
m6_20 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25))", span="37-37"];
m6_19 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="35-35"];
m6_21 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25))", span="38-38"];
m6_30 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.ExpireJob(''my-job'', TimeSpan.FromDays(1))", prediction=29, span="30-30"];
m6_31 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="30-30"];
m6_37 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="46-59"];
m6_39 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", prediction=30, span="50-50"];
m6_38 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var state = new Mock<IState>()", span="49-49"];
m6_40 [cluster="lambda expression", file="BackgroundJobServer.cs", label="state.Setup(x => x.Name).Returns(''my-state'')", span="51-51"];
m6_51 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="50-50"];
m6_52 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.SerializeData()", prediction=31, span="50-50"];
m6_53 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="50-50"];
m6_65 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="65-88"];
m6_68 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''Name'', ''Value'' }\r\n                    })", prediction=32, span="71-75"];
m6_67 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var state = new Mock<IState>()", span="70-70"];
m6_69 [cluster="lambda expression", file="BackgroundJobServer.cs", label="state.Setup(x => x.Name).Returns(''my-state'')", span="76-76"];
m6_81 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="71-71"];
m6_70 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.Reason).Returns(''my-reason'')", prediction=33, span="77-77"];
m6_71 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="80-80"];
m6_87 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="77-77"];
m6_74 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.Equal(''my-state'', stateHash[''State''])", prediction=34, span="85-85"];
m6_72 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'')", span="83-83"];
m6_73 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.False(stateHash.ContainsKey(''OldName''))", span="84-84"];
m6_75 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.Equal(''my-reason'', stateHash[''Reason''])", prediction=34, span="86-86"];
m6_76 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.Equal(''Value'', stateHash[''Name''])", prediction=34, span="87-87"];
m6_77 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="65-88"];
m6_82 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.SerializeData()", prediction=37, span="71-71"];
m6_83 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="71-71"];
m6_88 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.Reason", prediction=38, span="77-77"];
m6_89 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="77-77"];
m6_96 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="94-106"];
m6_100 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", prediction=39, span="102-102"];
m6_97 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var state = new Mock<IState>()", span="97-97"];
m6_99 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", prediction=39, span="99-99"];
m6_101 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''))", prediction=39, span="105-105"];
m6_110 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="102-102"];
m6_102 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="94-106"];
m6_98 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.Name).Returns(''my-state'')", prediction=42, span="98-98"];
m6_104 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="98-98"];
m6_107 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="99-99"];
m6_111 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.SetJobState(''my-job'', state.Object)", prediction=39, span="102-102"];
m6_112 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="102-102"];
m6_105 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.Name", prediction=44, span="98-98"];
m6_106 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="98-98"];
m6_108 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.SerializeData()", prediction=45, span="99-99"];
m6_109 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="99-99"];
m6_116 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="112-126"];
m6_117 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1))", prediction=46, span="115-115"];
m6_118 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1))", prediction=47, span="116-116"];
m6_119 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1))", prediction=47, span="117-117"];
m6_120 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Commit(redis, x => x.PersistJob(''my-job''))", prediction=47, span="120-120"];
m6_121 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero)", prediction=47, span="123-123"];
m6_125 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="120-120"];
m6_122 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero)", prediction=47, span="124-124"];
m6_123 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero)", prediction=47, span="125-125"];
m6_124 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="112-126"];
m6_126 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.PersistJob(''my-job'')", prediction=53, span="120-120"];
m6_127 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="120-120"];
m6_132 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="132-153"];
m6_133 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="var state = new Mock<IState>()", prediction=54, span="135-135"];
m6_134 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.Name).Returns(''my-state'')", prediction=55, span="136-136"];
m6_135 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.Reason).Returns(''my-reason'')", prediction=54, span="137-137"];
m6_136 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } })", prediction=54, span="138-139"];
m6_137 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Commit(redis, x => x.AddJobState(''my-job'', state.Object))", prediction=54, span="142-142"];
m6_159 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.AddJobState(''my-job'', state.Object)", prediction=54, span="142-142"];
m6_138 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0)", span="145-145"];
m6_158 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="142-142"];
m6_149 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="136-136"];
m6_152 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="137-137"];
m6_155 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="138-138"];
m6_160 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="142-142"];
m6_140 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry)", prediction=60, span="148-148"];
m6_139 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.NotNull(serializedEntry)", span="146-146"];
m6_141 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.Equal(''my-state'', entry[''State''])", prediction=61, span="149-149"];
m6_142 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''my-reason'', entry[''Reason''])", span="150-150"];
m6_143 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''Value'', entry[''Name''])", span="151-151"];
m6_144 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.True(entry.ContainsKey(''CreatedAt''))", prediction=60, span="152-152"];
m6_145 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="132-153"];
m6_150 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.Name", prediction=63, span="136-136"];
m6_151 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="136-136"];
m6_153 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.Reason", prediction=64, span="137-137"];
m6_154 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="137-137"];
m6_156 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="x.SerializeData()", prediction=65, span="138-138"];
m6_157 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="138-138"];
m6_165 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="159-165"];
m6_167 [cluster="lambda expression", color=green, community=0, file="BackgroundJobServer.cs", label="Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''))", prediction=66, span="163-163"];
m6_166 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="161-161"];
m6_168 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="164-164"];
m6_23 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="22-40"];
m6_191 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:entry'', ''3'')", span="186-186"];
m6_205 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:entry'', ''3'')", span="200-200"];
m6_219 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:entry'', ''3'')", span="215-215"];
m6_232 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntry(''hangfire:entry'', ''3'')", span="229-229"];
m6_41 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="54-54"];
m6_180 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="175-175"];
m6_192 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.IncrementCounter(''entry''))", span="188-188"];
m6_206 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.IncrementCounter(''entry'', TimeSpan.FromDays(1)))", span="202-202"];
m6_220 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.DecrementCounter(''entry''))", span="217-217"];
m6_233 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)))", span="231-231"];
m6_246 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value''))", span="244-244"];
m6_258 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2))", span="255-255"];
m6_272 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''))", span="269-269"];
m6_285 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.InsertToList(''list'', ''new-value''))", span="282-282"];
m6_300 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.RemoveFromList(''list'', ''value''))", span="297-297"];
m6_316 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Commit(redis, x => x.TrimList(''list'', 1, 2))", span="314-314"];
m6_194 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero)", span="191-191"];
m6_207 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="204-204"];
m6_222 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero)", span="220-220"];
m6_234 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="233-233"];
m6_22 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25))", span="39-39"];
m6_212 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.IncrementCounter(''entry'', TimeSpan.FromDays(1))", span="202-202"];
m6_239 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.DecrementCounter(''entry'', TimeSpan.FromDays(1))", span="231-231"];
m6_44 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="46-59"];
m6_42 [cluster="lambda expression", file="BackgroundJobServer.cs", label="var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="57-57"];
m6_59 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.SetJobState(''my-job'', state.Object)", span="54-54"];
m6_55 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="51-51"];
m6_66 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.SetEntryInHash(''hangfire:job:my-job:state'', ''OldName'', ''OldValue'')", span="68-68"];
m6_91 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.SetJobState(''my-job'', state.Object)", span="80-80"];
m6_84 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="76-76"];
m6_90 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="80-80"];
m6_43 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''my-state'', hash[''State''])", span="58-58"];
m6_181 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="177-177"];
m6_193 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="190-190"];
m6_208 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="205-205"];
m6_221 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="219-219"];
m6_235 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="234-234"];
m6_260 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3)", span="258-258"];
m6_286 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="284-284"];
m6_301 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:list''))", span="299-299"];
m6_302 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="300-300"];
m6_317 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(2, redis.GetListCount(''hangfire:list''))", span="316-316"];
m6_318 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0))", span="317-317"];
m6_319 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1))", span="318-318"];
m6_209 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="206-206"];
m6_236 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="235-235"];
m6_247 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="246-246"];
m6_259 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="257-257"];
m6_169 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="159-165"];
m6_171 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="161-161"];
m6_178 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="171-178"];
m6_190 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="184-192"];
m6_204 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="198-207"];
m6_218 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="213-221"];
m6_231 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="227-236"];
m6_245 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="242-247"];
m6_257 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="253-259"];
m6_270 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="265-272"];
m6_283 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="278-285"];
m6_296 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="291-301"];
m6_311 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="307-319"];
m6_58 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="54-54"];
m6_179 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'')", span="173-173"];
m6_184 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="175-175"];
m6_197 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="188-188"];
m6_211 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="202-202"];
m6_224 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="217-217"];
m6_238 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="231-231"];
m6_250 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="244-244"];
m6_263 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="255-255"];
m6_271 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'')", span="267-267"];
m6_273 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="271-271"];
m6_276 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="269-269"];
m6_284 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''value'')", span="280-280"];
m6_289 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="282-282"];
m6_299 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''value'')", span="295-295"];
m6_304 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="297-297"];
m6_315 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''4'')", span="312-312"];
m6_321 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="314-314"];
m6_195 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="184-192"];
m6_223 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="213-221"];
m6_213 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="202-202"];
m6_240 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="231-231"];
m6_60 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="54-54"];
m6_57 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="51-51"];
m6_56 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.Name", span="51-51"];
m6_92 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="80-80"];
m6_86 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="76-76"];
m6_85 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.Name", span="76-76"];
m6_182 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="171-178"];
m6_261 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="253-259"];
m6_287 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="278-285"];
m6_303 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="291-301"];
m6_320 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="307-319"];
m6_210 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="198-207"];
m6_237 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="227-236"];
m6_248 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="242-247"];
m6_173 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="161-161"];
m6_172 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.AddToQueue(''critical'', ''my-job'')", span="161-161"];
m6_274 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="265-272"];
m6_297 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''value'')", span="293-293"];
m6_298 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''another-value'')", span="294-294"];
m6_312 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''1'')", span="309-309"];
m6_313 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''2'')", span="310-310"];
m6_314 [cluster="lambda expression", file="BackgroundJobServer.cs", label="redis.AddItemToList(''hangfire:list'', ''3'')", span="311-311"];
m6_186 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="175-175"];
m6_185 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.AddToQueue(''critical'', ''my-job'')", span="175-175"];
m6_199 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="188-188"];
m6_198 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.IncrementCounter(''entry'')", span="188-188"];
m6_226 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="217-217"];
m6_225 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.DecrementCounter(''entry'')", span="217-217"];
m6_252 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="244-244"];
m6_251 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.AddToSet(''my-set'', ''my-value'')", span="244-244"];
m6_265 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="255-255"];
m6_264 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.AddToSet(''my-set'', ''my-value'', 3.2)", span="255-255"];
m6_278 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="269-269"];
m6_277 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.RemoveFromSet(''my-set'', ''my-value'')", span="269-269"];
m6_291 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="282-282"];
m6_290 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.InsertToList(''list'', ''new-value'')", span="282-282"];
m6_306 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="297-297"];
m6_305 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.RemoveFromList(''list'', ''value'')", span="297-297"];
m6_323 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="314-314"];
m6_322 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.TrimList(''list'', 1, 2)", span="314-314"];
m6_5 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new RedisWriteOnlyTransaction(null)", span="16-16"];
m6_6 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="16-16"];
m6_170 [cluster="Unk.SetContainsItem", file="BackgroundJobServer.cs", label="Entry Unk.SetContainsItem", span=""];
m6_266 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m6_337 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m6_200 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m6_33 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m6_174 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m6_196 [cluster="Unk.GetValue", file="BackgroundJobServer.cs", label="Entry Unk.GetValue", span=""];
m6_28 [cluster="Unk.True", file="BackgroundJobServer.cs", label="Entry Unk.True", span=""];
m6_254 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251"];
m6_255 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n                Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3);\r\n            })", span="253-259"];
m6_256 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251"];
m6_189 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182"];
m6_188 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry''));\r\n\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero);\r\n            })", span="184-192"];
m6_187 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182"];
m6_48 [cluster="Unk.Returns", file="BackgroundJobServer.cs", label="Entry Unk.Returns", span=""];
m6_307 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m6_308 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="BackgroundJobServer.cs", label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305"];
m6_309 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="BackgroundJobServer.cs", label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''1'');\r\n                redis.AddItemToList(''hangfire:list'', ''2'');\r\n                redis.AddItemToList(''hangfire:list'', ''3'');\r\n                redis.AddItemToList(''hangfire:list'', ''4'');\r\n\r\n                Commit(redis, x => x.TrimList(''list'', 1, 2));\r\n\r\n                Assert.Equal(2, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0));\r\n                Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1));\r\n            })", span="307-319"];
m6_310 [cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="BackgroundJobServer.cs", label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305"];
m6_79 [cluster="Unk.ContainsKey", file="BackgroundJobServer.cs", label="Entry Unk.ContainsKey", span=""];
m6_338 [file="BackgroundJobServer.cs", label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", span=""];
m6_341 [file="BackgroundJobServer.cs", label=state, span=""];
m6_342 [file="BackgroundJobServer.cs", label=state, span=""];
m6_339 [file="BackgroundJobServer.cs", label=state, span=""];
m6_340 [file="BackgroundJobServer.cs", label=state, span=""];
m7_8 [cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="52-52"];
m7_2 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="15-15"];
m7_3 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="15-15"];
m7_18 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="45-45"];
m7_20 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", span="45-45"];
m7_0 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="10-10"];
m7_1 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="10-10"];
m7_9 [cluster="Unk.RegisterObject", file="BackgroundJobServerOptions.cs", label="Entry Unk.RegisterObject", span=""];
m7_16 [cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70"];
m7_17 [cluster="Unk.UnregisterObject", file="BackgroundJobServerOptions.cs", label="Entry Unk.UnregisterObject", span=""];
m7_4 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Start()", span="24-24"];
m7_5 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs", label="base.Start()", span="26-26"];
m7_6 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs", label="HostingEnvironment.RegisterObject(this)", span="27-27"];
m7_7 [cluster="HangFire.Web.AspNetBackgroundJobServer.Start()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Start()", span="24-24"];
m7_10 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="34-34"];
m7_15 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="34-34"];
m7_21 [file="BackgroundJobServerOptions.cs", label="HangFire.Web.AspNetBackgroundJobServer", span=""];
m8_33 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="101-101"];
m8_39 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="101-101"];
m8_0 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", span="30-30"];
m8_1 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", span="30-30"];
m8_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJobStateChanger.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_30 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m8_42 [cluster="Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", span="30-30"];
m8_4 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", span="40-40"];
m8_8 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", span="40-40"];
m8_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="BackgroundJobStateChanger.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m8_41 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="33-33"];
m8_57 [cluster="string.IsNullOrEmpty(string)", file="BackgroundJobStateChanger.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_2 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m8_3 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m8_10 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="46-46"];
m8_25 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="46-46"];
m8_43 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m8_56 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m8_27 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", span="122-122"];
m8_55 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="BackgroundJobStateChanger.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", span="122-122"];
m8_40 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m8_29 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m8_31 [cluster="string.Format(string, object)", file="BackgroundJobStateChanger.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_26 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26"];
m8_32 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="BackgroundJobStateChanger.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m8_58 [cluster="System.Threading.Thread.Sleep(int)", file="BackgroundJobStateChanger.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m8_59 [file="BackgroundJobStateChanger.cs", label="Hangfire.States.BackgroundJobStateChanger", span=""];
m9_38 [cluster="System.Threading.Thread.Join()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m9_89 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m9_72 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m9_90 [cluster="string.Format(string, params object[])", file="BackgroundProcessContextMock.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m9_16 [cluster="System.Threading.Thread.Start()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m9_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="BackgroundProcessContextMock.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86"];
m9_39 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m9_15 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m9_69 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Server.PerformContext)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Server.PerformContext)", span="31-31"];
m9_9 [cluster="string.Format(string, object)", file="BackgroundProcessContextMock.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_27 [cluster="System.Threading.ManualResetEventSlim.Set()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m9_17 [cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.Stop()", span="57-57"];
m9_18 [cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs", label="_stopSent = true", span="59-59"];
m9_19 [cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs", label="_cts.Cancel()", span="60-60"];
m9_20 [cluster="HangFire.Server.Worker.Stop()", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.Stop()", span="57-57"];
m9_21 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m9_8 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m9_86 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="70-70"];
m9_10 [cluster="Unk.GetLogger", file="BackgroundProcessContextMock.cs", label="Entry Unk.GetLogger", span=""];
m9_87 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m9_73 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.DoWork()", span="180-180"];
m9_74 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label=true, span="184-184"];
m9_75 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="_manager.NotifyReady(this)", span="186-186"];
m9_81 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label=OperationCanceledException, span="203-203"];
m9_82 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label=Exception, span="206-206"];
m9_76 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="_jobIsReady.Wait(_cts.Token)", span="187-187"];
m9_77 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label=_jobLock, span="189-189"];
m9_78 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="PerformJob(_jobPayload)", span="191-191"];
m9_79 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="JobFetcher.RemoveFromFetchedQueue(\r\n                            _redis, _jobPayload.Id, _jobPayload.Queue)", span="193-194"];
m9_80 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="_jobIsReady.Reset()", span="199-199"];
m9_83 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="Crashed = true", span="208-208"];
m9_84 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="209-212"];
m9_85 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.DoWork()", span="180-180"];
m9_67 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m9_88 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m9_11 [cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.Start()", span="47-47"];
m9_12 [cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs", label="_thread = new Thread(DoWork)\r\n            {\r\n                Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                IsBackground = true\r\n            }", span="49-53"];
m9_13 [cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs", label="_thread.Start()", span="54-54"];
m9_14 [cluster="HangFire.Server.Worker.Start()", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.Start()", span="47-47"];
m9_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", span="33-33"];
m9_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="_redis = redisManager.GetClient()", span="38-38"];
m9_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="_manager = manager", span="41-41"];
m9_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="_context = context", span="42-42"];
m9_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', context.WorkerNumber))", span="44-44"];
m9_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="_stateMachine = new StateMachine(_redis)", span="39-39"];
m9_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", span="33-33"];
m9_7 [cluster="Unk.GetClient", file="BackgroundProcessContextMock.cs", label="Entry Unk.GetClient", span=""];
m9_64 [cluster="Unk.Warn", file="BackgroundProcessContextMock.cs", label="Entry Unk.Warn", span=""];
m9_65 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10"];
m9_63 [cluster="string.IsNullOrEmpty(string)", file="BackgroundProcessContextMock.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_41 [cluster="Unk.Dispose", file="BackgroundProcessContextMock.cs", label="Entry Unk.Dispose", span=""];
m9_91 [cluster="Unk.Fatal", file="BackgroundProcessContextMock.cs", label="Entry Unk.Fatal", span=""];
m9_71 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m9_68 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="16-16"];
m9_42 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="110-110"];
m9_43 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="String.IsNullOrEmpty(payload.Type)", span="112-112"];
m9_44 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="114-116"];
m9_47 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="!_stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name)", span="122-122"];
m9_51 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="137-138"];
m9_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="149-151"];
m9_61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="_stateMachine.ChangeState(payload.Id, state, ProcessingState.Name)", span="171-171"];
m9_46 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="var processingState = new ProcessingState(''Worker has started processing.'', _context.ServerName)", span="121-121"];
m9_45 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="return;", span="118-118"];
m9_48 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="return;", span="124-124"];
m9_49 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Exception exception = null", span="132-132"];
m9_50 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="ServerJobDescriptor jobDescriptor = null", span="134-134"];
m9_52 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="140-141"];
m9_53 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="_context.Performer.PerformJob(performContext)", span="143-143"];
m9_54 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label=Exception, span="145-145"];
m9_57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="JobState state", span="161-161"];
m9_55 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="exception = ex", span="147-147"];
m9_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="exception == null", span="162-162"];
m9_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="state = new FailedState(''The job has been failed.'', exception)", span="168-168"];
m9_59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="state = new SucceededState(''The job has been completed successfully.'')", span="164-164"];
m9_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="110-110"];
m9_28 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.Dispose()", span="91-91"];
m9_29 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="!_stopSent", span="93-93"];
m9_30 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="Stop()", span="95-95"];
m9_31 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="_thread != null", span="98-98"];
m9_32 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="_thread.Join()", span="100-100"];
m9_34 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="_cts.Dispose()", span="104-104"];
m9_33 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="_thread = null", span="101-101"];
m9_35 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="_jobIsReady.Dispose()", span="105-105"];
m9_36 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="_redis.Dispose()", span="107-107"];
m9_37 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.Dispose()", span="91-91"];
m9_70 [cluster="Unk.Error", file="BackgroundProcessContextMock.cs", label="Entry Unk.Error", span=""];
m9_40 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="BackgroundProcessContextMock.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m9_22 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="81-81"];
m9_23 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label=_jobLock, span="83-83"];
m9_24 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="_jobPayload = payload", span="85-85"];
m9_25 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="_jobIsReady.Set()", span="88-88"];
m9_26 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundProcessContextMock.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="81-81"];
m9_92 [file="BackgroundProcessContextMock.cs", label="HangFire.Server.Worker", span=""];
m10_4 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundProcessingServerFacts.cs", label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35"];
m10_17 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundProcessingServerFacts.cs", label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35"];
m10_22 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundProcessingServerFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m10_25 [cluster="Unk.ErrorFormat", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.ErrorFormat", span=""];
m10_19 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundProcessingServerFacts.cs", label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83"];
m10_28 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundProcessingServerFacts.cs", label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83"];
m10_23 [cluster="string.Format(string, object, object)", file="BackgroundProcessingServerFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_18 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="BackgroundProcessingServerFacts.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m10_29 [cluster="System.Random.Random()", file="BackgroundProcessingServerFacts.cs", label="Entry System.Random.Random()", span="0-0"];
m10_31 [cluster="System.Random.Next(int)", file="BackgroundProcessingServerFacts.cs", label="Entry System.Random.Next(int)", span="0-0"];
m10_20 [cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundProcessingServerFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m10_30 [cluster="System.Math.Pow(double, double)", file="BackgroundProcessingServerFacts.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m10_32 [cluster="System.Math.Round(double)", file="BackgroundProcessingServerFacts.cs", label="Entry System.Math.Round(double)", span="0-0"];
m10_0 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundProcessingServerFacts.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14"];
m10_3 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundProcessingServerFacts.cs", label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14"];
m10_21 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="BackgroundProcessingServerFacts.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
m10_24 [cluster="Unk.WarnFormat", file="BackgroundProcessingServerFacts.cs", label="Entry Unk.WarnFormat", span=""];
m10_33 [file="BackgroundProcessingServerFacts.cs", label="Hangfire.AutomaticRetryAttribute", span=""];
m11_27 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24"];
m11_22 [cluster="Unk.>", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.>", span=""];
m11_0 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="21-21"];
m11_2 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", color=green, community=0, file="BootstrapperConfigurationExtensions.cs", label="_stateContext = new StateContextMock\r\n            {\r\n                JobIdValue = JobId, \r\n                JobValue = _job,\r\n            }", prediction=67, span="25-29"];
m11_1 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs", label="_job = Job.FromExpression(() => Console.WriteLine())", span="23-23"];
m11_3 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs", label="_newState = new Mock<IState>()", span="31-31"];
m11_4 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs", label="_newState.Setup(x => x.Name).Returns(NewState)", span="32-32"];
m11_5 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", span="21-21"];
m11_8 [cluster="Mock<IState>.cstr", file="BootstrapperConfigurationExtensions.cs", label="Entry Mock<IState>.cstr", span=""];
m11_43 [cluster="Unk.Same", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Same", span=""];
m11_9 [cluster="Unk.Setup", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Setup", span=""];
m11_7 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10"];
m11_28 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", span="45-45"];
m11_29 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_stateContext.Object, _newState.Object, OldState, null))", span="47-48"];
m11_30 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs", label="Assert.Equal(''traversedStates'', exception.ParamName)", span="50-50"];
m11_31 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", span="45-45"];
m11_35 [cluster="ApplyStateContext.cstr", file="BootstrapperConfigurationExtensions.cs", label="Entry ApplyStateContext.cstr", span=""];
m11_23 [cluster="Unk.Equal", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Equal", span=""];
m11_10 [cluster="Unk.Returns", file="BootstrapperConfigurationExtensions.cs", label="Entry Unk.Returns", span=""];
m11_14 [cluster="System.Console.WriteLine()", file="BootstrapperConfigurationExtensions.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m11_32 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="48-48"];
m11_25 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new ApplyStateContext(_stateContext.Object, null, OldState, _traversedStates)", span="39-39"];
m11_33 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="new ApplyStateContext(_stateContext.Object, _newState.Object, OldState, null)", span="48-48"];
m11_11 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="23-23"];
m11_15 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="32-32"];
m11_24 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Entry lambda expression", span="39-39"];
m11_26 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="39-39"];
m11_34 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="48-48"];
m11_13 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="23-23"];
m11_12 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Console.WriteLine()", span="23-23"];
m11_16 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="x.Name", span="32-32"];
m11_17 [cluster="lambda expression", file="BootstrapperConfigurationExtensions.cs", label="Exit lambda expression", span="32-32"];
m11_36 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="54-54"];
m11_37 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", color=green, community=0, file="BootstrapperConfigurationExtensions.cs", label="var context = new ApplyStateContext(\r\n                _stateContext.Object,\r\n                _newState.Object,\r\n                OldState,\r\n                _traversedStates)", prediction=68, span="56-60"];
m11_38 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs", label="Assert.Equal(OldState, context.OldStateName)", span="62-62"];
m11_39 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs", label="Assert.Same(_newState.Object, context.NewState)", span="63-63"];
m11_40 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs", label="Assert.Same(_job, context.Job)", span="64-64"];
m11_41 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs", label="Assert.Same(_traversedStates, context.TraversedStates)", span="65-65"];
m11_42 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="54-54"];
m11_6 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m11_18 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs", label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="36-36"];
m11_19 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_stateContext.Object, null, OldState, _traversedStates))", span="38-39"];
m11_20 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs", label="Assert.Equal(''newState'', exception.ParamName)", span="41-41"];
m11_21 [cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="BootstrapperConfigurationExtensions.cs", label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="36-36"];
m11_44 [file="BootstrapperConfigurationExtensions.cs", label="Hangfire.Core.Tests.States.ApplyStateContextFacts", span=""];
m12_50 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m12_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ContinuationsSupportAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_77 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m12_0 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="38-38"];
m12_1 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="38-38"];
m12_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ContinuationsSupportAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_108 [cluster="System.Collections.Generic.List<T>.List()", file="ContinuationsSupportAttribute.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_78 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m12_95 [cluster="string.Format(string, object, object)", file="ContinuationsSupportAttribute.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_72 [cluster="string.IsNullOrWhiteSpace(string)", file="ContinuationsSupportAttribute.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m12_49 [cluster="string.Format(string, object)", file="ContinuationsSupportAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_45 [cluster="Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", span="247-247"];
m12_75 [cluster="JsonSerializerSettings.cstr", file="ContinuationsSupportAttribute.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m12_43 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26"];
m12_99 [cluster="System.Threading.Thread.Sleep(int)", file="ContinuationsSupportAttribute.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m12_51 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="231-231"];
m12_100 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="ContinuationsSupportAttribute.cs", label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="234-234"];
m12_101 [cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="231-231"];
m12_103 [cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m12_73 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="190-190"];
m12_80 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="StateData currentState = null", span="192-192"];
m12_84 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="199-199"];
m12_87 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="currentState = context.Connection.GetStateData(continuationJobId)", span="210-210"];
m12_89 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="DateTime.UtcNow >= started.Add(timeout)", span="216-216"];
m12_81 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="var started = DateTime.UtcNow", span="194-194"];
m12_93 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="return currentState;", span="228-228"];
m12_82 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="var firstAttempt = true", span="195-195"];
m12_83 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label=true, span="197-197"];
m12_91 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="Thread.Sleep(firstAttempt ? 0 : 1)", span="224-224"];
m12_85 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="continuationData == null", span="200-200"];
m12_88 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="currentState != null", span="211-211"];
m12_92 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="firstAttempt = false", span="225-225"];
m12_94 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", span="190-190"];
m12_76 [cluster="Unk.>", file="ContinuationsSupportAttribute.cs", label="Entry Unk.>", span=""];
m12_52 [cluster="System.Enum.HasFlag(System.Enum)", file="ContinuationsSupportAttribute.cs", label="Entry System.Enum.HasFlag(System.Enum)", span="0-0"];
m12_44 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="237-237"];
m12_104 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="ContinuationsSupportAttribute.cs", label="return JobHelper.FromJson<List<Continuation>>(connection.GetJobParameter(\r\n                jobId, ''Continuations'')) ?? new List<Continuation>();", span="239-240"];
m12_105 [cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="237-237"];
m12_14 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="63-63"];
m12_15 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="var awaitingState = context.CandidateState as AwaitingState", span="65-65"];
m12_17 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="AddContinuation(context, awaitingState)", span="69-69"];
m12_18 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="_knownFinalStates.Contains(context.CandidateState.Name)", span="71-71"];
m12_19 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="ExecuteContinuationsIfExist(context)", span="74-74"];
m12_16 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="awaitingState != null", span="66-66"];
m12_20 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="63-63"];
m12_47 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m12_48 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ContinuationsSupportAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m12_53 [cluster="Hangfire.States.DeletedState.DeletedState()", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65"];
m12_97 [cluster="System.DateTime.Add(System.TimeSpan)", file="ContinuationsSupportAttribute.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m12_21 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="87-87"];
m12_29 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="var connection = context.Connection", span="89-89"];
m12_30 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="var parentId = awaitingState.ParentId", span="90-90"];
m12_40 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="120-121"];
m12_31 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="96-96"];
m12_32 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="var continuations = GetContinuations(connection, parentId)", span="98-98"];
m12_34 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="var jobData = connection.GetJobData(parentId)", span="101-101"];
m12_37 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="var currentState = connection.GetStateData(parentId)", span="111-111"];
m12_38 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="SetContinuations(connection, parentId, continuations)", span="116-116"];
m12_36 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''Can not add a continuation: parent background job '{0}' does not exist.'', parentId));", span="107-108"];
m12_35 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="jobData == null", span="102-102"];
m12_39 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="118-118"];
m12_42 [cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="87-87"];
m12_71 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ContinuationsSupportAttribute.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_107 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m12_4 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="48-48"];
m12_9 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs", label="_knownFinalStates = knownFinalStates", span="55-55"];
m12_11 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs", label="Order = 1000", span="60-60"];
m12_12 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="48-48"];
m12_98 [cluster="System.TimeoutException.TimeoutException(string)", file="ContinuationsSupportAttribute.cs", label="Entry System.TimeoutException.TimeoutException(string)", span="0-0"];
m12_24 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="78-78"];
m12_25 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="var awaitingState = context.NewState as AwaitingState", span="80-80"];
m12_27 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="context.JobExpirationTimeout = awaitingState.Expiration", span="83-83"];
m12_26 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="awaitingState != null", span="81-81"];
m12_28 [cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="78-78"];
m12_96 [cluster="Hangfire.Logging.ILog.Warn(string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Logging.ILog.Warn(string)", span="262-262"];
m12_23 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="130-130"];
m12_58 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="143-143"];
m12_61 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="153-154"];
m12_55 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="var nextStates = new Dictionary<string, IState>()", span="135-135"];
m12_56 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label=continuations, span="139-139"];
m12_67 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="nextStates.Add(continuation.JobId, nextState)", span="176-176"];
m12_68 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label=nextStates, span="179-179"];
m12_57 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="String.IsNullOrWhiteSpace(continuation.JobId)", span="141-141"];
m12_59 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="currentState == null", span="144-144"];
m12_60 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="currentState.Name != AwaitingState.StateName", span="151-151"];
m12_64 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                        currentState.Data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="164-166"];
m12_63 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="IState nextState", span="160-160"];
m12_65 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label=Exception, span="168-168"];
m12_70 [cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="130-130"];
m12_102 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m12_2 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="43-43"];
m12_3 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="43-43"];
m12_46 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ContinuationsSupportAttribute.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_106 [cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m12_109 [cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="243-243"];
m12_110 [cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ContinuationsSupportAttribute.cs", label="Exit Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="243-243"];
m12_79 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="ContinuationsSupportAttribute.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m12_22 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="ContinuationsSupportAttribute.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m12_111 [file="ContinuationsSupportAttribute.cs", label="Hangfire.ContinuationsSupportAttribute", span=""];
m14_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m14_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m14_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m14_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m14_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19"];
m14_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="CoreBackgroundJobPerformer.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19"];
m14_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="CoreBackgroundJobPerformer.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m15_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CountersAggregator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m15_0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m15_1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="storage == null", span="36-36"];
m15_3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="_storage = storage", span="38-38"];
m15_4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="_interval = interval", span="39-39"];
m15_2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m15_5 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m15_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CountersAggregator.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_24 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72"];
m15_31 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="CountersAggregator.cs", label="return string.Format(@''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [{0}].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{0}].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'', storage.GetSchemaName());", prediction=69, span="74-100"];
m15_32 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="CountersAggregator.cs", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72"];
m15_25 [cluster="Unk.Execute", file="CountersAggregator.cs", label="Entry Unk.Execute", span=""];
m15_30 [cluster="System.Type.ToString()", file="CountersAggregator.cs", label="Entry System.Type.ToString()", span="0-0"];
m15_7 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m15_8 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44"];
m15_12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59"];
m15_15 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64"];
m15_9 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=green, community=0, file="CountersAggregator.cs", label="int removedCount = 0", prediction=70, span="46-46"];
m15_10 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=green, community=0, file="CountersAggregator.cs", label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", prediction=71, span="50-55"];
m15_11 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="57-57"];
m15_14 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="62-62"];
m15_13 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m15_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m15_34 [cluster="string.Format(string, object)", file="CountersAggregator.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_17 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="CountersAggregator.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m15_26 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m15_27 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", color=green, community=0, file="CountersAggregator.cs", label="return GetType().ToString();", prediction=72, span="69-69"];
m15_28 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs", label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m15_33 [cluster="Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", span="238-238"];
m15_18 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m15_29 [cluster="object.GetType()", file="CountersAggregator.cs", label="Entry object.GetType()", span="0-0"];
m15_21 [cluster="lambda expression", file="CountersAggregator.cs", label="Entry lambda expression", span="50-55"];
m15_22 [cluster="lambda expression", color=green, community=0, file="CountersAggregator.cs", label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", prediction=73, span="52-54"];
m15_23 [cluster="lambda expression", file="CountersAggregator.cs", label="Exit lambda expression", span="50-55"];
m15_20 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CountersAggregator.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_35 [file="CountersAggregator.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m18_0 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DelayedJobSchedulerFacts.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m18_1 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DelayedJobSchedulerFacts.cs", label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m19_0 [cluster="Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", file="FactWithTimeout.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", span="8-8"];
m19_2 [cluster="Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", file="FactWithTimeout.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.FactWithTimeout.FactWithTimeout()", span="8-8"];
m21_0 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27"];
m21_1 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="transaction == null", span="29-29"];
m21_3 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="jobId == null", span="30-30"];
m21_5 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="_transaction = transaction", span="32-32"];
m21_6 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="JobId = jobId", span="34-34"];
m21_2 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''transaction'');", span="29-29"];
m21_4 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''jobId'');", span="30-30"];
m21_7 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27"];
m21_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HtmlHelper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_17 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49"];
m21_18 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="HtmlHelper.cs", label="_transaction.Dispose()", span="51-51"];
m21_19 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49"];
m21_9 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", span="39-39"];
m21_10 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="HtmlHelper.cs", label="_transaction.Commit()", span="41-41"];
m21_11 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", span="39-39"];
m21_12 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25"];
m21_13 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44"];
m21_14 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="HtmlHelper.cs", label="_transaction.Abort()", span="46-46"];
m21_15 [cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="HtmlHelper.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44"];
m21_16 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="HtmlHelper.cs", label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26"];
m21_20 [cluster="System.IDisposable.Dispose()", file="HtmlHelper.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m21_21 [file="HtmlHelper.cs", label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", span=""];
m22_0 [cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="IBackgroundJobPerformer.cs", label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20"];
m22_1 [cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="IBackgroundJobPerformer.cs", label="Exit Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20"];
m23_0 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="IBackgroundJobStateChanger.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m23_1 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="IBackgroundJobStateChanger.cs", label="Exit Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m25_0 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="IMsmqTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23"];
m25_1 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="IMsmqTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23"];
m25_2 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="IMsmqTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25"];
m25_3 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="IMsmqTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25"];
m25_4 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="IMsmqTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26"];
m25_5 [cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="IMsmqTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26"];
m26_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m26_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m27_31 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="203-203"];
m27_172 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="203-203"];
m27_16 [cluster="Mock<IStateMachineFactory>.cstr", file="InfiniteLoopProcess.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m27_18 [cluster="Mock<IState>.cstr", file="InfiniteLoopProcess.cs", label="Entry Mock<IState>.cstr", span=""];
m27_37 [cluster="Unk.Equal", file="InfiniteLoopProcess.cs", label="Entry Unk.Equal", span=""];
m27_17 [cluster="Mock<IJobCreationProcess>.cstr", file="InfiniteLoopProcess.cs", label="Entry Mock<IJobCreationProcess>.cstr", span=""];
m27_60 [cluster="Unk.DoesNotThrow", file="InfiniteLoopProcess.cs", label="Entry Unk.DoesNotThrow", span=""];
m27_94 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m27_104 [cluster="Unk.Run", file="InfiniteLoopProcess.cs", label="Entry Unk.Run", span=""];
m27_32 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m27_35 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m27_36 [cluster="Unk.>", file="InfiniteLoopProcess.cs", label="Entry Unk.>", span=""];
m27_77 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="85-85"];
m27_78 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="87-87"];
m27_79 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="89-90"];
m27_80 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''job'', exception.ParamName)", span="92-92"];
m27_81 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="85-85"];
m27_56 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="65-65"];
m27_57 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="67-67"];
m27_58 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="68-68"];
m27_59 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="65-65"];
m27_95 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="107-107"];
m27_96 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="109-109"];
m27_97 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs", label="client.Create(_job, _state.Object)", span="111-111"];
m27_98 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs", label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IStateMachine>()))", span="113-113"];
m27_99 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="107-107"];
m27_23 [cluster="Unk.GetConnection", file="InfiniteLoopProcess.cs", label="Entry Unk.GetConnection", span=""];
m27_136 [cluster="Unk.ChangeState", file="InfiniteLoopProcess.cs", label="Entry Unk.ChangeState", span=""];
m27_121 [cluster="Unk.NotNull", file="InfiniteLoopProcess.cs", label="Entry Unk.NotNull", span=""];
m27_114 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="128-128"];
m27_115 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="130-130"];
m27_116 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>()))\r\n                .Throws<InvalidOperationException>()", span="131-132"];
m27_117 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="134-135"];
m27_118 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="Assert.NotNull(exception.InnerException)", span="137-137"];
m27_119 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="138-138"];
m27_120 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="128-128"];
m27_145 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
m27_146 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="164-164"];
m27_147 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="166-166"];
m27_148 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="168-168"];
m27_149 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null,\r\n                It.IsAny<CancellationToken>()))", span="170-174"];
m27_150 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="164-164"];
m27_13 [cluster="Unk.Setup", file="InfiniteLoopProcess.cs", label="Entry Unk.Setup", span=""];
m27_64 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m27_42 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47"];
m27_43 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="49-50"];
m27_44 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52"];
m27_45 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="47-47"];
m27_169 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="194-194"];
m27_20 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="25-25"];
m27_24 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="30-30"];
m27_28 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="34-34"];
m27_22 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="25-25"];
m27_26 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="30-30"];
m27_30 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="34-34"];
m27_38 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="41-41"];
m27_40 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="41-41"];
m27_46 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="50-50"];
m27_47 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="50-50"];
m27_48 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="50-50"];
m27_53 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="59-59"];
m27_54 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="59-59"];
m27_55 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="59-59"];
m27_61 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="68-68"];
m27_62 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="new BackgroundJobClient()", span="68-68"];
m27_63 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="68-68"];
m27_68 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="74-74"];
m27_69 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="new BackgroundJobClient(_storage.Object)", span="74-74"];
m27_70 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="74-74"];
m27_74 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="81-81"];
m27_75 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="81-81"];
m27_76 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="81-81"];
m27_84 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="client.Create(null, _state.Object)", span="90-90"];
m27_83 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="90-90"];
m27_85 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="90-90"];
m27_92 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="client.Create(_job, null)", span="101-101"];
m27_91 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="101-101"];
m27_93 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="101-101"];
m27_101 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="113-113"];
m27_102 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IStateMachine>())", span="113-113"];
m27_103 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="113-113"];
m27_111 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="119-119"];
m27_112 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="119-119"];
m27_113 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="119-119"];
m27_126 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="client.Create(_job, _state.Object)", span="135-135"];
m27_122 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="131-131"];
m27_125 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="135-135"];
m27_123 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="131-131"];
m27_124 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="131-131"];
m27_127 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="135-135"];
m27_134 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="client.ChangeState(null, _state.Object, null)", span="147-147"];
m27_133 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="147-147"];
m27_135 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="147-147"];
m27_143 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="client.ChangeState(''jobId'', null, null)", span="158-158"];
m27_142 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="158-158"];
m27_144 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="158-158"];
m27_151 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="170-174"];
m27_152 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null,\r\n                It.IsAny<CancellationToken>())", span="170-174"];
m27_153 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="170-174"];
m27_159 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Entry lambda expression", span="184-188"];
m27_160 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' },\r\n                It.IsAny<CancellationToken>())", span="184-188"];
m27_161 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="184-188"];
m27_170 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="x.ChangeState(''job-id'', _state.Object, null, It.IsAny<CancellationToken>())", span="194-194"];
m27_171 [cluster="lambda expression", file="InfiniteLoopProcess.cs", label="Exit lambda expression", span="194-194"];
m27_86 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="96-96"];
m27_87 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="98-98"];
m27_88 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="100-101"];
m27_89 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''state'', exception.ParamName)", span="103-103"];
m27_90 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="96-96"];
m27_105 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="117-117"];
m27_106 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())).Returns(''some-job'')", span="119-119"];
m27_107 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="120-120"];
m27_108 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs", label="var id = client.Create(_job, _state.Object)", span="122-122"];
m27_109 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''some-job'', id)", span="124-124"];
m27_110 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="117-117"];
m27_82 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="207-207"];
m27_173 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="InfiniteLoopProcess.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="209-209"];
m27_174 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="207-207"];
m27_100 [cluster="Unk.Verify", file="InfiniteLoopProcess.cs", label="Entry Unk.Verify", span=""];
m27_65 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="72-72"];
m27_66 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="InfiniteLoopProcess.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="74-74"];
m27_67 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="72-72"];
m27_128 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="142-142"];
m27_129 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="144-144"];
m27_130 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="146-147"];
m27_131 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="149-149"];
m27_132 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="142-142"];
m27_0 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="21-21"];
m27_10 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="21-21"];
m27_15 [cluster="Mock<IStateMachine>.cstr", file="InfiniteLoopProcess.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m27_49 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="56-56"];
m27_50 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="58-59"];
m27_51 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''process'', exception.ParamName)", span="61-61"];
m27_52 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="56-56"];
m27_27 [cluster="Unk.Create", file="InfiniteLoopProcess.cs", label="Entry Unk.Create", span=""];
m27_154 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="178-178"];
m27_155 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="180-180"];
m27_156 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="182-182"];
m27_157 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' },\r\n                It.IsAny<CancellationToken>()))", span="184-188"];
m27_158 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="178-178"];
m27_162 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="192-192"];
m27_163 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs", label="_stateMachine.Setup(x => x.ChangeState(''job-id'', _state.Object, null, It.IsAny<CancellationToken>()))\r\n                .Returns(true)", span="194-195"];
m27_164 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="196-196"];
m27_165 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="198-198"];
m27_166 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs", label="Assert.True(result)", span="200-200"];
m27_167 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="192-192"];
m27_168 [cluster="Unk.True", file="InfiniteLoopProcess.cs", label="Entry Unk.True", span=""];
m27_14 [cluster="Unk.Returns", file="InfiniteLoopProcess.cs", label="Entry Unk.Returns", span=""];
m27_41 [cluster="BackgroundJobClient.cstr", file="InfiniteLoopProcess.cs", label="Entry BackgroundJobClient.cstr", span=""];
m27_137 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="153-153"];
m27_138 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="var client = CreateClient()", span="155-155"];
m27_139 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="157-158"];
m27_140 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="Assert.Equal(''state'', exception.ParamName)", span="160-160"];
m27_141 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="153-153"];
m27_71 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="78-78"];
m27_72 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="InfiniteLoopProcess.cs", label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="80-81"];
m27_73 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="78-78"];
m27_11 [cluster="Mock<IStorageConnection>.cstr", file="InfiniteLoopProcess.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m27_12 [cluster="Mock<JobStorage>.cstr", file="InfiniteLoopProcess.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m27_19 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m27_175 [file="InfiniteLoopProcess.cs", label="Hangfire.Core.Tests.BackgroundJobClientFacts", span=""];
m27_176 [file="InfiniteLoopProcess.cs", label=client, span=""];
m27_177 [file="InfiniteLoopProcess.cs", label=client, span=""];
m27_178 [file="InfiniteLoopProcess.cs", label=client, span=""];
m27_179 [file="InfiniteLoopProcess.cs", label=client, span=""];
m27_180 [file="InfiniteLoopProcess.cs", label=client, span=""];
m28_6 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m28_7 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="var type = System.Type.GetType(Type, throwOnError: true, ignoreCase: true)", span="48-48"];
m28_8 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="var parameterTypes = JobHelper.FromJson<Type[]>(ParameterTypes)", span="49-49"];
m28_9 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="var method = GetNonOpenMatchingMethod(type, Method, parameterTypes)", span="50-50"];
m28_11 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''The type `{0}` does not contain a method with signature `{1}({2})`'',\r\n                        type.FullName,\r\n                        Method,\r\n                        String.Join('', '', parameterTypes.Select(x => x.Name))));", span="54-58"];
m28_14 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="return new Job(type, method, arguments);", span="64-64"];
m28_10 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="method == null", span="52-52"];
m28_15 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label=Exception, span="66-66"];
m28_16 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="throw new JobLoadException(''Could not load the job. See inner exception for the details.'', ex);", span="68-68"];
m28_17 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m28_110 [cluster="System.Collections.Generic.List<T>.List()", file="InvocationData.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m28_20 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m28_87 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var methodCandidates = type.GetMethods()", span="174-174"];
m28_89 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="178-178"];
m28_91 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="parameters.Length != parameterTypes.Length", span="184-184"];
m28_98 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var actualType = parameterTypes[i]", span="198-198"];
m28_88 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label=methodCandidates, span="176-176"];
m28_106 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="return null;", span="222-222"];
m28_90 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var parameters = methodCandidate.GetParameters()", span="183-183"];
m28_105 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="return methodCandidate.ContainsGenericParameters \r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray()) \r\n                    : methodCandidate;", span="217-219"];
m28_95 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="i < parameters.Length", span="194-194"];
m28_96 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var parameter = parameters[i]", span="196-196"];
m28_92 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var parameterTypesMatched = true", span="189-189"];
m28_93 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var genericArguments = new List<Type>()", span="190-190"];
m28_104 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="!parameterTypesMatched", span="214-214"];
m28_94 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var i = 0", span="194-194"];
m28_100 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="genericArguments.Add(actualType)", span="203-203"];
m28_103 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="i++", span="194-194"];
m28_97 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="var parameterType = parameter.ParameterType", span="197-197"];
m28_99 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="parameterType.IsGenericParameter", span="201-201"];
m28_101 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="parameterType.IsAssignableFrom(actualType)", span="208-208"];
m28_102 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="parameterTypesMatched = false", span="210-210"];
m28_107 [cluster="Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="172-172"];
m28_112 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="InvocationData.cs", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
m28_53 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="InvocationData.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m28_26 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="InvocationData.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144"];
m28_23 [cluster="Unk.Join", file="InvocationData.cs", label="Entry Unk.Join", span=""];
m28_111 [cluster="System.Type.IsAssignableFrom(System.Type)", file="InvocationData.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m28_25 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m28_69 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m28_71 [cluster="System.Activator.CreateInstance(System.Type)", file="InvocationData.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m28_70 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InvocationData.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m28_18 [cluster="System.Type.GetType(string, bool, bool)", file="InvocationData.cs", label="Entry System.Type.GetType(string, bool, bool)", span="0-0"];
m28_72 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m28_83 [cluster="Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.DeserializeArgument(string, System.Type)", span="139-139"];
m28_31 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m28_33 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72"];
m28_35 [cluster="Unk.ToArray", file="InvocationData.cs", label="Entry Unk.ToArray", span=""];
m28_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InvocationData.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m28_85 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="InvocationData.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m28_24 [cluster="string.Format(string, object, object, object)", file="InvocationData.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m28_55 [cluster="System.Collections.Generic.List<T>.ToArray()", file="InvocationData.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m28_19 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="InvocationData.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m28_38 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="InvocationData.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m28_36 [cluster="Unk.ToJson", file="InvocationData.cs", label="Entry Unk.ToJson", span=""];
m28_39 [cluster="lambda expression", file="InvocationData.cs", label="Entry lambda expression", span="77-77"];
m28_28 [cluster="lambda expression", file="InvocationData.cs", label="Entry lambda expression", span="58-58"];
m28_29 [cluster="lambda expression", file="InvocationData.cs", label="x.Name", span="58-58"];
m28_30 [cluster="lambda expression", file="InvocationData.cs", label="Exit lambda expression", span="58-58"];
m28_40 [cluster="lambda expression", file="InvocationData.cs", label="x.ParameterType", span="77-77"];
m28_41 [cluster="lambda expression", file="InvocationData.cs", label="Exit lambda expression", span="77-77"];
m28_109 [cluster="string.Equals(string, System.StringComparison)", file="InvocationData.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m28_22 [cluster="Unk.Select", file="InvocationData.cs", label="Entry Unk.Select", span=""];
m28_108 [cluster="System.Type.GetMethods()", file="InvocationData.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m28_52 [cluster="System.Collections.Generic.List<T>.List(int)", file="InvocationData.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m28_84 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="InvocationData.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m28_27 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="InvocationData.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m28_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InvocationData.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m28_0 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m28_1 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs", label="Type = type", span="33-33"];
m28_2 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs", label="Method = method", span="34-34"];
m28_3 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs", label="ParameterTypes = parameterTypes", span="35-35"];
m28_4 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs", label="Arguments = arguments", span="36-36"];
m28_5 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="30-30"];
m28_86 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="InvocationData.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m28_34 [cluster="System.Reflection.MethodBase.GetParameters()", file="InvocationData.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m28_37 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="InvocationData.cs", label="Entry Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m28_51 [cluster="Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", file="InvocationData.cs", label="Exit Hangfire.Storage.InvocationData.SerializeArguments(System.Collections.Generic.IReadOnlyCollection<object>)", span="81-81"];
m28_113 [file="InvocationData.cs", label="Hangfire.Storage.InvocationData", span=""];
m29_0 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="InvocationDataFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31"];
m29_1 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="InvocationDataFacts.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="31-31"];
m31_0 [cluster="Hangfire.States.IState.SerializeData()", file="IState.cs", label="Entry Hangfire.States.IState.SerializeData()", span="202-202"];
m31_1 [cluster="Hangfire.States.IState.SerializeData()", file="IState.cs", label="Exit Hangfire.States.IState.SerializeData()", span="202-202"];
m32_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Job.Obsolete.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_29 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="83-83"];
m32_62 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs", label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="83-83"];
m32_65 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Job.Obsolete.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m32_14 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", file="Job.Obsolete.cs", label="Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m32_40 [cluster="string.Format(string, object)", file="Job.Obsolete.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_28 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="60-60"];
m32_37 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.Obsolete.cs", label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="60-60"];
m32_0 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m32_11 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.Obsolete.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m32_15 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="33-33"];
m32_27 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.Obsolete.cs", label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="33-33"];
m32_39 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Job.Obsolete.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m32_30 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="139-139"];
m32_76 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.Obsolete.cs", label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="139-139"];
m32_67 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="Job.Obsolete.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m32_77 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Job.Obsolete.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m32_70 [cluster="System.Collections.Generic.List<T>.ToArray()", file="Job.Obsolete.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m32_38 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="Job.Obsolete.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="44-44"];
m32_64 [cluster="System.Collections.Generic.List<T>.List(int)", file="Job.Obsolete.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m32_66 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m32_69 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Job.Obsolete.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m32_41 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="Job.Obsolete.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m32_78 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.Dispose(object)", span="162-162"];
m32_84 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.Obsolete.cs", label="Exit Hangfire.Common.Job.Dispose(object)", span="162-162"];
m32_68 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="Job.Obsolete.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m32_63 [cluster="System.Reflection.MethodBase.GetParameters()", file="Job.Obsolete.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m32_85 [cluster="System.IDisposable.Dispose()", file="Job.Obsolete.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m32_13 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Job.Obsolete.cs", label="Entry Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="302-302"];
m32_86 [file="Job.Obsolete.cs", label="Hangfire.Common.Job", span=""];
m34_37 [cluster="HangFire.SqlServer.MessageQueueFetchedJob.MessageQueueFetchedJob(MessageQueueTransaction, string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.SqlServer.MessageQueueFetchedJob.MessageQueueFetchedJob(MessageQueueTransaction, string)", span="27-27"];
m34_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobDetailsPage1.generated.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m34_33 [cluster="Unk.Receive", file="JobDetailsPage1.generated.cs", label="Entry Unk.Receive", span=""];
m34_7 [cluster="BinaryMessageFormatter.cstr", file="JobDetailsPage1.generated.cs", label="Entry BinaryMessageFormatter.cstr", span=""];
m34_31 [cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", span="102-102"];
m34_53 [cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs", label="var queuePath = String.Format(_pathPattern, queue)", span="104-104"];
m34_54 [cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs", label="return new MessageQueue(queuePath);", span="106-106"];
m34_55 [cluster="HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.SqlServer.MessageQueueJobQueue.GetMessageQueue(string)", span="102-102"];
m34_56 [cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m34_32 [cluster="Unk.Begin", file="JobDetailsPage1.generated.cs", label="Entry Unk.Begin", span=""];
m34_8 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="41-41"];
m34_9 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="string jobId = null", span="43-43"];
m34_12 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="49-49"];
m34_13 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="51-51"];
m34_14 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="var queueName = queues[queueIndex]", span="52-52"];
m34_10 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="MessageQueueTransaction transaction", span="44-44"];
m34_11 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="var queueIndex = 0", span="45-45"];
m34_18 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="var message = queueIndex == 0\r\n                            ? messageQueue.Receive(SyncReceiveTimeout, transaction)\r\n                            : messageQueue.Receive(new TimeSpan(1), transaction)", span="62-64"];
m34_15 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="transaction = new MessageQueueTransaction()", span="54-54"];
m34_16 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="var messageQueue = GetMessageQueue(queueName)", span="56-56"];
m34_17 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="transaction.Begin()", span="60-60"];
m34_22 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="transaction.Abort()", span="73-73"];
m34_23 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="transaction.Dispose()", span="74-74"];
m34_27 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="return new MessageQueueFetchedJob(transaction, jobId);", span="84-84"];
m34_19 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="message.Formatter = _formatter", span="66-66"];
m34_20 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="jobId = (string)message.Body", span="68-68"];
m34_21 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label=MessageQueueException, span="71-71"];
m34_26 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="jobId == null", span="82-82"];
m34_24 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="ex.MessageQueueErrorCode != MessageQueueErrorCode.IOTimeout", span="76-76"];
m34_25 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="throw;", span="78-78"];
m34_28 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.SqlServer.MessageQueueJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="41-41"];
m34_38 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="87-87"];
m34_39 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="JobDetailsPage1.generated.cs", label="actions.Enqueue(x =>\r\n            {\r\n                using (var messageQueue = GetMessageQueue(queue))\r\n                using (var message = new Message { Body = jobId, Label = jobId, Formatter = _formatter })\r\n                using (var transaction = new MessageQueueTransaction())\r\n                {\r\n                    transaction.Begin();\r\n                    messageQueue.Send(message, transaction);\r\n                    transaction.Commit();\r\n                }\r\n            })", span="89-99"];
m34_40 [cluster="HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.SqlServer.MessageQueueJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="87-87"];
m34_41 [cluster="Unk.Enqueue", file="JobDetailsPage1.generated.cs", label="Entry Unk.Enqueue", span=""];
m34_29 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobDetailsPage1.generated.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m34_36 [cluster="Unk.Dispose", file="JobDetailsPage1.generated.cs", label="Entry Unk.Dispose", span=""];
m34_50 [cluster="Message.cstr", file="JobDetailsPage1.generated.cs", label="Entry Message.cstr", span=""];
m34_42 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Entry lambda expression", span="89-99"];
m34_43 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="var messageQueue = GetMessageQueue(queue)", span="91-91"];
m34_44 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="var message = new Message { Body = jobId, Label = jobId, Formatter = _formatter }", span="92-92"];
m34_47 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="messageQueue.Send(message, transaction)", span="96-96"];
m34_45 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="var transaction = new MessageQueueTransaction()", span="93-93"];
m34_46 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="transaction.Begin()", span="95-95"];
m34_48 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="transaction.Commit()", span="97-97"];
m34_49 [cluster="lambda expression", file="JobDetailsPage1.generated.cs", label="Exit lambda expression", span="89-99"];
m34_0 [cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", span="33-33"];
m34_1 [cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs", label="pathPattern == null", span="35-35"];
m34_3 [cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs", label="_pathPattern = pathPattern", span="37-37"];
m34_2 [cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''pathPattern'');", span="35-35"];
m34_4 [cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs", label="_formatter = new BinaryMessageFormatter()", span="38-38"];
m34_5 [cluster="HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.SqlServer.MessageQueueJobQueue.MessageQueueJobQueue(string)", span="33-33"];
m34_57 [cluster="MessageQueue.cstr", file="JobDetailsPage1.generated.cs", label="Entry MessageQueue.cstr", span=""];
m34_51 [cluster="Unk.Send", file="JobDetailsPage1.generated.cs", label="Entry Unk.Send", span=""];
m34_34 [cluster="System.TimeSpan.TimeSpan(long)", file="JobDetailsPage1.generated.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m34_52 [cluster="Unk.Commit", file="JobDetailsPage1.generated.cs", label="Entry Unk.Commit", span=""];
m34_30 [cluster="MessageQueueTransaction.cstr", file="JobDetailsPage1.generated.cs", label="Entry MessageQueueTransaction.cstr", span=""];
m34_35 [cluster="Unk.Abort", file="JobDetailsPage1.generated.cs", label="Entry Unk.Abort", span=""];
m34_58 [file="JobDetailsPage1.generated.cs", label="HangFire.SqlServer.MessageQueueJobQueue", span=""];
m34_59 [file="JobDetailsPage1.generated.cs", label=string, span=""];
m34_60 [file="JobDetailsPage1.generated.cs", label=string, span=""];
m37_0 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m37_1 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobLoadException.cs", label="Exit Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m39_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MoreEnumerable.Pairwise.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m39_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MoreEnumerable.Pairwise.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m39_5 [cluster="System.TimeSpan.FromSeconds(double)", file="MoreEnumerable.Pairwise.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m39_6 [file="MoreEnumerable.Pairwise.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m40_10 [cluster="Unk.Complete", file="MsmqDtcTransaction.cs", label="Entry Unk.Complete", span=""];
m40_18 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="MsmqDtcTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51"];
m40_20 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="MsmqDtcTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51"];
m40_0 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="MsmqDtcTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27"];
m40_2 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="MsmqDtcTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27"];
m40_17 [cluster="Unk.Receive", file="MsmqDtcTransaction.cs", label="Entry Unk.Receive", span=""];
m40_11 [cluster="Unk.Dispose", file="MsmqDtcTransaction.cs", label="Entry Unk.Dispose", span=""];
m40_12 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="MsmqDtcTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43"];
m40_16 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="MsmqDtcTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43"];
m40_21 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", file="MsmqDtcTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", span="56-56"];
m40_22 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", file="MsmqDtcTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Abort()", span="56-56"];
m40_3 [cluster="TransactionScope.cstr", file="MsmqDtcTransaction.cs", label="Entry TransactionScope.cstr", span=""];
m40_4 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="MsmqDtcTransaction.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32"];
m40_9 [cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="MsmqDtcTransaction.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32"];
m40_23 [file="MsmqDtcTransaction.cs", label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction", span=""];
m41_15 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="32-32"];
m41_37 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="56-56"];
m41_38 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs", label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="58-58"];
m41_40 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="61-61"];
m41_41 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="63-63"];
m41_42 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="56-56"];
m41_34 [cluster="Unk.Receive", file="MsmqJobQueueFacts.cs", label="Entry Unk.Receive", span=""];
m41_44 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m41_60 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="88-88"];
m41_61 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="91-91"];
m41_63 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="95-95"];
m41_64 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="Assert.NotNull(fetchedJob)", span="98-98"];
m41_65 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="var exception = Assert.Throws<MessageQueueException>(\r\n                () => MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="100-101"];
m41_66 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(MessageQueueErrorCode.IOTimeout, exception.MessageQueueErrorCode)", span="103-103"];
m41_67 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="88-88"];
m41_35 [cluster="BinaryMessageFormatter.cstr", file="MsmqJobQueueFacts.cs", label="Entry BinaryMessageFormatter.cstr", span=""];
m41_11 [cluster="Unk.Equal", file="MsmqJobQueueFacts.cs", label="Entry Unk.Equal", span=""];
m41_4 [cluster="System.Threading.CancellationToken.CancellationToken()", file="MsmqJobQueueFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m41_73 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="107-107"];
m41_74 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="110-110"];
m41_76 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="114-114"];
m41_77 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="fetchedJob.RemoveFromQueue()", span="116-116"];
m41_78 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="var exception = Assert.Throws<MessageQueueException>(\r\n                () => MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5)))", span="120-121"];
m41_79 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(MessageQueueErrorCode.IOTimeout, exception.MessageQueueErrorCode)", span="123-123"];
m41_80 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="107-107"];
m41_32 [cluster="Unk.Begin", file="MsmqJobQueueFacts.cs", label="Entry Unk.Begin", span=""];
m41_43 [cluster="Hangfire.Msmq.Tests.MsmqUtils.EnqueueJobId(string, string)", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.Msmq.Tests.MsmqUtils.EnqueueJobId(string, string)", span="7-7"];
m41_5 [cluster="Mock<IDbConnection>.cstr", file="MsmqJobQueueFacts.cs", label="Entry Mock<IDbConnection>.cstr", span=""];
m41_10 [cluster="Unk.>", file="MsmqJobQueueFacts.cs", label="Entry Unk.>", span=""];
m41_33 [cluster="System.TimeSpan.FromSeconds(double)", file="MsmqJobQueueFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m41_29 [cluster="Unk.Enqueue", file="MsmqJobQueueFacts.cs", label="Entry Unk.Enqueue", span=""];
m41_0 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", span="15-15"];
m41_1 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs", label="_token = new CancellationToken()", span="17-17"];
m41_3 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", span="15-15"];
m41_16 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", span="31-31"];
m41_19 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="var messageQueue = CleanMsmqQueueAttribute.GetMessageQueue(''my-queue'')", span="40-40"];
m41_20 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="var transaction = new MessageQueueTransaction()", span="41-41"];
m41_22 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="var message = messageQueue.Receive(TimeSpan.FromSeconds(5), transaction)", span="45-45"];
m41_21 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="transaction.Begin()", span="43-43"];
m41_26 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="transaction.Commit()", span="51-51"];
m41_23 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="message.Formatter = new BinaryMessageFormatter()", span="46-46"];
m41_24 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(''job-id'', message.Body)", span="48-48"];
m41_25 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(''job-id'', message.Label)", span="49-49"];
m41_27 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", span="31-31"];
m41_68 [cluster="Unk.NotNull", file="MsmqJobQueueFacts.cs", label="Entry Unk.NotNull", span=""];
m41_81 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m41_30 [cluster="Hangfire.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", span="45-45"];
m41_82 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Entry lambda expression", span="121-121"];
m41_12 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Entry lambda expression", span="25-25"];
m41_14 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Exit lambda expression", span="25-25"];
m41_52 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="queue.Dequeue(new[] { ''my-queue'' }, token)", span="73-73"];
m41_51 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Entry lambda expression", span="73-73"];
m41_53 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Exit lambda expression", span="73-73"];
m41_69 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Entry lambda expression", span="101-101"];
m41_70 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="101-101"];
m41_71 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Exit lambda expression", span="101-101"];
m41_83 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="121-121"];
m41_84 [cluster="lambda expression", file="MsmqJobQueueFacts.cs", label="Exit lambda expression", span="121-121"];
m41_72 [cluster="Hangfire.Msmq.Tests.MsmqUtils.DequeueJobId(string, System.TimeSpan)", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.Msmq.Tests.MsmqUtils.DequeueJobId(string, System.TimeSpan)", span="19-19"];
m41_50 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="MsmqJobQueueFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m41_45 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="67-67"];
m41_47 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs", label="var token = new CancellationToken(true)", span="70-70"];
m41_48 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => queue.Dequeue(new[] { ''my-queue'' }, token))", span="72-73"];
m41_49 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="67-67"];
m41_36 [cluster="Unk.Commit", file="MsmqJobQueueFacts.cs", label="Entry Unk.Commit", span=""];
m41_6 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", span="22-22"];
m41_8 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(''pathPattern'', exception.ParamName)", span="27-27"];
m41_9 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", span="22-22"];
m41_85 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="127-127"];
m41_86 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="130-130"];
m41_88 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="134-134"];
m41_89 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="fetchedJob.Dispose()", span="135-135"];
m41_90 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="var jobId = MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="138-138"];
m41_91 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(''job-id'', jobId)", span="139-139"];
m41_92 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="127-127"];
m41_28 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="142-142"];
m41_95 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="142-142"];
m41_31 [cluster="MessageQueueTransaction.cstr", file="MsmqJobQueueFacts.cs", label="Entry MessageQueueTransaction.cstr", span=""];
m41_93 [cluster="System.IDisposable.Dispose()", file="MsmqJobQueueFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m41_54 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="77-77"];
m41_55 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs", label="MsmqUtils.EnqueueJobId(''queue-2'', ''job-id'')", span="79-79"];
m41_57 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''queue-1'', ''queue-2'' }, _token)", span="82-82"];
m41_58 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs", label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="84-84"];
m41_59 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="77-77"];
m41_96 [file="MsmqJobQueueFacts.cs", label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts", span=""];
m41_97 [file="MsmqJobQueueFacts.cs", label=queue, span=""];
m41_98 [file="MsmqJobQueueFacts.cs", label=token, span=""];
m42_31 [cluster="Unk.NotNull", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.NotNull", span=""];
m42_24 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39"];
m42_25 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="var context = new BackgroundProcessContext(_serverId, _storage.Object, _cts.Token)", span="41-41"];
m42_26 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="Assert.Equal(_serverId, context.ServerId)", span="43-43"];
m42_28 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="Assert.Same(_storage.Object, context.Storage)", span="45-45"];
m42_29 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="Assert.Equal(_cts.Token, context.CancellationToken)", span="46-46"];
m42_27 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="Assert.NotNull(context.ServerData)", span="44-44"];
m42_30 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39"];
m42_10 [cluster="Unk.>", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.>", span=""];
m42_16 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m42_17 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="MsmqJobQueueProviderFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(_serverId, null, _cts.Token))", prediction=74, span="32-33"];
m42_18 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="MsmqJobQueueProviderFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="35-35"];
m42_19 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m42_23 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m42_32 [cluster="Unk.Same", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.Same", span=""];
m42_0 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14"];
m42_1 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs", label="_storage = new Mock<JobStorage>()", span="16-16"];
m42_2 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs", label="_cts = new CancellationTokenSource()", span="17-17"];
m42_3 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14"];
m42_15 [cluster="BackgroundProcessContext.cstr", file="MsmqJobQueueProviderFacts.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m42_11 [cluster="Unk.Equal", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.Equal", span=""];
m42_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="MsmqJobQueueProviderFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m42_4 [cluster="Mock<JobStorage>.cstr", file="MsmqJobQueueProviderFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m42_20 [cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs", label="Entry lambda expression", span="33-33"];
m42_12 [cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs", label="Entry lambda expression", span="24-24"];
m42_13 [cluster="lambda expression", color=green, community=0, file="MsmqJobQueueProviderFacts.cs", label="new BackgroundProcessContext(null, _storage.Object, _cts.Token)", prediction=75, span="24-24"];
m42_14 [cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs", label="Exit lambda expression", span="24-24"];
m42_21 [cluster="lambda expression", color=green, community=0, file="MsmqJobQueueProviderFacts.cs", label="new BackgroundProcessContext(_serverId, null, _cts.Token)", prediction=75, span="33-33"];
m42_22 [cluster="lambda expression", file="MsmqJobQueueProviderFacts.cs", label="Exit lambda expression", span="33-33"];
m42_6 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21"];
m42_7 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="MsmqJobQueueProviderFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(null, _storage.Object, _cts.Token))", prediction=77, span="23-24"];
m42_8 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="MsmqJobQueueProviderFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="26-26"];
m42_9 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21"];
m42_33 [file="MsmqJobQueueProviderFacts.cs", label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", span=""];
m44_8 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22"];
m44_9 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="PerformContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object))", prediction=78, span="24-25"];
m44_10 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="27-27"];
m44_11 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22"];
m44_65 [cluster="Hangfire.Server.PerformContext.SetJobParameter(string, object)", file="PerformContextFacts.cs", label="Entry Hangfire.Server.PerformContext.SetJobParameter(string, object)", span="76-76"];
m44_25 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40"];
m44_27 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", color=green, community=0, file="PerformContextFacts.cs", label="Assert.Equal(''cancellationToken'', exception.ParamName)", prediction=79, span="45-45"];
m44_28 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40"];
m44_41 [cluster="Unk.Same", file="PerformContextFacts.cs", label="Entry Unk.Same", span=""];
m44_13 [cluster="Unk.Equal", file="PerformContextFacts.cs", label="Entry Unk.Equal", span=""];
m44_76 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100"];
m44_77 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="102-102"];
m44_78 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<string>(null))", span="104-105"];
m44_79 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100"];
m44_57 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79"];
m44_58 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="81-81"];
m44_59 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="83-84"];
m44_60 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="86-86"];
m44_61 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79"];
m44_12 [cluster="Unk.>", file="PerformContextFacts.cs", label="Entry Unk.>", span=""];
m44_100 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Method()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Method()", span="124-124"];
m44_101 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Method()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Method()", span="124-124"];
m44_39 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118"];
m44_99 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118"];
m44_6 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9"];
m44_49 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67"];
m44_50 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="69-69"];
m44_51 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="var contextCopy = new PerformContext(context)", span="70-70"];
m44_52 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.Items, contextCopy.Items)", span="72-72"];
m44_53 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.Connection, contextCopy.Connection)", span="73-73"];
m44_55 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.CancellationToken, contextCopy.CancellationToken)", span="75-75"];
m44_56 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67"];
m44_40 [cluster="Unk.NotNull", file="PerformContextFacts.cs", label="Entry Unk.NotNull", span=""];
m44_83 [cluster="Hangfire.Server.PerformContext.GetJobParameter<T>(string)", file="PerformContextFacts.cs", label="Entry Hangfire.Server.PerformContext.GetJobParameter<T>(string)", span="83-83"];
m44_94 [cluster="Unk.GetJobParameter", file="PerformContextFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m44_42 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60"];
m44_43 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new PerformContext(null))", span="62-63"];
m44_44 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60"];
m44_89 [cluster="Unk.Setup", file="PerformContextFacts.cs", label="Entry Unk.Setup", span=""];
m44_48 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", file="PerformContextFacts.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", span="30-30"];
m44_95 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="115-115"];
m44_14 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="25-25"];
m44_16 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="25-25"];
m44_22 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="34-34"];
m44_23 [cluster="lambda expression", color=green, community=0, file="PerformContextFacts.cs", label="new PerformContext(_connection.Object, null, _cancellationToken.Object)", prediction=80, span="34-34"];
m44_24 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="34-34"];
m44_29 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="43-43"];
m44_31 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="43-43"];
m44_45 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="63-63"];
m44_46 [cluster="lambda expression", file="PerformContextFacts.cs", label="new PerformContext(null)", span="63-63"];
m44_47 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="63-63"];
m44_63 [cluster="lambda expression", file="PerformContextFacts.cs", label="context.SetJobParameter(null, null)", span="84-84"];
m44_62 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="84-84"];
m44_64 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="84-84"];
m44_72 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="96-96"];
m44_73 [cluster="lambda expression", color=green, community=0, file="PerformContextFacts.cs", label="x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\'''')", prediction=80, span="96-96"];
m44_74 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="96-96"];
m44_81 [cluster="lambda expression", file="PerformContextFacts.cs", label="context.GetJobParameter<string>(null)", span="105-105"];
m44_80 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="105-105"];
m44_82 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="105-105"];
m44_91 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="111-111"];
m44_96 [cluster="lambda expression", file="PerformContextFacts.cs", label="context.GetJobParameter<int>(''name'')", span="115-115"];
m44_93 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="111-111"];
m44_97 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="115-115"];
m44_71 [cluster="Unk.Verify", file="PerformContextFacts.cs", label="Entry Unk.Verify", span=""];
m44_7 [cluster="Mock<IJobCancellationToken>.cstr", file="PerformContextFacts.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m44_32 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49"];
m44_33 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="PerformContextFacts.cs", label="var context = CreateContext()", prediction=82, span="51-51"];
m44_34 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="PerformContextFacts.cs", label="Assert.Equal(_backgroundJob.Object, context.BackgroundJob)", prediction=80, span="53-53"];
m44_35 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="PerformContextFacts.cs", label="Assert.NotNull(context.Items)", prediction=82, span="54-54"];
m44_36 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Assert.Same(_connection.Object, context.Connection)", span="55-55"];
m44_37 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Assert.Same(_cancellationToken.Object, context.CancellationToken)", span="56-56"];
m44_38 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49"];
m44_66 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90"];
m44_67 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="92-92"];
m44_68 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="context.SetJobParameter(''name'', ''value'')", span="94-94"];
m44_69 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", color=green, community=0, file="PerformContextFacts.cs", label="_connection.Verify(x => x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\''''))", prediction=80, span="96-96"];
m44_70 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90"];
m44_0 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14"];
m44_1 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", color=green, community=0, file="PerformContextFacts.cs", label="_connection = new Mock<IStorageConnection>()", prediction=86, span="16-16"];
m44_2 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", color=green, community=0, file="PerformContextFacts.cs", label="_backgroundJob = new BackgroundJobMock()", prediction=87, span="17-17"];
m44_3 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="_cancellationToken = new Mock<IJobCancellationToken>()", span="18-18"];
m44_4 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14"];
m44_90 [cluster="Unk.Returns", file="PerformContextFacts.cs", label="Entry Unk.Returns", span=""];
m44_84 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109"];
m44_86 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="112-112"];
m44_87 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="114-115"];
m44_88 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109"];
m44_5 [cluster="Mock<IStorageConnection>.cstr", file="PerformContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m44_75 [cluster="Unk.SetJobParameter", file="PerformContextFacts.cs", label="Entry Unk.SetJobParameter", span=""];
m44_18 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="PerformContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31"];
m44_19 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", color=green, community=0, file="PerformContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, null, _cancellationToken.Object))", prediction=88, span="33-34"];
m44_21 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="PerformContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31"];
m44_17 [cluster="PerformContext.cstr", file="PerformContextFacts.cs", label="Entry PerformContext.cstr", span=""];
m44_102 [file="PerformContextFacts.cs", label="Hangfire.Core.Tests.Server.PerformContextFacts", span=""];
m44_103 [file="PerformContextFacts.cs", label=context, span=""];
m44_104 [file="PerformContextFacts.cs", label=context, span=""];
m44_105 [file="PerformContextFacts.cs", label=context, span=""];
m45_54 [cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Encode(string)", span="147-147"];
m45_84 [cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="PerformContextMock.cs", label="return HttpUtility.HtmlEncode(value);", span="149-149"];
m45_85 [cluster="HangFire.Web.JobMethodCallRenderer.Encode(string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.Encode(string)", span="147-147"];
m45_53 [cluster="System.Text.StringBuilder.Append(string)", file="PerformContextMock.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m45_86 [cluster="Unk.HtmlEncode", file="PerformContextMock.cs", label="Entry Unk.HtmlEncode", span=""];
m45_106 [cluster="string.Format(string, object)", file="PerformContextMock.cs", label="Entry string.Format(string, object)", span="0-0"];
m45_71 [cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Span(string, string)", span="139-139"];
m45_80 [cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="PerformContextMock.cs", label="return String.Format(\r\n                ''<span class=\''{0}\''>{1}</span>'', \r\n                HttpUtility.HtmlAttributeEncode(@class), \r\n                value);", span="141-144"];
m45_81 [cluster="HangFire.Web.JobMethodCallRenderer.Span(string, string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.Span(string, string)", span="139-139"];
m45_142 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="PerformContextMock.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m45_51 [cluster="System.Text.StringBuilder.StringBuilder()", file="PerformContextMock.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m45_55 [cluster="System.Text.StringBuilder.AppendLine()", file="PerformContextMock.cs", label="Entry System.Text.StringBuilder.AppendLine()", span="0-0"];
m45_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="PerformContextMock.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m45_82 [cluster="Unk.HtmlAttributeEncode", file="PerformContextMock.cs", label="Entry Unk.HtmlAttributeEncode", span=""];
m45_65 [cluster="System.Text.StringBuilder.ToString()", file="PerformContextMock.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m45_50 [cluster="HtmlString.cstr", file="PerformContextMock.cs", label="Entry HtmlString.cstr", span=""];
m45_77 [cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapComment(string)", span="134-134"];
m45_78 [cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="PerformContextMock.cs", label="return Span(''comment'', value);", span="136-136"];
m45_79 [cluster="HangFire.Web.JobMethodCallRenderer.WrapComment(string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapComment(string)", span="134-134"];
m45_58 [cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapType(string)", span="124-124"];
m45_72 [cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="PerformContextMock.cs", label="return Span(''type'', value);", span="126-126"];
m45_73 [cluster="HangFire.Web.JobMethodCallRenderer.WrapType(string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapType(string)", span="124-124"];
m45_105 [cluster="Unk.AppendFormat", file="PerformContextMock.cs", label="Entry Unk.AppendFormat", span=""];
m45_118 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="243-243"];
m45_119 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="type == null", span="245-245"];
m45_121 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="Type.GetTypeCode(type)", span="247-247"];
m45_135 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="IsNullableType(type)", span="263-263"];
m45_136 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="return IsNumericType(Nullable.GetUnderlyingType(type));", span="265-265"];
m45_120 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="return false;", span="245-245"];
m45_122 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Byte", span="249-249"];
m45_134 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Object", span="262-262"];
m45_123 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Decimal", span="250-250"];
m45_124 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Double", span="251-251"];
m45_125 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Int16", span="252-252"];
m45_126 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Int32", span="253-253"];
m45_127 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Int64", span="254-254"];
m45_128 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.SByte", span="255-255"];
m45_129 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.Single", span="256-256"];
m45_130 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.UInt16", span="257-257"];
m45_131 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.UInt32", span="258-258"];
m45_132 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="TypeCode.UInt64", span="259-259"];
m45_133 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="return true;", span="260-260"];
m45_137 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="return false;", span="267-267"];
m45_138 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="return false;", span="269-269"];
m45_139 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNumericType(System.Type)", span="243-243"];
m45_87 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="158-158"];
m45_88 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs", label="_enclosingString = ''\''''", span="160-160"];
m45_89 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs", label="_valueRenderer = WrapString", span="161-161"];
m45_90 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.ArgumentRenderer()", span="158-158"];
m45_52 [cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", span="119-119"];
m45_69 [cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="PerformContextMock.cs", label="return Span(''keyword'', value);", span="121-121"];
m45_70 [cluster="HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapKeyword(string)", span="119-119"];
m45_74 [cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapString(string)", span="129-129"];
m45_75 [cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="PerformContextMock.cs", label="return Span(''string'', value);", span="131-131"];
m45_76 [cluster="HangFire.Web.JobMethodCallRenderer.WrapString(string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapString(string)", span="129-129"];
m45_0 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", span="26-26"];
m45_10 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="!job.Method.IsStatic", span="39-39"];
m45_11 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var serviceName = Char.ToLower(job.Type.Name[0]) + job.Type.Name.Substring(1)", span="41-41"];
m45_12 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(WrapType(job.Type.Name))", span="43-43"];
m45_13 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.AppendFormat(\r\n                    '' {0} = Activate<{1}>();'',\r\n                    Encode(serviceName),\r\n                    WrapType(Encode(job.Type.Name)))", span="44-47"];
m45_16 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(WrapType(Encode(job.Type.Name)))", span="55-55"];
m45_18 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(Encode(job.Method.Name))", span="59-59"];
m45_20 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var parameters = job.Method.GetParameters()", span="62-62"];
m45_27 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i < job.Arguments.Length", span="72-72"];
m45_28 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var argument = job.Arguments[i]", span="74-74"];
m45_8 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.AppendLine()", span="36-36"];
m45_9 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.AppendLine()", span="37-37"];
m45_14 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.AppendLine()", span="49-49"];
m45_15 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(Encode(serviceName))", span="51-51"];
m45_17 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(''.'')", span="58-58"];
m45_19 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(''('')", span="60-60"];
m45_39 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.AppendLine()", span="93-93"];
m45_40 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(''    '')", span="94-94"];
m45_42 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append('' '')", span="98-98"];
m45_43 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append(renderedArgument)", span="101-101"];
m45_45 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append('','')", span="105-105"];
m45_47 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="builder.Append('');'')", span="109-109"];
m45_48 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="return new HtmlString(builder.ToString());", span="111-111"];
m45_21 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var renderedArguments = new List<string>(parameters.Length)", span="63-63"];
m45_25 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i < parameters.Length", span="68-68"];
m45_26 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var parameter = parameters[i]", span="70-70"];
m45_22 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var renderedArgumentsTotalLength = 0", span="64-64"];
m45_31 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="renderedArguments.Add(renderedArgument)", span="79-79"];
m45_33 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="renderedArguments.Add(Encode(''<NO VALUE>''))", span="84-84"];
m45_36 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i < renderedArguments.Count", span="88-88"];
m45_37 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var renderedArgument = renderedArguments[i]", span="90-90"];
m45_44 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i < renderedArguments.Count - 1", span="103-103"];
m45_23 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="int splitStringMinLength = 200", span="66-66"];
m45_32 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="renderedArgumentsTotalLength += renderedArgument.Length", span="80-80"];
m45_38 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="renderedArgumentsTotalLength > splitStringMinLength", span="91-91"];
m45_24 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var i = 0", span="68-68"];
m45_34 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i++", span="68-68"];
m45_35 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="int i = 0", span="88-88"];
m45_29 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var argumentRenderer = ArgumentRenderer.GetRenderer(parameter.ParameterType)", span="76-76"];
m45_30 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="var renderedArgument = argumentRenderer.Render(parameter.Name, argument)", span="78-78"];
m45_41 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i > 0", span="96-96"];
m45_46 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="i++", span="88-88"];
m45_49 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.Job)", span="26-26"];
m45_66 [cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", span="114-114"];
m45_67 [cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="PerformContextMock.cs", label="return value;", span="116-116"];
m45_68 [cluster="HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.WrapIdentifier(string)", span="114-114"];
m45_141 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="272-272"];
m45_143 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="PerformContextMock.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="274-274"];
m45_144 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.IsNullableType(System.Type)", span="272-272"];
m45_56 [cluster="char.ToLower(char)", file="PerformContextMock.cs", label="Entry char.ToLower(char)", span="0-0"];
m45_61 [cluster="System.Collections.Generic.List<T>.List(int)", file="PerformContextMock.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m45_64 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PerformContextMock.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m45_62 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="201-201"];
m45_108 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="IsNumericType(type)", span="203-203"];
m45_110 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="type == typeof(bool)", span="212-212"];
m45_112 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="type == typeof(char)", span="221-221"];
m45_114 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="type == typeof(string) || type == typeof(object)", span="229-229"];
m45_116 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="return new ArgumentRenderer\r\n                {\r\n                    _deserializationType = type,\r\n                };", span="237-240"];
m45_109 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = String.Empty,\r\n                        _valueRenderer = WrapIdentifier\r\n                    };", span="205-209"];
m45_111 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _valueRenderer = WrapKeyword,\r\n                        _enclosingString = String.Empty,\r\n                    };", span="214-218"];
m45_113 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''''',\r\n                    };", span="223-226"];
m45_115 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="return new ArgumentRenderer\r\n                    {\r\n                        _enclosingString = ''\'''',\r\n                    };", span="231-234"];
m45_117 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.GetRenderer(System.Type)", span="201-201"];
m45_83 [cluster="Unk.Format", file="PerformContextMock.cs", label="Entry Unk.Format", span=""];
m45_145 [cluster="System.Type.GetGenericTypeDefinition()", file="PerformContextMock.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m45_63 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="Entry HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", span="164-164"];
m45_91 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="value == null", span="166-166"];
m45_94 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="name != null", span="173-173"];
m45_95 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="builder.AppendFormat(\r\n                        ''<span title=\''{0}:\'' data-placement=\''left\''>'', \r\n                        HttpUtility.HtmlAttributeEncode(name))", span="175-177"];
m45_98 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="builder.Append(_valueRenderer(Encode(_enclosingString + value + _enclosingString)))", span="186-186"];
m45_101 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="name != null", span="193-193"];
m45_92 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="return WrapKeyword(''null'');", span="168-168"];
m45_93 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="var builder = new StringBuilder()", span="171-171"];
m45_97 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="builder.Append(WrapIdentifier(\r\n                        String.Format(''Deserialize<{0}>('', WrapType(_deserializationType.Name))))", span="182-183"];
m45_100 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="builder.Append('')'')", span="190-190"];
m45_102 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="builder.Append(''</span>'')", span="195-195"];
m45_103 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="return builder.ToString();", span="198-198"];
m45_96 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="_deserializationType != null", span="180-180"];
m45_99 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="_deserializationType != null", span="188-188"];
m45_104 [cluster="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", file="PerformContextMock.cs", label="Exit HangFire.Web.JobMethodCallRenderer.ArgumentRenderer.Render(string, string)", span="164-164"];
m45_60 [cluster="System.Reflection.MethodBase.GetParameters()", file="PerformContextMock.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m45_140 [cluster="System.Type.GetTypeCode(System.Type)", file="PerformContextMock.cs", label="Entry System.Type.GetTypeCode(System.Type)", span="0-0"];
m45_59 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="PerformContextMock.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m45_57 [cluster="string.Substring(int)", file="PerformContextMock.cs", label="Entry string.Substring(int)", span="0-0"];
m45_146 [file="PerformContextMock.cs", label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", span=""];
m46_10 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", label="var job = Job.FromExpression(() => TestMethod())", span="23-23"];
m46_11 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="PreserveCultureAttributeFacts.cs", label="var state = new Mock<IState>()", prediction=89, span="24-24"];
m46_20 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="PreserveCultureAttributeFacts.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="42-42"];
m46_19 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="PreserveCultureAttributeFacts.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="41-41"];
m46_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="PreserveCultureAttributeFacts.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26"];
m46_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="PreserveCultureAttributeFacts.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26"];
m46_2 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="PreserveCultureAttributeFacts.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28"];
m46_22 [cluster="Unk.False", file="PreserveCultureAttributeFacts.cs", label="Entry Unk.False", span=""];
m46_23 [cluster="lambda expression", file="PreserveCultureAttributeFacts.cs", label="Entry lambda expression", span="23-23"];
m46_3 [cluster="Unk.>", file="PreserveCultureAttributeFacts.cs", label="Entry Unk.>", span=""];
m46_14 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", label="var context = new CreatingContext(createContext)", span="29-29"];
m46_15 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="PreserveCultureAttributeFacts.cs", label="Assert.False(context.Canceled)", prediction=90, span="31-31"];
m46_6 [cluster="lambda expression", file="PreserveCultureAttributeFacts.cs", label="Exit lambda expression", span="16-16"];
m46_7 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="PreserveCultureAttributeFacts.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m46_26 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="PreserveCultureAttributeFacts.cs", label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m46_27 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="PreserveCultureAttributeFacts.cs", label="Exit Hangfire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m46_18 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PreserveCultureAttributeFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m46_8 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", label="Entry Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m46_9 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="22-22"];
m46_12 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="PreserveCultureAttributeFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25"];
m46_13 [cluster="Hangfire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="PreserveCultureAttributeFacts.cs", label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", prediction=91, span="27-28"];
m46_4 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30"];
m46_25 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="PreserveCultureAttributeFacts.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44"];
m46_24 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="PreserveCultureAttributeFacts.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="44-44"];
m46_5 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="Exit HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30"];
m46_21 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="PreserveCultureAttributeFacts.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="42-42"];
m46_16 [cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="PreserveCultureAttributeFacts.cs", label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="39-39"];
m46_17 [cluster="Mock<IStorageConnection>.cstr", file="PreserveCultureAttributeFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m47_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m47_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m47_13 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ProcessingState.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m47_9 [cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Entry Hangfire.States.ProcessingState.SerializeData()", span="127-127"];
m47_11 [cluster="Hangfire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Exit Hangfire.States.ProcessingState.SerializeData()", span="127-127"];
m47_7 [cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m47_0 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m47_1 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs", label="String.IsNullOrWhiteSpace(serverId)", span="41-41"];
m47_3 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs", label="ServerId = serverId", span="43-43"];
m47_2 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs", label="throw new ArgumentNullException(''serverId'');", span="41-41"];
m47_4 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs", label="StartedAt = DateTime.UtcNow", span="44-44"];
m47_6 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="ProcessingState.cs", label="Exit Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m47_14 [file="ProcessingState.cs", label="Hangfire.States.ProcessingState", span=""];
m48_29 [cluster="MessageQueue.cstr", file="ProcessingStateFacts.cs", label="Entry MessageQueue.cstr", span=""];
m48_40 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="79-79"];
m48_41 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs", label="var messageQueue = new MessageQueue(String.Format(_pathPattern, queue))", span="81-81"];
m48_42 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs", label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = (int?)messageQueue.GetCount()\r\n                };", span="83-86"];
m48_43 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="ProcessingStateFacts.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="79-79"];
m48_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingStateFacts.cs", label="HangFire.BackgroundJobServerOptions", span=""];
m48_44 [cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="ProcessingStateFacts.cs", label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18"];
m48_28 [cluster="System.Collections.Generic.List<T>.List()", file="ProcessingStateFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m48_9 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", file="ProcessingStateFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", span="38-38"];
m48_10 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", file="ProcessingStateFacts.cs", label="return _queues;", span="40-40"];
m48_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", file="ProcessingStateFacts.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetQueues()", span="38-38"];
m48_35 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ProcessingStateFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m48_36 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="74-74"];
m48_37 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="return Enumerable.Empty<int>();", span="76-76"];
m48_38 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="74-74"];
m48_31 [cluster="Unk.GetMessageEnumerator2", file="ProcessingStateFacts.cs", label="Entry Unk.GetMessageEnumerator2", span=""];
m48_32 [cluster="BinaryMessageFormatter.cstr", file="ProcessingStateFacts.cs", label="Entry BinaryMessageFormatter.cstr", span=""];
m48_0 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m48_1 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", label="WorkerCount = Environment.ProcessorCount * 5", span="13-13"];
m48_3 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="15-15"];
m48_5 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="ProcessingStateFacts.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", prediction=92, span="17-17"];
m48_6 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m48_2 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", label="ServerName = Environment.MachineName", span="14-14"];
m48_4 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ProcessingStateFacts.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="16-16"];
m48_7 [cluster="System.TimeSpan.FromSeconds(double)", file="ProcessingStateFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m48_34 [cluster="int.Parse(string)", file="ProcessingStateFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m48_45 [cluster="MessageQueue.GetCount()", file="ProcessingStateFacts.cs", label="Entry MessageQueue.GetCount()", span="87-87"];
m48_30 [cluster="string.Format(string, object)", file="ProcessingStateFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m48_39 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ProcessingStateFacts.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m48_33 [cluster="Unk.MoveNext", file="ProcessingStateFacts.cs", label="Entry Unk.MoveNext", span=""];
m48_12 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="43-43"];
m48_13 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var result = new List<int>()", span="45-45"];
m48_14 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var messageQueue = new MessageQueue(String.Format(_pathPattern, queue))", span="47-47"];
m48_16 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var end = @from + perPage", span="50-50"];
m48_20 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="current >= @from && current < end", span="57-57"];
m48_23 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="result.Add(int.Parse((string)message.Body))", span="62-62"];
m48_26 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="return result;", span="71-71"];
m48_15 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var current = 0", span="49-49"];
m48_17 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var enumerator = messageQueue.GetMessageEnumerator2()", span="51-51"];
m48_24 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="current >= end", span="65-65"];
m48_25 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="current++", span="67-67"];
m48_18 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var formatter = new BinaryMessageFormatter()", span="53-53"];
m48_19 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="enumerator.MoveNext()", span="55-55"];
m48_21 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="var message = enumerator.Current", span="59-59"];
m48_22 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="message.Formatter = formatter", span="61-61"];
m48_27 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="ProcessingStateFacts.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="43-43"];
m48_46 [file="ProcessingStateFacts.cs", label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi", span=""];
m50_5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="_jobQueue = new RabbitMqJobQueue(queues, configureAction)", span="18-18"];
m50_8 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", color=green, community=0, file="RabbitMqJobQueueProvider.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", prediction=93, span="22-23"];
m50_15 [cluster="lambda expression", file="RabbitMqJobQueueProvider.cs", label="Entry lambda expression", span="22-23"];
m50_16 [cluster="lambda expression", color=green, community=0, file="RabbitMqJobQueueProvider.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", prediction=93, span="22-23"];
m50_17 [cluster="lambda expression", file="RabbitMqJobQueueProvider.cs", label="Exit lambda expression", span="22-23"];
m50_19 [cluster="Unk.EnqueueItemOnList", file="RabbitMqJobQueueProvider.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m50_0 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m50_1 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs", label="transaction == null", span="12-12"];
m50_3 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs", label="_transaction = transaction", span="14-14"];
m50_6 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RabbitMqJobQueueProvider.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m50_2 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs", label="throw new ArgumentNullException(''transaction'');", span="12-12"];
m50_4 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RabbitMqJobQueueProvider.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m50_7 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.Enqueue(string, string)", file="RabbitMqJobQueueProvider.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="19-20"];
m50_10 [cluster="Unk.QueueCommand", file="RabbitMqJobQueueProvider.cs", label="Entry Unk.QueueCommand", span=""];
m50_12 [cluster="lambda expression", file="RabbitMqJobQueueProvider.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="19-20"];
m50_13 [cluster="lambda expression", file="RabbitMqJobQueueProvider.cs", label="Exit lambda expression", span="19-20"];
m50_14 [cluster="Unk.AddItemToSet", file="RabbitMqJobQueueProvider.cs", label="Entry Unk.AddItemToSet", span=""];
m50_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProvider.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="22-22"];
m50_18 [cluster="string.Format(string, object)", file="RabbitMqJobQueueProvider.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m50_11 [cluster="lambda expression", file="RabbitMqJobQueueProvider.cs", label="Entry lambda expression", span="19-20"];
m50_20 [file="RabbitMqJobQueueProvider.cs", label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", span=""];
m50_21 [file="RabbitMqJobQueueProvider.cs", label=string, span=""];
m50_22 [file="RabbitMqJobQueueProvider.cs", label=string, span=""];
m51_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m51_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m51_8 [cluster="HangFire.States.ProcessingState.SerializeData()", file="RecurringJobManager.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="41-41"];
m51_10 [cluster="HangFire.States.ProcessingState.SerializeData()", file="RecurringJobManager.cs", label="Exit HangFire.States.ProcessingState.SerializeData()", span="41-41"];
m51_6 [cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobManager.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m51_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m51_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs", label="String.IsNullOrWhiteSpace(serverName)", span="28-28"];
m51_3 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs", label="ServerName = serverName", span="30-30"];
m51_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs", label="throw new ArgumentNullException(''serverName'');", span="28-28"];
m51_4 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs", label="StartedAt = DateTime.UtcNow", span="31-31"];
m51_5 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="RecurringJobManager.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m51_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobManager.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m51_13 [file="RecurringJobManager.cs", label="HangFire.States.ProcessingState", span=""];
m52_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m52_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs", label="MaxRetryAttempts = 10", span="26-26"];
m52_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27"];
m52_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs", label="LowerLogVerbosity = false", span="28-28"];
m52_4 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="RetryAttributeFacts.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m52_5 [cluster="System.TimeSpan.FromSeconds(double)", file="RetryAttributeFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m52_6 [file="RetryAttributeFacts.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m53_25 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="ScheduledStateHandlerFacts.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106"];
m53_17 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="handler.Apply(_context.Object, _transaction.Object)", span="37-37"];
m53_26 [cluster="Unk.AddToSet", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.AddToSet", span=""];
m53_27 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="44-44"];
m53_28 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="46-46"];
m53_43 [cluster="Mock<IState>.cstr", file="ScheduledStateHandlerFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m53_6 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="13-13"];
m53_10 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="29-29"];
m53_13 [cluster="Hangfire.States.ScheduledState.Handler.Handler()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.States.ScheduledState.Handler.Handler()", span="161-161"];
m53_15 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="34-34"];
m53_11 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Assert.Equal(ScheduledState.StateName, handler.StateName)", span="30-30"];
m53_12 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.StateName_ShouldBeEqualToScheduledState()", span="27-27"];
m53_14 [cluster="Unk.Equal", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.Equal", span=""];
m53_16 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="var handler = new ScheduledState.Handler()", span="36-36"];
m53_8 [cluster="HangFire.Perform.Async(System.Type)", file="ScheduledStateHandlerFacts.cs", label="return Async(type, null);", span="63-63"];
m53_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="ScheduledStateHandlerFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m53_9 [cluster="HangFire.Perform.Async(System.Type)", file="ScheduledStateHandlerFacts.cs", label="Exit HangFire.Perform.Async(System.Type)", span="61-61"];
m53_0 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="17-17"];
m53_1 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="_context = new ApplyStateContextMock()", span="19-19"];
m53_2 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", color=green, community=0, file="ScheduledStateHandlerFacts.cs", label="_context.BackgroundJob.Id = JobId", prediction=95, span="20-20"];
m53_37 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="ScheduledStateHandlerFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m53_39 [cluster="HangFire.Perform.GenerateId()", color=green, community=0, file="ScheduledStateHandlerFacts.cs", label="return Guid.NewGuid().ToString();", prediction=96, span="175-175"];
m53_38 [cluster="System.DateTime.Add(System.TimeSpan)", file="ScheduledStateHandlerFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m53_40 [cluster="HangFire.Perform.GenerateId()", file="ScheduledStateHandlerFacts.cs", label="Exit HangFire.Perform.GenerateId()", span="173-173"];
m53_41 [cluster="System.Guid.NewGuid()", file="ScheduledStateHandlerFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m53_42 [cluster="System.Guid.ToString()", file="ScheduledStateHandlerFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m53_44 [cluster="Unk.>", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m53_3 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", color=green, community=0, file="ScheduledStateHandlerFacts.cs", label="_context.NewStateObject = new ScheduledState(_enqueueAt)", prediction=97, span="21-21"];
m53_4 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23"];
m53_5 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.ScheduledStateHandlerFacts()", span="17-17"];
m53_19 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", span="34-34"];
m53_21 [cluster="Unk.Verify", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.Verify", span=""];
m53_30 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="_transaction.Verify(x => x.RemoveFromSet(''schedule'', JobId))", span="49-49"];
m53_31 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", file="ScheduledStateHandlerFacts.cs", label="Exit Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Unapply_ShouldRemoveTheJob_FromTheScheduledSet()", span="44-44"];
m53_32 [cluster="Unk.Unapply", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.Unapply", span=""];
m53_29 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="ScheduledStateHandlerFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160"];
m53_33 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Entry lambda expression", span="49-49"];
m53_34 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="x.RemoveFromSet(''schedule'', JobId)", span="49-49"];
m53_35 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Exit lambda expression", span="49-49"];
m53_36 [cluster="Unk.RemoveFromSet", file="ScheduledStateHandlerFacts.cs", label="Entry Unk.RemoveFromSet", span=""];
m53_18 [cluster="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts.Apply_ShouldAddTheJob_ToTheScheduleSet_WithTheCorrectScore()", file="ScheduledStateHandlerFacts.cs", label="_transaction.Verify(x => x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(_enqueueAt)))", span="39-40"];
m53_23 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="x.AddToSet(\r\n                ''schedule'', JobId, JobHelper.ToTimestamp(_enqueueAt))", span="39-40"];
m53_24 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Exit lambda expression", span="39-40"];
m53_7 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateHandlerFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="81-81"];
m53_45 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Entry lambda expression", span="60-60"];
m53_46 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="handler.Apply(_context.Object, _transaction.Object)", span="60-60"];
m53_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="ScheduledStateHandlerFacts.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m53_47 [cluster="lambda expression", file="ScheduledStateHandlerFacts.cs", label="Exit lambda expression", span="60-60"];
m53_48 [file="ScheduledStateHandlerFacts.cs", label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", span=""];
m53_49 [file="ScheduledStateHandlerFacts.cs", label=handler, span=""];
m55_39 [cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151"];
m55_51 [cluster="System.Threading.Thread.Join()", file="ServerHeartbeatFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m55_0 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m55_1 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="_storage = storage", span="36-36"];
m55_2 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="_pollInterval = pollInterval", span="37-37"];
m55_3 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m55_38 [cluster="Unk.Info", file="ServerHeartbeatFacts.cs", label="Entry Unk.Info", span=""];
m55_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="29-29"];
m55_41 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerHeartbeatFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m55_16 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m55_18 [cluster="string.IsNullOrEmpty(string)", file="ServerHeartbeatFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m55_22 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="68-68"];
m55_23 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="Logger.Info(''Schedule poller has been started.'')", span="72-72"];
m55_24 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="int enqueued = 0", span="74-74"];
m55_25 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label=true, span="76-76"];
m55_29 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="enqueued++", span="88-88"];
m55_30 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="enqueued != 0", span="92-92"];
m55_31 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', enqueued)", span="94-94"];
m55_26 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="var wasEnqueued = false", span="78-78"];
m55_34 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="Logger.Info(''Schedule poller has been stopped.'')", span="104-104"];
m55_27 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="JobServer.RetryOnException(\r\n                        () =>\r\n                        {\r\n                            wasEnqueued = EnqueueNextScheduledJob();\r\n                        }, _cts.Token.WaitHandle)", span="80-84"];
m55_28 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="86-86"];
m55_33 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="_cts.Token.WaitHandle.WaitOne(_pollInterval)", span="98-98"];
m55_32 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="enqueued = 0", span="95-95"];
m55_35 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label=Exception, span="106-106"];
m55_36 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="Logger.Fatal(\r\n                    ''Unexpected exception caught in the schedule poller. Scheduled jobs will not be added to their queues.'',\r\n                    ex)", span="108-110"];
m55_37 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="68-68"];
m55_40 [cluster="Unk.InfoFormat", file="ServerHeartbeatFacts.cs", label="Entry Unk.InfoFormat", span=""];
m55_21 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.Common.States.State, string[])", file="ServerHeartbeatFacts.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.Common.States.State, string[])", span="86-86"];
m55_46 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="114-114"];
m55_47 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs", label="_cts.Cancel()", span="116-116"];
m55_48 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs", label="thread.Join()", span="117-117"];
m55_49 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="114-114"];
m55_42 [cluster="Unk.Fatal", file="ServerHeartbeatFacts.cs", label="Entry Unk.Fatal", span=""];
m55_17 [cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="26-26"];
m55_4 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40"];
m55_5 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="var connection = _storage.GetConnection()", span="42-42"];
m55_6 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="44-44"];
m55_7 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="47-48"];
m55_10 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="var stateMachine = new StateMachine(connection)", span="55-55"];
m55_8 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="String.IsNullOrEmpty(jobId)", span="50-50"];
m55_12 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="stateMachine.TryToChangeState(jobId, enqueuedState, new [] { ScheduledState.StateName })", span="61-61"];
m55_9 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="return false;", span="52-52"];
m55_11 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="56-59"];
m55_13 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="return true;", span="63-63"];
m55_14 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40"];
m55_43 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Entry lambda expression", span="81-84"];
m55_44 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="wasEnqueued = EnqueueNextScheduledJob()", span="83-83"];
m55_45 [cluster="lambda expression", file="ServerHeartbeatFacts.cs", label="Exit lambda expression", span="81-84"];
m55_19 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m55_50 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="ServerHeartbeatFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m55_15 [cluster="HangFire.JobStorage.GetConnection()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m55_52 [file="ServerHeartbeatFacts.cs", label="HangFire.Server.Components.SchedulePoller", span=""];
m56_2 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m56_3 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ServerJobCancellationTokenFacts.cs", label="Exit HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m56_0 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m56_1 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="ServerJobCancellationTokenFacts.cs", label="Exit HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m57_0 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="40-40"];
m57_1 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Servers.Add(server)", span="44-44"];
m57_2 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="server.Start()", span="46-46"];
m57_3 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var context = new OwinContext(app.Properties)", span="48-48"];
m57_6 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token.Register(server.Dispose)", span="53-53"];
m57_4 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="49-49"];
m57_5 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token != CancellationToken.None", span="51-51"];
m57_7 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="40-40"];
m57_11 [cluster="Unk.>", file="ServerOwinExtensions.cs", label="Entry Unk.>", span=""];
m57_12 [cluster="Unk.Register", file="ServerOwinExtensions.cs", label="Entry Unk.Register", span=""];
m57_9 [cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="157-157"];
m57_8 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m57_10 [cluster="OwinContext.cstr", file="ServerOwinExtensions.cs", label="Entry OwinContext.cstr", span=""];
m60_45 [cluster="System.Text.StringBuilder.Append(int)", file="ServerWatchdog.cs", label="Entry System.Text.StringBuilder.Append(int)", span="0-0"];
m60_63 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="128-128"];
m60_64 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs", label="var writer = new StringWriter()", span="130-130"];
m60_65 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs", label="MarkupStackTrace(stackTrace, writer)", span="132-132"];
m60_66 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs", label="return new HtmlString(writer.ToString());", span="133-133"];
m60_67 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="128-128"];
m60_123 [cluster="string.Trim()", file="ServerWatchdog.cs", label="Entry string.Trim()", span="0-0"];
m60_11 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerWatchdog.cs", label="Guid guid", span="47-47"];
m60_120 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="241-241"];
m60_126 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(text != null)", span="243-243"];
m60_127 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(group != null)", span="244-244"];
m60_128 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(writer != null)", span="245-245"];
m60_129 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs", label="return group.Success\r\n                 ? StackFrameSpan(text, anchor, klass, group.Value, group.Index, group.Length, writer)\r\n                 : anchor;", span="247-249"];
m60_130 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, System.Text.RegularExpressions.Group, System.IO.TextWriter)", span="241-241"];
m60_6 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="ServerWatchdog.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", prediction=98, span="41-41"];
m60_69 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="158-158"];
m60_71 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(text != null)", span="160-160"];
m60_72 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(writer != null)", span="161-161"];
m60_74 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="_reStackTrace.Matches(text)", span="165-165"];
m60_75 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HtmlEncode(text.Substring(anchor, match.Index - anchor), writer)", span="167-167"];
m60_76 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="MarkupStackFrame(text, match, writer)", span="168-168"];
m60_78 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HtmlEncode(text.Substring(anchor), writer)", span="172-172"];
m60_73 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="int anchor = 0", span="163-163"];
m60_77 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = match.Index + match.Length", span="169-169"];
m60_79 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackTrace(string, System.IO.TextWriter)", span="158-158"];
m60_42 [cluster="System.Text.StringBuilder.Append(string)", file="ServerWatchdog.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m60_82 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="273-273"];
m60_145 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(writer != null)", span="275-275"];
m60_146 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HttpUtility.HtmlEncode(text, writer)", span="276-276"];
m60_147 [cluster="HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.HtmlEncode(string, System.IO.TextWriter)", span="273-273"];
m60_148 [cluster="Unk.HtmlEncode", file="ServerWatchdog.cs", label="Entry Unk.HtmlEncode", span=""];
m60_52 [cluster="Unk.Join", file="ServerWatchdog.cs", label="Entry Unk.Join", span=""];
m60_0 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m60_1 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs", label="job == null", span="32-32"];
m60_19 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="var builder = new StringBuilder()", span="57-57"];
m60_13 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m60_41 [cluster="System.Text.StringBuilder.StringBuilder()", file="ServerWatchdog.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m60_125 [cluster="System.IO.TextWriter.Write(char)", file="ServerWatchdog.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m60_16 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m60_47 [cluster="System.Text.StringBuilder.ToString()", file="ServerWatchdog.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m60_5 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="ServerWatchdog.cs", label="var connection = context.Storage.GetConnection()", prediction=99, span="39-39"];
m60_131 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="252-252"];
m60_132 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(text != null)", span="254-254"];
m60_133 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(writer != null)", span="255-255"];
m60_134 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HtmlEncode(text.Substring(anchor, index - anchor), writer)", span="257-257"];
m60_135 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Span(writer, klass, value)", span="258-258"];
m60_136 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="return index + length;", span="259-259"];
m60_137 [cluster="HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.StackFrameSpan(string, int, string, string, int, int, System.IO.TextWriter)", span="252-252"];
m60_80 [cluster="System.Diagnostics.Debug.Assert(bool)", file="ServerWatchdog.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m60_44 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="ServerWatchdog.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m60_15 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57"];
m60_20 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m60_21 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="60-60"];
m60_22 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration = duration.Value.Duration()", span="63-63"];
m60_24 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.AppendFormat(''{0}d '', duration.Value.Days)", span="67-67"];
m60_26 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.AppendFormat(''{0}h '', duration.Value.Hours)", span="72-72"];
m60_28 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.AppendFormat(''{0}m '', duration.Value.Minutes)", span="77-77"];
m60_30 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.Append(duration.Value.Seconds)", span="82-82"];
m60_32 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.AppendFormat(''.{0}'', duration.Value.Milliseconds)", span="85-85"];
m60_33 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.Append(''s '')", span="88-88"];
m60_35 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.AppendFormat(''{0}ms '', duration.Value.Milliseconds)", span="94-94"];
m60_36 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.Length <= 1", span="98-98"];
m60_37 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.Append('' <1ms '')", span="100-100"];
m60_38 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="builder.Remove(builder.Length - 1, 1)", span="103-103"];
m60_39 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="return builder.ToString();", span="105-105"];
m60_23 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration.Value.Days > 0", span="65-65"];
m60_25 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration.Value.Hours > 0", span="70-70"];
m60_27 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration.Value.Minutes > 0", span="75-75"];
m60_29 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration.Value.Seconds > 0", span="80-80"];
m60_31 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration.Value.Milliseconds > 0", span="83-83"];
m60_34 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="duration.Value.Milliseconds > 0", span="92-92"];
m60_40 [cluster="HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="53-53"];
m60_81 [cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="ServerWatchdog.cs", label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0"];
m60_56 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="113-113"];
m60_57 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="string label", span="115-115"];
m60_58 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="queue != null", span="116-116"];
m60_59 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="label = ''<span class=\''label label-queue label-primary\''>'' + queue + ''</span>''", span="118-118"];
m60_60 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="label = ''<span class=\''label label-queue label-danger\''><i>Unknown</i></span>''", span="122-122"];
m60_61 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="return new HtmlString(label);", span="125-125"];
m60_62 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.QueueLabel(string)", span="113-113"];
m60_14 [cluster="Hangfire.Logging.ILog.Info(string)", file="ServerWatchdog.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m60_7 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="ServerWatchdog.cs", label="serversRemoved != 0", prediction=100, span="42-42"];
m60_8 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="ServerWatchdog.cs", label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", prediction=98, span="44-46"];
m60_9 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="context.Wait(_checkInterval)", span="50-50"];
m60_48 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="108-108"];
m60_49 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ServerWatchdog.cs", label="return @String.Join('', '', properties.Select(x => String.Format(''{0}: \''{1}\'''', x.Key, x.Value)));", span="110-110"];
m60_50 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="108-108"];
m60_43 [cluster="System.TimeSpan.Duration()", file="ServerWatchdog.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m60_53 [cluster="lambda expression", file="ServerWatchdog.cs", label="Entry lambda expression", span="110-110"];
m60_54 [cluster="lambda expression", file="ServerWatchdog.cs", label="String.Format(''{0}: \''{1}\'''', x.Key, x.Value)", span="110-110"];
m60_55 [cluster="lambda expression", file="ServerWatchdog.cs", label="Exit lambda expression", span="110-110"];
m60_70 [cluster="System.IO.StringWriter.ToString()", file="ServerWatchdog.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m60_10 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m60_51 [cluster="Unk.Select", file="ServerWatchdog.cs", label="Entry Unk.Select", span=""];
m60_121 [cluster="string.Split(params char[])", file="ServerWatchdog.cs", label="Entry string.Split(params char[])", span="0-0"];
m60_68 [cluster="System.IO.StringWriter.StringWriter()", file="ServerWatchdog.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m60_122 [cluster="string.LastIndexOf(char)", file="ServerWatchdog.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m60_83 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="175-175"];
m60_85 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(text != null)", span="177-177"];
m60_86 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(match != null)", span="178-178"];
m60_87 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Debug.Assert(writer != null)", span="179-179"];
m60_88 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="int anchor = match.Index", span="181-181"];
m60_89 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="GroupCollection groups = match.Groups", span="182-182"];
m60_91 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HtmlEncode(text.Substring(anchor, type.Index - anchor), writer)", span="189-189"];
m60_93 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="writer.Write(''<span class='st-frame'>'')", span="191-191"];
m60_94 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = StackFrameSpan(text, anchor, ''st-type'', type, writer)", span="192-192"];
m60_95 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = StackFrameSpan(text, anchor, ''st-method'', groups[''method''], writer)", span="193-193"];
m60_97 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HtmlEncode(text.Substring(anchor, parameters.Index - anchor), writer)", span="200-200"];
m60_98 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="writer.Write(''<span class='st-params'>('')", span="201-201"];
m60_103 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Span(writer, ''st-param'', parameter.Trim())", span="208-208"];
m60_105 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="writer.Write('', '')", span="213-213"];
m60_107 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Span(writer, ''st-param-type'', argType)", span="215-215"];
m60_108 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="writer.Write(' ')", span="216-216"];
m60_110 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Span(writer, ''st-param-name'', argName)", span="218-218"];
m60_111 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="writer.Write('')</span>'')", span="221-221"];
m60_113 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = StackFrameSpan(text, anchor, ''st-file'', groups[''file''], writer)", span="228-228"];
m60_114 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = StackFrameSpan(text, anchor, ''st-line'', groups[''line''], writer)", span="229-229"];
m60_115 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="writer.Write(''</span>'')", span="231-231"];
m60_116 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="int end = match.Index + match.Length", span="237-237"];
m60_117 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="HtmlEncode(text.Substring(anchor, end - anchor), writer)", span="238-238"];
m60_90 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Group type = groups[''type'']", span="188-188"];
m60_96 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Group parameters = groups[''params'']", span="199-199"];
m60_92 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = type.Index", span="190-190"];
m60_100 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="parameters.Captures[0].Value.Split(',')", span="203-203"];
m60_112 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="anchor = parameters.Index + parameters.Length", span="222-222"];
m60_99 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="int position = 0", span="202-202"];
m60_104 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="position++ > 0", span="212-212"];
m60_101 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="int spaceIndex = parameter.LastIndexOf(' ')", span="205-205"];
m60_106 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="string argType = parameter.Substring(0, spaceIndex).Trim()", span="214-214"];
m60_109 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="string argName = parameter.Substring(spaceIndex + 1).Trim()", span="217-217"];
m60_102 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="spaceIndex <= 0", span="206-206"];
m60_118 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="175-175"];
m60_4 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m60_46 [cluster="System.Text.StringBuilder.Remove(int, int)", file="ServerWatchdog.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m60_119 [cluster="System.IO.TextWriter.Write(string)", file="ServerWatchdog.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m60_124 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="Entry HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="262-262"];
m60_138 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="Debug.Assert(writer != null)", span="264-264"];
m60_139 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="writer.Write(''<span class=''')", span="266-266"];
m60_140 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="writer.Write(klass)", span="267-267"];
m60_141 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="writer.Write('''>'')", span="268-268"];
m60_142 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="HtmlEncode(value, writer)", span="269-269"];
m60_143 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="writer.Write(''</span>'')", span="270-270"];
m60_144 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="ServerWatchdog.cs", label="Exit HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="262-262"];
m60_84 [cluster="string.Substring(int)", file="ServerWatchdog.cs", label="Entry string.Substring(int)", span="0-0"];
m61_8 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", color=green, community=0, file="ServerWatchdogFacts.cs", label="return new AspNetCoreLog(_loggerFactory.CreateLogger(name));", prediction=102, span="35-35"];
m61_9 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="ServerWatchdogFacts.cs", label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33"];
m61_5 [cluster="HangFire.PreserveCultureFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerWatchdogFacts.cs", label="Exit HangFire.PreserveCultureFilter.OnCreating(HangFire.Filters.CreatingContext)", span="10-10"];
m61_6 [cluster="Unk.nameof", file="ServerWatchdogFacts.cs", label="Entry Unk.nameof", span=""];
m61_11 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="filterContext == null", span="26-26"];
m61_10 [cluster="AspNetCoreLog.cstr", file="ServerWatchdogFacts.cs", label="Entry AspNetCoreLog.cstr", span=""];
m61_13 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="var cultureName = filterContext.JobDescriptor\r\n                .GetParameter<string>(''CurrentCulture'')", span="28-29"];
m61_14 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="var uiCultureName = filterContext.JobDescriptor\r\n                .GetParameter<string>(''CurrentUICulture'')", span="30-31"];
m61_20 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="filterContext.Items[''PreviousUICulture''] = thread.CurrentUICulture", span="43-43"];
m61_12 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="Hangfire.AspNetCore.AspNetCoreLogProvider", span=""];
m61_16 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="!String.IsNullOrEmpty(cultureName)", span="35-35"];
m61_18 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="thread.CurrentCulture = CultureInfo.GetCultureInfo(cultureName)", span="38-38"];
m61_15 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="var thread = Thread.CurrentThread", span="33-33"];
m61_19 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="!String.IsNullOrEmpty(uiCultureName)", span="41-41"];
m61_21 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="thread.CurrentUICulture = CultureInfo.GetCultureInfo(uiCultureName)", span="44-44"];
m61_22 [cluster="HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="ServerWatchdogFacts.cs", label="Exit HangFire.PreserveCultureFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="24-24"];
m61_24 [cluster="string.IsNullOrEmpty(string)", file="ServerWatchdogFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m61_7 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="73-73"];
m61_35 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerWatchdogFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m61_0 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="ServerWatchdogFacts.cs", label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27"];
m61_3 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", color=green, community=0, file="ServerWatchdogFacts.cs", label="_loggerFactory = loggerFactory", prediction=103, span="30-30"];
m61_4 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="ServerWatchdogFacts.cs", label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27"];
m61_23 [cluster="HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", file="ServerWatchdogFacts.cs", label="Entry HangFire.Server.ServerJobDescriptor.GetParameter<T>(string)", span="72-72"];
m61_25 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="ServerWatchdogFacts.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m61_26 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="Entry HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="48-48"];
m61_27 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="filterContext == null", span="50-50"];
m61_30 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="filterContext.Items.ContainsKey(''PreviousCulture'')", span="53-53"];
m61_31 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="thread.CurrentCulture = (CultureInfo) filterContext.Items[''PreviousCulture'']", span="55-55"];
m61_32 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="filterContext.Items.ContainsKey(''PreviousUICulture'')", span="57-57"];
m61_33 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="thread.CurrentUICulture = (CultureInfo) filterContext.Items[''PreviousUICulture'']", span="59-59"];
m61_28 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="throw new ArgumentNullException(''filterContext'');", span="50-50"];
m61_29 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="var thread = Thread.CurrentThread", span="52-52"];
m61_34 [cluster="HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="ServerWatchdogFacts.cs", label="Exit HangFire.PreserveCultureFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="48-48"];
m63_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerDistributedLock.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m63_0 [cluster="lambda expression", file="SqlServerDistributedLock.cs", label="Entry lambda expression", span="42-42"];
m63_1 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLock.cs", label="new Dictionary<string, int>()", prediction=104, span="42-42"];
m63_23 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m63_63 [cluster="string.Format(string, object, object)", file="SqlServerDistributedLock.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m63_60 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m63_38 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132"];
m63_64 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="var parameters = new DynamicParameters()", span="134-134"];
m63_65 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Resource'', resource)", span="135-135"];
m63_68 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="139-142"];
m63_71 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'',\r\n                        resource,\r\n                        releaseResult));", span="148-152"];
m63_70 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="releaseResult < 0", span="146-146"];
m63_66 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="136-136"];
m63_67 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="137-137"];
m63_69 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="144-144"];
m63_72 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="132-132"];
m63_61 [cluster="Unk.ContainsKey", file="SqlServerDistributedLock.cs", label="Entry Unk.ContainsKey", span=""];
m63_22 [cluster="string.Format(string, object)", file="SqlServerDistributedLock.cs", label="Entry string.Format(string, object)", span="0-0"];
m63_24 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m63_58 [cluster="Unk.>", file="SqlServerDistributedLock.cs", label="Entry Unk.>", span=""];
m63_55 [cluster="DynamicParameters.cstr", file="SqlServerDistributedLock.cs", label="Entry DynamicParameters.cstr", span=""];
m63_56 [cluster="Unk.Add", file="SqlServerDistributedLock.cs", label="Entry Unk.Add", span=""];
m63_4 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50"];
m63_5 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs", label="storage == null", prediction=105, span="52-52"];
m63_6 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(''storage'');", prediction=106, span="52-52"];
m63_7 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="String.IsNullOrEmpty(resource)", span="53-53"];
m63_14 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", prediction=107, span="60-60"];
m63_13 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="_connection = storage.CreateAndOpenConnection()", span="58-58"];
m63_15 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Acquire(_connection, _resource, timeout)", span="62-62"];
m63_17 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource]++", span="67-67"];
m63_9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="(timeout.TotalSeconds + CommandTimeoutAdditionSeconds) > Int32.MaxValue", span="54-54"];
m63_11 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="_storage = storage", span="56-56"];
m63_12 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="_resource = resource", span="57-57"];
m63_8 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new ArgumentNullException(''resource'');", span="53-53"];
m63_10 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new ArgumentException(string.Format(''The timeout specified is too large. Please supply a timeout equal to or less than {0} seconds'', Int32.MaxValue - CommandTimeoutAdditionSeconds), ''timeout'');", span="54-54"];
m63_16 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource] = 1", span="63-63"];
m63_18 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="50-50"];
m63_3 [cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="SqlServerDistributedLock.cs", label="Exit HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="27-27"];
m63_20 [cluster="string.IsNullOrEmpty(string)", file="SqlServerDistributedLock.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m63_25 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94"];
m63_47 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0, file="SqlServerDistributedLock.cs", label="var commandTimeout = (int)(timeout.TotalSeconds + CommandTimeoutAdditionSeconds)", prediction=108, span="105-105"];
m63_45 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockTimeout'', timeout.TotalMilliseconds)", span="101-101"];
m63_46 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="102-102"];
m63_48 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="connection.Execute(\r\n                @''sp_getapplock'',\r\n                parameters,\r\n                commandTimeout: commandTimeout,\r\n                commandType: CommandType.StoredProcedure)", span="107-111"];
m63_40 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="var parameters = new DynamicParameters()", span="96-96"];
m63_44 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="100-100"];
m63_49 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="113-113"];
m63_41 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@Resource'', resource)", span="97-97"];
m63_52 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new DistributedLockTimeoutException(resource);", span="119-119"];
m63_53 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                    ''Could not place a lock on the resource '{0}': {1}.'',\r\n                    resource,\r\n                    LockErrorMessages.ContainsKey(lockResult)\r\n                        ? LockErrorMessages[lockResult]\r\n                        : String.Format(''Server returned the '{0}' error.'', lockResult)));", span="122-128"];
m63_42 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@DbPrincipal'', ''public'')", span="98-98"];
m63_43 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="parameters.Add(''@LockMode'', LockMode)", span="99-99"];
m63_50 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="lockResult < 0", span="115-115"];
m63_51 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="lockResult == -1", span="117-117"];
m63_54 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="94-94"];
m63_2 [cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="SqlServerDistributedLock.cs", label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="27-27"];
m63_59 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="SqlServerDistributedLock.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m63_21 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerDistributedLock.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m63_57 [cluster="Unk.Execute", file="SqlServerDistributedLock.cs", label="Entry Unk.Execute", span=""];
m63_62 [cluster="Unk.Format", file="SqlServerDistributedLock.cs", label="Entry Unk.Format", span=""];
m63_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerDistributedLock.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m63_26 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71"];
m63_29 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="SqlServerDistributedLock.cs", label="_completed = true", prediction=109, span="75-75"];
m63_27 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label=_completed, span="73-73"];
m63_30 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="!AcquiredLocks.Value.ContainsKey(_resource)", span="77-77"];
m63_35 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="SqlServerDistributedLock.cs", label="Release(_connection, _resource)", prediction=107, span="85-85"];
m63_33 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource] != 0", span="81-81"];
m63_36 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value.Remove(_resource)", prediction=107, span="86-86"];
m63_32 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="AcquiredLocks.Value[_resource]--", span="79-79"];
m63_28 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="73-73"];
m63_31 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="77-77"];
m63_34 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="return;", span="81-81"];
m63_37 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLock.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="71-71"];
m63_73 [file="SqlServerDistributedLock.cs", label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
m64_0 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLockException.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m64_1 [cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="SqlServerDistributedLockException.cs", label="Exit Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22"];
m65_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerFetchedJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m65_21 [cluster="Unk.Commit", file="SqlServerFetchedJob.cs", label="Entry Unk.Commit", span=""];
m65_9 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="queue == null", span="40-40"];
m65_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58"];
m65_23 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="_transaction.Rollback()", span="60-60"];
m65_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58"];
m65_31 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230"];
m65_5 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="transaction == null", span="38-38"];
m65_30 [cluster="Unk.Dispose", file="SqlServerFetchedJob.cs", label="Entry Unk.Dispose", span=""];
m65_6 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''transaction'');", span="38-38"];
m65_7 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="jobId == null", span="39-39"];
m65_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''jobId'');", span="39-39"];
m65_0 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", span="29-29"];
m65_1 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="storage == null", span="36-36"];
m65_2 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m65_3 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="connection == null", span="37-37"];
m65_12 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", color=green, community=0, file="SqlServerFetchedJob.cs", label="_connection = connection", prediction=112, span="43-43"];
m65_11 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="_storage = storage", span="42-42"];
m65_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="_transaction = transaction", span="44-44"];
m65_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="JobId = jobId", span="46-46"];
m65_15 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="Queue = queue", span="47-47"];
m65_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerFetchedJob.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28"];
m65_10 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''queue'');", span="40-40"];
m65_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", span="29-29"];
m65_18 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53"];
m65_19 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", color=green, community=0, file="SqlServerFetchedJob.cs", label="_transaction.Commit()", prediction=113, span="55-55"];
m65_20 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53"];
m65_26 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63"];
m65_27 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs", label="_transaction.Dispose()", prediction=113, span="65-65"];
m65_28 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs", label="_storage.ReleaseConnection(_connection)", prediction=113, span="66-66"];
m65_29 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63"];
m65_25 [cluster="Unk.Rollback", file="SqlServerFetchedJob.cs", label="Entry Unk.Rollback", span=""];
m65_32 [file="SqlServerFetchedJob.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m66_57 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119"];
m66_88 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="return new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, jobId, queue);", prediction=116, span="121-121"];
m66_89 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119"];
m66_14 [cluster="Unk.Equal", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.Equal", span=""];
m66_7 [cluster="Mock<SqlServerStorage>.cstr", file="SqlServerFetchedJobFacts.cs", label="Entry Mock<SqlServerStorage>.cstr", span=""];
m66_19 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36"];
m66_21 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerFetchedJobFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="41-41"];
m66_22 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36"];
m66_5 [cluster="Mock<IDbConnection>.cstr", file="SqlServerFetchedJobFacts.cs", label="Entry Mock<IDbConnection>.cstr", span=""];
m66_13 [cluster="Unk.>", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.>", span=""];
m66_0 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19"];
m66_1 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="SqlServerFetchedJobFacts.cs", label="_connection = new Mock<IDbConnection>()", span="21-21"];
m66_4 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19"];
m66_9 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m66_12 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m66_18 [cluster="SqlServerFetchedJob.cstr", file="SqlServerFetchedJobFacts.cs", label="Entry SqlServerFetchedJob.cstr", span=""];
m66_47 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72"];
m66_49 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs", label="Assert.Equal(JobId, fetchedJob.JobId)", span="76-76"];
m66_50 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="Assert.Equal(Queue, fetchedJob.Queue)", prediction=117, span="77-77"];
m66_51 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72"];
m66_73 [cluster="Unk.Rollback", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.Rollback", span=""];
m66_26 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45"];
m66_29 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45"];
m66_74 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107"];
m66_75 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="var processingJob = CreateFetchedJob(''1'', ''queue'')", prediction=118, span="109-109"];
m66_76 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="processingJob.Dispose()", prediction=119, span="112-112"];
m66_78 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="_connection.Verify(x => x.Dispose())", prediction=116, span="116-116"];
m66_79 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107"];
m66_33 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54"];
m66_35 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", prediction=121, span="59-59"];
m66_36 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54"];
m66_6 [cluster="Mock<IDbTransaction>.cstr", file="SqlServerFetchedJobFacts.cs", label="Entry Mock<IDbTransaction>.cstr", span=""];
m66_84 [cluster="Unk.Dispose", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.Dispose", span=""];
m66_58 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53"];
m66_85 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="116-116"];
m66_15 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="30-30"];
m66_17 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="30-30"];
m66_23 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="39-39"];
m66_25 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="39-39"];
m66_30 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="48-48"];
m66_32 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="48-48"];
m66_37 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="57-57"];
m66_39 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="57-57"];
m66_44 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="66-66"];
m66_45 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null)", prediction=116, span="66-66"];
m66_46 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="66-66"];
m66_60 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="90-90"];
m66_61 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="x.Commit()", prediction=123, span="90-90"];
m66_62 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="90-90"];
m66_70 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="103-103"];
m66_71 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="x.Rollback()", prediction=124, span="103-103"];
m66_72 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="103-103"];
m66_81 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="115-115"];
m66_83 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="115-115"];
m66_86 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="x.Dispose()", prediction=125, span="116-116"];
m66_87 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="116-116"];
m66_64 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94"];
m66_65 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="var processingJob = CreateFetchedJob(''1'', ''default'')", prediction=126, span="97-97"];
m66_66 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="processingJob.Requeue()", prediction=127, span="100-100"];
m66_67 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="_transaction.Verify(x => x.Rollback())", prediction=116, span="103-103"];
m66_68 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94"];
m66_63 [cluster="Unk.Commit", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.Commit", span=""];
m66_69 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58"];
m66_8 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m66_80 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63"];
m66_59 [cluster="Unk.Verify", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.Verify", span=""];
m66_52 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81"];
m66_53 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="var processingJob = CreateFetchedJob(''1'', ''default'')", prediction=129, span="84-84"];
m66_54 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="processingJob.RemoveFromQueue()", prediction=130, span="87-87"];
m66_55 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="_transaction.Verify(x => x.Commit())", prediction=116, span="90-90"];
m66_56 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81"];
m66_40 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerFetchedJobFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63"];
m66_41 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null))", prediction=132, span="65-66"];
m66_42 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", prediction=133, span="68-68"];
m66_43 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SqlServerFetchedJobFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63"];
m66_90 [file="SqlServerFetchedJobFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", span=""];
m68_26 [cluster="Unk.GetTestJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.GetTestJob", span=""];
m68_375 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445"];
m68_376 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", prediction=134, span="447-458"];
m68_377 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="445-445"];
m68_432 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520"];
m68_433 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", prediction=135, span="522-533"];
m68_434 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="520-520"];
m68_248 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m68_78 [cluster="Mock<IState>.cstr", file="SqlServerMonitoringApi.cs", label="Entry Mock<IState>.cstr", span=""];
m68_348 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m68_12 [cluster="Unk.UseConnection", file="SqlServerMonitoringApi.cs", label="Entry Unk.UseConnection", span=""];
m68_299 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345"];
m68_300 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", prediction=136, span="347-358"];
m68_301 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="345-345"];
m68_82 [cluster="Unk.Equal", file="SqlServerMonitoringApi.cs", label="Entry Unk.Equal", span=""];
m68_286 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m68_179 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m68_96 [cluster="Unk.SetJobState", file="SqlServerMonitoringApi.cs", label="Entry Unk.SetJobState", span=""];
m68_235 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264"];
m68_236 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", prediction=137, span="266-275"];
m68_237 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="264-264"];
m68_34 [cluster="Unk.ExpireJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.ExpireJob", span=""];
m68_3 [cluster="Unk.>", file="SqlServerMonitoringApi.cs", label="Entry Unk.>", span=""];
m68_131 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m68_132 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149"];
m68_133 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m68_444 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537"];
m68_445 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="539-550"];
m68_446 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="537-537"];
m68_145 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m68_146 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerMonitoringApi.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156"];
m68_147 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m68_399 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479"];
m68_400 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", prediction=138, span="481-497"];
m68_401 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="479-479"];
m68_417 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193"];
m68_22 [cluster="Unk.Query", file="SqlServerMonitoringApi.cs", label="Entry Unk.Query", span=""];
m68_148 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m68_149 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="162-171"];
m68_150 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m68_97 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m68_99 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", prediction=139, span="113-135"];
m68_98 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111"];
m68_100 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m68_206 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227"];
m68_207 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", prediction=140, span="229-243"];
m68_208 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="227-227"];
m68_473 [cluster="System.Action<T>.Invoke(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m68_409 [cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToArray", span=""];
m68_33 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m68_27 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m68_24 [cluster="Unk.ToString", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToString", span=""];
m68_223 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247"];
m68_224 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", prediction=141, span="249-260"];
m68_225 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="247-247"];
m68_387 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462"];
m68_388 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="464-475"];
m68_389 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="462-462"];
m68_0 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m68_1 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerMonitoringApi.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18"];
m68_2 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m68_48 [cluster="Unk.NotNull", file="SqlServerMonitoringApi.cs", label="Entry Unk.NotNull", span=""];
m68_130 [cluster="Unk.AddJobState", file="SqlServerMonitoringApi.cs", label="Entry Unk.AddJobState", span=""];
m68_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m68_162 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175"];
m68_163 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="177-191"];
m68_164 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="175-175"];
m68_311 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m68_25 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578"];
m68_474 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection)", prediction=142, span="582-582"];
m68_475 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs", label="action(transaction)", span="584-584"];
m68_476 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs", label="transaction.Commit()", span="585-585"];
m68_477 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="578-578"];
m68_79 [cluster="Unk.Setup", file="SqlServerMonitoringApi.cs", label="Entry Unk.Setup", span=""];
m68_324 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379"];
m68_325 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="381-392"];
m68_326 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="379-379"];
m68_29 [cluster="Unk.Null", file="SqlServerMonitoringApi.cs", label="Entry Unk.Null", span=""];
m68_374 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186"];
m68_180 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195"];
m68_181 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", prediction=143, span="197-208"];
m68_182 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="195-195"];
m68_478 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m68_92 [cluster="Unk.SerializeData", file="SqlServerMonitoringApi.cs", label="Entry Unk.SerializeData", span=""];
m68_361 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427"];
m68_362 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", prediction=144, span="429-441"];
m68_363 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="427-427"];
m68_35 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m68_37 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", prediction=145, span="52-64"];
m68_36 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m68_38 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m68_273 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313"];
m68_274 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", prediction=146, span="315-324"];
m68_275 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="313-313"];
m68_121 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="119-119"];
m68_13 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="29-41"];
m68_15 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", prediction=147, span="32-32"];
m68_14 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31"];
m68_16 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34"];
m68_19 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", prediction=148, span="39-39"];
m68_17 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var job = GetTestJob(sql, jobId)", prediction=149, span="36-36"];
m68_18 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", prediction=150, span="37-37"];
m68_20 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Null(anotherJob.ExpireAt)", prediction=151, span="40-40"];
m68_21 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="29-41"];
m68_39 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="52-64"];
m68_40 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", prediction=152, span="54-54"];
m68_41 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m68_42 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.PersistJob(jobId))", prediction=152, span="57-57"];
m68_50 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.PersistJob(jobId)", prediction=152, span="57-57"];
m68_43 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m68_49 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="57-57"];
m68_45 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", prediction=155, span="62-62"];
m68_44 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Null(job.ExpireAt)", span="60-60"];
m68_46 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.NotNull(anotherJob.ExpireAt)", prediction=156, span="63-63"];
m68_51 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="57-57"];
m68_47 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="52-64"];
m68_101 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="113-135"];
m68_183 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="197-208"];
m68_184 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", prediction=152, span="199-203"];
m68_185 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", prediction=158, span="205-205"];
m68_188 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="199-203"];
m68_186 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(2, recordCount)", prediction=159, span="207-207"];
m68_187 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="197-208"];
m68_190 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.IncrementCounter(''my-key'')", prediction=160, span="202-202"];
m68_189 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.IncrementCounter(''my-key'')", span="201-201"];
m68_191 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="199-203"];
m68_195 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="214-223"];
m68_197 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", prediction=161, span="218-218"];
m68_196 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="216-216"];
m68_198 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", prediction=162, span="220-220"];
m68_199 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(-1, record.Value)", prediction=161, span="221-221"];
m68_200 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", prediction=161, span="222-222"];
m68_201 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="214-223"];
m68_209 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="229-243"];
m68_211 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", prediction=165, span="233-233"];
m68_210 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="231-231"];
m68_212 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", prediction=166, span="235-235"];
m68_213 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(-1, record.Value)", span="236-236"];
m68_214 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.NotNull(record.ExpireAt)", prediction=165, span="237-237"];
m68_215 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var expireAt = (DateTime)record.ExpireAt", span="239-239"];
m68_226 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="249-260"];
m68_238 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="266-275"];
m68_240 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", prediction=168, span="270-270"];
m68_239 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="268-268"];
m68_241 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", prediction=169, span="272-272"];
m68_242 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-value'', record.Value)", span="273-273"];
m68_243 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(0.0, record.Score, 2)", span="274-274"];
m68_276 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="315-324"];
m68_279 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", prediction=170, span="321-321"];
m68_278 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="319-319"];
m68_280 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-value'', record.Value)", prediction=171, span="322-322"];
m68_281 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(3.2, record.Score, 3)", prediction=171, span="323-323"];
m68_282 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="315-324"];
m68_290 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="330-341"];
m68_291 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", prediction=152, span="332-336"];
m68_292 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", prediction=174, span="338-338"];
m68_295 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="332-336"];
m68_293 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(3.2, record.Score, 3)", span="340-340"];
m68_297 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", prediction=175, span="335-335"];
m68_296 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="334-334"];
m68_298 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="332-336"];
m68_302 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="347-358"];
m68_303 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", prediction=152, span="349-353"];
m68_304 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="355-355"];
m68_307 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="349-353"];
m68_315 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="364-375"];
m68_339 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="398-406"];
m68_343 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-value'', record.Value)", prediction=177, span="405-405"];
m68_341 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="402-402"];
m68_342 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", span="404-404"];
m68_344 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="398-406"];
m68_364 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="429-441"];
m68_365 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", prediction=152, span="431-436"];
m68_366 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="438-438"];
m68_369 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="431-436"];
m68_370 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", prediction=179, span="433-433"];
m68_371 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", prediction=180, span="434-434"];
m68_372 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="435-435"];
m68_378 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="447-458"];
m68_379 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", prediction=152, span="449-453"];
m68_380 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="455-455"];
m68_383 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="449-453"];
m68_384 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", prediction=182, span="451-451"];
m68_385 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="452-452"];
m68_402 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="481-497"];
m68_403 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", prediction=152, span="483-490"];
m68_404 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="492-492"];
m68_410 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="483-490"];
m68_411 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''0'')", prediction=184, span="485-485"];
m68_412 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''1'')", span="486-486"];
m68_415 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.TrimList(''my-key'', 1, 2)", prediction=185, span="489-489"];
m68_414 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''3'')", span="488-488"];
m68_416 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="483-490"];
m68_435 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="522-533"];
m68_436 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", prediction=152, span="524-528"];
m68_437 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="530-530"];
m68_440 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="524-528"];
m68_459 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="556-567"];
m68_460 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", prediction=152, span="558-562"];
m68_461 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", prediction=188, span="564-564"];
m68_464 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="558-562"];
m68_462 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, recordCount)", span="566-566"];
m68_465 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''0'')", prediction=189, span="560-560"];
m68_466 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.TrimList(''another-key'', 1, 0)", prediction=190, span="561-561"];
m68_467 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="558-562"];
m68_64 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86"];
m68_65 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var job = GetTestJob(sql, jobId)", span="88-88"];
m68_68 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92"];
m68_107 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123"];
m68_108 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var job = GetTestJob(sql, jobId)", span="125-125"];
m68_135 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143"];
m68_152 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164"];
m68_166 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="179-179"];
m68_227 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="251-255"];
m68_253 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="283-287"];
m68_265 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="300-304"];
m68_277 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="317-317"];
m68_316 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="366-370"];
m68_328 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="383-387"];
m68_340 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="400-400"];
m68_353 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="414-418"];
m68_391 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="466-470"];
m68_422 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="505-511"];
m68_448 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="541-545"];
m68_5 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new SqlServerWriteOnlyTransaction(null)", span="18-18"];
m68_31 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34"];
m68_30 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="34-34"];
m68_58 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m68_59 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m68_71 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96"];
m68_102 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115"];
m68_111 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129"];
m68_136 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145"];
m68_153 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166"];
m68_167 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="181-181"];
m68_228 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="257-257"];
m68_254 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="289-289"];
m68_266 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="306-306"];
m68_317 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="372-372"];
m68_329 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="389-389"];
m68_354 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="420-420"];
m68_392 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="472-472"];
m68_423 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="513-513"];
m68_449 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="547-547"];
m68_72 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97"];
m68_112 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130"];
m68_137 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146"];
m68_172 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="189-189"];
m68_173 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="190-190"];
m68_216 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="241-241"];
m68_217 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="242-242"];
m68_69 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Null(anotherJob.StateName)", span="93-93"];
m68_70 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Null(anotherJob.StateId)", span="94-94"];
m68_109 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Null(job.StateName)", span="126-126"];
m68_110 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Null(job.StateId)", span="127-127"];
m68_139 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Null(record.FetchedAt)", span="148-148"];
m68_352 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="412-423"];
m68_67 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.NotNull(job.StateId)", span="90-90"];
m68_75 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.NotNull(jobState.CreatedAt)", span="100-100"];
m68_115 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.NotNull(jobState.CreatedAt)", span="133-133"];
m68_170 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.NotNull(record.ExpireAt)", span="185-185"];
m68_117 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="113-135"];
m68_66 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''State'', job.StateName)", span="89-89"];
m68_73 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''State'', jobState.Name)", span="98-98"];
m68_74 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99"];
m68_76 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101"];
m68_113 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''State'', jobState.Name)", span="131-131"];
m68_114 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132"];
m68_116 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134"];
m68_138 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''default'', record.Queue)", span="147-147"];
m68_154 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", span="168-168"];
m68_155 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, record.Value)", span="169-169"];
m68_156 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="170-170"];
m68_168 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''my-key'', record.Key)", span="183-183"];
m68_169 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, record.Value)", span="184-184"];
m68_229 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(2, recordCount)", span="259-259"];
m68_255 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(2, recordCount)", span="291-291"];
m68_267 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, recordCount)", span="308-308"];
m68_305 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(0, recordCount)", span="357-357"];
m68_318 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, recordCount)", span="374-374"];
m68_330 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, recordCount)", span="391-391"];
m68_355 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(2, recordCount)", span="422-422"];
m68_367 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(0, recordCount)", span="440-440"];
m68_381 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, recordCount)", span="457-457"];
m68_393 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(1, recordCount)", span="474-474"];
m68_405 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(2, records.Length)", span="494-494"];
m68_406 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''1'', records[0].Value)", span="495-495"];
m68_407 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(''2'', records[1].Value)", span="496-496"];
m68_424 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(2, recordCount)", span="515-515"];
m68_438 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(0, recordCount)", span="532-532"];
m68_450 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Assert.Equal(0, recordCount)", span="549-549"];
m68_159 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.IncrementCounter(''my-key'')", span="164-164"];
m68_202 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="216-216"];
m68_218 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="229-243"];
m68_219 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="231-231"];
m68_230 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="249-260"];
m68_244 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="266-275"];
m68_245 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="268-268"];
m68_294 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="330-341"];
m68_284 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="317-317"];
m68_306 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="347-358"];
m68_310 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="349-353"];
m68_308 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="351-351"];
m68_309 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="352-352"];
m68_319 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="364-375"];
m68_327 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="381-392"];
m68_368 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="429-441"];
m68_373 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="431-436"];
m68_346 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="400-400"];
m68_358 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="416-416"];
m68_359 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="417-417"];
m68_396 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="468-468"];
m68_413 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''2'')", span="487-487"];
m68_427 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''0'')", span="507-507"];
m68_428 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''1'')", span="508-508"];
m68_429 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''2'')", span="509-509"];
m68_441 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''0'')", span="526-526"];
m68_453 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.InsertToList(''my-key'', ''0'')", span="543-543"];
m68_382 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="447-458"];
m68_264 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="298-309"];
m68_386 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="449-453"];
m68_408 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="481-497"];
m68_57 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="75-102"];
m68_134 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="141-149"];
m68_151 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="162-171"];
m68_165 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="177-191"];
m68_430 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.TrimList(''my-key'', 1, 100)", span="510-510"];
m68_442 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.TrimList(''my-key'', 1, 100)", span="527-527"];
m68_454 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.TrimList(''my-key'', 1, 0)", span="544-544"];
m68_439 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="522-533"];
m68_443 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="524-528"];
m68_463 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="556-567"];
m68_60 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var state = new Mock<IState>()", span="80-80"];
m68_63 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="83-84"];
m68_93 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="86-86"];
m68_103 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var state = new Mock<IState>()", span="117-117"];
m68_106 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="120-121"];
m68_127 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="123-123"];
m68_141 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="143-143"];
m68_158 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="164-164"];
m68_176 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="179-179"];
m68_231 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="251-255"];
m68_252 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="281-292"];
m68_257 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="283-287"];
m68_269 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="300-304"];
m68_283 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="317-317"];
m68_320 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="366-370"];
m68_332 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="383-387"];
m68_345 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="400-400"];
m68_357 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="414-418"];
m68_390 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="464-475"];
m68_395 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="466-470"];
m68_421 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="503-516"];
m68_426 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="505-511"];
m68_447 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="539-550"];
m68_452 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="541-545"];
m68_4 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="18-18"];
m68_6 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="18-18"];
m68_32 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="34-34"];
m68_94 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.SetJobState(jobId, state.Object)", span="86-86"];
m68_128 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddJobState(jobId, state.Object)", span="123-123"];
m68_171 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="var expireAt = (DateTime) record.ExpireAt", span="187-187"];
m68_174 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="177-191"];
m68_140 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="141-149"];
m68_356 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="412-423"];
m68_77 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="75-102"];
m68_157 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="162-171"];
m68_256 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="281-292"];
m68_268 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="298-309"];
m68_331 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="381-392"];
m68_394 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="464-475"];
m68_425 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="503-516"];
m68_451 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="539-550"];
m68_160 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="164-164"];
m68_204 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="216-216"];
m68_203 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.DecrementCounter(''my-key'')", span="216-216"];
m68_221 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="231-231"];
m68_220 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="231-231"];
m68_247 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="268-268"];
m68_246 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="268-268"];
m68_258 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="285-285"];
m68_259 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="286-286"];
m68_270 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="302-302"];
m68_271 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="303-303"];
m68_321 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="368-368"];
m68_333 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="385-385"];
m68_285 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="317-317"];
m68_347 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="400-400"];
m68_360 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="414-418"];
m68_397 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="469-469"];
m68_431 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="505-511"];
m68_455 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="541-545"];
m68_61 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="81-81"];
m68_62 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="82-82"];
m68_89 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="83-83"];
m68_95 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="86-86"];
m68_104 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="118-118"];
m68_105 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="119-119"];
m68_124 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="120-120"];
m68_129 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="123-123"];
m68_143 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="143-143"];
m68_142 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.AddToQueue(''default'', ''1'')", span="143-143"];
m68_178 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="179-179"];
m68_177 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="179-179"];
m68_234 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="251-255"];
m68_232 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.DecrementCounter(''my-key'')", span="253-253"];
m68_233 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.DecrementCounter(''my-key'')", span="254-254"];
m68_260 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="283-287"];
m68_272 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="300-304"];
m68_323 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="366-370"];
m68_322 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="369-369"];
m68_335 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="383-387"];
m68_334 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="386-386"];
m68_398 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="466-470"];
m68_83 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="81-81"];
m68_86 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="82-82"];
m68_91 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="83-83"];
m68_90 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.SerializeData()", span="83-83"];
m68_118 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="118-118"];
m68_126 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="120-120"];
m68_125 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.SerializeData()", span="120-120"];
m68_85 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="81-81"];
m68_84 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Name", span="81-81"];
m68_88 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="82-82"];
m68_87 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Reason", span="82-82"];
m68_120 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="118-118"];
m68_119 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Name", span="118-118"];
m68_122 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Reason", span="119-119"];
m68_123 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="119-119"];
m68_312 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362"];
m68_313 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", prediction=191, span="364-375"];
m68_314 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="362-362"];
m68_261 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296"];
m68_262 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="298-309"];
m68_263 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="296-296"];
m68_468 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570"];
m68_470 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs", label="action(connection)", span="574-574"];
m68_469 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs", label="var connection = ConnectionUtils.CreateConnection()", span="572-572"];
m68_471 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="570-570"];
m68_175 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m68_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m68_456 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554"];
m68_457 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", prediction=192, span="556-567"];
m68_458 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="554-554"];
m68_23 [cluster="Unk.Single", file="SqlServerMonitoringApi.cs", label="Entry Unk.Single", span=""];
m68_8 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m68_10 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", prediction=193, span="29-41"];
m68_9 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27"];
m68_11 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m68_53 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m68_55 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102"];
m68_54 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m68_56 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m68_28 [cluster="Unk.True", file="SqlServerMonitoringApi.cs", label="Entry Unk.True", span=""];
m68_349 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410"];
m68_350 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="412-423"];
m68_351 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="410-410"];
m68_144 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m68_472 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m68_161 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m68_205 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m68_418 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501"];
m68_419 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="503-516"];
m68_420 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="501-501"];
m68_336 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396"];
m68_337 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", prediction=194, span="398-406"];
m68_338 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="396-396"];
m68_287 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328"];
m68_288 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", prediction=195, span="330-341"];
m68_289 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="328-328"];
m68_52 [cluster="Unk.PersistJob", file="SqlServerMonitoringApi.cs", label="Entry Unk.PersistJob", span=""];
m68_249 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279"];
m68_250 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="281-292"];
m68_251 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="279-279"];
m68_80 [cluster="Unk.Returns", file="SqlServerMonitoringApi.cs", label="Entry Unk.Returns", span=""];
m68_222 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m68_192 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212"];
m68_193 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", color=green, community=0, file="SqlServerMonitoringApi.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", prediction=196, span="214-223"];
m68_194 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="212-212"];
m68_479 [file="SqlServerMonitoringApi.cs", label="HangFire.SqlServer.Tests.WriteTransactionFacts", span=""];
m68_480 [file="SqlServerMonitoringApi.cs", label=arrangeSql, span=""];
m68_482 [file="SqlServerMonitoringApi.cs", label=arrangeSql, span=""];
m68_483 [file="SqlServerMonitoringApi.cs", label=jobId, span=""];
m68_481 [file="SqlServerMonitoringApi.cs", label=jobId, span=""];
m68_484 [file="SqlServerMonitoringApi.cs", label=arrangeSql, span=""];
m68_487 [file="SqlServerMonitoringApi.cs", label=arrangeSql, span=""];
m68_485 [file="SqlServerMonitoringApi.cs", label=jobId, span=""];
m68_486 [file="SqlServerMonitoringApi.cs", label=state, span=""];
m68_488 [file="SqlServerMonitoringApi.cs", label=jobId, span=""];
m68_489 [file="SqlServerMonitoringApi.cs", label=state, span=""];
m70_35 [cluster="Hangfire.IStackTraceFormatter<T>.Line(T)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.Line(T)", span="66-66"];
m70_36 [cluster="Hangfire.IStackTraceFormatter<T>.Line(T)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.Line(T)", span="66-66"];
m70_27 [cluster="Hangfire.IStackTraceFormatter<T>.Method(T)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.Method(T)", span="62-62"];
m70_28 [cluster="Hangfire.IStackTraceFormatter<T>.Method(T)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.Method(T)", span="62-62"];
m70_50 [cluster="Unk.Pairwise", file="StackTraceFormatter.cs", label="Entry Unk.Pairwise", span=""];
m70_29 [cluster="Hangfire.IStackTraceFormatter<T>.ParameterType(T)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.ParameterType(T)", span="63-63"];
m70_30 [cluster="Hangfire.IStackTraceFormatter<T>.ParameterType(T)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.ParameterType(T)", span="63-63"];
m70_14 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", span="49-49"];
m70_16 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterName(string)", span="49-49"];
m70_41 [cluster="string.Concat(System.Collections.Generic.IEnumerable<string>)", file="StackTraceFormatter.cs", label="Entry string.Concat(System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m70_11 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", span="48-48"];
m70_13 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.ParameterType(string)", span="48-48"];
m70_4 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="StackTraceFormatter.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m70_40 [cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", span="82-82"];
m70_45 [cluster="Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceFormatter.Format<T>(string, Hangfire.IStackTraceFormatter<T>)", span="82-82"];
m70_5 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", span="46-46"];
m70_7 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Type(string)", span="46-46"];
m70_25 [cluster="Hangfire.IStackTraceFormatter<T>.Type(T)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.Type(T)", span="61-61"];
m70_26 [cluster="Hangfire.IStackTraceFormatter<T>.Type(T)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.Type(T)", span="61-61"];
m70_46 [cluster="System.Diagnostics.Debug.Assert(bool)", file="StackTraceFormatter.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m70_47 [cluster="Unk.Parse", file="StackTraceFormatter.cs", label="Entry Unk.Parse", span=""];
m70_51 [cluster="Unk.Substring", file="StackTraceFormatter.cs", label="Entry Unk.Substring", span=""];
m70_3 [cluster="string.IsNullOrEmpty(string)", file="StackTraceFormatter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m70_71 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="145-145"];
m70_52 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="89-95"];
m70_55 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="96-100"];
m70_58 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="101-105"];
m70_61 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="106-106"];
m70_65 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="107-115"];
m70_68 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Entry lambda expression", span="116-139"];
m70_54 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="89-95"];
m70_57 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="96-100"];
m70_60 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="101-105"];
m70_63 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="106-106"];
m70_67 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="107-115"];
m70_70 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="116-139"];
m70_73 [cluster="lambda expression", file="StackTraceFormatter.cs", label="Exit lambda expression", span="145-145"];
m70_0 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", span="45-45"];
m70_2 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Text(string)", span="45-45"];
m70_33 [cluster="Hangfire.IStackTraceFormatter<T>.File(T)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.File(T)", span="65-65"];
m70_34 [cluster="Hangfire.IStackTraceFormatter<T>.File(T)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.File(T)", span="65-65"];
m70_49 [cluster="Unk.Concat", file="StackTraceFormatter.cs", label="Entry Unk.Concat", span=""];
m70_23 [cluster="Hangfire.IStackTraceFormatter<T>.Text(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.Text(string)", span="60-60"];
m70_24 [cluster="Hangfire.IStackTraceFormatter<T>.Text(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.Text(string)", span="60-60"];
m70_17 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", span="50-50"];
m70_19 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.File(string)", span="50-50"];
m70_48 [cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", file="StackTraceFormatter.cs", label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0"];
m70_20 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", span="51-51"];
m70_22 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Line(string)", span="51-51"];
m70_37 [cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77"];
m70_39 [cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77"];
m70_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="StackTraceFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m70_8 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="StackTraceFormatter.cs", label="Entry Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", span="47-47"];
m70_10 [cluster="Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", file="StackTraceFormatter.cs", label="Exit Hangfire.StackTraceHtmlFragments.Hangfire.IStackTraceFormatter<string>.Method(string)", span="47-47"];
m70_31 [cluster="Hangfire.IStackTraceFormatter<T>.ParameterName(T)", file="StackTraceFormatter.cs", label="Entry Hangfire.IStackTraceFormatter<T>.ParameterName(T)", span="64-64"];
m70_32 [cluster="Hangfire.IStackTraceFormatter<T>.ParameterName(T)", file="StackTraceFormatter.cs", label="Exit Hangfire.IStackTraceFormatter<T>.ParameterName(T)", span="64-64"];
m70_74 [file="StackTraceFormatter.cs", label="Hangfire.StackTraceHtmlFragments", span=""];
m70_75 [file="StackTraceFormatter.cs", label="Hangfire.IStackTraceFormatter<T>", span=""];
m71_3 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="StartupConfiguration.cs", label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="16-16"];
m71_4 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="StartupConfiguration.cs", label="Exit HangFire.States.JobState.Apply(IRedisTransaction, string)", span="16-16"];
m71_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StartupConfiguration.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m71_0 [cluster="HangFire.States.JobState.JobState(string)", file="StartupConfiguration.cs", label="Entry HangFire.States.JobState.JobState(string)", span="7-7"];
m71_1 [cluster="HangFire.States.JobState.JobState(string)", file="StartupConfiguration.cs", label="Reason = reason", span="9-9"];
m71_2 [cluster="HangFire.States.JobState.JobState(string)", file="StartupConfiguration.cs", label="Exit HangFire.States.JobState.JobState(string)", span="7-7"];
m71_5 [cluster="HangFire.States.JobState.GetProperties()", file="StartupConfiguration.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m71_6 [cluster="HangFire.States.JobState.GetProperties()", file="StartupConfiguration.cs", label="return new Dictionary<string, string>();", span="20-20"];
m71_7 [cluster="HangFire.States.JobState.GetProperties()", file="StartupConfiguration.cs", label="Exit HangFire.States.JobState.GetProperties()", span="18-18"];
m71_9 [file="StartupConfiguration.cs", label="HangFire.States.JobState", span=""];
m75_22 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SucceededState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m75_30 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="SucceededState.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="44-44"];
m75_24 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SucceededState.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92"];
m75_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="SucceededState.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="92-92"];
m75_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SucceededState.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m75_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=green, community=0, file="SucceededState.cs", label="Debug.Assert(redis != null)", prediction=197, span="28-28"];
m75_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", color=green, community=0, file="SucceededState.cs", label="Type = type", prediction=198, span="37-37"];
m75_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SucceededState.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Type, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="19-19"];
m75_21 [cluster="string.IsNullOrEmpty(string)", file="SucceededState.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m75_16 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SucceededState.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70"];
m75_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="SucceededState.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="70-70"];
m75_34 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="SucceededState.cs", label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58"];
m75_31 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SucceededState.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m75_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="SucceededState.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="101-101"];
m75_15 [cluster="HangFire.JobHelper.ToJson(object)", file="SucceededState.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="39-39"];
m75_29 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="SucceededState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m75_23 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SucceededState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m75_13 [cluster="System.Diagnostics.Debug.Assert(bool)", file="SucceededState.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m75_14 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="SucceededState.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m75_35 [file="SucceededState.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m76_0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="8-8"];
m76_2 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="return t.Name;", span="12-12"];
m76_3 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="var genericTypeName = t.GetGenericTypeDefinition().Name", span="15-15"];
m76_5 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="var genericArgs = string.Join('','', t.GetGenericArguments().Select(ToGenericTypeString).ToArray())", span="18-18"];
m76_4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="genericTypeName = genericTypeName.Substring(0, genericTypeName.IndexOf('`'))", span="16-16"];
m76_6 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="return genericTypeName + ''<'' + genericArgs + ''>'';", span="20-20"];
m76_7 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="TypeExtensions.cs", label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="8-8"];
m76_9 [cluster="System.Type.GetGenericTypeDefinition()", file="TypeExtensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m76_10 [cluster="string.IndexOf(char)", file="TypeExtensions.cs", label="Entry string.IndexOf(char)", span="0-0"];
m76_15 [cluster="Unk.Join", file="TypeExtensions.cs", label="Entry Unk.Join", span=""];
m76_12 [cluster="System.Type.GetGenericArguments()", file="TypeExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m76_14 [cluster="Unk.ToArray", file="TypeExtensions.cs", label="Entry Unk.ToArray", span=""];
m76_8 [cluster="System.Type.GetTypeInfo()", file="TypeExtensions.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m76_11 [cluster="string.Substring(int, int)", file="TypeExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m76_13 [cluster="Unk.Select", file="TypeExtensions.cs", label="Entry Unk.Select", span=""];
m77_63 [cluster="string.Substring(int, int)", file="Worker.cs", label="Entry string.Substring(int, int)", span="0-0"];
m77_16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="134-141"];
m77_59 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="Worker.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m77_60 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="Worker.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m77_61 [cluster="HttpRequestBase.LinkTo(string)", file="Worker.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m77_89 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m77_93 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m77_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="job.Value.ScheduledAt != null", span="320-320"];
m77_56 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="Worker.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m77_64 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="Worker.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m77_57 [cluster="Unk.TryParse", file="Worker.cs", label="Entry Unk.TryParse", span=""];
m77_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="Worker.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m77_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="356-356"];
m77_55 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="164-164"];
m77_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="WriteLiteral(''\''>\n                                '')", span="336-336"];
m77_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="Worker.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m77_74 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="var result = _performer.Perform(performContext)", span="188-188"];
m77_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="Worker.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m77_71 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m77_73 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="var duration = Stopwatch.StartNew()", span="186-186"];
m77_75 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="duration.Stop()", span="189-189"];
m77_76 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="191-191"];
m77_65 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="Worker.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m77_67 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="Worker.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m77_68 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="Worker.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40"];
m77_72 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="185-185"];
m77_78 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="throw;", span="195-195"];
m77_80 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="199-202"];
m77_82 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="206-209"];
m77_66 [cluster="Unk.Write", file="Worker.cs", label="Entry Unk.Write", span=""];
m77_77 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label=OperationCanceledException, span="193-193"];
m77_79 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label=JobPerformanceException, span="197-197"];
m77_81 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label=Exception, span="204-204"];
m77_83 [cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="Worker.cs", label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="164-164"];
m77_91 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m77_92 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m77_84 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m77_19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label=scheduledJobs, span="171-171"];
m77_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="Write(JobHelper.ToTimestamp(job.Value.ScheduledAt.Value))", span="331-331"];
m77_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m77_58 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="Worker.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m77_85 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m77_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m77_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="Worker.cs", label="int from, perPage", span="64-64"];
m77_10 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Worker.cs", label="throw new ArgumentNullException(''stateChanger'');", prediction=199, span="67-67"];
m77_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Worker.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m77_53 [cluster="string.Equals(string, System.StringComparison)", file="Worker.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m77_9 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Worker.cs", label="stateChanger == null", prediction=200, span="67-67"];
m77_11 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Worker.cs", label="_queues = queues.ToArray()", prediction=201, span="69-69"];
m77_12 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="_performer = performer", span="70-70"];
m77_13 [cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="Worker.cs", label="_stateChanger = stateChanger", span="71-71"];
m77_20 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76"];
m77_52 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="Worker.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m77_22 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="78-78"];
m77_23 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var connection = context.Storage.GetConnection()", span="80-80"];
m77_24 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="81-81"];
m77_25 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="83-83"];
m77_29 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token))", prediction=202, span="94-100"];
m77_27 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", prediction=203, span="88-90"];
m77_30 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="104-104"];
m77_28 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="var processingState = new ProcessingState(context.ServerId, _workerId)", prediction=204, span="92-92"];
m77_31 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="108-108"];
m77_32 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="111-111"];
m77_33 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="return;", span="112-112"];
m77_34 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="121-121"];
m77_35 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="state != null", span="123-123"];
m77_36 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="_stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", prediction=205, span="126-131"];
m77_37 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="fetchedJob.RemoveFromQueue()", span="139-139"];
m77_38 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=JobAbortedException, span="144-144"];
m77_39 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="fetchedJob.RemoveFromQueue()", prediction=205, span="146-146"];
m77_40 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=Exception, span="148-148"];
m77_41 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="150-150"];
m77_42 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Worker.cs", label="fetchedJob.Requeue()", prediction=205, span="152-152"];
m77_43 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="throw;", span="153-153"];
m77_44 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76"];
m77_46 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m77_49 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m77_50 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="Worker.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39"];
m77_90 [cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="Worker.cs", label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20"];
m77_87 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32"];
m77_88 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="Worker.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36"];
m77_86 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="Worker.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m77_94 [file="Worker.cs", label="Hangfire.Server.Worker", span=""];
m80_31 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m80_35 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs", label="Entry Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="132-132"];
m80_80 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs", label="filters.Reverse()", span="135-135"];
m80_81 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs", label="filter.OnClientException(context)", span="137-137"];
m80_82 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="WorkerFacts.cs", label="Exit Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="132-132"];
m80_46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="WorkerFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m80_16 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="Entry Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="45-45"];
m80_21 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label="var filterInfo = GetFilters(context.Job)", prediction=208, span="50-50"];
m80_19 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="creator == null", span="48-48"];
m80_22 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label="var createdContext = CreateWithFilters(context, creator, filterInfo.ClientFilters)", prediction=209, span="54-54"];
m80_26 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", prediction=208, span="61-61"];
m80_23 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label="return createdContext.JobId;", prediction=211, span="55-55"];
m80_25 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", prediction=212, span="59-59"];
m80_24 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label=Exception, prediction=213, span="57-57"];
m80_27 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", color=green, community=0, file="WorkerFacts.cs", label="!exceptionContext.ExceptionHandled", prediction=212, span="62-62"];
m80_28 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="throw;", span="64-64"];
m80_29 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="return null;", span="67-67"];
m80_17 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="context == null", span="47-47"];
m80_20 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''creator'');", span="48-48"];
m80_18 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''context'');", span="47-47"];
m80_30 [cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="WorkerFacts.cs", label="Exit Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="45-45"];
m80_39 [cluster="System.Func<T, TResult>.Invoke(T)", file="WorkerFacts.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m80_79 [cluster="Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", file="WorkerFacts.cs", label="Entry Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", span="33-33"];
m80_48 [cluster="Unk.thunk", file="WorkerFacts.cs", label="Entry Unk.thunk", span=""];
m80_45 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="WorkerFacts.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32"];
m80_47 [cluster="Unk.Aggregate", file="WorkerFacts.cs", label="Entry Unk.Aggregate", span=""];
m80_77 [cluster="Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", file="WorkerFacts.cs", label="Entry Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", span="27-27"];
m80_53 [cluster="Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="WorkerFacts.cs", label="Entry Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="24-24"];
m80_83 [cluster="Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", file="WorkerFacts.cs", label="Entry Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", span="27-27"];
m80_54 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="27-27"];
m80_3 [cluster="HangFire.Tests.CustomJob.Perform()", file="WorkerFacts.cs", label="Exit HangFire.Tests.CustomJob.Perform()", span="10-10"];
m80_1 [cluster="HangFire.Tests.CustomJob.Perform()", color=green, community=0, file="WorkerFacts.cs", label="LastArticleId = ArticleId", prediction=215, span="12-12"];
m80_0 [cluster="HangFire.Tests.CustomJob.Perform()", file="WorkerFacts.cs", label="Entry HangFire.Tests.CustomJob.Perform()", span="10-10"];
m80_2 [cluster="HangFire.Tests.CustomJob.Perform()", file="WorkerFacts.cs", label="LastAuthor = Author", span="13-13"];
m80_4 [cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess()", file="WorkerFacts.cs", label="HangFire.Tests.CustomJob", span=""];
m80_12 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="42-42"];
m80_50 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="var jobId = creator.CreateJob(context.Job, preContext.Parameters, context.InitialState)", prediction=216, span="84-84"];
m80_49 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="82-86"];
m80_51 [cluster="lambda expression", file="WorkerFacts.cs", label="return new CreatedContext(context, jobId, false, null);", span="85-85"];
m80_55 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="89-89"];
m80_58 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="InvokeClientFilter(filter, preContext, next)", prediction=217, span="89-89"];
m80_57 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="89-89"];
m80_59 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="89-89"];
m80_52 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="82-86"];
m80_56 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="89-89"];
m80_9 [cluster="lambda expression", file="WorkerFacts.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42"];
m80_8 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="42-42"];
m80_10 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="42-42"];
m80_13 [cluster="lambda expression", file="WorkerFacts.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="42-42"];
m80_14 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="42-42"];
m80_11 [cluster="Unk.Select", file="WorkerFacts.cs", label="Entry Unk.Select", span=""];
m80_32 [cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="WorkerFacts.cs", label="Entry Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", span="71-71"];
m80_36 [cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="WorkerFacts.cs", label="return new JobFilterInfo(_getFiltersThunk(job));", span="73-73"];
m80_37 [cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="WorkerFacts.cs", label="Exit Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", span="71-71"];
m80_34 [cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26"];
m80_33 [cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="WorkerFacts.cs", label="Entry Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="76-76"];
m80_41 [cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="WorkerFacts.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                var jobId = creator.CreateJob(context.Job, preContext.Parameters, context.InitialState);\r\n                return new CreatedContext(context, jobId, false, null);\r\n            }", prediction=218, span="82-86"];
m80_40 [cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="WorkerFacts.cs", label="var preContext = new CreatingContext(context)", span="81-81"];
m80_42 [cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="WorkerFacts.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", prediction=219, span="88-89"];
m80_43 [cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="WorkerFacts.cs", label="return thunk();", prediction=220, span="91-91"];
m80_44 [cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="WorkerFacts.cs", label="Exit Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="76-76"];
m80_60 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="Entry Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="94-94"];
m80_65 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="WorkerFacts.cs", label="CreatedContext postContext", prediction=221, span="106-106"];
m80_64 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="var wasError = false", span="105-105"];
m80_66 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="postContext = continuation()", span="109-109"];
m80_75 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="WorkerFacts.cs", label="return postContext;", prediction=222, span="129-129"];
m80_69 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="postContext = new CreatedContext(preContext, null, false, ex)", span="114-114"];
m80_74 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="filter.OnCreated(postContext)", span="126-126"];
m80_73 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="!wasError", span="124-124"];
m80_72 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="WorkerFacts.cs", label="throw;", prediction=223, span="120-120"];
m80_71 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="!postContext.ExceptionHandled", span="118-118"];
m80_61 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="filter.OnCreating(preContext)", span="99-99"];
m80_62 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="preContext.Canceled", span="100-100"];
m80_63 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="return new CreatedContext(preContext, null, true, null);", span="102-102"];
m80_70 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="filter.OnCreated(postContext)", span="116-116"];
m80_67 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label=Exception, span="111-111"];
m80_68 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="wasError = true", span="113-113"];
m80_76 [cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="WorkerFacts.cs", label="Exit Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="94-94"];
m80_38 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="WorkerFacts.cs", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
m80_15 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="WorkerFacts.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m80_5 [cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="WorkerFacts.cs", label="Entry Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m80_6 [cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="WorkerFacts.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42"];
m80_7 [cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="WorkerFacts.cs", label="Exit Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39"];
m80_78 [cluster="System.Func<TResult>.Invoke()", file="WorkerFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m80_84 [file="WorkerFacts.cs", label="Hangfire.Client.DefaultJobCreationProcess", span=""];
m80_86 [file="WorkerFacts.cs", label="Hangfire.Client.CreateContext", span=""];
m80_87 [file="WorkerFacts.cs", label="Hangfire.Client.IJobCreator", span=""];
m80_88 [file="WorkerFacts.cs", label=preContext, span=""];
m80_89 [file="WorkerFacts.cs", label="System.Func<Hangfire.Client.CreatedContext>", span=""];
m80_90 [file="WorkerFacts.cs", label="Hangfire.Client.IClientFilter", span=""];
m80_85 [file="WorkerFacts.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m2_13 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m2_13 -> m2_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m2_13 -> m2_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_84 -> m5_87  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_87 -> m5_90  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m5_107 -> m5_110  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_108 -> m5_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_108 -> m5_124  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_111 -> m5_114  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m5_111 -> m5_118  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m5_109 -> m5_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_123 -> m5_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_6 -> m5_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_10 -> m5_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_11 -> m5_15  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m5_97 -> m5_100  [color=darkseagreen4, key=1, label=instance, style=dashed];
m5_46 -> m5_48  [color=darkseagreen4, key=1, label="?", style=dashed];
m5_46 -> m5_50  [color=darkseagreen4, key=1, label="?", style=dashed];
m5_19 -> m5_27  [color=darkseagreen4, key=1, label="Hangfire.JobActivator", style=dashed];
m5_19 -> m5_28  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m5_19 -> m5_48  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_23 -> m5_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_64 -> m5_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m5_168 -> m5_170  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m5_153 -> m5_158  [color=darkseagreen4, key=1, label=value, style=dashed];
m5_150 -> m5_152  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m5_152 -> m5_154  [color=darkseagreen4, key=1, label=argument, style=dashed];
m5_152 -> m5_155  [color=darkseagreen4, key=1, label=argument, style=dashed];
m5_151 -> m5_158  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m5_151 -> m5_159  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m5_71 -> m5_74  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m5_50 -> m5_52  [color=darkseagreen4, key=1, label=args, style=dashed];
m5_51 -> m5_55  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m5_51 -> m5_61  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m5_17 -> m5_23  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_17 -> m5_38  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_17 -> m5_43  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_142 -> m5_144  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m5_55 -> m5_48  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_54 -> m5_38  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_54 -> m5_43  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_53 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisJobFetcher", style=dashed];
m5_178 -> m5_41  [color=green, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_27  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_28  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_36  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_76  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_78  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_79  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_80  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_82  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_85  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_99  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_134  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_175  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m6_35 -> m6_37  [color=green, key=1, label="lambda expression", style=dashed];
m6_202 -> m6_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_176 -> m6_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_9 -> m6_12  [color=green, key=1, label="lambda expression", style=dashed];
m6_63 -> m6_65  [color=green, key=1, label="lambda expression", style=dashed];
m6_268 -> m6_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_25 -> m6_326  [color=darkseagreen4, key=1, label="System.Action<HangFire.Redis.RedisWriteOnlyTransaction>", style=dashed];
m6_325 -> m6_327  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_333 -> m6_335  [color=darkseagreen4, key=1, label="System.Action<IRedisClient>", style=dashed];
m6_163 -> m6_165  [color=green, key=1, label="lambda expression", style=dashed];
m6_294 -> m6_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_229 -> m6_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_216 -> m6_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_281 -> m6_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_94 -> m6_96  [color=green, key=1, label="lambda expression", style=dashed];
m6_130 -> m6_132  [color=green, key=1, label="lambda expression", style=dashed];
m6_114 -> m6_116  [color=green, key=1, label="lambda expression", style=dashed];
m6_243 -> m6_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_12 -> m6_14  [color=green, key=1, label=IRedisClient, style=dashed];
m6_12 -> m6_16  [color=green, key=1, label=IRedisClient, style=dashed];
m6_12 -> m6_15  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_16 -> m6_29  [color=green, key=1, label="lambda expression", style=dashed];
m6_17 -> m6_20  [color=green, key=1, label=jobEntryTtl, style=dashed];
m6_18 -> m6_21  [color=green, key=1, label=stateEntryTtl, style=dashed];
m6_19 -> m6_22  [color=darkseagreen4, key=1, label=historyEntryTtl, style=dashed];
m6_37 -> m6_41  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_39 -> m6_51  [color=green, key=1, label="lambda expression", style=dashed];
m6_38 -> m6_40  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_38 -> m6_41  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_38 -> m6_59  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_40 -> m6_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_65 -> m6_71  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_68 -> m6_81  [color=green, key=1, label="lambda expression", style=dashed];
m6_67 -> m6_70  [color=green, key=1, label=state, style=dashed];
m6_67 -> m6_69  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_67 -> m6_71  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_67 -> m6_91  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_69 -> m6_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_70 -> m6_87  [color=green, key=1, label="lambda expression", style=dashed];
m6_71 -> m6_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_72 -> m6_74  [color=green, key=1, label=stateHash, style=dashed];
m6_72 -> m6_75  [color=green, key=1, label=stateHash, style=dashed];
m6_72 -> m6_76  [color=green, key=1, label=stateHash, style=dashed];
m6_96 -> m6_100  [color=green, key=1, label=IRedisClient, style=dashed];
m6_96 -> m6_101  [color=green, key=1, label=IRedisClient, style=dashed];
m6_100 -> m6_110  [color=green, key=1, label="lambda expression", style=dashed];
m6_97 -> m6_100  [color=green, key=1, label=state, style=dashed];
m6_97 -> m6_99  [color=green, key=1, label=state, style=dashed];
m6_97 -> m6_111  [color=green, key=1, label=state, style=dashed];
m6_99 -> m6_107  [color=green, key=1, label="lambda expression", style=dashed];
m6_98 -> m6_104  [color=green, key=1, label="lambda expression", style=dashed];
m6_116 -> m6_118  [color=green, key=1, label=IRedisClient, style=dashed];
m6_116 -> m6_119  [color=green, key=1, label=IRedisClient, style=dashed];
m6_116 -> m6_120  [color=green, key=1, label=IRedisClient, style=dashed];
m6_116 -> m6_121  [color=green, key=1, label=IRedisClient, style=dashed];
m6_116 -> m6_122  [color=green, key=1, label=IRedisClient, style=dashed];
m6_116 -> m6_123  [color=green, key=1, label=IRedisClient, style=dashed];
m6_120 -> m6_125  [color=green, key=1, label="lambda expression", style=dashed];
m6_132 -> m6_137  [color=green, key=1, label=IRedisClient, style=dashed];
m6_133 -> m6_135  [color=green, key=1, label=state, style=dashed];
m6_133 -> m6_136  [color=green, key=1, label=state, style=dashed];
m6_133 -> m6_137  [color=green, key=1, label=state, style=dashed];
m6_133 -> m6_159  [color=green, key=1, label=state, style=dashed];
m6_134 -> m6_149  [color=green, key=1, label="lambda expression", style=dashed];
m6_135 -> m6_152  [color=green, key=1, label="lambda expression", style=dashed];
m6_136 -> m6_155  [color=green, key=1, label="lambda expression", style=dashed];
m6_137 -> m6_158  [color=green, key=1, label="lambda expression", style=dashed];
m6_140 -> m6_142  [color=green, key=1, label=entry, style=dashed];
m6_140 -> m6_143  [color=green, key=1, label=entry, style=dashed];
m6_140 -> m6_144  [color=green, key=1, label=entry, style=dashed];
m6_165 -> m6_167  [color=green, key=1, label=IRedisClient, style=dashed];
m6_165 -> m6_168  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_166 -> m6_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_41 -> m6_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_180 -> m6_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_192 -> m6_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_206 -> m6_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_220 -> m6_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_233 -> m6_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_246 -> m6_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_258 -> m6_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_272 -> m6_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_285 -> m6_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_300 -> m6_304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_316 -> m6_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_207 -> m6_209  [color=darkseagreen4, key=1, label=entryTtl, style=dashed];
m6_234 -> m6_236  [color=darkseagreen4, key=1, label=entryTtl, style=dashed];
m6_178 -> m6_180  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_178 -> m6_181  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_190 -> m6_192  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_190 -> m6_194  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_190 -> m6_193  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_204 -> m6_206  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_204 -> m6_208  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_218 -> m6_220  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_218 -> m6_222  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_218 -> m6_221  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_231 -> m6_233  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_231 -> m6_235  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_245 -> m6_247  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_257 -> m6_260  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_257 -> m6_259  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_270 -> m6_272  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_270 -> m6_273  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_283 -> m6_285  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_283 -> m6_286  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_296 -> m6_300  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_296 -> m6_301  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_296 -> m6_302  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_296 -> m6_298  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_296 -> m6_299  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_316  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_317  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_318  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_319  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_313  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_314  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_311 -> m6_315  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_255 -> m6_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_188 -> m6_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_309 -> m6_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_338 -> m6_114  [color=green, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_163  [color=green, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_176  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_188  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_216  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_243  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_255  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_268  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_281  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_294  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_338 -> m6_309  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", style=dashed];
m6_341 -> m6_111  [color=green, key=1, label=state, style=dashed];
m6_342 -> m6_159  [color=green, key=1, label=state, style=dashed];
m6_339 -> m6_59  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_340 -> m6_91  [color=darkseagreen4, key=1, label=state, style=dashed];
m7_21 -> m7_5  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m7_21 -> m7_6  [color=darkseagreen4, key=1, label="HangFire.Web.AspNetBackgroundJobServer", style=dashed];
m9_42 -> m9_44  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m9_42 -> m9_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m9_42 -> m9_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m9_42 -> m9_61  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m9_55 -> m9_58  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_92 -> m9_13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_19  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_35  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_44  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_47  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_56  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_61  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_75  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_76  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_77  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_78  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_79  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_80  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m9_92 -> m9_84  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m11_1 -> m11_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_4 -> m11_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_29 -> m11_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_37 -> m11_39  [color=green, key=1, label=context, style=dashed];
m11_37 -> m11_40  [color=green, key=1, label=context, style=dashed];
m11_37 -> m11_41  [color=green, key=1, label=context, style=dashed];
m11_19 -> m11_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_44 -> m11_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m11_44 -> m11_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m11_44 -> m11_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m11_44 -> m11_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m11_44 -> m11_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m11_44 -> m11_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ApplyStateContextFacts", style=dashed];
m12_73 -> m12_89  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_80 -> m12_93  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m12_87 -> m12_93  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m12_81 -> m12_89  [color=darkseagreen4, key=1, label=started, style=dashed];
m12_82 -> m12_91  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m12_14 -> m12_17  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m12_14 -> m12_18  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m12_14 -> m12_19  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m12_15 -> m12_17  [color=darkseagreen4, key=1, label=awaitingState, style=dashed];
m12_29 -> m12_31  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_29 -> m12_38  [color=darkseagreen4, key=1, label=connection, style=dashed];
m12_30 -> m12_36  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m12_30 -> m12_38  [color=darkseagreen4, key=1, label=parentId, style=dashed];
m12_32 -> m12_38  [color=darkseagreen4, key=1, label=continuations, style=dashed];
m12_37 -> m12_39  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m12_23 -> m12_61  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m12_58 -> m12_60  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m12_58 -> m12_61  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m12_61 -> m12_61  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m12_61 -> m12_67  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m12_55 -> m12_67  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m12_55 -> m12_68  [color=darkseagreen4, key=1, label=nextStates, style=dashed];
m12_67 -> m12_67  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m12_57 -> m12_57  [color=darkseagreen4, key=1, label=continuation, style=dashed];
m12_111 -> m12_17  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m12_111 -> m12_18  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m12_111 -> m12_19  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m12_111 -> m12_39  [color=darkseagreen4, key=1, label="Hangfire.ContinuationsSupportAttribute", style=dashed];
m15_7 -> m15_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_7 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_12 -> m15_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_15 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_10 -> m15_21  [color=green, key=1, label="lambda expression", style=dashed];
m15_10 -> m15_14  [color=green, key=1, label=removedCount, style=dashed];
m15_13 -> m15_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_13 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_35 -> m15_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_35 -> m15_27  [color=green, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m21_0 -> m21_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_21 -> m21_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", style=dashed];
m21_21 -> m21_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", style=dashed];
m21_21 -> m21_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", style=dashed];
m27_78 -> m27_84  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_79 -> m27_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_58 -> m27_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_98 -> m27_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_115 -> m27_126  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_116 -> m27_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_117 -> m27_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_117 -> m27_119  [color=darkseagreen4, key=1, label=exception, style=dashed];
m27_149 -> m27_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_43 -> m27_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_87 -> m27_92  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_88 -> m27_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_106 -> m27_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_66 -> m27_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_129 -> m27_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_130 -> m27_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_50 -> m27_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_157 -> m27_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_163 -> m27_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_138 -> m27_143  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_139 -> m27_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_72 -> m27_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_175 -> m27_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_148  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_149  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_163  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_170  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_175 -> m27_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m27_176 -> m27_84  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_177 -> m27_92  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_178 -> m27_126  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_179 -> m27_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m27_180 -> m27_143  [color=darkseagreen4, key=1, label=client, style=dashed];
m28_7 -> m28_11  [color=darkseagreen4, key=1, label=type, style=dashed];
m28_7 -> m28_14  [color=darkseagreen4, key=1, label=type, style=dashed];
m28_8 -> m28_11  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m28_9 -> m28_14  [color=darkseagreen4, key=1, label=method, style=dashed];
m28_11 -> m28_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_20 -> m28_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_20 -> m28_91  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m28_98 -> m28_100  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m28_98 -> m28_101  [color=darkseagreen4, key=1, label=actualType, style=dashed];
m28_88 -> m28_105  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m28_90 -> m28_95  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m28_92 -> m28_104  [color=darkseagreen4, key=1, label=parameterTypesMatched, style=dashed];
m28_93 -> m28_100  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m28_93 -> m28_105  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m28_94 -> m28_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_103 -> m28_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_97 -> m28_99  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m28_97 -> m28_101  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m28_113 -> m28_11  [color=darkseagreen4, key=1, label="Hangfire.Storage.InvocationData", style=dashed];
m34_8 -> m34_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m34_12 -> m34_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m34_15 -> m34_17  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m34_15 -> m34_22  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m34_15 -> m34_23  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m34_15 -> m34_27  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m34_20 -> m34_27  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m34_39 -> m34_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_43 -> m34_47  [color=darkseagreen4, key=1, label=messageQueue, style=dashed];
m34_44 -> m34_47  [color=darkseagreen4, key=1, label=message, style=dashed];
m34_45 -> m34_47  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m34_45 -> m34_48  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m41_65 -> m41_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_78 -> m41_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_20 -> m41_26  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m41_23 -> m41_25  [color=darkseagreen4, key=1, label=message, style=dashed];
m41_47 -> m41_52  [color=darkseagreen4, key=1, label=token, style=dashed];
m41_48 -> m41_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_97 -> m41_52  [color=darkseagreen4, key=1, label=queue, style=dashed];
m41_98 -> m41_52  [color=darkseagreen4, key=1, label=token, style=dashed];
m42_25 -> m42_27  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_25 -> m42_28  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_25 -> m42_29  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_17 -> m42_20  [color=green, key=1, label="lambda expression", style=dashed];
m42_7 -> m42_12  [color=green, key=1, label="lambda expression", style=dashed];
m42_33 -> m42_13  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m42_33 -> m42_21  [color=green, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m42_33 -> m42_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m42_33 -> m42_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m42_33 -> m42_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m44_9 -> m44_14  [color=green, key=1, label="lambda expression", style=dashed];
m44_77 -> m44_81  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_78 -> m44_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_58 -> m44_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_59 -> m44_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_50 -> m44_52  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_50 -> m44_53  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_50 -> m44_55  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_51 -> m44_53  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m44_51 -> m44_55  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m44_43 -> m44_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_33 -> m44_35  [color=green, key=1, label=context, style=dashed];
m44_33 -> m44_36  [color=green, key=1, label=context, style=dashed];
m44_33 -> m44_37  [color=green, key=1, label=context, style=dashed];
m44_69 -> m44_72  [color=green, key=1, label="lambda expression", style=dashed];
m44_86 -> m44_96  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_87 -> m44_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_19 -> m44_22  [color=green, key=1, label="lambda expression", style=dashed];
m44_102 -> m44_23  [color=green, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m44_102 -> m44_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m44_102 -> m44_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m44_102 -> m44_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m44_102 -> m44_69  [color=green, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m44_102 -> m44_73  [color=green, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m44_103 -> m44_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_104 -> m44_81  [color=darkseagreen4, key=1, label=context, style=dashed];
m44_105 -> m44_96  [color=darkseagreen4, key=1, label=context, style=dashed];
m45_118 -> m45_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_118 -> m45_135  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_118 -> m45_136  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_0 -> m45_10  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m45_0 -> m45_12  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m45_0 -> m45_16  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m45_0 -> m45_18  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m45_0 -> m45_27  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m45_11 -> m45_15  [color=darkseagreen4, key=1, label=serviceName, style=dashed];
m45_20 -> m45_25  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m45_21 -> m45_31  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m45_21 -> m45_33  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m45_21 -> m45_36  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m45_21 -> m45_44  [color=darkseagreen4, key=1, label=renderedArguments, style=dashed];
m45_22 -> m45_38  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m45_37 -> m45_43  [color=darkseagreen4, key=1, label=renderedArgument, style=dashed];
m45_23 -> m45_38  [color=darkseagreen4, key=1, label=splitStringMinLength, style=dashed];
m45_32 -> m45_38  [color=darkseagreen4, key=1, label=renderedArgumentsTotalLength, style=dashed];
m45_24 -> m45_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_24 -> m45_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_34 -> m45_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_35 -> m45_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_35 -> m45_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_35 -> m45_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_46 -> m45_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m45_62 -> m45_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_62 -> m45_112  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_62 -> m45_114  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m45_63 -> m45_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_63 -> m45_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_63 -> m45_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_63 -> m45_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m45_93 -> m45_95  [color=darkseagreen4, key=1, label=builder, style=dashed];
m45_93 -> m45_97  [color=darkseagreen4, key=1, label=builder, style=dashed];
m45_93 -> m45_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m45_93 -> m45_100  [color=darkseagreen4, key=1, label=builder, style=dashed];
m45_93 -> m45_102  [color=darkseagreen4, key=1, label=builder, style=dashed];
m45_93 -> m45_103  [color=darkseagreen4, key=1, label=builder, style=dashed];
m45_146 -> m45_96  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m45_146 -> m45_97  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m45_146 -> m45_98  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m45_146 -> m45_99  [color=darkseagreen4, key=1, label="HangFire.Web.JobMethodCallRenderer.ArgumentRenderer", style=dashed];
m46_10 -> m46_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_1 -> m46_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_0 -> m48_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m48_12 -> m48_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m48_13 -> m48_23  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_13 -> m48_26  [color=darkseagreen4, key=1, label=result, style=dashed];
m48_16 -> m48_20  [color=darkseagreen4, key=1, label=end, style=dashed];
m48_16 -> m48_24  [color=darkseagreen4, key=1, label=end, style=dashed];
m48_15 -> m48_20  [color=darkseagreen4, key=1, label=current, style=dashed];
m48_15 -> m48_24  [color=darkseagreen4, key=1, label=current, style=dashed];
m48_15 -> m48_25  [color=darkseagreen4, key=1, label=current, style=dashed];
m48_17 -> m48_19  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m48_25 -> m48_25  [color=darkseagreen4, key=1, label=current, style=dashed];
m48_46 -> m48_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi", style=dashed];
m48_46 -> m48_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueMonitoringApi", style=dashed];
m50_8 -> m50_15  [color=green, key=1, label="lambda expression", style=dashed];
m50_0 -> m50_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m50_6 -> m50_8  [color=green, key=1, label=string, style=dashed];
m50_6 -> m50_16  [color=green, key=1, label=string, style=dashed];
m50_6 -> m50_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_7 -> m50_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m50_18 -> m50_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m50_18 -> m50_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m50_18 -> m50_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m50_20 -> m50_8  [color=green, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", style=dashed];
m50_20 -> m50_7  [color=darkseagreen4, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyQueue", style=dashed];
m50_21 -> m50_16  [color=green, key=1, label=string, style=dashed];
m50_21 -> m50_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_22 -> m50_16  [color=green, key=1, label=string, style=dashed];
m53_6 -> m53_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m53_6 -> m53_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m53_12 -> m53_15  [color=darkseagreen4, key=1, label=client, style=dashed];
m53_38 -> m53_41  [color=darkseagreen4, key=1, label=handler, style=dashed];
m53_38 -> m53_46  [color=darkseagreen4, key=1, label=handler, style=dashed];
m53_41 -> m53_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_30 -> m53_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_29 -> m53_34  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m53_29 -> m53_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m53_33 -> m53_35  [color=darkseagreen4, key=1, label=client, style=dashed];
m53_18 -> m53_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_48 -> m53_39  [color=green, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_30  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_48 -> m53_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ScheduledStateHandlerFacts", style=dashed];
m53_49 -> m53_46  [color=darkseagreen4, key=1, label=handler, style=dashed];
m55_24 -> m55_29  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m55_24 -> m55_30  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m55_24 -> m55_31  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m55_29 -> m55_29  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m55_29 -> m55_30  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m55_29 -> m55_31  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m55_27 -> m55_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m55_46 -> m55_48  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m55_7 -> m55_12  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m55_10 -> m55_12  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m55_52 -> m55_28  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m55_52 -> m55_33  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m55_52 -> m55_47  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m57_0 -> m57_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m57_0 -> m57_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m57_4 -> m57_6  [color=darkseagreen4, key=1, label=token, style=dashed];
m60_63 -> m60_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_64 -> m60_66  [color=darkseagreen4, key=1, label=writer, style=dashed];
m60_120 -> m60_127  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Group", style=dashed];
m60_120 -> m60_128  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_120 -> m60_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_6 -> m60_8  [color=green, key=1, label=serversRemoved, style=dashed];
m60_69 -> m60_72  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_69 -> m60_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_69 -> m60_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_69 -> m60_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_69 -> m60_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_74 -> m60_76  [color=darkseagreen4, key=1, label=match, style=dashed];
m60_73 -> m60_75  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m60_73 -> m60_78  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m60_77 -> m60_78  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m60_82 -> m60_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_19 -> m60_21  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_24  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_26  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_28  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_33  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_35  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_36  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_37  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_38  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_19 -> m60_39  [color=darkseagreen4, key=1, label=builder, style=dashed];
m60_16 -> m60_20  [color=darkseagreen4, key=1, label=bool, style=dashed];
m60_16 -> m60_21  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_131 -> m60_133  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_131 -> m60_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_131 -> m60_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_131 -> m60_136  [color=darkseagreen4, key=1, label=int, style=dashed];
m60_20 -> m60_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m60_20 -> m60_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m60_22 -> m60_24  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_25  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_26  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_27  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_28  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_29  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_30  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_31  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_32  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_34  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_22 -> m60_35  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m60_56 -> m60_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_49 -> m60_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_54 -> m60_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m60_83 -> m60_86  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m60_83 -> m60_87  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_83 -> m60_93  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_83 -> m60_98  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_103  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_105  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_107  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_108  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_110  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_111  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_115  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_83 -> m60_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_88 -> m60_91  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m60_95 -> m60_97  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m60_114 -> m60_117  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m60_96 -> m60_100  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m60_100 -> m60_103  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m60_99 -> m60_104  [color=darkseagreen4, key=1, label=position, style=dashed];
m60_104 -> m60_104  [color=darkseagreen4, key=1, label=position, style=dashed];
m60_4 -> m60_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m60_124 -> m60_139  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_124 -> m60_140  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_124 -> m60_141  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_124 -> m60_142  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m60_124 -> m60_143  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m61_13 -> m61_16  [color=darkseagreen4, key=1, label=cultureName, style=dashed];
m61_14 -> m61_19  [color=darkseagreen4, key=1, label=uiCultureName, style=dashed];
m61_12 -> m61_8  [color=green, key=1, label="Hangfire.AspNetCore.AspNetCoreLogProvider", style=dashed];
m61_0 -> m61_4  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m61_26 -> m61_30  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformedContext", style=dashed];
m61_26 -> m61_32  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformedContext", style=dashed];
m63_38 -> m63_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_38 -> m63_68  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m63_38 -> m63_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_64 -> m63_66  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_64 -> m63_67  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_64 -> m63_68  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_69 -> m63_71  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m63_4 -> m63_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_4 -> m63_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m63_9 -> m63_15  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m63_9 -> m63_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m63_25 -> m63_45  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m63_25 -> m63_48  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m63_25 -> m63_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_25 -> m63_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_25 -> m63_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_45 -> m63_45  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m63_40 -> m63_45  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_40 -> m63_46  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_40 -> m63_48  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_40 -> m63_42  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_40 -> m63_43  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_40 -> m63_44  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m63_49 -> m63_51  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m63_49 -> m63_53  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m63_73 -> m63_14  [color=green, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_35  [color=green, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_36  [color=green, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m63_73 -> m63_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerDistributedLock", style=dashed];
m65_0 -> m65_2  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m65_0 -> m65_3  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m65_0 -> m65_5  [color=darkseagreen4, key=1, label=IDbTransaction, style=dashed];
m65_0 -> m65_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m65_0 -> m65_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m65_32 -> m65_19  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m65_32 -> m65_27  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m65_32 -> m65_28  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m65_32 -> m65_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m66_78 -> m66_85  [color=green, key=1, label="lambda expression", style=dashed];
m66_67 -> m66_70  [color=green, key=1, label="lambda expression", style=dashed];
m66_55 -> m66_60  [color=green, key=1, label="lambda expression", style=dashed];
m66_41 -> m66_44  [color=green, key=1, label="lambda expression", style=dashed];
m66_90 -> m66_45  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m66_90 -> m66_55  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m66_90 -> m66_67  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m66_90 -> m66_78  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m66_90 -> m66_88  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m68_376 -> m68_378  [color=green, key=1, label="lambda expression", style=dashed];
m68_433 -> m68_435  [color=green, key=1, label="lambda expression", style=dashed];
m68_300 -> m68_302  [color=green, key=1, label="lambda expression", style=dashed];
m68_236 -> m68_238  [color=green, key=1, label="lambda expression", style=dashed];
m68_132 -> m68_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_445 -> m68_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_400 -> m68_402  [color=green, key=1, label="lambda expression", style=dashed];
m68_149 -> m68_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_99 -> m68_101  [color=green, key=1, label="lambda expression", style=dashed];
m68_207 -> m68_209  [color=green, key=1, label="lambda expression", style=dashed];
m68_224 -> m68_226  [color=green, key=1, label="lambda expression", style=dashed];
m68_388 -> m68_390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_1 -> m68_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_163 -> m68_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_25 -> m68_475  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m68_474 -> m68_476  [color=green, key=1, label=transaction, style=dashed];
m68_325 -> m68_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_181 -> m68_183  [color=green, key=1, label="lambda expression", style=dashed];
m68_362 -> m68_364  [color=green, key=1, label="lambda expression", style=dashed];
m68_37 -> m68_39  [color=green, key=1, label="lambda expression", style=dashed];
m68_274 -> m68_276  [color=green, key=1, label="lambda expression", style=dashed];
m68_13 -> m68_16  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m68_14 -> m68_16  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_14 -> m68_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_16 -> m68_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_39 -> m68_42  [color=green, key=1, label=SqlConnection, style=dashed];
m68_40 -> m68_42  [color=green, key=1, label=jobId, style=dashed];
m68_40 -> m68_50  [color=green, key=1, label=jobId, style=dashed];
m68_42 -> m68_49  [color=green, key=1, label="lambda expression", style=dashed];
m68_101 -> m68_107  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m68_184 -> m68_188  [color=green, key=1, label="lambda expression", style=dashed];
m68_188 -> m68_190  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_197 -> m68_199  [color=green, key=1, label=record, style=dashed];
m68_197 -> m68_200  [color=green, key=1, label=record, style=dashed];
m68_196 -> m68_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_211 -> m68_213  [color=green, key=1, label=record, style=dashed];
m68_211 -> m68_214  [color=green, key=1, label=record, style=dashed];
m68_210 -> m68_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_215 -> m68_217  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m68_240 -> m68_242  [color=green, key=1, label=record, style=dashed];
m68_240 -> m68_243  [color=green, key=1, label=record, style=dashed];
m68_239 -> m68_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_278 -> m68_280  [color=green, key=1, label=record, style=dashed];
m68_278 -> m68_281  [color=green, key=1, label=record, style=dashed];
m68_291 -> m68_295  [color=green, key=1, label="lambda expression", style=dashed];
m68_295 -> m68_297  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_303 -> m68_307  [color=green, key=1, label="lambda expression", style=dashed];
m68_307 -> m68_309  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_341 -> m68_343  [color=green, key=1, label=record, style=dashed];
m68_365 -> m68_369  [color=green, key=1, label="lambda expression", style=dashed];
m68_369 -> m68_371  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_369 -> m68_372  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_379 -> m68_383  [color=green, key=1, label="lambda expression", style=dashed];
m68_383 -> m68_385  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_403 -> m68_410  [color=green, key=1, label="lambda expression", style=dashed];
m68_404 -> m68_406  [color=darkseagreen4, key=1, label=records, style=dashed];
m68_404 -> m68_407  [color=darkseagreen4, key=1, label=records, style=dashed];
m68_410 -> m68_415  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_410 -> m68_412  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_410 -> m68_413  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_410 -> m68_414  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_436 -> m68_440  [color=green, key=1, label="lambda expression", style=dashed];
m68_440 -> m68_442  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_460 -> m68_464  [color=green, key=1, label="lambda expression", style=dashed];
m68_464 -> m68_466  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_64 -> m68_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_65 -> m68_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_68 -> m68_70  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m68_107 -> m68_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_108 -> m68_110  [color=darkseagreen4, key=1, label=job, style=dashed];
m68_135 -> m68_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_152 -> m68_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_166 -> m68_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_227 -> m68_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_253 -> m68_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_265 -> m68_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_277 -> m68_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_316 -> m68_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_328 -> m68_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_340 -> m68_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_353 -> m68_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_391 -> m68_395  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_422 -> m68_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_448 -> m68_452  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_58 -> m68_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_58 -> m68_94  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_58 -> m68_72  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_71 -> m68_73  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_71 -> m68_74  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_71 -> m68_75  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_71 -> m68_76  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_102 -> m68_107  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_102 -> m68_128  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_102 -> m68_112  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_111 -> m68_113  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_111 -> m68_114  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_111 -> m68_115  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_111 -> m68_116  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m68_136 -> m68_138  [color=darkseagreen4, key=1, label=record, style=dashed];
m68_136 -> m68_139  [color=darkseagreen4, key=1, label=record, style=dashed];
m68_153 -> m68_155  [color=darkseagreen4, key=1, label=record, style=dashed];
m68_153 -> m68_156  [color=darkseagreen4, key=1, label=record, style=dashed];
m68_167 -> m68_169  [color=darkseagreen4, key=1, label=record, style=dashed];
m68_167 -> m68_170  [color=darkseagreen4, key=1, label=record, style=dashed];
m68_57 -> m68_64  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m68_60 -> m68_64  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_60 -> m68_62  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_60 -> m68_63  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_60 -> m68_94  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_63 -> m68_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_103 -> m68_107  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_103 -> m68_105  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_103 -> m68_106  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_103 -> m68_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_106 -> m68_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_231 -> m68_233  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_257 -> m68_259  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_269 -> m68_271  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_320 -> m68_322  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_332 -> m68_334  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_357 -> m68_359  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_395 -> m68_397  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_426 -> m68_428  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_426 -> m68_429  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_426 -> m68_430  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_452 -> m68_454  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m68_171 -> m68_173  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m68_61 -> m68_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_62 -> m68_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_104 -> m68_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_105 -> m68_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_313 -> m68_315  [color=green, key=1, label="lambda expression", style=dashed];
m68_262 -> m68_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_468 -> m68_470  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m68_457 -> m68_459  [color=green, key=1, label="lambda expression", style=dashed];
m68_10 -> m68_13  [color=green, key=1, label="lambda expression", style=dashed];
m68_55 -> m68_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_350 -> m68_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_419 -> m68_421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_337 -> m68_339  [color=green, key=1, label="lambda expression", style=dashed];
m68_288 -> m68_290  [color=green, key=1, label="lambda expression", style=dashed];
m68_250 -> m68_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m68_193 -> m68_195  [color=green, key=1, label="lambda expression", style=dashed];
m68_479 -> m68_42  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_184  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_291  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_303  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_365  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_379  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_403  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_436  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_460  [color=green, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_64  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_107  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_135  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_152  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_166  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_196  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_210  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_227  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_239  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_253  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_265  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_277  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_316  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_328  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_340  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_353  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_391  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_422  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_479 -> m68_448  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m68_483 -> m68_50  [color=green, key=1, label=jobId, style=dashed];
m68_481 -> m68_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_485 -> m68_94  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_486 -> m68_94  [color=darkseagreen4, key=1, label=state, style=dashed];
m68_488 -> m68_128  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_489 -> m68_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m76_0 -> m76_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m76_4 -> m76_6  [color=darkseagreen4, key=1, label=genericTypeName, style=dashed];
m77_45 -> m77_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_45 -> m77_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_55 -> m77_70  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m77_55 -> m77_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m77_55 -> m77_71  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m77_74 -> m77_76  [color=darkseagreen4, key=1, label=result, style=dashed];
m77_69 -> m77_71  [color=darkseagreen4, key=1, label=backgroundJob, style=dashed];
m77_71 -> m77_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_71 -> m77_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m77_73 -> m77_75  [color=darkseagreen4, key=1, label=duration, style=dashed];
m77_73 -> m77_76  [color=darkseagreen4, key=1, label=duration, style=dashed];
m77_65 -> m77_69  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m77_65 -> m77_68  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m77_72 -> m77_76  [color=darkseagreen4, key=1, label=latency, style=dashed];
m77_47 -> m77_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_47 -> m77_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_20 -> m77_36  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m77_20 -> m77_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m77_20 -> m77_31  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m77_23 -> m77_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_23 -> m77_36  [color=green, key=1, label=connection, style=dashed];
m77_24 -> m77_36  [color=green, key=1, label=fetchedJob, style=dashed];
m77_24 -> m77_39  [color=green, key=1, label=fetchedJob, style=dashed];
m77_24 -> m77_42  [color=green, key=1, label=fetchedJob, style=dashed];
m77_24 -> m77_32  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m77_24 -> m77_37  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m77_25 -> m77_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_25 -> m77_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_27 -> m77_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_30 -> m77_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_30 -> m77_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_32 -> m77_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_34 -> m77_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_37 -> m77_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_37 -> m77_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_39 -> m77_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_39 -> m77_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_41 -> m77_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_41 -> m77_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_43 -> m77_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_43 -> m77_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_49 -> m77_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m77_94 -> m77_36  [color=green, key=1, label="Hangfire.Server.Worker", style=dashed];
m77_94 -> m77_60  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m77_94 -> m77_70  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m80_35 -> m80_81  [color=darkseagreen4, key=1, label="Hangfire.Client.ClientExceptionContext", style=dashed];
m80_16 -> m80_19  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreator", style=dashed];
m80_21 -> m80_26  [color=green, key=1, label=filterInfo, style=dashed];
m80_25 -> m80_27  [color=green, key=1, label=exceptionContext, style=dashed];
m80_55 -> m80_58  [color=green, key=1, label="System.Func<Hangfire.Client.CreatedContext>", style=dashed];
m80_9 -> m80_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m80_33 -> m80_51  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m80_40 -> m80_58  [color=green, key=1, label=preContext, style=dashed];
m80_42 -> m80_55  [color=green, key=1, label="lambda expression", style=dashed];
m80_60 -> m80_62  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m80_60 -> m80_63  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m80_60 -> m80_70  [color=darkseagreen4, key=1, label="Hangfire.Client.IClientFilter", style=dashed];
m80_60 -> m80_74  [color=darkseagreen4, key=1, label="Hangfire.Client.IClientFilter", style=dashed];
m80_69 -> m80_75  [color=green, key=1, label=postContext, style=dashed];
m80_69 -> m80_71  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m80_69 -> m80_74  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m80_68 -> m80_73  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m80_5 -> m80_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m80_84 -> m80_36  [color=darkseagreen4, key=1, label="Hangfire.Client.DefaultJobCreationProcess", style=dashed];
m80_86 -> m80_51  [color=darkseagreen4, key=1, label="Hangfire.Client.CreateContext", style=dashed];
m80_88 -> m80_58  [color=green, key=1, label=preContext, style=dashed];
m80_89 -> m80_58  [color=green, key=1, label="System.Func<Hangfire.Client.CreatedContext>", style=dashed];
m80_90 -> m80_58  [color=green, key=1, label="Hangfire.Client.IClientFilter", style=dashed];
m80_85 -> m80_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
}
