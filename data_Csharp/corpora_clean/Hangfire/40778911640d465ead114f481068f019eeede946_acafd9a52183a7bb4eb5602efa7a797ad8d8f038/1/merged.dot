digraph  {
n3 [label="HangFire.Filters.ClientExceptionContext", span=""];
n0 [label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)"];
n1 [label="Exception = exception", span="11-11", cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)"];
n2 [label="Exit HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)"];
m0_0 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.IStateMachine, Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.IStateMachine, Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ClientJobDescriptor.cs"];
m0_1 [label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.IStateMachine, Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.IStateMachine, Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ClientJobDescriptor.cs"];
m1_0 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="6-6", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m1_3 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", color=green, community=0, file="CreateContext.cs"];
m1_1 [label="Items = context.Items", span="9-9", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m1_2 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="6-6", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs"];
m1_4 [label="JobDescriptor = jobDescriptor", span="14-14", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="CreateContext.cs"];
m1_6 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", color=green, community=0, file="CreateContext.cs"];
m1_5 [label="Items = new Dictionary<string, object>()", span="15-15", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", color=green, community=0, file="CreateContext.cs"];
m1_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs"];
m1_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreateContext.cs"];
m1_22 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="CreateContext.cs"];
m1_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CreateContext.cs"];
m1_17 [label="Entry Unk.VerifyAll", span="", cluster="Unk.VerifyAll", file="CreateContext.cs"];
m1_16 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="CreateContext.cs"];
m1_26 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="CreateContext.cs"];
m1_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CreateContext.cs"];
m1_13 [label="Entry Unk.Verifiable", span="", cluster="Unk.Verifiable", file="CreateContext.cs"];
m1_18 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="CreateContext.cs"];
m1_23 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="CreateContext.cs"];
m1_25 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="CreateContext.cs"];
m1_24 [label="o.GetAllEntriesFromHash(''recurring-job:1'')", span="15-15", cluster="lambda expression", file="CreateContext.cs"];
m1_19 [label="o.GetAllItemsFromSet(It.IsAny<string>())", span="14-14", cluster="lambda expression", file="CreateContext.cs"];
m1_20 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="CreateContext.cs"];
m1_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="CreateContext.cs"];
m1_8 [label="HangFire.Client.CreateContext", span="", cluster="Mock<IStorageConnection>.cstr", file="CreateContext.cs"];
m1_14 [label="Entry Unk.GetRecurringJobs", span="", cluster="Unk.GetRecurringJobs", file="CreateContext.cs"];
m1_10 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="CreateContext.cs"];
m2_0 [label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="CreatedContext.cs"];
m2_1 [label="Canceled = canceled", span="14-14", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="CreatedContext.cs"];
m2_2 [label="Exception = exception", span="15-15", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="CreatedContext.cs"];
m2_3 [label="Exit HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="CreatedContext.cs"];
m2_4 [label="HangFire.Filters.CreatedContext", span="", file="CreatedContext.cs"];
m3_2 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="27-27", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CreateJobFailedException.cs"];
m3_3 [label="Exit HangFire.Client.CreateJobFailedException.CreateJobFailedException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="27-27", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CreateJobFailedException.cs"];
m3_0 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="CreateJobFailedException.cs"];
m3_1 [label="Exit HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="CreateJobFailedException.cs"];
m4_0 [label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6", cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="CreatingContext.cs"];
m4_1 [label="Exit HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6", cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="CreatingContext.cs"];
m5_4 [label="Entry lambda expression", span="28-30", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m5_5 [label="subApp.Use<DashboardMiddleware>(\r\n                GlobalDashboardRoutes.Routes,\r\n                authorizationFilters)", span="28-30", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m5_6 [label="Exit lambda expression", span="28-30", cluster="lambda expression", file="GlobalJobFilterCollection.cs"];
m5_7 [label="Entry Unk.>", span="", cluster="Unk.>", file="GlobalJobFilterCollection.cs"];
m5_0 [label="Entry HangFire.Dashboard.DashboardOwinExtensions.MapHangFireDashboard(IAppBuilder, string, System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>)", span="23-23", cluster="HangFire.Dashboard.DashboardOwinExtensions.MapHangFireDashboard(IAppBuilder, string, System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>)", file="GlobalJobFilterCollection.cs"];
m5_1 [label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                GlobalDashboardRoutes.Routes,\r\n                authorizationFilters))", span="28-30", cluster="HangFire.Dashboard.DashboardOwinExtensions.MapHangFireDashboard(IAppBuilder, string, System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>)", file="GlobalJobFilterCollection.cs"];
m5_2 [label="Exit HangFire.Dashboard.DashboardOwinExtensions.MapHangFireDashboard(IAppBuilder, string, System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>)", span="23-23", cluster="HangFire.Dashboard.DashboardOwinExtensions.MapHangFireDashboard(IAppBuilder, string, System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>)", file="GlobalJobFilterCollection.cs"];
m5_3 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="GlobalJobFilterCollection.cs"];
m5_8 [label="System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>", span="", file="GlobalJobFilterCollection.cs"];
m6_0 [label="Entry HangFire.GlobalJobFilters.GlobalJobFilters()", span="6-6", cluster="HangFire.GlobalJobFilters.GlobalJobFilters()", file="GlobalJobFilters.cs"];
m6_1 [label="Filters = new GlobalJobFilterCollection()", span="8-8", cluster="HangFire.GlobalJobFilters.GlobalJobFilters()", file="GlobalJobFilters.cs"];
m6_2 [label="Exit HangFire.GlobalJobFilters.GlobalJobFilters()", span="6-6", cluster="HangFire.GlobalJobFilters.GlobalJobFilters()", file="GlobalJobFilters.cs"];
m6_3 [label="Entry HangFire.Filters.GlobalJobFilterCollection.GlobalJobFilterCollection()", span="5-5", cluster="HangFire.Filters.GlobalJobFilterCollection.GlobalJobFilterCollection()", file="GlobalJobFilters.cs"];
m8_0 [label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4", cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="IClientExceptionFilter.cs"];
m8_1 [label="Exit HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4", cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="IClientExceptionFilter.cs"];
m9_2 [label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="IClientFilter.cs"];
m9_3 [label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="IClientFilter.cs"];
m9_0 [label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="IClientFilter.cs"];
m9_1 [label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="IClientFilter.cs"];
m11_16 [label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="IServerExceptionFilter.cs"];
m11_17 [label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="IServerExceptionFilter.cs"];
m11_18 [label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="IServerExceptionFilter.cs"];
m11_58 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="IServerExceptionFilter.cs"];
m11_190 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_191 [label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="290-293", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_192 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (method, job, state) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="295-305", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_193 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_239 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr", file="IServerExceptionFilter.cs"];
m11_426 [label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91", cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="IServerExceptionFilter.cs"];
m11_208 [label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="394-394", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_256 [label="var endDate = DateTime.UtcNow", span="397-397", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_263 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="405-405", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_264 [label="var valuesMap = redis.GetValuesMap(keys)", span="406-406", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_257 [label="var dates = new List<DateTime>()", span="398-398", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_260 [label="dates.Add(endDate)", span="401-401", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_261 [label="endDate = endDate.AddHours(-1)", span="402-402", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_258 [label="var i = 0", span="399-399", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_267 [label="i < dates.Count", span="409-409", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_271 [label="result.Add(dates[i], value)", span="417-417", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_259 [label="i < 24", span="399-399", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_262 [label="i++", span="399-399", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_265 [label="var result = new Dictionary<DateTime, long>()", span="408-408", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_269 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="412-412", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_266 [label="var i = 0", span="409-409", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_273 [label="return result;", span="420-420", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_272 [label="i++", span="409-409", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_268 [label="long value", span="411-411", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_270 [label="value = 0", span="414-414", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_274 [label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="394-394", cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_204 [label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="IServerExceptionFilter.cs"];
m11_92 [label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="423-423", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_285 [label="var endDate = DateTime.UtcNow.Date", span="426-426", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_292 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="437-437", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_293 [label="var valuesMap = redis.GetValuesMap(keys)", span="439-439", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_286 [label="var startDate = endDate.AddDays(-7)", span="427-427", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_288 [label="startDate <= endDate", span="430-430", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_289 [label="dates.Add(endDate)", span="432-432", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_290 [label="endDate = endDate.AddDays(-1)", span="433-433", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_287 [label="var dates = new List<DateTime>()", span="428-428", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_291 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="436-436", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_300 [label="result.Add(dates[i], value)", span="449-449", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_296 [label="i < stringDates.Count", span="442-442", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_294 [label="var result = new Dictionary<DateTime, long>()", span="441-441", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_298 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="445-445", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_295 [label="var i = 0", span="442-442", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_302 [label="return result;", span="452-452", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_301 [label="i++", span="442-442", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_297 [label="long value", span="444-444", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_299 [label="value = 0", span="447-447", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_303 [label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="423-423", cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="IServerExceptionFilter.cs"];
m11_129 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="IServerExceptionFilter.cs"];
m11_278 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="IServerExceptionFilter.cs"];
m11_37 [label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="IServerExceptionFilter.cs"];
m11_85 [label="Entry KeyValuePair<string, ScheduleDto>.cstr", span="", cluster="KeyValuePair<string, ScheduleDto>.cstr", file="IServerExceptionFilter.cs"];
m11_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="IServerExceptionFilter.cs"];
m11_38 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="IServerExceptionFilter.cs"];
m11_128 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="IServerExceptionFilter.cs"];
m11_209 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="IServerExceptionFilter.cs"];
m11_210 [label="return GetHourlyTimelineStats(_redis, ''failed'');", span="336-336", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="IServerExceptionFilter.cs"];
m11_211 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334", cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="IServerExceptionFilter.cs"];
m11_359 [label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="516-516", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_360 [label="var stats = new StatisticsDto()", span="518-518", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_361 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="520-520", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_363 [label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="524-526", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_364 [label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="528-530", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_365 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="532-534", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_366 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="536-538", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_367 [label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="540-542", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_368 [label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="544-546", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_371 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="551-553", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_373 [label="return stats;", span="559-559", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_362 [label="var pipeline = _redis.CreatePipeline()", span="522-522", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_369 [label=queues, span="548-548", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_372 [label="pipeline.Flush()", span="556-556", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_370 [label="var queueName = queue", span="550-550", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_374 [label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="516-516", cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="IServerExceptionFilter.cs"];
m11_31 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="IServerExceptionFilter.cs"];
m11_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="IServerExceptionFilter.cs"];
m11_350 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="IServerExceptionFilter.cs"];
m11_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="IServerExceptionFilter.cs"];
m11_78 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="IServerExceptionFilter.cs"];
m11_331 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="IServerExceptionFilter.cs"];
m11_212 [label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_213 [label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="341-341", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_217 [label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="347-348", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_214 [label="job.Count == 0", span="342-342", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_228 [label="!job.ContainsKey(''Method'')", span="377-377", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_229 [label="job.Add(''Method'', null)", span="377-377", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_230 [label="!job.ContainsKey(''ParameterTypes'')", span="378-378", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_231 [label="job.Add(''ParameterTypes'', null)", span="378-378", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_232 [label="return new JobDetailsDto\r\n            {\r\n                Method = TryToGetMethod(job[''Type''], job[''Method''], job[''ParameterTypes'']),\r\n                Arguments = job.ContainsKey(''Arguments'') ? JobHelper.FromJson<string[]>(job[''Arguments'']) : null,\r\n                OldFormatArguments =\r\n                    job.ContainsKey(''Args'') ? JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']) : null,\r\n                State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = stateHistory\r\n            };", span="380-391", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_215 [label="return null;", span="342-342", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_216 [label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''Args'', ''State'', ''CreatedAt'' }", span="344-345", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_218 [label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="350-352", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_219 [label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="354-354", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_220 [label=history, span="355-355", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_227 [label="stateHistory.Add(dto)", span="373-373", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_221 [label="var dto = new StateHistoryDto\r\n                {\r\n                    StateName = entry[''State''],\r\n                    Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                    CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                }", span="357-362", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_222 [label="var stateData = new Dictionary<string, string>(entry)", span="367-367", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_226 [label="dto.Data = stateData", span="372-372", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_223 [label="stateData.Remove(''State'')", span="368-368", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_224 [label="stateData.Remove(''Reason'')", span="369-369", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_225 [label="stateData.Remove(''CreatedAt'')", span="370-370", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_233 [label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339", cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="IServerExceptionFilter.cs"];
m11_237 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="IServerExceptionFilter.cs"];
m11_352 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="IServerExceptionFilter.cs"];
m11_356 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="511-511", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="IServerExceptionFilter.cs"];
m11_357 [label="return _redis.GetListCount(''hangfire:succeeded'');", span="513-513", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="IServerExceptionFilter.cs"];
m11_358 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="511-511", cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="IServerExceptionFilter.cs"];
m11_336 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="IServerExceptionFilter.cs"];
m11_375 [label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="IServerExceptionFilter.cs"];
m11_57 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="IServerExceptionFilter.cs"];
m11_127 [label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="IServerExceptionFilter.cs"];
m11_235 [label="Entry List<StateHistoryDto>.cstr", span="", cluster="List<StateHistoryDto>.cstr", file="IServerExceptionFilter.cs"];
m11_244 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="IServerExceptionFilter.cs"];
m11_304 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="IServerExceptionFilter.cs"];
m11_351 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="IServerExceptionFilter.cs"];
m11_88 [label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="562-562", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="IServerExceptionFilter.cs"];
m11_421 [label="return JobMethod.Deserialize(new InvocationData\r\n                {\r\n                    Type = type,\r\n                    Method = method,\r\n                    ParameterTypes = parameterTypes\r\n                });", span="567-572", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="IServerExceptionFilter.cs"];
m11_422 [label=Exception, span="574-574", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="IServerExceptionFilter.cs"];
m11_423 [label="return null;", span="576-576", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="IServerExceptionFilter.cs"];
m11_424 [label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="562-562", cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="IServerExceptionFilter.cs"];
m11_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="IServerExceptionFilter.cs"];
m11_241 [label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6", cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="IServerExceptionFilter.cs"];
m11_418 [label="Entry lambda expression", span="553-553", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_34 [label="Entry lambda expression", span="78-85", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_40 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_35 [label="new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }", span="78-85", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_36 [label="Exit lambda expression", span="78-85", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_41 [label="x.Value.StartedAt", span="85-85", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_42 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_72 [label="jobs.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_83 [label="new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="126-134", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_80 [label="states.Add(job.Key, x)", span="119-119", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_67 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' })", span="110-112", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_76 [label="x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State'')", span="116-118", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_66 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_71 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_75 [label="Entry lambda expression", span="116-118", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_79 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_82 [label="Entry lambda expression", span="126-134", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_68 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_73 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_77 [label="Exit lambda expression", span="116-118", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_81 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_84 [label="Exit lambda expression", span="126-134", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_115 [label="servers.Add(name, x)", span="170-170", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_125 [label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="181-188", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_122 [label="queues.Add(name, x)", span="175-175", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_112 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="167-169", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_118 [label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="173-174", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_111 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_114 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_117 [label="Entry lambda expression", span="173-174", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_121 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_124 [label="Entry lambda expression", span="181-188", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_113 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_116 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_119 [label="Exit lambda expression", span="173-174", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_123 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_126 [label="Exit lambda expression", span="181-188", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_135 [label="Entry lambda expression", span="203-211", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_136 [label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="203-211", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_137 [label="Exit lambda expression", span="203-211", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_144 [label="Entry lambda expression", span="226-231", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_145 [label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="226-231", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_146 [label="Exit lambda expression", span="226-231", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_169 [label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="248-249", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_175 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="253-253", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_181 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="257-257", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_168 [label="Entry lambda expression", span="248-249", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_171 [label="Entry lambda expression", span="250-250", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_174 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_177 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_180 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_183 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_186 [label="Entry lambda expression", span="268-273", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_170 [label="Exit lambda expression", span="248-249", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_172 [label="firstJobIds = x", span="250-250", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_173 [label="Exit lambda expression", span="250-250", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_176 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_178 [label="length = x", span="254-254", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_179 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_182 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_184 [label="dequeued = x", span="258-258", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_185 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_187 [label="new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="268-273", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_188 [label="Exit lambda expression", span="268-273", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_194 [label="Entry lambda expression", span="300-305", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_195 [label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="300-305", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_196 [label="Exit lambda expression", span="300-305", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_201 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_202 [label="new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                }", span="320-326", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_203 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_247 [label="!hiddenProperties.Contains(x.Key)", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_246 [label="Entry lambda expression", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_250 [label="Entry lambda expression", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_253 [label="Entry lambda expression", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_248 [label="Exit lambda expression", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_251 [label="x.Key", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_252 [label="Exit lambda expression", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_254 [label="x.Value", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_255 [label="Exit lambda expression", span="389-389", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_281 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="405-405", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_280 [label="Entry lambda expression", span="405-405", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_282 [label="Exit lambda expression", span="405-405", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_309 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="437-437", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_305 [label="Entry lambda expression", span="436-436", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_308 [label="Entry lambda expression", span="437-437", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_306 [label="x.ToString(''yyyy-MM-dd'')", span="436-436", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_307 [label="Exit lambda expression", span="436-436", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_310 [label="Exit lambda expression", span="437-437", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_338 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="484-484", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_348 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="503-507", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_333 [label="!jobs.ContainsKey(id)", span="479-479", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_334 [label="jobs.Add(id, x)", span="479-479", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_345 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="493-502", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_341 [label="!states.ContainsKey(id)", span="485-485", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_342 [label="states.Add(id, x)", span="485-485", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_328 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray())", span="476-478", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_327 [label="Entry lambda expression", span="476-478", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_332 [label="Entry lambda expression", span="479-479", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_337 [label="Entry lambda expression", span="484-484", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_340 [label="Entry lambda expression", span="485-485", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_344 [label="Entry lambda expression", span="493-502", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_347 [label="Entry lambda expression", span="503-507", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_329 [label="Exit lambda expression", span="476-478", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_335 [label="Exit lambda expression", span="479-479", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_339 [label="Exit lambda expression", span="484-484", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_343 [label="Exit lambda expression", span="485-485", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_346 [label="Exit lambda expression", span="493-502", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_349 [label="Exit lambda expression", span="503-507", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_353 [label="Entry lambda expression", span="505-505", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_354 [label="y == null", span="505-505", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_355 [label="Exit lambda expression", span="505-505", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_381 [label="stats.Servers = x", span="526-526", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_387 [label="stats.Queues = x", span="530-530", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_393 [label="stats.Scheduled = x", span="534-534", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_399 [label="stats.Processing = x", span="538-538", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_406 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="542-542", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_413 [label="stats.Failed = x", span="546-546", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_419 [label="stats.Enqueued += x", span="553-553", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_376 [label="Entry lambda expression", span="525-525", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_380 [label="Entry lambda expression", span="526-526", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_383 [label="Entry lambda expression", span="529-529", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_386 [label="Entry lambda expression", span="530-530", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_389 [label="Entry lambda expression", span="533-533", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_392 [label="Entry lambda expression", span="534-534", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_395 [label="Entry lambda expression", span="537-537", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_398 [label="Entry lambda expression", span="538-538", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_401 [label="Entry lambda expression", span="541-541", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_405 [label="Entry lambda expression", span="542-542", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_409 [label="Entry lambda expression", span="545-545", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_412 [label="Entry lambda expression", span="546-546", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_416 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="552-552", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_415 [label="Entry lambda expression", span="552-552", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_377 [label="x.GetSetCount(''hangfire:servers'')", span="525-525", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_378 [label="Exit lambda expression", span="525-525", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_382 [label="Exit lambda expression", span="526-526", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_384 [label="x.GetSetCount(''hangfire:queues'')", span="529-529", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_385 [label="Exit lambda expression", span="529-529", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_388 [label="Exit lambda expression", span="530-530", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_390 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="533-533", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_391 [label="Exit lambda expression", span="533-533", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_394 [label="Exit lambda expression", span="534-534", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_396 [label="x.GetSortedSetCount(''hangfire:processing'')", span="537-537", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_397 [label="Exit lambda expression", span="537-537", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_400 [label="Exit lambda expression", span="538-538", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_402 [label="x.GetValue(''hangfire:stats:succeeded'')", span="541-541", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_403 [label="Exit lambda expression", span="541-541", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_407 [label="Exit lambda expression", span="542-542", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_410 [label="x.GetSortedSetCount(''hangfire:failed'')", span="545-545", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_411 [label="Exit lambda expression", span="545-545", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_414 [label="Exit lambda expression", span="546-546", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_417 [label="Exit lambda expression", span="552-552", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_420 [label="Exit lambda expression", span="553-553", cluster="lambda expression", file="IServerExceptionFilter.cs"];
m11_29 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="IServerExceptionFilter.cs"];
m11_166 [label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="IServerExceptionFilter.cs"];
m11_167 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="IServerExceptionFilter.cs"];
m11_65 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="IServerExceptionFilter.cs"];
m11_69 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="IServerExceptionFilter.cs"];
m11_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="IServerExceptionFilter.cs"];
m11_0 [label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="IServerExceptionFilter.cs"];
m11_1 [label="_redis = redis", span="33-33", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="IServerExceptionFilter.cs"];
m11_2 [label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31", cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="IServerExceptionFilter.cs"];
m11_130 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_131 [label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="193-196", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_132 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                (method, job, state) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="198-211", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_133 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191", cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_283 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="IServerExceptionFilter.cs"];
m11_86 [label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="IServerExceptionFilter.cs"];
m11_164 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="IServerExceptionFilter.cs"];
m11_277 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="IServerExceptionFilter.cs"];
m11_96 [label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_97 [label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="150-150", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_98 [label="serverNames.Count == 0", span="152-152", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_103 [label=serverNames, span="162-162", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_108 [label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="181-188", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_99 [label="return new List<ServerDto>();", span="154-154", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_100 [label="var servers = new Dictionary<string, List<string>>()", span="157-157", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_101 [label="var queues = new Dictionary<string, List<string>>()", span="158-158", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_105 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="166-170", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_102 [label="var pipeline = _redis.CreatePipeline()", span="160-160", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_106 [label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="172-175", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_107 [label="pipeline.Flush()", span="178-178", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_104 [label="var name = serverName", span="164-164", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_109 [label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148", cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="IServerExceptionFilter.cs"];
m11_143 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="IServerExceptionFilter.cs"];
m11_139 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_140 [label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="216-219", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_141 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''State'' },\r\n                (method, job, state) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="221-231", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_142 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214", cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_89 [label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="IServerExceptionFilter.cs"];
m11_90 [label="return GetTimelineStats(_redis, ''succeeded'');", span="140-140", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="IServerExceptionFilter.cs"];
m11_91 [label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138", cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="IServerExceptionFilter.cs"];
m11_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="IServerExceptionFilter.cs"];
m11_408 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="IServerExceptionFilter.cs"];
m11_74 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="IServerExceptionFilter.cs"];
m11_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="IServerExceptionFilter.cs"];
m11_19 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="IServerExceptionFilter.cs"];
m11_20 [label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="IServerExceptionFilter.cs"];
m11_21 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56", cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="IServerExceptionFilter.cs"];
m11_275 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="IServerExceptionFilter.cs"];
m11_25 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_26 [label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="69-72", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_27 [label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                (method, job, state) => new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="74-85", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_28 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_10 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="IServerExceptionFilter.cs"];
m11_147 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="IServerExceptionFilter.cs"];
m11_22 [label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="IServerExceptionFilter.cs"];
m11_23 [label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="IServerExceptionFilter.cs"];
m11_24 [label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61", cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="IServerExceptionFilter.cs"];
m11_330 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="IServerExceptionFilter.cs"];
m11_240 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="IServerExceptionFilter.cs"];
m11_242 [label="Entry Unk.TryToGetMethod", span="", cluster="Unk.TryToGetMethod", file="IServerExceptionFilter.cs"];
m11_326 [label="Entry JobList<T>.cstr", span="", cluster="JobList<T>.cstr", file="IServerExceptionFilter.cs"];
m11_279 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="IServerExceptionFilter.cs"];
m11_205 [label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="IServerExceptionFilter.cs"];
m11_206 [label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="331-331", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="IServerExceptionFilter.cs"];
m11_207 [label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329", cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="IServerExceptionFilter.cs"];
m11_165 [label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="455-455", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_311 [label="jobIds.Count == 0", span="462-462", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_313 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="464-464", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_314 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="465-465", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_315 [label="properties = properties ?? new string[0]", span="467-467", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_316 [label="var pipeline = redis.CreatePipeline()", span="469-469", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_317 [label=jobIds, span="471-471", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_320 [label="stateProperties != null", span="481-481", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_321 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="483-485", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_323 [label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="492-508", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_312 [label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="462-462", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_319 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="475-479", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_322 [label="pipeline.Flush()", span="489-489", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_318 [label="var id = jobId", span="473-473", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_324 [label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="455-455", cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="IServerExceptionFilter.cs"];
m11_284 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="IServerExceptionFilter.cs"];
m11_234 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="IServerExceptionFilter.cs"];
m11_245 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="IServerExceptionFilter.cs"];
m11_238 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="IServerExceptionFilter.cs"];
m11_325 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="IServerExceptionFilter.cs"];
m11_379 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="IServerExceptionFilter.cs"];
m11_87 [label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41", cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="IServerExceptionFilter.cs"];
m11_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="IServerExceptionFilter.cs"];
m11_93 [label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="IServerExceptionFilter.cs"];
m11_94 [label="return GetTimelineStats(_redis, ''failed'');", span="145-145", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="IServerExceptionFilter.cs"];
m11_95 [label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143", cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="IServerExceptionFilter.cs"];
m11_189 [label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="IServerExceptionFilter.cs"];
m11_138 [label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="IServerExceptionFilter.cs"];
m11_243 [label="Entry Unk.>", span="", cluster="Unk.>", file="IServerExceptionFilter.cs"];
m11_148 [label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_149 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="236-236", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_150 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="237-237", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_151 [label=queues, span="239-239", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_161 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Dequeued = dequeued\r\n                })", span="275-281", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_162 [label="return result;", span="284-284", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_152 [label="IList<string> firstJobIds = null", span="241-241", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_156 [label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="247-250", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_157 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="252-254", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_158 [label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => dequeued = x)", span="256-258", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_153 [label="long length = 0", span="242-242", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_154 [label="long dequeued = 0", span="243-243", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_155 [label="var pipeline = _redis.CreatePipeline()", span="245-245", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_159 [label="pipeline.Flush()", span="260-260", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_160 [label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    null,\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (method, job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="263-273", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_163 [label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234", cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="IServerExceptionFilter.cs"];
m11_15 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="IServerExceptionFilter.cs"];
m11_63 [label="Entry JobList<ScheduleDto>.cstr", span="", cluster="JobList<ScheduleDto>.cstr", file="IServerExceptionFilter.cs"];
m11_43 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_44 [label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="90-93", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_45 [label="scheduledJobs.Count == 0", span="95-95", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_50 [label=scheduledJobs, span="105-105", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_55 [label="return new JobList<ScheduleDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="125-135", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_46 [label="return new JobList<ScheduleDto>(new List<KeyValuePair<string, ScheduleDto>>());", span="97-97", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_47 [label="var jobs = new Dictionary<string, List<string>>()", span="100-100", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_48 [label="var states = new Dictionary<string, string>()", span="101-101", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_52 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' }),\r\n                        x => jobs.Add(job.Key, x))", span="109-113", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_49 [label="var pipeline = _redis.CreatePipeline()", span="103-103", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_53 [label="pipeline.QueueCommand(\r\n                        x => x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State''),\r\n                        x => states.Add(job.Key, x))", span="115-119", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_54 [label="pipeline.Flush()", span="122-122", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_51 [label="var job = scheduledJob", span="107-107", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_56 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="IServerExceptionFilter.cs"];
m11_197 [label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_198 [label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="311-313", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_199 [label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''CreatedAt'', ''Fetched'' },\r\n                null,\r\n                (method, job, state) => new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                });", span="315-326", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_200 [label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308", cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="IServerExceptionFilter.cs"];
m11_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IServerExceptionFilter.cs"];
m11_30 [label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6", cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="IServerExceptionFilter.cs"];
m11_11 [label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="IServerExceptionFilter.cs"];
m11_12 [label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="48-48", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="IServerExceptionFilter.cs"];
m11_13 [label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46", cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="IServerExceptionFilter.cs"];
m11_276 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="IServerExceptionFilter.cs"];
m11_7 [label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="IServerExceptionFilter.cs"];
m11_8 [label="return _redis.GetSortedSetCount(''hangfire:schedule'');", span="43-43", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="IServerExceptionFilter.cs"];
m11_9 [label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41", cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="IServerExceptionFilter.cs"];
m11_120 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="IServerExceptionFilter.cs"];
m11_249 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="IServerExceptionFilter.cs"];
m11_64 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="IServerExceptionFilter.cs"];
m11_3 [label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="IServerExceptionFilter.cs"];
m11_4 [label="_redis.Dispose()", span="38-38", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="IServerExceptionFilter.cs"];
m11_5 [label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36", cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="IServerExceptionFilter.cs"];
m11_236 [label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="5-5", cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="IServerExceptionFilter.cs"];
m11_110 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="IServerExceptionFilter.cs"];
m11_134 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="IServerExceptionFilter.cs"];
m11_404 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="IServerExceptionFilter.cs"];
m11_70 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="IServerExceptionFilter.cs"];
m11_425 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="IServerExceptionFilter.cs"];
m11_427 [label="HangFire.Redis.RedisMonitoringApi", span="", file="IServerExceptionFilter.cs"];
m11_428 [label=job, span="", file="IServerExceptionFilter.cs"];
m11_429 [label=jobs, span="", file="IServerExceptionFilter.cs"];
m11_430 [label=states, span="", file="IServerExceptionFilter.cs"];
m11_431 [label=name, span="", file="IServerExceptionFilter.cs"];
m11_432 [label=servers, span="", file="IServerExceptionFilter.cs"];
m11_433 [label=queues, span="", file="IServerExceptionFilter.cs"];
m11_434 [label=queue, span="", file="IServerExceptionFilter.cs"];
m11_435 [label=hiddenProperties, span="", file="IServerExceptionFilter.cs"];
m11_436 [label=string, span="", file="IServerExceptionFilter.cs"];
m11_437 [label=string, span="", file="IServerExceptionFilter.cs"];
m11_438 [label="string[]", span="", file="IServerExceptionFilter.cs"];
m11_439 [label=id, span="", file="IServerExceptionFilter.cs"];
m11_440 [label=jobs, span="", file="IServerExceptionFilter.cs"];
m11_441 [label="string[]", span="", file="IServerExceptionFilter.cs"];
m11_442 [label=states, span="", file="IServerExceptionFilter.cs"];
m11_443 [label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="IServerExceptionFilter.cs"];
m11_444 [label=stats, span="", file="IServerExceptionFilter.cs"];
m11_445 [label=queueName, span="", file="IServerExceptionFilter.cs"];
m12_0 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="IServerFilter.cs"];
m12_1 [label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="IServerFilter.cs"];
m12_2 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="IServerFilter.cs"];
m12_3 [label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="IServerFilter.cs"];
m13_0 [label="Entry HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="IStateAppliedFilter.cs"];
m13_1 [label="Exit HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="IStateAppliedFilter.cs"];
m13_2 [label="Entry HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="9-9", cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="IStateAppliedFilter.cs"];
m13_3 [label="Exit HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="9-9", cluster="HangFire.IStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="IStateAppliedFilter.cs"];
m14_0 [label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="IStateChangedFilter.cs"];
m14_1 [label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="IStateChangedFilter.cs"];
m16_4 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobClient.cs"];
m16_8 [label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_6 [label="failedState == null", span="38-38", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobClient.cs"];
m16_9 [label="retryAttempt <= Attempts", span="46-46", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_10 [label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="48-48", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_11 [label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="50-50", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_12 [label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n                }", span="54-57", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_14 [label="Logger.WarnFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        failedState.Exception,\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay)", span="61-67", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_13 [label=LogEvents, span="59-59", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_5 [label="var failedState = context.CandidateState as FailedState", span="37-37", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobClient.cs"];
m16_16 [label="Logger.ErrorFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred.'',\r\n                        failedState.Exception,\r\n                        context.JobId)", span="74-77", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_15 [label=LogEvents, span="72-72", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_7 [label="return;", span="41-41", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="JobClient.cs"];
m16_17 [label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="JobClient.cs"];
m16_22 [label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="JobClient.cs"];
m16_25 [label="Entry Unk.ErrorFormat", span="", cluster="Unk.ErrorFormat", file="JobClient.cs"];
m16_0 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="JobClient.cs"];
m16_1 [label="Attempts = DefaultRetryAttempts", span="16-16", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="JobClient.cs"];
m16_23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobClient.cs"];
m16_19 [label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="JobClient.cs"];
m16_26 [label="var random = new Random()", span="85-85", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", color=green, community=0, file="JobClient.cs"];
m16_27 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="86-87", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", color=green, community=0, file="JobClient.cs"];
m16_28 [label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="JobClient.cs"];
m16_18 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="JobClient.cs"];
m16_29 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="JobClient.cs"];
m16_31 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="JobClient.cs"];
m16_20 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobClient.cs"];
m16_30 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="JobClient.cs"];
m16_32 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="JobClient.cs"];
m16_2 [label="LogEvents = true", span="17-17", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="JobClient.cs", color=green, community=0];
m16_3 [label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="JobClient.cs"];
m16_21 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="JobClient.cs"];
m16_24 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat", file="JobClient.cs"];
m16_33 [label="Hangfire.AutomaticRetryAttribute", span="", file="JobClient.cs"];
m17_2 [label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobFilter.cs"];
m17_3 [label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5", cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobFilter.cs"];
m17_0 [label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobFilter.cs"];
m17_1 [label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4", cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobFilter.cs"];
m18_14 [label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="89-89", cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs"];
m18_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Perform.cs"];
m18_26 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="Perform.cs"];
m18_27 [label="Entry Unk.InfoFormat", span="", cluster="Unk.InfoFormat", file="Perform.cs"];
m18_28 [label="Entry HangFire.JobStorage.WriteOptionsToLog(ILog)", span="68-68", cluster="HangFire.JobStorage.WriteOptionsToLog(ILog)", file="Perform.cs"];
m18_55 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Perform.cs"];
m18_6 [label="throw new ArgumentNullException(''options'');", span="48-48", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_10 [label="_storage = storage", span="52-52", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_13 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_15 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", color=red, community=0, file="Perform.cs"];
m18_11 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="54-54", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_12 [label="_serverRunner = GetServerRunner()", span="57-57", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_16 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="Perform.cs"];
m18_58 [label="Entry HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="133-133", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="Perform.cs"];
m18_75 [label="var components = _storage.GetComponents()", span="135-135", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="Perform.cs"];
m18_76 [label="return components\r\n                .Select(component => new ServerComponentRunner(component))\r\n                .ToArray();", span="137-139", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="Perform.cs"];
m18_77 [label="Exit HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="133-133", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="Perform.cs"];
m18_0 [label="Entry HangFire.Perform.Async<TJob>()", span="26-26", cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs"];
m18_1 [label="return Async<TJob>(null);", span="29-29", cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs"];
m18_2 [label="Exit HangFire.Perform.Async<TJob>()", span="26-26", cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs"];
m18_37 [label="Logger.Info(''HangFire Server stopped.'')", span="79-79", cluster="HangFire.BackgroundJobServer.Dispose()", file="Perform.cs"];
m18_78 [label="Entry HangFire.JobStorage.GetComponents()", span="58-58", cluster="HangFire.JobStorage.GetComponents()", file="Perform.cs"];
m18_3 [label="Entry HangFire.Perform.Async<TJob>(object)", span="44-44", cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs"];
m18_4 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_5 [label="options == null", span="48-48", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="Perform.cs"];
m18_19 [label="Entry HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="Perform.cs"];
m18_21 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="63-63", cluster="HangFire.BackgroundJobServer.Start()", file="Perform.cs"];
m18_39 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="Perform.cs"];
m18_40 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="84-88", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="Perform.cs"];
m18_46 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="Perform.cs"];
m18_30 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="Perform.cs"];
m18_31 [label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="Perform.cs"];
m18_32 [label="_serverRunner.Stop()", span="73-73", cluster="HangFire.BackgroundJobServer.Stop()", file="Perform.cs"];
m18_29 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs"];
m18_33 [label="Exit HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="Perform.cs"];
m18_34 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="Perform.cs"];
m18_35 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()", color=red, community=0, file="Perform.cs"];
m18_36 [label="_serverRunner.Dispose()", span="78-78", cluster="HangFire.BackgroundJobServer.Dispose()", file="Perform.cs"];
m18_18 [label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="82-82", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="Perform.cs"];
m18_20 [label="Logger.Info(''Starting HangFire Server...'')", span="62-62", cluster="HangFire.BackgroundJobServer.Start()", file="Perform.cs"];
m18_42 [label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="96-101", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="Perform.cs", color=green, community=0];
m18_80 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="Perform.cs"];
m18_56 [label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="114-114", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_65 [label="yield return new ServerComponentRunner(\r\n                new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval));", span="129-130", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", color=green, community=0, file="Perform.cs"];
m18_60 [label="var stateMachineFactory = new StateMachineFactory(_storage)", span="116-116", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_64 [label="yield return new ServerComponentRunner(new ServerWatchdog(_storage));", span="127-127", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_61 [label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="117-123", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_62 [label="yield return new ServerComponentRunner(new WorkerManager(sharedWorkerContext, _options.WorkerCount));", span="125-125", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_63 [label="yield return new ServerComponentRunner(new ServerHeartbeat(_storage, _serverId));", span="126-126", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_66 [label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="114-114", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="Perform.cs"];
m18_23 [label="_options.WriteToLog(Logger)", span="66-66", cluster="HangFire.BackgroundJobServer.Start()", file="Perform.cs"];
m18_24 [label="_serverRunner.Start()", span="68-68", cluster="HangFire.BackgroundJobServer.Start()", file="Perform.cs"];
m18_25 [label="Exit HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="Perform.cs"];
m18_72 [label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="Perform.cs"];
m18_38 [label="Exit HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()", file="Perform.cs"];
m18_69 [label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28", cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="Perform.cs"];
m18_9 [label="Exit HangFire.Perform.Async(System.Type)", span="61-61", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m18_7 [label="Entry HangFire.Perform.Async(System.Type)", span="61-61", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m18_8 [label="return Async(type, null);", span="63-63", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m18_47 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="Perform.cs"];
m18_44 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="Perform.cs"];
m18_49 [label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="104-104", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="Perform.cs"];
m18_51 [label="componentRunners.AddRange(GetCommonComponentRunners())", span="108-108", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="Perform.cs"];
m18_52 [label="componentRunners.AddRange(GetStorageComponentRunners())", span="109-109", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="Perform.cs"];
m18_50 [label="var componentRunners = new List<IServerComponentRunner>()", span="106-106", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="Perform.cs"];
m18_53 [label="return new ServerComponentRunnerCollection(componentRunners);", span="111-111", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="Perform.cs"];
m18_54 [label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="104-104", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="Perform.cs"];
m18_81 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="Perform.cs"];
m18_82 [label="new ServerComponentRunner(component)", span="138-138", cluster="lambda expression", file="Perform.cs"];
m18_83 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="Perform.cs"];
m18_74 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="Perform.cs"];
m18_57 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="Perform.cs"];
m18_59 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="Perform.cs"];
m18_79 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Perform.cs"];
m18_41 [label="var server = new ServerCore(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="90-94", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="Perform.cs", color=green, community=0];
m18_22 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="Perform.cs"];
m18_43 [label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="82-82", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="Perform.cs"];
m18_48 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="25-25", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="Perform.cs"];
m18_71 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="Perform.cs"];
m18_70 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="Perform.cs"];
m18_68 [label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="Perform.cs"];
m18_73 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="Perform.cs"];
m18_67 [label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="Perform.cs"];
m18_45 [label="Entry HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", span="31-31", cluster="HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", file="Perform.cs"];
m18_84 [label="HangFire.BackgroundJobServer", span="", file="Perform.cs"];
m19_0 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", span="7-7", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", file="PerformContext.cs"];
m19_1 [label="Items = context.Items", span="10-10", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", color=red, community=0, file="PerformContext.cs"];
m19_2 [label="Exit HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", span="7-7", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Filters.PerformContext)", file="PerformContext.cs"];
m19_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs"];
m19_3 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="PerformContext.cs"];
m19_4 [label="JobDescriptor = jobDescriptor", span="16-16", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=red, community=0, file="PerformContext.cs"];
m19_5 [label="Items = new Dictionary<string, object>()", span="17-17", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=red, community=0, file="PerformContext.cs"];
m19_6 [label="Exit HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="PerformContext.cs"];
m19_8 [label="HangFire.Filters.PerformContext", span="", file="PerformContext.cs"];
m20_0 [label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="PerformedContext.cs"];
m20_1 [label="Canceled = canceled", span="12-12", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="PerformedContext.cs"];
m20_2 [label="Exception = exception", span="13-13", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="PerformedContext.cs"];
m20_3 [label="Exit HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="PerformedContext.cs"];
m20_4 [label="HangFire.Filters.PerformedContext", span="", file="PerformedContext.cs"];
m21_0 [label="Entry HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4", cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", file="PerformingContext.cs"];
m21_1 [label="Exit HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4", cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", file="PerformingContext.cs"];
m22_16 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_31 [label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="94-94", cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="PreserveCultureFilter.cs"];
m22_23 [label="Entry HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="58-58", cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="PreserveCultureFilter.cs"];
m22_29 [label="Assert.NotNull(connection)", span="43-43", cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_30 [label="Exit HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38", cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_27 [label="var storage = CreateStorage()", span="40-40", cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_32 [label="Entry HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48", cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="PreserveCultureFilter.cs"];
m22_5 [label="var failedState = context.CandidateState as FailedState", span="37-37", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="PreserveCultureFilter.cs"];
m22_33 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="PreserveCultureFilter.cs"];
m22_34 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="PreserveCultureFilter.cs"];
m22_35 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="PreserveCultureFilter.cs"];
m22_36 [label="Hangfire.AutomaticRetryAttribute", span="", cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="PreserveCultureFilter.cs"];
m22_37 [label="Exit HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", span="48-48", cluster="HangFire.SqlServer.Tests.StorageFacts.GetComponents_ReturnsAllNeededComponents()", file="PreserveCultureFilter.cs"];
m22_45 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="PreserveCultureFilter.cs"];
m22_25 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="PreserveCultureFilter.cs"];
m22_4 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="35-35", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="PreserveCultureFilter.cs"];
m22_14 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_24 [label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="PreserveCultureFilter.cs"];
m22_0 [label="Entry HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", span="10-10", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="PreserveCultureFilter.cs"];
m22_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerStorage(null))", span="12-13", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="PreserveCultureFilter.cs"];
m22_2 [label="Assert.Equal(''connectionString'', exception.ParamName)", span="15-15", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="PreserveCultureFilter.cs"];
m22_3 [label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", span="10-10", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenConnectionStringIsNull()", file="PreserveCultureFilter.cs"];
m22_46 [label="return new SqlServerStorage(\r\n                ConnectionUtils.GetConnectionString(),\r\n                new SqlServerStorageOptions { PrepareSchemaIfNecessary = false });", span="60-62", cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="PreserveCultureFilter.cs"];
m22_47 [label="Exit HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", span="58-58", cluster="HangFire.SqlServer.Tests.StorageFacts.CreateStorage()", file="PreserveCultureFilter.cs"];
m22_40 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="PreserveCultureFilter.cs"];
m22_10 [label="Entry HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=green, community=0, file="PreserveCultureFilter.cs"];
m22_8 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_9 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="PreserveCultureFilter.cs"];
m22_11 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerStorage(''hello'', null))", span="21-22", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="PreserveCultureFilter.cs"];
m22_12 [label="Assert.Equal(''options'', exception.ParamName)", span="24-24", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="PreserveCultureFilter.cs"];
m22_6 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_7 [label="new SqlServerStorage(null)", span="13-13", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_13 [label="Exit HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="19-19", cluster="HangFire.SqlServer.Tests.StorageFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="PreserveCultureFilter.cs"];
m22_26 [label="Entry HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", span="38-38", cluster="HangFire.SqlServer.Tests.StorageFacts.GetConnection_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_15 [label="new SqlServerStorage(''hello'', null)", span="22-22", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_19 [label="var storage = CreateStorage()", span="30-30", cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_20 [label="var api = storage.GetMonitoringApi()", span="31-31", cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_21 [label="Assert.NotNull(api)", span="33-33", cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_17 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="PreserveCultureFilter.cs"];
m22_18 [label="Entry HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28", cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_22 [label="Exit HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="28-28", cluster="HangFire.SqlServer.Tests.StorageFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="PreserveCultureFilter.cs"];
m22_42 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_43 [label="x.GetType()", span="54-54", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_44 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="PreserveCultureFilter.cs"];
m22_41 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="PreserveCultureFilter.cs"];
m22_28 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat", file="PreserveCultureFilter.cs"];
m22_39 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="PreserveCultureFilter.cs"];
m22_38 [label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="64-64", cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="PreserveCultureFilter.cs"];
m22_48 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26", cluster="HangFire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="PreserveCultureFilter.cs"];
m22_49 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="PreserveCultureFilter.cs"];
m23_124 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="138-138", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_125 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="140-143", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_126 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n            })", span="145-165", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_127 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="138-138", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_48 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RecurringJobsFilter.cs"];
m23_247 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="346-346", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="RecurringJobsFilter.cs"];
m23_248 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="348-354", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="RecurringJobsFilter.cs"];
m23_249 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="346-346", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="RecurringJobsFilter.cs"];
m23_29 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="43-43", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="RecurringJobsFilter.cs"];
m23_30 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireJobLock(''1'');\r\n                Assert.NotNull(@lock);\r\n            })", span="45-49", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="RecurringJobsFilter.cs"];
m23_31 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="43-43", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="RecurringJobsFilter.cs"];
m23_441 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="RecurringJobsFilter.cs"];
m23_289 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="412-412", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobsFilter.cs"];
m23_290 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="414-420", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobsFilter.cs"];
m23_291 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="412-412", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="RecurringJobsFilter.cs"];
m23_347 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="488-488", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="RecurringJobsFilter.cs"];
m23_348 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="490-515", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="RecurringJobsFilter.cs"];
m23_349 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="488-488", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="RecurringJobsFilter.cs"];
m23_91 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="RecurringJobsFilter.cs"];
m23_64 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="83-83", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="RecurringJobsFilter.cs"];
m23_65 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(ConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''Hello'', job.Arguments[0]);\r\n\r\n                Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="85-117", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="RecurringJobsFilter.cs"];
m23_66 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="83-83", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="RecurringJobsFilter.cs"];
m23_385 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="RecurringJobsFilter.cs"];
m23_257 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="RecurringJobsFilter.cs"];
m23_299 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RecurringJobsFilter.cs"];
m23_375 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="526-526", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RecurringJobsFilter.cs"];
m23_376 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="528-532", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RecurringJobsFilter.cs"];
m23_377 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="534-542", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RecurringJobsFilter.cs"];
m23_378 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="526-526", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="RecurringJobsFilter.cs"];
m23_279 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="388-388", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="RecurringJobsFilter.cs"];
m23_280 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="390-392", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="RecurringJobsFilter.cs"];
m23_281 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    }); \r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(2, count);\r\n            })", span="394-408", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="RecurringJobsFilter.cs"];
m23_282 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="388-388", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="RecurringJobsFilter.cs"];
m23_278 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="RecurringJobsFilter.cs"];
m23_18 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="RecurringJobsFilter.cs"];
m23_93 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobsFilter.cs"];
m23_316 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="443-443", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RecurringJobsFilter.cs"];
m23_317 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="445-451", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RecurringJobsFilter.cs"];
m23_318 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="453-460", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RecurringJobsFilter.cs"];
m23_319 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="443-443", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="RecurringJobsFilter.cs"];
m23_268 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="370-370", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="RecurringJobsFilter.cs"];
m23_269 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="372-374", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="RecurringJobsFilter.cs"];
m23_270 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' });\r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="376-384", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="RecurringJobsFilter.cs"];
m23_271 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="370-370", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="RecurringJobsFilter.cs"];
m23_336 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RecurringJobsFilter.cs"];
m23_92 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobsFilter.cs"];
m23_396 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="553-553", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RecurringJobsFilter.cs"];
m23_397 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="555-559", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RecurringJobsFilter.cs"];
m23_398 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="561-572", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RecurringJobsFilter.cs"];
m23_399 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="553-553", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="RecurringJobsFilter.cs"];
m23_209 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="288-288", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_210 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="290-296", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_211 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="288-288", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_115 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="RecurringJobsFilter.cs"];
m23_154 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="194-194", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_155 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="196-202", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_156 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="194-194", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_27 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="RecurringJobsFilter.cs"];
m23_140 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="RecurringJobsFilter.cs"];
m23_94 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="RecurringJobsFilter.cs"];
m23_386 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="546-546", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_387 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="548-549", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_388 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="546-546", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_423 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="RecurringJobsFilter.cs"];
m23_335 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="RecurringJobsFilter.cs"];
m23_428 [label="Entry lambda expression", span="589-603", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_6 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_7 [label="new SqlServerConnection(null, new SqlServerStorageOptions())", span="18-18", cluster="lambda expression", color=red, community=0, file="RecurringJobsFilter.cs"];
m23_8 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_15 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_16 [label="new SqlServerConnection(ConnectionUtils.CreateConnection(), null)", span="27-27", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_17 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_23 [label="Entry lambda expression", span="35-39", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_24 [label="var transaction = connection.CreateWriteTransaction()", span="37-37", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_25 [label="Assert.NotNull(transaction)", span="38-38", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_26 [label="Exit lambda expression", span="35-39", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_32 [label="Entry lambda expression", span="45-49", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_33 [label="var @lock = connection.AcquireJobLock(''1'')", span="47-47", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_34 [label="Assert.NotNull(@lock)", span="48-48", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_35 [label="Exit lambda expression", span="45-49", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_40 [label="Entry lambda expression", span="55-64", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero))", span="57-61", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_45 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero)", span="58-61", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_42 [label="Assert.Equal(''job'', exception.ParamName)", span="63-63", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_44 [label="Entry lambda expression", span="58-61", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_43 [label="Exit lambda expression", span="55-64", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_46 [label="Exit lambda expression", span="58-61", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_52 [label="Entry lambda expression", span="70-79", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero))", span="72-76", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_57 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero)", span="73-76", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_54 [label="Assert.Equal(''parameters'', exception.ParamName)", span="78-78", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_56 [label="Entry lambda expression", span="73-76", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_55 [label="Exit lambda expression", span="70-79", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_58 [label="Exit lambda expression", span="73-76", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_60 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_61 [label="SampleMethod(''hello'')", span="74-74", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_62 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_68 [label="Entry lambda expression", span="85-117", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_69 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    TimeSpan.FromDays(1))", span="87-90", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_72 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="95-95", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_83 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="110-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_70 [label="Assert.NotNull(jobId)", span="92-92", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_97 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_71 [label="Assert.NotEmpty(jobId)", span="93-93", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_73 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="96-96", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_74 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="97-97", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_75 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="98-98", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_76 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="100-100", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_77 [label="invocationData.Arguments = sqlJob.Arguments", span="101-101", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_82 [label="Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1))", span="108-108", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_78 [label="var job = invocationData.Deserialize()", span="103-103", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_79 [label="Assert.Equal(typeof(ConnectionFacts), job.Type)", span="104-104", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_80 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="105-105", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_81 [label="Assert.Equal(''Hello'', job.Arguments[0])", span="106-106", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_84 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="115-115", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_100 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_103 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_85 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="116-116", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_86 [label="Exit lambda expression", span="85-117", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_98 [label="SampleMethod(''Hello'')", span="88-88", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_99 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_101 [label="(string) x.Name", span="113-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_102 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_104 [label="(string) x.Value", span="113-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_105 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_109 [label="Entry lambda expression", span="123-124", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_110 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="123-124", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_113 [label="connection.GetJobData(null)", span="124-124", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_111 [label="Exit lambda expression", span="123-124", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_112 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_114 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_119 [label="Entry lambda expression", span="130-134", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_120 [label="var result = connection.GetJobData(''1'')", span="132-132", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_121 [label="Assert.Null(result)", span="133-133", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_122 [label="Exit lambda expression", span="130-134", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_130 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="149-156", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_128 [label="Entry lambda expression", span="145-165", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_129 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="147-147", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_131 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="158-158", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_141 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_132 [label="Assert.NotNull(result)", span="160-160", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_133 [label="Assert.NotNull(result.Job)", span="161-161", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_134 [label="Assert.Equal(''Succeeded'', result.State)", span="162-162", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_135 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="163-163", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_136 [label="Assert.Null(result.LoadException)", span="164-164", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_137 [label="Exit lambda expression", span="145-165", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_142 [label="SampleMethod(''wrong'')", span="147-147", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_143 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_149 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="178-185", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_148 [label="Entry lambda expression", span="176-190", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_150 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="187-187", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_151 [label="Assert.NotNull(result.LoadException)", span="189-189", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_152 [label="Exit lambda expression", span="176-190", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_157 [label="Entry lambda expression", span="196-202", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_158 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="198-199", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_162 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="199-199", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_159 [label="Assert.Equal(''id'', exception.ParamName)", span="201-201", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_161 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_160 [label="Exit lambda expression", span="196-202", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_163 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_168 [label="Entry lambda expression", span="208-214", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_169 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="210-211", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_173 [label="connection.SetJobParameter(''1'', null, ''value'')", span="211-211", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_170 [label="Assert.Equal(''name'', exception.ParamName)", span="213-213", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_172 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_171 [label="Exit lambda expression", span="208-214", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_174 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_180 [label="var job = sql.Query(arrangeSql).Single()", span="227-227", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_179 [label="Entry lambda expression", span="225-237", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_182 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="230-230", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_183 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="232-234", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_181 [label="string jobId = job.Id.ToString()", span="228-228", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_184 [label="Assert.Equal(''Value'', parameter.Value)", span="236-236", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_185 [label="Exit lambda expression", span="225-237", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_191 [label="var job = sql.Query(arrangeSql).Single()", span="250-250", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_190 [label="Entry lambda expression", span="248-261", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_193 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="253-253", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_194 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="254-254", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_195 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="256-258", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_192 [label="string jobId = job.Id.ToString()", span="251-251", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_196 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="260-260", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_197 [label="Exit lambda expression", span="248-261", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_203 [label="var job = sql.Query(arrangeSql).Single()", span="274-274", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_202 [label="Entry lambda expression", span="272-284", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_205 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="277-277", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_206 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="279-281", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_204 [label="string jobId = job.Id.ToString()", span="275-275", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_207 [label="Assert.Equal((string) null, parameter.Value)", span="283-283", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_208 [label="Exit lambda expression", span="272-284", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_212 [label="Entry lambda expression", span="290-296", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_213 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="292-293", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_217 [label="connection.GetJobParameter(null, ''hello'')", span="293-293", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_214 [label="Assert.Equal(''id'', exception.ParamName)", span="295-295", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_216 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_215 [label="Exit lambda expression", span="290-296", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_218 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_223 [label="Entry lambda expression", span="302-308", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_224 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="304-305", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_228 [label="connection.GetJobParameter(''1'', null)", span="305-305", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_225 [label="Assert.Equal(''name'', exception.ParamName)", span="307-307", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_227 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_226 [label="Exit lambda expression", span="302-308", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_229 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_233 [label="Entry lambda expression", span="314-318", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_234 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="316-316", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_235 [label="Assert.Null(value)", span="317-317", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_236 [label="Exit lambda expression", span="314-318", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_242 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="335-337", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_241 [label="Entry lambda expression", span="333-342", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_243 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="339-339", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_244 [label="Assert.Equal(''value'', value)", span="341-341", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_245 [label="Exit lambda expression", span="333-342", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_250 [label="Entry lambda expression", span="348-354", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_251 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''))", span="350-351", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_255 [label="connection.DeleteJobFromQueue(null, ''default'')", span="351-351", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_252 [label="Assert.Equal(''id'', exception.ParamName)", span="353-353", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_254 [label="Entry lambda expression", span="351-351", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_253 [label="Exit lambda expression", span="348-354", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_256 [label="Exit lambda expression", span="351-351", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_261 [label="Entry lambda expression", span="360-366", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_262 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null))", span="362-363", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_266 [label="connection.DeleteJobFromQueue(''1'', null)", span="363-363", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_263 [label="Assert.Equal(''queue'', exception.ParamName)", span="365-365", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_265 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_264 [label="Exit lambda expression", span="360-366", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_267 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_273 [label="sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' })", span="378-378", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_272 [label="Entry lambda expression", span="376-384", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_274 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="380-380", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_275 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="382-382", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_276 [label="Assert.Equal(0, count)", span="383-383", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_277 [label="Exit lambda expression", span="376-384", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_284 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    })", span="396-402", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_283 [label="Entry lambda expression", span="394-408", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_285 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="404-404", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_286 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="406-406", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_287 [label="Assert.Equal(2, count)", span="407-407", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_288 [label="Exit lambda expression", span="394-408", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_292 [label="Entry lambda expression", span="414-420", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_293 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="416-417", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_297 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="417-417", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_294 [label="Assert.Equal(''key'', exception.ParamName)", span="419-419", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_296 [label="Entry lambda expression", span="417-417", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_295 [label="Exit lambda expression", span="414-420", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_298 [label="Exit lambda expression", span="417-417", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_303 [label="Entry lambda expression", span="426-427", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_304 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="426-427", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_307 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="427-427", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_305 [label="Exit lambda expression", span="426-427", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_306 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_308 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_312 [label="Entry lambda expression", span="433-439", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_313 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="435-436", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_314 [label="Assert.Null(result)", span="438-438", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_315 [label="Exit lambda expression", span="433-439", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_321 [label="sql.Execute(arrangeSql)", span="455-455", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_320 [label="Entry lambda expression", span="453-460", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_322 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="457-457", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_323 [label="Assert.Equal(''-1.0'', result)", span="459-459", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_324 [label="Exit lambda expression", span="453-460", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_328 [label="Entry lambda expression", span="466-472", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_329 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="468-469", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_333 [label="connection.AnnounceServer(null, new ServerContext())", span="469-469", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_330 [label="Assert.Equal(''serverId'', exception.ParamName)", span="471-471", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_332 [label="Entry lambda expression", span="469-469", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_331 [label="Exit lambda expression", span="466-472", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_334 [label="Exit lambda expression", span="469-469", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_340 [label="Entry lambda expression", span="478-484", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_341 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="480-481", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_345 [label="connection.AnnounceServer(''server'', null)", span="481-481", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_342 [label="Assert.Equal(''context'', exception.ParamName)", span="483-483", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_344 [label="Entry lambda expression", span="481-481", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_343 [label="Exit lambda expression", span="478-484", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_346 [label="Exit lambda expression", span="481-481", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_350 [label="Entry lambda expression", span="490-515", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_351 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="492-496", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_352 [label="connection.AnnounceServer(''server'', context1)", span="497-497", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_353 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="499-499", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_358 [label="connection.AnnounceServer(''server'', context2)", span="511-511", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_359 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="512-512", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_354 [label="Assert.Equal(''server'', server.Id)", span="500-500", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_355 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="501-503", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_356 [label="Assert.NotNull(server.LastHeartbeat)", span="504-504", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_357 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="506-510", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_360 [label="Assert.Equal(''server'', sameServer.Id)", span="513-513", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_361 [label="Assert.Contains(''1000'', sameServer.Data)", span="514-514", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_362 [label="Exit lambda expression", span="490-515", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_368 [label="Entry lambda expression", span="521-522", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_369 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="521-522", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_372 [label="connection.RemoveServer(null)", span="522-522", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_370 [label="Exit lambda expression", span="521-522", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_371 [label="Entry lambda expression", span="522-522", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_373 [label="Exit lambda expression", span="522-522", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_380 [label="sql.Execute(arrangeSql)", span="536-536", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_379 [label="Entry lambda expression", span="534-542", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_381 [label="connection.RemoveServer(''Server1'')", span="538-538", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_382 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="540-540", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_383 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="541-541", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_384 [label="Exit lambda expression", span="534-542", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_389 [label="Entry lambda expression", span="548-549", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_390 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="548-549", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_393 [label="connection.Heartbeat(null)", span="549-549", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_391 [label="Exit lambda expression", span="548-549", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_392 [label="Entry lambda expression", span="549-549", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_394 [label="Exit lambda expression", span="549-549", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_401 [label="sql.Execute(arrangeSql)", span="563-563", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_400 [label="Entry lambda expression", span="561-572", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_402 [label="connection.Heartbeat(''server1'')", span="565-565", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_403 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="567-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_404 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="570-570", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_407 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_410 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_405 [label="Assert.Equal(2012, servers[''server2''].Year)", span="571-571", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_406 [label="Exit lambda expression", span="561-572", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_408 [label="(string)x.Id", span="568-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_409 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_411 [label="(DateTime)x.LastHeartbeat", span="568-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_412 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_416 [label="Entry lambda expression", span="578-579", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_417 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="578-579", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_420 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="579-579", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_418 [label="Exit lambda expression", span="578-579", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_419 [label="Entry lambda expression", span="579-579", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_421 [label="Exit lambda expression", span="579-579", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_429 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="591-597", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_430 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="599-599", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_431 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="601-601", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_432 [label="Assert.Equal(''server2'', liveServer.Id)", span="602-602", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_433 [label="Exit lambda expression", span="589-603", cluster="lambda expression", file="RecurringJobsFilter.cs"];
m23_67 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="RecurringJobsFilter.cs"];
m23_198 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="265-265", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RecurringJobsFilter.cs"];
m23_199 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="267-270", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RecurringJobsFilter.cs"];
m23_200 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="272-284", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RecurringJobsFilter.cs"];
m23_201 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="265-265", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="RecurringJobsFilter.cs"];
m23_164 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="RecurringJobsFilter.cs"];
m23_10 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RecurringJobsFilter.cs"];
m23_59 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobsFilter.cs"];
m23_106 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="121-121", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_107 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="123-124", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_108 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="121-121", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobsFilter.cs"];
m23_365 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="519-519", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_366 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="521-522", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_367 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="519-519", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_186 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="241-241", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RecurringJobsFilter.cs"];
m23_187 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="243-246", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RecurringJobsFilter.cs"];
m23_188 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="248-261", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RecurringJobsFilter.cs"];
m23_189 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="241-241", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="RecurringJobsFilter.cs"];
m23_219 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="RecurringJobsFilter.cs"];
m23_22 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="RecurringJobsFilter.cs"];
m23_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RecurringJobsFilter.cs"];
m23_19 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="33-33", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="RecurringJobsFilter.cs"];
m23_20 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="35-39", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="RecurringJobsFilter.cs"];
m23_21 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="33-33", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="RecurringJobsFilter.cs"];
m23_325 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="464-464", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_326 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="466-472", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_327 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="464-464", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="RecurringJobsFilter.cs"];
m23_230 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="312-312", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_231 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="314-318", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_232 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="312-312", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_300 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="424-424", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="RecurringJobsFilter.cs"];
m23_301 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="426-427", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="RecurringJobsFilter.cs"];
m23_302 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="424-424", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="RecurringJobsFilter.cs"];
m23_49 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="68-68", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="RecurringJobsFilter.cs"];
m23_50 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="70-79", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="RecurringJobsFilter.cs"];
m23_51 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", span="68-68", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsANException_WhenParametersCollectionIsNull()", file="RecurringJobsFilter.cs"];
m23_89 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="RecurringJobsFilter.cs"];
m23_446 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RecurringJobsFilter.cs"];
m23_0 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="RecurringJobsFilter.cs"];
m23_1 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, new SqlServerStorageOptions()))", span="17-18", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", color=red, community=0, file="RecurringJobsFilter.cs"];
m23_2 [label="Assert.Equal(''connection'', exception.ParamName)", span="20-20", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", color=red, community=0, file="RecurringJobsFilter.cs"];
m23_3 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="RecurringJobsFilter.cs"];
m23_28 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RecurringJobsFilter.cs"];
m23_424 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="583-583", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RecurringJobsFilter.cs"];
m23_425 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="585-587", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RecurringJobsFilter.cs"];
m23_426 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="589-603", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RecurringJobsFilter.cs"];
m23_427 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="583-583", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="RecurringJobsFilter.cs"];
m23_413 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="576-576", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="RecurringJobsFilter.cs"];
m23_414 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="578-579", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="RecurringJobsFilter.cs"];
m23_415 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="576-576", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="RecurringJobsFilter.cs"];
m23_123 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="RecurringJobsFilter.cs"];
m23_175 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="218-218", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_176 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="220-223", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_177 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="225-237", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_178 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="218-218", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="RecurringJobsFilter.cs"];
m23_11 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="24-24", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobsFilter.cs"];
m23_12 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(ConnectionUtils.CreateConnection(), null))", span="26-27", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobsFilter.cs"];
m23_13 [label="Assert.Equal(''options'', exception.ParamName)", span="29-29", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobsFilter.cs"];
m23_14 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="24-24", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobsFilter.cs"];
m23_63 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="624-624", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="RecurringJobsFilter.cs"];
m23_447 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="624-624", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="RecurringJobsFilter.cs"];
m23_309 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="431-431", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="RecurringJobsFilter.cs"];
m23_310 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="433-439", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="RecurringJobsFilter.cs"];
m23_311 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="431-431", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="RecurringJobsFilter.cs"];
m23_434 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="RecurringJobsFilter.cs"];
m23_36 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="RecurringJobsFilter.cs"];
m23_88 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="RecurringJobsFilter.cs"];
m23_374 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="RecurringJobsFilter.cs"];
m23_138 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RecurringJobsFilter.cs"];
m23_337 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="476-476", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="RecurringJobsFilter.cs"];
m23_338 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="478-484", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="RecurringJobsFilter.cs"];
m23_339 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="476-476", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="RecurringJobsFilter.cs"];
m23_153 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobsFilter.cs"];
m23_363 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="RecurringJobsFilter.cs"];
m23_422 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="RecurringJobsFilter.cs"];
m23_96 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="RecurringJobsFilter.cs"];
m23_435 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="RecurringJobsFilter.cs"];
m23_442 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="615-615", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_443 [label="var connection = new SqlServerConnection(\r\n                ConnectionUtils.CreateConnection(), new SqlServerStorageOptions())", span="617-618", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_444 [label="action(connection)", span="620-620", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_445 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="615-615", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_9 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="RecurringJobsFilter.cs"];
m23_436 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="606-606", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_437 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="608-608", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_439 [label="action(sqlConnection, connection)", span="611-611", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_438 [label="var connection = new SqlServerConnection(sqlConnection, new SqlServerStorageOptions())", span="609-609", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_440 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="606-606", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="RecurringJobsFilter.cs"];
m23_4 [label="Entry Unk.>", span="", cluster="Unk.>", file="RecurringJobsFilter.cs"];
m23_258 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="358-358", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="RecurringJobsFilter.cs"];
m23_259 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null));\r\n\r\n                Assert.Equal(''queue'', exception.ParamName);\r\n            })", span="360-366", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="RecurringJobsFilter.cs"];
m23_260 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="358-358", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="RecurringJobsFilter.cs"];
m23_237 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="322-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_238 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="324-331", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_239 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="333-342", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_240 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="322-322", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="RecurringJobsFilter.cs"];
m23_144 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="169-169", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RecurringJobsFilter.cs"];
m23_145 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="171-174", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RecurringJobsFilter.cs"];
m23_146 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="176-190", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RecurringJobsFilter.cs"];
m23_147 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="169-169", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="RecurringJobsFilter.cs"];
m23_87 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="RecurringJobsFilter.cs"];
m23_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobsFilter.cs"];
m23_246 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="RecurringJobsFilter.cs"];
m23_165 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="206-206", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="RecurringJobsFilter.cs"];
m23_166 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="208-214", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="RecurringJobsFilter.cs"];
m23_167 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="206-206", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="RecurringJobsFilter.cs"];
m23_116 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="128-128", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="RecurringJobsFilter.cs"];
m23_117 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="130-134", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="RecurringJobsFilter.cs"];
m23_118 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="128-128", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="RecurringJobsFilter.cs"];
m23_364 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="RecurringJobsFilter.cs"];
m23_220 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="300-300", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="RecurringJobsFilter.cs"];
m23_221 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="302-308", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="RecurringJobsFilter.cs"];
m23_222 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="300-300", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="RecurringJobsFilter.cs"];
m23_139 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RecurringJobsFilter.cs"];
m23_37 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="RecurringJobsFilter.cs"];
m23_38 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="55-64", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="RecurringJobsFilter.cs"];
m23_39 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="53-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="RecurringJobsFilter.cs"];
m23_90 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="RecurringJobsFilter.cs"];
m23_95 [label="Entry Unk.True", span="", cluster="Unk.True", file="RecurringJobsFilter.cs"];
m23_395 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="RecurringJobsFilter.cs"];
m23_448 [label="HangFire.SqlServer.Tests.ConnectionFacts", span="", file="RecurringJobsFilter.cs"];
m23_449 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_450 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_451 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_452 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_453 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_454 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_455 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_456 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_457 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_458 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_459 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_460 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_461 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_462 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_463 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_464 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_465 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_466 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_467 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_468 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_469 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_470 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_471 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_472 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_473 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_474 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m23_475 [label="HangFire.SqlServer.SqlServerConnection", span="", file="RecurringJobsFilter.cs"];
m23_476 [label=arrangeSql, span="", file="RecurringJobsFilter.cs"];
m24_18 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="RetryJobsFilter.cs"];
m24_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RetryJobsFilter.cs"];
m24_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RetryJobsFilter.cs"];
m24_16 [label="Entry Unk.SecondsToDelay", span="", cluster="Unk.SecondsToDelay", file="RetryJobsFilter.cs"];
m24_17 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="RetryJobsFilter.cs"];
m24_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RetryJobsFilter.cs"];
m24_20 [label="Entry HangFire.RetryJobsFilter.SecondsToDelay(long)", span="43-43", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs"];
m24_21 [label="var random = new Random()", span="45-45", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs"];
m24_22 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="46-47", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs"];
m24_23 [label="Exit HangFire.RetryJobsFilter.SecondsToDelay(long)", span="43-43", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="RetryJobsFilter.cs"];
m24_24 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="RetryJobsFilter.cs"];
m24_26 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="RetryJobsFilter.cs"];
m24_27 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="RetryJobsFilter.cs"];
m24_15 [label="Entry Unk.IncrementValueInHash", span="", cluster="Unk.IncrementValueInHash", file="RetryJobsFilter.cs"];
m24_0 [label="Entry HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="10-10", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_1 [label="redis == null", span="12-12", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_3 [label="state == null", span="13-13", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_5 [label="state.StateName != FailedState.Name", span="15-15", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_6 [label="return state;", span="18-18", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_7 [label="var retryCount = redis.IncrementValueInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''RetryCount'',\r\n                1)", span="21-24", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_11 [label="return state;", span="39-39", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_2 [label="throw new ArgumentNullException(''redis'');", span="12-12", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_4 [label="throw new ArgumentNullException(''state'');", span="13-13", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_8 [label="retryCount <= MaxRetryAttempts", span="26-26", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_9 [label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="28-28", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_10 [label="return new ScheduledState(\r\n                    String.Format(''Retry attempt {0} of {1}.'', retryCount, MaxRetryAttempts), \r\n                    delay);", span="32-34", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_12 [label="Exit HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="10-10", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="RetryJobsFilter.cs"];
m24_25 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="RetryJobsFilter.cs"];
m24_28 [label="HangFire.RetryJobsFilter", span="", file="RetryJobsFilter.cs"];
m25_139 [label="Entry HangFire.PreserveCultureAttribute.PreserveCultureAttribute()", span="26-26", cluster="HangFire.PreserveCultureAttribute.PreserveCultureAttribute()", file="ServerExceptionContext.cs"];
m25_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="ServerExceptionContext.cs"];
m25_15 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ServerExceptionContext.cs"];
m25_27 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="ServerExceptionContext.cs"];
m25_136 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="145-145", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="ServerExceptionContext.cs"];
m25_28 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_29 [label="var filter = CreateFilter()", span="44-44", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_30 [label="Assert.Throws<ArgumentNullException>(\r\n                () => filter.OnCreating(null))", span="46-47", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_31 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_48 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerExceptionContext.cs"];
m25_20 [label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerExceptionContext.cs"];
m25_70 [label="Entry HangFire.PreserveCultureAttribute.OnPerforming(HangFire.Server.PerformingContext)", span="42-42", cluster="HangFire.PreserveCultureAttribute.OnPerforming(HangFire.Server.PerformingContext)", file="ServerExceptionContext.cs"];
m25_53 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerExceptionContext.cs"];
m25_49 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="64-64", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="ServerExceptionContext.cs"];
m25_50 [label="var filter = CreateFilter()", span="66-66", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="ServerExceptionContext.cs"];
m25_51 [label="Assert.DoesNotThrow(() => filter.OnCreated(null))", span="68-68", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="ServerExceptionContext.cs"];
m25_52 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="64-64", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="ServerExceptionContext.cs"];
m25_102 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="112-112", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_103 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", span="114-114", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_104 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", span="115-115", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_105 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="117-117", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_106 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="118-118", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_107 [label="var filter = CreateFilter()", span="120-120", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_108 [label="filter.OnPerforming(_performingContext)", span="121-121", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_109 [label="filter.OnPerformed(_performedContext)", span="122-122", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_110 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", span="124-124", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_111 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", span="125-125", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_112 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="112-112", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="ServerExceptionContext.cs"];
m25_33 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerExceptionContext.cs"];
m25_119 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", span="129-129", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_120 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", span="131-131", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_121 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns((string)null)", span="132-132", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_122 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="134-134", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_123 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="135-135", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_124 [label="var filter = CreateFilter()", span="137-137", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_125 [label="filter.OnPerforming(_performingContext)", span="138-138", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_126 [label="filter.OnPerformed(_performedContext)", span="139-139", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_127 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", span="141-141", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_128 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", span="142-142", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_129 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", span="129-129", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="ServerExceptionContext.cs"];
m25_19 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="ServerExceptionContext.cs"];
m25_18 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="ServerExceptionContext.cs"];
m25_37 [label="Entry HangFire.PreserveCultureAttribute.OnCreating(HangFire.Client.CreatingContext)", span="28-28", cluster="HangFire.PreserveCultureAttribute.OnCreating(HangFire.Client.CreatingContext)", file="ServerExceptionContext.cs"];
m25_57 [label="Entry HangFire.PreserveCultureAttribute.OnCreated(HangFire.Client.CreatedContext)", span="38-38", cluster="HangFire.PreserveCultureAttribute.OnCreated(HangFire.Client.CreatedContext)", file="ServerExceptionContext.cs"];
m25_58 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="72-72", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_59 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", span="74-74", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_60 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", span="75-75", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_61 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="77-77", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_62 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="78-78", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_63 [label="var filter = CreateFilter()", span="80-80", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_64 [label="filter.OnPerforming(_performingContext)", span="81-81", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_65 [label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentCulture.Name)", span="83-83", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_66 [label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentUICulture.Name)", span="84-84", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_67 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="72-72", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="ServerExceptionContext.cs"];
m25_101 [label="Entry HangFire.PreserveCultureAttribute.OnPerformed(HangFire.Server.PerformedContext)", span="62-62", cluster="HangFire.PreserveCultureAttribute.OnPerformed(HangFire.Server.PerformedContext)", file="ServerExceptionContext.cs"];
m25_0 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_1 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_2 [label="var job = Job.FromExpression(() => Sample())", span="25-25", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_3 [label="var state = new Mock<IState>()", span="26-26", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_5 [label="var createContext = new CreateContext(\r\n                _connection.Object, stateMachineFactory.Object, job, state.Object)", span="29-30", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_9 [label="var performContext = new PerformContext(workerContext.Object, _connection.Object, JobId, job)", span="36-36", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="27-27", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_6 [label="_creatingContext = new CreatingContext(createContext)", span="31-31", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_7 [label="_createdContext = new CreatedContext(createContext, false, null)", span="32-32", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_8 [label="var workerContext = new WorkerContextMock()", span="34-34", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_10 [label="_performingContext = new PerformingContext(performContext)", span="37-37", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_11 [label="_performedContext = new PerformedContext(performContext, false, null)", span="38-38", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_12 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="22-22", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="ServerExceptionContext.cs"];
m25_38 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_39 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="53-53", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_40 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="54-54", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_41 [label="var filter = CreateFilter()", span="56-56", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_42 [label="filter.OnCreating(_creatingContext)", span="57-57", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_43 [label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentCulture''))", span="59-59", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_44 [label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentUICulture''))", span="60-60", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_45 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="51-51", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="ServerExceptionContext.cs"];
m25_23 [label="Entry HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", span="26-26", cluster="HangFire.Server.PerformedContext.PerformedContext(HangFire.Server.PerformContext, bool, System.Exception)", file="ServerExceptionContext.cs"];
m25_74 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ServerExceptionContext.cs"];
m25_32 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="ServerExceptionContext.cs"];
m25_137 [label="return new PreserveCultureAttribute();", span="149-149", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="ServerExceptionContext.cs"];
m25_138 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="147-147", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="ServerExceptionContext.cs"];
m25_68 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerExceptionContext.cs"];
m25_22 [label="Entry HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", span="24-24", cluster="HangFire.Server.PerformingContext.PerformingContext(HangFire.Server.PerformContext)", file="ServerExceptionContext.cs"];
m25_78 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", span="88-88", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_79 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", span="90-90", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_80 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns((string)null)", span="91-91", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_81 [label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="93-93", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_82 [label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", span="94-94", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_83 [label="var filter = CreateFilter()", span="96-96", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_84 [label="filter.OnPerforming(_performingContext)", span="97-97", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_85 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", span="99-99", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_86 [label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", span="100-100", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_87 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", span="88-88", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="ServerExceptionContext.cs"];
m25_94 [label="Entry HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="104-104", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_95 [label="var filter = CreateFilter()", span="106-106", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_96 [label="Assert.Throws<ArgumentNullException>(() => filter.OnPerformed(null))", span="108-108", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_97 [label="Exit HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="104-104", cluster="HangFire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="ServerExceptionContext.cs"];
m25_133 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_24 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_25 [label="Sample()", span="25-25", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_26 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_35 [label="filter.OnCreating(null)", span="47-47", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_34 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_36 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_55 [label="filter.OnCreated(null)", span="68-68", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_54 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_56 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_71 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_75 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_72 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="74-74", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_73 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_76 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="75-75", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_77 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_88 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_91 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_89 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="90-90", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_90 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_92 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="91-91", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_93 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_99 [label="filter.OnPerformed(null)", span="108-108", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_98 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_100 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_113 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_116 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_114 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="114-114", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_115 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_117 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="115-115", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_118 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_130 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_131 [label="x.GetJobParameter(JobId, ''CurrentCulture'')", span="131-131", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_132 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_134 [label="x.GetJobParameter(JobId, ''CurrentUICulture'')", span="132-132", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_135 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="ServerExceptionContext.cs"];
m25_17 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="ServerExceptionContext.cs"];
m25_47 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="ServerExceptionContext.cs"];
m25_14 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerExceptionContext.cs"];
m25_69 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerExceptionContext.cs"];
m25_46 [label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="ServerExceptionContext.cs"];
m25_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerExceptionContext.cs"];
m25_21 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="ServerExceptionContext.cs"];
m25_140 [label="HangFire.Core.Tests.PreserveCultureAttributeFacts", span="", file="ServerExceptionContext.cs"];
m25_141 [label=filter, span="", file="ServerExceptionContext.cs"];
m25_142 [label=filter, span="", file="ServerExceptionContext.cs"];
m25_143 [label=filter, span="", file="ServerExceptionContext.cs"];
m27_50 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="StateMachine.cs"];
m27_30 [label="var connection = context.Connection", span="89-89", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="StateMachine.cs"];
m27_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachine.cs"];
m27_77 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachine.cs"];
m27_0 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="38-38", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="StateMachine.cs"];
m27_1 [label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="38-38", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="StateMachine.cs"];
m27_99 [label="connection.SetJobParameter(jobId, ''Continuations'', JobHelper.ToJson(continuations))", span="230-230", cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="StateMachine.cs"];
m27_74 [label="Entry Unk.AppendHistory", span="", cluster="Unk.AppendHistory", file="StateMachine.cs"];
m27_107 [label="Exit lambda expression", span="154-156", cluster="lambda expression", file="StateMachine.cs"];
m27_113 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="StateMachine.cs"];
m27_78 [label="Entry lambda expression", span="107-108", cluster="lambda expression", file="StateMachine.cs"];
m27_108 [label="Entry Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="239-239", cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs"];
m27_53 [label="Entry Hangfire.States.DeletedState.DeletedState()", span="65-65", cluster="Hangfire.States.DeletedState.DeletedState()", file="StateMachine.cs"];
m27_82 [label="var firstAttempt = true", span="195-195", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", color=green, community=0, file="StateMachine.cs"];
m27_83 [label=true, span="197-197", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateMachine.cs"];
m27_84 [label="var continuationData = context.Connection.GetJobData(continuationJobId)", span="199-199", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", color=green, community=0, file="StateMachine.cs"];
m27_85 [label="continuationData == null", span="200-200", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuaionState(Hangfire.States.ElectStateContext, string, System.TimeSpan)", file="StateMachine.cs"];
m27_48 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="StateMachine.cs"];
m27_75 [label="Entry JsonSerializerSettings.cstr", span="", cluster="JsonSerializerSettings.cstr", file="StateMachine.cs"];
m27_72 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="StateMachine.cs"];
m27_31 [label="var parentId = awaitingState.ParentId", span="90-90", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="StateMachine.cs"];
m27_32 [label="connection.AcquireDistributedJobLock(parentId, AddJobLockTimeout)", span="96-96", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=green, community=0, file="StateMachine.cs"];
m27_33 [label="var continuations = GetContinuations(connection, parentId)", span="98-98", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=green, community=0, file="StateMachine.cs"];
m27_34 [label="continuations.Add(new Continuation { JobId = context.BackgroundJob.Id, Options = awaitingState.Options })", span="99-99", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=green, community=0, file="StateMachine.cs"];
m27_35 [label="var jobData = connection.GetJobData(parentId)", span="101-101", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_36 [label="jobData == null", span="102-102", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_38 [label="var currentState = connection.GetStateData(parentId)", span="111-111", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_45 [label="Entry Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="233-233", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="StateMachine.cs"];
m27_39 [label="SetContinuations(connection, parentId, continuations)", span="116-116", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_40 [label="currentState != null && _knownFinalStates.Contains(currentState.Name)", span="118-118", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_41 [label="var startImmediately = !awaitingState.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) ||\r\n                        currentState.Name == SucceededState.StateName", span="120-121", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=green, community=0, file="StateMachine.cs"];
m27_42 [label="context.CandidateState = startImmediately\r\n                        ? awaitingState.NextState\r\n                        : new DeletedState { Reason = ''Continuation condition was not met'' }", span="123-125", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_43 [label="Exit Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="87-87", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=green, community=0, file="StateMachine.cs"];
m27_44 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="25-25", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", color=green, community=0, file="StateMachine.cs"];
m27_37 [label="throw new InvalidOperationException(\r\n                        $''Can not add a continuation: parent background job '{parentId}' does not exist.'');", span="107-108", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", color=red, community=0, file="StateMachine.cs"];
m27_46 [label="Entry Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", span="243-243", cluster="Hangfire.ContinuationsSupportAttribute.Continuation.Continuation()", file="StateMachine.cs"];
m27_104 [label="Exit Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", span="233-233", cluster="Hangfire.ContinuationsSupportAttribute.GetContinuations(Hangfire.Storage.IStorageConnection, string)", file="StateMachine.cs"];
m27_47 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs"];
m27_100 [label="Exit Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", span="227-227", cluster="Hangfire.ContinuationsSupportAttribute.SetContinuations(Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.List<Hangfire.ContinuationsSupportAttribute.Continuation>)", file="StateMachine.cs"];
m27_112 [label="Entry HangFire.JobHelper.ToJson(object)", span="39-39", cluster="HangFire.JobHelper.ToJson(object)", file="StateMachine.cs"];
m27_98 [label="Entry HangFire.States.JobState.GetProperties()", span="18-18", cluster="HangFire.States.JobState.GetProperties()", file="StateMachine.cs"];
m27_51 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="StateMachine.cs"];
m27_102 [label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="149-152", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m27_55 [label="var nextStates = new Dictionary<string, IState>()", span="135-135", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_61 [label="continuation.Options.HasFlag(JobContinuationOptions.OnlyOnSucceededState) &&\r\n                    context.CandidateState.Name != SucceededState.StateName", span="153-154", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", color=green, community=0, file="StateMachine.cs"];
m27_60 [label="currentState.Name != AwaitingState.StateName", span="151-151", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_62 [label="nextStates.Add(continuation.JobId, new DeletedState { Reason = ''Continuation condition was not met'' })", span="156-156", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_63 [label="IState nextState", span="160-160", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_56 [label=continuations, span="139-139", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_58 [label="var currentState = GetContinuaionState(context, continuation.JobId, ContinuationStateFetchTimeout)", span="143-143", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_59 [label="currentState == null", span="144-144", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_65 [label=Exception, span="168-168", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_57 [label="String.IsNullOrWhiteSpace(continuation.JobId)", span="141-141", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_64 [label="nextState = JsonConvert.DeserializeObject<IState>(\r\n                        currentState.Data[''NextState''],\r\n                        new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.Objects })", span="164-166", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_67 [label="nextStates.Add(continuation.JobId, nextState)", span="176-176", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_66 [label="nextState = new FailedState(ex)\r\n                    {\r\n                        Reason = ''An error occurred while deserializing the continuation''\r\n                    }", span="170-173", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_68 [label=nextStates, span="179-179", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_73 [label="Entry Unk.OnStateUnapplied", span="", cluster="Unk.OnStateUnapplied", file="StateMachine.cs"];
m27_80 [label="Exit lambda expression", span="107-108", cluster="lambda expression", file="StateMachine.cs"];
m27_86 [label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="139-139", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m27_87 [label="var properties = new Dictionary<string, string>(state.GetProperties())", span="142-142", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m27_89 [label="properties.Add(''State'', state.StateName)", span="145-145", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", color=green, community=0];
m27_90 [label=appendToJob, span="147-147", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m27_81 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="StateMachine.cs"];
m27_93 [label="properties.Add(''Reason'', state.Reason)", span="159-159", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", color=green, community=0];
m27_91 [label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="149-152", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", color=green, community=0];
m27_88 [label="var now = DateTime.UtcNow", span="143-143", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m27_92 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="154-156", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", color=green, community=0];
m27_94 [label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="160-160", cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs"];
m27_76 [label="Entry Unk.OnStateApplied", span="", cluster="Unk.OnStateApplied", file="StateMachine.cs"];
m27_52 [label="Entry Unk.OnStateChanged", span="", cluster="Unk.OnStateChanged", file="StateMachine.cs"];
m27_103 [label="Exit lambda expression", span="149-152", cluster="lambda expression", file="StateMachine.cs"];
m27_15 [label="Entry Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="63-63", cluster="Hangfire.ContinuationsSupportAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_16 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="40-40", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs"];
m27_18 [label="throw new ArgumentNullException(''redis'');", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs"];
m27_19 [label="stateDescriptors == null", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs"];
m27_20 [label="throw new ArgumentNullException(''stateDescriptors'');", span="47-47", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs"];
m27_17 [label="redis == null", span="46-46", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs"];
m27_21 [label="stateChangedFilters == null", span="48-48", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs"];
m27_25 [label="Entry Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="78-78", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs"];
m27_26 [label="var awaitingState = context.NewState as AwaitingState", span="80-80", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs"];
m27_27 [label="awaitingState != null", span="81-81", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs", color=red, community=0];
m27_28 [label="context.JobExpirationTimeout = awaitingState.Expiration", span="83-83", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs"];
m27_22 [label="Entry Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", span="87-87", cluster="Hangfire.ContinuationsSupportAttribute.AddContinuation(Hangfire.States.ElectStateContext, Hangfire.States.AwaitingState)", file="StateMachine.cs"];
m27_24 [label="Entry Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", span="130-130", cluster="Hangfire.ContinuationsSupportAttribute.ExecuteContinuationsIfExist(Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m27_23 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="StateMachine.cs"];
m27_29 [label="Exit Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="78-78", cluster="Hangfire.ContinuationsSupportAttribute.OnStateApplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs"];
m27_14 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="StateMachine.cs"];
m27_95 [label="Entry Hangfire.Logging.ILog.Warn(string)", span="264-264", cluster="Hangfire.Logging.ILog.Warn(string)", file="StateMachine.cs"];
m27_96 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StateMachine.cs"];
m27_49 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="StateMachine.cs"];
m27_71 [label="Entry Unk.Unapply", span="", cluster="Unk.Unapply", file="StateMachine.cs"];
m27_106 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="154-156", cluster="lambda expression", file="StateMachine.cs", color=green, community=0];
m27_4 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="48-48", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_5 [label="knownFinalStates == null", span="52-52", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_6 [label="throw new ArgumentNullException(nameof(knownFinalStates));", span="52-52", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_7 [label="stateChanger == null", span="53-53", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_8 [label="throw new ArgumentNullException(nameof(stateChanger));", span="53-53", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_9 [label="_knownFinalStates = knownFinalStates", span="55-55", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_10 [label="_stateChanger = stateChanger", span="56-56", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_11 [label="Order = 1000", span="60-60", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_12 [label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", span="48-48", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>, Hangfire.States.IBackgroundJobStateChanger)", file="StateMachine.cs"];
m27_97 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StateMachine.cs"];
m27_54 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="StateMachine.cs"];
m27_69 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="StateMachine.cs"];
m27_70 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs"];
m27_101 [label="Entry lambda expression", span="149-152", cluster="lambda expression", file="StateMachine.cs"];
m27_109 [label="Exit Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="239-239", cluster="Hangfire.ContinuationsSupportAttribute.Hangfire.States.IApplyStateFilter.OnStateUnapplied(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="StateMachine.cs"];
m27_105 [label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39", cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="StateMachine.cs"];
m27_79 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="StateMachine.cs"];
m27_110 [label="Hangfire.ContinuationsSupportAttribute", span="", cluster="lambda expression", file="StateMachine.cs"];
m27_111 [label="Exit lambda expression", span="162-164", cluster="lambda expression", file="StateMachine.cs"];
m27_2 [label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="43-43", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="StateMachine.cs"];
m27_3 [label="Exit Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", span="43-43", cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute(System.Collections.Generic.HashSet<string>)", file="StateMachine.cs"];
m27_114 [label="HangFire.States.StateMachine", span="", file="StateMachine.cs"];
m27_116 [label=string, span="", file="StateMachine.cs"];
m27_117 [label="HangFire.States.JobState", span="", file="StateMachine.cs"];
m27_118 [label=properties, span="", file="StateMachine.cs"];
m27_115 [label=string, span="", file="StateMachine.cs"];
m28_10 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="StateSteps.cs"];
m28_11 [label="return new SqlServerJobQueueMonitoringApi(connection);", span="41-41", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="StateSteps.cs"];
m28_12 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="StateSteps.cs"];
m28_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateSteps.cs"];
m28_9 [label="Entry Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(IDbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", span="32-32", cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(IDbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateSteps.cs"];
m28_6 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", span="34-34", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", file="StateSteps.cs"];
m28_7 [label="return new SqlServerJobQueue(connection, _options);", span="36-36", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", file="StateSteps.cs"];
m28_8 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", span="34-34", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.GetJobQueue(IDbConnection)", file="StateSteps.cs"];
m28_0 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", span="25-25", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", file="StateSteps.cs"];
m28_1 [label="options == null", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", color=red, community=0, file="StateSteps.cs"];
m28_3 [label="_options = options", span="29-29", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", file="StateSteps.cs"];
m28_2 [label="throw new ArgumentNullException(''options'');", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", color=red, community=0, file="StateSteps.cs"];
m28_4 [label="Exit Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", span="25-25", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorageOptions)", file="StateSteps.cs"];
m28_13 [label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(IDbConnection)", span="28-28", cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(IDbConnection)", file="StateSteps.cs"];
m28_14 [label="Hangfire.SqlServer.SqlServerJobQueueProvider", span="", file="StateSteps.cs"];
m29_93 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="113-113", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_95 [label="_parameters.Add(''Name'', ''Value'')", span="116-116", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_96 [label="var stateMachine = CreateStateMachine()", span="118-118", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_97 [label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="120-120", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_98 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="122-126", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_94 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="115-115", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_99 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="113-113", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="TestFilter.cs"];
m29_100 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TestFilter.cs"];
m29_67 [label="var stateMachine = CreateStateMachine()", span="82-82", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="TestFilter.cs"];
m29_59 [label="Write(RenderPartial(new Paginator(pager)))", span="423-423", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_60 [label="Exit HangFire.Dashboard.Pages.SucceededJobs.Execute()", span="58-58", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_61 [label="Entry HangFire.Dashboard.RazorPage.WriteLiteral(string)", span="57-57", cluster="HangFire.Dashboard.RazorPage.WriteLiteral(string)", file="TestFilter.cs"];
m29_62 [label="Entry HangFire.Dashboard.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Dashboard.Pages.LayoutPage.LayoutPage()", file="TestFilter.cs"];
m29_84 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="102-102", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="TestFilter.cs"];
m29_85 [label="var stateMachine = CreateStateMachine()", span="104-104", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="TestFilter.cs"];
m29_86 [label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="106-107", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="TestFilter.cs"];
m29_87 [label="Assert.Equal(''state'', exception.ParamName)", span="109-109", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="TestFilter.cs"];
m29_88 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="102-102", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="TestFilter.cs"];
m29_16 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Job</th>\r\n                    <th class=''''min-width''''>Total Duration</th>\r\n                    <th class=''''align-right''''>Succeeded</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="143-159", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_37 [label="WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", span="289-290", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_75 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="TestFilter.cs"];
m29_74 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="TestFilter.cs"];
m29_54 [label="Write(job.Value.SucceededAt)", span="377-377", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_258 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="TestFilter.cs"];
m29_76 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="TestFilter.cs"];
m29_77 [label="Entry HangFire.Dashboard.Pages.Paginator.Paginator(HangFire.Dashboard.Pager)", span="6-6", cluster="HangFire.Dashboard.Pages.Paginator.Paginator(HangFire.Dashboard.Pager)", file="TestFilter.cs"];
m29_78 [label="HangFire.Dashboard.Pages.SucceededJobs", span="", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="TestFilter.cs"];
m29_79 [label="Assert.Equal(''parameters'', exception.ParamName)", span="98-98", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="TestFilter.cs"];
m29_80 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="91-91", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="TestFilter.cs"];
m29_0 [label="Entry HangFire.Dashboard.Pages.SucceededJobs.Execute()", span="58-58", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="82-82", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="TestFilter.cs"];
m29_5 [label="int.TryParse(Request.Query[''count''], out perPage)", span="80-80", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_7 [label="Pager pager = new Pager(from, perPage, monitor.SucceededListCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/succeeded'')\r\n    }", span="83-86", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="TestFilter.cs"];
m29_8 [label="JobList<SucceededJobDto> succeededJobs = monitor\r\n        .SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="88-89", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_11 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No succeeded jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="106-107", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="TestFilter.cs"];
m29_10 [label="pager.TotalPageCount == 0", span="100-100", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_1 [label="WriteLiteral(''\r\n'')", span="62-62", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_2 [label="Layout = new LayoutPage { Title = ''Succeeded Jobs'' }", span="75-75", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_3 [label="int from, perPage", span="77-77", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_4 [label="int.TryParse(Request.Query[''from''], out from)", span="79-79", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_9 [label="WriteLiteral(''\r\n'')", span="95-95", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_12 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="119-121", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_66 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="80-80", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="TestFilter.cs"];
m29_184 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="227-227", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_185 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="230-231", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_186 [label="var stateMachine = CreateStateMachine()", span="233-233", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_187 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="236-236", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_189 [label="_connection.Verify(x => x.GetJobData(JobId))", span="240-240", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_190 [label="_stateChangeProcess.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="242-244", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_188 [label="Assert.False(result)", span="239-239", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_191 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="227-227", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="TestFilter.cs"];
m29_153 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="183-183", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="TestFilter.cs"];
m29_154 [label="var stateMachine = CreateStateMachine()", span="185-185", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="TestFilter.cs"];
m29_155 [label="stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="187-187", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="TestFilter.cs"];
m29_156 [label="_distributedLock.Verify(x => x.Dispose())", span="189-189", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="TestFilter.cs"];
m29_157 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="183-183", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="TestFilter.cs"];
m29_70 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="80-80", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="TestFilter.cs"];
m29_41 [label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", span="310-310", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_136 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="161-161", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="TestFilter.cs"];
m29_137 [label="var stateMachine = CreateStateMachine()", span="163-163", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="TestFilter.cs"];
m29_138 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(JobId, null, FromOldState))", span="165-166", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="TestFilter.cs"];
m29_139 [label="Assert.Equal(''toState'', exception.ParamName)", span="168-168", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="TestFilter.cs"];
m29_140 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="161-161", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="TestFilter.cs"];
m29_144 [label="Entry Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.TryToChangeState(string, Hangfire.States.IState, string[])", file="TestFilter.cs"];
m29_233 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="TestFilter.cs"];
m29_63 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="TestFilter.cs"];
m29_32 [label="job.Value != null && !job.Value.InSucceededState", span="248-248", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_224 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="286-286", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_225 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="289-295", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_226 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="297-299", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_227 [label="var stateMachine = CreateStateMachine()", span="301-301", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_228 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="304-304", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_229 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                OldStateName))", span="307-310", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_230 [label="Assert.False(result)", span="312-312", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_231 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="286-286", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_33 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="254-255", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_202 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="248-248", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="TestFilter.cs"];
m29_203 [label="var stateMachine = CreateStateMachine()", span="251-251", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="TestFilter.cs"];
m29_204 [label="var result = stateMachine.TryToChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="254-255", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="TestFilter.cs"];
m29_206 [label="_stateChangeProcess.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="260-262", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="TestFilter.cs"];
m29_205 [label="Assert.False(result)", span="258-258", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="TestFilter.cs"];
m29_207 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="248-248", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="TestFilter.cs"];
m29_58 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="412-412", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_192 [label="Entry Unk.False", span="", cluster="Unk.False", file="TestFilter.cs"];
m29_145 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="172-172", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="TestFilter.cs"];
m29_146 [label="var stateMachine = CreateStateMachine()", span="174-174", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="TestFilter.cs"];
m29_147 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.TryToChangeState(JobId, _state.Object, new string[0]))", span="176-177", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="TestFilter.cs"];
m29_148 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="179-179", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="TestFilter.cs"];
m29_149 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="172-172", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="TestFilter.cs"];
m29_50 [label="job.Value.SucceededAt.HasValue", span="356-356", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_51 [label="WriteLiteral(''                                    <span data-moment=\'''')", span="362-362", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_52 [label="Write(JobHelper.ToTimestamp(job.Value.SucceededAt.Value))", span="367-367", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_53 [label="WriteLiteral(''\''>\r\n                                        '')", span="372-372", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_249 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="316-316", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_250 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="319-325", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_251 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="327-329", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_252 [label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="331-331", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_253 [label="var stateMachine = CreateStateMachine()", span="333-333", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_254 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="336-336", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_255 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.IsAny<StateContext>(),\r\n                _state.Object,\r\n                OldStateName))", span="339-342", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_256 [label="Assert.True(result)", span="344-344", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_257 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="316-316", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="TestFilter.cs"];
m29_25 [label="Write(job.Key)", span="207-207", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_13 [label="Write(Request.LinkTo(''/succeeded/requeue''))", span="126-126", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_46 [label="Write(HtmlHelper.ToHumanDuration(TimeSpan.FromMilliseconds(job.Value.TotalDuration.Value) , false))", span="332-332", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_71 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="TestFilter.cs"];
m29_271 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _stateChangeProcess.Object);", span="349-351", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="TestFilter.cs"];
m29_272 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="347-347", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="TestFilter.cs"];
m29_15 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="138-138", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_17 [label=succeededJobs, span="164-164", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_65 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="TestFilter.cs"];
m29_92 [label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="TestFilter.cs"];
m29_161 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="TestFilter.cs"];
m29_68 [label="Entry HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34", cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="TestFilter.cs"];
m29_69 [label="Entry HangFire.Dashboard.RazorPage.Write(object)", span="64-64", cluster="HangFire.Dashboard.RazorPage.Write(object)", file="TestFilter.cs"];
m29_123 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="143-143", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="TestFilter.cs"];
m29_124 [label="var stateMachine = CreateStateMachine()", span="145-145", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="TestFilter.cs"];
m29_125 [label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="146-146", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="TestFilter.cs"];
m29_126 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="143-143", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="TestFilter.cs"];
m29_42 [label="WriteLiteral(''                            <td class=\''min-width align-right\''>\r\n'')", span="314-314", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_21 [label="Write(job.Value != null && job.Value.InSucceededState ? ''hover'' : null)", span="185-185", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_162 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="193-193", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="TestFilter.cs"];
m29_163 [label="var stateMachine = CreateStateMachine()", span="196-196", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="TestFilter.cs"];
m29_164 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="199-199", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="TestFilter.cs"];
m29_165 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                OldStateName))", span="202-205", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="TestFilter.cs"];
m29_166 [label="Assert.True(result)", span="207-207", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="TestFilter.cs"];
m29_167 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="193-193", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="TestFilter.cs"];
m29_102 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="TestFilter.cs"];
m29_29 [label="WriteLiteral(''\''>\r\n                                '')", span="233-233", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_43 [label="job.Value.TotalDuration.HasValue", span="319-319", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_30 [label="Write(HtmlHelper.JobId(job.Key))", span="238-238", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="TestFilter.cs"];
m29_31 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="243-243", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_44 [label="WriteLiteral(''                                    '')", span="325-325", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="TestFilter.cs"];
m29_45 [label="WriteLiteral('' '')", span="327-327", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_47 [label="WriteLiteral(''\r\n'')", span="337-337", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_48 [label="WriteLiteral(''                            </td>\r\n'')", span="347-347", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", color=green, community=0, file="TestFilter.cs"];
m29_49 [label="WriteLiteral(''                            <td class=\''min-width align-right\''>\r\n'')", span="351-351", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_56 [label="WriteLiteral(''                            </td>\r\n'')", span="392-392", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_64 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="TestFilter.cs"];
m29_73 [label="Entry HangFire.Dashboard.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Dashboard.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="TestFilter.cs"];
m29_82 [label="stateMachine.CreateInState(_job, null, _state.Object)", span="96-96", cluster="lambda expression", file="TestFilter.cs"];
m29_90 [label="stateMachine.CreateInState(_job, _parameters, null)", span="107-107", cluster="lambda expression", file="TestFilter.cs"];
m29_118 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="136-139", cluster="lambda expression", file="TestFilter.cs"];
m29_121 [label="sc.JobId == JobId && sc.Job == _job", span="137-137", cluster="lambda expression", file="TestFilter.cs"];
m29_133 [label="stateMachine.TryToChangeState(null, _state.Object, FromOldState)", span="155-155", cluster="lambda expression", file="TestFilter.cs"];
m29_151 [label="stateMachine.TryToChangeState(JobId, _state.Object, new string[0])", span="177-177", cluster="lambda expression", file="TestFilter.cs"];
m29_170 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                OldStateName)", span="202-205", cluster="lambda expression", file="TestFilter.cs"];
m29_182 [label="x.ChangeState(\r\n                It.IsNotNull<StateContext>(),\r\n                _state.Object,\r\n                OldStateName)", span="220-223", cluster="lambda expression", file="TestFilter.cs"];
m29_269 [label="x.ChangeState(\r\n                It.IsAny<StateContext>(),\r\n                _state.Object,\r\n                OldStateName)", span="339-342", cluster="lambda expression", file="TestFilter.cs"];
m29_26 [label="WriteLiteral(''\'' />\r\n'')", span="212-212", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_34 [label="WriteLiteral(''                        </td>\r\n\r\n'')", span="265-265", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_38 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="295-295", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_39 [label="WriteLiteral(''\''>\r\n                                    '')", span="300-300", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_107 [label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="122-126", cluster="lambda expression", file="TestFilter.cs"];
m29_194 [label="x.GetJobData(It.IsAny<string>())", span="230-230", cluster="lambda expression", file="TestFilter.cs"];
m29_200 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="243-243", cluster="lambda expression", file="TestFilter.cs"];
m29_209 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="261-261", cluster="lambda expression", file="TestFilter.cs"];
m29_219 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="270-270", cluster="lambda expression", file="TestFilter.cs"];
m29_222 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="280-280", cluster="lambda expression", file="TestFilter.cs"];
m29_238 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="298-298", cluster="lambda expression", file="TestFilter.cs"];
m29_241 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                OldStateName)", span="307-310", cluster="lambda expression", file="TestFilter.cs"];
m29_263 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="328-328", cluster="lambda expression", file="TestFilter.cs"];
m29_22 [label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="190-190", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_55 [label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="382-382", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_57 [label="WriteLiteral(''                    </tr>\r\n'')", span="402-402", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_72 [label="Entry HangFire.Dashboard.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Dashboard.HtmlHelper.JobId(string, bool)", file="TestFilter.cs"];
m29_81 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="TestFilter.cs"];
m29_83 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="TestFilter.cs"];
m29_89 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="TestFilter.cs"];
m29_91 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="TestFilter.cs"];
m29_106 [label="Entry lambda expression", span="122-126", cluster="lambda expression", file="TestFilter.cs"];
m29_117 [label="Entry lambda expression", span="136-139", cluster="lambda expression", file="TestFilter.cs"];
m29_119 [label="Exit lambda expression", span="136-139", cluster="lambda expression", file="TestFilter.cs"];
m29_120 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="TestFilter.cs"];
m29_122 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="TestFilter.cs"];
m29_132 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="TestFilter.cs"];
m29_134 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="TestFilter.cs"];
m29_142 [label="stateMachine.TryToChangeState(JobId, null, FromOldState)", span="166-166", cluster="lambda expression", file="TestFilter.cs"];
m29_150 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="TestFilter.cs"];
m29_152 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="TestFilter.cs"];
m29_158 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="TestFilter.cs"];
m29_169 [label="Entry lambda expression", span="202-205", cluster="lambda expression", file="TestFilter.cs"];
m29_171 [label="Exit lambda expression", span="202-205", cluster="lambda expression", file="TestFilter.cs"];
m29_172 [label="Entry lambda expression", span="203-203", cluster="lambda expression", file="TestFilter.cs"];
m29_181 [label="Entry lambda expression", span="220-223", cluster="lambda expression", file="TestFilter.cs"];
m29_183 [label="Exit lambda expression", span="220-223", cluster="lambda expression", file="TestFilter.cs"];
m29_193 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="TestFilter.cs"];
m29_196 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="TestFilter.cs"];
m29_199 [label="Entry lambda expression", span="243-243", cluster="lambda expression", file="TestFilter.cs"];
m29_208 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="TestFilter.cs"];
m29_218 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="TestFilter.cs"];
m29_221 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="TestFilter.cs"];
m29_234 [label="Entry lambda expression", span="289-289", cluster="lambda expression", file="TestFilter.cs"];
m29_237 [label="Entry lambda expression", span="298-298", cluster="lambda expression", file="TestFilter.cs"];
m29_240 [label="Entry lambda expression", span="307-310", cluster="lambda expression", file="TestFilter.cs"];
m29_259 [label="Entry lambda expression", span="319-319", cluster="lambda expression", file="TestFilter.cs"];
m29_262 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="TestFilter.cs"];
m29_265 [label="Entry lambda expression", span="331-331", cluster="lambda expression", file="TestFilter.cs"];
m29_268 [label="Entry lambda expression", span="339-342", cluster="lambda expression", file="TestFilter.cs"];
m29_270 [label="Exit lambda expression", span="339-342", cluster="lambda expression", file="TestFilter.cs"];
m29_28 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="228-228", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_27 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="222-223", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_36 [label="WriteLiteral(''                            <td colspan=\''3\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", span="276-277", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_35 [label="job.Value == null", span="270-270", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_40 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="305-305", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_108 [label="Exit lambda expression", span="122-126", cluster="lambda expression", file="TestFilter.cs"];
m29_109 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="TestFilter.cs"];
m29_141 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="TestFilter.cs"];
m29_195 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="TestFilter.cs"];
m29_201 [label="Exit lambda expression", span="243-243", cluster="lambda expression", file="TestFilter.cs"];
m29_210 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="TestFilter.cs"];
m29_220 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="TestFilter.cs"];
m29_223 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="TestFilter.cs"];
m29_239 [label="Exit lambda expression", span="298-298", cluster="lambda expression", file="TestFilter.cs"];
m29_242 [label="Exit lambda expression", span="307-310", cluster="lambda expression", file="TestFilter.cs"];
m29_243 [label="Entry lambda expression", span="308-308", cluster="lambda expression", file="TestFilter.cs"];
m29_246 [label="Entry lambda expression", span="309-309", cluster="lambda expression", file="TestFilter.cs"];
m29_264 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="TestFilter.cs"];
m29_24 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="201-202", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_23 [label="job.Value != null && job.Value.InSucceededState", span="195-195", cluster="HangFire.Dashboard.Pages.SucceededJobs.Execute()", file="TestFilter.cs"];
m29_143 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="TestFilter.cs"];
m29_160 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="TestFilter.cs"];
m29_159 [label="x.Dispose()", span="189-189", cluster="lambda expression", file="TestFilter.cs"];
m29_174 [label="Exit lambda expression", span="203-203", cluster="lambda expression", file="TestFilter.cs"];
m29_173 [label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')", span="203-203", cluster="lambda expression", file="TestFilter.cs"];
m29_198 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="TestFilter.cs"];
m29_197 [label="x.GetJobData(JobId)", span="240-240", cluster="lambda expression", file="TestFilter.cs"];
m29_236 [label="Exit lambda expression", span="289-289", cluster="lambda expression", file="TestFilter.cs"];
m29_235 [label="x.GetJobData(JobId)", span="289-289", cluster="lambda expression", file="TestFilter.cs"];
m29_261 [label="Exit lambda expression", span="319-319", cluster="lambda expression", file="TestFilter.cs"];
m29_260 [label="x.GetJobData(JobId)", span="319-319", cluster="lambda expression", file="TestFilter.cs"];
m29_267 [label="Exit lambda expression", span="331-331", cluster="lambda expression", file="TestFilter.cs"];
m29_266 [label="x.IgnoreJobLoadException", span="331-331", cluster="lambda expression", file="TestFilter.cs"];
m29_111 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="TestFilter.cs"];
m29_110 [label="d[''Name''] == ''Value''", span="124-124", cluster="lambda expression", file="TestFilter.cs"];
m29_245 [label="Exit lambda expression", span="308-308", cluster="lambda expression", file="TestFilter.cs"];
m29_244 [label="sc.JobId == JobId && sc.Job == null", span="308-308", cluster="lambda expression", file="TestFilter.cs"];
m29_248 [label="Exit lambda expression", span="309-309", cluster="lambda expression", file="TestFilter.cs"];
m29_247 [label="s.Exception != null", span="309-309", cluster="lambda expression", file="TestFilter.cs"];
m29_103 [label="Console.WriteLine(''SomeString'')", span="115-115", cluster="lambda expression", file="TestFilter.cs"];
m29_104 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="TestFilter.cs"];
m29_14 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="TestFilter.cs"];
m29_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="TestFilter.cs"];
m29_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="TestFilter.cs"];
m29_20 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="TestFilter.cs"];
m29_135 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="TestFilter.cs"];
m29_101 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="TestFilter.cs"];
m29_127 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="150-150", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="TestFilter.cs"];
m29_128 [label="var stateMachine = CreateStateMachine()", span="152-152", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="TestFilter.cs"];
m29_129 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, FromOldState))", span="154-155", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="TestFilter.cs"];
m29_130 [label="Assert.Equal(''jobId'', exception.ParamName)", span="157-157", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="TestFilter.cs"];
m29_131 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="150-150", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="TestFilter.cs"];
m29_112 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="130-130", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="TestFilter.cs"];
m29_113 [label="var stateMachine = CreateStateMachine()", span="132-132", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="TestFilter.cs"];
m29_114 [label="stateMachine.CreateInState(_job, _parameters, _state.Object)", span="134-134", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="TestFilter.cs"];
m29_115 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="136-139", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="TestFilter.cs"];
m29_116 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="130-130", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="TestFilter.cs"];
m29_211 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="266-266", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_212 [label="_stateChangeProcess\r\n                .Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="269-271", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_213 [label="var stateMachine = CreateStateMachine()", span="273-273", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_214 [label="var result = stateMachine.TryToChangeState(JobId, _state.Object, FromOldState)", span="276-276", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_215 [label="_stateChangeProcess.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="279-280", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_216 [label="Assert.False(result)", span="282-282", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_217 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="266-266", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="TestFilter.cs"];
m29_232 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="TestFilter.cs"];
m29_168 [label="Entry Unk.True", span="", cluster="Unk.True", file="TestFilter.cs"];
m29_105 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="TestFilter.cs"];
m29_176 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="211-211", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="TestFilter.cs"];
m29_177 [label="var stateMachine = CreateStateMachine()", span="214-214", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="TestFilter.cs"];
m29_178 [label="stateMachine.TryToChangeState(JobId, _state.Object, null)", span="217-217", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="TestFilter.cs"];
m29_179 [label="_stateChangeProcess.Verify(x => x.ChangeState(\r\n                It.IsNotNull<StateContext>(),\r\n                _state.Object,\r\n                OldStateName))", span="220-223", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="TestFilter.cs"];
m29_180 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="211-211", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="TestFilter.cs"];
m29_175 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="TestFilter.cs"];
m29_273 [label="Hangfire.Core.Tests.States.StateMachineFacts", span="", file="TestFilter.cs"];
m29_274 [label=stateMachine, span="", file="TestFilter.cs"];
m29_275 [label=stateMachine, span="", file="TestFilter.cs"];
m29_276 [label=stateMachine, span="", file="TestFilter.cs"];
m29_278 [label=stateMachine, span="", file="TestFilter.cs"];
m29_280 [label=stateMachine, span="", file="TestFilter.cs"];
m29_277 [label=job, span="", file="TestFilter.cs"];
m29_279 [label=stateMachine, span="", file="TestFilter.cs"];
m30_14 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TestStateAppliedFilter.cs"];
m30_0 [label="Entry HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", span="13-13", cluster="HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateAppliedFilter.cs"];
m30_1 [label="_name = name", span="15-15", cluster="HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateAppliedFilter.cs"];
m30_2 [label="_results = results", span="16-16", cluster="HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateAppliedFilter.cs"];
m30_3 [label="Exit HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", span="13-13", cluster="HangFire.Tests.TestStateAppliedFilter.TestStateAppliedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateAppliedFilter.cs"];
m30_11 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="TestStateAppliedFilter.cs"];
m30_13 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="TestStateAppliedFilter.cs"];
m30_15 [label="Entry HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="28-28", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="TestStateAppliedFilter.cs"];
m30_16 [label="Assert.IsNotNull(transaction)", span="30-30", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="TestStateAppliedFilter.cs"];
m30_17 [label="Assert.IsFalse(String.IsNullOrEmpty(jobId))", span="31-31", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="TestStateAppliedFilter.cs"];
m30_18 [label="Assert.IsFalse(String.IsNullOrEmpty(state))", span="32-32", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", color=red, community=0, file="TestStateAppliedFilter.cs"];
m30_19 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="34-34", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="TestStateAppliedFilter.cs"];
m30_20 [label="Exit HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="28-28", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="TestStateAppliedFilter.cs"];
m30_12 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="TestStateAppliedFilter.cs"];
m30_10 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="TestStateAppliedFilter.cs"];
m30_4 [label="Entry HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="19-19", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="TestStateAppliedFilter.cs"];
m30_5 [label="Assert.IsNotNull(transaction)", span="21-21", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="TestStateAppliedFilter.cs"];
m30_6 [label="Assert.IsFalse(String.IsNullOrEmpty(jobId))", span="22-22", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="TestStateAppliedFilter.cs"];
m30_7 [label="Assert.IsNotNull(state)", span="23-23", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="TestStateAppliedFilter.cs"];
m30_8 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="25-25", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="TestStateAppliedFilter.cs"];
m30_9 [label="Exit HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="19-19", cluster="HangFire.Tests.TestStateAppliedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="TestStateAppliedFilter.cs"];
m30_21 [label="HangFire.Tests.TestStateAppliedFilter", span="", file="TestStateAppliedFilter.cs"];
m31_59 [label="Entry Hangfire.Server.Worker.ToString()", span="159-159", cluster="Hangfire.Server.Worker.ToString()", file="TestStateChangingFilter.cs"];
m31_60 [label="return String.Format(''{0} #{1}'', GetType().Name, _workerId.Substring(0, 8));", span="161-161", cluster="Hangfire.Server.Worker.ToString()", file="TestStateChangingFilter.cs"];
m31_61 [label="Exit Hangfire.Server.Worker.ToString()", span="159-159", cluster="Hangfire.Server.Worker.ToString()", file="TestStateChangingFilter.cs"];
m31_16 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TestStateChangingFilter.cs"];
m31_89 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="TestStateChangingFilter.cs"];
m31_93 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="TestStateChangingFilter.cs"];
m31_45 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="TestStateChangingFilter.cs"];
m31_56 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="TestStateChangingFilter.cs"];
m31_64 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="TestStateChangingFilter.cs"];
m31_57 [label="Entry Hangfire.Logging.ILog.DebugException(string, System.Exception)", span="130-130", cluster="Hangfire.Logging.ILog.DebugException(string, System.Exception)", file="TestStateChangingFilter.cs"];
m31_62 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="TestStateChangingFilter.cs"];
m31_51 [label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", span="45-45", cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)", file="TestStateChangingFilter.cs"];
m31_48 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="TestStateChangingFilter.cs"];
m31_55 [label="Entry Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="164-164", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_65 [label="var jobData = connection.GetJobData(jobId)", span="168-168", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_69 [label="var backgroundJob = new BackgroundJob(jobId, jobData.Job, jobData.CreatedAt)", span="180-180", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_70 [label="var jobToken = new ServerJobCancellationToken(connection, jobId, context.ServerId, _workerId, context.CancellationToken)", span="182-182", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_71 [label="var performContext = new PerformContext(connection, backgroundJob, jobToken)", span="183-183", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_66 [label="jobData == null", span="169-169", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_68 [label="jobData.EnsureLoaded()", span="178-178", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_72 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="185-185", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_67 [label="return null;", span="175-175", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_74 [label="var result = _performer.Perform(performContext)", span="188-188", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_73 [label="var duration = Stopwatch.StartNew()", span="186-186", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_76 [label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="191-191", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_75 [label="duration.Stop()", span="189-189", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_77 [label=OperationCanceledException, span="193-193", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_78 [label="throw;", span="195-195", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_79 [label=JobPerformanceException, span="197-197", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_80 [label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="199-202", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_81 [label=Exception, span="204-204", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_82 [label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during processing of a background job.''\r\n                };", span="206-209", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_83 [label="Exit Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", span="164-164", cluster="Hangfire.Server.Worker.PerformJob(Hangfire.Server.BackgroundProcessContext, Hangfire.Storage.IStorageConnection, string)", file="TestStateChangingFilter.cs"];
m31_91 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="TestStateChangingFilter.cs"];
m31_92 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="TestStateChangingFilter.cs"];
m31_84 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="TestStateChangingFilter.cs"];
m31_19 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="TestStateChangingFilter.cs"];
m31_63 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="TestStateChangingFilter.cs"];
m31_47 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="TestStateChangingFilter.cs"];
m31_54 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="TestStateChangingFilter.cs"];
m31_58 [label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25", cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="TestStateChangingFilter.cs"];
m31_85 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="TestStateChangingFilter.cs"];
m31_0 [label="Entry Hangfire.Server.Worker.Worker()", span="51-51", cluster="Hangfire.Server.Worker.Worker()", file="TestStateChangingFilter.cs"];
m31_1 [label="Exit Hangfire.Server.Worker.Worker()", span="51-51", cluster="Hangfire.Server.Worker.Worker()", file="TestStateChangingFilter.cs"];
m31_2 [label="Entry Hangfire.Server.Worker.Worker(params string[])", span="55-55", cluster="Hangfire.Server.Worker.Worker(params string[])", file="TestStateChangingFilter.cs"];
m31_3 [label="Exit Hangfire.Server.Worker.Worker(params string[])", span="55-55", cluster="Hangfire.Server.Worker.Worker(params string[])", file="TestStateChangingFilter.cs"];
m31_50 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, string)", span="39-39", cluster="Hangfire.States.ProcessingState.ProcessingState(string, string)", file="TestStateChangingFilter.cs"];
m31_53 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="TestStateChangingFilter.cs"];
m31_18 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="TestStateChangingFilter.cs"];
m31_4 [label="Entry Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_5 [label="queues == null", span="65-65", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_7 [label="performer == null", span="66-66", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_9 [label="stateChanger == null", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_11 [label="_queues = queues.ToArray()", span="69-69", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_12 [label="_performer = performer", span="70-70", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_13 [label="_stateChanger = stateChanger", span="71-71", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_6 [label="throw new ArgumentNullException(''queues'');", span="65-65", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_8 [label="throw new ArgumentNullException(''performer'');", span="66-66", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_10 [label="throw new ArgumentNullException(''stateChanger'');", span="67-67", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_14 [label="_workerId = Guid.NewGuid().ToString()", span="72-72", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_15 [label="Exit Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", span="60-60", cluster="Hangfire.Server.Worker.Worker(System.Collections.Generic.IEnumerable<string>, Hangfire.Server.IBackgroundJobPerformer, Hangfire.States.IBackgroundJobStateChanger)", file="TestStateChangingFilter.cs"];
m31_46 [label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36", cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="TestStateChangingFilter.cs"];
m31_52 [label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25", cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="TestStateChangingFilter.cs"];
m31_90 [label="Entry Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="TestStateChangingFilter.cs"];
m31_20 [label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_21 [label="context == null", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_23 [label="var connection = context.Storage.GetConnection()", span="80-80", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_24 [label="var fetchedJob = connection.FetchNextJob(_queues, context.CancellationToken)", span="81-81", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_25 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="83-83", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_27 [label="var linkedCts = CancellationTokenSource.CreateLinkedTokenSource(\r\n                        context.CancellationToken,\r\n                        timeoutCts.Token)", span="88-90", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_28 [label="var processingState = new ProcessingState(context.ServerId, _workerId)", span="92-92", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_29 [label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId,\r\n                            processingState,\r\n                            new[] { EnqueuedState.StateName, ProcessingState.StateName },\r\n                            linkedCts.Token))", span="94-100", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_31 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="108-108", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_34 [label="var state = PerformJob(context, connection, fetchedJob.JobId)", span="121-121", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_36 [label="_stateChanger.ChangeState(new StateChangeContext(\r\n                            context.Storage,\r\n                            connection,\r\n                            fetchedJob.JobId, \r\n                            state, \r\n                            ProcessingState.StateName))", span="126-131", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_22 [label="throw new ArgumentNullException(''context'');", span="78-78", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_32 [label="fetchedJob.RemoveFromQueue()", span="111-111", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_37 [label="fetchedJob.RemoveFromQueue()", span="139-139", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_39 [label="fetchedJob.RemoveFromQueue()", span="146-146", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_42 [label="fetchedJob.Requeue()", span="152-152", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_26 [label="var timeoutCts = new CancellationTokenSource(JobInitializationWaitTimeout)", span="87-87", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_30 [label="appliedState == null || !appliedState.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="104-104", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_33 [label="return;", span="112-112", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_35 [label="state != null", span="123-123", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_38 [label=JobAbortedException, span="144-144", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_40 [label=Exception, span="148-148", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_41 [label="Logger.DebugException(''An exception occurred while processing a job. It will be re-queued.'', ex)", span="150-150", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_43 [label="throw;", span="153-153", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_44 [label="Exit Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="76-76", cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="TestStateChangingFilter.cs"];
m31_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TestStateChangingFilter.cs"];
m31_87 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, string, System.Threading.CancellationToken)", file="TestStateChangingFilter.cs"];
m31_88 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", span="36-36", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Storage.IStorageConnection, Hangfire.BackgroundJob, Hangfire.IJobCancellationToken)", file="TestStateChangingFilter.cs"];
m31_86 [label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25", cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="TestStateChangingFilter.cs"];
m31_49 [label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="TestStateChangingFilter.cs"];
m31_94 [label="Hangfire.Server.Worker", span="", file="TestStateChangingFilter.cs"];
n3 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.ClientExceptionContext"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_9  [key=2, style=dotted, color=green];
m1_3 -> m1_7  [key=2, style=dotted, color=green];
m1_3 -> m1_11  [key=2, style=dotted, color=green];
m1_3 -> m1_13  [key=2, style=dotted, color=green];
m1_3 -> m1_23  [key=1, style=dashed, color=green, label="lambda expression"];
m1_1 -> m1_3  [key=1, style=dashed, color=green, label=connectionFake];
m1_1 -> m1_6  [key=1, style=dashed, color=green, label=connectionFake];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=connectionFake];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_10  [key=2, style=dotted];
m1_2 -> m1_11  [key=2, style=dotted];
m1_2 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_15  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_17  [key=2, style=dotted, color=green];
m1_6 -> m1_3  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_16  [key=2, style=dotted, color=green];
m1_5 -> m1_7  [key=2, style=dotted];
m1_7 -> m1_0  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_25 -> m1_23  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_8 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m1_8 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m1_8 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m2_4 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.CreatedContext"];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_4  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_8 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.Dashboard.IAuthorizationFilter>"];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m11_16 -> m11_17  [key=0, style=solid];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_14  [key=2, style=dotted];
m11_17 -> m11_15  [key=2, style=dotted];
m11_18 -> m11_16  [key=0, style=bold, color=blue];
m11_190 -> m11_191  [key=0, style=solid];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_14  [key=2, style=dotted];
m11_191 -> m11_143  [key=2, style=dotted];
m11_192 -> m11_193  [key=0, style=solid];
m11_192 -> m11_31  [key=2, style=dotted];
m11_192 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_193 -> m11_190  [key=0, style=bold, color=blue];
m11_208 -> m11_256  [key=0, style=solid];
m11_208 -> m11_263  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_208 -> m11_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_208 -> m11_264  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m11_256 -> m11_257  [key=0, style=solid];
m11_256 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_256 -> m11_261  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_263 -> m11_264  [key=0, style=solid];
m11_263 -> m11_64  [key=2, style=dotted];
m11_263 -> m11_65  [key=2, style=dotted];
m11_263 -> m11_280  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_264 -> m11_265  [key=0, style=solid];
m11_264 -> m11_276  [key=2, style=dotted];
m11_264 -> m11_269  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_58  [key=2, style=dotted];
m11_257 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_257 -> m11_263  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_257 -> m11_267  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_257 -> m11_271  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_167  [key=2, style=dotted];
m11_261 -> m11_262  [key=0, style=solid];
m11_261 -> m11_275  [key=2, style=dotted];
m11_261 -> m11_261  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_262  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_273  [key=0, style=solid];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_279  [key=2, style=dotted];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_263  [key=0, style=solid];
m11_262 -> m11_259  [key=0, style=solid];
m11_262 -> m11_262  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_59  [key=2, style=dotted];
m11_265 -> m11_271  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_265 -> m11_273  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_269 -> m11_270  [key=0, style=solid];
m11_269 -> m11_271  [key=0, style=solid];
m11_269 -> m11_277  [key=2, style=dotted];
m11_269 -> m11_278  [key=2, style=dotted];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_269  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_266 -> m11_271  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_266 -> m11_272  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_273 -> m11_274  [key=0, style=solid];
m11_272 -> m11_267  [key=0, style=solid];
m11_272 -> m11_272  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_268 -> m11_269  [key=0, style=solid];
m11_270 -> m11_271  [key=0, style=solid];
m11_274 -> m11_208  [key=0, style=bold, color=blue];
m11_92 -> m11_285  [key=0, style=solid];
m11_92 -> m11_292  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_92 -> m11_309  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_92 -> m11_293  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m11_285 -> m11_286  [key=0, style=solid];
m11_285 -> m11_288  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_285 -> m11_289  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_285 -> m11_290  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_292 -> m11_293  [key=0, style=solid];
m11_292 -> m11_64  [key=2, style=dotted];
m11_292 -> m11_65  [key=2, style=dotted];
m11_292 -> m11_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_293 -> m11_294  [key=0, style=solid];
m11_293 -> m11_276  [key=2, style=dotted];
m11_293 -> m11_298  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m11_286 -> m11_287  [key=0, style=solid];
m11_286 -> m11_304  [key=2, style=dotted];
m11_286 -> m11_288  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m11_288 -> m11_289  [key=0, style=solid];
m11_288 -> m11_291  [key=0, style=solid];
m11_289 -> m11_290  [key=0, style=solid];
m11_289 -> m11_167  [key=2, style=dotted];
m11_290 -> m11_288  [key=0, style=solid];
m11_290 -> m11_304  [key=2, style=dotted];
m11_290 -> m11_290  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m11_287 -> m11_288  [key=0, style=solid];
m11_287 -> m11_58  [key=2, style=dotted];
m11_287 -> m11_289  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_287 -> m11_291  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_287 -> m11_300  [key=1, style=dashed, color=darkseagreen4, label=dates];
m11_291 -> m11_292  [key=0, style=solid];
m11_291 -> m11_64  [key=2, style=dotted];
m11_291 -> m11_65  [key=2, style=dotted];
m11_291 -> m11_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_291 -> m11_296  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m11_300 -> m11_301  [key=0, style=solid];
m11_300 -> m11_279  [key=2, style=dotted];
m11_296 -> m11_297  [key=0, style=solid];
m11_296 -> m11_302  [key=0, style=solid];
m11_294 -> m11_295  [key=0, style=solid];
m11_294 -> m11_59  [key=2, style=dotted];
m11_294 -> m11_300  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_294 -> m11_302  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_298 -> m11_299  [key=0, style=solid];
m11_298 -> m11_300  [key=0, style=solid];
m11_298 -> m11_277  [key=2, style=dotted];
m11_298 -> m11_278  [key=2, style=dotted];
m11_295 -> m11_296  [key=0, style=solid];
m11_295 -> m11_298  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_295 -> m11_300  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_295 -> m11_301  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_302 -> m11_303  [key=0, style=solid];
m11_301 -> m11_296  [key=0, style=solid];
m11_301 -> m11_301  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_297 -> m11_298  [key=0, style=solid];
m11_299 -> m11_300  [key=0, style=solid];
m11_303 -> m11_92  [key=0, style=bold, color=blue];
m11_209 -> m11_210  [key=0, style=solid];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_208  [key=2, style=dotted];
m11_211 -> m11_209  [key=0, style=bold, color=blue];
m11_359 -> m11_360  [key=0, style=solid];
m11_360 -> m11_361  [key=0, style=solid];
m11_360 -> m11_375  [key=2, style=dotted];
m11_360 -> m11_363  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_381  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_364  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_387  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_365  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_393  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_366  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_399  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_367  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_406  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_368  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_413  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_371  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_419  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_360 -> m11_373  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_361 -> m11_362  [key=0, style=solid];
m11_361 -> m11_110  [key=2, style=dotted];
m11_361 -> m11_369  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_363 -> m11_364  [key=0, style=solid];
m11_363 -> m11_61  [key=2, style=dotted];
m11_363 -> m11_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_363 -> m11_380  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_364 -> m11_365  [key=0, style=solid];
m11_364 -> m11_61  [key=2, style=dotted];
m11_364 -> m11_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_364 -> m11_386  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_365 -> m11_366  [key=0, style=solid];
m11_365 -> m11_61  [key=2, style=dotted];
m11_365 -> m11_389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_365 -> m11_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_366 -> m11_367  [key=0, style=solid];
m11_366 -> m11_61  [key=2, style=dotted];
m11_366 -> m11_395  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_366 -> m11_398  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_367 -> m11_368  [key=0, style=solid];
m11_367 -> m11_61  [key=2, style=dotted];
m11_367 -> m11_401  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_367 -> m11_405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_368 -> m11_369  [key=0, style=solid];
m11_368 -> m11_61  [key=2, style=dotted];
m11_368 -> m11_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_368 -> m11_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_371 -> m11_369  [key=0, style=solid];
m11_371 -> m11_61  [key=2, style=dotted];
m11_371 -> m11_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_371 -> m11_418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_373 -> m11_374  [key=0, style=solid];
m11_362 -> m11_363  [key=0, style=solid];
m11_362 -> m11_60  [key=2, style=dotted];
m11_362 -> m11_364  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_362 -> m11_365  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_362 -> m11_366  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_362 -> m11_367  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_362 -> m11_368  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_362 -> m11_371  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_362 -> m11_372  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_369 -> m11_370  [key=0, style=solid];
m11_369 -> m11_372  [key=0, style=solid];
m11_372 -> m11_373  [key=0, style=solid];
m11_372 -> m11_62  [key=2, style=dotted];
m11_370 -> m11_371  [key=0, style=solid];
m11_370 -> m11_416  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m11_374 -> m11_359  [key=0, style=bold, color=blue];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_14  [key=2, style=dotted];
m11_213 -> m11_234  [key=2, style=dotted];
m11_213 -> m11_228  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_213 -> m11_229  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_213 -> m11_230  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_213 -> m11_231  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_213 -> m11_232  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_217 -> m11_218  [key=0, style=solid];
m11_217 -> m11_14  [key=2, style=dotted];
m11_217 -> m11_120  [key=2, style=dotted];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_216  [key=0, style=solid];
m11_228 -> m11_229  [key=0, style=solid];
m11_228 -> m11_230  [key=0, style=solid];
m11_228 -> m11_237  [key=2, style=dotted];
m11_229 -> m11_230  [key=0, style=solid];
m11_229 -> m11_74  [key=2, style=dotted];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_232  [key=0, style=solid];
m11_230 -> m11_237  [key=2, style=dotted];
m11_231 -> m11_232  [key=0, style=solid];
m11_231 -> m11_74  [key=2, style=dotted];
m11_232 -> m11_233  [key=0, style=solid];
m11_232 -> m11_241  [key=2, style=dotted];
m11_232 -> m11_242  [key=2, style=dotted];
m11_232 -> m11_237  [key=2, style=dotted];
m11_232 -> m11_243  [key=2, style=dotted];
m11_232 -> m11_238  [key=2, style=dotted];
m11_232 -> m11_244  [key=2, style=dotted];
m11_232 -> m11_245  [key=2, style=dotted];
m11_232 -> m11_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_232 -> m11_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_232 -> m11_253  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_215 -> m11_233  [key=0, style=solid];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_232  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m11_216 -> m11_247  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m11_218 -> m11_219  [key=0, style=solid];
m11_218 -> m11_64  [key=2, style=dotted];
m11_218 -> m11_65  [key=2, style=dotted];
m11_218 -> m11_220  [key=1, style=dashed, color=darkseagreen4, label=history];
m11_219 -> m11_220  [key=0, style=solid];
m11_219 -> m11_235  [key=2, style=dotted];
m11_219 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label=stateHistory];
m11_219 -> m11_232  [key=1, style=dashed, color=darkseagreen4, label=stateHistory];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_228  [key=0, style=solid];
m11_220 -> m11_222  [key=1, style=dashed, color=darkseagreen4, label=entry];
m11_227 -> m11_220  [key=0, style=solid];
m11_227 -> m11_167  [key=2, style=dotted];
m11_221 -> m11_222  [key=0, style=solid];
m11_221 -> m11_236  [key=2, style=dotted];
m11_221 -> m11_237  [key=2, style=dotted];
m11_221 -> m11_238  [key=2, style=dotted];
m11_221 -> m11_226  [key=1, style=dashed, color=darkseagreen4, label=dto];
m11_221 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label=dto];
m11_222 -> m11_223  [key=0, style=solid];
m11_222 -> m11_239  [key=2, style=dotted];
m11_222 -> m11_224  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m11_222 -> m11_225  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m11_222 -> m11_226  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m11_226 -> m11_227  [key=0, style=solid];
m11_223 -> m11_224  [key=0, style=solid];
m11_223 -> m11_240  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_224 -> m11_240  [key=2, style=dotted];
m11_225 -> m11_226  [key=0, style=solid];
m11_225 -> m11_240  [key=2, style=dotted];
m11_233 -> m11_212  [key=0, style=bold, color=blue];
m11_356 -> m11_357  [key=0, style=solid];
m11_357 -> m11_358  [key=0, style=solid];
m11_357 -> m11_15  [key=2, style=dotted];
m11_358 -> m11_356  [key=0, style=bold, color=blue];
m11_88 -> m11_421  [key=0, style=solid];
m11_421 -> m11_424  [key=0, style=solid];
m11_421 -> m11_425  [key=2, style=dotted];
m11_421 -> m11_426  [key=2, style=dotted];
m11_422 -> m11_423  [key=0, style=solid];
m11_423 -> m11_424  [key=0, style=solid];
m11_424 -> m11_88  [key=0, style=bold, color=blue];
m11_418 -> m11_419  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_37  [key=2, style=dotted];
m11_35 -> m11_38  [key=2, style=dotted];
m11_35 -> m11_39  [key=2, style=dotted];
m11_36 -> m11_34  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>"];
m11_42 -> m11_40  [key=0, style=bold, color=blue];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_74  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_85  [key=2, style=dotted];
m11_83 -> m11_86  [key=2, style=dotted];
m11_83 -> m11_87  [key=2, style=dotted];
m11_83 -> m11_88  [key=2, style=dotted];
m11_83 -> m11_39  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_74  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_69  [key=2, style=dotted];
m11_67 -> m11_70  [key=2, style=dotted];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_69  [key=2, style=dotted];
m11_76 -> m11_78  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_75 -> m11_76  [key=0, style=solid];
m11_79 -> m11_80  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_68 -> m11_66  [key=0, style=bold, color=blue];
m11_73 -> m11_71  [key=0, style=bold, color=blue];
m11_77 -> m11_75  [key=0, style=bold, color=blue];
m11_81 -> m11_79  [key=0, style=bold, color=blue];
m11_84 -> m11_82  [key=0, style=bold, color=blue];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_74  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_127  [key=2, style=dotted];
m11_125 -> m11_128  [key=2, style=dotted];
m11_125 -> m11_129  [key=2, style=dotted];
m11_125 -> m11_38  [key=2, style=dotted];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_74  [key=2, style=dotted];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_69  [key=2, style=dotted];
m11_112 -> m11_70  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_69  [key=2, style=dotted];
m11_118 -> m11_120  [key=2, style=dotted];
m11_111 -> m11_112  [key=0, style=solid];
m11_114 -> m11_115  [key=0, style=solid];
m11_117 -> m11_118  [key=0, style=solid];
m11_121 -> m11_122  [key=0, style=solid];
m11_124 -> m11_125  [key=0, style=solid];
m11_113 -> m11_111  [key=0, style=bold, color=blue];
m11_116 -> m11_114  [key=0, style=bold, color=blue];
m11_119 -> m11_117  [key=0, style=bold, color=blue];
m11_123 -> m11_121  [key=0, style=bold, color=blue];
m11_126 -> m11_124  [key=0, style=bold, color=blue];
m11_135 -> m11_136  [key=0, style=solid];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_138  [key=2, style=dotted];
m11_136 -> m11_38  [key=2, style=dotted];
m11_136 -> m11_39  [key=2, style=dotted];
m11_137 -> m11_135  [key=0, style=bold, color=blue];
m11_144 -> m11_145  [key=0, style=solid];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_147  [key=2, style=dotted];
m11_145 -> m11_38  [key=2, style=dotted];
m11_145 -> m11_39  [key=2, style=dotted];
m11_146 -> m11_144  [key=0, style=bold, color=blue];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_69  [key=2, style=dotted];
m11_169 -> m11_143  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_69  [key=2, style=dotted];
m11_175 -> m11_15  [key=2, style=dotted];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_69  [key=2, style=dotted];
m11_181 -> m11_15  [key=2, style=dotted];
m11_168 -> m11_169  [key=0, style=solid];
m11_171 -> m11_172  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid];
m11_177 -> m11_178  [key=0, style=solid];
m11_180 -> m11_181  [key=0, style=solid];
m11_183 -> m11_184  [key=0, style=solid];
m11_186 -> m11_187  [key=0, style=solid];
m11_170 -> m11_168  [key=0, style=bold, color=blue];
m11_172 -> m11_173  [key=0, style=solid];
m11_173 -> m11_171  [key=0, style=bold, color=blue];
m11_176 -> m11_174  [key=0, style=bold, color=blue];
m11_178 -> m11_179  [key=0, style=solid];
m11_179 -> m11_177  [key=0, style=bold, color=blue];
m11_182 -> m11_180  [key=0, style=bold, color=blue];
m11_184 -> m11_185  [key=0, style=solid];
m11_185 -> m11_183  [key=0, style=bold, color=blue];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_189  [key=2, style=dotted];
m11_187 -> m11_38  [key=2, style=dotted];
m11_187 -> m11_39  [key=2, style=dotted];
m11_188 -> m11_186  [key=0, style=bold, color=blue];
m11_194 -> m11_195  [key=0, style=solid];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_189  [key=2, style=dotted];
m11_195 -> m11_38  [key=2, style=dotted];
m11_195 -> m11_39  [key=2, style=dotted];
m11_196 -> m11_194  [key=0, style=bold, color=blue];
m11_201 -> m11_202  [key=0, style=solid];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_204  [key=2, style=dotted];
m11_202 -> m11_38  [key=2, style=dotted];
m11_203 -> m11_201  [key=0, style=bold, color=blue];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_249  [key=2, style=dotted];
m11_246 -> m11_247  [key=0, style=solid];
m11_250 -> m11_251  [key=0, style=solid];
m11_253 -> m11_254  [key=0, style=solid];
m11_248 -> m11_246  [key=0, style=bold, color=blue];
m11_251 -> m11_252  [key=0, style=solid];
m11_252 -> m11_250  [key=0, style=bold, color=blue];
m11_254 -> m11_255  [key=0, style=solid];
m11_255 -> m11_253  [key=0, style=bold, color=blue];
m11_281 -> m11_282  [key=0, style=solid];
m11_281 -> m11_283  [key=2, style=dotted];
m11_281 -> m11_284  [key=2, style=dotted];
m11_280 -> m11_281  [key=0, style=solid];
m11_282 -> m11_280  [key=0, style=bold, color=blue];
m11_309 -> m11_310  [key=0, style=solid];
m11_309 -> m11_69  [key=2, style=dotted];
m11_305 -> m11_306  [key=0, style=solid];
m11_308 -> m11_309  [key=0, style=solid];
m11_306 -> m11_307  [key=0, style=solid];
m11_306 -> m11_283  [key=2, style=dotted];
m11_307 -> m11_305  [key=0, style=bold, color=blue];
m11_310 -> m11_308  [key=0, style=bold, color=blue];
m11_338 -> m11_339  [key=0, style=solid];
m11_338 -> m11_14  [key=2, style=dotted];
m11_338 -> m11_70  [key=2, style=dotted];
m11_348 -> m11_349  [key=0, style=solid];
m11_348 -> m11_350  [key=2, style=dotted];
m11_348 -> m11_351  [key=2, style=dotted];
m11_348 -> m11_352  [key=2, style=dotted];
m11_348 -> m11_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_333 -> m11_334  [key=0, style=solid];
m11_333 -> m11_335  [key=0, style=solid];
m11_333 -> m11_336  [key=2, style=dotted];
m11_334 -> m11_335  [key=0, style=solid];
m11_334 -> m11_74  [key=2, style=dotted];
m11_345 -> m11_346  [key=0, style=solid];
m11_345 -> m11_88  [key=2, style=dotted];
m11_345 -> m11_336  [key=2, style=dotted];
m11_341 -> m11_342  [key=0, style=solid];
m11_341 -> m11_343  [key=0, style=solid];
m11_341 -> m11_336  [key=2, style=dotted];
m11_342 -> m11_343  [key=0, style=solid];
m11_342 -> m11_74  [key=2, style=dotted];
m11_328 -> m11_329  [key=0, style=solid];
m11_328 -> m11_14  [key=2, style=dotted];
m11_328 -> m11_330  [key=2, style=dotted];
m11_328 -> m11_331  [key=2, style=dotted];
m11_328 -> m11_70  [key=2, style=dotted];
m11_327 -> m11_328  [key=0, style=solid];
m11_332 -> m11_333  [key=0, style=solid];
m11_332 -> m11_334  [key=1, style=dashed, color=darkseagreen4, label="?"];
m11_337 -> m11_338  [key=0, style=solid];
m11_340 -> m11_341  [key=0, style=solid];
m11_340 -> m11_342  [key=1, style=dashed, color=darkseagreen4, label="?"];
m11_344 -> m11_345  [key=0, style=solid];
m11_347 -> m11_348  [key=0, style=solid];
m11_329 -> m11_327  [key=0, style=bold, color=blue];
m11_335 -> m11_332  [key=0, style=bold, color=blue];
m11_339 -> m11_337  [key=0, style=bold, color=blue];
m11_343 -> m11_340  [key=0, style=bold, color=blue];
m11_346 -> m11_344  [key=0, style=bold, color=blue];
m11_349 -> m11_347  [key=0, style=bold, color=blue];
m11_353 -> m11_354  [key=0, style=solid];
m11_354 -> m11_355  [key=0, style=solid];
m11_355 -> m11_353  [key=0, style=bold, color=blue];
m11_381 -> m11_382  [key=0, style=solid];
m11_387 -> m11_388  [key=0, style=solid];
m11_393 -> m11_394  [key=0, style=solid];
m11_399 -> m11_400  [key=0, style=solid];
m11_406 -> m11_407  [key=0, style=solid];
m11_406 -> m11_408  [key=2, style=dotted];
m11_413 -> m11_414  [key=0, style=solid];
m11_419 -> m11_420  [key=0, style=solid];
m11_376 -> m11_377  [key=0, style=solid];
m11_380 -> m11_381  [key=0, style=solid];
m11_383 -> m11_384  [key=0, style=solid];
m11_386 -> m11_387  [key=0, style=solid];
m11_389 -> m11_390  [key=0, style=solid];
m11_392 -> m11_393  [key=0, style=solid];
m11_395 -> m11_396  [key=0, style=solid];
m11_398 -> m11_399  [key=0, style=solid];
m11_401 -> m11_402  [key=0, style=solid];
m11_405 -> m11_406  [key=0, style=solid];
m11_409 -> m11_410  [key=0, style=solid];
m11_412 -> m11_413  [key=0, style=solid];
m11_416 -> m11_417  [key=0, style=solid];
m11_416 -> m11_69  [key=2, style=dotted];
m11_416 -> m11_15  [key=2, style=dotted];
m11_415 -> m11_416  [key=0, style=solid];
m11_377 -> m11_378  [key=0, style=solid];
m11_377 -> m11_379  [key=2, style=dotted];
m11_378 -> m11_376  [key=0, style=bold, color=blue];
m11_382 -> m11_380  [key=0, style=bold, color=blue];
m11_384 -> m11_385  [key=0, style=solid];
m11_384 -> m11_379  [key=2, style=dotted];
m11_385 -> m11_383  [key=0, style=bold, color=blue];
m11_388 -> m11_386  [key=0, style=bold, color=blue];
m11_390 -> m11_391  [key=0, style=solid];
m11_390 -> m11_10  [key=2, style=dotted];
m11_391 -> m11_389  [key=0, style=bold, color=blue];
m11_394 -> m11_392  [key=0, style=bold, color=blue];
m11_396 -> m11_397  [key=0, style=solid];
m11_396 -> m11_10  [key=2, style=dotted];
m11_397 -> m11_395  [key=0, style=bold, color=blue];
m11_400 -> m11_398  [key=0, style=bold, color=blue];
m11_402 -> m11_403  [key=0, style=solid];
m11_402 -> m11_404  [key=2, style=dotted];
m11_403 -> m11_401  [key=0, style=bold, color=blue];
m11_407 -> m11_405  [key=0, style=bold, color=blue];
m11_410 -> m11_411  [key=0, style=solid];
m11_410 -> m11_10  [key=2, style=dotted];
m11_411 -> m11_409  [key=0, style=bold, color=blue];
m11_414 -> m11_412  [key=0, style=bold, color=blue];
m11_417 -> m11_415  [key=0, style=bold, color=blue];
m11_420 -> m11_418  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_130 -> m11_131  [key=0, style=solid];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_134  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_31  [key=2, style=dotted];
m11_132 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_133 -> m11_130  [key=0, style=bold, color=blue];
m11_96 -> m11_97  [key=0, style=solid];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_110  [key=2, style=dotted];
m11_97 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m11_97 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_100  [key=0, style=solid];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_107  [key=0, style=solid];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_64  [key=2, style=dotted];
m11_108 -> m11_65  [key=2, style=dotted];
m11_108 -> m11_124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_99 -> m11_109  [key=0, style=solid];
m11_99 -> m11_58  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_59  [key=2, style=dotted];
m11_100 -> m11_105  [key=1, style=dashed, color=darkseagreen4, label=servers];
m11_100 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=servers];
m11_100 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label=servers];
m11_100 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label=servers];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_59  [key=2, style=dotted];
m11_101 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_101 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_101 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_101 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_61  [key=2, style=dotted];
m11_105 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_105 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_102 -> m11_103  [key=0, style=solid];
m11_102 -> m11_60  [key=2, style=dotted];
m11_102 -> m11_105  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_102 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_102 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_106 -> m11_103  [key=0, style=solid];
m11_106 -> m11_61  [key=2, style=dotted];
m11_106 -> m11_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_106 -> m11_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_62  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_104 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_104 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_104 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_104 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_109 -> m11_96  [key=0, style=bold, color=blue];
m11_139 -> m11_140  [key=0, style=solid];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_143  [key=2, style=dotted];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_31  [key=2, style=dotted];
m11_141 -> m11_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_142 -> m11_139  [key=0, style=bold, color=blue];
m11_89 -> m11_90  [key=0, style=solid];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_92  [key=2, style=dotted];
m11_91 -> m11_89  [key=0, style=bold, color=blue];
m11_19 -> m11_20  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_10  [key=2, style=dotted];
m11_21 -> m11_19  [key=0, style=bold, color=blue];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_29  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_30  [key=2, style=dotted];
m11_27 -> m11_31  [key=2, style=dotted];
m11_27 -> m11_32  [key=2, style=dotted];
m11_27 -> m11_33  [key=2, style=dotted];
m11_27 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_27 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_28 -> m11_25  [key=0, style=bold, color=blue];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_10  [key=2, style=dotted];
m11_24 -> m11_22  [key=0, style=bold, color=blue];
m11_205 -> m11_206  [key=0, style=solid];
m11_206 -> m11_207  [key=0, style=solid];
m11_206 -> m11_208  [key=2, style=dotted];
m11_207 -> m11_205  [key=0, style=bold, color=blue];
m11_165 -> m11_311  [key=0, style=solid];
m11_165 -> m11_313  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_165 -> m11_314  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_165 -> m11_315  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_165 -> m11_316  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m11_165 -> m11_317  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_165 -> m11_320  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_165 -> m11_321  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_165 -> m11_338  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_165 -> m11_323  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_165 -> m11_348  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m11_311 -> m11_312  [key=0, style=solid];
m11_311 -> m11_313  [key=0, style=solid];
m11_313 -> m11_314  [key=0, style=solid];
m11_313 -> m11_325  [key=2, style=dotted];
m11_313 -> m11_319  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_313 -> m11_333  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_313 -> m11_334  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_313 -> m11_323  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_313 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_314 -> m11_315  [key=0, style=solid];
m11_314 -> m11_325  [key=2, style=dotted];
m11_314 -> m11_321  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_314 -> m11_341  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_314 -> m11_342  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_314 -> m11_323  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_314 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_315 -> m11_316  [key=0, style=solid];
m11_315 -> m11_315  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_315 -> m11_319  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_315 -> m11_328  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_315 -> m11_323  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_315 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_316 -> m11_317  [key=0, style=solid];
m11_316 -> m11_60  [key=2, style=dotted];
m11_316 -> m11_319  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_316 -> m11_321  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_316 -> m11_322  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_317 -> m11_318  [key=0, style=solid];
m11_317 -> m11_322  [key=0, style=solid];
m11_320 -> m11_321  [key=0, style=solid];
m11_320 -> m11_317  [key=0, style=solid];
m11_321 -> m11_317  [key=0, style=solid];
m11_321 -> m11_61  [key=2, style=dotted];
m11_321 -> m11_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_321 -> m11_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_323 -> m11_324  [key=0, style=solid];
m11_323 -> m11_326  [key=2, style=dotted];
m11_323 -> m11_64  [key=2, style=dotted];
m11_323 -> m11_65  [key=2, style=dotted];
m11_323 -> m11_344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_323 -> m11_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_312 -> m11_324  [key=0, style=solid];
m11_312 -> m11_30  [key=2, style=dotted];
m11_312 -> m11_58  [key=2, style=dotted];
m11_319 -> m11_320  [key=0, style=solid];
m11_319 -> m11_61  [key=2, style=dotted];
m11_319 -> m11_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_319 -> m11_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_322 -> m11_323  [key=0, style=solid];
m11_322 -> m11_62  [key=2, style=dotted];
m11_318 -> m11_319  [key=0, style=solid];
m11_318 -> m11_328  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_318 -> m11_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_318 -> m11_334  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_318 -> m11_321  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_318 -> m11_338  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_318 -> m11_341  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_318 -> m11_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_324 -> m11_165  [key=0, style=bold, color=blue];
m11_93 -> m11_94  [key=0, style=solid];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_92  [key=2, style=dotted];
m11_95 -> m11_93  [key=0, style=bold, color=blue];
m11_148 -> m11_149  [key=0, style=solid];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_110  [key=2, style=dotted];
m11_149 -> m11_151  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_164  [key=2, style=dotted];
m11_150 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_150 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_162  [key=0, style=solid];
m11_151 -> m11_156  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_151 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_151 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_151 -> m11_175  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_151 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_151 -> m11_181  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_151 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_161 -> m11_151  [key=0, style=solid];
m11_161 -> m11_166  [key=2, style=dotted];
m11_161 -> m11_167  [key=2, style=dotted];
m11_162 -> m11_163  [key=0, style=solid];
m11_152 -> m11_153  [key=0, style=solid];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_61  [key=2, style=dotted];
m11_156 -> m11_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_156 -> m11_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_156 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_61  [key=2, style=dotted];
m11_157 -> m11_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_157 -> m11_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_157 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=length];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_61  [key=2, style=dotted];
m11_158 -> m11_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_158 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_158 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_155  [key=0, style=solid];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_60  [key=2, style=dotted];
m11_155 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_155 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_155 -> m11_159  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_62  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_165  [key=2, style=dotted];
m11_160 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_163 -> m11_148  [key=0, style=bold, color=blue];
m11_43 -> m11_44  [key=0, style=solid];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_57  [key=2, style=dotted];
m11_44 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m11_44 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m11_44 -> m11_44  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation"];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_47  [key=0, style=solid];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_54  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_63  [key=2, style=dotted];
m11_55 -> m11_64  [key=2, style=dotted];
m11_55 -> m11_65  [key=2, style=dotted];
m11_55 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_55 -> m11_55  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m11_46 -> m11_56  [key=0, style=solid];
m11_46 -> m11_30  [key=2, style=dotted];
m11_46 -> m11_58  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_59  [key=2, style=dotted];
m11_47 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_47 -> m11_72  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_47 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_47 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_59  [key=2, style=dotted];
m11_48 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_48 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_48 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_48 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_61  [key=2, style=dotted];
m11_52 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_52 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_60  [key=2, style=dotted];
m11_49 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_49 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_49 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m11_53 -> m11_50  [key=0, style=solid];
m11_53 -> m11_61  [key=2, style=dotted];
m11_53 -> m11_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_53 -> m11_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_62  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_51 -> m11_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_51 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_51 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_51 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_56 -> m11_43  [key=0, style=bold, color=blue];
m11_197 -> m11_198  [key=0, style=solid];
m11_198 -> m11_199  [key=0, style=solid];
m11_198 -> m11_14  [key=2, style=dotted];
m11_198 -> m11_143  [key=2, style=dotted];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_31  [key=2, style=dotted];
m11_199 -> m11_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_200 -> m11_197  [key=0, style=bold, color=blue];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_14  [key=2, style=dotted];
m11_12 -> m11_15  [key=2, style=dotted];
m11_13 -> m11_11  [key=0, style=bold, color=blue];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=2, style=dotted];
m11_9 -> m11_7  [key=0, style=bold, color=blue];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [key=2, style=dotted];
m11_5 -> m11_3  [key=0, style=bold, color=blue];
m11_427 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_199  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_357  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_361  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_427 -> m11_362  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisMonitoringApi"];
m11_428 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_428 -> m11_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_428 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_428 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m11_429 -> m11_72  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_429 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_430 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_430 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_431 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_431 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_431 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_431 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label=name];
m11_432 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=servers];
m11_432 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label=servers];
m11_433 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_433 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label=queues];
m11_434 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_434 -> m11_175  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_434 -> m11_181  [key=1, style=dashed, color=darkseagreen4, label=queue];
m11_435 -> m11_247  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m11_436 -> m11_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_437 -> m11_309  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_438 -> m11_328  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_438 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_439 -> m11_328  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_439 -> m11_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_439 -> m11_334  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_439 -> m11_338  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_439 -> m11_341  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_439 -> m11_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m11_440 -> m11_333  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_440 -> m11_334  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_440 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m11_441 -> m11_338  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m11_442 -> m11_341  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_442 -> m11_342  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_442 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label=states];
m11_443 -> m11_348  [key=1, style=dashed, color=darkseagreen4, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m11_444 -> m11_381  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_444 -> m11_387  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_444 -> m11_393  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_444 -> m11_399  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_444 -> m11_406  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_444 -> m11_413  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_444 -> m11_419  [key=1, style=dashed, color=darkseagreen4, label=stats];
m11_445 -> m11_416  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m16_4 -> m16_8  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m16_4 -> m16_11  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m16_4 -> m16_12  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m16_4 -> m16_14  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m16_4 -> m16_16  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m16_4 -> m16_5  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_18  [key=2, style=dotted, color=green];
m16_8 -> m16_10  [key=1, style=dashed, color=green, label=retryAttempt];
m16_8 -> m16_11  [key=1, style=dashed, color=green, label=retryAttempt];
m16_8 -> m16_12  [key=1, style=dashed, color=green, label=retryAttempt];
m16_8 -> m16_14  [key=1, style=dashed, color=green, label=retryAttempt];
m16_6 -> m16_8  [key=0, style=solid, color=green];
m16_6 -> m16_7  [key=0, style=solid, color=green];
m16_9 -> m16_10  [key=0, style=solid, color=green];
m16_9 -> m16_15  [key=0, style=solid, color=green];
m16_10 -> m16_11  [key=0, style=solid, color=green];
m16_10 -> m16_12  [key=1, style=dashed, color=green, label=delay];
m16_10 -> m16_14  [key=1, style=dashed, color=green, label=delay];
m16_10 -> m16_19  [key=2, style=dotted, color=green];
m16_10 -> m16_20  [key=2, style=dotted, color=green];
m16_11 -> m16_12  [key=0, style=solid, color=green];
m16_11 -> m16_21  [key=2, style=dotted, color=green];
m16_12 -> m16_13  [key=0, style=solid, color=green];
m16_12 -> m16_22  [key=2, style=dotted, color=green];
m16_12 -> m16_23  [key=2, style=dotted, color=green];
m16_14 -> m16_17  [key=0, style=solid, color=green];
m16_14 -> m16_24  [key=2, style=dotted, color=green];
m16_13 -> m16_14  [key=0, style=solid, color=green];
m16_13 -> m16_17  [key=0, style=solid, color=green];
m16_5 -> m16_14  [key=1, style=dashed, color=green, label=failedState];
m16_5 -> m16_16  [key=1, style=dashed, color=green, label=failedState];
m16_5 -> m16_6  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid, color=green];
m16_16 -> m16_25  [key=2, style=dotted, color=green];
m16_15 -> m16_16  [key=0, style=solid, color=green];
m16_15 -> m16_17  [key=0, style=solid, color=green];
m16_7 -> m16_17  [key=0, style=solid, color=green];
m16_17 -> m16_4  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_1 -> m16_2  [key=0, style=solid, color=green];
m16_19 -> m16_26  [key=0, style=solid, color=green];
m16_19 -> m16_27  [key=1, style=dashed, color=green, label=long];
m16_26 -> m16_27  [key=0, style=solid, color=green];
m16_26 -> m16_29  [key=2, style=dotted, color=green];
m16_27 -> m16_28  [key=0, style=solid, color=green];
m16_27 -> m16_30  [key=2, style=dotted, color=green];
m16_27 -> m16_31  [key=2, style=dotted, color=green];
m16_27 -> m16_32  [key=2, style=dotted, color=green];
m16_28 -> m16_19  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid, color=green];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m16_3 -> m16_0  [key=0, style=bold, color=blue];
m16_33 -> m16_2  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m16_33 -> m16_12  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m16_33 -> m16_14  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m16_33 -> m16_9  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m16_33 -> m16_15  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m16_33 -> m16_13  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m16_33 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m18_14 -> m18_15  [key=0, style=solid, color=red];
m18_14 -> m18_20  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_23  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan delay"];
m18_26 -> m18_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_26 -> m18_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_29  [key=2, style=dotted];
m18_28 -> m18_26  [key=0, style=bold, color=blue];
m18_6 -> m18_10  [key=0, style=solid];
m18_6 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m18_6 -> m18_15  [key=1, style=dashed, color=red, label="System.Type"];
m18_6 -> m18_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_6 -> m18_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_6 -> m18_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m18_6 -> m18_14  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_12  [key=0, style=solid];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_19  [key=2, style=dotted];
m18_13 -> m18_4  [key=0, style=bold, color=blue];
m18_15 -> m18_16  [key=0, style=solid, color=red];
m18_15 -> m18_21  [key=2, style=dotted, color=red];
m18_15 -> m18_22  [key=2, style=dotted, color=red];
m18_11 -> m18_16  [key=0, style=solid];
m18_11 -> m18_17  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_15  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_18  [key=2, style=dotted];
m18_12 -> m18_15  [key=1, style=dashed, color=red, label=client];
m18_16 -> m18_6  [key=0, style=bold, color=blue];
m18_58 -> m18_75  [key=0, style=solid];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_78  [key=2, style=dotted];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_79  [key=2, style=dotted];
m18_76 -> m18_80  [key=2, style=dotted];
m18_76 -> m18_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_77 -> m18_58  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_26  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_3 -> m18_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [key=2, style=dotted];
m18_4 -> m18_18  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m18_4 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m18_4 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m18_4 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m18_4 -> m18_71  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_5 -> m18_3  [key=0, style=bold, color=blue];
m18_5 -> m18_7  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_21 -> m18_39  [key=0, style=solid];
m18_21 -> m18_18  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_27  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_41  [key=2, style=dotted];
m18_39 -> m18_42  [key=2, style=dotted];
m18_40 -> m18_21  [key=0, style=bold, color=blue];
m18_40 -> m18_41  [key=0, style=solid, color=green];
m18_40 -> m18_44  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_29  [key=2, style=dotted];
m18_32 -> m18_30  [key=0, style=bold, color=blue];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_34  [key=2, style=dotted];
m18_29 -> m18_33  [key=0, style=solid];
m18_29 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m18_29 -> m18_35  [key=1, style=dashed, color=red, label="System.Type"];
m18_29 -> m18_26  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_29 -> m18_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m18_29 -> m18_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_18  [key=2, style=dotted];
m18_33 -> m18_35  [key=1, style=dashed, color=red, label=client];
m18_33 -> m18_31  [key=0, style=bold, color=blue];
m18_34 -> m18_35  [key=0, style=solid, color=red];
m18_34 -> m18_37  [key=2, style=dotted];
m18_34 -> m18_38  [key=2, style=dotted];
m18_35 -> m18_36  [key=0, style=solid, color=red];
m18_35 -> m18_21  [key=2, style=dotted, color=red];
m18_35 -> m18_22  [key=2, style=dotted, color=red];
m18_36 -> m18_29  [key=0, style=bold, color=blue];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_39  [key=2, style=dotted];
m18_18 -> m18_41  [key=3, color=green, style=bold, label="method methodReturn string Async"];
m18_18 -> m18_40  [key=0, style=solid];
m18_18 -> m18_4  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_18 -> m18_71  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m18_18 -> m18_21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_26  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid, color=green];
m18_42 -> m18_47  [key=2, style=dotted, color=green];
m18_42 -> m18_48  [key=2, style=dotted, color=green];
m18_56 -> m18_65  [key=0, style=bold, color=green];
m18_56 -> m18_60  [key=0, style=solid];
m18_56 -> m18_62  [key=0, style=bold, color=crimson];
m18_56 -> m18_63  [key=0, style=bold, color=crimson];
m18_56 -> m18_64  [key=0, style=bold, color=crimson];
m18_65 -> m18_66  [key=0, style=solid, color=green];
m18_65 -> m18_70  [key=2, style=dotted, color=green];
m18_65 -> m18_74  [key=2, style=dotted, color=green];
m18_60 -> m18_65  [key=1, style=dashed, color=green, label=stateMachineFactory];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_67  [key=2, style=dotted];
m18_64 -> m18_65  [key=0, style=solid, color=green];
m18_64 -> m18_70  [key=2, style=dotted];
m18_64 -> m18_73  [key=2, style=dotted];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_68  [key=2, style=dotted];
m18_61 -> m18_69  [key=2, style=dotted];
m18_62 -> m18_70  [key=2, style=dotted];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_71  [key=2, style=dotted];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_70  [key=2, style=dotted];
m18_63 -> m18_72  [key=2, style=dotted];
m18_66 -> m18_56  [key=0, style=bold, color=blue];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_26  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m18_23 -> m18_29  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_26  [key=2, style=dotted];
m18_24 -> m18_30  [key=2, style=dotted];
m18_25 -> m18_23  [key=0, style=bold, color=blue];
m18_25 -> m18_19  [key=0, style=bold, color=blue];
m18_38 -> m18_35  [key=0, style=bold, color=blue];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_7  [key=0, style=bold, color=blue];
m18_7 -> m18_9  [key=0, style=solid];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m18_8 -> m18_13  [key=0, style=solid];
m18_8 -> m18_14  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_6  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_51 -> m18_56  [key=2, style=dotted];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_57  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_58  [key=2, style=dotted];
m18_52 -> m18_57  [key=2, style=dotted];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label=componentRunners];
m18_50 -> m18_55  [key=2, style=dotted];
m18_50 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label=componentRunners];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_59  [key=2, style=dotted];
m18_54 -> m18_49  [key=0, style=bold, color=blue];
m18_81 -> m18_82  [key=0, style=solid];
m18_82 -> m18_70  [key=2, style=dotted];
m18_82 -> m18_83  [key=0, style=solid];
m18_83 -> m18_81  [key=0, style=bold, color=blue];
m18_41 -> m18_42  [key=0, style=solid, color=green];
m18_41 -> m18_45  [key=2, style=dotted, color=green];
m18_41 -> m18_46  [key=2, style=dotted, color=green];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_28  [key=2, style=dotted];
m18_43 -> m18_18  [key=0, style=bold, color=blue];
m18_84 -> m18_41  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_42  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_65  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m18_84 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m19_0 -> m19_1  [key=0, style=solid, color=red];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_3 -> m19_4  [key=0, style=solid, color=red];
m19_4 -> m19_5  [key=0, style=solid, color=red];
m19_5 -> m19_6  [key=0, style=solid, color=red];
m19_5 -> m19_7  [key=2, style=dotted, color=red];
m19_6 -> m19_3  [key=0, style=bold, color=blue];
m19_8 -> m19_1  [key=1, style=dashed, color=red, label="HangFire.Filters.PerformContext"];
m19_8 -> m19_4  [key=1, style=dashed, color=red, label="HangFire.Filters.PerformContext"];
m19_8 -> m19_5  [key=1, style=dashed, color=red, label="HangFire.Filters.PerformContext"];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [key=0, style=bold, color=blue];
m20_4 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m20_4 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.PerformedContext"];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m22_16 -> m22_14  [key=0, style=bold, color=blue];
m22_31 -> m22_23  [key=0, style=bold, color=blue];
m22_23 -> m22_15  [key=3, color=darkorchid, style=bold, label="Parameter variable long retryCount"];
m22_23 -> m22_29  [key=0, style=solid];
m22_23 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label=long];
m22_23 -> m22_46  [key=0, style=solid];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_32  [key=2, style=dotted];
m22_29 -> m22_25  [key=2, style=dotted];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_33  [key=2, style=dotted];
m22_30 -> m22_34  [key=2, style=dotted];
m22_30 -> m22_35  [key=2, style=dotted];
m22_30 -> m22_26  [key=0, style=bold, color=blue];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_23  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_5 -> m22_10  [key=1, style=dashed, color=green, label=failedState];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label=failedState];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_23  [key=2, style=dotted];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_38  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_39  [key=2, style=dotted];
m22_35 -> m22_40  [key=2, style=dotted];
m22_35 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_36 -> m22_37  [key=0, style=solid];
m22_36 -> m22_41  [key=2, style=dotted];
m22_36 -> m22_10  [key=1, style=dashed, color=green, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_36 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.AutomaticRetryAttribute"];
m22_37 -> m22_32  [key=0, style=bold, color=blue];
m22_4 -> m22_10  [key=1, style=dashed, color=green, label="Hangfire.States.ElectStateContext"];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_4 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_14 -> m22_15  [key=0, style=solid];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_4  [key=2, style=dotted];
m22_1 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_5  [key=2, style=dotted];
m22_3 -> m22_0  [key=0, style=bold, color=blue];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_17  [key=2, style=dotted];
m22_46 -> m22_48  [key=2, style=dotted];
m22_46 -> m22_49  [key=2, style=dotted];
m22_47 -> m22_23  [key=0, style=bold, color=blue];
m22_10 -> m22_13  [key=0, style=solid, color=green];
m22_10 -> m22_15  [key=2, style=dotted, color=green];
m22_10 -> m22_11  [key=0, style=solid];
m22_8 -> m22_10  [key=1, style=dashed, color=green, label=retryAttempt];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_14  [key=2, style=dotted];
m22_8 -> m22_6  [key=0, style=bold, color=blue];
m22_9 -> m22_10  [key=0, style=solid, color=green];
m22_9 -> m22_11  [key=0, style=solid];
m22_11 -> m22_13  [key=0, style=solid];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_4  [key=2, style=dotted];
m22_11 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_16  [key=2, style=dotted];
m22_12 -> m22_5  [key=2, style=dotted];
m22_6 -> m22_8  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_7 -> m22_13  [key=0, style=solid];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_9  [key=2, style=dotted];
m22_13 -> m22_4  [key=0, style=bold, color=blue];
m22_13 -> m22_10  [key=0, style=bold, color=blue];
m22_26 -> m22_27  [key=0, style=solid];
m22_15 -> m22_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ElectStateContext context"];
m22_15 -> m22_5  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.FailedState failedState"];
m22_15 -> m22_8  [key=3, color=darkorchid, style=bold, label="Parameter variable int retryAttempt"];
m22_15 -> m22_17  [key=0, style=solid];
m22_15 -> m22_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_15 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_15 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m22_15 -> m22_16  [key=0, style=solid];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_26  [key=2, style=dotted];
m22_19 -> m22_27  [key=2, style=dotted];
m22_19 -> m22_23  [key=2, style=dotted];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_22  [key=0, style=solid];
m22_20 -> m22_24  [key=2, style=dotted];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_28  [key=2, style=dotted];
m22_21 -> m22_25  [key=2, style=dotted];
m22_17 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label=delay];
m22_17 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label=delay];
m22_17 -> m22_23  [key=2, style=dotted];
m22_17 -> m22_18  [key=0, style=solid];
m22_17 -> m22_24  [key=2, style=dotted];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_25  [key=2, style=dotted];
m22_22 -> m22_15  [key=0, style=bold, color=blue];
m22_22 -> m22_18  [key=0, style=bold, color=blue];
m22_42 -> m22_43  [key=0, style=solid];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_45  [key=2, style=dotted];
m22_44 -> m22_42  [key=0, style=bold, color=blue];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_31  [key=2, style=dotted];
m23_124 -> m23_125  [key=0, style=solid];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_130  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_125 -> m23_125  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_126 -> m23_127  [key=0, style=solid];
m23_126 -> m23_67  [key=2, style=dotted];
m23_126 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_127 -> m23_124  [key=0, style=bold, color=blue];
m23_247 -> m23_248  [key=0, style=solid];
m23_248 -> m23_249  [key=0, style=solid];
m23_248 -> m23_22  [key=2, style=dotted];
m23_248 -> m23_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_249 -> m23_247  [key=0, style=bold, color=blue];
m23_29 -> m23_30  [key=0, style=solid];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_22  [key=2, style=dotted];
m23_30 -> m23_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_31 -> m23_29  [key=0, style=bold, color=blue];
m23_289 -> m23_290  [key=0, style=solid];
m23_290 -> m23_291  [key=0, style=solid];
m23_290 -> m23_22  [key=2, style=dotted];
m23_290 -> m23_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_291 -> m23_289  [key=0, style=bold, color=blue];
m23_347 -> m23_348  [key=0, style=solid];
m23_348 -> m23_349  [key=0, style=solid];
m23_348 -> m23_67  [key=2, style=dotted];
m23_348 -> m23_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_349 -> m23_347  [key=0, style=bold, color=blue];
m23_64 -> m23_65  [key=0, style=solid];
m23_65 -> m23_66  [key=0, style=solid];
m23_65 -> m23_67  [key=2, style=dotted];
m23_65 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_66 -> m23_64  [key=0, style=bold, color=blue];
m23_375 -> m23_376  [key=0, style=solid];
m23_376 -> m23_377  [key=0, style=solid];
m23_376 -> m23_380  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_376 -> m23_376  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_377 -> m23_378  [key=0, style=solid];
m23_377 -> m23_67  [key=2, style=dotted];
m23_377 -> m23_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_378 -> m23_375  [key=0, style=bold, color=blue];
m23_279 -> m23_280  [key=0, style=solid];
m23_280 -> m23_281  [key=0, style=solid];
m23_280 -> m23_284  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_280 -> m23_269  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_281 -> m23_282  [key=0, style=solid];
m23_281 -> m23_67  [key=2, style=dotted];
m23_281 -> m23_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_282 -> m23_279  [key=0, style=bold, color=blue];
m23_316 -> m23_317  [key=0, style=solid];
m23_317 -> m23_318  [key=0, style=solid];
m23_317 -> m23_321  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_317 -> m23_317  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_318 -> m23_319  [key=0, style=solid];
m23_318 -> m23_67  [key=2, style=dotted];
m23_318 -> m23_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_319 -> m23_316  [key=0, style=bold, color=blue];
m23_268 -> m23_269  [key=0, style=solid];
m23_269 -> m23_270  [key=0, style=solid];
m23_269 -> m23_273  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_269 -> m23_269  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_270 -> m23_271  [key=0, style=solid];
m23_270 -> m23_67  [key=2, style=dotted];
m23_270 -> m23_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_271 -> m23_268  [key=0, style=bold, color=blue];
m23_396 -> m23_397  [key=0, style=solid];
m23_397 -> m23_398  [key=0, style=solid];
m23_397 -> m23_401  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_397 -> m23_397  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_398 -> m23_399  [key=0, style=solid];
m23_398 -> m23_67  [key=2, style=dotted];
m23_398 -> m23_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_399 -> m23_396  [key=0, style=bold, color=blue];
m23_209 -> m23_210  [key=0, style=solid];
m23_210 -> m23_211  [key=0, style=solid];
m23_210 -> m23_22  [key=2, style=dotted];
m23_210 -> m23_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_211 -> m23_209  [key=0, style=bold, color=blue];
m23_154 -> m23_155  [key=0, style=solid];
m23_155 -> m23_156  [key=0, style=solid];
m23_155 -> m23_22  [key=2, style=dotted];
m23_155 -> m23_157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_156 -> m23_154  [key=0, style=bold, color=blue];
m23_386 -> m23_387  [key=0, style=solid];
m23_387 -> m23_388  [key=0, style=solid];
m23_387 -> m23_22  [key=2, style=dotted];
m23_387 -> m23_389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_388 -> m23_386  [key=0, style=bold, color=blue];
m23_428 -> m23_429  [key=0, style=solid];
m23_428 -> m23_430  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_428 -> m23_431  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_6 -> m23_7  [key=0, style=solid, color=red];
m23_7 -> m23_8  [key=0, style=solid, color=red];
m23_7 -> m23_9  [key=2, style=dotted, color=red];
m23_7 -> m23_10  [key=2, style=dotted, color=red];
m23_8 -> m23_6  [key=0, style=bold, color=blue];
m23_15 -> m23_16  [key=0, style=solid];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_9  [key=2, style=dotted];
m23_16 -> m23_18  [key=2, style=dotted];
m23_17 -> m23_15  [key=0, style=bold, color=blue];
m23_23 -> m23_24  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_27  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_28  [key=2, style=dotted];
m23_26 -> m23_23  [key=0, style=bold, color=blue];
m23_32 -> m23_33  [key=0, style=solid];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_36  [key=2, style=dotted];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_28  [key=2, style=dotted];
m23_35 -> m23_32  [key=0, style=bold, color=blue];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_41 -> m23_42  [key=0, style=solid];
m23_41 -> m23_4  [key=2, style=dotted];
m23_41 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_47  [key=2, style=dotted];
m23_45 -> m23_48  [key=2, style=dotted];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_5  [key=2, style=dotted];
m23_44 -> m23_45  [key=0, style=solid];
m23_43 -> m23_40  [key=0, style=bold, color=blue];
m23_46 -> m23_44  [key=0, style=bold, color=blue];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_4  [key=2, style=dotted];
m23_53 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_59  [key=2, style=dotted];
m23_57 -> m23_48  [key=2, style=dotted];
m23_57 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_5  [key=2, style=dotted];
m23_56 -> m23_57  [key=0, style=solid];
m23_55 -> m23_52  [key=0, style=bold, color=blue];
m23_58 -> m23_56  [key=0, style=bold, color=blue];
m23_60 -> m23_61  [key=0, style=solid];
m23_61 -> m23_62  [key=0, style=solid];
m23_61 -> m23_63  [key=2, style=dotted];
m23_62 -> m23_60  [key=0, style=bold, color=blue];
m23_68 -> m23_69  [key=0, style=solid];
m23_68 -> m23_72  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_68 -> m23_83  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_69 -> m23_70  [key=0, style=solid];
m23_69 -> m23_59  [key=2, style=dotted];
m23_69 -> m23_47  [key=2, style=dotted];
m23_69 -> m23_87  [key=2, style=dotted];
m23_69 -> m23_48  [key=2, style=dotted];
m23_69 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_69 -> m23_71  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_69 -> m23_73  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_69 -> m23_83  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_72 -> m23_73  [key=0, style=solid];
m23_72 -> m23_89  [key=2, style=dotted];
m23_72 -> m23_90  [key=2, style=dotted];
m23_72 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m23_72 -> m23_75  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m23_72 -> m23_76  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m23_72 -> m23_77  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m23_72 -> m23_82  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m23_83 -> m23_84  [key=0, style=solid];
m23_83 -> m23_89  [key=2, style=dotted];
m23_83 -> m23_96  [key=2, style=dotted];
m23_83 -> m23_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_83 -> m23_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_83 -> m23_85  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_28  [key=2, style=dotted];
m23_97 -> m23_98  [key=0, style=solid];
m23_71 -> m23_72  [key=0, style=solid];
m23_71 -> m23_88  [key=2, style=dotted];
m23_73 -> m23_74  [key=0, style=solid];
m23_73 -> m23_91  [key=2, style=dotted];
m23_73 -> m23_5  [key=2, style=dotted];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_5  [key=2, style=dotted];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_5  [key=2, style=dotted];
m23_76 -> m23_77  [key=0, style=solid];
m23_76 -> m23_92  [key=2, style=dotted];
m23_76 -> m23_78  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m23_77 -> m23_78  [key=0, style=solid];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_94  [key=2, style=dotted];
m23_82 -> m23_95  [key=2, style=dotted];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_93  [key=2, style=dotted];
m23_78 -> m23_80  [key=1, style=dashed, color=darkseagreen4, label=job];
m23_78 -> m23_81  [key=1, style=dashed, color=darkseagreen4, label=job];
m23_79 -> m23_80  [key=0, style=solid];
m23_79 -> m23_5  [key=2, style=dotted];
m23_80 -> m23_81  [key=0, style=solid];
m23_80 -> m23_5  [key=2, style=dotted];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_5  [key=2, style=dotted];
m23_84 -> m23_85  [key=0, style=solid];
m23_84 -> m23_5  [key=2, style=dotted];
m23_100 -> m23_101  [key=0, style=solid];
m23_103 -> m23_104  [key=0, style=solid];
m23_85 -> m23_86  [key=0, style=solid];
m23_85 -> m23_5  [key=2, style=dotted];
m23_86 -> m23_68  [key=0, style=bold, color=blue];
m23_98 -> m23_99  [key=0, style=solid];
m23_98 -> m23_63  [key=2, style=dotted];
m23_99 -> m23_97  [key=0, style=bold, color=blue];
m23_101 -> m23_102  [key=0, style=solid];
m23_102 -> m23_100  [key=0, style=bold, color=blue];
m23_104 -> m23_105  [key=0, style=solid];
m23_105 -> m23_103  [key=0, style=bold, color=blue];
m23_109 -> m23_110  [key=0, style=solid];
m23_109 -> m23_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_110 -> m23_111  [key=0, style=solid];
m23_110 -> m23_4  [key=2, style=dotted];
m23_110 -> m23_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_113 -> m23_114  [key=0, style=solid];
m23_113 -> m23_115  [key=2, style=dotted];
m23_111 -> m23_109  [key=0, style=bold, color=blue];
m23_112 -> m23_113  [key=0, style=solid];
m23_114 -> m23_112  [key=0, style=bold, color=blue];
m23_119 -> m23_120  [key=0, style=solid];
m23_120 -> m23_121  [key=0, style=solid];
m23_120 -> m23_115  [key=2, style=dotted];
m23_121 -> m23_122  [key=0, style=solid];
m23_121 -> m23_123  [key=2, style=dotted];
m23_122 -> m23_119  [key=0, style=bold, color=blue];
m23_130 -> m23_131  [key=0, style=solid];
m23_130 -> m23_138  [key=2, style=dotted];
m23_130 -> m23_139  [key=2, style=dotted];
m23_130 -> m23_89  [key=2, style=dotted];
m23_130 -> m23_90  [key=2, style=dotted];
m23_128 -> m23_129  [key=0, style=solid];
m23_128 -> m23_130  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_128 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_129 -> m23_130  [key=0, style=solid];
m23_129 -> m23_59  [key=2, style=dotted];
m23_129 -> m23_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_131 -> m23_132  [key=0, style=solid];
m23_131 -> m23_140  [key=2, style=dotted];
m23_131 -> m23_115  [key=2, style=dotted];
m23_131 -> m23_133  [key=1, style=dashed, color=darkseagreen4, label=result];
m23_131 -> m23_134  [key=1, style=dashed, color=darkseagreen4, label=result];
m23_131 -> m23_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m23_131 -> m23_136  [key=1, style=dashed, color=darkseagreen4, label=result];
m23_141 -> m23_142  [key=0, style=solid];
m23_132 -> m23_133  [key=0, style=solid];
m23_132 -> m23_28  [key=2, style=dotted];
m23_133 -> m23_134  [key=0, style=solid];
m23_133 -> m23_28  [key=2, style=dotted];
m23_134 -> m23_135  [key=0, style=solid];
m23_134 -> m23_5  [key=2, style=dotted];
m23_135 -> m23_136  [key=0, style=solid];
m23_135 -> m23_5  [key=2, style=dotted];
m23_136 -> m23_137  [key=0, style=solid];
m23_136 -> m23_123  [key=2, style=dotted];
m23_137 -> m23_128  [key=0, style=bold, color=blue];
m23_142 -> m23_143  [key=0, style=solid];
m23_142 -> m23_63  [key=2, style=dotted];
m23_143 -> m23_141  [key=0, style=bold, color=blue];
m23_149 -> m23_150  [key=0, style=solid];
m23_149 -> m23_153  [key=2, style=dotted];
m23_149 -> m23_139  [key=2, style=dotted];
m23_149 -> m23_89  [key=2, style=dotted];
m23_149 -> m23_90  [key=2, style=dotted];
m23_148 -> m23_149  [key=0, style=solid];
m23_148 -> m23_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_150 -> m23_151  [key=0, style=solid];
m23_150 -> m23_140  [key=2, style=dotted];
m23_150 -> m23_115  [key=2, style=dotted];
m23_151 -> m23_152  [key=0, style=solid];
m23_151 -> m23_28  [key=2, style=dotted];
m23_152 -> m23_148  [key=0, style=bold, color=blue];
m23_157 -> m23_158  [key=0, style=solid];
m23_157 -> m23_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_158 -> m23_159  [key=0, style=solid];
m23_158 -> m23_4  [key=2, style=dotted];
m23_158 -> m23_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_162 -> m23_163  [key=0, style=solid];
m23_162 -> m23_164  [key=2, style=dotted];
m23_159 -> m23_160  [key=0, style=solid];
m23_159 -> m23_5  [key=2, style=dotted];
m23_161 -> m23_162  [key=0, style=solid];
m23_160 -> m23_157  [key=0, style=bold, color=blue];
m23_163 -> m23_161  [key=0, style=bold, color=blue];
m23_168 -> m23_169  [key=0, style=solid];
m23_168 -> m23_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_169 -> m23_170  [key=0, style=solid];
m23_169 -> m23_4  [key=2, style=dotted];
m23_169 -> m23_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_173 -> m23_174  [key=0, style=solid];
m23_173 -> m23_164  [key=2, style=dotted];
m23_170 -> m23_171  [key=0, style=solid];
m23_170 -> m23_5  [key=2, style=dotted];
m23_172 -> m23_173  [key=0, style=solid];
m23_171 -> m23_168  [key=0, style=bold, color=blue];
m23_174 -> m23_172  [key=0, style=bold, color=blue];
m23_180 -> m23_181  [key=0, style=solid];
m23_180 -> m23_89  [key=2, style=dotted];
m23_180 -> m23_90  [key=2, style=dotted];
m23_179 -> m23_180  [key=0, style=solid];
m23_179 -> m23_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_179 -> m23_183  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_182 -> m23_183  [key=0, style=solid];
m23_182 -> m23_164  [key=2, style=dotted];
m23_183 -> m23_184  [key=0, style=solid];
m23_183 -> m23_89  [key=2, style=dotted];
m23_183 -> m23_90  [key=2, style=dotted];
m23_181 -> m23_182  [key=0, style=solid];
m23_181 -> m23_91  [key=2, style=dotted];
m23_181 -> m23_183  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_184 -> m23_185  [key=0, style=solid];
m23_184 -> m23_5  [key=2, style=dotted];
m23_185 -> m23_179  [key=0, style=bold, color=blue];
m23_191 -> m23_192  [key=0, style=solid];
m23_191 -> m23_89  [key=2, style=dotted];
m23_191 -> m23_90  [key=2, style=dotted];
m23_190 -> m23_191  [key=0, style=solid];
m23_190 -> m23_193  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_190 -> m23_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_190 -> m23_195  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_193 -> m23_194  [key=0, style=solid];
m23_193 -> m23_164  [key=2, style=dotted];
m23_194 -> m23_195  [key=0, style=solid];
m23_194 -> m23_164  [key=2, style=dotted];
m23_195 -> m23_196  [key=0, style=solid];
m23_195 -> m23_89  [key=2, style=dotted];
m23_195 -> m23_90  [key=2, style=dotted];
m23_192 -> m23_193  [key=0, style=solid];
m23_192 -> m23_91  [key=2, style=dotted];
m23_192 -> m23_194  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_192 -> m23_195  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_196 -> m23_197  [key=0, style=solid];
m23_196 -> m23_5  [key=2, style=dotted];
m23_197 -> m23_190  [key=0, style=bold, color=blue];
m23_203 -> m23_204  [key=0, style=solid];
m23_203 -> m23_89  [key=2, style=dotted];
m23_203 -> m23_90  [key=2, style=dotted];
m23_202 -> m23_203  [key=0, style=solid];
m23_202 -> m23_205  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_202 -> m23_206  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_205 -> m23_206  [key=0, style=solid];
m23_205 -> m23_164  [key=2, style=dotted];
m23_206 -> m23_207  [key=0, style=solid];
m23_206 -> m23_89  [key=2, style=dotted];
m23_206 -> m23_90  [key=2, style=dotted];
m23_204 -> m23_205  [key=0, style=solid];
m23_204 -> m23_91  [key=2, style=dotted];
m23_204 -> m23_206  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m23_207 -> m23_208  [key=0, style=solid];
m23_207 -> m23_5  [key=2, style=dotted];
m23_208 -> m23_202  [key=0, style=bold, color=blue];
m23_212 -> m23_213  [key=0, style=solid];
m23_212 -> m23_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_213 -> m23_214  [key=0, style=solid];
m23_213 -> m23_4  [key=2, style=dotted];
m23_213 -> m23_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_217 -> m23_218  [key=0, style=solid];
m23_217 -> m23_219  [key=2, style=dotted];
m23_214 -> m23_215  [key=0, style=solid];
m23_214 -> m23_5  [key=2, style=dotted];
m23_216 -> m23_217  [key=0, style=solid];
m23_215 -> m23_212  [key=0, style=bold, color=blue];
m23_218 -> m23_216  [key=0, style=bold, color=blue];
m23_223 -> m23_224  [key=0, style=solid];
m23_223 -> m23_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_224 -> m23_225  [key=0, style=solid];
m23_224 -> m23_4  [key=2, style=dotted];
m23_224 -> m23_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_228 -> m23_229  [key=0, style=solid];
m23_228 -> m23_219  [key=2, style=dotted];
m23_225 -> m23_226  [key=0, style=solid];
m23_225 -> m23_5  [key=2, style=dotted];
m23_227 -> m23_228  [key=0, style=solid];
m23_226 -> m23_223  [key=0, style=bold, color=blue];
m23_229 -> m23_227  [key=0, style=bold, color=blue];
m23_233 -> m23_234  [key=0, style=solid];
m23_234 -> m23_235  [key=0, style=solid];
m23_234 -> m23_219  [key=2, style=dotted];
m23_235 -> m23_236  [key=0, style=solid];
m23_235 -> m23_123  [key=2, style=dotted];
m23_236 -> m23_233  [key=0, style=bold, color=blue];
m23_242 -> m23_243  [key=0, style=solid];
m23_242 -> m23_4  [key=2, style=dotted];
m23_242 -> m23_90  [key=2, style=dotted];
m23_241 -> m23_242  [key=0, style=solid];
m23_241 -> m23_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_243 -> m23_244  [key=0, style=solid];
m23_243 -> m23_91  [key=2, style=dotted];
m23_243 -> m23_246  [key=2, style=dotted];
m23_244 -> m23_245  [key=0, style=solid];
m23_244 -> m23_5  [key=2, style=dotted];
m23_245 -> m23_241  [key=0, style=bold, color=blue];
m23_250 -> m23_251  [key=0, style=solid];
m23_250 -> m23_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_251 -> m23_252  [key=0, style=solid];
m23_251 -> m23_4  [key=2, style=dotted];
m23_251 -> m23_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_255 -> m23_256  [key=0, style=solid];
m23_255 -> m23_257  [key=2, style=dotted];
m23_252 -> m23_253  [key=0, style=solid];
m23_252 -> m23_5  [key=2, style=dotted];
m23_254 -> m23_255  [key=0, style=solid];
m23_253 -> m23_250  [key=0, style=bold, color=blue];
m23_256 -> m23_254  [key=0, style=bold, color=blue];
m23_261 -> m23_262  [key=0, style=solid];
m23_261 -> m23_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_262 -> m23_263  [key=0, style=solid];
m23_262 -> m23_4  [key=2, style=dotted];
m23_262 -> m23_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_266 -> m23_267  [key=0, style=solid];
m23_266 -> m23_257  [key=2, style=dotted];
m23_263 -> m23_264  [key=0, style=solid];
m23_263 -> m23_5  [key=2, style=dotted];
m23_265 -> m23_266  [key=0, style=solid];
m23_264 -> m23_261  [key=0, style=bold, color=blue];
m23_267 -> m23_265  [key=0, style=bold, color=blue];
m23_273 -> m23_274  [key=0, style=solid];
m23_273 -> m23_278  [key=2, style=dotted];
m23_272 -> m23_273  [key=0, style=solid];
m23_272 -> m23_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_272 -> m23_275  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_274 -> m23_275  [key=0, style=solid];
m23_274 -> m23_257  [key=2, style=dotted];
m23_275 -> m23_276  [key=0, style=solid];
m23_275 -> m23_4  [key=2, style=dotted];
m23_275 -> m23_90  [key=2, style=dotted];
m23_276 -> m23_277  [key=0, style=solid];
m23_276 -> m23_5  [key=2, style=dotted];
m23_277 -> m23_272  [key=0, style=bold, color=blue];
m23_284 -> m23_285  [key=0, style=solid];
m23_284 -> m23_278  [key=2, style=dotted];
m23_283 -> m23_284  [key=0, style=solid];
m23_283 -> m23_285  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_283 -> m23_286  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_285 -> m23_286  [key=0, style=solid];
m23_285 -> m23_257  [key=2, style=dotted];
m23_286 -> m23_287  [key=0, style=solid];
m23_286 -> m23_4  [key=2, style=dotted];
m23_286 -> m23_90  [key=2, style=dotted];
m23_287 -> m23_288  [key=0, style=solid];
m23_287 -> m23_5  [key=2, style=dotted];
m23_288 -> m23_283  [key=0, style=bold, color=blue];
m23_292 -> m23_293  [key=0, style=solid];
m23_292 -> m23_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_293 -> m23_294  [key=0, style=solid];
m23_293 -> m23_4  [key=2, style=dotted];
m23_293 -> m23_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_297 -> m23_298  [key=0, style=solid];
m23_297 -> m23_299  [key=2, style=dotted];
m23_294 -> m23_295  [key=0, style=solid];
m23_294 -> m23_5  [key=2, style=dotted];
m23_296 -> m23_297  [key=0, style=solid];
m23_295 -> m23_292  [key=0, style=bold, color=blue];
m23_298 -> m23_296  [key=0, style=bold, color=blue];
m23_303 -> m23_304  [key=0, style=solid];
m23_303 -> m23_307  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_304 -> m23_305  [key=0, style=solid];
m23_304 -> m23_4  [key=2, style=dotted];
m23_304 -> m23_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_307 -> m23_308  [key=0, style=solid];
m23_307 -> m23_299  [key=2, style=dotted];
m23_305 -> m23_303  [key=0, style=bold, color=blue];
m23_306 -> m23_307  [key=0, style=solid];
m23_308 -> m23_306  [key=0, style=bold, color=blue];
m23_312 -> m23_313  [key=0, style=solid];
m23_313 -> m23_314  [key=0, style=solid];
m23_313 -> m23_299  [key=2, style=dotted];
m23_314 -> m23_315  [key=0, style=solid];
m23_314 -> m23_123  [key=2, style=dotted];
m23_315 -> m23_312  [key=0, style=bold, color=blue];
m23_321 -> m23_322  [key=0, style=solid];
m23_321 -> m23_278  [key=2, style=dotted];
m23_320 -> m23_321  [key=0, style=solid];
m23_320 -> m23_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_322 -> m23_323  [key=0, style=solid];
m23_322 -> m23_299  [key=2, style=dotted];
m23_323 -> m23_324  [key=0, style=solid];
m23_323 -> m23_5  [key=2, style=dotted];
m23_324 -> m23_320  [key=0, style=bold, color=blue];
m23_328 -> m23_329  [key=0, style=solid];
m23_328 -> m23_333  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_329 -> m23_330  [key=0, style=solid];
m23_329 -> m23_4  [key=2, style=dotted];
m23_329 -> m23_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_333 -> m23_334  [key=0, style=solid];
m23_333 -> m23_335  [key=2, style=dotted];
m23_333 -> m23_336  [key=2, style=dotted];
m23_330 -> m23_331  [key=0, style=solid];
m23_330 -> m23_5  [key=2, style=dotted];
m23_332 -> m23_333  [key=0, style=solid];
m23_331 -> m23_328  [key=0, style=bold, color=blue];
m23_334 -> m23_332  [key=0, style=bold, color=blue];
m23_340 -> m23_341  [key=0, style=solid];
m23_340 -> m23_345  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_341 -> m23_342  [key=0, style=solid];
m23_341 -> m23_4  [key=2, style=dotted];
m23_341 -> m23_344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_345 -> m23_346  [key=0, style=solid];
m23_345 -> m23_336  [key=2, style=dotted];
m23_342 -> m23_343  [key=0, style=solid];
m23_342 -> m23_5  [key=2, style=dotted];
m23_344 -> m23_345  [key=0, style=solid];
m23_343 -> m23_340  [key=0, style=bold, color=blue];
m23_346 -> m23_344  [key=0, style=bold, color=blue];
m23_350 -> m23_351  [key=0, style=solid];
m23_350 -> m23_352  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_350 -> m23_353  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_350 -> m23_358  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_350 -> m23_359  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_351 -> m23_352  [key=0, style=solid];
m23_351 -> m23_335  [key=2, style=dotted];
m23_352 -> m23_353  [key=0, style=solid];
m23_352 -> m23_336  [key=2, style=dotted];
m23_353 -> m23_354  [key=0, style=solid];
m23_353 -> m23_89  [key=2, style=dotted];
m23_353 -> m23_90  [key=2, style=dotted];
m23_353 -> m23_355  [key=1, style=dashed, color=darkseagreen4, label=server];
m23_353 -> m23_356  [key=1, style=dashed, color=darkseagreen4, label=server];
m23_358 -> m23_359  [key=0, style=solid];
m23_358 -> m23_336  [key=2, style=dotted];
m23_359 -> m23_360  [key=0, style=solid];
m23_359 -> m23_89  [key=2, style=dotted];
m23_359 -> m23_90  [key=2, style=dotted];
m23_359 -> m23_361  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m23_354 -> m23_355  [key=0, style=solid];
m23_354 -> m23_5  [key=2, style=dotted];
m23_355 -> m23_356  [key=0, style=solid];
m23_355 -> m23_363  [key=2, style=dotted];
m23_355 -> m23_95  [key=2, style=dotted];
m23_356 -> m23_357  [key=0, style=solid];
m23_356 -> m23_28  [key=2, style=dotted];
m23_357 -> m23_358  [key=0, style=solid];
m23_357 -> m23_335  [key=2, style=dotted];
m23_360 -> m23_361  [key=0, style=solid];
m23_360 -> m23_5  [key=2, style=dotted];
m23_361 -> m23_362  [key=0, style=solid];
m23_361 -> m23_364  [key=2, style=dotted];
m23_362 -> m23_350  [key=0, style=bold, color=blue];
m23_368 -> m23_369  [key=0, style=solid];
m23_368 -> m23_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_369 -> m23_370  [key=0, style=solid];
m23_369 -> m23_4  [key=2, style=dotted];
m23_369 -> m23_371  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_372 -> m23_373  [key=0, style=solid];
m23_372 -> m23_374  [key=2, style=dotted];
m23_370 -> m23_368  [key=0, style=bold, color=blue];
m23_371 -> m23_372  [key=0, style=solid];
m23_373 -> m23_371  [key=0, style=bold, color=blue];
m23_380 -> m23_381  [key=0, style=solid];
m23_380 -> m23_278  [key=2, style=dotted];
m23_379 -> m23_380  [key=0, style=solid];
m23_379 -> m23_381  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_379 -> m23_382  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_381 -> m23_382  [key=0, style=solid];
m23_381 -> m23_374  [key=2, style=dotted];
m23_382 -> m23_383  [key=0, style=solid];
m23_382 -> m23_89  [key=2, style=dotted];
m23_382 -> m23_90  [key=2, style=dotted];
m23_383 -> m23_384  [key=0, style=solid];
m23_383 -> m23_385  [key=2, style=dotted];
m23_384 -> m23_379  [key=0, style=bold, color=blue];
m23_389 -> m23_390  [key=0, style=solid];
m23_389 -> m23_393  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_390 -> m23_391  [key=0, style=solid];
m23_390 -> m23_4  [key=2, style=dotted];
m23_390 -> m23_392  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_393 -> m23_394  [key=0, style=solid];
m23_393 -> m23_395  [key=2, style=dotted];
m23_391 -> m23_389  [key=0, style=bold, color=blue];
m23_392 -> m23_393  [key=0, style=solid];
m23_394 -> m23_392  [key=0, style=bold, color=blue];
m23_401 -> m23_402  [key=0, style=solid];
m23_401 -> m23_278  [key=2, style=dotted];
m23_400 -> m23_401  [key=0, style=solid];
m23_400 -> m23_402  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_400 -> m23_403  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_402 -> m23_403  [key=0, style=solid];
m23_402 -> m23_395  [key=2, style=dotted];
m23_403 -> m23_404  [key=0, style=solid];
m23_403 -> m23_89  [key=2, style=dotted];
m23_403 -> m23_96  [key=2, style=dotted];
m23_403 -> m23_407  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_403 -> m23_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_403 -> m23_405  [key=1, style=dashed, color=darkseagreen4, label=servers];
m23_404 -> m23_405  [key=0, style=solid];
m23_404 -> m23_385  [key=2, style=dotted];
m23_407 -> m23_408  [key=0, style=solid];
m23_410 -> m23_411  [key=0, style=solid];
m23_405 -> m23_406  [key=0, style=solid];
m23_405 -> m23_5  [key=2, style=dotted];
m23_406 -> m23_400  [key=0, style=bold, color=blue];
m23_408 -> m23_409  [key=0, style=solid];
m23_409 -> m23_407  [key=0, style=bold, color=blue];
m23_411 -> m23_412  [key=0, style=solid];
m23_412 -> m23_410  [key=0, style=bold, color=blue];
m23_416 -> m23_417  [key=0, style=solid];
m23_416 -> m23_420  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_417 -> m23_418  [key=0, style=solid];
m23_417 -> m23_4  [key=2, style=dotted];
m23_417 -> m23_419  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_420 -> m23_421  [key=0, style=solid];
m23_420 -> m23_422  [key=2, style=dotted];
m23_420 -> m23_423  [key=2, style=dotted];
m23_418 -> m23_416  [key=0, style=bold, color=blue];
m23_419 -> m23_420  [key=0, style=solid];
m23_421 -> m23_419  [key=0, style=bold, color=blue];
m23_429 -> m23_430  [key=0, style=solid];
m23_429 -> m23_94  [key=2, style=dotted];
m23_429 -> m23_434  [key=2, style=dotted];
m23_429 -> m23_278  [key=2, style=dotted];
m23_430 -> m23_431  [key=0, style=solid];
m23_430 -> m23_435  [key=2, style=dotted];
m23_430 -> m23_423  [key=2, style=dotted];
m23_431 -> m23_432  [key=0, style=solid];
m23_431 -> m23_89  [key=2, style=dotted];
m23_431 -> m23_90  [key=2, style=dotted];
m23_432 -> m23_433  [key=0, style=solid];
m23_432 -> m23_5  [key=2, style=dotted];
m23_433 -> m23_428  [key=0, style=bold, color=blue];
m23_198 -> m23_199  [key=0, style=solid];
m23_199 -> m23_200  [key=0, style=solid];
m23_199 -> m23_203  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_199 -> m23_176  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_200 -> m23_201  [key=0, style=solid];
m23_200 -> m23_67  [key=2, style=dotted];
m23_200 -> m23_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_201 -> m23_198  [key=0, style=bold, color=blue];
m23_106 -> m23_107  [key=0, style=solid];
m23_107 -> m23_108  [key=0, style=solid];
m23_107 -> m23_22  [key=2, style=dotted];
m23_107 -> m23_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_108 -> m23_106  [key=0, style=bold, color=blue];
m23_365 -> m23_366  [key=0, style=solid];
m23_366 -> m23_367  [key=0, style=solid];
m23_366 -> m23_22  [key=2, style=dotted];
m23_366 -> m23_368  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_367 -> m23_365  [key=0, style=bold, color=blue];
m23_186 -> m23_187  [key=0, style=solid];
m23_187 -> m23_188  [key=0, style=solid];
m23_187 -> m23_191  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_187 -> m23_176  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_188 -> m23_189  [key=0, style=solid];
m23_188 -> m23_67  [key=2, style=dotted];
m23_188 -> m23_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_189 -> m23_186  [key=0, style=bold, color=blue];
m23_19 -> m23_20  [key=0, style=solid];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_22  [key=2, style=dotted];
m23_20 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_21 -> m23_19  [key=0, style=bold, color=blue];
m23_325 -> m23_326  [key=0, style=solid];
m23_326 -> m23_327  [key=0, style=solid];
m23_326 -> m23_22  [key=2, style=dotted];
m23_326 -> m23_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_327 -> m23_325  [key=0, style=bold, color=blue];
m23_230 -> m23_231  [key=0, style=solid];
m23_231 -> m23_232  [key=0, style=solid];
m23_231 -> m23_22  [key=2, style=dotted];
m23_231 -> m23_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_232 -> m23_230  [key=0, style=bold, color=blue];
m23_300 -> m23_301  [key=0, style=solid];
m23_301 -> m23_302  [key=0, style=solid];
m23_301 -> m23_22  [key=2, style=dotted];
m23_301 -> m23_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_302 -> m23_300  [key=0, style=bold, color=blue];
m23_49 -> m23_50  [key=0, style=solid];
m23_50 -> m23_51  [key=0, style=solid];
m23_50 -> m23_22  [key=2, style=dotted];
m23_50 -> m23_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_51 -> m23_49  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_1 -> m23_4  [key=2, style=dotted, color=red];
m23_1 -> m23_6  [key=1, style=dashed, color=red, label="lambda expression"];
m23_2 -> m23_3  [key=0, style=solid, color=red];
m23_2 -> m23_5  [key=2, style=dotted, color=red];
m23_3 -> m23_0  [key=0, style=bold, color=blue];
m23_424 -> m23_425  [key=0, style=solid];
m23_425 -> m23_426  [key=0, style=solid];
m23_425 -> m23_429  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_425 -> m23_425  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_426 -> m23_427  [key=0, style=solid];
m23_426 -> m23_67  [key=2, style=dotted];
m23_426 -> m23_428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_427 -> m23_424  [key=0, style=bold, color=blue];
m23_413 -> m23_414  [key=0, style=solid];
m23_414 -> m23_415  [key=0, style=solid];
m23_414 -> m23_22  [key=2, style=dotted];
m23_414 -> m23_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_415 -> m23_413  [key=0, style=bold, color=blue];
m23_175 -> m23_176  [key=0, style=solid];
m23_176 -> m23_177  [key=0, style=solid];
m23_176 -> m23_180  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_176 -> m23_176  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_177 -> m23_178  [key=0, style=solid];
m23_177 -> m23_67  [key=2, style=dotted];
m23_177 -> m23_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_178 -> m23_175  [key=0, style=bold, color=blue];
m23_11 -> m23_12  [key=0, style=solid];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_4  [key=2, style=dotted];
m23_12 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_5  [key=2, style=dotted];
m23_14 -> m23_11  [key=0, style=bold, color=blue];
m23_63 -> m23_447  [key=0, style=solid];
m23_63 -> m23_50  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m23_63 -> m23_65  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m23_63 -> m23_126  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m23_447 -> m23_63  [key=0, style=bold, color=blue];
m23_309 -> m23_310  [key=0, style=solid];
m23_310 -> m23_311  [key=0, style=solid];
m23_310 -> m23_22  [key=2, style=dotted];
m23_310 -> m23_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_311 -> m23_309  [key=0, style=bold, color=blue];
m23_337 -> m23_338  [key=0, style=solid];
m23_338 -> m23_339  [key=0, style=solid];
m23_338 -> m23_22  [key=2, style=dotted];
m23_338 -> m23_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_339 -> m23_337  [key=0, style=bold, color=blue];
m23_442 -> m23_443  [key=0, style=solid];
m23_442 -> m23_444  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerConnection>"];
m23_443 -> m23_444  [key=0, style=solid];
m23_443 -> m23_9  [key=2, style=dotted];
m23_443 -> m23_18  [key=2, style=dotted];
m23_443 -> m23_10  [key=2, style=dotted];
m23_444 -> m23_445  [key=0, style=solid];
m23_444 -> m23_446  [key=2, style=dotted];
m23_445 -> m23_442  [key=0, style=bold, color=blue];
m23_436 -> m23_437  [key=0, style=solid];
m23_436 -> m23_439  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>"];
m23_437 -> m23_438  [key=0, style=solid];
m23_437 -> m23_18  [key=2, style=dotted];
m23_437 -> m23_439  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m23_439 -> m23_440  [key=0, style=solid];
m23_439 -> m23_441  [key=2, style=dotted];
m23_438 -> m23_439  [key=0, style=solid];
m23_438 -> m23_9  [key=2, style=dotted];
m23_438 -> m23_10  [key=2, style=dotted];
m23_440 -> m23_436  [key=0, style=bold, color=blue];
m23_258 -> m23_259  [key=0, style=solid];
m23_259 -> m23_260  [key=0, style=solid];
m23_259 -> m23_22  [key=2, style=dotted];
m23_259 -> m23_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_260 -> m23_258  [key=0, style=bold, color=blue];
m23_237 -> m23_238  [key=0, style=solid];
m23_238 -> m23_239  [key=0, style=solid];
m23_238 -> m23_242  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_238 -> m23_238  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_239 -> m23_240  [key=0, style=solid];
m23_239 -> m23_67  [key=2, style=dotted];
m23_239 -> m23_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_240 -> m23_237  [key=0, style=bold, color=blue];
m23_144 -> m23_145  [key=0, style=solid];
m23_145 -> m23_146  [key=0, style=solid];
m23_145 -> m23_149  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_145 -> m23_125  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m23_146 -> m23_147  [key=0, style=solid];
m23_146 -> m23_67  [key=2, style=dotted];
m23_146 -> m23_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_147 -> m23_144  [key=0, style=bold, color=blue];
m23_165 -> m23_166  [key=0, style=solid];
m23_166 -> m23_167  [key=0, style=solid];
m23_166 -> m23_22  [key=2, style=dotted];
m23_166 -> m23_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_167 -> m23_165  [key=0, style=bold, color=blue];
m23_116 -> m23_117  [key=0, style=solid];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_22  [key=2, style=dotted];
m23_117 -> m23_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_118 -> m23_116  [key=0, style=bold, color=blue];
m23_220 -> m23_221  [key=0, style=solid];
m23_221 -> m23_222  [key=0, style=solid];
m23_221 -> m23_22  [key=2, style=dotted];
m23_221 -> m23_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_222 -> m23_220  [key=0, style=bold, color=blue];
m23_37 -> m23_38  [key=0, style=solid];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_22  [key=2, style=dotted];
m23_38 -> m23_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_39 -> m23_37  [key=0, style=bold, color=blue];
m23_448 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_177  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_210  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_231  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_248  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_270  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_290  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_310  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_318  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_326  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_338  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_366  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_377  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_387  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_398  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_414  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_448 -> m23_426  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m23_449 -> m23_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_450 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_451 -> m23_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_452 -> m23_130  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_453 -> m23_149  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_454 -> m23_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_455 -> m23_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_456 -> m23_180  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_457 -> m23_191  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_458 -> m23_203  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_459 -> m23_217  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_460 -> m23_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_461 -> m23_242  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_462 -> m23_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_463 -> m23_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_464 -> m23_273  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_465 -> m23_284  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_466 -> m23_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_467 -> m23_307  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_468 -> m23_321  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_469 -> m23_333  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_470 -> m23_345  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_471 -> m23_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_472 -> m23_380  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_473 -> m23_393  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_474 -> m23_401  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m23_475 -> m23_420  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m23_476 -> m23_429  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m24_20 -> m24_21  [key=0, style=solid];
m24_20 -> m24_22  [key=1, style=dashed, color=darkseagreen4, label=long];
m24_21 -> m24_22  [key=0, style=solid];
m24_21 -> m24_24  [key=2, style=dotted];
m24_22 -> m24_23  [key=0, style=solid];
m24_22 -> m24_25  [key=2, style=dotted];
m24_22 -> m24_26  [key=2, style=dotted];
m24_22 -> m24_27  [key=2, style=dotted];
m24_23 -> m24_20  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m24_0 -> m24_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m24_0 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m24_0 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m24_0 -> m24_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m24_0 -> m24_0  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.JobState OnStateChanged"];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_5  [key=0, style=solid];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=0, style=solid];
m24_6 -> m24_12  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_14  [key=2, style=dotted];
m24_7 -> m24_15  [key=2, style=dotted];
m24_7 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m24_7 -> m24_10  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m24_11 -> m24_12  [key=0, style=solid];
m24_2 -> m24_12  [key=0, style=solid];
m24_2 -> m24_13  [key=2, style=dotted];
m24_4 -> m24_12  [key=0, style=solid];
m24_4 -> m24_13  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_11  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_16  [key=2, style=dotted];
m24_9 -> m24_17  [key=2, style=dotted];
m24_10 -> m24_12  [key=0, style=solid];
m24_10 -> m24_18  [key=2, style=dotted];
m24_10 -> m24_19  [key=2, style=dotted];
m24_12 -> m24_0  [key=0, style=bold, color=blue];
m24_28 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RetryJobsFilter"];
m25_27 -> m25_136  [key=0, style=solid];
m25_136 -> m25_27  [key=0, style=bold, color=blue];
m25_28 -> m25_29  [key=0, style=solid];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_32  [key=2, style=dotted];
m25_29 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_33  [key=2, style=dotted];
m25_30 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_31 -> m25_28  [key=0, style=bold, color=blue];
m25_49 -> m25_50  [key=0, style=solid];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_32  [key=2, style=dotted];
m25_50 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_53  [key=2, style=dotted];
m25_51 -> m25_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_52 -> m25_49  [key=0, style=bold, color=blue];
m25_102 -> m25_103  [key=0, style=solid];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_68  [key=2, style=dotted];
m25_103 -> m25_69  [key=2, style=dotted];
m25_103 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_68  [key=2, style=dotted];
m25_104 -> m25_69  [key=2, style=dotted];
m25_104 -> m25_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_105 -> m25_106  [key=0, style=solid];
m25_105 -> m25_46  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_106 -> m25_46  [key=2, style=dotted];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_32  [key=2, style=dotted];
m25_107 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_70  [key=2, style=dotted];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_101  [key=2, style=dotted];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_48  [key=2, style=dotted];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_48  [key=2, style=dotted];
m25_112 -> m25_102  [key=0, style=bold, color=blue];
m25_119 -> m25_120  [key=0, style=solid];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_68  [key=2, style=dotted];
m25_120 -> m25_69  [key=2, style=dotted];
m25_120 -> m25_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_68  [key=2, style=dotted];
m25_121 -> m25_69  [key=2, style=dotted];
m25_121 -> m25_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_46  [key=2, style=dotted];
m25_123 -> m25_124  [key=0, style=solid];
m25_123 -> m25_46  [key=2, style=dotted];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_32  [key=2, style=dotted];
m25_124 -> m25_126  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_70  [key=2, style=dotted];
m25_126 -> m25_127  [key=0, style=solid];
m25_126 -> m25_101  [key=2, style=dotted];
m25_127 -> m25_128  [key=0, style=solid];
m25_127 -> m25_48  [key=2, style=dotted];
m25_128 -> m25_129  [key=0, style=solid];
m25_128 -> m25_48  [key=2, style=dotted];
m25_129 -> m25_119  [key=0, style=bold, color=blue];
m25_58 -> m25_59  [key=0, style=solid];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_68  [key=2, style=dotted];
m25_59 -> m25_69  [key=2, style=dotted];
m25_59 -> m25_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_68  [key=2, style=dotted];
m25_60 -> m25_69  [key=2, style=dotted];
m25_60 -> m25_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_61 -> m25_62  [key=0, style=solid];
m25_61 -> m25_46  [key=2, style=dotted];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> m25_46  [key=2, style=dotted];
m25_63 -> m25_64  [key=0, style=solid];
m25_63 -> m25_32  [key=2, style=dotted];
m25_64 -> m25_65  [key=0, style=solid];
m25_64 -> m25_70  [key=2, style=dotted];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_48  [key=2, style=dotted];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_48  [key=2, style=dotted];
m25_67 -> m25_58  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_13  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_14  [key=2, style=dotted];
m25_2 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_2 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_2 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_15  [key=2, style=dotted];
m25_3 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=state];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_17  [key=2, style=dotted];
m25_5 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label=createContext];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_21  [key=2, style=dotted];
m25_9 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_16  [key=2, style=dotted];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_18  [key=2, style=dotted];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_19  [key=2, style=dotted];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_20  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_22  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_23  [key=2, style=dotted];
m25_12 -> m25_0  [key=0, style=bold, color=blue];
m25_38 -> m25_39  [key=0, style=solid];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_46  [key=2, style=dotted];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_46  [key=2, style=dotted];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_32  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_37  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_47  [key=2, style=dotted];
m25_43 -> m25_48  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_47  [key=2, style=dotted];
m25_44 -> m25_48  [key=2, style=dotted];
m25_45 -> m25_38  [key=0, style=bold, color=blue];
m25_32 -> m25_137  [key=0, style=solid];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_139  [key=2, style=dotted];
m25_138 -> m25_32  [key=0, style=bold, color=blue];
m25_78 -> m25_79  [key=0, style=solid];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_68  [key=2, style=dotted];
m25_79 -> m25_69  [key=2, style=dotted];
m25_79 -> m25_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_68  [key=2, style=dotted];
m25_80 -> m25_69  [key=2, style=dotted];
m25_80 -> m25_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_46  [key=2, style=dotted];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_46  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_32  [key=2, style=dotted];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_70  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_48  [key=2, style=dotted];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_48  [key=2, style=dotted];
m25_87 -> m25_78  [key=0, style=bold, color=blue];
m25_94 -> m25_95  [key=0, style=solid];
m25_95 -> m25_96  [key=0, style=solid];
m25_95 -> m25_32  [key=2, style=dotted];
m25_95 -> m25_99  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_96 -> m25_97  [key=0, style=solid];
m25_96 -> m25_33  [key=2, style=dotted];
m25_96 -> m25_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_97 -> m25_94  [key=0, style=bold, color=blue];
m25_133 -> m25_134  [key=0, style=solid];
m25_24 -> m25_25  [key=0, style=solid];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_27  [key=2, style=dotted];
m25_26 -> m25_24  [key=0, style=bold, color=blue];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_37  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_36 -> m25_34  [key=0, style=bold, color=blue];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_57  [key=2, style=dotted];
m25_54 -> m25_55  [key=0, style=solid];
m25_56 -> m25_54  [key=0, style=bold, color=blue];
m25_71 -> m25_72  [key=0, style=solid];
m25_75 -> m25_76  [key=0, style=solid];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_74  [key=2, style=dotted];
m25_73 -> m25_71  [key=0, style=bold, color=blue];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_74  [key=2, style=dotted];
m25_77 -> m25_75  [key=0, style=bold, color=blue];
m25_88 -> m25_89  [key=0, style=solid];
m25_91 -> m25_92  [key=0, style=solid];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_74  [key=2, style=dotted];
m25_90 -> m25_88  [key=0, style=bold, color=blue];
m25_92 -> m25_93  [key=0, style=solid];
m25_92 -> m25_74  [key=2, style=dotted];
m25_93 -> m25_91  [key=0, style=bold, color=blue];
m25_99 -> m25_100  [key=0, style=solid];
m25_99 -> m25_101  [key=2, style=dotted];
m25_98 -> m25_99  [key=0, style=solid];
m25_100 -> m25_98  [key=0, style=bold, color=blue];
m25_113 -> m25_114  [key=0, style=solid];
m25_116 -> m25_117  [key=0, style=solid];
m25_114 -> m25_115  [key=0, style=solid];
m25_114 -> m25_74  [key=2, style=dotted];
m25_115 -> m25_113  [key=0, style=bold, color=blue];
m25_117 -> m25_118  [key=0, style=solid];
m25_117 -> m25_74  [key=2, style=dotted];
m25_118 -> m25_116  [key=0, style=bold, color=blue];
m25_130 -> m25_131  [key=0, style=solid];
m25_131 -> m25_132  [key=0, style=solid];
m25_131 -> m25_74  [key=2, style=dotted];
m25_132 -> m25_130  [key=0, style=bold, color=blue];
m25_134 -> m25_135  [key=0, style=solid];
m25_134 -> m25_74  [key=2, style=dotted];
m25_135 -> m25_133  [key=0, style=bold, color=blue];
m25_140 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_140 -> m25_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.PreserveCultureAttributeFacts"];
m25_141 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_142 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=filter];
m25_143 -> m25_99  [key=1, style=dashed, color=darkseagreen4, label=filter];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_32  [key=1, style=dashed, color=darkseagreen4, label=connection];
m27_30 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label=connection];
m27_30 -> m27_35  [key=1, style=dashed, color=red, label=connection];
m27_30 -> m27_38  [key=1, style=dashed, color=red, label=connection];
m27_30 -> m27_39  [key=1, style=dashed, color=red, label=connection];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [key=0, style=bold, color=blue];
m27_99 -> m27_100  [key=0, style=solid];
m27_99 -> m27_101  [key=2, style=dotted];
m27_99 -> m27_102  [key=2, style=dotted];
m27_107 -> m27_105  [key=0, style=bold, color=blue];
m27_78 -> m27_79  [key=0, style=solid];
m27_108 -> m27_109  [key=0, style=solid];
m27_53 -> m27_82  [key=0, style=solid, color=green];
m27_53 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_82 -> m27_83  [key=0, style=solid, color=green];
m27_82 -> m27_69  [key=2, style=dotted, color=green];
m27_82 -> m27_84  [key=1, style=dashed, color=green, label=transaction];
m27_82 -> m27_91  [key=1, style=dashed, color=darkseagreen4, label=firstAttempt];
m27_83 -> m27_84  [key=0, style=solid, color=green];
m27_83 -> m27_74  [key=2, style=dotted];
m27_83 -> m27_93  [key=0, style=solid];
m27_84 -> m27_85  [key=0, style=solid, color=green];
m27_84 -> m27_77  [key=2, style=dotted, color=green];
m27_84 -> m27_48  [key=2, style=dotted];
m27_85 -> m27_53  [key=0, style=bold, color=blue];
m27_85 -> m27_86  [key=0, style=solid];
m27_85 -> m27_87  [key=0, style=solid];
m27_31 -> m27_32  [key=0, style=solid, color=green];
m27_31 -> m27_34  [key=1, style=dashed, color=green, label=string];
m27_31 -> m27_35  [key=1, style=dashed, color=red, label=parentId];
m27_31 -> m27_38  [key=1, style=dashed, color=red, label=parentId];
m27_31 -> m27_41  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m27_31 -> m27_42  [key=1, style=dashed, color=green, label=string];
m27_31 -> m27_44  [key=1, style=dashed, color=green, label=string];
m27_31 -> m27_37  [key=3, color=green, style=bold, label="method methodReturn bool ChangeState"];
m27_31 -> m27_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_31 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label=parentId];
m27_31 -> m27_39  [key=1, style=dashed, color=red, label=parentId];
m27_32 -> m27_33  [key=0, style=solid, color=green];
m27_32 -> m27_34  [key=0, style=solid, color=green];
m27_32 -> m27_44  [key=2, style=dotted];
m27_33 -> m27_46  [key=0, style=solid, color=green];
m27_33 -> m27_30  [key=2, style=dotted, color=green];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_45  [key=2, style=dotted];
m27_33 -> m27_39  [key=1, style=dashed, color=red, label=continuations];
m27_34 -> m27_35  [key=0, style=solid, color=red];
m27_34 -> m27_47  [key=2, style=dotted, color=green];
m27_34 -> m27_48  [key=2, style=dotted, color=green];
m27_34 -> m27_49  [key=2, style=dotted, color=green];
m27_34 -> m27_46  [key=2, style=dotted];
m27_35 -> m27_36  [key=0, style=solid, color=red];
m27_35 -> m27_47  [key=2, style=dotted, color=green];
m27_35 -> m27_50  [key=2, style=dotted, color=green];
m27_35 -> m27_38  [key=1, style=dashed, color=green, label=currentState];
m27_35 -> m27_45  [key=1, style=dashed, color=green, label=currentState];
m27_35 -> m27_48  [key=2, style=dotted, color=red];
m27_36 -> m27_38  [key=0, style=solid, color=red];
m27_36 -> m27_37  [key=0, style=solid, color=red];
m27_38 -> m27_39  [key=0, style=solid, color=red];
m27_38 -> m27_40  [key=0, style=solid, color=green];
m27_38 -> m27_51  [key=2, style=dotted, color=green];
m27_38 -> m27_50  [key=2, style=dotted, color=red];
m27_38 -> m27_41  [key=1, style=dashed, color=red, label=currentState];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_54  [key=2, style=dotted];
m27_45 -> m27_103  [key=0, style=solid];
m27_39 -> m27_46  [key=0, style=solid, color=green];
m27_39 -> m27_40  [key=0, style=solid, color=red];
m27_39 -> m27_51  [key=2, style=dotted, color=red];
m27_40 -> m27_41  [key=0, style=solid, color=red];
m27_40 -> m27_42  [key=1, style=dashed, color=green, label=filter];
m27_40 -> m27_45  [key=0, style=solid, color=green];
m27_40 -> m27_43  [key=0, style=solid, color=red];
m27_40 -> m27_23  [key=2, style=dotted, color=red];
m27_41 -> m27_42  [key=0, style=solid, color=red];
m27_41 -> m27_43  [key=1, style=dashed, color=green, label=oldState];
m27_41 -> m27_44  [key=1, style=dashed, color=green, label=oldState];
m27_41 -> m27_52  [key=2, style=dotted];
m27_42 -> m27_43  [key=0, style=solid, color=red];
m27_42 -> m27_52  [key=2, style=dotted, color=green];
m27_42 -> m27_45  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m27_42 -> m27_53  [key=2, style=dotted, color=red];
m27_43 -> m27_44  [key=0, style=solid, color=green];
m27_43 -> m27_40  [key=0, style=solid, color=green];
m27_43 -> m27_22  [key=0, style=bold, color=blue];
m27_44 -> m27_40  [key=0, style=solid, color=green];
m27_44 -> m27_53  [key=2, style=dotted, color=green];
m27_37 -> m27_46  [key=0, style=solid, color=green];
m27_37 -> m27_43  [key=0, style=solid, color=red];
m27_37 -> m27_49  [key=2, style=dotted, color=red];
m27_46 -> m27_31  [key=0, style=bold, color=blue];
m27_104 -> m27_45  [key=0, style=bold, color=blue];
m27_100 -> m27_51  [key=0, style=bold, color=blue];
m27_51 -> m27_99  [key=0, style=solid];
m27_102 -> m27_103  [key=0, style=solid, color=green];
m27_102 -> m27_47  [key=2, style=dotted, color=green];
m27_102 -> m27_104  [key=2, style=dotted, color=green];
m27_55 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_62  [key=1, style=dashed, color=darkseagreen4, label=nextStates];
m27_55 -> m27_63  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_56  [key=0, style=solid];
m27_55 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_55 -> m27_71  [key=2, style=dotted];
m27_55 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label=nextStates];
m27_55 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label=nextStates];
m27_61 -> m27_62  [key=0, style=solid, color=green];
m27_61 -> m27_63  [key=0, style=solid, color=green];
m27_61 -> m27_52  [key=2, style=dotted];
m27_61 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_61 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_60 -> m27_61  [key=0, style=solid, color=green];
m27_60 -> m27_72  [key=2, style=dotted];
m27_60 -> m27_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_60 -> m27_56  [key=0, style=solid];
m27_62 -> m27_61  [key=0, style=solid, color=green];
m27_62 -> m27_73  [key=2, style=dotted];
m27_62 -> m27_56  [key=0, style=solid];
m27_62 -> m27_53  [key=2, style=dotted];
m27_62 -> m27_74  [key=2, style=dotted];
m27_62 -> m27_62  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_62 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_63 -> m27_64  [key=0, style=solid];
m27_63 -> m27_74  [key=2, style=dotted];
m27_56 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_62  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_63  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_69  [key=2, style=dotted];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_64  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_66  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m27_56 -> m27_68  [key=0, style=solid];
m27_58 -> m27_60  [key=0, style=solid];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_70  [key=2, style=dotted];
m27_58 -> m27_73  [key=2, style=dotted];
m27_58 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_58 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_58 -> m27_64  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_71  [key=2, style=dotted];
m27_59 -> m27_56  [key=0, style=solid];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_67  [key=0, style=solid];
m27_57 -> m27_63  [key=0, style=solid];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_56  [key=0, style=solid];
m27_57 -> m27_72  [key=2, style=dotted];
m27_57 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_64 -> m27_65  [key=0, style=solid];
m27_64 -> m27_75  [key=2, style=dotted];
m27_64 -> m27_67  [key=0, style=solid];
m27_64 -> m27_76  [key=2, style=dotted];
m27_67 -> m27_77  [key=2, style=dotted];
m27_67 -> m27_68  [key=0, style=solid];
m27_67 -> m27_56  [key=0, style=solid];
m27_67 -> m27_74  [key=2, style=dotted];
m27_67 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label=continuation];
m27_66 -> m27_65  [key=0, style=solid];
m27_66 -> m27_76  [key=2, style=dotted];
m27_66 -> m27_67  [key=0, style=solid];
m27_66 -> m27_77  [key=2, style=dotted];
m27_68 -> m27_55  [key=0, style=bold, color=blue];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_70  [key=0, style=solid];
m27_73 -> m27_80  [key=0, style=solid];
m27_73 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_73 -> m27_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_73 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_73 -> m27_89  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m27_73 -> m27_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label=currentState];
m27_80 -> m27_78  [key=0, style=bold, color=blue];
m27_86 -> m27_93  [key=0, style=solid];
m27_86 -> m27_95  [key=2, style=dotted];
m27_86 -> m27_89  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m27_86 -> m27_91  [key=1, style=dashed, color=green, label=IRedisTransaction];
m27_86 -> m27_102  [key=1, style=dashed, color=green, label=string];
m27_86 -> m27_92  [key=1, style=dashed, color=green, label=IRedisTransaction];
m27_86 -> m27_106  [key=1, style=dashed, color=green, label=string];
m27_86 -> m27_87  [key=0, style=solid];
m27_86 -> m27_90  [key=1, style=dashed, color=darkseagreen4, label=bool];
m27_86 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_87 -> m27_88  [key=0, style=solid];
m27_87 -> m27_50  [key=2, style=dotted];
m27_87 -> m27_93  [key=1, style=dashed, color=green, label=properties];
m27_87 -> m27_89  [key=1, style=dashed, color=green, label=properties];
m27_87 -> m27_92  [key=1, style=dashed, color=green, label=properties];
m27_87 -> m27_106  [key=1, style=dashed, color=green, label=properties];
m27_87 -> m27_97  [key=2, style=dotted];
m27_87 -> m27_98  [key=2, style=dotted];
m27_87 -> m27_94  [key=1, style=dashed, color=darkseagreen4, label=properties];
m27_87 -> m27_95  [key=1, style=dashed, color=darkseagreen4, label=properties];
m27_87 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label=properties];
m27_89 -> m27_90  [key=0, style=solid, color=green];
m27_89 -> m27_91  [key=0, style=solid];
m27_89 -> m27_96  [key=2, style=dotted];
m27_89 -> m27_99  [key=2, style=dotted, color=green];
m27_90 -> m27_94  [key=0, style=solid];
m27_90 -> m27_97  [key=2, style=dotted];
m27_90 -> m27_91  [key=0, style=solid, color=green];
m27_90 -> m27_93  [key=0, style=solid, color=green];
m27_81 -> m27_82  [key=0, style=solid];
m27_81 -> m27_89  [key=1, style=dashed, color=darkseagreen4, label=started];
m27_93 -> m27_94  [key=0, style=solid, color=green];
m27_93 -> m27_99  [key=2, style=dotted, color=green];
m27_91 -> m27_92  [key=0, style=solid, color=green];
m27_91 -> m27_98  [key=2, style=dotted];
m27_91 -> m27_72  [key=2, style=dotted, color=green];
m27_91 -> m27_101  [key=1, style=dashed, color=green, label="lambda expression"];
m27_88 -> m27_89  [key=0, style=solid, color=green];
m27_88 -> m27_93  [key=0, style=solid];
m27_88 -> m27_94  [key=1, style=dashed, color=darkseagreen4, label=now];
m27_92 -> m27_83  [key=0, style=solid];
m27_92 -> m27_93  [key=0, style=solid, color=green];
m27_92 -> m27_72  [key=2, style=dotted, color=green];
m27_92 -> m27_105  [key=1, style=dashed, color=green, label="lambda expression"];
m27_94 -> m27_73  [key=0, style=bold, color=blue];
m27_94 -> m27_99  [key=2, style=dotted];
m27_94 -> m27_95  [key=0, style=solid];
m27_94 -> m27_100  [key=2, style=dotted];
m27_103 -> m27_104  [key=0, style=solid];
m27_103 -> m27_105  [key=2, style=dotted];
m27_103 -> m27_106  [key=2, style=dotted];
m27_103 -> m27_107  [key=2, style=dotted];
m27_103 -> m27_101  [key=0, style=bold, color=blue];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_15 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_15 -> m27_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label=awaitingState];
m27_16 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m27_16 -> m27_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>"];
m27_16 -> m27_27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>"];
m27_16 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>"];
m27_16 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>"];
m27_16 -> m27_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>"];
m27_16 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>"];
m27_18 -> m27_21  [key=0, style=solid];
m27_18 -> m27_22  [key=2, style=dotted];
m27_18 -> m27_30  [key=2, style=dotted];
m27_18 -> m27_29  [key=0, style=solid];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_21  [key=0, style=solid];
m27_19 -> m27_23  [key=2, style=dotted];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_24  [key=2, style=dotted];
m27_20 -> m27_30  [key=2, style=dotted];
m27_20 -> m27_29  [key=0, style=solid];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_19  [key=0, style=solid];
m27_21 -> m27_15  [key=0, style=bold, color=blue];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_23  [key=0, style=solid];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
m27_26 -> m27_27  [key=0, style=solid, color=red];
m27_26 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label=awaitingState];
m27_27 -> m27_28  [key=0, style=solid, color=red];
m27_27 -> m27_29  [key=0, style=solid, color=red];
m27_28 -> m27_29  [key=0, style=solid];
m27_22 -> m27_30  [key=2, style=dotted];
m27_22 -> m27_29  [key=0, style=solid];
m27_22 -> m27_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.AwaitingState"];
m27_22 -> m27_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_22 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.AwaitingState"];
m27_22 -> m27_42  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m27_24 -> m27_30  [key=2, style=dotted];
m27_24 -> m27_29  [key=0, style=solid];
m27_24 -> m27_54  [key=0, style=solid];
m27_24 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_24 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_24 -> m27_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m27_23 -> m27_25  [key=0, style=solid];
m27_23 -> m27_24  [key=0, style=solid];
m27_29 -> m27_16  [key=0, style=bold, color=blue];
m27_29 -> m27_25  [key=0, style=bold, color=blue];
m27_95 -> m27_72  [key=2, style=dotted];
m27_95 -> m27_96  [key=0, style=solid];
m27_95 -> m27_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_96 -> m27_86  [key=0, style=bold, color=blue];
m27_106 -> m27_107  [key=0, style=solid, color=green];
m27_106 -> m27_47  [key=2, style=dotted, color=green];
m27_106 -> m27_108  [key=2, style=dotted, color=green];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.HashSet<string>"];
m27_4 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m27_4 -> m27_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m27_4 -> m27_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.HashSet<string>"];
m27_4 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_7  [key=0, style=solid];
m27_6 -> m27_12  [key=0, style=solid];
m27_6 -> m27_13  [key=2, style=dotted];
m27_6 -> m27_14  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_9  [key=0, style=solid];
m27_8 -> m27_12  [key=0, style=solid];
m27_8 -> m27_13  [key=2, style=dotted];
m27_8 -> m27_14  [key=2, style=dotted];
m27_9 -> m27_10  [key=0, style=solid];
m27_10 -> m27_11  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_12 -> m27_4  [key=0, style=bold, color=blue];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_45  [key=2, style=dotted];
m27_54 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label=continuations];
m27_69 -> m27_68  [key=0, style=solid];
m27_69 -> m27_78  [key=2, style=dotted];
m27_69 -> m27_79  [key=2, style=dotted];
m27_69 -> m27_69  [key=1, style=dashed, color=darkseagreen4, label=tuple];
m27_70 -> m27_24  [key=0, style=bold, color=blue];
m27_101 -> m27_102  [key=0, style=solid, color=green];
m27_109 -> m27_110  [key=0, style=solid];
m27_109 -> m27_108  [key=0, style=bold, color=blue];
m27_105 -> m27_106  [key=0, style=solid, color=green];
m27_79 -> m27_47  [key=2, style=dotted];
m27_79 -> m27_80  [key=0, style=solid];
m27_79 -> m27_81  [key=2, style=dotted];
m27_110 -> m27_47  [key=2, style=dotted];
m27_110 -> m27_111  [key=0, style=solid];
m27_110 -> m27_112  [key=2, style=dotted];
m27_110 -> m27_113  [key=2, style=dotted];
m27_110 -> m27_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_40  [key=1, style=dashed, color=red, label="Hangfire.ContinuationsSupportAttribute"];
m27_110 -> m27_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.ContinuationsSupportAttribute"];
m27_111 -> m27_109  [key=0, style=bold, color=blue];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_2  [key=0, style=bold, color=blue];
m27_114 -> m27_34  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_35  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_42  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_44  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_40  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_61  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_82  [key=1, style=dashed, color=green, label="HangFire.States.StateMachine"];
m27_114 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_114 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.StateMachine"];
m27_116 -> m27_102  [key=1, style=dashed, color=green, label=string];
m27_116 -> m27_106  [key=1, style=dashed, color=green, label=string];
m27_116 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_117 -> m27_102  [key=1, style=dashed, color=green, label="HangFire.States.JobState"];
m27_118 -> m27_106  [key=1, style=dashed, color=green, label=properties];
m27_118 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label=properties];
m27_115 -> m27_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_10 -> m28_11  [key=0, style=solid];
m28_11 -> m28_12  [key=0, style=solid];
m28_11 -> m28_13  [key=2, style=dotted];
m28_12 -> m28_10  [key=0, style=bold, color=blue];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_9  [key=2, style=dotted];
m28_8 -> m28_6  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid, color=red];
m28_0 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m28_1 -> m28_2  [key=0, style=solid, color=red];
m28_1 -> m28_3  [key=0, style=solid, color=red];
m28_3 -> m28_4  [key=0, style=solid];
m28_2 -> m28_4  [key=0, style=solid, color=red];
m28_2 -> m28_5  [key=2, style=dotted, color=red];
m28_4 -> m28_0  [key=0, style=bold, color=blue];
m28_14 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m28_14 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerJobQueueProvider"];
m29_93 -> m29_94  [key=0, style=solid];
m29_95 -> m29_96  [key=0, style=solid];
m29_95 -> m29_100  [key=2, style=dotted];
m29_96 -> m29_97  [key=0, style=solid];
m29_96 -> m29_71  [key=2, style=dotted];
m29_97 -> m29_98  [key=0, style=solid];
m29_97 -> m29_75  [key=2, style=dotted];
m29_98 -> m29_99  [key=0, style=solid];
m29_98 -> m29_101  [key=2, style=dotted];
m29_98 -> m29_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_94 -> m29_95  [key=0, style=solid];
m29_94 -> m29_97  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_94 -> m29_98  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_94 -> m29_107  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_94 -> m29_14  [key=2, style=dotted];
m29_94 -> m29_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_99 -> m29_93  [key=0, style=bold, color=blue];
m29_67 -> m29_68  [key=0, style=solid];
m29_67 -> m29_71  [key=2, style=dotted];
m29_67 -> m29_73  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_59 -> m29_60  [key=0, style=solid];
m29_59 -> m29_77  [key=2, style=dotted];
m29_59 -> m29_71  [key=2, style=dotted];
m29_59 -> m29_69  [key=2, style=dotted];
m29_60 -> m29_32  [key=2, style=dotted];
m29_60 -> m29_61  [key=0, style=solid];
m29_60 -> m29_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_60 -> m29_0  [key=0, style=bold, color=blue];
m29_61 -> m29_62  [key=0, style=solid];
m29_61 -> m29_54  [key=2, style=dotted];
m29_62 -> m29_59  [key=0, style=bold, color=blue];
m29_84 -> m29_85  [key=0, style=solid];
m29_85 -> m29_86  [key=0, style=solid];
m29_85 -> m29_71  [key=2, style=dotted];
m29_85 -> m29_90  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_86 -> m29_32  [key=2, style=dotted];
m29_86 -> m29_87  [key=0, style=solid];
m29_86 -> m29_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_87 -> m29_88  [key=0, style=solid];
m29_87 -> m29_54  [key=2, style=dotted];
m29_88 -> m29_84  [key=0, style=bold, color=blue];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_61  [key=2, style=dotted];
m29_37 -> m29_38  [key=0, style=solid];
m29_37 -> m29_61  [key=2, style=dotted];
m29_74 -> m29_72  [key=0, style=bold, color=blue];
m29_54 -> m29_55  [key=0, style=solid];
m29_54 -> m29_69  [key=2, style=dotted];
m29_54 -> m29_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_76 -> m29_77  [key=0, style=solid];
m29_77 -> m29_78  [key=0, style=solid];
m29_77 -> m29_71  [key=2, style=dotted];
m29_77 -> m29_82  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_78 -> m29_32  [key=2, style=dotted];
m29_78 -> m29_79  [key=0, style=solid];
m29_78 -> m29_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_78 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_78 -> m29_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.Pages.SucceededJobs"];
m29_79 -> m29_80  [key=0, style=solid];
m29_79 -> m29_54  [key=2, style=dotted];
m29_80 -> m29_76  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_6 -> m29_7  [key=0, style=solid, color=green];
m29_6 -> m29_19  [key=2, style=dotted, color=green];
m29_6 -> m29_64  [key=2, style=dotted];
m29_6 -> m29_8  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m29_5 -> m29_6  [key=0, style=solid, color=green];
m29_5 -> m29_17  [key=2, style=dotted];
m29_5 -> m29_18  [key=2, style=dotted];
m29_5 -> m29_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_5 -> m29_63  [key=2, style=dotted];
m29_5 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m29_7 -> m29_8  [key=0, style=solid, color=green];
m29_7 -> m29_17  [key=2, style=dotted, color=green];
m29_7 -> m29_18  [key=2, style=dotted, color=green];
m29_7 -> m29_29  [key=1, style=dashed, color=green, label="lambda expression"];
m29_7 -> m29_65  [key=2, style=dotted];
m29_7 -> m29_66  [key=2, style=dotted];
m29_7 -> m29_67  [key=2, style=dotted];
m29_7 -> m29_10  [key=1, style=dashed, color=darkseagreen4, label=pager];
m29_7 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label=pager];
m29_7 -> m29_59  [key=1, style=dashed, color=darkseagreen4, label=pager];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_17  [key=2, style=dotted];
m29_8 -> m29_20  [key=2, style=dotted];
m29_8 -> m29_18  [key=2, style=dotted];
m29_8 -> m29_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_8 -> m29_68  [key=2, style=dotted];
m29_11 -> m29_12  [key=0, style=solid, color=green];
m29_11 -> m29_17  [key=2, style=dotted, color=green];
m29_11 -> m29_18  [key=2, style=dotted, color=green];
m29_11 -> m29_43  [key=1, style=dashed, color=green, label="lambda expression"];
m29_11 -> m29_60  [key=0, style=solid];
m29_11 -> m29_61  [key=2, style=dotted];
m29_10 -> m29_11  [key=0, style=solid, color=green];
m29_10 -> m29_17  [key=2, style=dotted];
m29_10 -> m29_18  [key=2, style=dotted];
m29_10 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_10 -> m29_12  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_13  [key=2, style=dotted];
m29_1 -> m29_61  [key=2, style=dotted];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_14  [key=2, style=dotted];
m29_2 -> m29_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_2 -> m29_62  [key=2, style=dotted];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_15  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_16  [key=2, style=dotted];
m29_4 -> m29_63  [key=2, style=dotted];
m29_4 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label=from];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_21  [key=2, style=dotted];
m29_9 -> m29_61  [key=2, style=dotted];
m29_12 -> m29_0  [key=0, style=bold, color=blue];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_61  [key=2, style=dotted];
m29_66 -> m29_67  [key=0, style=solid];
m29_184 -> m29_185  [key=0, style=solid];
m29_185 -> m29_17  [key=2, style=dotted];
m29_185 -> m29_18  [key=2, style=dotted];
m29_185 -> m29_186  [key=0, style=solid];
m29_185 -> m29_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_186 -> m29_187  [key=0, style=solid];
m29_186 -> m29_71  [key=2, style=dotted];
m29_187 -> m29_188  [key=0, style=solid];
m29_187 -> m29_135  [key=2, style=dotted];
m29_189 -> m29_190  [key=0, style=solid];
m29_189 -> m29_101  [key=2, style=dotted];
m29_189 -> m29_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_190 -> m29_191  [key=0, style=solid];
m29_190 -> m29_101  [key=2, style=dotted];
m29_190 -> m29_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_188 -> m29_189  [key=0, style=solid];
m29_188 -> m29_192  [key=2, style=dotted];
m29_191 -> m29_184  [key=0, style=bold, color=blue];
m29_153 -> m29_154  [key=0, style=solid];
m29_154 -> m29_155  [key=0, style=solid];
m29_154 -> m29_71  [key=2, style=dotted];
m29_155 -> m29_156  [key=0, style=solid];
m29_155 -> m29_135  [key=2, style=dotted];
m29_156 -> m29_157  [key=0, style=solid];
m29_156 -> m29_101  [key=2, style=dotted];
m29_156 -> m29_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_157 -> m29_153  [key=0, style=bold, color=blue];
m29_70 -> m29_66  [key=0, style=bold, color=blue];
m29_41 -> m29_42  [key=0, style=solid];
m29_41 -> m29_61  [key=2, style=dotted];
m29_136 -> m29_137  [key=0, style=solid];
m29_137 -> m29_138  [key=0, style=solid];
m29_137 -> m29_71  [key=2, style=dotted];
m29_137 -> m29_142  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_138 -> m29_32  [key=2, style=dotted];
m29_138 -> m29_139  [key=0, style=solid];
m29_138 -> m29_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_139 -> m29_54  [key=2, style=dotted];
m29_139 -> m29_140  [key=0, style=solid];
m29_140 -> m29_136  [key=0, style=bold, color=blue];
m29_63 -> m29_64  [key=0, style=solid];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_34  [key=0, style=solid];
m29_32 -> m29_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_32 -> m29_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_224 -> m29_225  [key=0, style=solid];
m29_225 -> m29_17  [key=2, style=dotted];
m29_225 -> m29_18  [key=2, style=dotted];
m29_225 -> m29_226  [key=0, style=solid];
m29_225 -> m29_20  [key=2, style=dotted];
m29_225 -> m29_232  [key=2, style=dotted];
m29_225 -> m29_233  [key=2, style=dotted];
m29_225 -> m29_234  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_226 -> m29_17  [key=2, style=dotted];
m29_226 -> m29_18  [key=2, style=dotted];
m29_226 -> m29_227  [key=0, style=solid];
m29_226 -> m29_237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_227 -> m29_228  [key=0, style=solid];
m29_227 -> m29_71  [key=2, style=dotted];
m29_228 -> m29_229  [key=0, style=solid];
m29_228 -> m29_135  [key=2, style=dotted];
m29_228 -> m29_230  [key=1, style=dashed, color=darkseagreen4, label=result];
m29_229 -> m29_230  [key=0, style=solid];
m29_229 -> m29_101  [key=2, style=dotted];
m29_229 -> m29_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_230 -> m29_231  [key=0, style=solid];
m29_230 -> m29_192  [key=2, style=dotted];
m29_231 -> m29_224  [key=0, style=bold, color=blue];
m29_33 -> m29_34  [key=0, style=solid];
m29_33 -> m29_61  [key=2, style=dotted];
m29_202 -> m29_203  [key=0, style=solid];
m29_203 -> m29_204  [key=0, style=solid];
m29_203 -> m29_71  [key=2, style=dotted];
m29_204 -> m29_205  [key=0, style=solid];
m29_204 -> m29_135  [key=2, style=dotted];
m29_206 -> m29_207  [key=0, style=solid];
m29_206 -> m29_101  [key=2, style=dotted];
m29_206 -> m29_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_205 -> m29_206  [key=0, style=solid];
m29_205 -> m29_192  [key=2, style=dotted];
m29_207 -> m29_202  [key=0, style=bold, color=blue];
m29_58 -> m29_59  [key=0, style=solid];
m29_58 -> m29_61  [key=2, style=dotted];
m29_145 -> m29_146  [key=0, style=solid];
m29_146 -> m29_147  [key=0, style=solid];
m29_146 -> m29_71  [key=2, style=dotted];
m29_146 -> m29_151  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_147 -> m29_32  [key=2, style=dotted];
m29_147 -> m29_148  [key=0, style=solid];
m29_147 -> m29_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_148 -> m29_54  [key=2, style=dotted];
m29_148 -> m29_149  [key=0, style=solid];
m29_149 -> m29_145  [key=0, style=bold, color=blue];
m29_50 -> m29_51  [key=0, style=solid];
m29_50 -> m29_56  [key=0, style=solid];
m29_50 -> m29_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_50 -> m29_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_51 -> m29_32  [key=2, style=dotted];
m29_51 -> m29_52  [key=0, style=solid];
m29_51 -> m29_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_51 -> m29_61  [key=2, style=dotted];
m29_52 -> m29_53  [key=0, style=solid];
m29_52 -> m29_54  [key=2, style=dotted];
m29_52 -> m29_76  [key=2, style=dotted];
m29_52 -> m29_69  [key=2, style=dotted];
m29_52 -> m29_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_53 -> m29_50  [key=0, style=bold, color=blue];
m29_53 -> m29_54  [key=0, style=solid];
m29_53 -> m29_61  [key=2, style=dotted];
m29_249 -> m29_250  [key=0, style=solid];
m29_250 -> m29_17  [key=2, style=dotted];
m29_250 -> m29_18  [key=2, style=dotted];
m29_250 -> m29_251  [key=0, style=solid];
m29_250 -> m29_20  [key=2, style=dotted];
m29_250 -> m29_232  [key=2, style=dotted];
m29_250 -> m29_258  [key=2, style=dotted];
m29_250 -> m29_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_251 -> m29_17  [key=2, style=dotted];
m29_251 -> m29_18  [key=2, style=dotted];
m29_251 -> m29_252  [key=0, style=solid];
m29_251 -> m29_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_252 -> m29_17  [key=2, style=dotted];
m29_252 -> m29_18  [key=2, style=dotted];
m29_252 -> m29_253  [key=0, style=solid];
m29_252 -> m29_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_253 -> m29_254  [key=0, style=solid];
m29_253 -> m29_71  [key=2, style=dotted];
m29_254 -> m29_255  [key=0, style=solid];
m29_254 -> m29_135  [key=2, style=dotted];
m29_254 -> m29_256  [key=1, style=dashed, color=darkseagreen4, label=result];
m29_255 -> m29_256  [key=0, style=solid];
m29_255 -> m29_101  [key=2, style=dotted];
m29_255 -> m29_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_256 -> m29_257  [key=0, style=solid];
m29_256 -> m29_168  [key=2, style=dotted];
m29_257 -> m29_249  [key=0, style=bold, color=blue];
m29_25 -> m29_26  [key=0, style=solid];
m29_25 -> m29_69  [key=2, style=dotted];
m29_25 -> m29_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_25 -> m29_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_67  [key=2, style=dotted];
m29_13 -> m29_69  [key=2, style=dotted];
m29_46 -> m29_47  [key=0, style=solid];
m29_46 -> m29_74  [key=2, style=dotted];
m29_46 -> m29_75  [key=2, style=dotted];
m29_46 -> m29_69  [key=2, style=dotted];
m29_46 -> m29_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_46 -> m29_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_71 -> m29_271  [key=0, style=solid];
m29_271 -> m29_272  [key=0, style=solid];
m29_271 -> m29_58  [key=2, style=dotted];
m29_272 -> m29_71  [key=0, style=bold, color=blue];
m29_15 -> m29_16  [key=0, style=solid];
m29_15 -> m29_70  [key=2, style=dotted];
m29_15 -> m29_71  [key=2, style=dotted];
m29_15 -> m29_69  [key=2, style=dotted];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_58  [key=0, style=solid];
m29_17 -> m29_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_65 -> m29_63  [key=0, style=bold, color=blue];
m29_68 -> m29_32  [key=2, style=dotted];
m29_68 -> m29_69  [key=0, style=solid];
m29_68 -> m29_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_69 -> m29_70  [key=0, style=solid];
m29_69 -> m29_54  [key=2, style=dotted];
m29_123 -> m29_124  [key=0, style=solid];
m29_124 -> m29_125  [key=0, style=solid];
m29_124 -> m29_71  [key=2, style=dotted];
m29_125 -> m29_126  [key=0, style=solid];
m29_125 -> m29_75  [key=2, style=dotted];
m29_125 -> m29_54  [key=2, style=dotted];
m29_126 -> m29_123  [key=0, style=bold, color=blue];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_61  [key=2, style=dotted];
m29_21 -> m29_22  [key=0, style=solid];
m29_21 -> m29_69  [key=2, style=dotted];
m29_21 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_21 -> m29_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_162 -> m29_163  [key=0, style=solid];
m29_163 -> m29_164  [key=0, style=solid];
m29_163 -> m29_71  [key=2, style=dotted];
m29_164 -> m29_165  [key=0, style=solid];
m29_164 -> m29_135  [key=2, style=dotted];
m29_164 -> m29_166  [key=1, style=dashed, color=darkseagreen4, label=result];
m29_165 -> m29_166  [key=0, style=solid];
m29_165 -> m29_101  [key=2, style=dotted];
m29_165 -> m29_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_166 -> m29_167  [key=0, style=solid];
m29_166 -> m29_168  [key=2, style=dotted];
m29_167 -> m29_162  [key=0, style=bold, color=blue];
m29_102 -> m29_103  [key=0, style=solid];
m29_29 -> m29_30  [key=0, style=solid, color=green];
m29_29 -> m29_61  [key=2, style=dotted];
m29_43 -> m29_44  [key=0, style=solid, color=green];
m29_43 -> m29_48  [key=0, style=solid];
m29_43 -> m29_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_43 -> m29_46  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_43 -> m29_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_30 -> m29_31  [key=0, style=solid, color=green];
m29_30 -> m29_32  [key=2, style=dotted, color=green];
m29_30 -> m29_33  [key=2, style=dotted, color=green];
m29_30 -> m29_72  [key=2, style=dotted];
m29_30 -> m29_69  [key=2, style=dotted];
m29_30 -> m29_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_31 -> m29_29  [key=0, style=bold, color=blue];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_61  [key=2, style=dotted];
m29_44 -> m29_45  [key=0, style=solid, color=green];
m29_44 -> m29_32  [key=2, style=dotted, color=green];
m29_44 -> m29_46  [key=2, style=dotted, color=green];
m29_44 -> m29_47  [key=1, style=dashed, color=green, label="lambda expression"];
m29_44 -> m29_61  [key=2, style=dotted];
m29_45 -> m29_43  [key=0, style=bold, color=blue];
m29_45 -> m29_46  [key=0, style=solid];
m29_45 -> m29_61  [key=2, style=dotted];
m29_47 -> m29_48  [key=0, style=solid, color=green];
m29_47 -> m29_61  [key=2, style=dotted];
m29_48 -> m29_49  [key=0, style=solid, color=green];
m29_48 -> m29_61  [key=2, style=dotted];
m29_49 -> m29_47  [key=0, style=bold, color=blue];
m29_49 -> m29_50  [key=0, style=solid];
m29_49 -> m29_61  [key=2, style=dotted];
m29_56 -> m29_57  [key=0, style=solid];
m29_56 -> m29_58  [key=2, style=dotted];
m29_56 -> m29_61  [key=2, style=dotted];
m29_64 -> m29_65  [key=0, style=solid];
m29_64 -> m29_58  [key=2, style=dotted];
m29_73 -> m29_74  [key=0, style=solid];
m29_73 -> m29_75  [key=2, style=dotted];
m29_82 -> m29_83  [key=0, style=solid];
m29_82 -> m29_75  [key=2, style=dotted];
m29_90 -> m29_91  [key=0, style=solid];
m29_90 -> m29_92  [key=2, style=dotted];
m29_118 -> m29_32  [key=2, style=dotted];
m29_118 -> m29_46  [key=2, style=dotted];
m29_118 -> m29_119  [key=0, style=solid];
m29_118 -> m29_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_121 -> m29_122  [key=0, style=solid];
m29_133 -> m29_134  [key=0, style=solid];
m29_133 -> m29_135  [key=2, style=dotted];
m29_151 -> m29_152  [key=0, style=solid];
m29_151 -> m29_135  [key=2, style=dotted];
m29_170 -> m29_32  [key=2, style=dotted];
m29_170 -> m29_46  [key=2, style=dotted];
m29_170 -> m29_171  [key=0, style=solid];
m29_170 -> m29_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_182 -> m29_32  [key=2, style=dotted];
m29_182 -> m29_46  [key=2, style=dotted];
m29_182 -> m29_183  [key=0, style=solid];
m29_269 -> m29_32  [key=2, style=dotted];
m29_269 -> m29_46  [key=2, style=dotted];
m29_269 -> m29_270  [key=0, style=solid];
m29_26 -> m29_27  [key=0, style=solid];
m29_26 -> m29_61  [key=2, style=dotted];
m29_34 -> m29_35  [key=0, style=solid];
m29_34 -> m29_61  [key=2, style=dotted];
m29_38 -> m29_39  [key=0, style=solid];
m29_38 -> m29_67  [key=2, style=dotted];
m29_38 -> m29_69  [key=2, style=dotted];
m29_38 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_38 -> m29_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_39 -> m29_32  [key=2, style=dotted];
m29_39 -> m29_40  [key=0, style=solid];
m29_39 -> m29_41  [key=2, style=dotted];
m29_39 -> m29_42  [key=2, style=dotted];
m29_39 -> m29_61  [key=2, style=dotted];
m29_107 -> m29_32  [key=2, style=dotted];
m29_107 -> m29_33  [key=2, style=dotted];
m29_107 -> m29_108  [key=0, style=solid];
m29_107 -> m29_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_194 -> m29_32  [key=2, style=dotted];
m29_194 -> m29_195  [key=0, style=solid];
m29_194 -> m29_37  [key=2, style=dotted];
m29_200 -> m29_32  [key=2, style=dotted];
m29_200 -> m29_46  [key=2, style=dotted];
m29_200 -> m29_201  [key=0, style=solid];
m29_209 -> m29_32  [key=2, style=dotted];
m29_209 -> m29_46  [key=2, style=dotted];
m29_209 -> m29_210  [key=0, style=solid];
m29_219 -> m29_32  [key=2, style=dotted];
m29_219 -> m29_46  [key=2, style=dotted];
m29_219 -> m29_220  [key=0, style=solid];
m29_222 -> m29_32  [key=2, style=dotted];
m29_222 -> m29_46  [key=2, style=dotted];
m29_222 -> m29_223  [key=0, style=solid];
m29_238 -> m29_32  [key=2, style=dotted];
m29_238 -> m29_46  [key=2, style=dotted];
m29_238 -> m29_239  [key=0, style=solid];
m29_241 -> m29_32  [key=2, style=dotted];
m29_241 -> m29_46  [key=2, style=dotted];
m29_241 -> m29_242  [key=0, style=solid];
m29_241 -> m29_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_241 -> m29_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_263 -> m29_32  [key=2, style=dotted];
m29_263 -> m29_46  [key=2, style=dotted];
m29_263 -> m29_264  [key=0, style=solid];
m29_22 -> m29_23  [key=0, style=solid];
m29_22 -> m29_61  [key=2, style=dotted];
m29_55 -> m29_56  [key=0, style=solid];
m29_55 -> m29_61  [key=2, style=dotted];
m29_57 -> m29_55  [key=0, style=bold, color=blue];
m29_57 -> m29_17  [key=0, style=solid];
m29_57 -> m29_61  [key=2, style=dotted];
m29_72 -> m29_73  [key=0, style=solid];
m29_81 -> m29_82  [key=0, style=solid];
m29_83 -> m29_81  [key=0, style=bold, color=blue];
m29_89 -> m29_90  [key=0, style=solid];
m29_91 -> m29_89  [key=0, style=bold, color=blue];
m29_106 -> m29_107  [key=0, style=solid];
m29_117 -> m29_118  [key=0, style=solid];
m29_119 -> m29_117  [key=0, style=bold, color=blue];
m29_120 -> m29_121  [key=0, style=solid];
m29_122 -> m29_120  [key=0, style=bold, color=blue];
m29_132 -> m29_133  [key=0, style=solid];
m29_134 -> m29_132  [key=0, style=bold, color=blue];
m29_142 -> m29_143  [key=0, style=solid];
m29_142 -> m29_144  [key=2, style=dotted];
m29_150 -> m29_151  [key=0, style=solid];
m29_152 -> m29_150  [key=0, style=bold, color=blue];
m29_158 -> m29_159  [key=0, style=solid];
m29_169 -> m29_170  [key=0, style=solid];
m29_171 -> m29_169  [key=0, style=bold, color=blue];
m29_172 -> m29_173  [key=0, style=solid];
m29_181 -> m29_182  [key=0, style=solid];
m29_183 -> m29_181  [key=0, style=bold, color=blue];
m29_193 -> m29_194  [key=0, style=solid];
m29_196 -> m29_197  [key=0, style=solid];
m29_199 -> m29_200  [key=0, style=solid];
m29_208 -> m29_209  [key=0, style=solid];
m29_218 -> m29_219  [key=0, style=solid];
m29_221 -> m29_222  [key=0, style=solid];
m29_234 -> m29_235  [key=0, style=solid];
m29_237 -> m29_238  [key=0, style=solid];
m29_240 -> m29_241  [key=0, style=solid];
m29_259 -> m29_260  [key=0, style=solid];
m29_262 -> m29_263  [key=0, style=solid];
m29_265 -> m29_266  [key=0, style=solid];
m29_268 -> m29_269  [key=0, style=solid];
m29_270 -> m29_268  [key=0, style=bold, color=blue];
m29_28 -> m29_26  [key=0, style=bold, color=blue];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_67  [key=2, style=dotted];
m29_28 -> m29_69  [key=2, style=dotted];
m29_28 -> m29_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_28 -> m29_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_61  [key=2, style=dotted];
m29_36 -> m29_34  [key=0, style=bold, color=blue];
m29_36 -> m29_57  [key=0, style=solid];
m29_36 -> m29_61  [key=2, style=dotted];
m29_35 -> m29_36  [key=0, style=solid];
m29_35 -> m29_37  [key=2, style=dotted];
m29_35 -> m29_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_35 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_40 -> m29_38  [key=0, style=bold, color=blue];
m29_40 -> m29_41  [key=0, style=solid];
m29_40 -> m29_73  [key=2, style=dotted];
m29_40 -> m29_69  [key=2, style=dotted];
m29_40 -> m29_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_40 -> m29_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_108 -> m29_106  [key=0, style=bold, color=blue];
m29_109 -> m29_110  [key=0, style=solid];
m29_141 -> m29_142  [key=0, style=solid];
m29_195 -> m29_193  [key=0, style=bold, color=blue];
m29_201 -> m29_199  [key=0, style=bold, color=blue];
m29_210 -> m29_208  [key=0, style=bold, color=blue];
m29_220 -> m29_218  [key=0, style=bold, color=blue];
m29_223 -> m29_221  [key=0, style=bold, color=blue];
m29_239 -> m29_237  [key=0, style=bold, color=blue];
m29_242 -> m29_240  [key=0, style=bold, color=blue];
m29_243 -> m29_244  [key=0, style=solid];
m29_246 -> m29_247  [key=0, style=solid];
m29_264 -> m29_262  [key=0, style=bold, color=blue];
m29_24 -> m29_22  [key=0, style=bold, color=blue];
m29_24 -> m29_25  [key=0, style=solid];
m29_24 -> m29_61  [key=2, style=dotted];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_25  [key=2, style=dotted];
m29_23 -> m29_27  [key=0, style=solid];
m29_23 -> m29_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_23 -> m29_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_143 -> m29_141  [key=0, style=bold, color=blue];
m29_160 -> m29_158  [key=0, style=bold, color=blue];
m29_159 -> m29_160  [key=0, style=solid];
m29_159 -> m29_161  [key=2, style=dotted];
m29_174 -> m29_172  [key=0, style=bold, color=blue];
m29_173 -> m29_174  [key=0, style=solid];
m29_173 -> m29_175  [key=2, style=dotted];
m29_198 -> m29_196  [key=0, style=bold, color=blue];
m29_197 -> m29_37  [key=2, style=dotted];
m29_197 -> m29_198  [key=0, style=solid];
m29_236 -> m29_234  [key=0, style=bold, color=blue];
m29_235 -> m29_37  [key=2, style=dotted];
m29_235 -> m29_236  [key=0, style=solid];
m29_261 -> m29_259  [key=0, style=bold, color=blue];
m29_260 -> m29_37  [key=2, style=dotted];
m29_260 -> m29_261  [key=0, style=solid];
m29_267 -> m29_265  [key=0, style=bold, color=blue];
m29_266 -> m29_267  [key=0, style=solid];
m29_111 -> m29_109  [key=0, style=bold, color=blue];
m29_110 -> m29_111  [key=0, style=solid];
m29_245 -> m29_243  [key=0, style=bold, color=blue];
m29_244 -> m29_245  [key=0, style=solid];
m29_248 -> m29_246  [key=0, style=bold, color=blue];
m29_247 -> m29_248  [key=0, style=solid];
m29_103 -> m29_104  [key=0, style=solid];
m29_103 -> m29_105  [key=2, style=dotted];
m29_104 -> m29_102  [key=0, style=bold, color=blue];
m29_14 -> m29_15  [key=0, style=solid];
m29_14 -> m29_61  [key=2, style=dotted];
m29_18 -> m29_19  [key=0, style=solid];
m29_18 -> m29_61  [key=2, style=dotted];
m29_19 -> m29_20  [key=0, style=solid];
m29_19 -> m29_69  [key=2, style=dotted];
m29_19 -> m29_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_19 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_20 -> m29_21  [key=0, style=solid];
m29_20 -> m29_61  [key=2, style=dotted];
m29_127 -> m29_128  [key=0, style=solid];
m29_128 -> m29_129  [key=0, style=solid];
m29_128 -> m29_71  [key=2, style=dotted];
m29_128 -> m29_133  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_129 -> m29_32  [key=2, style=dotted];
m29_129 -> m29_130  [key=0, style=solid];
m29_129 -> m29_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_130 -> m29_54  [key=2, style=dotted];
m29_130 -> m29_131  [key=0, style=solid];
m29_131 -> m29_127  [key=0, style=bold, color=blue];
m29_112 -> m29_113  [key=0, style=solid];
m29_113 -> m29_114  [key=0, style=solid];
m29_113 -> m29_71  [key=2, style=dotted];
m29_114 -> m29_115  [key=0, style=solid];
m29_114 -> m29_75  [key=2, style=dotted];
m29_115 -> m29_116  [key=0, style=solid];
m29_115 -> m29_101  [key=2, style=dotted];
m29_115 -> m29_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_116 -> m29_112  [key=0, style=bold, color=blue];
m29_211 -> m29_212  [key=0, style=solid];
m29_212 -> m29_17  [key=2, style=dotted];
m29_212 -> m29_18  [key=2, style=dotted];
m29_212 -> m29_213  [key=0, style=solid];
m29_212 -> m29_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_213 -> m29_214  [key=0, style=solid];
m29_213 -> m29_71  [key=2, style=dotted];
m29_214 -> m29_215  [key=0, style=solid];
m29_214 -> m29_135  [key=2, style=dotted];
m29_214 -> m29_216  [key=1, style=dashed, color=darkseagreen4, label=result];
m29_215 -> m29_216  [key=0, style=solid];
m29_215 -> m29_101  [key=2, style=dotted];
m29_215 -> m29_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_216 -> m29_217  [key=0, style=solid];
m29_216 -> m29_192  [key=2, style=dotted];
m29_217 -> m29_211  [key=0, style=bold, color=blue];
m29_176 -> m29_177  [key=0, style=solid];
m29_177 -> m29_178  [key=0, style=solid];
m29_177 -> m29_71  [key=2, style=dotted];
m29_178 -> m29_179  [key=0, style=solid];
m29_178 -> m29_135  [key=2, style=dotted];
m29_179 -> m29_180  [key=0, style=solid];
m29_179 -> m29_101  [key=2, style=dotted];
m29_179 -> m29_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_180 -> m29_176  [key=0, style=bold, color=blue];
m29_273 -> m29_6  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_7  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_11  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_44  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_48  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_146  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_151  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_182  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_206  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_226  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_227  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_229  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_253  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_269  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_273 -> m29_271  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m29_274 -> m29_73  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_275 -> m29_82  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_276 -> m29_90  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_278 -> m29_133  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_280 -> m29_151  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m29_277 -> m29_107  [key=1, style=dashed, color=darkseagreen4, label=job];
m29_279 -> m29_142  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m30_1 -> m30_2  [key=0, style=solid];
m30_2 -> m30_3  [key=0, style=solid];
m30_3 -> m30_0  [key=0, style=bold, color=blue];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_15 -> m30_18  [key=1, style=dashed, color=red, label=string];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_10  [key=2, style=dotted];
m30_17 -> m30_18  [key=0, style=solid, color=red];
m30_17 -> m30_11  [key=2, style=dotted];
m30_17 -> m30_12  [key=2, style=dotted];
m30_18 -> m30_19  [key=0, style=solid, color=red];
m30_18 -> m30_11  [key=2, style=dotted, color=red];
m30_18 -> m30_12  [key=2, style=dotted, color=red];
m30_19 -> m30_20  [key=0, style=solid];
m30_19 -> m30_13  [key=2, style=dotted];
m30_19 -> m30_14  [key=2, style=dotted];
m30_20 -> m30_15  [key=0, style=bold, color=blue];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_4 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_10  [key=2, style=dotted];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_11  [key=2, style=dotted];
m30_6 -> m30_12  [key=2, style=dotted];
m30_7 -> m30_8  [key=0, style=solid];
m30_7 -> m30_10  [key=2, style=dotted];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_13  [key=2, style=dotted];
m30_8 -> m30_14  [key=2, style=dotted];
m30_9 -> m30_4  [key=0, style=bold, color=blue];
m30_21 -> m30_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateAppliedFilter"];
m30_21 -> m30_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateAppliedFilter"];
m30_21 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateAppliedFilter"];
m30_21 -> m30_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateAppliedFilter"];
m31_59 -> m31_60  [key=0, style=solid];
m31_60 -> m31_61  [key=0, style=solid];
m31_60 -> m31_62  [key=2, style=dotted];
m31_60 -> m31_63  [key=2, style=dotted];
m31_60 -> m31_64  [key=2, style=dotted];
m31_61 -> m31_59  [key=0, style=bold, color=blue];
m31_55 -> m31_65  [key=0, style=solid];
m31_55 -> m31_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_55 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_55 -> m31_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_84  [key=2, style=dotted];
m31_65 -> m31_68  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m31_65 -> m31_69  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m31_65 -> m31_72  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m31_69 -> m31_70  [key=0, style=solid];
m31_69 -> m31_86  [key=2, style=dotted];
m31_69 -> m31_71  [key=1, style=dashed, color=darkseagreen4, label=backgroundJob];
m31_70 -> m31_71  [key=0, style=solid];
m31_70 -> m31_87  [key=2, style=dotted];
m31_71 -> m31_72  [key=0, style=solid];
m31_71 -> m31_88  [key=2, style=dotted];
m31_71 -> m31_74  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_68  [key=0, style=solid];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_85  [key=2, style=dotted];
m31_72 -> m31_73  [key=0, style=solid];
m31_72 -> m31_76  [key=1, style=dashed, color=darkseagreen4, label=latency];
m31_67 -> m31_83  [key=0, style=solid];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_90  [key=2, style=dotted];
m31_74 -> m31_76  [key=1, style=dashed, color=darkseagreen4, label=result];
m31_73 -> m31_74  [key=0, style=solid];
m31_73 -> m31_89  [key=2, style=dotted];
m31_73 -> m31_75  [key=1, style=dashed, color=darkseagreen4, label=duration];
m31_73 -> m31_76  [key=1, style=dashed, color=darkseagreen4, label=duration];
m31_76 -> m31_83  [key=0, style=solid];
m31_76 -> m31_92  [key=2, style=dotted];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_91  [key=2, style=dotted];
m31_77 -> m31_78  [key=0, style=solid];
m31_78 -> m31_83  [key=0, style=solid];
m31_79 -> m31_80  [key=0, style=solid];
m31_80 -> m31_83  [key=0, style=solid];
m31_80 -> m31_93  [key=2, style=dotted];
m31_81 -> m31_82  [key=0, style=solid];
m31_82 -> m31_83  [key=0, style=solid];
m31_82 -> m31_93  [key=2, style=dotted];
m31_83 -> m31_55  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [key=0, style=bold, color=blue];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_2  [key=0, style=bold, color=blue];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m31_4 -> m31_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m31_4 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m31_4 -> m31_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IBackgroundJobPerformer"];
m31_4 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IBackgroundJobStateChanger"];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=0, style=solid];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_9  [key=0, style=solid];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_11  [key=0, style=solid];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_17  [key=2, style=dotted];
m31_12 -> m31_13  [key=0, style=solid];
m31_13 -> m31_14  [key=0, style=solid];
m31_6 -> m31_15  [key=0, style=solid];
m31_6 -> m31_16  [key=2, style=dotted];
m31_8 -> m31_15  [key=0, style=solid];
m31_8 -> m31_16  [key=2, style=dotted];
m31_10 -> m31_15  [key=0, style=solid];
m31_10 -> m31_16  [key=2, style=dotted];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_18  [key=2, style=dotted];
m31_14 -> m31_19  [key=2, style=dotted];
m31_15 -> m31_4  [key=0, style=bold, color=blue];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_20 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_23  [key=0, style=solid];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_45  [key=2, style=dotted];
m31_23 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label=connection];
m31_23 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label=connection];
m31_23 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=connection];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_46  [key=2, style=dotted];
m31_24 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_24 -> m31_32  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_24 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_24 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_24 -> m31_37  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_24 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_24 -> m31_42  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_47  [key=2, style=dotted];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_49  [key=2, style=dotted];
m31_27 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label=linkedCts];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_50  [key=2, style=dotted];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_51  [key=2, style=dotted];
m31_29 -> m31_52  [key=2, style=dotted];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_47  [key=2, style=dotted];
m31_34 -> m31_35  [key=0, style=solid];
m31_34 -> m31_55  [key=2, style=dotted];
m31_34 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=state];
m31_36 -> m31_37  [key=0, style=solid];
m31_36 -> m31_56  [key=2, style=dotted];
m31_36 -> m31_52  [key=2, style=dotted];
m31_22 -> m31_44  [key=0, style=solid];
m31_22 -> m31_16  [key=2, style=dotted];
m31_32 -> m31_33  [key=0, style=solid];
m31_32 -> m31_54  [key=2, style=dotted];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_40  [key=0, style=solid];
m31_37 -> m31_44  [key=0, style=solid];
m31_37 -> m31_54  [key=2, style=dotted];
m31_39 -> m31_44  [key=0, style=solid];
m31_39 -> m31_54  [key=2, style=dotted];
m31_42 -> m31_43  [key=0, style=solid];
m31_42 -> m31_58  [key=2, style=dotted];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_48  [key=2, style=dotted];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_34  [key=0, style=solid];
m31_30 -> m31_53  [key=2, style=dotted];
m31_33 -> m31_44  [key=0, style=solid];
m31_35 -> m31_36  [key=0, style=solid];
m31_35 -> m31_37  [key=0, style=solid];
m31_38 -> m31_39  [key=0, style=solid];
m31_40 -> m31_41  [key=0, style=solid];
m31_41 -> m31_42  [key=0, style=solid];
m31_41 -> m31_57  [key=2, style=dotted];
m31_43 -> m31_44  [key=0, style=solid];
m31_44 -> m31_20  [key=0, style=bold, color=blue];
m31_94 -> m31_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m31_94 -> m31_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
}
