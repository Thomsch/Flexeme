digraph  {
n0 [label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)"];
n1 [label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)"];
d6 [label="throw new ArgumentNullException(''jobType'');", span="21-21", cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=green, community=0];
d5 [label="jobType == null", span="19-19", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d16 [label="Exit HangFire.Client.JobClient.Async(System.Type, object)", span="17-17", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d13 [label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="37-38", cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=green, community=0];
d67 [label="HangFire.Client.JobClient", span=""];
d12 [label="var job = CreateJob(jobType, args)", span="35-35", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d10 [label="var jobId = GenerateId()", span="32-32", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d11 [label="var state = new EnqueuedState(jobId, ''Enqueued by the Ð¡lient'', queue)", span="34-34", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d14 [label="_jobCreator.CreateJob(context)", span="40-40", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d25 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)"];
d26 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", span="13-13", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)"];
d54 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="90-90", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", color=green, community=0];
d24 [label="Entry HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)"];
d53 [label="var job = new Dictionary<string, string>()", span="89-89", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)"];
d55 [label="job[''Args''] = JobHelper.ToJson(ClientJobDescriptor.SerializeProperties(jobArgs))", span="91-91", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", color=green, community=0];
d56 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="92-92", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)"];
d60 [label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="49-49", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)"];
d61 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)"];
d4 [label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="17-17", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d7 [label="!typeof (BackgroundJob).IsAssignableFrom(jobType)", span="23-23", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d8 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)), \r\n                    ''jobType'');", span="25-27", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d15 [label="return jobId;", span="42-42", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d30 [label="throw new ArgumentNullException(''jobType'');", span="49-49", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d1 [label="_redis = redisManager.GetClient()", span="14-14", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)"];
d36 [label="return Async(jobType, args);", span="65-65", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d40 [label="var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="73-74", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d41 [label="_jobCreator.CreateJob(context)", span="76-76", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d50 [label="_redis.Dispose()", span="83-83", cluster="HangFire.Client.JobClient.Dispose()"];
d9 [label="var queue = JobHelper.GetQueue(jobType)", span="30-30", cluster="HangFire.Client.JobClient.Async(System.Type, object)"];
d22 [label="Entry HangFire.Client.JobClient.GenerateId()", span="97-97", cluster="HangFire.Client.JobClient.GenerateId()"];
d23 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)"];
d27 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)"];
d39 [label="var job = CreateJob(jobType, args)", span="71-71", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d58 [label="Exit HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)"];
d59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
d57 [label="return job;", span="94-94", cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)"];
d62 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)"];
d18 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
d19 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d20 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d29 [label="jobType == null", span="47-47", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d43 [label="Exit HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="45-45", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d0 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="12-12", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)"];
d2 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="12-12", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)"];
d3 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient"];
d28 [label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="45-45", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d35 [label="interval.Equals(TimeSpan.Zero)", span="63-63", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d37 [label="var jobId = GenerateId()", span="68-68", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d38 [label="var state = new ScheduledState(jobId, ''Scheduled by the Client'', DateTime.UtcNow.Add(interval))", span="70-70", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d42 [label="return jobId;", span="78-78", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d49 [label="Entry HangFire.Client.JobClient.Dispose()", span="81-81", cluster="HangFire.Client.JobClient.Dispose()"];
d51 [label="Exit HangFire.Client.JobClient.Dispose()", span="81-81", cluster="HangFire.Client.JobClient.Dispose()"];
d52 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose"];
d21 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="20-20", cluster="HangFire.JobHelper.GetQueue(System.Type)"];
d64 [label="Exit HangFire.Client.JobClient.GenerateId()", span="97-97", cluster="HangFire.Client.JobClient.GenerateId()"];
d63 [label="return Guid.NewGuid().ToString();", span="99-99", cluster="HangFire.Client.JobClient.GenerateId()"];
d31 [label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="51-51", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d32 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="53-55", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d34 [label="throw new ArgumentOutOfRangeException(''interval'', ''Interval value can not be negative.'');", span="60-60", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d33 [label="interval != interval.Duration()", span="58-58", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)"];
d46 [label="Entry System.TimeSpan.Equals(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Equals(System.TimeSpan)"];
d47 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)"];
d48 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
d65 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()"];
d66 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()"];
d45 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)"];
d44 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()"];
m0_0 [label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="BackgroundJobServerFacts.cs"];
m0_1 [label="_command = command", span="28-28", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="BackgroundJobServerFacts.cs"];
m0_2 [label="Exit HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="BackgroundJobServerFacts.cs"];
m0_3 [label="Entry HangFire.Web.CommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_4 [label="Request.HttpMethod != WebRequestMethods.Http.Post", span="33-33", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_5 [label="throw new HttpException((int)HttpStatusCode.MethodNotAllowed, ''Wrong HTTP method.'');", span="35-35", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_6 [label="_command()", span="38-38", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_7 [label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="40-40", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_8 [label="Response.StatusCode = 422", span="44-44", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_9 [label="Exit HangFire.Web.CommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="BackgroundJobServerFacts.cs"];
m0_11 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="BackgroundJobServerFacts.cs"];
m0_10 [label="Entry HttpException.cstr", span="", cluster="HttpException.cstr", file="BackgroundJobServerFacts.cs"];
m0_12 [label="HangFire.Web.CommandHandler", span="", file="BackgroundJobServerFacts.cs"];
m1_18 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="InfiniteLoopComponent.cs"];
m1_16 [label="Entry Unk.SecondsToDelay", span="", cluster="Unk.SecondsToDelay", file="InfiniteLoopComponent.cs"];
m1_0 [label="Entry HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_1 [label="redis == null", span="12-12", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_3 [label="state == null", span="13-13", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_5 [label="state.StateName != FailedState.Name", span="15-15", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_6 [label="return state;", span="18-18", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_7 [label="var retryCount = redis.IncrementValueInHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''RetryCount'',\r\n                1)", span="21-24", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_10 [label="return new ScheduledState(\r\n                    state.JobId, \r\n                    String.Format(''Retry attempt {0} of {1}.'', retryCount, MaxRetryAttempts), \r\n                    delay);", span="32-35", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_11 [label="return state;", span="40-40", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_2 [label="throw new ArgumentNullException(''redis'');", span="12-12", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_4 [label="throw new ArgumentNullException(''state'');", span="13-13", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_8 [label="retryCount <= MaxRetryAttempts", span="26-26", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_9 [label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="28-28", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_12 [label="Exit HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="InfiniteLoopComponent.cs"];
m1_17 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="InfiniteLoopComponent.cs"];
m1_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="InfiniteLoopComponent.cs"];
m1_20 [label="Entry HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs"];
m1_21 [label="var random = new Random()", span="46-46", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs"];
m1_22 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="47-48", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs"];
m1_23 [label="Exit HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="InfiniteLoopComponent.cs"];
m1_24 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="InfiniteLoopComponent.cs"];
m1_26 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="InfiniteLoopComponent.cs"];
m1_27 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="InfiniteLoopComponent.cs"];
m1_15 [label="Entry Unk.IncrementValueInHash", span="", cluster="Unk.IncrementValueInHash", file="InfiniteLoopComponent.cs"];
m1_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="InfiniteLoopComponent.cs"];
m1_25 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="InfiniteLoopComponent.cs"];
m1_28 [label="HangFire.RetryJobsFilter", span="", file="InfiniteLoopComponent.cs"];
m2_2 [label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23", cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IServerSupervisor.cs"];
m2_3 [label="Exit Hangfire.Server.IServerSupervisor.Stop()", span="23-23", cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IServerSupervisor.cs"];
m2_0 [label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22", cluster="Hangfire.Server.IServerSupervisor.Start()", file="IServerSupervisor.cs"];
m2_1 [label="Exit Hangfire.Server.IServerSupervisor.Start()", span="22-22", cluster="Hangfire.Server.IServerSupervisor.Start()", file="IServerSupervisor.cs"];
m4_42 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs"];
m4_43 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", span="36-36", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_44 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs"];
m4_37 [label="Assert.Equal(''context'', exception.ParamName)", span="47-47", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_45 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="61-62", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs"];
m4_12 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ServerBootstrapperFacts.cs"];
m4_69 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m4_70 [label="var server = CreateServer()", span="81-81", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m4_71 [label="server.Execute(_cts.Token)", span="83-83", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m4_72 [label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m4_73 [label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="86-86", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m4_74 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs"];
m4_25 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m4_26 [label="new ServerBootstrapper(null, _context, _storage.Object, _components)", span="35-35", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_27 [label="Assert.Equal(''serverId'', exception.ParamName)", span="38-38", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m4_20 [label="Exit lambda expression", span="25-25", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_28 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="33-33", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m4_15 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerBootstrapperFacts.cs"];
m4_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _components))", span="43-44", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_109 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", span="119-119", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", file="ServerBootstrapperFacts.cs"];
m4_110 [label="_supervisor.Setup(x => x.Dispose()).Throws<InvalidOperationException>()", span="121-121", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_111 [label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _components);", span="118-118", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_112 [label="Assert.Throws<InvalidOperationException>(() => server.Execute(_cts.Token))", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServer_EvenWhenSupervisorThrowsAnException()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_113 [label="var mock = new Mock<IServerComponent>()", span="123-123", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_114 [label="_components.Add(mock.Object)", span="124-124", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_92 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs"];
m4_93 [label="Thread.Sleep(100)", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_94 [label="server.Execute(_cts.Token)", span="103-103", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs"];
m4_95 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_96 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_DisposesTheSupervisor()", file="ServerBootstrapperFacts.cs"];
m4_11 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerBootstrapperFacts.cs"];
m4_0 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs"];
m4_1 [label="_context = new ServerContext()", span="22-22", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs"];
m4_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs"];
m4_3 [label="_supervisor = new Mock<IServerSupervisor>()", span="24-24", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_4 [label="_cts = new CancellationTokenSource()", span="25-25", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_5 [label="_components = new List<IServerComponent>()", span="26-26", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_6 [label="_cts = new CancellationTokenSource(TimeSpan.FromMilliseconds(50))", span="27-27", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_7 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="29-29", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs"];
m4_8 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs"];
m4_77 [label="x.GetConnection()", span="85-85", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_78 [label="Exit lambda expression", span="85-85", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_79 [label="Entry lambda expression", span="86-86", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_83 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_80 [label="x.Dispose()", span="86-86", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_82 [label="server.Execute(_cts.Token)", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs"];
m4_84 [label="var server = CreateServer()", span="92-92", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_81 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_85 [label="server.Execute(_cts.Token)", span="93-93", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m4_50 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs"];
m4_51 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="62-63", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs"];
m4_52 [label="Assert.Equal(''supervisorFactory'', exception.ParamName)", span="65-65", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_53 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenSupervisorFactoryIsNull()", file="ServerBootstrapperFacts.cs"];
m4_14 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="ServerBootstrapperFacts.cs"];
m4_29 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerBootstrapperFacts.cs"];
m4_63 [label="Entry Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", span="56-56", cluster="Hangfire.Server.ServerBootstrapper.Execute(System.Threading.CancellationToken)", file="ServerBootstrapperFacts.cs"];
m4_49 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", span="34-34", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Lazy<Hangfire.Server.IServerSupervisor>)", file="ServerBootstrapperFacts.cs"];
m4_62 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs"];
m4_124 [label="return new ServerBootstrapper(ServerId, _context, _storage.Object, _supervisorFactory);", span="131-131", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_125 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="129-129", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs"];
m4_24 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerBootstrapperFacts.cs"];
m4_86 [label="_supervisor.Verify(x => x.Start())", span="95-95", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs", color=red, community=0];
m4_115 [label="Entry lambda expression", span="121-121", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_116 [label="x.Dispose()", span="121-121", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=red, community=0];
m4_118 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_9 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18", cluster="Hangfire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs"];
m4_100 [label="x.Execute(_cts.Token)", span="103-103", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=green, community=1];
m4_101 [label="var server = CreateServer()", span="111-111", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m4_102 [label="server.Execute(_cts.Token)", span="113-113", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m4_103 [label="_connection.Verify(x => x.RemoveServer(ServerId))", span="115-115", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m4_104 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="109-109", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs"];
m4_35 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m4_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory))", span="44-45", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_38 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="42-42", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m4_16 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerBootstrapperFacts.cs"];
m4_57 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m4_58 [label="var server = CreateServer()", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m4_59 [label="server.Execute(_cts.Token)", span="73-73", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m4_60 [label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="75-75", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m4_61 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="69-69", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs"];
m4_34 [label="new ServerBootstrapper(ServerId, null, _storage.Object, _components)", span="44-44", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_117 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_121 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_21 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_18 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_19 [label="_supervisor.Object", span="25-25", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_22 [label="x.GetConnection()", span="29-29", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_23 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_31 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_32 [label="new ServerBootstrapper(null, _context, _storage.Object, _supervisorFactory)", span="36-36", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_33 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_39 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_40 [label="new ServerBootstrapper(ServerId, null, _storage.Object, _supervisorFactory)", span="45-45", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_41 [label="new ServerBootstrapper(ServerId, _context, null, _components)", span="53-53", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_46 [label="Assert.Equal(''components'', exception.ParamName)", span="64-64", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_47 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_48 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_54 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_55 [label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="63-63", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_56 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_65 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_66 [label="x.AnnounceServer(ServerId, _context)", span="75-75", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_67 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_76 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_88 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_89 [label="x.Execute(It.IsAny<CancellationToken>())", span="93-93", cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m4_90 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_97 [label="x.Execute(_cts.Token)", span="102-102", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=green, community=0];
m4_98 [label="x.Dispose()", span="105-105", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_99 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_105 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_106 [label="x.RemoveServer(ServerId)", span="115-115", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_107 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_119 [label="server.Execute(_cts.Token)", span="124-124", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_120 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_122 [label="x.RemoveServer(It.IsAny<string>())", span="126-126", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m4_123 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m4_68 [label="Entry Unk.AnnounceServer", span="", cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs"];
m4_75 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs"];
m4_91 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerBootstrapperFacts.cs"];
m4_64 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerBootstrapperFacts.cs"];
m4_108 [label="Entry Unk.RemoveServer", span="", cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs"];
m4_87 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", span="90-90", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsTheSupervisor()", file="ServerBootstrapperFacts.cs"];
m4_17 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerBootstrapperFacts.cs"];
m4_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerBootstrapperFacts.cs"];
m4_10 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ServerBootstrapperFacts.cs"];
m4_126 [label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span="", file="ServerBootstrapperFacts.cs"];
m4_127 [label=server, span="", file="ServerBootstrapperFacts.cs"];
m5_24 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_25 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ServerComponentExtensions.cs"];
m5_21 [label="Entry Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", span="52-52", cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs"];
m5_27 [label="Thread.CurrentThread.Name = name", span="56-56", cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs"];
m5_28 [label=InvalidOperationException, span="58-58", cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs"];
m5_29 [label="Exit Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", span="52-52", cluster="Hangfire.Server.ServerComponentExtensions.TrySetThreadName(string)", file="ServerComponentExtensions.cs"];
m5_23 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ServerComponentExtensions.cs"];
m5_22 [label="Entry Hangfire.Logging.LogProvider.GetLogger(string)", span="363-363", cluster="Hangfire.Logging.LogProvider.GetLogger(string)", file="ServerComponentExtensions.cs"];
m5_0 [label="Entry HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", span="7-7", cluster="HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", file="ServerComponentExtensions.cs"];
m5_1 [label="filters.Add(new HandleErrorAttribute())", span="9-9", cluster="HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", file="ServerComponentExtensions.cs", color=green, community=0];
m5_3 [label="Entry HandleErrorAttribute.cstr", span="", cluster="HandleErrorAttribute.cstr", color=red, community=0, file="ServerComponentExtensions.cs"];
m5_2 [label="Exit HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", span="7-7", cluster="HangFire.Sample.FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)", file="ServerComponentExtensions.cs"];
m5_4 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="ServerComponentExtensions.cs"];
m5_26 [label="Entry Hangfire.Logging.ILog.FatalException(string, System.Exception)", span="188-188", cluster="Hangfire.Logging.ILog.FatalException(string, System.Exception)", file="ServerComponentExtensions.cs"];
m5_6 [label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0", cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="ServerComponentExtensions.cs"];
m5_7 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="ServerComponentExtensions.cs"];
m5_8 [label="RunComponent(component, cancellationToken)", span="15-15", cluster="lambda expression", file="ServerComponentExtensions.cs"];
m5_9 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="ServerComponentExtensions.cs"];
m5_20 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ServerComponentExtensions.cs"];
m5_10 [label="Entry Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="21-21", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_11 [label="TrySetThreadName(component.ToString())", span="26-26", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_12 [label="var logger = LogProvider.GetLogger(component.ToString())", span="30-30", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_13 [label="logger.DebugFormat(''Server component '{0}' started.'', component)", span="31-31", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_14 [label="component.Execute(cancellationToken)", span="35-35", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_17 [label="logger.FatalException(\r\n                    String.Format(\r\n                        ''Fatal error occurred during execution of '{0}' component. It will be stopped. See the exception for details.'',\r\n                        component),\r\n                    ex)", span="42-46", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_18 [label="logger.DebugFormat(''Server component '{0}' stopped.'', component)", span="49-49", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_15 [label=OperationCanceledException, span="37-37", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_16 [label=Exception, span="40-40", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_19 [label="Exit Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="21-21", cluster="Hangfire.Server.ServerComponentExtensions.RunComponent(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensions.cs"];
m5_30 [label="Hangfire.Server.IServerComponent", span="", file="ServerComponentExtensions.cs"];
m5_31 [label="System.Threading.CancellationToken", span="", file="ServerComponentExtensions.cs"];
m6_21 [label="Entry Unk.CreateTask", span="", cluster="Unk.CreateTask", file="ServerComponentExtensionsFacts.cs"];
m6_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerComponentExtensionsFacts.cs"];
m6_6 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs"];
m6_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => ServerComponentExtensions.CreateTask(null, _cts.Token))", span="23-24", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs"];
m6_8 [label="Assert.Equal(''component'', exception.ParamName)", span="26-26", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs"];
m6_9 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ThrowsAnException_WhenComponentIsNull()", file="ServerComponentExtensionsFacts.cs"];
m6_29 [label="Entry System.Threading.Tasks.Task.Wait()", span="0-0", cluster="System.Threading.Tasks.Task.Wait()", file="ServerComponentExtensionsFacts.cs"];
m6_22 [label="Entry System.Enum.HasFlag(System.Enum)", span="0-0", cluster="System.Enum.HasFlag(System.Enum)", file="ServerComponentExtensionsFacts.cs"];
m6_23 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerComponentExtensionsFacts.cs"];
m6_34 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerComponentExtensionsFacts.cs"];
m6_40 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerComponentExtensionsFacts.cs"];
m6_0 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs"];
m6_1 [label="_component = new Mock<IServerComponent>()", span="16-16", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs"];
m6_2 [label="_cts = new CancellationTokenSource()", span="17-17", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs"];
m6_3 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.ServerComponentExtensionsFacts()", file="ServerComponentExtensionsFacts.cs"];
m6_11 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerComponentExtensionsFacts.cs"];
m6_35 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="49-49", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m6_36 [label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="51-51", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m6_37 [label="var task = _component.Object.CreateTask(_cts.Token)", span="52-52", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m6_38 [label="Assert.DoesNotThrow(() => task.Wait())", span="54-54", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m6_39 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", span="49-49", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatDoesNotThrowAnyException()", file="ServerComponentExtensionsFacts.cs"];
m6_15 [label="Entry Hangfire.Server.ServerComponentExtensions.CreateTask(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", span="10-10", cluster="Hangfire.Server.ServerComponentExtensions.CreateTask(Hangfire.Server.IServerComponent, System.Threading.CancellationToken)", file="ServerComponentExtensionsFacts.cs"];
m6_5 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerComponentExtensionsFacts.cs"];
m6_4 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="ServerComponentExtensionsFacts.cs"];
m6_30 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerComponentExtensionsFacts.cs"];
m6_45 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_12 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_13 [label="ServerComponentExtensions.CreateTask(null, _cts.Token)", span="24-24", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_14 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_31 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_32 [label="x.Execute(_cts.Token)", span="45-45", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_33 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_42 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_46 [label="task.Wait()", span="54-54", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_43 [label="x.Execute(It.IsAny<CancellationToken>())", span="51-51", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_44 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_47 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ServerComponentExtensionsFacts.cs"];
m6_41 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerComponentExtensionsFacts.cs"];
m6_24 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="39-39", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m6_25 [label="var task = _component.Object.CreateTask(_cts.Token)", span="41-41", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m6_26 [label="task.Wait()", span="43-43", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m6_27 [label="_component.Verify(x => x.Execute(_cts.Token), Times.Once)", span="45-45", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m6_28 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", span="39-39", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsATask_ThatCallsTheExecuteMethod_OfAGivenComponent()", file="ServerComponentExtensionsFacts.cs"];
m6_16 [label="Entry Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", span="30-30", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs"];
m6_17 [label="var task = _component.Object.CreateTask(_cts.Token)", span="32-32", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs"];
m6_18 [label="Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.LongRunning))", span="34-34", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs"];
m6_19 [label="Assert.True(task.CreationOptions.HasFlag(TaskCreationOptions.AttachedToParent))", span="35-35", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", color=red, community=0, file="ServerComponentExtensionsFacts.cs"];
m6_20 [label="Exit Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", span="30-30", cluster="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts.CreateTask_ReturnsALongRunning_AttachedToParent_Task()", file="ServerComponentExtensionsFacts.cs"];
m6_48 [label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts", span="", file="ServerComponentExtensionsFacts.cs"];
m6_49 [label=task, span="", file="ServerComponentExtensionsFacts.cs"];
m8_25 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35", cluster="Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="ServerSupervisorCollection.cs"];
m8_26 [label="Entry Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="196-196", cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs"];
m8_27 [label="transaction.DecrementCounter(''stats:succeeded'')", span="198-198", cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs"];
m8_28 [label="Exit Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="196-196", cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs"];
m8_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ServerSupervisorCollection.cs"];
m8_18 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ServerSupervisorCollection.cs"];
m8_19 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="ServerSupervisorCollection.cs"];
m8_29 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37", cluster="Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="ServerSupervisorCollection.cs"];
m8_22 [label="Entry Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="191-191", cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs"];
m8_23 [label="transaction.IncrementCounter(''stats:succeeded'')", span="193-193", cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs"];
m8_24 [label="Exit Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="191-191", cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="ServerSupervisorCollection.cs"];
m8_0 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="ServerSupervisorCollection.cs"];
m8_1 [label="SucceededAt = DateTime.UtcNow", span="53-53", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs"];
m8_2 [label="Result = result", span="54-54", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs"];
m8_3 [label="Latency = latency", span="55-55", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs"];
m8_4 [label="PerformanceDuration = performanceDuration", span="56-56", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", color=red, community=0, file="ServerSupervisorCollection.cs"];
m8_5 [label="Exit Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="ServerSupervisorCollection.cs"];
m8_20 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerSupervisorCollection.cs"];
m8_6 [label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_7 [label="var data = new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.SerializeDateTime(SucceededAt) },\r\n                { ''PerformanceDuration'', PerformanceDuration.ToString(CultureInfo.InvariantCulture) },\r\n                { ''Latency'', Latency.ToString(CultureInfo.InvariantCulture) }\r\n            }", span="160-165", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_8 [label="Result != null", span="167-167", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_14 [label="data.Add(''Result'', serializedResult)", span="182-182", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_15 [label="return data;", span="186-186", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_9 [label="string serializedResult", span="169-169", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_10 [label="serializedResult = JobHelper.ToJson(Result)", span="173-173", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_11 [label=Exception, span="175-175", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_13 [label="serializedResult != null", span="180-180", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_12 [label="serializedResult = ''Can not serialize the return value''", span="177-177", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_16 [label="Exit Hangfire.States.SucceededState.SerializeData()", span="158-158", cluster="Hangfire.States.SucceededState.SerializeData()", file="ServerSupervisorCollection.cs"];
m8_30 [label="Hangfire.States.SucceededState", span="", file="ServerSupervisorCollection.cs"];
m9_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_96 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_97 [label="var client = CreateClient()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_98 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="104-105", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_99 [label="Assert.Equal(''job'', exception.ParamName)", span="107-107", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_100 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_56 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerSupervisorCollectionFacts.cs"];
m9_57 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_58 [label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_59 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="ServerSupervisorCollectionFacts.cs"];
m9_136 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_137 [label="var client = CreateClient()", span="148-148", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_138 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_139 [label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_140 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_37 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerSupervisorCollectionFacts.cs"];
m9_77 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerSupervisorCollectionFacts.cs"];
m9_78 [label="CreateClient()", span="86-86", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_79 [label="_storage.Verify(x => x.GetConnection())", span="87-87", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_80 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", span="84-84", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="ServerSupervisorCollectionFacts.cs"];
m9_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_60 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="ServerSupervisorCollectionFacts.cs"];
m9_112 [label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="ServerSupervisorCollectionFacts.cs"];
m9_121 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="ServerSupervisorCollectionFacts.cs"];
m9_64 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39", cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="ServerSupervisorCollectionFacts.cs"];
m9_122 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerSupervisorCollectionFacts.cs"];
m9_123 [label="var client = CreateClient()", span="134-134", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_124 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_125 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_126 [label="Assert.NotNull(exception.InnerException)", span="141-141", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_127 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_128 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="ServerSupervisorCollectionFacts.cs"];
m9_145 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_146 [label="var client = CreateClient()", span="159-159", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_147 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_148 [label="Assert.Equal(''state'', exception.ParamName)", span="164-164", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_149 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_154 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs"];
m9_155 [label="var client = CreateClient()", span="170-170", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs"];
m9_156 [label="client.ChangeState(''job-id'', _state.Object, null)", span="172-172", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs"];
m9_157 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs"];
m9_158 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="ServerSupervisorCollectionFacts.cs"];
m9_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerSupervisorCollectionFacts.cs"];
m9_104 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_105 [label="var client = CreateClient()", span="113-113", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_106 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="115-116", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_107 [label="Assert.Equal(''state'', exception.ParamName)", span="118-118", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_108 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="111-111", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_163 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs"];
m9_164 [label="var client = CreateClient()", span="183-183", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs"];
m9_165 [label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="185-185", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs"];
m9_166 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="187-190", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs"];
m9_167 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="181-181", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="ServerSupervisorCollectionFacts.cs"];
m9_91 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", file="ServerSupervisorCollectionFacts.cs"];
m9_171 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs"];
m9_172 [label="_stateMachine.Setup(x => x.TryToChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="196-197", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs"];
m9_173 [label="var client = CreateClient()", span="198-198", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs"];
m9_174 [label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="200-200", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs"];
m9_175 [label="Assert.True(result)", span="202-202", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs"];
m9_176 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="194-194", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="ServerSupervisorCollectionFacts.cs"];
m9_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="ServerSupervisorCollectionFacts.cs"];
m9_144 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="ServerSupervisorCollectionFacts.cs"];
m9_86 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerSupervisorCollectionFacts.cs"];
m9_87 [label="var client = CreateClient()", span="93-93", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_88 [label="client.Dispose()", span="94-94", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_89 [label="_connection.Verify(x => x.Dispose())", span="96-96", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_90 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", span="91-91", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Dispose_DisposesTheConnection()", file="ServerSupervisorCollectionFacts.cs"];
m9_129 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ServerSupervisorCollectionFacts.cs"];
m9_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerSupervisorCollectionFacts.cs"];
m9_65 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerSupervisorCollectionFacts.cs"];
m9_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_67 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="ServerSupervisorCollectionFacts.cs"];
m9_81 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerSupervisorCollectionFacts.cs"];
m9_182 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerSupervisorCollectionFacts.cs"];
m9_183 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="ServerSupervisorCollectionFacts.cs"];
m9_71 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerSupervisorCollectionFacts.cs"];
m9_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_73 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="ServerSupervisorCollectionFacts.cs"];
m9_153 [label="Entry HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="100-100", cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="ServerSupervisorCollectionFacts.cs"];
m9_162 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="ServerSupervisorCollectionFacts.cs"];
m9_178 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_20 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_21 [label="x.GetConnection()", span="24-24", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_22 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_25 [label="x.Create(_connection.Object)", span="29-29", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_29 [label="Method()", span="33-33", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_38 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_39 [label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_40 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_53 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_54 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_55 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_61 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_62 [label="new BackgroundJobClient()", span="67-67", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_63 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_69 [label="new BackgroundJobClient(_storage.Object)", span="73-73", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_74 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_76 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_83 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_84 [label="x.GetConnection()", span="87-87", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_85 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_92 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_93 [label="x.Dispose()", span="96-96", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_94 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_102 [label="client.Create(null, _state.Object)", span="105-105", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_101 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_103 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_110 [label="client.Create(_job, null)", span="116-116", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_109 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_111 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_118 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_119 [label="x.Run(It.IsNotNull<CreateContext>())", span="128-128", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_120 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_134 [label="client.Create(_job, _state.Object)", span="139-139", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_130 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_133 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_131 [label="x.Run(It.IsAny<CreateContext>())", span="135-135", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_132 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_135 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_142 [label="client.ChangeState(null, _state.Object, null)", span="151-151", cluster="lambda expression", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_141 [label="Entry lambda expression", span="151-151", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_143 [label="Exit lambda expression", span="151-151", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_151 [label="client.ChangeState(''jobId'', null, null)", span="162-162", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_150 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_152 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_159 [label="Entry lambda expression", span="174-177", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_160 [label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="174-177", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_161 [label="Exit lambda expression", span="174-177", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_168 [label="Entry lambda expression", span="187-190", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_169 [label="x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="187-190", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_170 [label="Exit lambda expression", span="187-190", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_179 [label="x.TryToChangeState(''job-id'', _state.Object, null)", span="196-196", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_180 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="ServerSupervisorCollectionFacts.cs"];
m9_82 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerSupervisorCollectionFacts.cs"];
m9_49 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_51 [label="Assert.Equal(''process'', exception.ParamName)", span="60-60", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_52 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_31 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerSupervisorCollectionFacts.cs"];
m9_181 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Method()", span="205-205", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Method()", file="ServerSupervisorCollectionFacts.cs"];
m9_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_32 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_35 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_42 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_45 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="ServerSupervisorCollectionFacts.cs"];
m9_19 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerSupervisorCollectionFacts.cs"];
m9_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ServerSupervisorCollectionFacts.cs"];
m9_113 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerSupervisorCollectionFacts.cs"];
m9_114 [label="var client = CreateClient()", span="124-124", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_115 [label="client.Create(_job, _state.Object)", span="126-126", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_116 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_117 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="ServerSupervisorCollectionFacts.cs"];
m9_177 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerSupervisorCollectionFacts.cs"];
m9_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerSupervisorCollectionFacts.cs"];
m9_41 [label="Entry BackgroundJobClient.cstr", span="", cluster="BackgroundJobClient.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ServerSupervisorCollectionFacts.cs"];
m9_0 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerSupervisorCollectionFacts.cs"];
m9_1 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_3 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_4 [label="_stateMachine = new Mock<IStateMachine>()", span="26-26", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_6 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_7 [label="_process = new Mock<IJobCreationProcess>()", span="31-31", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_8 [label="_state = new Mock<IState>()", span="32-32", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_9 [label="_job = Job.FromExpression(() => Method())", span="33-33", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs"];
m9_10 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="ServerSupervisorCollectionFacts.cs"];
m9_184 [label="HangFire.Core.Tests.BackgroundJobClientFacts", span="", file="ServerSupervisorCollectionFacts.cs"];
m9_185 [label=client, span="", file="ServerSupervisorCollectionFacts.cs"];
m9_186 [label=client, span="", file="ServerSupervisorCollectionFacts.cs"];
m9_187 [label=client, span="", file="ServerSupervisorCollectionFacts.cs"];
m9_188 [label=client, span="", file="ServerSupervisorCollectionFacts.cs"];
m9_189 [label=client, span="", file="ServerSupervisorCollectionFacts.cs"];
m10_97 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerSupervisorFacts.cs"];
m10_252 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerSupervisorFacts.cs"];
m10_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="ServerSupervisorFacts.cs"];
m10_101 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerSupervisorFacts.cs"];
m10_102 [label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="175-175", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_104 [label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="178-180", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_103 [label="AcquireSetLock()", span="177-177", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_105 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerSupervisorFacts.cs"];
m10_45 [label="Entry Hangfire.States.IState.SerializeData()", span="202-202", cluster="Hangfire.States.IState.SerializeData()", file="ServerSupervisorFacts.cs"];
m10_6 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ServerSupervisorFacts.cs"];
m10_7 [label="_storage.UseTransaction(connection =>\r\n            {\r\n                connection.EnlistTransaction(Transaction.Current);\r\n\r\n                if (_lockedResources.Count > 0)\r\n                {\r\n                    connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }));\r\n                }\r\n\r\n                foreach (var command in _commandQueue)\r\n                {\r\n                    command(connection);\r\n                }\r\n            })", span="46-62", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_8 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ServerSupervisorFacts.cs"];
m10_60 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="ServerSupervisorFacts.cs"];
m10_65 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerSupervisorFacts.cs"];
m10_66 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_67 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="ServerSupervisorFacts.cs"];
m10_59 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="ServerSupervisorFacts.cs"];
m10_225 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_226 [label="key == null", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_230 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="317-317", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_227 [label="throw new ArgumentNullException(''key'');", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_228 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="313-314", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_229 [label="AcquireSetLock()", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_231 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="ServerSupervisorFacts.cs"];
m10_77 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerSupervisorFacts.cs"];
m10_78 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_79 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="ServerSupervisorFacts.cs"];
m10_235 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_236 [label="key == null", span="322-322", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_240 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="328-328", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_237 [label="throw new ArgumentNullException(''key'');", span="322-322", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_238 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_239 [label="AcquireListLock()", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_241 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="ServerSupervisorFacts.cs"];
m10_250 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ServerSupervisorFacts.cs"];
m10_195 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_196 [label="key == null", span="278-278", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_200 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="284-284", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_197 [label="throw new ArgumentNullException(''key'');", span="278-278", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_198 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="280-281", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_199 [label="AcquireSetLock()", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_201 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_251 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerSupervisorFacts.cs"];
m10_256 [label="_lockedResources.Add(resource)", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerSupervisorFacts.cs"];
m10_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="ServerSupervisorFacts.cs"];
m10_141 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerSupervisorFacts.cs"];
m10_254 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerSupervisorFacts.cs"];
m10_255 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="ServerSupervisorFacts.cs"];
m10_247 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ServerSupervisorFacts.cs"];
m10_38 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs"];
m10_39 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="81-84", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_40 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="86-96", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_41 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs"];
m10_205 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_206 [label="key == null", span="289-289", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_210 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="295-295", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_207 [label="throw new ArgumentNullException(''key'');", span="289-289", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_208 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="291-292", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_209 [label="AcquireListLock()", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_211 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_47 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs"];
m10_48 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="101-103", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_49 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="105-114", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_50 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="ServerSupervisorFacts.cs"];
m10_83 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_84 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_85 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_175 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_176 [label="key == null", span="257-257", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_180 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_177 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_178 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="259-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_179 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_181 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="ServerSupervisorFacts.cs"];
m10_89 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerSupervisorFacts.cs"];
m10_90 [label="AddToSet(key, value, 0.0)", span="155-155", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_91 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="ServerSupervisorFacts.cs"];
m10_27 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerSupervisorFacts.cs"];
m10_245 [label="_commandQueue.Enqueue(action)", span="333-333", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerSupervisorFacts.cs"];
m10_246 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ServerSupervisorFacts.cs"];
m10_54 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerSupervisorFacts.cs"];
m10_55 [label="var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_57 [label="QueueCommand(x => persistentQueue.Enqueue(x, queue, jobId))", span="122-122", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_56 [label="var persistentQueue = provider.GetJobQueue()", span="120-120", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_58 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="ServerSupervisorFacts.cs"];
m10_9 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="ServerSupervisorFacts.cs"];
m10_17 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="ServerSupervisorFacts.cs"];
m10_20 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ServerSupervisorFacts.cs"];
m10_64 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="ServerSupervisorFacts.cs"];
m10_71 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_72 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_73 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_92 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerSupervisorFacts.cs"];
m10_93 [label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_95 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="168-170", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_94 [label="AcquireSetLock()", span="167-167", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_96 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerSupervisorFacts.cs"];
m10_132 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs"];
m10_133 [label="key == null", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_135 [label="keyValuePairs == null", span="217-217", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_139 [label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="227-229", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs"];
m10_134 [label="throw new ArgumentNullException(''key'');", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_136 [label="throw new ArgumentNullException(''keyValuePairs'');", span="217-217", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_137 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="219-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_138 [label="AcquireHashLock()", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs"];
m10_140 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerSupervisorFacts.cs"];
m10_149 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_150 [label="key == null", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_154 [label="QueueCommand(x => x.Execute(query, new { key }))", span="239-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_151 [label="throw new ArgumentNullException(''key'');", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_152 [label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="236-236", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_153 [label="AcquireHashLock()", span="238-238", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_155 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="ServerSupervisorFacts.cs"];
m10_31 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_32 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerSupervisorFacts.cs"];
m10_33 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_34 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="ServerSupervisorFacts.cs"];
m10_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ServerSupervisorFacts.cs"];
m10_1 [label="storage == null", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_3 [label="_storage = storage", span="41-41", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_2 [label="throw new ArgumentNullException(''storage'');", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_4 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="ServerSupervisorFacts.cs"];
m10_185 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_186 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_190 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="273-273", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_187 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_188 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="269-270", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_189 [label="AcquireHashLock()", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_191 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_46 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerSupervisorFacts.cs"];
m10_24 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_25 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_26 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerSupervisorFacts.cs"];
m10_242 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_10 [label="Entry lambda expression", span="46-62", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_11 [label="connection.EnlistTransaction(Transaction.Current)", span="48-48", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_13 [label="connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="52-55", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_15 [label="command(connection)", span="60-60", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_12 [label="_lockedResources.Count > 0", span="50-50", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_14 [label=_commandQueue, span="58-58", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_21 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_16 [label="Exit lambda expression", span="46-62", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_22 [label="new { resource = x }", span="55-55", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_23 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_29 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_28 [label="Entry lambda expression", span="67-69", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_30 [label="Exit lambda expression", span="67-69", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_36 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76", cluster="lambda expression", color=red, community=1, file="ServerSupervisorFacts.cs"];
m10_35 [label="Entry lambda expression", span="74-76", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_37 [label="Exit lambda expression", span="74-76", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_43 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="86-96", cluster="lambda expression", color=red, community=1, file="ServerSupervisorFacts.cs"];
m10_42 [label="Entry lambda expression", span="86-96", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_44 [label="Exit lambda expression", span="86-96", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_52 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="105-114", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_51 [label="Entry lambda expression", span="105-114", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_53 [label="Exit lambda expression", span="105-114", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_62 [label="persistentQueue.Enqueue(x, queue, jobId)", span="122-122", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_61 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_63 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_69 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129", cluster="lambda expression", color=red, community=1, file="ServerSupervisorFacts.cs"];
m10_68 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_70 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_75 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_74 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_76 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_81 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_80 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_82 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_87 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_86 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_88 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_99 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="168-170", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_98 [label="Entry lambda expression", span="168-170", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_100 [label="Exit lambda expression", span="168-170", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_107 [label="x.Execute(\r\n                query,\r\n                new { key, value })", span="178-180", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_106 [label="Entry lambda expression", span="178-180", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_108 [label="Exit lambda expression", span="178-180", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_115 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="186-188", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_114 [label="Entry lambda expression", span="186-188", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_116 [label="Exit lambda expression", span="186-188", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_122 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="194-196", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_121 [label="Entry lambda expression", span="194-196", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_123 [label="Exit lambda expression", span="194-196", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_130 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="209-211", cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_129 [label="Entry lambda expression", span="209-211", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_131 [label="Exit lambda expression", span="209-211", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_144 [label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="227-229", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_147 [label="new { key = key, field = y.Key, value = y.Value }", span="229-229", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_143 [label="Entry lambda expression", span="227-229", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_145 [label="Exit lambda expression", span="227-229", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_146 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_148 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_157 [label="x.Execute(query, new { key })", span="239-239", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_156 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_158 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_169 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="252-252", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_173 [label="new { key = key, value = value }", span="252-252", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_168 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_170 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_172 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_174 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_183 [label="x.Execute(query, new { key = key })", span="262-262", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_182 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_184 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_193 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="273-273", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_192 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_194 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_203 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="284-284", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_202 [label="Entry lambda expression", span="284-284", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_204 [label="Exit lambda expression", span="284-284", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_213 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="295-295", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_212 [label="Entry lambda expression", span="295-295", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_214 [label="Exit lambda expression", span="295-295", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_223 [label="x.Execute(query, new { key = key })", span="306-306", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_222 [label="Entry lambda expression", span="306-306", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_224 [label="Exit lambda expression", span="306-306", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_233 [label="x.Execute(query, new { key = key })", span="317-317", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_232 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_234 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_243 [label="x.Execute(query, new { key = key })", span="328-328", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_244 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="ServerSupervisorFacts.cs"];
m10_159 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_160 [label="key == null", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_162 [label="items == null", span="245-245", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_166 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_161 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_163 [label="throw new ArgumentNullException(''items'');", span="245-245", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_164 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="247-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_165 [label="AcquireSetLock()", span="251-251", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_167 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="ServerSupervisorFacts.cs"];
m10_18 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServerSupervisorFacts.cs"];
m10_258 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="ServerSupervisorFacts.cs"];
m10_171 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ServerSupervisorFacts.cs"];
m10_19 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerSupervisorFacts.cs"];
m10_142 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="ServerSupervisorFacts.cs"];
m10_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerSupervisorFacts.cs"];
m10_118 [label="AcquireListLock()", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_119 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="194-196", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_120 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerSupervisorFacts.cs"];
m10_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerSupervisorFacts.cs"];
m10_248 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerSupervisorFacts.cs"];
m10_249 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="ServerSupervisorFacts.cs"];
m10_215 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_216 [label="key == null", span="300-300", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_220 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="306-306", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_217 [label="throw new ArgumentNullException(''key'');", span="300-300", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_218 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="302-303", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_219 [label="AcquireHashLock()", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_221 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="ServerSupervisorFacts.cs"];
m10_109 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerSupervisorFacts.cs"];
m10_110 [label="AcquireListLock()", span="185-185", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_111 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="186-188", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_112 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="ServerSupervisorFacts.cs"];
m10_124 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerSupervisorFacts.cs"];
m10_125 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="201-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_127 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="209-211", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_126 [label="AcquireListLock()", span="208-208", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="ServerSupervisorFacts.cs"];
m10_128 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="ServerSupervisorFacts.cs"];
m10_259 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="ServerSupervisorFacts.cs"];
m10_260 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_261 [label="System.TimeSpan", span="", file="ServerSupervisorFacts.cs"];
m10_262 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_263 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_264 [label="Hangfire.States.IState", span="", file="ServerSupervisorFacts.cs"];
m10_265 [label=addAndSetStateSql, span="", file="ServerSupervisorFacts.cs"];
m10_266 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_267 [label="Hangfire.States.IState", span="", file="ServerSupervisorFacts.cs"];
m10_268 [label=addStateSql, span="", file="ServerSupervisorFacts.cs"];
m10_269 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_270 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_271 [label=persistentQueue, span="", file="ServerSupervisorFacts.cs"];
m10_272 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_273 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_274 [label="System.TimeSpan", span="", file="ServerSupervisorFacts.cs"];
m10_275 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_276 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_277 [label="System.TimeSpan", span="", file="ServerSupervisorFacts.cs"];
m10_278 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_279 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_280 [label=double, span="", file="ServerSupervisorFacts.cs"];
m10_281 [label=addSql, span="", file="ServerSupervisorFacts.cs"];
m10_282 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_283 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_284 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_285 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_286 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_287 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_288 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_289 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_290 [label=int, span="", file="ServerSupervisorFacts.cs"];
m10_291 [label=int, span="", file="ServerSupervisorFacts.cs"];
m10_292 [label=trimSql, span="", file="ServerSupervisorFacts.cs"];
m10_293 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_294 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="ServerSupervisorFacts.cs"];
m10_295 [label=sql, span="", file="ServerSupervisorFacts.cs"];
m10_296 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_297 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_298 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_299 [label="System.Collections.Generic.IList<string>", span="", file="ServerSupervisorFacts.cs"];
m10_300 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_301 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_302 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_303 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_304 [label="System.TimeSpan", span="", file="ServerSupervisorFacts.cs"];
m10_305 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_306 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_307 [label="System.TimeSpan", span="", file="ServerSupervisorFacts.cs"];
m10_308 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_309 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_310 [label="System.TimeSpan", span="", file="ServerSupervisorFacts.cs"];
m10_311 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_312 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_313 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_314 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_315 [label=query, span="", file="ServerSupervisorFacts.cs"];
m10_316 [label=string, span="", file="ServerSupervisorFacts.cs"];
m10_317 [label=query, span="", file="ServerSupervisorFacts.cs"];
m11_0 [label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorOptions.cs"];
m11_1 [label="ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="25-25", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", color=red, community=0, file="ServerSupervisorOptions.cs"];
m11_2 [label="Exit Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23", cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorOptions.cs"];
m11_3 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerSupervisorOptions.cs"];
m11_4 [label="Hangfire.Server.ServerSupervisorOptions", span="", file="ServerSupervisorOptions.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
d6 -> d16  [key=0, style=solid, color=green];
d6 -> d17  [key=2, style=dotted, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d7  [key=0, style=solid];
d16 -> d4  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d25  [key=2, style=dotted, color=green];
d13 -> d26  [key=2, style=dotted, color=green];
d67 -> d13  [key=1, style=dashed, color=green, label="HangFire.Client.JobClient"];
d67 -> d1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
d67 -> d14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
d67 -> d36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
d67 -> d40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
d67 -> d41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
d67 -> d50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
d12 -> d13  [key=0, style=solid, color=green];
d12 -> d24  [key=2, style=dotted];
d10 -> d13  [key=1, style=dashed, color=green, label=jobId];
d10 -> d11  [key=0, style=solid];
d10 -> d22  [key=2, style=dotted];
d10 -> d15  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d11 -> d13  [key=1, style=dashed, color=green, label=state];
d11 -> d12  [key=0, style=solid];
d11 -> d23  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d27  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid, color=green];
d24 -> d54  [key=1, style=dashed, color=green, label="System.Type"];
d24 -> d55  [key=1, style=dashed, color=green, label=object];
d24 -> d53  [key=0, style=solid];
d53 -> d54  [key=0, style=solid, color=green];
d53 -> d55  [key=1, style=dashed, color=green, label=job];
d53 -> d59  [key=2, style=dotted];
d53 -> d56  [key=1, style=dashed, color=darkseagreen4, label=job];
d53 -> d57  [key=1, style=dashed, color=darkseagreen4, label=job];
d55 -> d56  [key=0, style=solid, color=green];
d55 -> d60  [key=2, style=dotted, color=green];
d55 -> d61  [key=2, style=dotted, color=green];
d56 -> d57  [key=0, style=solid];
d56 -> d62  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d4 -> d7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d4 -> d8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d4 -> d9  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=0, style=solid];
d7 -> d18  [key=2, style=dotted];
d8 -> d16  [key=0, style=solid];
d8 -> d19  [key=2, style=dotted];
d8 -> d20  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d30 -> d17  [key=2, style=dotted];
d30 -> d43  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d36 -> d4  [key=2, style=dotted];
d36 -> d43  [key=0, style=solid];
d40 -> d25  [key=2, style=dotted];
d40 -> d26  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d41 -> d42  [key=0, style=solid];
d41 -> d27  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d50 -> d52  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d11  [key=1, style=dashed, color=darkseagreen4, label=queue];
d9 -> d21  [key=2, style=dotted];
d22 -> d63  [key=0, style=solid];
d39 -> d24  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d58 -> d24  [key=0, style=bold, color=blue];
d57 -> d58  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d29 -> d31  [key=0, style=solid];
d43 -> d28  [key=0, style=bold, color=blue];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d28 -> d36  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d28 -> d39  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d28 -> d29  [key=0, style=solid];
d28 -> d31  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d28 -> d32  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d28 -> d33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d35 -> d36  [key=0, style=solid];
d35 -> d35  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d35 -> d37  [key=0, style=solid];
d35 -> d46  [key=2, style=dotted];
d35 -> d38  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d37 -> d40  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d37 -> d22  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d42  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d38 -> d40  [key=1, style=dashed, color=darkseagreen4, label=state];
d38 -> d39  [key=0, style=solid];
d38 -> d47  [key=2, style=dotted];
d38 -> d48  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d51 -> d49  [key=0, style=bold, color=blue];
d64 -> d22  [key=0, style=bold, color=blue];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=2, style=dotted];
d63 -> d66  [key=2, style=dotted];
d31 -> d18  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d32 -> d19  [key=2, style=dotted];
d32 -> d20  [key=2, style=dotted];
d32 -> d43  [key=0, style=solid];
d34 -> d43  [key=0, style=solid];
d34 -> d45  [key=2, style=dotted];
d33 -> d35  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d33 -> d33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d33 -> d44  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=0, style=solid];
m0_5 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=0, style=solid];
m0_6 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_9  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_3  [key=0, style=bold, color=blue];
m0_12 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m0_12 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_0 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m1_0 -> m1_0  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.JobState OnStateChanged"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_6 -> m1_12  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m1_7 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m1_10 -> m1_12  [key=0, style=solid];
m1_10 -> m1_18  [key=2, style=dotted];
m1_10 -> m1_19  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_2 -> m1_12  [key=0, style=solid];
m1_2 -> d17  [key=2, style=dotted];
m1_4 -> m1_12  [key=0, style=solid];
m1_4 -> d17  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_9 -> m1_17  [key=2, style=dotted];
m1_12 -> m1_0  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=long];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_26  [key=2, style=dotted];
m1_22 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_20  [key=0, style=bold, color=blue];
m1_28 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RetryJobsFilter"];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid, color=red];
m4_42 -> m4_37  [key=0, style=solid, color=green];
m4_43 -> m4_44  [key=0, style=solid, color=red];
m4_43 -> m4_29  [key=2, style=dotted, color=red];
m4_43 -> m4_46  [key=1, style=dashed, color=red, label="lambda expression"];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_30  [key=2, style=dotted];
m4_37 -> m4_44  [key=0, style=solid, color=green];
m4_37 -> m4_29  [key=2, style=dotted, color=green];
m4_37 -> m4_39  [key=1, style=dashed, color=green, label="lambda expression"];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_30  [key=2, style=dotted];
m4_45 -> m4_42  [key=0, style=bold, color=blue];
m4_45 -> m4_46  [key=0, style=solid, color=green];
m4_45 -> m4_29  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_62  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_63  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_75  [key=2, style=dotted];
m4_72 -> m4_64  [key=2, style=dotted];
m4_72 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [key=2, style=dotted];
m4_73 -> m4_64  [key=2, style=dotted];
m4_73 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_74 -> m4_69  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_25 -> m4_20  [key=0, style=solid, color=green];
m4_26 -> m4_27  [key=0, style=solid, color=red];
m4_26 -> m4_29  [key=2, style=dotted, color=red];
m4_26 -> m4_31  [key=1, style=dashed, color=red, label="lambda expression"];
m4_26 -> m4_33  [key=0, style=solid, color=green];
m4_26 -> m4_34  [key=2, style=dotted, color=green];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_30  [key=2, style=dotted];
m4_20 -> m4_27  [key=0, style=solid, color=green];
m4_20 -> m4_29  [key=2, style=dotted, color=green];
m4_20 -> m4_18  [key=1, style=dashed, color=green, label="lambda expression"];
m4_20 -> m4_21  [key=0, style=bold, color=green];
m4_28 -> m4_25  [key=0, style=bold, color=blue];
m4_30 -> m4_37  [key=0, style=solid, color=green];
m4_30 -> m4_29  [key=2, style=dotted, color=green];
m4_30 -> m4_31  [key=1, style=dashed, color=green, label="lambda expression"];
m4_109 -> m4_110  [key=0, style=solid, color=red];
m4_110 -> m4_111  [key=0, style=solid, color=red];
m4_110 -> m4_16  [key=2, style=dotted, color=red];
m4_110 -> m4_29  [key=2, style=dotted, color=red];
m4_110 -> m4_115  [key=1, style=dashed, color=red, label="lambda expression"];
m4_111 -> m4_112  [key=0, style=solid, color=red];
m4_111 -> m4_62  [key=2, style=dotted, color=red];
m4_111 -> m4_119  [key=1, style=dashed, color=red, label=server];
m4_111 -> m4_125  [key=0, style=solid, color=green];
m4_111 -> m4_34  [key=2, style=dotted, color=green];
m4_112 -> m4_113  [key=0, style=solid, color=red];
m4_112 -> m4_29  [key=2, style=dotted, color=red];
m4_112 -> m4_118  [key=1, style=dashed, color=red, label="lambda expression"];
m4_113 -> m4_114  [key=0, style=solid, color=green];
m4_113 -> m4_64  [key=2, style=dotted, color=red];
m4_113 -> m4_121  [key=1, style=dashed, color=red, label="lambda expression"];
m4_113 -> m4_117  [key=2, style=dotted, color=green];
m4_113 -> m4_115  [key=1, style=dashed, color=green, label=mock];
m4_114 -> m4_109  [key=0, style=bold, color=blue];
m4_114 -> m4_115  [key=0, style=solid, color=green];
m4_114 -> m4_118  [key=2, style=dotted, color=green];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_62  [key=2, style=dotted];
m4_93 -> m4_99  [key=0, style=solid, color=green];
m4_93 -> m4_95  [key=2, style=dotted, color=green];
m4_94 -> m4_95  [key=0, style=solid, color=red];
m4_94 -> m4_63  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid, color=red];
m4_95 -> m4_64  [key=2, style=dotted, color=red];
m4_95 -> m4_97  [key=1, style=dashed, color=red, label="lambda expression"];
m4_96 -> m4_92  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_9  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid, color=red];
m4_2 -> m4_10  [key=2, style=dotted];
m4_2 -> m4_5  [key=0, style=solid, color=green];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_3 -> m4_11  [key=2, style=dotted, color=red];
m4_4 -> m4_5  [key=0, style=solid, color=green];
m4_4 -> m4_12  [key=2, style=dotted, color=red];
m4_4 -> m4_11  [key=2, style=dotted, color=green];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_5 -> m4_13  [key=2, style=dotted];
m4_5 -> m4_4  [key=0, style=solid, color=green];
m4_5 -> m4_7  [key=0, style=solid, color=green];
m4_5 -> m4_12  [key=2, style=dotted, color=green];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_14  [key=2, style=dotted, color=red];
m4_6 -> m4_15  [key=2, style=dotted, color=red];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_16  [key=2, style=dotted];
m4_7 -> m4_17  [key=2, style=dotted];
m4_7 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_0  [key=0, style=bold, color=blue];
m4_77 -> m4_78  [key=0, style=solid, color=green];
m4_77 -> m4_24  [key=2, style=dotted];
m4_77 -> m4_23  [key=0, style=solid, color=green];
m4_78 -> m4_79  [key=0, style=solid, color=green];
m4_78 -> m4_86  [key=2, style=dotted, color=green];
m4_78 -> m4_83  [key=1, style=dashed, color=green, label=component1];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_79 -> m4_80  [key=0, style=solid, color=green];
m4_79 -> m4_16  [key=2, style=dotted, color=green];
m4_79 -> m4_87  [key=2, style=dotted, color=green];
m4_79 -> m4_88  [key=1, style=dashed, color=green, label="lambda expression"];
m4_79 -> m4_97  [key=1, style=dashed, color=green, label="lambda expression"];
m4_83 -> m4_84  [key=0, style=solid, color=red];
m4_83 -> m4_64  [key=2, style=dotted, color=green];
m4_83 -> m4_115  [key=1, style=dashed, color=green, label="lambda expression"];
m4_80 -> m4_81  [key=0, style=solid, color=green];
m4_80 -> m4_86  [key=2, style=dotted, color=green];
m4_80 -> m4_84  [key=1, style=dashed, color=green, label=component2];
m4_80 -> d52  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid, color=green];
m4_82 -> m4_63  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid, color=red];
m4_84 -> m4_64  [key=2, style=dotted, color=green];
m4_84 -> m4_105  [key=1, style=dashed, color=green, label="lambda expression"];
m4_84 -> m4_62  [key=2, style=dotted, color=red];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_62  [key=2, style=dotted];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_85 -> m4_77  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid, color=red];
m4_85 -> m4_63  [key=2, style=dotted, color=red];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid, color=red];
m4_51 -> m4_29  [key=2, style=dotted];
m4_51 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_52 -> m4_53  [key=0, style=solid, color=red];
m4_52 -> m4_30  [key=2, style=dotted, color=red];
m4_53 -> m4_50  [key=0, style=bold, color=blue];
m4_62 -> m4_124  [key=0, style=solid, color=red];
m4_62 -> m4_111  [key=0, style=solid, color=green];
m4_124 -> m4_125  [key=0, style=solid, color=red];
m4_124 -> m4_34  [key=2, style=dotted, color=red];
m4_125 -> m4_62  [key=0, style=bold, color=blue];
m4_86 -> m4_113  [key=0, style=solid, color=green];
m4_86 -> m4_87  [key=0, style=solid, color=red];
m4_86 -> m4_64  [key=2, style=dotted, color=red];
m4_86 -> m4_88  [key=1, style=dashed, color=red, label="lambda expression"];
m4_115 -> m4_116  [key=0, style=solid, color=red];
m4_115 -> m4_97  [key=0, style=solid, color=green];
m4_116 -> m4_86  [key=0, style=bold, color=blue];
m4_116 -> m4_117  [key=0, style=solid, color=red];
m4_116 -> d52  [key=2, style=dotted, color=red];
m4_118 -> m4_119  [key=0, style=solid, color=red];
m4_118 -> m4_106  [key=0, style=solid, color=green];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_120  [key=0, style=solid, color=green];
m4_100 -> m4_91  [key=2, style=dotted, color=green];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_62  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_63  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_64  [key=2, style=dotted];
m4_103 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_103 -> m4_118  [key=1, style=dashed, color=green, label="lambda expression"];
m4_104 -> m4_100  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid, color=red];
m4_35 -> m4_30  [key=0, style=solid, color=green];
m4_36 -> m4_37  [key=0, style=solid, color=red];
m4_36 -> m4_29  [key=2, style=dotted, color=red];
m4_36 -> m4_39  [key=1, style=dashed, color=red, label="lambda expression"];
m4_38 -> m4_35  [key=0, style=bold, color=blue];
m4_57 -> m4_58  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_62  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_63  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_64  [key=2, style=dotted];
m4_60 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_61 -> m4_57  [key=0, style=bold, color=blue];
m4_34 -> m4_41  [key=0, style=solid, color=green];
m4_34 -> m4_34  [key=2, style=dotted, color=green];
m4_117 -> m4_115  [key=0, style=bold, color=blue];
m4_121 -> m4_122  [key=0, style=solid, color=red];
m4_21 -> m4_22  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid, color=red];
m4_18 -> m4_26  [key=0, style=solid, color=green];
m4_19 -> m4_20  [key=0, style=solid, color=red];
m4_22 -> m4_23  [key=0, style=solid, color=red];
m4_22 -> m4_24  [key=2, style=dotted];
m4_22 -> m4_20  [key=0, style=solid, color=green];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_23 -> m4_76  [key=0, style=bold, color=green];
m4_31 -> m4_32  [key=0, style=solid, color=red];
m4_31 -> m4_34  [key=0, style=solid, color=green];
m4_32 -> m4_33  [key=0, style=solid, color=red];
m4_32 -> m4_34  [key=2, style=dotted, color=red];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_33 -> m4_18  [key=0, style=bold, color=green];
m4_39 -> m4_40  [key=0, style=solid, color=red];
m4_39 -> m4_41  [key=0, style=solid, color=green];
m4_40 -> m4_41  [key=0, style=solid, color=red];
m4_40 -> m4_34  [key=2, style=dotted, color=red];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_41 -> m4_31  [key=0, style=bold, color=green];
m4_41 -> m4_48  [key=0, style=solid, color=green];
m4_41 -> m4_43  [key=2, style=dotted, color=green];
m4_46 -> m4_47  [key=0, style=solid, color=green];
m4_46 -> m4_55  [key=0, style=solid, color=green];
m4_46 -> m4_30  [key=2, style=dotted, color=green];
m4_47 -> m4_48  [key=0, style=solid, color=red];
m4_47 -> m4_49  [key=2, style=dotted, color=red];
m4_47 -> m4_44  [key=0, style=bold, color=blue];
m4_48 -> m4_46  [key=0, style=bold, color=blue];
m4_48 -> m4_39  [key=0, style=bold, color=green];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_34  [key=2, style=dotted];
m4_56 -> m4_54  [key=0, style=bold, color=blue];
m4_56 -> m4_46  [key=0, style=bold, color=green];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_68  [key=2, style=dotted];
m4_67 -> m4_65  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid, color=green];
m4_89 -> m4_90  [key=0, style=solid, color=green];
m4_89 -> m4_91  [key=2, style=dotted, color=green];
m4_89 -> m4_29  [key=2, style=dotted, color=green];
m4_90 -> m4_88  [key=0, style=bold, color=blue];
m4_97 -> m4_98  [key=0, style=solid, color=red];
m4_97 -> m4_93  [key=0, style=solid, color=green];
m4_97 -> m4_117  [key=0, style=solid, color=green];
m4_97 -> m4_91  [key=2, style=dotted, color=green];
m4_98 -> m4_99  [key=0, style=solid, color=red];
m4_98 -> d52  [key=2, style=dotted, color=red];
m4_99 -> m4_97  [key=0, style=bold, color=blue];
m4_105 -> m4_106  [key=0, style=solid, color=red];
m4_105 -> m4_100  [key=0, style=solid, color=green];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_108  [key=2, style=dotted];
m4_107 -> m4_105  [key=0, style=bold, color=blue];
m4_107 -> m4_118  [key=0, style=bold, color=green];
m4_119 -> m4_120  [key=0, style=solid, color=red];
m4_119 -> m4_63  [key=2, style=dotted, color=red];
m4_120 -> m4_118  [key=0, style=bold, color=blue];
m4_120 -> m4_105  [key=0, style=bold, color=green];
m4_122 -> m4_123  [key=0, style=solid, color=red];
m4_122 -> m4_29  [key=2, style=dotted, color=red];
m4_122 -> m4_108  [key=2, style=dotted, color=red];
m4_123 -> m4_121  [key=0, style=bold, color=blue];
m4_87 -> m4_83  [key=0, style=bold, color=blue];
m4_126 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_19  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_6  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_26  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_32  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_36  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_40  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_43  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_47  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_84  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_85  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_86  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_95  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_110  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_111  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_112  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_119  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_113  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_124  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_20  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_30  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_34  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_37  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_41  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_78  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_83  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_80  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_97  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_100  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_114  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_126 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m4_127 -> m4_119  [key=1, style=dashed, color=red, label=server];
m5_21 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_21  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_0 -> m5_3  [key=1, style=dashed, color=red, label="Hangfire.Server.IServerComponent"];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_3  [key=0, style=solid, color=red];
m5_1 -> m5_4  [key=2, style=dotted, color=green];
m5_3 -> m5_4  [key=0, style=solid, color=red];
m5_3 -> m5_6  [key=2, style=dotted, color=red];
m5_3 -> m5_7  [key=1, style=dashed, color=red, label="lambda expression"];
m5_2 -> m5_4  [key=0, style=solid];
m5_2 -> d17  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_0  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_10 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_10 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_10 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_10 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_10 -> m5_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_20  [key=2, style=dotted];
m5_11 -> m5_21  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_20  [key=2, style=dotted];
m5_12 -> m5_22  [key=2, style=dotted];
m5_12 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=logger];
m5_12 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=logger];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_23  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=0, style=solid];
m5_14 -> m5_18  [key=0, style=solid];
m5_14 -> m5_24  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_25  [key=2, style=dotted];
m5_17 -> m5_26  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_23  [key=2, style=dotted];
m5_15 -> m5_18  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_19 -> m5_10  [key=0, style=bold, color=blue];
m5_30 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m5_31 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_10  [key=2, style=dotted];
m6_7 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=2, style=dotted];
m6_9 -> m6_6  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=2, style=dotted];
m6_36 -> m6_10  [key=2, style=dotted];
m6_36 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_21  [key=2, style=dotted];
m6_37 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=task];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_39 -> m6_35  [key=0, style=bold, color=blue];
m6_45 -> m6_46  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_12  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [key=2, style=dotted];
m6_33 -> m6_31  [key=0, style=bold, color=blue];
m6_42 -> m6_43  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_29  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_10  [key=2, style=dotted];
m6_43 -> m6_34  [key=2, style=dotted];
m6_44 -> m6_42  [key=0, style=bold, color=blue];
m6_47 -> m6_45  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_21  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=2, style=dotted];
m6_27 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_28 -> m6_24  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_17 -> m6_19  [key=1, style=dashed, color=red, label=task];
m6_18 -> m6_19  [key=0, style=solid, color=red];
m6_18 -> m6_22  [key=2, style=dotted];
m6_18 -> m6_23  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_22  [key=2, style=dotted, color=red];
m6_19 -> m6_23  [key=2, style=dotted, color=red];
m6_20 -> m6_16  [key=0, style=bold, color=blue];
m6_48 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_48 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerComponentExtensionsFacts"];
m6_49 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=task];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=red];
m8_0 -> m8_2  [key=1, style=dashed, color=red, label=object];
m8_0 -> m8_3  [key=1, style=dashed, color=red, label=long];
m8_0 -> m8_4  [key=1, style=dashed, color=red, label=long];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_2 -> m8_3  [key=0, style=solid, color=red];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> d59  [key=2, style=dotted];
m8_7 -> m8_18  [key=2, style=dotted];
m8_7 -> m8_19  [key=2, style=dotted];
m8_7 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_7 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=data];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_15  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_21  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=0, style=solid];
m8_10 -> m8_20  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=serializedResult];
m8_16 -> m8_6  [key=0, style=bold, color=blue];
m8_30 -> m8_1  [key=1, style=dashed, color=red, label="Hangfire.States.SucceededState"];
m8_30 -> m8_2  [key=1, style=dashed, color=red, label="Hangfire.States.SucceededState"];
m8_30 -> m8_3  [key=1, style=dashed, color=red, label="Hangfire.States.SucceededState"];
m8_30 -> m8_4  [key=1, style=dashed, color=red, label="Hangfire.States.SucceededState"];
m8_30 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m8_30 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m8_30 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m9_96 -> m9_97  [key=0, style=solid, color=red];
m9_97 -> m9_98  [key=0, style=solid, color=red];
m9_97 -> m9_81  [key=2, style=dotted, color=red];
m9_97 -> m9_102  [key=1, style=dashed, color=red, label=client];
m9_98 -> m9_99  [key=0, style=solid, color=red];
m9_98 -> m9_36  [key=2, style=dotted, color=red];
m9_98 -> m9_101  [key=1, style=dashed, color=red, label="lambda expression"];
m9_99 -> m9_100  [key=0, style=solid, color=red];
m9_99 -> m9_37  [key=2, style=dotted, color=red];
m9_100 -> m9_96  [key=0, style=bold, color=blue];
m9_56 -> m9_57  [key=0, style=solid, color=red];
m9_57 -> m9_58  [key=0, style=solid, color=red];
m9_57 -> m9_12  [key=2, style=dotted, color=red];
m9_58 -> m9_59  [key=0, style=solid, color=red];
m9_58 -> m9_60  [key=2, style=dotted, color=red];
m9_58 -> m9_61  [key=1, style=dashed, color=red, label="lambda expression"];
m9_59 -> m9_56  [key=0, style=bold, color=blue];
m9_136 -> m9_137  [key=0, style=solid, color=red];
m9_137 -> m9_138  [key=0, style=solid, color=red];
m9_137 -> m9_81  [key=2, style=dotted, color=red];
m9_137 -> m9_142  [key=1, style=dashed, color=red, label=client];
m9_138 -> m9_139  [key=0, style=solid, color=red];
m9_138 -> m9_36  [key=2, style=dotted, color=red];
m9_138 -> m9_141  [key=1, style=dashed, color=red, label="lambda expression"];
m9_139 -> m9_140  [key=0, style=solid, color=red];
m9_139 -> m9_37  [key=2, style=dotted, color=red];
m9_140 -> m9_136  [key=0, style=bold, color=blue];
m9_77 -> m9_78  [key=0, style=solid, color=red];
m9_78 -> m9_79  [key=0, style=solid, color=red];
m9_78 -> m9_81  [key=2, style=dotted, color=red];
m9_79 -> m9_80  [key=0, style=solid, color=red];
m9_79 -> m9_82  [key=2, style=dotted, color=red];
m9_79 -> m9_83  [key=1, style=dashed, color=red, label="lambda expression"];
m9_80 -> m9_77  [key=0, style=bold, color=blue];
m9_122 -> m9_123  [key=0, style=solid, color=red];
m9_123 -> m9_124  [key=0, style=solid, color=red];
m9_123 -> m9_81  [key=2, style=dotted, color=red];
m9_123 -> m9_125  [key=1, style=dashed, color=red, label=client];
m9_123 -> m9_134  [key=1, style=dashed, color=red, label=client];
m9_124 -> m9_125  [key=0, style=solid, color=red];
m9_124 -> m9_13  [key=2, style=dotted, color=red];
m9_124 -> m9_36  [key=2, style=dotted, color=red];
m9_124 -> m9_130  [key=1, style=dashed, color=red, label="lambda expression"];
m9_125 -> m9_126  [key=0, style=solid, color=red];
m9_125 -> m9_36  [key=2, style=dotted, color=red];
m9_125 -> m9_133  [key=1, style=dashed, color=red, label="lambda expression"];
m9_125 -> m9_127  [key=1, style=dashed, color=red, label=exception];
m9_126 -> m9_127  [key=0, style=solid, color=red];
m9_126 -> m9_129  [key=2, style=dotted, color=red];
m9_127 -> m9_128  [key=0, style=solid, color=red];
m9_127 -> m9_36  [key=2, style=dotted, color=red];
m9_128 -> m9_122  [key=0, style=bold, color=blue];
m9_145 -> m9_146  [key=0, style=solid];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_81  [key=2, style=dotted];
m9_146 -> m9_151  [key=1, style=dashed, color=darkseagreen4, label=client];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_36  [key=2, style=dotted];
m9_147 -> m9_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_37  [key=2, style=dotted];
m9_149 -> m9_145  [key=0, style=bold, color=blue];
m9_154 -> m9_155  [key=0, style=solid];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_81  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_144  [key=2, style=dotted];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_82  [key=2, style=dotted];
m9_157 -> m9_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_158 -> m9_154  [key=0, style=bold, color=blue];
m9_104 -> m9_105  [key=0, style=solid, color=red];
m9_105 -> m9_106  [key=0, style=solid, color=red];
m9_105 -> m9_81  [key=2, style=dotted, color=red];
m9_105 -> m9_110  [key=1, style=dashed, color=red, label=client];
m9_106 -> m9_107  [key=0, style=solid, color=red];
m9_106 -> m9_36  [key=2, style=dotted, color=red];
m9_106 -> m9_109  [key=1, style=dashed, color=red, label="lambda expression"];
m9_107 -> m9_108  [key=0, style=solid, color=red];
m9_107 -> m9_37  [key=2, style=dotted, color=red];
m9_108 -> m9_104  [key=0, style=bold, color=blue];
m9_163 -> m9_164  [key=0, style=solid];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_81  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_144  [key=2, style=dotted];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_82  [key=2, style=dotted];
m9_166 -> m9_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_167 -> m9_163  [key=0, style=bold, color=blue];
m9_171 -> m9_172  [key=0, style=solid];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_13  [key=2, style=dotted];
m9_172 -> m9_14  [key=2, style=dotted];
m9_172 -> m9_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_173 -> m9_174  [key=0, style=solid];
m9_173 -> m9_81  [key=2, style=dotted];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_144  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_177  [key=2, style=dotted];
m9_176 -> m9_171  [key=0, style=bold, color=blue];
m9_86 -> m9_87  [key=0, style=solid, color=red];
m9_87 -> m9_88  [key=0, style=solid, color=red];
m9_87 -> m9_81  [key=2, style=dotted, color=red];
m9_88 -> m9_89  [key=0, style=solid, color=red];
m9_88 -> m9_91  [key=2, style=dotted, color=red];
m9_89 -> m9_90  [key=0, style=solid, color=red];
m9_89 -> m9_82  [key=2, style=dotted, color=red];
m9_89 -> m9_92  [key=1, style=dashed, color=red, label="lambda expression"];
m9_90 -> m9_86  [key=0, style=bold, color=blue];
m9_65 -> m9_66  [key=0, style=solid, color=red];
m9_65 -> m9_78  [key=3, color=red, style=bold, label="Local variable System.Collections.Generic.Dictionary<string, string> job"];
m9_66 -> m9_67  [key=0, style=solid, color=red];
m9_66 -> m9_60  [key=2, style=dotted, color=red];
m9_66 -> m9_68  [key=1, style=dashed, color=red, label="lambda expression"];
m9_67 -> m9_65  [key=0, style=bold, color=blue];
m9_81 -> m9_182  [key=0, style=solid];
m9_182 -> m9_183  [key=0, style=solid];
m9_182 -> m9_41  [key=2, style=dotted];
m9_183 -> m9_81  [key=0, style=bold, color=blue];
m9_71 -> m9_72  [key=0, style=solid, color=red];
m9_72 -> m9_73  [key=0, style=solid, color=red];
m9_72 -> m9_60  [key=2, style=dotted, color=red];
m9_72 -> m9_74  [key=1, style=dashed, color=red, label="lambda expression"];
m9_73 -> m9_71  [key=0, style=bold, color=blue];
m9_178 -> m9_179  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid, color=red];
m9_24 -> m9_25  [key=0, style=solid, color=red];
m9_28 -> m9_29  [key=0, style=solid, color=red];
m9_21 -> m9_22  [key=0, style=solid, color=red];
m9_21 -> m9_23  [key=2, style=dotted, color=red];
m9_22 -> m9_20  [key=0, style=bold, color=blue];
m9_25 -> m9_26  [key=0, style=solid, color=red];
m9_25 -> m9_27  [key=2, style=dotted, color=red];
m9_26 -> m9_24  [key=0, style=bold, color=blue];
m9_29 -> m9_30  [key=0, style=solid, color=red];
m9_29 -> m9_31  [key=2, style=dotted, color=red];
m9_30 -> m9_28  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid, color=red];
m9_39 -> m9_40  [key=0, style=solid, color=red];
m9_39 -> m9_41  [key=2, style=dotted, color=red];
m9_40 -> m9_38  [key=0, style=bold, color=blue];
m9_46 -> m9_47  [key=0, style=solid, color=red];
m9_47 -> m9_48  [key=0, style=solid, color=red];
m9_47 -> m9_41  [key=2, style=dotted, color=red];
m9_48 -> m9_46  [key=0, style=bold, color=blue];
m9_53 -> m9_54  [key=0, style=solid, color=red];
m9_54 -> m9_55  [key=0, style=solid, color=red];
m9_54 -> m9_41  [key=2, style=dotted, color=red];
m9_55 -> m9_53  [key=0, style=bold, color=blue];
m9_61 -> m9_62  [key=0, style=solid, color=red];
m9_62 -> m9_63  [key=0, style=solid, color=red];
m9_62 -> m9_64  [key=2, style=dotted, color=red];
m9_63 -> m9_61  [key=0, style=bold, color=blue];
m9_68 -> m9_69  [key=0, style=solid, color=red];
m9_69 -> m9_70  [key=0, style=solid, color=red];
m9_69 -> m9_41  [key=2, style=dotted, color=red];
m9_70 -> m9_68  [key=0, style=bold, color=blue];
m9_74 -> m9_75  [key=0, style=solid, color=red];
m9_75 -> m9_76  [key=0, style=solid, color=red];
m9_75 -> m9_41  [key=2, style=dotted, color=red];
m9_76 -> m9_74  [key=0, style=bold, color=blue];
m9_83 -> m9_84  [key=0, style=solid, color=red];
m9_84 -> m9_85  [key=0, style=solid, color=red];
m9_84 -> m9_23  [key=2, style=dotted, color=red];
m9_85 -> m9_83  [key=0, style=bold, color=blue];
m9_92 -> m9_93  [key=0, style=solid, color=red];
m9_93 -> m9_94  [key=0, style=solid, color=red];
m9_93 -> d52  [key=2, style=dotted, color=red];
m9_94 -> m9_92  [key=0, style=bold, color=blue];
m9_102 -> m9_103  [key=0, style=solid, color=red];
m9_102 -> m9_27  [key=2, style=dotted, color=red];
m9_101 -> m9_102  [key=0, style=solid, color=red];
m9_103 -> m9_101  [key=0, style=bold, color=blue];
m9_110 -> m9_111  [key=0, style=solid, color=red];
m9_110 -> m9_112  [key=2, style=dotted, color=red];
m9_109 -> m9_110  [key=0, style=solid, color=red];
m9_111 -> m9_109  [key=0, style=bold, color=blue];
m9_118 -> m9_119  [key=0, style=solid, color=red];
m9_119 -> m9_120  [key=0, style=solid, color=red];
m9_119 -> m9_36  [key=2, style=dotted, color=red];
m9_119 -> m9_121  [key=2, style=dotted, color=red];
m9_120 -> m9_118  [key=0, style=bold, color=blue];
m9_134 -> m9_135  [key=0, style=solid, color=red];
m9_134 -> m9_27  [key=2, style=dotted, color=red];
m9_130 -> m9_131  [key=0, style=solid, color=red];
m9_133 -> m9_134  [key=0, style=solid, color=red];
m9_131 -> m9_132  [key=0, style=solid, color=red];
m9_131 -> m9_36  [key=2, style=dotted, color=red];
m9_131 -> m9_121  [key=2, style=dotted, color=red];
m9_132 -> m9_130  [key=0, style=bold, color=blue];
m9_135 -> m9_133  [key=0, style=bold, color=blue];
m9_142 -> m9_143  [key=0, style=solid, color=red];
m9_142 -> m9_144  [key=2, style=dotted, color=red];
m9_141 -> m9_142  [key=0, style=solid, color=red];
m9_143 -> m9_141  [key=0, style=bold, color=blue];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_153  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_152 -> m9_150  [key=0, style=bold, color=blue];
m9_159 -> m9_160  [key=0, style=solid];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_162  [key=2, style=dotted];
m9_161 -> m9_159  [key=0, style=bold, color=blue];
m9_168 -> m9_169  [key=0, style=solid];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_162  [key=2, style=dotted];
m9_170 -> m9_168  [key=0, style=bold, color=blue];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_162  [key=2, style=dotted];
m9_180 -> m9_178  [key=0, style=bold, color=blue];
m9_49 -> m9_50  [key=0, style=solid, color=red];
m9_50 -> m9_51  [key=0, style=solid, color=red];
m9_50 -> m9_36  [key=2, style=dotted, color=red];
m9_50 -> m9_53  [key=1, style=dashed, color=red, label="lambda expression"];
m9_51 -> m9_52  [key=0, style=solid, color=red];
m9_51 -> m9_37  [key=2, style=dotted, color=red];
m9_52 -> m9_49  [key=0, style=bold, color=blue];
m9_31 -> m9_181  [key=0, style=solid];
m9_181 -> m9_31  [key=0, style=bold, color=blue];
m9_32 -> m9_33  [key=0, style=solid, color=red];
m9_33 -> m9_34  [key=0, style=solid, color=red];
m9_33 -> m9_36  [key=2, style=dotted, color=red];
m9_33 -> m9_38  [key=1, style=dashed, color=red, label="lambda expression"];
m9_34 -> m9_35  [key=0, style=solid, color=red];
m9_34 -> m9_37  [key=2, style=dotted, color=red];
m9_35 -> m9_32  [key=0, style=bold, color=blue];
m9_42 -> m9_43  [key=0, style=solid, color=red];
m9_43 -> m9_44  [key=0, style=solid, color=red];
m9_43 -> m9_36  [key=2, style=dotted, color=red];
m9_43 -> m9_46  [key=1, style=dashed, color=red, label="lambda expression"];
m9_44 -> m9_45  [key=0, style=solid, color=red];
m9_44 -> m9_37  [key=2, style=dotted, color=red];
m9_45 -> m9_42  [key=0, style=bold, color=blue];
m9_113 -> m9_114  [key=0, style=solid, color=red];
m9_114 -> m9_115  [key=0, style=solid, color=red];
m9_114 -> m9_81  [key=2, style=dotted, color=red];
m9_115 -> m9_116  [key=0, style=solid, color=red];
m9_115 -> m9_27  [key=2, style=dotted, color=red];
m9_116 -> m9_117  [key=0, style=solid, color=red];
m9_116 -> m9_82  [key=2, style=dotted, color=red];
m9_116 -> m9_118  [key=1, style=dashed, color=red, label="lambda expression"];
m9_117 -> m9_113  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid, color=red];
m9_1 -> m9_2  [key=0, style=solid, color=red];
m9_1 -> m9_11  [key=2, style=dotted, color=red];
m9_2 -> m9_3  [key=0, style=solid, color=red];
m9_2 -> m9_12  [key=2, style=dotted, color=red];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_3 -> m9_13  [key=2, style=dotted, color=red];
m9_3 -> m9_14  [key=2, style=dotted, color=red];
m9_3 -> m9_20  [key=1, style=dashed, color=red, label="lambda expression"];
m9_4 -> m9_5  [key=0, style=solid, color=red];
m9_4 -> m9_15  [key=2, style=dotted, color=red];
m9_5 -> m9_6  [key=0, style=solid, color=red];
m9_5 -> m9_16  [key=2, style=dotted, color=red];
m9_6 -> m9_7  [key=0, style=solid, color=red];
m9_6 -> m9_13  [key=2, style=dotted, color=red];
m9_6 -> m9_14  [key=2, style=dotted, color=red];
m9_6 -> m9_24  [key=1, style=dashed, color=red, label="lambda expression"];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_7 -> m9_17  [key=2, style=dotted, color=red];
m9_8 -> m9_9  [key=0, style=solid, color=red];
m9_8 -> m9_18  [key=2, style=dotted, color=red];
m9_9 -> m9_10  [key=0, style=solid, color=red];
m9_9 -> m9_19  [key=2, style=dotted, color=red];
m9_9 -> m9_28  [key=1, style=dashed, color=red, label="lambda expression"];
m9_10 -> m9_0  [key=0, style=bold, color=blue];
m9_184 -> m9_1  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_2  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_3  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_4  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_5  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_6  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_25  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_7  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_8  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_9  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_33  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_39  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_43  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_47  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_50  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_54  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_66  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_69  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_72  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_75  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_78  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_79  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_87  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_89  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_97  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_98  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_102  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_105  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_106  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_110  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_114  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_115  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_116  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_123  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_124  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_125  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_134  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_137  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_138  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_142  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_179  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_184 -> m9_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m9_185 -> m9_102  [key=1, style=dashed, color=red, label=client];
m9_186 -> m9_110  [key=1, style=dashed, color=red, label=client];
m9_187 -> m9_134  [key=1, style=dashed, color=red, label=client];
m9_188 -> m9_142  [key=1, style=dashed, color=red, label=client];
m9_189 -> m9_151  [key=1, style=dashed, color=darkseagreen4, label=client];
m10_97 -> m10_252  [key=0, style=solid];
m10_252 -> m10_253  [key=0, style=solid];
m10_252 -> m10_250  [key=2, style=dotted];
m10_252 -> m10_251  [key=2, style=dotted];
m10_253 -> m10_97  [key=0, style=bold, color=blue];
m10_101 -> m10_102  [key=0, style=solid, color=red];
m10_101 -> m10_104  [key=1, style=dashed, color=red, label=string];
m10_101 -> m10_107  [key=1, style=dashed, color=red, label=string];
m10_102 -> m10_103  [key=0, style=solid, color=red];
m10_102 -> m10_104  [key=1, style=dashed, color=red, label=query];
m10_102 -> m10_107  [key=1, style=dashed, color=red, label=query];
m10_104 -> m10_105  [key=0, style=solid, color=red];
m10_104 -> m10_27  [key=2, style=dotted, color=red];
m10_104 -> m10_106  [key=1, style=dashed, color=red, label="lambda expression"];
m10_103 -> m10_104  [key=0, style=solid, color=red];
m10_103 -> m10_97  [key=2, style=dotted, color=red];
m10_105 -> m10_101  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid, color=red];
m10_7 -> m10_8  [key=0, style=solid, color=red];
m10_7 -> m10_9  [key=2, style=dotted, color=red];
m10_7 -> m10_10  [key=1, style=dashed, color=red, label="lambda expression"];
m10_7 -> m10_7  [key=3, color=red, style=bold, label="method methodReturn System.Collections.Generic.IDictionary<string, string> SerializeProperties"];
m10_8 -> m10_6  [key=0, style=bold, color=blue];
m10_65 -> m10_66  [key=0, style=solid, color=red];
m10_65 -> m10_69  [key=1, style=dashed, color=red, label=string];
m10_66 -> m10_67  [key=0, style=solid, color=red];
m10_66 -> m10_27  [key=2, style=dotted, color=red];
m10_66 -> m10_68  [key=1, style=dashed, color=red, label="lambda expression"];
m10_67 -> m10_65  [key=0, style=bold, color=blue];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_225 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_226 -> m10_227  [key=0, style=solid];
m10_226 -> m10_228  [key=0, style=solid];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_27  [key=2, style=dotted];
m10_230 -> m10_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_227 -> m10_231  [key=0, style=solid];
m10_227 -> d17  [key=2, style=dotted];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_228 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_229 -> m10_230  [key=0, style=solid];
m10_229 -> m10_97  [key=2, style=dotted];
m10_231 -> m10_225  [key=0, style=bold, color=blue];
m10_77 -> m10_78  [key=0, style=solid, color=red];
m10_77 -> m10_81  [key=1, style=dashed, color=red, label=string];
m10_78 -> m10_79  [key=0, style=solid, color=red];
m10_78 -> m10_27  [key=2, style=dotted, color=red];
m10_78 -> m10_80  [key=1, style=dashed, color=red, label="lambda expression"];
m10_79 -> m10_77  [key=0, style=bold, color=blue];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_235 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_238  [key=0, style=solid];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_27  [key=2, style=dotted];
m10_240 -> m10_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_237 -> m10_241  [key=0, style=solid];
m10_237 -> d17  [key=2, style=dotted];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_238 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_113  [key=2, style=dotted];
m10_241 -> m10_235  [key=0, style=bold, color=blue];
m10_195 -> m10_196  [key=0, style=solid];
m10_195 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_195 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_198  [key=0, style=solid];
m10_200 -> m10_201  [key=0, style=solid];
m10_200 -> m10_27  [key=2, style=dotted];
m10_200 -> m10_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_197 -> m10_201  [key=0, style=solid];
m10_197 -> d17  [key=2, style=dotted];
m10_198 -> m10_199  [key=0, style=solid];
m10_198 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_198 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_97  [key=2, style=dotted];
m10_201 -> m10_195  [key=0, style=bold, color=blue];
m10_251 -> m10_256  [key=0, style=solid];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_258  [key=2, style=dotted];
m10_257 -> m10_251  [key=0, style=bold, color=blue];
m10_141 -> m10_254  [key=0, style=solid];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_250  [key=2, style=dotted];
m10_254 -> m10_251  [key=2, style=dotted];
m10_255 -> m10_141  [key=0, style=bold, color=blue];
m10_38 -> m10_39  [key=0, style=solid, color=red];
m10_38 -> m10_40  [key=1, style=dashed, color=red, label=string];
m10_38 -> m10_43  [key=1, style=dashed, color=red, label=string];
m10_39 -> m10_40  [key=0, style=solid, color=red];
m10_39 -> m10_43  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m10_40 -> m10_41  [key=0, style=solid, color=red];
m10_40 -> m10_27  [key=2, style=dotted, color=red];
m10_40 -> m10_42  [key=1, style=dashed, color=red, label="lambda expression"];
m10_41 -> m10_38  [key=0, style=bold, color=blue];
m10_205 -> m10_206  [key=0, style=solid];
m10_205 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_205 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_206 -> m10_207  [key=0, style=solid];
m10_206 -> m10_208  [key=0, style=solid];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_27  [key=2, style=dotted];
m10_210 -> m10_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_207 -> m10_211  [key=0, style=solid];
m10_207 -> d17  [key=2, style=dotted];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_208 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_113  [key=2, style=dotted];
m10_211 -> m10_205  [key=0, style=bold, color=blue];
m10_47 -> m10_48  [key=0, style=solid, color=red];
m10_47 -> m10_49  [key=1, style=dashed, color=red, label=string];
m10_47 -> m10_52  [key=1, style=dashed, color=red, label=string];
m10_48 -> m10_49  [key=0, style=solid, color=red];
m10_48 -> m10_52  [key=1, style=dashed, color=red, label=addStateSql];
m10_49 -> m10_50  [key=0, style=solid, color=red];
m10_49 -> m10_27  [key=2, style=dotted, color=red];
m10_49 -> m10_51  [key=1, style=dashed, color=red, label="lambda expression"];
m10_50 -> m10_47  [key=0, style=bold, color=blue];
m10_83 -> m10_84  [key=0, style=solid, color=red];
m10_83 -> m10_87  [key=1, style=dashed, color=red, label=string];
m10_84 -> m10_85  [key=0, style=solid, color=red];
m10_84 -> m10_27  [key=2, style=dotted, color=red];
m10_84 -> m10_86  [key=1, style=dashed, color=red, label="lambda expression"];
m10_85 -> m10_83  [key=0, style=bold, color=blue];
m10_175 -> m10_176  [key=0, style=solid];
m10_175 -> m10_180  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_175 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_178  [key=0, style=solid];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_27  [key=2, style=dotted];
m10_180 -> m10_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_177 -> m10_181  [key=0, style=solid];
m10_177 -> d17  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_180  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_178 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_97  [key=2, style=dotted];
m10_181 -> m10_175  [key=0, style=bold, color=blue];
m10_89 -> m10_90  [key=0, style=solid, color=red];
m10_90 -> m10_91  [key=0, style=solid, color=red];
m10_90 -> m10_92  [key=2, style=dotted, color=red];
m10_91 -> m10_89  [key=0, style=bold, color=blue];
m10_27 -> m10_245  [key=0, style=solid];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_247  [key=2, style=dotted];
m10_246 -> m10_27  [key=0, style=bold, color=blue];
m10_54 -> m10_55  [key=0, style=solid, color=red];
m10_54 -> m10_57  [key=1, style=dashed, color=red, label=string];
m10_54 -> m10_62  [key=1, style=dashed, color=red, label=string];
m10_55 -> m10_56  [key=0, style=solid, color=red];
m10_55 -> m10_59  [key=2, style=dotted, color=red];
m10_57 -> m10_58  [key=0, style=solid, color=red];
m10_57 -> m10_27  [key=2, style=dotted, color=red];
m10_57 -> m10_61  [key=1, style=dashed, color=red, label="lambda expression"];
m10_56 -> m10_57  [key=0, style=solid, color=red];
m10_56 -> m10_60  [key=2, style=dotted, color=red];
m10_56 -> m10_62  [key=1, style=dashed, color=red, label=persistentQueue];
m10_58 -> m10_54  [key=0, style=bold, color=blue];
m10_71 -> m10_72  [key=0, style=solid, color=red];
m10_71 -> m10_75  [key=1, style=dashed, color=red, label=string];
m10_72 -> m10_73  [key=0, style=solid, color=red];
m10_72 -> m10_27  [key=2, style=dotted, color=red];
m10_72 -> m10_74  [key=1, style=dashed, color=red, label="lambda expression"];
m10_73 -> m10_71  [key=0, style=bold, color=blue];
m10_92 -> m10_93  [key=0, style=solid, color=red];
m10_92 -> m10_95  [key=1, style=dashed, color=red, label=string];
m10_92 -> m10_99  [key=1, style=dashed, color=red, label=string];
m10_93 -> m10_94  [key=0, style=solid, color=red];
m10_93 -> m10_95  [key=1, style=dashed, color=red, label=addSql];
m10_93 -> m10_99  [key=1, style=dashed, color=red, label=addSql];
m10_95 -> m10_96  [key=0, style=solid, color=red];
m10_95 -> m10_27  [key=2, style=dotted, color=red];
m10_95 -> m10_98  [key=1, style=dashed, color=red, label="lambda expression"];
m10_94 -> m10_95  [key=0, style=solid, color=red];
m10_94 -> m10_97  [key=2, style=dotted, color=red];
m10_96 -> m10_92  [key=0, style=bold, color=blue];
m10_132 -> m10_133  [key=0, style=solid, color=red];
m10_132 -> m10_135  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m10_132 -> m10_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_132 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_132 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_133 -> m10_134  [key=0, style=solid, color=red];
m10_133 -> m10_135  [key=0, style=solid, color=red];
m10_135 -> m10_136  [key=0, style=solid, color=red];
m10_135 -> m10_137  [key=0, style=solid, color=red];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_142  [key=2, style=dotted];
m10_139 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_134 -> m10_140  [key=0, style=solid, color=red];
m10_134 -> d17  [key=2, style=dotted, color=red];
m10_136 -> m10_140  [key=0, style=solid, color=red];
m10_136 -> d17  [key=2, style=dotted, color=red];
m10_137 -> m10_138  [key=0, style=solid, color=red];
m10_137 -> m10_139  [key=1, style=dashed, color=red, label=sql];
m10_137 -> m10_144  [key=1, style=dashed, color=red, label=sql];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_141  [key=2, style=dotted];
m10_140 -> m10_132  [key=0, style=bold, color=blue];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_149 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_152  [key=0, style=solid];
m10_154 -> m10_155  [key=0, style=solid];
m10_154 -> m10_27  [key=2, style=dotted];
m10_154 -> m10_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_151 -> m10_155  [key=0, style=solid];
m10_151 -> d17  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_152 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_141  [key=2, style=dotted];
m10_155 -> m10_149  [key=0, style=bold, color=blue];
m10_32 -> m10_33  [key=0, style=solid, color=red];
m10_32 -> m10_36  [key=1, style=dashed, color=red, label=string];
m10_33 -> m10_34  [key=0, style=solid, color=red];
m10_33 -> m10_27  [key=2, style=dotted, color=red];
m10_33 -> m10_35  [key=1, style=dashed, color=red, label="lambda expression"];
m10_34 -> m10_32  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=red];
m10_0 -> m10_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorage"];
m10_1 -> m10_2  [key=0, style=solid, color=red];
m10_1 -> m10_3  [key=0, style=solid, color=red];
m10_3 -> m10_4  [key=0, style=solid, color=red];
m10_2 -> m10_4  [key=0, style=solid, color=red];
m10_2 -> d17  [key=2, style=dotted, color=red];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_185 -> m10_186  [key=0, style=solid];
m10_185 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_185 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_188  [key=0, style=solid];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_27  [key=2, style=dotted];
m10_190 -> m10_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_187 -> m10_191  [key=0, style=solid];
m10_187 -> d17  [key=2, style=dotted];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_188 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_141  [key=2, style=dotted];
m10_191 -> m10_185  [key=0, style=bold, color=blue];
m10_24 -> m10_25  [key=0, style=solid, color=red];
m10_24 -> m10_29  [key=1, style=dashed, color=red, label=string];
m10_25 -> m10_26  [key=0, style=solid, color=red];
m10_25 -> m10_27  [key=2, style=dotted, color=red];
m10_25 -> m10_28  [key=1, style=dashed, color=red, label="lambda expression"];
m10_26 -> m10_24  [key=0, style=bold, color=blue];
m10_242 -> m10_243  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid, color=red];
m10_10 -> m10_13  [key=1, style=dashed, color=red, label=SqlConnection];
m10_10 -> m10_15  [key=1, style=dashed, color=red, label=SqlConnection];
m10_11 -> m10_12  [key=0, style=solid, color=red];
m10_11 -> m10_17  [key=2, style=dotted, color=red];
m10_13 -> m10_14  [key=0, style=solid, color=red];
m10_13 -> m10_18  [key=2, style=dotted, color=red];
m10_13 -> m10_19  [key=2, style=dotted, color=red];
m10_13 -> m10_21  [key=1, style=dashed, color=red, label="lambda expression"];
m10_15 -> m10_14  [key=0, style=solid, color=red];
m10_15 -> m10_20  [key=2, style=dotted, color=red];
m10_12 -> m10_13  [key=0, style=solid, color=red];
m10_12 -> m10_14  [key=0, style=solid, color=red];
m10_14 -> m10_15  [key=0, style=solid, color=red];
m10_14 -> m10_16  [key=0, style=solid, color=red];
m10_21 -> m10_22  [key=0, style=solid, color=red];
m10_16 -> m10_10  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid, color=red];
m10_23 -> m10_21  [key=0, style=bold, color=blue];
m10_29 -> m10_30  [key=0, style=solid, color=red];
m10_29 -> m10_31  [key=2, style=dotted, color=red];
m10_29 -> m10_19  [key=2, style=dotted, color=red];
m10_28 -> m10_29  [key=0, style=solid, color=red];
m10_30 -> m10_28  [key=0, style=bold, color=blue];
m10_36 -> m10_37  [key=0, style=solid, color=red];
m10_36 -> m10_19  [key=2, style=dotted, color=red];
m10_35 -> m10_36  [key=0, style=solid, color=red];
m10_37 -> m10_35  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid, color=red];
m10_43 -> m10_45  [key=2, style=dotted, color=red];
m10_43 -> m10_46  [key=2, style=dotted, color=red];
m10_43 -> m10_19  [key=2, style=dotted, color=red];
m10_42 -> m10_43  [key=0, style=solid, color=red];
m10_44 -> m10_42  [key=0, style=bold, color=blue];
m10_52 -> m10_53  [key=0, style=solid, color=red];
m10_52 -> m10_45  [key=2, style=dotted, color=red];
m10_52 -> m10_46  [key=2, style=dotted, color=red];
m10_52 -> m10_19  [key=2, style=dotted, color=red];
m10_51 -> m10_52  [key=0, style=solid, color=red];
m10_53 -> m10_51  [key=0, style=bold, color=blue];
m10_62 -> m10_63  [key=0, style=solid, color=red];
m10_62 -> m10_64  [key=2, style=dotted, color=red];
m10_61 -> m10_62  [key=0, style=solid, color=red];
m10_63 -> m10_61  [key=0, style=bold, color=blue];
m10_69 -> m10_70  [key=0, style=solid, color=red];
m10_69 -> m10_19  [key=2, style=dotted, color=red];
m10_68 -> m10_69  [key=0, style=solid, color=red];
m10_70 -> m10_68  [key=0, style=bold, color=blue];
m10_75 -> m10_76  [key=0, style=solid, color=red];
m10_75 -> m10_31  [key=2, style=dotted, color=red];
m10_75 -> m10_19  [key=2, style=dotted, color=red];
m10_74 -> m10_75  [key=0, style=solid, color=red];
m10_76 -> m10_74  [key=0, style=bold, color=blue];
m10_81 -> m10_82  [key=0, style=solid, color=red];
m10_81 -> m10_19  [key=2, style=dotted, color=red];
m10_80 -> m10_81  [key=0, style=solid, color=red];
m10_82 -> m10_80  [key=0, style=bold, color=blue];
m10_87 -> m10_88  [key=0, style=solid, color=red];
m10_87 -> m10_31  [key=2, style=dotted, color=red];
m10_87 -> m10_19  [key=2, style=dotted, color=red];
m10_86 -> m10_87  [key=0, style=solid, color=red];
m10_88 -> m10_86  [key=0, style=bold, color=blue];
m10_99 -> m10_100  [key=0, style=solid, color=red];
m10_99 -> m10_19  [key=2, style=dotted, color=red];
m10_98 -> m10_99  [key=0, style=solid, color=red];
m10_100 -> m10_98  [key=0, style=bold, color=blue];
m10_107 -> m10_108  [key=0, style=solid, color=red];
m10_107 -> m10_19  [key=2, style=dotted, color=red];
m10_106 -> m10_107  [key=0, style=solid, color=red];
m10_108 -> m10_106  [key=0, style=bold, color=blue];
m10_115 -> m10_116  [key=0, style=solid, color=red];
m10_115 -> m10_19  [key=2, style=dotted, color=red];
m10_114 -> m10_115  [key=0, style=solid, color=red];
m10_116 -> m10_114  [key=0, style=bold, color=blue];
m10_122 -> m10_123  [key=0, style=solid, color=red];
m10_122 -> m10_19  [key=2, style=dotted, color=red];
m10_121 -> m10_122  [key=0, style=solid, color=red];
m10_123 -> m10_121  [key=0, style=bold, color=blue];
m10_130 -> m10_131  [key=0, style=solid, color=red];
m10_130 -> m10_19  [key=2, style=dotted, color=red];
m10_129 -> m10_130  [key=0, style=solid, color=red];
m10_131 -> m10_129  [key=0, style=bold, color=blue];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_18  [key=2, style=dotted];
m10_144 -> m10_19  [key=2, style=dotted];
m10_144 -> m10_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m10_143 -> m10_144  [key=0, style=solid];
m10_145 -> m10_143  [key=0, style=bold, color=blue];
m10_146 -> m10_147  [key=0, style=solid];
m10_148 -> m10_146  [key=0, style=bold, color=blue];
m10_157 -> m10_158  [key=0, style=solid];
m10_157 -> m10_19  [key=2, style=dotted];
m10_156 -> m10_157  [key=0, style=solid];
m10_158 -> m10_156  [key=0, style=bold, color=blue];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_18  [key=2, style=dotted];
m10_169 -> m10_171  [key=2, style=dotted];
m10_169 -> m10_19  [key=2, style=dotted];
m10_169 -> m10_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_173 -> m10_174  [key=0, style=solid];
m10_168 -> m10_169  [key=0, style=solid];
m10_170 -> m10_168  [key=0, style=bold, color=blue];
m10_172 -> m10_173  [key=0, style=solid];
m10_174 -> m10_172  [key=0, style=bold, color=blue];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_19  [key=2, style=dotted];
m10_182 -> m10_183  [key=0, style=solid];
m10_184 -> m10_182  [key=0, style=bold, color=blue];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_31  [key=2, style=dotted];
m10_193 -> m10_19  [key=2, style=dotted];
m10_192 -> m10_193  [key=0, style=solid];
m10_194 -> m10_192  [key=0, style=bold, color=blue];
m10_203 -> m10_204  [key=0, style=solid];
m10_203 -> m10_31  [key=2, style=dotted];
m10_203 -> m10_19  [key=2, style=dotted];
m10_202 -> m10_203  [key=0, style=solid];
m10_204 -> m10_202  [key=0, style=bold, color=blue];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_31  [key=2, style=dotted];
m10_213 -> m10_19  [key=2, style=dotted];
m10_212 -> m10_213  [key=0, style=solid];
m10_214 -> m10_212  [key=0, style=bold, color=blue];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_19  [key=2, style=dotted];
m10_222 -> m10_223  [key=0, style=solid];
m10_224 -> m10_222  [key=0, style=bold, color=blue];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_19  [key=2, style=dotted];
m10_232 -> m10_233  [key=0, style=solid];
m10_234 -> m10_232  [key=0, style=bold, color=blue];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_19  [key=2, style=dotted];
m10_244 -> m10_242  [key=0, style=bold, color=blue];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_162  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m10_159 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_159 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_159 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_162  [key=0, style=solid];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_164  [key=0, style=solid];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_142  [key=2, style=dotted];
m10_166 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_161 -> m10_167  [key=0, style=solid];
m10_161 -> d17  [key=2, style=dotted];
m10_163 -> m10_167  [key=0, style=solid];
m10_163 -> d17  [key=2, style=dotted];
m10_164 -> m10_165  [key=0, style=solid];
m10_164 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_164 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_97  [key=2, style=dotted];
m10_167 -> m10_159  [key=0, style=bold, color=blue];
m10_117 -> m10_118  [key=0, style=solid, color=red];
m10_117 -> m10_119  [key=1, style=dashed, color=red, label=string];
m10_117 -> m10_122  [key=1, style=dashed, color=red, label=string];
m10_118 -> m10_119  [key=0, style=solid, color=red];
m10_118 -> m10_113  [key=2, style=dotted, color=red];
m10_119 -> m10_120  [key=0, style=solid, color=red];
m10_119 -> m10_27  [key=2, style=dotted, color=red];
m10_119 -> m10_121  [key=1, style=dashed, color=red, label="lambda expression"];
m10_120 -> m10_117  [key=0, style=bold, color=blue];
m10_113 -> m10_248  [key=0, style=solid];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_250  [key=2, style=dotted];
m10_248 -> m10_251  [key=2, style=dotted];
m10_249 -> m10_113  [key=0, style=bold, color=blue];
m10_215 -> m10_216  [key=0, style=solid];
m10_215 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_215 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_216 -> m10_217  [key=0, style=solid];
m10_216 -> m10_218  [key=0, style=solid];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_27  [key=2, style=dotted];
m10_220 -> m10_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_217 -> m10_221  [key=0, style=solid];
m10_217 -> d17  [key=2, style=dotted];
m10_218 -> m10_219  [key=0, style=solid];
m10_218 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_218 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_219 -> m10_220  [key=0, style=solid];
m10_219 -> m10_141  [key=2, style=dotted];
m10_221 -> m10_215  [key=0, style=bold, color=blue];
m10_109 -> m10_110  [key=0, style=solid, color=red];
m10_109 -> m10_111  [key=1, style=dashed, color=red, label=string];
m10_109 -> m10_115  [key=1, style=dashed, color=red, label=string];
m10_110 -> m10_111  [key=0, style=solid, color=red];
m10_110 -> m10_113  [key=2, style=dotted, color=red];
m10_111 -> m10_112  [key=0, style=solid, color=red];
m10_111 -> m10_27  [key=2, style=dotted, color=red];
m10_111 -> m10_114  [key=1, style=dashed, color=red, label="lambda expression"];
m10_112 -> m10_109  [key=0, style=bold, color=blue];
m10_124 -> m10_125  [key=0, style=solid, color=red];
m10_124 -> m10_127  [key=1, style=dashed, color=red, label=string];
m10_124 -> m10_130  [key=1, style=dashed, color=red, label=string];
m10_125 -> m10_126  [key=0, style=solid, color=red];
m10_125 -> m10_127  [key=1, style=dashed, color=red, label=trimSql];
m10_125 -> m10_130  [key=1, style=dashed, color=red, label=trimSql];
m10_127 -> m10_128  [key=0, style=solid, color=red];
m10_127 -> m10_27  [key=2, style=dotted, color=red];
m10_127 -> m10_129  [key=1, style=dashed, color=red, label="lambda expression"];
m10_126 -> m10_127  [key=0, style=solid, color=red];
m10_126 -> m10_113  [key=2, style=dotted, color=red];
m10_128 -> m10_124  [key=0, style=bold, color=blue];
m10_259 -> m10_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_7  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_12  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_13  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_14  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_25  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_33  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_40  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_49  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_55  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_57  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_66  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_72  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_78  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_84  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_90  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_94  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_95  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_103  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_104  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_110  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_111  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_118  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_119  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_126  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_127  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_219  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_229  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_254  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_259 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m10_260 -> m10_29  [key=1, style=dashed, color=red, label=string];
m10_261 -> m10_29  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m10_262 -> m10_36  [key=1, style=dashed, color=red, label=string];
m10_263 -> m10_43  [key=1, style=dashed, color=red, label=string];
m10_264 -> m10_43  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m10_265 -> m10_43  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m10_266 -> m10_52  [key=1, style=dashed, color=red, label=string];
m10_267 -> m10_52  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m10_268 -> m10_52  [key=1, style=dashed, color=red, label=addStateSql];
m10_269 -> m10_62  [key=1, style=dashed, color=red, label=string];
m10_270 -> m10_62  [key=1, style=dashed, color=red, label=string];
m10_271 -> m10_62  [key=1, style=dashed, color=red, label=persistentQueue];
m10_272 -> m10_69  [key=1, style=dashed, color=red, label=string];
m10_273 -> m10_75  [key=1, style=dashed, color=red, label=string];
m10_274 -> m10_75  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m10_275 -> m10_81  [key=1, style=dashed, color=red, label=string];
m10_276 -> m10_87  [key=1, style=dashed, color=red, label=string];
m10_277 -> m10_87  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m10_278 -> m10_99  [key=1, style=dashed, color=red, label=string];
m10_279 -> m10_99  [key=1, style=dashed, color=red, label=string];
m10_280 -> m10_99  [key=1, style=dashed, color=red, label=double];
m10_281 -> m10_99  [key=1, style=dashed, color=red, label=addSql];
m10_282 -> m10_107  [key=1, style=dashed, color=red, label=string];
m10_283 -> m10_107  [key=1, style=dashed, color=red, label=string];
m10_284 -> m10_107  [key=1, style=dashed, color=red, label=query];
m10_285 -> m10_115  [key=1, style=dashed, color=red, label=string];
m10_286 -> m10_115  [key=1, style=dashed, color=red, label=string];
m10_287 -> m10_122  [key=1, style=dashed, color=red, label=string];
m10_288 -> m10_122  [key=1, style=dashed, color=red, label=string];
m10_289 -> m10_130  [key=1, style=dashed, color=red, label=string];
m10_290 -> m10_130  [key=1, style=dashed, color=red, label=int];
m10_291 -> m10_130  [key=1, style=dashed, color=red, label=int];
m10_292 -> m10_130  [key=1, style=dashed, color=red, label=trimSql];
m10_293 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_293 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_294 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m10_295 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label=sql];
m10_296 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_297 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_298 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_298 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_299 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m10_300 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_301 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_302 -> m10_183  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_303 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_304 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_305 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_306 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_307 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_308 -> m10_203  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_309 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_310 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m10_311 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_312 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_313 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_314 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_315 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label=query];
m10_316 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_317 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_1 -> m11_3  [key=2, style=dotted, color=red];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_4 -> m11_1  [key=1, style=dashed, color=red, label="Hangfire.Server.ServerSupervisorOptions"];
}
