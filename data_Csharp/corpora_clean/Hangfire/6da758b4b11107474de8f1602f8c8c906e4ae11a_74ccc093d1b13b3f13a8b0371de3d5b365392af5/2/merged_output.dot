digraph  {
n144 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
n145 [label=string, span=""];
n146 [label="System.TimeSpan", span=""];
n147 [label=string, span=""];
n148 [label=string, span=""];
n149 [label=string, span=""];
n150 [label="System.Collections.Generic.IDictionary<string, string>", span=""];
n151 [label=string, span=""];
n152 [label="System.Collections.Generic.IDictionary<string, string>", span=""];
n153 [label=string, span=""];
n154 [label=string, span=""];
n155 [label=enqueueJobSql, span=""];
n156 [label=string, span=""];
n157 [label=string, span=""];
n158 [label="System.TimeSpan", span=""];
n159 [label=string, span=""];
n160 [label=string, span=""];
n161 [label="System.TimeSpan", span=""];
n162 [label=string, span=""];
n163 [label=string, span=""];
n164 [label=double, span=""];
n165 [label=addSql, span=""];
n166 [label=string, span=""];
n167 [label=string, span=""];
n168 [label=string, span=""];
n169 [label=string, span=""];
n170 [label=string, span=""];
n171 [label=string, span=""];
n172 [label=int, span=""];
n173 [label=int, span=""];
n174 [label=trimSql, span=""];
n175 [label=string, span=""];
n176 [label=updateSql, span=""];
n177 [label=insertSql, span=""];
n178 [label=string, span=""];
n179 [label=updateSql, span=""];
n180 [label=insertSql, span=""];
n181 [label=string, span=""];
n182 [label="System.TimeSpan", span=""];
n0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
n1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="connection == null", span="19-19"];
n3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="_connection = connection", span="21-21"];
n2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="throw new ArgumentNullException(''connection'');", span="19-19"];
n4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
n5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="24-24"];
n7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="24-24"];
n8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="28-28"];
n9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="30-32"];
n10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="_connection.EnlistTransaction(Transaction.Current)", span="34-34"];
n16 [cluster="TransactionScope.cstr", label="Entry TransactionScope.cstr", span=""];
n17 [cluster="TransactionOptions.cstr", label="Entry TransactionOptions.cstr", span=""];
n13 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="transaction.Complete()", span="41-41"];
n11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label=_commandQueue, span="36-36"];
n18 [cluster="Unk.EnlistTransaction", label="Entry Unk.EnlistTransaction", span=""];
n12 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="command(_connection)", span="38-38"];
n19 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
n14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="return true;", span="44-44"];
n20 [cluster="Unk.Complete", label="Entry Unk.Complete", span=""];
n15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="28-28"];
n21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="47-47"];
n22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="49-51"];
n26 [cluster="lambda expression", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="49-51"];
n23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="47-47"];
n24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="218-218"];
n25 [cluster="lambda expression", label="Entry lambda expression", span="49-51"];
n27 [cluster="lambda expression", label="Exit lambda expression", span="49-51"];
n28 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
n29 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
n30 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="54-54"];
n31 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="56-58"];
n34 [cluster="lambda expression", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="56-58"];
n32 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="54-54"];
n33 [cluster="lambda expression", label="Entry lambda expression", span="56-58"];
n35 [cluster="lambda expression", label="Exit lambda expression", span="56-58"];
n36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="61-61"];
n37 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="63-65"];
n40 [cluster="lambda expression", label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="63-65"];
n38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="61-61"];
n39 [cluster="lambda expression", label="Entry lambda expression", span="63-65"];
n41 [cluster="lambda expression", label="Exit lambda expression", span="63-65"];
n42 [cluster="HangFire.Common.JobHelper.ToJson(object)", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
n43 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="68-68"];
n44 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="70-73"];
n47 [cluster="lambda expression", label="x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="70-73"];
n45 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="68-68"];
n46 [cluster="lambda expression", label="Entry lambda expression", span="70-73"];
n48 [cluster="lambda expression", label="Exit lambda expression", span="70-73"];
n49 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="76-76"];
n50 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="78-80"];
n51 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="82-84"];
n54 [cluster="lambda expression", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="82-84"];
n52 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="76-76"];
n53 [cluster="lambda expression", label="Entry lambda expression", span="82-84"];
n55 [cluster="lambda expression", label="Exit lambda expression", span="82-84"];
n56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="87-87"];
n57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="89-91"];
n60 [cluster="lambda expression", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="89-91"];
n58 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="87-87"];
n59 [cluster="lambda expression", label="Entry lambda expression", span="89-91"];
n61 [cluster="lambda expression", label="Exit lambda expression", span="89-91"];
n62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="94-94"];
n63 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="96-98"];
n66 [cluster="lambda expression", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="96-98"];
n64 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="94-94"];
n65 [cluster="lambda expression", label="Entry lambda expression", span="96-98"];
n67 [cluster="lambda expression", label="Exit lambda expression", span="96-98"];
n68 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="101-101"];
n69 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="103-105"];
n72 [cluster="lambda expression", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="103-105"];
n70 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="101-101"];
n71 [cluster="lambda expression", label="Entry lambda expression", span="103-105"];
n73 [cluster="lambda expression", label="Exit lambda expression", span="103-105"];
n74 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="108-108"];
n75 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="110-112"];
n78 [cluster="lambda expression", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="110-112"];
n76 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="108-108"];
n77 [cluster="lambda expression", label="Entry lambda expression", span="110-112"];
n79 [cluster="lambda expression", label="Exit lambda expression", span="110-112"];
n80 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="115-115"];
n81 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", label="AddToSet(key, value, 0.0)", span="117-117"];
n82 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="115-115"];
n83 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="120-120"];
n84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="122-127"];
n85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="129-131"];
n88 [cluster="lambda expression", label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="129-131"];
n86 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="120-120"];
n87 [cluster="lambda expression", label="Entry lambda expression", span="129-131"];
n89 [cluster="lambda expression", label="Exit lambda expression", span="129-131"];
n90 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="134-134"];
n91 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="136-138"];
n94 [cluster="lambda expression", label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="136-138"];
n92 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="134-134"];
n93 [cluster="lambda expression", label="Entry lambda expression", span="136-138"];
n95 [cluster="lambda expression", label="Exit lambda expression", span="136-138"];
n96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="141-141"];
n97 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="143-145"];
n100 [cluster="lambda expression", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="143-145"];
n98 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="141-141"];
n99 [cluster="lambda expression", label="Entry lambda expression", span="143-145"];
n101 [cluster="lambda expression", label="Exit lambda expression", span="143-145"];
n102 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148"];
n103 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="150-152"];
n106 [cluster="lambda expression", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="150-152"];
n104 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="148-148"];
n105 [cluster="lambda expression", label="Entry lambda expression", span="150-152"];
n107 [cluster="lambda expression", label="Exit lambda expression", span="150-152"];
n108 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="155-155"];
n109 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="157-160"];
n110 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="162-164"];
n113 [cluster="lambda expression", label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="162-164"];
n111 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="155-155"];
n112 [cluster="lambda expression", label="Entry lambda expression", span="162-164"];
n114 [cluster="lambda expression", label="Exit lambda expression", span="162-164"];
n115 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="167-167"];
n116 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="169-174"];
n118 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="178-186"];
n121 [cluster="lambda expression", label="var affectedRows = x.Execute(updateSql, new { key })", span="180-180"];
n123 [cluster="lambda expression", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="184-184"];
n117 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="175-176"];
n119 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="167-167"];
n120 [cluster="lambda expression", label="Entry lambda expression", span="178-186"];
n122 [cluster="lambda expression", label="affectedRows == 0", span="182-182"];
n124 [cluster="lambda expression", label="Exit lambda expression", span="178-186"];
n125 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="189-189"];
n126 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="191-196"];
n128 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="200-208"];
n131 [cluster="lambda expression", label="var affectedRows = x.Execute(updateSql, new { key })", span="202-202"];
n133 [cluster="lambda expression", label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="206-206"];
n127 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="197-198"];
n129 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="189-189"];
n130 [cluster="lambda expression", label="Entry lambda expression", span="200-208"];
n132 [cluster="lambda expression", label="affectedRows == 0", span="204-204"];
n134 [cluster="lambda expression", label="Exit lambda expression", span="200-208"];
n135 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="211-211"];
n136 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="213-215"];
n139 [cluster="lambda expression", label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="213-215"];
n137 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="211-211"];
n138 [cluster="lambda expression", label="Entry lambda expression", span="213-215"];
n140 [cluster="lambda expression", label="Exit lambda expression", span="213-215"];
n141 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", label="_commandQueue.Enqueue(action)", span="220-220"];
n142 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="218-218"];
n143 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m1_0 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m1_1 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="redis == null", span="21-21"];
m1_3 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="jobId == null", span="22-22"];
m1_5 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="jobParameters == null", span="23-23"];
m1_7 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="state == null", span="24-24"];
m1_9 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_redis = redis", span="26-26"];
m1_10 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_stateMachine = new StateMachine(redis)", span="27-27"];
m1_11 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_state = state", span="29-29"];
m1_12 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="_jobParameters = jobParameters", span="30-30"];
m1_13 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="JobId = jobId", span="31-31"];
m1_2 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''redis'');", span="21-21"];
m1_4 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''jobId'');", span="22-22"];
m1_6 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''jobParameters'');", span="23-23"];
m1_8 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''state'');", span="24-24"];
m1_14 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m1_31 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="ClientJobDescriptor.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m1_25 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="43-43"];
m1_26 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="String.IsNullOrEmpty(name)", span="45-45"];
m1_28 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="return _jobParameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_jobParameters[name])\r\n                : default(T);", span="47-49"];
m1_27 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''name'');", span="45-45"];
m1_29 [cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="43-43"];
m1_37 [cluster="Unk.SetRangeInHash", file="ClientJobDescriptor.cs", label="Entry Unk.SetRangeInHash", span=""];
m1_36 [cluster="string.Format(string, object)", file="ClientJobDescriptor.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_22 [cluster="string.IsNullOrEmpty(string)", file="ClientJobDescriptor.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_32 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="52-52"];
m1_33 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="_redis.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', JobId),\r\n                _jobParameters)", span="54-56"];
m1_34 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="_stateMachine.ChangeState(JobId, _state)", span="60-60"];
m1_35 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.Create()", span="52-52"];
m1_23 [cluster="HangFire.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m1_38 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="ClientJobDescriptor.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58"];
m1_30 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_24 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ClientJobDescriptor.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_17 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="36-36"];
m1_18 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="String.IsNullOrEmpty(name)", span="38-38"];
m1_20 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="_jobParameters.Add(name, JobHelper.ToJson(value))", span="40-40"];
m1_19 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="throw new ArgumentNullException(''name'');", span="38-38"];
m1_21 [cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs", label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="36-36"];
m1_16 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="ClientJobDescriptor.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36"];
m1_39 [file="ClientJobDescriptor.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m2_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ClientSteps.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m2_3 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", color=green, community=0, file="ClientSteps.cs", label="1: EnqueueAt = enqueueAt", span="34-34"];
m2_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", color=green, community=0, file="ClientSteps.cs", label="1: ScheduledAt = DateTime.UtcNow", span="35-35"];
m2_5 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ClientSteps.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m2_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ClientSteps.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m2_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ClientSteps.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57"];
m2_12 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ClientSteps.cs", label="0: var scheduledState = context.NewState as ScheduledState", span="59-59"];
m2_16 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ClientSteps.cs", label="0: transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="68-68"];
m2_13 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ClientSteps.cs", label="0: scheduledState == null", span="60-60"];
m2_15 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ClientSteps.cs", label="0: var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="67-67"];
m2_14 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ClientSteps.cs", label="0: throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="62-64"];
m2_17 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ClientSteps.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57"];
m2_20 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ClientSteps.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m2_0 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ClientSteps.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m2_1 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ClientSteps.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m2_6 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ClientSteps.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m2_7 [cluster="HangFire.States.ScheduledState.SerializeData()", color=green, community=0, file="ClientSteps.cs", label="1: return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.SerializeDateTime(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.SerializeDateTime(ScheduledAt) }\r\n            };", span="48-52"];
m2_8 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ClientSteps.cs", label="Exit HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m2_22 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ClientSteps.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="71-71"];
m2_23 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ClientSteps.cs", label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="73-73"];
m2_24 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ClientSteps.cs", label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="71-71"];
m2_21 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ClientSteps.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="42-42"];
m2_19 [cluster="string.Format(string, object)", file="ClientSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_18 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ClientSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_10 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ClientSteps.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m2_26 [file="ClientSteps.cs", label="HangFire.States.ScheduledState", span=""];
m4_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="48-48"];
m4_24 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="JobCreator.cs", label="String.IsNullOrWhiteSpace(queue)", span="75-75"];
m4_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs", label="1: filters.Reverse()", span="117-117"];
m4_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filter.OnClientException(context)", span="119-119"];
m4_67 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m4_37 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="62-66"];
m4_68 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m4_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m4_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="82-83"];
m4_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="95-96"];
m4_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="79-79"];
m4_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="80-80"];
m4_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="90-90"];
m4_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="98-98"];
m4_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="108-108"];
m4_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="87-87"];
m4_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="94-94"];
m4_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="100-100"];
m4_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="111-111"];
m4_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="102-102"];
m4_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="86-86"];
m4_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="92-92"];
m4_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="106-106"];
m4_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m4_31 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobCreator.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m4_29 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m4_30 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="JobCreator.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m4_32 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m4_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="49-49"];
m4_64 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m4_21 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m4_23 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m4_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Create();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="62-66"];
m4_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="68-69"];
m4_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(createContext)", span="61-61"];
m4_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="71-71"];
m4_33 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobCreator.cs", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="89-89"];
m4_39 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="method == null", span="108-108"];
m4_22 [cluster="string.IsNullOrEmpty(string)", file="JobCreator.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m4_38 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="JobCreator.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="55-55"];
m4_41 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="69-69"];
m4_40 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="69-69"];
m4_42 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="69-69"];
m4_0 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="JobCreator.cs", label="Entry HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32"];
m4_1 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="JobCreator.cs", label="var queue = GetQueue(data)", span="34-34"];
m4_2 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="JobCreator.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', queue }\r\n                };", span="36-40"];
m4_3 [cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", file="JobCreator.cs", label="Exit HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32"];
m4_14 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="var queueName = attribute != null\r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="65-67"];
m4_17 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
m4_15 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="ValidateQueueName(queueName)", span="68-68"];
m4_16 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="return queueName;", span="70-70"];
m4_20 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobCreator.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m4_34 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="62-66"];
m4_35 [cluster="lambda expression", file="JobCreator.cs", label="jobDescriptor.Create()", span="64-64"];
m4_36 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(createContext, false, null);", span="65-65"];
m4_62 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m4_43 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="69-69"];
m4_44 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="69-69"];
m4_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientFilters == null", span="31-31"];
m4_4 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43"];
m4_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientFilters'');", span="31-31"];
m4_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientFilters = clientFilters", span="34-34"];
m4_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientExceptionFilters = clientExceptionFilters", span="35-35"];
m4_13 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="JobCreator.cs", label="attribute = method.Type\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="59-62"];
m4_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientExceptionFilters == null", span="32-32"];
m4_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="32-32"];
m4_12 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m4_63 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m4_69 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m4_70 [file="JobCreator.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m4_71 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m4_72 [file="JobCreator.cs", label=preContext, span=""];
m4_73 [file="JobCreator.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m4_74 [file="JobCreator.cs", label="HangFire.Filters.IClientFilter", span=""];
m5_42 [cluster="System.Threading.Thread.Join()", file="JobManager.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m5_65 [cluster="string.Format(string, params object[])", file="JobManager.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m5_22 [cluster="System.Threading.Thread.Start()", file="JobManager.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m5_62 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m5_45 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m5_46 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="JobManager.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m5_15 [cluster="string.Format(string, object)", file="JobManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_29 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobManager.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m5_47 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="JobManager.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m5_48 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="JobManager.cs", label="_freeWorkers.Add(worker)", span="87-87"];
m5_49 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="JobManager.cs", label="Exit HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m5_16 [cluster="Unk.Info", file="JobManager.cs", label="Entry Unk.Info", span=""];
m5_17 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobManager.cs", label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m5_51 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="Entry HangFire.Server.JobManager.Work()", span="90-90"];
m5_54 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="worker = _freeWorkers.Take(_cts.Token)", span="99-99"];
m5_56 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="var jobId = _fetcher.DequeueJob(_cts.Token)", span="103-103"];
m5_60 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="_logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs  will not be processed by this server.''),\r\n                    ex)", span="113-116"];
m5_53 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="Worker worker", span="96-96"];
m5_55 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="worker.Crashed", span="101-101"];
m5_57 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="worker.Process(jobId)", span="104-104"];
m5_59 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label=Exception, span="111-111"];
m5_52 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label=true, span="94-94"];
m5_58 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label=OperationCanceledException, span="107-107"];
m5_61 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="Exit HangFire.Server.JobManager.Work()", span="90-90"];
m5_63 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="JobManager.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="7-7"];
m5_50 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m5_66 [cluster="Unk.Fatal", file="JobManager.cs", label="Entry Unk.Fatal", span=""];
m5_14 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m5_30 [cluster="HangFire.Server.Worker.SendStop()", file="JobManager.cs", label="Entry HangFire.Server.Worker.SendStop()", span="53-53"];
m5_23 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="Entry HangFire.Server.JobManager.SendStop()", span="52-52"];
m5_24 [cluster="HangFire.Server.JobManager.SendStop()", color=green, community=0, file="JobManager.cs", label="1: _stopSent = true", span="54-54"];
m5_25 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="_cts.Cancel()", span="56-56"];
m5_26 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label=_workers, span="58-58"];
m5_27 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="worker.SendStop()", span="60-60"];
m5_28 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="Exit HangFire.Server.JobManager.SendStop()", span="52-52"];
m5_13 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobManager.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m5_19 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_0 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="Entry HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m5_1 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_workers = new List<Worker>(workerCount)", span="28-28"];
m5_2 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_freeWorkers = new BlockingCollection<Worker>()", span="29-29"];
m5_3 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_logger.Info(String.Format(''Starting {0} workers...'', workerCount))", span="31-31"];
m5_6 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_workers.Add(\r\n                    new Worker(redisManager, this, new WorkerContext(context, i)))", span="35-36"];
m5_8 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_logger.Info(''Workers were started.'')", span="39-39"];
m5_9 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_fetcher = new PrioritizedJobFetcher(\r\n                redisManager, queues, workerCount)", span="41-42"];
m5_10 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", span="44-48"];
m5_11 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_managerThread.Start()", span="49-49"];
m5_4 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="var i = 0", span="33-33"];
m5_5 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="i < workerCount", span="33-33"];
m5_7 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="i++", span="33-33"];
m5_12 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="Exit HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m5_20 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="JobManager.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m5_31 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="64-64"];
m5_32 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="!_stopSent", span="66-66"];
m5_33 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="SendStop()", span="68-68"];
m5_34 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_managerThread.Join()", span="71-71"];
m5_35 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label=_workers, span="73-73"];
m5_37 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_logger.Info(''Workers were stopped.'')", span="77-77"];
m5_38 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_fetcher.Dispose()", span="79-79"];
m5_39 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_freeWorkers.Dispose()", span="81-81"];
m5_40 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_cts.Dispose()", span="82-82"];
m5_36 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="worker.Dispose()", span="75-75"];
m5_41 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="Exit HangFire.Server.JobManager.Dispose()", span="64-64"];
m5_18 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="JobManager.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="9-9"];
m5_44 [cluster="System.IDisposable.Dispose()", file="JobManager.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m5_43 [cluster="HangFire.Server.Worker.Dispose()", file="JobManager.cs", label="Entry HangFire.Server.Worker.Dispose()", span="87-87"];
m5_21 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobManager.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m5_64 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobManager.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m5_67 [file="JobManager.cs", label="HangFire.Server.JobManager", span=""];
m6_4 [cluster="Unk.Given", file="JobSteps.cs", label="Entry Unk.Given", span=""];
m6_5 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21"];
m6_6 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="23-23"];
m6_7 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="21-21"];
m6_0 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="15-15"];
m6_1 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs", label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="17-17"];
m6_2 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="15-15"];
m6_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_29 [cluster="Unk.GetValueFromHash", file="JobSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m6_21 [cluster="Unk.SetRangeInHash", file="JobSteps.cs", label="Entry Unk.SetRangeInHash", span=""];
m6_17 [cluster="Unk.AddItemToList", file="JobSteps.cs", label="Entry Unk.AddItemToList", span=""];
m6_8 [cluster="string.Format(string, object, object)", file="JobSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_14 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="39-42"];
m6_12 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33"];
m6_13 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="35-37"];
m6_15 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="44-51"];
m6_16 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="33-33"];
m6_30 [cluster="Unk.AreEqual", file="JobSteps.cs", label="Entry Unk.AreEqual", span=""];
m6_20 [cluster="HangFire.JobHelper.ToJson(object)", file="JobSteps.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m6_23 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", color=green, community=0, file="JobSteps.cs", label="0: Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="57-60"];
m6_22 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="55-55"];
m6_24 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="55-55"];
m6_18 [cluster="Unk.SetEntryInHash", file="JobSteps.cs", label="Entry Unk.SetEntryInHash", span=""];
m6_3 [cluster="string.Format(string, object)", file="JobSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_9 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27"];
m6_10 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="29-29"];
m6_11 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="27-27"];
m6_25 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66"];
m6_26 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="68-70"];
m6_27 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Assert.AreEqual(state, jobState)", span="72-72"];
m6_28 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="66-66"];
m7_1 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_innerFetcher = innerFetcher", span="29-29"];
m7_2 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_count = count", span="30-30"];
m7_38 [cluster="System.Threading.Thread.Join()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m7_19 [cluster="System.Threading.Monitor.Pulse(object)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Monitor.Pulse(object)", span="0-0"];
m7_18 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="PrefetchJobFetcher.cs", label="Exit HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m7_23 [cluster="HangFire.Server.PrefetchJobFetcher.SendStop()", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: _items", span="73-73"];
m7_4 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_prefetchThread.Start()", span="37-37"];
m7_5 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="27-27"];
m7_6 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m7_15 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="return payload;", span="64-64"];
m7_8 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m7_17 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="PrefetchJobFetcher.cs", label="return ToTimestamp(value).ToString();", span="52-52"];
m7_53 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="PrefetchJobFetcher.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58"];
m7_42 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m7_12 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="_items.Count == 0", span="56-56"];
m7_13 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="_jobIsReady.Reset()", span="58-58"];
m7_14 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Monitor.Pulse(_items)", span="61-61"];
m7_7 [cluster="Unk.>", file="PrefetchJobFetcher.cs", label="Entry Unk.>", span=""];
m7_27 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=red, community=0, file="PrefetchJobFetcher.cs", label="1: return DeserializeDateTime(value);", span="67-67"];
m7_28 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: Exit HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60"];
m7_29 [cluster="string.IsNullOrEmpty(string)", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_30 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: _cts != null", span="86-86"];
m7_31 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_prefetchThread.Join()", span="88-88"];
m7_32 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="RequeuePrefetched()", span="90-90"];
m7_33 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_innerFetcher.Dispose()", span="92-92"];
m7_34 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_jobIsReady.Dispose()", span="94-94"];
m7_35 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts.Dispose()", span="95-95"];
m7_36 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts = null", span="96-96"];
m7_37 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Dispose()", span="79-79"];
m7_26 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="PrefetchJobFetcher.cs", label="return null;", span="64-64"];
m7_52 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="PrefetchJobFetcher.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36"];
m7_16 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="50-50"];
m7_70 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m7_72 [cluster="System.Threading.ManualResetEventSlim.Set()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m7_0 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="27-27"];
m7_3 [cluster="Unk.SerializeObject", file="PrefetchJobFetcher.cs", label="Entry Unk.SerializeObject", span=""];
m7_9 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="50-50"];
m7_10 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="var payload = _items.Take(cancellationToken)", span="52-52"];
m7_11 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label=_items, span="54-54"];
m7_39 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="100-100"];
m7_43 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="var enqueuedState = new EnqueuedState(''Re-queue prefetched job.'', _innerFetcher.Queue)", span="104-104"];
m7_44 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="var stateMachine = new StateMachine(_innerFetcher.Redis)", span="105-105"];
m7_45 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label=_items, span="107-107"];
m7_47 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="110-110"];
m7_49 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="115-115"];
m7_46 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="stateMachine.ChangeState(payload.Id, enqueuedState)", span="109-109"];
m7_48 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label=Exception, span="113-113"];
m7_50 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="100-100"];
m7_56 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="119-119"];
m7_58 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=_items, span="125-125"];
m7_59 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="127-127"];
m7_60 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Monitor.Wait(_items)", span="129-129"];
m7_61 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="133-133"];
m7_62 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=_items, span="135-135"];
m7_63 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_items.Add(payload)", span="137-137"];
m7_64 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_jobIsReady.Set()", span="139-139"];
m7_67 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_logger.Fatal(''Unexpected exception caught. Jobs will not be fetched.'', ex)", span="148-148"];
m7_57 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=true, span="123-123"];
m7_66 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=Exception, span="146-146"];
m7_65 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=OperationCanceledException, span="143-143"];
m7_68 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="119-119"];
m7_51 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m7_54 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m7_20 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m7_21 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: return FromTimestamp(long.Parse(value));", span="57-57"];
m7_22 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: Exit HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m7_24 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=green, community=0, file="PrefetchJobFetcher.cs", label="1: Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60"];
m7_25 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="PrefetchJobFetcher.cs", label="String.IsNullOrEmpty(value)", span="62-62"];
m7_71 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m7_73 [cluster="Unk.Fatal", file="PrefetchJobFetcher.cs", label="Entry Unk.Fatal", span=""];
m7_40 [cluster="HangFire.Server.JobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.Dispose()", span="81-81"];
m7_41 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m7_69 [cluster="System.Threading.Monitor.Wait(object)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Monitor.Wait(object)", span="0-0"];
m7_55 [cluster="Unk.Error", file="PrefetchJobFetcher.cs", label="Entry Unk.Error", span=""];
m7_74 [file="PrefetchJobFetcher.cs", label="HangFire.Server.PrefetchJobFetcher", span=""];
m8_83 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="110-110"];
m8_84 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="112-112"];
m8_85 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="PrioritizedJobFetcher.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="113-114"];
m8_86 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="PrioritizedJobFetcher.cs", label="var value = context.GetJobParameter<string>(''Name'')", span="116-116"];
m8_87 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''Value'', value)", span="118-118"];
m8_88 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="110-110"];
m8_131 [cluster="Mock<IElectStateFilter>.cstr", file="PrioritizedJobFetcher.cs", label="Entry Mock<IElectStateFilter>.cstr", span=""];
m8_49 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="PrioritizedJobFetcher.cs", label="handler.Unapply(_context)", span="66-66"];
m8_12 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(SucceededState.Name, handler.StateName)", span="32-32"];
m8_94 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="122-122"];
m8_95 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="124-124"];
m8_96 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="PrioritizedJobFetcher.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="125-126"];
m8_97 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="PrioritizedJobFetcher.cs", label="var value = context.GetJobParameter<int>(''Name'')", span="128-128"];
m8_98 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(default(int), value)", span="130-130"];
m8_99 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="122-122"];
m8_75 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="99-99"];
m8_76 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="101-101"];
m8_78 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="PrioritizedJobFetcher.cs", label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="105-106"];
m8_77 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="PrioritizedJobFetcher.cs", label="context.SetJobParameter(''Name'', (string)null)", span="103-103"];
m8_79 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="99-99"];
m8_57 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", span="71-71"];
m8_58 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="PrioritizedJobFetcher.cs", label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", span=""];
m8_59 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="PrioritizedJobFetcher.cs", label="var newState = new Mock<State>()", span="80-80"];
m8_60 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="PrioritizedJobFetcher.cs", label="context.CandidateState = newState.Object", span="82-82"];
m8_61 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="PrioritizedJobFetcher.cs", label="Assert.Same(newState.Object, context.CandidateState)", span="84-84"];
m8_62 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="77-77"];
m8_28 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldIncrease_SucceededCounter()", span="45-45"];
m8_15 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="20-20"];
m8_50 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="PrioritizedJobFetcher.cs", label="_transactionMock.Verify(x => x.DecrementCounter(''stats:succeeded''), Times.Once)", span="68-68"];
m8_51 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldDecrementStatistics()", span="63-63"];
m8_52 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="68-68"];
m8_53 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.DecrementCounter(''stats:succeeded'')", span="68-68"];
m8_11 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="PrioritizedJobFetcher.cs", label="var handler = new SucceededState.Handler()", span="31-31"];
m8_111 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", span="142-142"];
m8_112 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="144-144"];
m8_114 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="PrioritizedJobFetcher.cs", label="Assert.Same(_candidateState.Object, electedState)", span="148-148"];
m8_115 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="PrioritizedJobFetcher.cs", label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Never)", span="149-149"];
m8_113 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="PrioritizedJobFetcher.cs", label="var electedState = context.ElectState(Enumerable.Empty<IElectStateFilter>())", span="146-146"];
m8_116 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ReturnsCandidateState_WhenFiltersArrayIsEmpty()", span="142-142"];
m8_121 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="153-153"];
m8_125 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="162-162"];
m8_128 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="_transaction.Verify(x => x.AddJobState(JobId, _candidateState.Object))", span="170-170"];
m8_129 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="_transaction.Verify(x => x.Dispose())", span="171-171"];
m8_124 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="filter.Setup(x => x.OnStateElection(It.IsNotNull<ElectStateContext>()))\r\n                .Callback((ElectStateContext x) => x.CandidateState = newState.Object)", span="159-160"];
m8_126 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="var electedState = context.ElectState(new[] { filter.Object })", span="165-165"];
m8_127 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="Assert.Same(newState.Object, electedState)", span="168-168"];
m8_122 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="var newState = new Mock<State>()", span="156-156"];
m8_123 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="var filter = new Mock<IElectStateFilter>()", span="158-158"];
m8_130 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_AddsJobHistory_WhenAFilterChangesCandidateState()", span="153-153"];
m8_29 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="33-37"];
m8_30 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="new ElectStateContext(\r\n                    _stateContext,\r\n                    null,\r\n                    null,\r\n                    _connection.Object)", span="33-37"];
m8_31 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="33-37"];
m8_32 [cluster="ElectStateContext.cstr", file="PrioritizedJobFetcher.cs", label="Entry ElectStateContext.cstr", span=""];
m8_133 [cluster="Unk.ElectState", file="PrioritizedJobFetcher.cs", label="Entry Unk.ElectState", span=""];
m8_6 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", color=green, community=0, file="PrioritizedJobFetcher.cs", label="0: _connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="26-26"];
m8_27 [cluster="Unk.>", file="PrioritizedJobFetcher.cs", label="Entry Unk.>", span=""];
m8_26 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="30-30"];
m8_9 [cluster="StateApplyingContext.cstr", file="PrioritizedJobFetcher.cs", label="Entry StateApplyingContext.cstr", span=""];
m8_21 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="26-26"];
m8_7 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="18-18"];
m8_47 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="56-56"];
m8_48 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="174-174"];
m8_137 [cluster="Unk.OnStateElection", file="PrioritizedJobFetcher.cs", label="Entry Unk.OnStateElection", span=""];
m8_55 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="context.CandidateState = null", span="73-73"];
m8_18 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="PrioritizedJobFetcher.cs", label="handler.Apply(_context, null)", span="39-39"];
m8_42 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(_stateContext.JobId, context.JobId)", span="60-60"];
m8_144 [cluster="Unk.AddJobState", file="PrioritizedJobFetcher.cs", label="Entry Unk.AddJobState", span=""];
m8_68 [cluster="HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="58-58"];
m8_93 [cluster="Unk.GetJobParameter", file="PrioritizedJobFetcher.cs", label="Entry Unk.GetJobParameter", span=""];
m8_0 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m8_5 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", span="18-18"];
m8_2 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="PrioritizedJobFetcher.cs", label="var jobMethod = new JobMethod(typeof(SucceededStateHandlerFacts), methodInfo)", span="22-22"];
m8_3 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="PrioritizedJobFetcher.cs", label="var stateContext = new StateContext(JobId, jobMethod)", span="23-23"];
m8_4 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="PrioritizedJobFetcher.cs", label="_context = new StateApplyingContext(stateContext, _transactionMock.Object)", span="25-25"];
m8_1 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.SucceededStateHandlerFacts()", file="PrioritizedJobFetcher.cs", label="var methodInfo = typeof(SucceededStateHandlerFacts)\r\n                .GetMethod(''TestMethod'')", span="20-21"];
m8_10 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="29-29"];
m8_13 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.ShouldWorkOnlyWithSucceededState()", span="29-29"];
m8_148 [cluster="Unk.Dispose", file="PrioritizedJobFetcher.cs", label="Entry Unk.Dispose", span=""];
m8_103 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", span="134-134"];
m8_104 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="136-136"];
m8_105 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Throws<ArgumentNullException>(() => context.ElectState(null))", span="138-138"];
m8_106 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.ElectState_ThrowsAnException_WhenFiltersArrayIsNull()", span="134-134"];
m8_36 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="43-43"];
m8_14 [cluster="Unk.Returns", file="PrioritizedJobFetcher.cs", label="Entry Unk.Returns", span=""];
m8_107 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="138-138"];
m8_23 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="30-30"];
m8_24 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    null,\r\n                    null,\r\n                    _connection.Object))", span="32-37"];
m8_25 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''candidateState'', exception.ParamName)", span="39-39"];
m8_33 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="43-43"];
m8_34 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext,\r\n                    _candidateState.Object,\r\n                    null,\r\n                    null))", span="45-50"];
m8_35 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="52-52"];
m8_43 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(_stateContext.Job, context.Job)", span="61-61"];
m8_44 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="PrioritizedJobFetcher.cs", label="Assert.Same(_candidateState.Object, context.CandidateState)", span="63-63"];
m8_45 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''State'', context.CurrentState)", span="64-64"];
m8_54 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="73-73"];
m8_19 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="PrioritizedJobFetcher.cs", label="_transactionMock.Verify(x => x.ExpireJob(JobId, It.IsAny<TimeSpan>()))", span="41-41"];
m8_20 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", color=green, community=0, file="PrioritizedJobFetcher.cs", label="0: Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", span="36-36"];
m8_38 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="PrioritizedJobFetcher.cs", label="var handler = new SucceededState.Handler()", span="56-56"];
m8_142 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.AddJobState(JobId, _candidateState.Object)", span="170-170"];
m8_119 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.CreateWriteTransaction()", span="149-149"];
m8_37 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", span="54-54"];
m8_39 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="PrioritizedJobFetcher.cs", label="handler.Unapply(_context)", span="57-57"];
m8_70 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="94-95"];
m8_80 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="105-106"];
m8_90 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="113-113"];
m8_100 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="125-125"];
m8_108 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="context.ElectState(null)", span="138-138"];
m8_118 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="149-149"];
m8_141 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="170-170"];
m8_143 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="170-170"];
m8_145 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="171-171"];
m8_134 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="159-159"];
m8_138 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="160-160"];
m8_120 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="149-149"];
m8_135 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.OnStateElection(It.IsNotNull<ElectStateContext>())", span="159-159"];
m8_56 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.TestMethod()", span="71-71"];
m8_72 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="94-95"];
m8_71 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="94-95"];
m8_82 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="105-106"];
m8_81 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="105-106"];
m8_92 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="113-113"];
m8_91 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.GetJobParameter(''1'', ''Name'')", span="113-113"];
m8_102 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="125-125"];
m8_101 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.GetJobParameter(''1'', ''Value'')", span="125-125"];
m8_109 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="138-138"];
m8_147 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="171-171"];
m8_146 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Dispose()", span="171-171"];
m8_139 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.CandidateState = newState.Object", span="160-160"];
m8_136 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="159-159"];
m8_140 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="160-160"];
m8_16 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", span="36-36"];
m8_17 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Apply_ShouldSet_JobExpirationDate()", file="PrioritizedJobFetcher.cs", label="var handler = new SucceededState.Handler()", span="38-38"];
m8_63 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="88-88"];
m8_64 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="PrioritizedJobFetcher.cs", label="var context = CreateContext()", span="90-90"];
m8_66 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="PrioritizedJobFetcher.cs", label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="94-95"];
m8_65 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="PrioritizedJobFetcher.cs", label="context.SetJobParameter(''Name'', ''Value'')", span="92-92"];
m8_67 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="88-88"];
m8_74 [cluster="Unk.SetJobParameter", file="PrioritizedJobFetcher.cs", label="Entry Unk.SetJobParameter", span=""];
m8_22 [cluster="Unk.Verify", file="PrioritizedJobFetcher.cs", label="Entry Unk.Verify", span=""];
m8_40 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="PrioritizedJobFetcher.cs", label="_transactionMock.Verify(x => x.PersistJob(JobId))", span="59-59"];
m8_41 [cluster="HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.SucceededStateHandlerFacts.Unapply_ShouldRemoveJobExpirationDate()", span="54-54"];
m8_46 [cluster="Unk.PersistJob", file="PrioritizedJobFetcher.cs", label="Entry Unk.PersistJob", span=""];
m8_132 [cluster="Unk.Callback", file="PrioritizedJobFetcher.cs", label="Entry Unk.Callback", span=""];
m8_8 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m8_89 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63"];
m8_69 [cluster="Unk.Verify", file="PrioritizedJobFetcher.cs", label="Entry Unk.Verify", span=""];
m8_149 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="PrioritizedJobFetcher.cs", label="return new ElectStateContext(\r\n                _stateContext,\r\n                _candidateState.Object,\r\n                ''State'',\r\n                _connection.Object);", span="176-180"];
m8_150 [cluster="HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="174-174"];
m8_110 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69"];
m8_117 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="PrioritizedJobFetcher.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_151 [file="PrioritizedJobFetcher.cs", label="HangFire.Core.Tests.States.ElectStateContextFacts", span=""];
m8_152 [file="PrioritizedJobFetcher.cs", label=context, span=""];
m8_153 [file="PrioritizedJobFetcher.cs", label=context, span=""];
m8_154 [file="PrioritizedJobFetcher.cs", label=newState, span=""];
m9_0 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39"];
m9_1 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="Servers.Add(server)", span="43-43"];
m9_2 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="server.Start()", span="45-45"];
m9_3 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="var context = new OwinContext(app.Properties)", span="47-47"];
m9_6 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="token.Register(server.Dispose)", span="52-52"];
m9_4 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="48-48"];
m9_5 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="token != CancellationToken.None", span="50-50"];
m9_7 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerSteps.cs", label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="39-39"];
m9_11 [cluster="Unk.>", file="ServerSteps.cs", label="Entry Unk.>", span=""];
m9_12 [cluster="Unk.Register", file="ServerSteps.cs", label="Entry Unk.Register", span=""];
m9_9 [cluster="Hangfire.BackgroundJobServer.Start()", file="ServerSteps.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="123-123"];
m9_8 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerSteps.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m9_10 [cluster="OwinContext.cstr", file="ServerSteps.cs", label="Entry OwinContext.cstr", span=""];
m12_111 [cluster="Unk.EnqueueItemOnList", file="StateMachine.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m12_57 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId)))", span="105-106"];
m12_48 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", span="81-81"];
m12_49 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=1, file="StateMachine.cs", label="1: var oldState = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId), ''State'')", span="87-88"];
m12_50 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: allowedStates.Length > 0 && !allowedStates.Contains(oldState)", span="90-90"];
m12_56 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: descriptor.Unapply(transaction, jobId)", span="102-102"];
m12_59 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: filter.OnStateUnapplied(transaction, jobId, oldState)", span="110-110"];
m12_60 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: AppendHistory(transaction, jobId, state, true)", span="114-114"];
m12_61 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: state.Apply(transaction, jobId)", span="116-116"];
m12_63 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: filter.OnStateApplied(transaction, jobId, state)", span="120-120"];
m12_53 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: !String.IsNullOrEmpty(oldState)", span="97-97"];
m12_54 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: var descriptor = GetStateDescriptor(oldState)", span="99-99"];
m12_51 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: return false;", span="92-92"];
m12_52 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="var transaction = _redis.CreateTransaction()", span="95-95"];
m12_64 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="return transaction.Commit();", span="123-123"];
m12_55 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="0: descriptor != null", span="100-100"];
m12_58 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label=_stateAppliedFilters, span="108-108"];
m12_62 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label=_stateAppliedFilters, span="118-118"];
m12_65 [cluster="HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(string, HangFire.States.JobState, params string[])", span="81-81"];
m12_46 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="StateMachine.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m12_106 [cluster="Unk.SetRangeInHash", file="StateMachine.cs", label="Entry Unk.SetRangeInHash", span=""];
m12_47 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="127-127"];
m12_82 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="var transaction = _redis.CreateTransaction()", span="130-130"];
m12_83 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="AppendHistory(transaction, jobId, state, appendToJob)", span="132-132"];
m12_84 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.Commit()", span="133-133"];
m12_85 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="127-127"];
m12_44 [cluster="System.TimeSpan.FromMinutes(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m12_75 [cluster="Unk.Apply", file="StateMachine.cs", label="Entry Unk.Apply", span=""];
m12_7 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="20-20"];
m12_11 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs", label="Descriptors.Add(stateName, descriptor)", span="23-23"];
m12_12 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="20-20"];
m12_32 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58"];
m12_33 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="state == null", span="61-61"];
m12_35 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="_redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', jobId), TimeSpan.FromMinutes(1))", span="63-64"];
m12_37 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="var oldState = state", span="68-68"];
m12_38 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="state = filter.OnStateChanged(_redis, jobId, oldState)", span="69-69"];
m12_40 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="AppendHistory(jobId, oldState, false)", span="73-73"];
m12_41 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", color=red, community=0, file="StateMachine.cs", label="1: return ApplyState(jobId, state, allowedCurrentStates);", span="77-77"];
m12_34 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="61-61"];
m12_36 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label=_stateChangedFilters, span="66-66"];
m12_39 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="oldState != state", span="71-71"];
m12_42 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="58-58"];
m12_102 [cluster="Unk.SetEntryInHash", file="StateMachine.cs", label="Entry Unk.SetEntryInHash", span=""];
m12_43 [cluster="string.Format(string, object)", file="StateMachine.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_110 [cluster="HangFire.JobHelper.ToJson(object)", file="StateMachine.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m12_98 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachine.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m12_18 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36"];
m12_19 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient)", span="36-36"];
m12_81 [cluster="Unk.RemoveEntry", file="StateMachine.cs", label="Entry Unk.RemoveEntry", span=""];
m12_73 [cluster="Unk.OnStateUnapplied", file="StateMachine.cs", label="Entry Unk.OnStateUnapplied", span=""];
m12_8 [cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37"];
m12_9 [cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="39-39"];
m12_76 [cluster="Unk.OnStateApplied", file="StateMachine.cs", label="Entry Unk.OnStateApplied", span=""];
m12_91 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="147-150"];
m12_86 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="137-137"];
m12_87 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="StateMachine.cs", label="1: var properties = state.GetProperties()", span="140-140"];
m12_89 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''State'', state.StateName)", span="143-143"];
m12_90 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label=appendToJob, span="145-145"];
m12_92 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="152-154"];
m12_93 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''Reason'', state.Reason)", span="157-157"];
m12_95 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="160-162"];
m12_88 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="var now = DateTime.UtcNow", span="141-141"];
m12_94 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="158-158"];
m12_96 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="137-137"];
m12_6 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41"];
m12_70 [cluster="Unk.GetStateDescriptor", file="StateMachine.cs", label="Entry Unk.GetStateDescriptor", span=""];
m12_71 [cluster="Unk.Unapply", file="StateMachine.cs", label="Entry Unk.Unapply", span=""];
m12_17 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_107 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="160-162"];
m12_79 [cluster="lambda expression", file="StateMachine.cs", label="x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId))", span="105-106"];
m12_78 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="105-106"];
m12_80 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="105-106"];
m12_100 [cluster="lambda expression", file="StateMachine.cs", label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="147-150"];
m12_104 [cluster="lambda expression", file="StateMachine.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="152-154"];
m12_108 [cluster="lambda expression", file="StateMachine.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="160-162"];
m12_99 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="147-150"];
m12_103 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="152-154"];
m12_101 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="147-150"];
m12_105 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="152-154"];
m12_109 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="160-162"];
m12_67 [cluster="Unk.Contains", file="StateMachine.cs", label="Entry Unk.Contains", span=""];
m12_0 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine()", span="12-12"];
m12_1 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(FailedState.Name, new FailedState.Descriptor())", span="14-14"];
m12_2 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="15-15"];
m12_3 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="16-16"];
m12_4 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="17-17"];
m12_5 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine()", span="12-12"];
m12_66 [cluster="Unk.GetValueFromHash", file="StateMachine.cs", label="Entry Unk.GetValueFromHash", span=""];
m12_14 [cluster="HangFire.States.StateMachine.GetStateDescriptor(string)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetStateDescriptor(string)", span="26-26"];
m12_15 [cluster="HangFire.States.StateMachine.GetStateDescriptor(string)", color=red, community=0, file="StateMachine.cs", label="0: return Descriptors.ContainsKey(stateName) ? Descriptors[stateName] : null;", span="29-29"];
m12_16 [cluster="HangFire.States.StateMachine.GetStateDescriptor(string)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetStateDescriptor(string)", span="26-26"];
m12_77 [cluster="Unk.Commit", file="StateMachine.cs", label="Entry Unk.Commit", span=""];
m12_69 [cluster="Unk.IsNullOrEmpty", file="StateMachine.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m12_10 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49"];
m12_72 [cluster="Unk.QueueCommand", file="StateMachine.cs", label="Entry Unk.QueueCommand", span=""];
m12_20 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="44-44"];
m12_21 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="redis == null", span="49-49"];
m12_23 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="stateChangedFilters == null", span="50-50"];
m12_25 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="stateAppliedFilters == null", span="51-51"];
m12_27 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="_redis = redis", span="53-53"];
m12_28 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="_stateChangedFilters = stateChangedFilters", span="54-54"];
m12_29 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="_stateAppliedFilters = stateAppliedFilters", span="55-55"];
m12_22 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="throw new ArgumentNullException(''redis'');", span="49-49"];
m12_24 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateChangedFilters'');", span="50-50"];
m12_26 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateAppliedFilters'');", span="51-51"];
m12_30 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>, System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>)", span="44-44"];
m12_13 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_74 [cluster="Unk.AppendHistory", file="StateMachine.cs", label="Entry Unk.AppendHistory", span=""];
m12_45 [cluster="Unk.AcquireLock", file="StateMachine.cs", label="Entry Unk.AcquireLock", span=""];
m12_68 [cluster="Unk.CreateTransaction", file="StateMachine.cs", label="Entry Unk.CreateTransaction", span=""];
m12_97 [cluster="HangFire.States.JobState.GetProperties()", file="StateMachine.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m12_112 [file="StateMachine.cs", label="HangFire.States.StateMachine", span=""];
m12_113 [file="StateMachine.cs", label=string, span=""];
m12_114 [file="StateMachine.cs", label=string, span=""];
m12_115 [file="StateMachine.cs", label="HangFire.States.JobState", span=""];
m12_116 [file="StateMachine.cs", label=properties, span=""];
m14_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="States.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_27 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="States.feature.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m14_28 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="States.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40"];
m14_29 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="States.feature.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="42-45"];
m14_30 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="States.feature.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40"];
m14_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="States.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26"];
m14_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", color=red, community=0, file="States.feature.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="28-30"];
m14_17 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="States.feature.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26"];
m14_14 [cluster="Unk.Execute", file="States.feature.cs", label="Entry Unk.Execute", span=""];
m14_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="States.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m14_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", color=red, community=0, file="States.feature.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="21-23"];
m14_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="States.feature.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m14_9 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="States.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m14_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="States.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m14_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="States.feature.cs", label="1: transaction == null", span="14-14"];
m14_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="States.feature.cs", label="1: _transaction = transaction", span="16-16"];
m14_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="States.feature.cs", label="1: throw new ArgumentNullException(''transaction'');", span="14-14"];
m14_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="States.feature.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m14_31 [cluster="lambda expression", file="States.feature.cs", label="Entry lambda expression", span="42-45"];
m14_11 [cluster="lambda expression", color=red, community=0, file="States.feature.cs", label="1: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="21-23"];
m14_10 [cluster="lambda expression", file="States.feature.cs", label="Entry lambda expression", span="21-23"];
m14_12 [cluster="lambda expression", file="States.feature.cs", label="Exit lambda expression", span="21-23"];
m14_19 [cluster="lambda expression", color=red, community=0, file="States.feature.cs", label="1: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="28-30"];
m14_18 [cluster="lambda expression", file="States.feature.cs", label="Entry lambda expression", span="28-30"];
m14_20 [cluster="lambda expression", file="States.feature.cs", label="Exit lambda expression", span="28-30"];
m14_25 [cluster="lambda expression", color=red, community=0, file="States.feature.cs", label="0: x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="35-37"];
m14_24 [cluster="lambda expression", file="States.feature.cs", label="Entry lambda expression", span="35-37"];
m14_26 [cluster="lambda expression", file="States.feature.cs", label="Exit lambda expression", span="35-37"];
m14_32 [cluster="lambda expression", color=red, community=0, file="States.feature.cs", label="1: x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="42-45"];
m14_33 [cluster="lambda expression", file="States.feature.cs", label="Exit lambda expression", span="42-45"];
m14_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="States.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33"];
m14_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="States.feature.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="35-37"];
m14_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="States.feature.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33"];
m14_34 [file="States.feature.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", span=""];
m14_35 [file="States.feature.cs", label=string, span=""];
m14_36 [file="States.feature.cs", label="System.TimeSpan", span=""];
m14_37 [file="States.feature.cs", label=string, span=""];
m14_38 [file="States.feature.cs", label=string, span=""];
m14_39 [file="States.feature.cs", label=string, span=""];
m14_40 [file="States.feature.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m14_41 [file="States.feature.cs", label=string, span=""];
m14_42 [file="States.feature.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m15_0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m15_1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateSteps.cs", label="storage == null", span="36-36"];
m15_3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateSteps.cs", label="_storage = storage", span="38-38"];
m15_4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateSteps.cs", label="_interval = interval", span="39-39"];
m15_2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateSteps.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m15_5 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m15_19 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateSteps.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_24 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72"];
m15_31 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="StateSteps.cs", label="0: return string.Format(@''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [{0}].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{0}].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'', storage.GetSchema());", span="74-100"];
m15_32 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="72-72"];
m15_25 [cluster="Unk.Execute", file="StateSteps.cs", label="Entry Unk.Execute", span=""];
m15_30 [cluster="System.Type.ToString()", file="StateSteps.cs", label="Entry System.Type.ToString()", span="0-0"];
m15_7 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m15_8 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44"];
m15_12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59"];
m15_15 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64"];
m15_9 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="int removedCount = 0", span="46-46"];
m15_10 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=red, community=0, file="StateSteps.cs", label="0: _storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55"];
m15_11 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="57-57"];
m15_14 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="62-62"];
m15_13 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m15_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m15_34 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_17 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="StateSteps.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m15_26 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m15_27 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="StateSteps.cs", label="return GetType().ToString();", span="69-69"];
m15_28 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67"];
m15_33 [cluster="Hangfire.SqlServer.SqlServerStorage.GetSchema()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchema()", span="238-238"];
m15_18 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m15_29 [cluster="object.GetType()", file="StateSteps.cs", label="Entry object.GetType()", span="0-0"];
m15_21 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="50-55"];
m15_22 [cluster="lambda expression", color=red, community=0, file="StateSteps.cs", label="0: removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54"];
m15_23 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="50-55"];
m15_20 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateSteps.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_35 [file="StateSteps.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m20_20 [cluster="string.Equals(string)", file="Transforms.cs", label="Entry string.Equals(string)", span="0-0"];
m20_0 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="Transforms.cs", label="Entry HangFire.Tests.Transforms.InXDaysTransform(int)", span="9-9"];
m20_1 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", color=green, community=0, file="Transforms.cs", label="1: return DateTime.Today.AddDays(days);", span="11-11"];
m20_2 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="Transforms.cs", label="Exit HangFire.Tests.Transforms.InXDaysTransform(int)", span="9-9"];
m20_4 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="Transforms.cs", label="Entry HangFire.Tests.Transforms.ATimeAgo(string)", span="15-15"];
m20_5 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: var now = DateTime.UtcNow", span="17-17"];
m20_6 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: ''millisecond''.Equals(timeAgo)", span="18-18"];
m20_7 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: return now.AddMilliseconds(-1);", span="20-20"];
m20_9 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: return now.AddSeconds(-1);", span="24-24"];
m20_11 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="1: return now.AddMinutes(-1);", span="28-28"];
m20_13 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: return now.AddHours(-1);", span="32-32"];
m20_15 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: return now.AddDays(-1);", span="36-36"];
m20_17 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: return now.AddMonths(-1);", span="40-40"];
m20_8 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: ''second''.Equals(timeAgo)", span="22-22"];
m20_10 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="1: ''minute''.Equals(timeAgo)", span="26-26"];
m20_12 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: ''hour''.Equals(timeAgo)", span="30-30"];
m20_14 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: ''day''.Equals(timeAgo)", span="34-34"];
m20_16 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: ''month''.Equals(timeAgo)", span="38-38"];
m20_18 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="0: throw new InvalidOperationException(String.Format(''Wrong time unit '{0}''', timeAgo));", span="43-43"];
m20_19 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="Transforms.cs", label="Exit HangFire.Tests.Transforms.ATimeAgo(string)", span="15-15"];
m20_25 [cluster="System.DateTime.AddMonths(int)", file="Transforms.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m20_26 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Transforms.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m20_23 [cluster="System.DateTime.AddMinutes(double)", file="Transforms.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m20_22 [cluster="System.DateTime.AddSeconds(double)", file="Transforms.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m20_21 [cluster="System.DateTime.AddMilliseconds(double)", file="Transforms.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m20_27 [cluster="string.Format(string, object)", file="Transforms.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_3 [cluster="System.DateTime.AddDays(double)", file="Transforms.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m20_24 [cluster="System.DateTime.AddHours(double)", file="Transforms.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
n144 -> n3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n22  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n44  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n51  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n57  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n69  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n75  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n81  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n85  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n91  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n97  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n103  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n110  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n118  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n128  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n136  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n144 -> n141  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
n145 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n146 -> n26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n147 -> n34  [color=darkseagreen4, key=1, label=string, style=dashed];
n148 -> n40  [color=darkseagreen4, key=1, label=string, style=dashed];
n149 -> n40  [color=darkseagreen4, key=1, label=string, style=dashed];
n150 -> n40  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
n151 -> n47  [color=darkseagreen4, key=1, label=string, style=dashed];
n152 -> n47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
n153 -> n54  [color=darkseagreen4, key=1, label=string, style=dashed];
n154 -> n54  [color=darkseagreen4, key=1, label=string, style=dashed];
n155 -> n54  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
n156 -> n60  [color=darkseagreen4, key=1, label=string, style=dashed];
n157 -> n66  [color=darkseagreen4, key=1, label=string, style=dashed];
n158 -> n66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n159 -> n72  [color=darkseagreen4, key=1, label=string, style=dashed];
n160 -> n78  [color=darkseagreen4, key=1, label=string, style=dashed];
n161 -> n78  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n162 -> n88  [color=darkseagreen4, key=1, label=string, style=dashed];
n163 -> n88  [color=darkseagreen4, key=1, label=string, style=dashed];
n164 -> n88  [color=darkseagreen4, key=1, label=double, style=dashed];
n165 -> n88  [color=darkseagreen4, key=1, label=addSql, style=dashed];
n166 -> n94  [color=darkseagreen4, key=1, label=string, style=dashed];
n167 -> n94  [color=darkseagreen4, key=1, label=string, style=dashed];
n168 -> n100  [color=darkseagreen4, key=1, label=string, style=dashed];
n169 -> n100  [color=darkseagreen4, key=1, label=string, style=dashed];
n170 -> n106  [color=darkseagreen4, key=1, label=string, style=dashed];
n171 -> n106  [color=darkseagreen4, key=1, label=string, style=dashed];
n172 -> n113  [color=darkseagreen4, key=1, label=int, style=dashed];
n173 -> n113  [color=darkseagreen4, key=1, label=int, style=dashed];
n174 -> n113  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
n175 -> n121  [color=darkseagreen4, key=1, label=string, style=dashed];
n175 -> n123  [color=darkseagreen4, key=1, label=string, style=dashed];
n176 -> n121  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n176 -> n123  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n177 -> n123  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
n178 -> n131  [color=darkseagreen4, key=1, label=string, style=dashed];
n178 -> n133  [color=darkseagreen4, key=1, label=string, style=dashed];
n179 -> n131  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n179 -> n133  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n180 -> n133  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
n181 -> n139  [color=darkseagreen4, key=1, label=string, style=dashed];
n182 -> n139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n4 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n14  [color=darkorchid, key=3, label="method methodReturn bool Commit", style=bold];
n9 -> n10  [key=0, style=solid];
n9 -> n16  [key=2, style=dotted];
n9 -> n17  [key=2, style=dotted];
n9 -> n13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n10 -> n11  [key=0, style=solid];
n10 -> n18  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n20  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n12 -> n11  [key=0, style=solid];
n12 -> n19  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n15 -> n8  [color=blue, key=0, style=bold];
n21 -> n22  [key=0, style=solid];
n21 -> n26  [color=darkseagreen4, key=1, label=string, style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n22 -> n25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n26 -> n29  [key=2, style=dotted];
n23 -> n21  [color=blue, key=0, style=bold];
n24 -> n141  [key=0, style=solid];
n24 -> n22  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n31  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n37  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n44  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n51  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n57  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n63  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n69  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n75  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n85  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n91  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n97  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n103  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n110  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n118  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n128  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n24 -> n136  [color=darkorchid, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
n25 -> n26  [key=0, style=solid];
n27 -> n25  [color=blue, key=0, style=bold];
n30 -> n31  [key=0, style=solid];
n30 -> n34  [color=darkseagreen4, key=1, label=string, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n24  [key=2, style=dotted];
n31 -> n33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n29  [key=2, style=dotted];
n32 -> n30  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n35 -> n33  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n36 -> n40  [color=darkseagreen4, key=1, label=string, style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n24  [key=2, style=dotted];
n37 -> n39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=2, style=dotted];
n40 -> n29  [key=2, style=dotted];
n38 -> n36  [color=blue, key=0, style=bold];
n39 -> n40  [key=0, style=solid];
n41 -> n39  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n43 -> n47  [color=darkseagreen4, key=1, label=string, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n24  [key=2, style=dotted];
n44 -> n46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n47 -> n48  [key=0, style=solid];
n47 -> n42  [key=2, style=dotted];
n47 -> n29  [key=2, style=dotted];
n45 -> n43  [color=blue, key=0, style=bold];
n46 -> n47  [key=0, style=solid];
n48 -> n46  [color=blue, key=0, style=bold];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [color=darkseagreen4, key=1, label=string, style=dashed];
n49 -> n54  [color=darkseagreen4, key=1, label=string, style=dashed];
n50 -> n51  [key=0, style=solid];
n50 -> n54  [color=darkseagreen4, key=1, label=enqueueJobSql, style=dashed];
n50 -> n50  [color=darkorchid, key=3, label="Local variable string enqueueJobSql", style=bold];
n51 -> n52  [key=0, style=solid];
n51 -> n24  [key=2, style=dotted];
n51 -> n53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n29  [key=2, style=dotted];
n52 -> n49  [color=blue, key=0, style=bold];
n53 -> n54  [key=0, style=solid];
n55 -> n53  [color=blue, key=0, style=bold];
n56 -> n57  [key=0, style=solid];
n56 -> n60  [color=darkseagreen4, key=1, label=string, style=dashed];
n57 -> n58  [key=0, style=solid];
n57 -> n24  [key=2, style=dotted];
n57 -> n59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n60 -> n61  [key=0, style=solid];
n60 -> n29  [key=2, style=dotted];
n58 -> n56  [color=blue, key=0, style=bold];
n59 -> n60  [key=0, style=solid];
n61 -> n59  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n62 -> n66  [color=darkseagreen4, key=1, label=string, style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n24  [key=2, style=dotted];
n63 -> n65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n66 -> n67  [key=0, style=solid];
n66 -> n28  [key=2, style=dotted];
n66 -> n29  [key=2, style=dotted];
n64 -> n62  [color=blue, key=0, style=bold];
n65 -> n66  [key=0, style=solid];
n67 -> n65  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n68 -> n72  [color=darkseagreen4, key=1, label=string, style=dashed];
n69 -> n70  [key=0, style=solid];
n69 -> n24  [key=2, style=dotted];
n69 -> n71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n72 -> n73  [key=0, style=solid];
n72 -> n29  [key=2, style=dotted];
n70 -> n68  [color=blue, key=0, style=bold];
n71 -> n72  [key=0, style=solid];
n73 -> n71  [color=blue, key=0, style=bold];
n74 -> n75  [key=0, style=solid];
n74 -> n78  [color=darkseagreen4, key=1, label=string, style=dashed];
n75 -> n76  [key=0, style=solid];
n75 -> n24  [key=2, style=dotted];
n75 -> n77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n78 -> n79  [key=0, style=solid];
n78 -> n28  [key=2, style=dotted];
n78 -> n29  [key=2, style=dotted];
n76 -> n74  [color=blue, key=0, style=bold];
n77 -> n78  [key=0, style=solid];
n79 -> n77  [color=blue, key=0, style=bold];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n83  [key=2, style=dotted];
n82 -> n80  [color=blue, key=0, style=bold];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [color=darkseagreen4, key=1, label=string, style=dashed];
n83 -> n88  [color=darkseagreen4, key=1, label=string, style=dashed];
n83 -> n80  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n83 -> n81  [color=darkorchid, key=3, label="Parameter variable double score", style=bold];
n84 -> n85  [key=0, style=solid];
n84 -> n88  [color=darkseagreen4, key=1, label=addSql, style=dashed];
n84 -> n84  [color=darkorchid, key=3, label="Local variable string addSql", style=bold];
n85 -> n86  [key=0, style=solid];
n85 -> n24  [key=2, style=dotted];
n85 -> n87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n88 -> n89  [key=0, style=solid];
n88 -> n29  [key=2, style=dotted];
n86 -> n83  [color=blue, key=0, style=bold];
n87 -> n88  [key=0, style=solid];
n89 -> n87  [color=blue, key=0, style=bold];
n90 -> n91  [key=0, style=solid];
n90 -> n94  [color=darkseagreen4, key=1, label=string, style=dashed];
n91 -> n92  [key=0, style=solid];
n91 -> n24  [key=2, style=dotted];
n91 -> n93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n94 -> n95  [key=0, style=solid];
n94 -> n29  [key=2, style=dotted];
n92 -> n90  [color=blue, key=0, style=bold];
n93 -> n94  [key=0, style=solid];
n95 -> n93  [color=blue, key=0, style=bold];
n96 -> n97  [key=0, style=solid];
n96 -> n100  [color=darkseagreen4, key=1, label=string, style=dashed];
n97 -> n98  [key=0, style=solid];
n97 -> n24  [key=2, style=dotted];
n97 -> n99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n100 -> n101  [key=0, style=solid];
n100 -> n29  [key=2, style=dotted];
n98 -> n96  [color=blue, key=0, style=bold];
n99 -> n100  [key=0, style=solid];
n101 -> n99  [color=blue, key=0, style=bold];
n102 -> n103  [key=0, style=solid];
n102 -> n106  [color=darkseagreen4, key=1, label=string, style=dashed];
n103 -> n104  [key=0, style=solid];
n103 -> n24  [key=2, style=dotted];
n103 -> n105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n106 -> n107  [key=0, style=solid];
n106 -> n29  [key=2, style=dotted];
n104 -> n102  [color=blue, key=0, style=bold];
n105 -> n106  [key=0, style=solid];
n107 -> n105  [color=blue, key=0, style=bold];
n108 -> n109  [key=0, style=solid];
n108 -> n110  [color=darkseagreen4, key=1, label=int, style=dashed];
n108 -> n113  [color=darkseagreen4, key=1, label=int, style=dashed];
n109 -> n110  [key=0, style=solid];
n109 -> n113  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
n109 -> n109  [color=darkorchid, key=3, label="Local variable string trimSql", style=bold];
n110 -> n111  [key=0, style=solid];
n110 -> n24  [key=2, style=dotted];
n110 -> n112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n113 -> n114  [key=0, style=solid];
n113 -> n29  [key=2, style=dotted];
n111 -> n108  [color=blue, key=0, style=bold];
n112 -> n113  [key=0, style=solid];
n114 -> n112  [color=blue, key=0, style=bold];
n115 -> n116  [key=0, style=solid];
n115 -> n118  [color=darkseagreen4, key=1, label=string, style=dashed];
n115 -> n121  [color=darkseagreen4, key=1, label=string, style=dashed];
n115 -> n123  [color=darkseagreen4, key=1, label=string, style=dashed];
n116 -> n117  [key=0, style=solid];
n116 -> n118  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
n116 -> n123  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
n116 -> n116  [color=darkorchid, key=3, label="Local variable string insertSql", style=bold];
n118 -> n119  [key=0, style=solid];
n118 -> n24  [key=2, style=dotted];
n118 -> n120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n121 -> n122  [key=0, style=solid];
n121 -> n29  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n29  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n121  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n117 -> n123  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n117 -> n117  [color=darkorchid, key=3, label="Local variable string updateSql", style=bold];
n119 -> n115  [color=blue, key=0, style=bold];
n120 -> n121  [key=0, style=solid];
n120 -> n123  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=0, style=solid];
n124 -> n120  [color=blue, key=0, style=bold];
n125 -> n126  [key=0, style=solid];
n125 -> n128  [color=darkseagreen4, key=1, label=string, style=dashed];
n125 -> n131  [color=darkseagreen4, key=1, label=string, style=dashed];
n125 -> n133  [color=darkseagreen4, key=1, label=string, style=dashed];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
n126 -> n133  [color=darkseagreen4, key=1, label=insertSql, style=dashed];
n126 -> n116  [color=darkorchid, key=3, label="Local variable string insertSql", style=bold];
n128 -> n129  [key=0, style=solid];
n128 -> n24  [key=2, style=dotted];
n128 -> n130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n131 -> n132  [key=0, style=solid];
n131 -> n29  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n29  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n131  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n127 -> n133  [color=darkseagreen4, key=1, label=updateSql, style=dashed];
n127 -> n127  [color=darkorchid, key=3, label="Local variable string updateSql", style=bold];
n129 -> n125  [color=blue, key=0, style=bold];
n130 -> n131  [key=0, style=solid];
n130 -> n133  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=0, style=solid];
n134 -> n130  [color=blue, key=0, style=bold];
n135 -> n136  [key=0, style=solid];
n135 -> n139  [color=darkseagreen4, key=1, label=string, style=dashed];
n136 -> n137  [key=0, style=solid];
n136 -> n24  [key=2, style=dotted];
n136 -> n138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n139 -> n140  [key=0, style=solid];
n139 -> n28  [key=2, style=dotted];
n139 -> n29  [key=2, style=dotted];
n137 -> n135  [color=blue, key=0, style=bold];
n138 -> n139  [key=0, style=solid];
n140 -> n138  [color=blue, key=0, style=bold];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=2, style=dotted];
n142 -> n24  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m1_0 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m1_0 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m1_0 -> m1_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_2 -> m1_14  [key=0, style=solid];
m1_2 -> n5  [key=2, style=dotted];
m1_4 -> m1_14  [key=0, style=solid];
m1_4 -> n5  [key=2, style=dotted];
m1_6 -> m1_14  [key=0, style=solid];
m1_6 -> n5  [key=2, style=dotted];
m1_8 -> m1_14  [key=0, style=solid];
m1_8 -> n5  [key=2, style=dotted];
m1_14 -> m1_0  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_26 -> m1_22  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_31  [key=2, style=dotted];
m1_27 -> m1_29  [key=0, style=solid];
m1_27 -> n5  [key=2, style=dotted];
m1_29 -> m1_25  [color=blue, key=0, style=bold];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_36  [key=2, style=dotted];
m1_33 -> m1_37  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_38  [key=2, style=dotted];
m1_35 -> m1_32  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=2, style=dotted];
m1_20 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_21  [key=0, style=solid];
m1_19 -> n5  [key=2, style=dotted];
m1_21 -> m1_17  [color=blue, key=0, style=bold];
m1_39 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_12  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_13  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_20  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_28  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_33  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m1_39 -> m1_34  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_5 -> m2_2  [color=blue, key=0, style=bold];
m2_25 -> m2_25  [color=darkorchid, key=3, label="Property variable bool IsFinal", style=bold];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_16  [color=green, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_15  [color=green, key=1, label=scheduledState, style=dashed];
m2_16 -> m2_17  [color=green, key=0, style=solid];
m2_16 -> m2_21  [color=green, key=2, style=dotted];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_15  [color=green, key=0, style=solid];
m2_15 -> m2_16  [color=green, key=0, style=solid];
m2_15 -> m2_20  [color=green, key=2, style=dotted];
m2_14 -> m2_17  [color=green, key=0, style=solid];
m2_14 -> m2_18  [color=green, key=2, style=dotted];
m2_14 -> m2_19  [color=green, key=2, style=dotted];
m2_17 -> m2_11  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_9  [color=green, key=2, style=dotted];
m2_7 -> m2_10  [color=green, key=2, style=dotted];
m2_8 -> m2_6  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_24 -> m2_22  [color=blue, key=0, style=bold];
m2_26 -> m2_3  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m2_26 -> m2_4  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m2_26 -> m2_7  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m4_18 -> m4_24  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_24 -> m4_65  [color=green, key=0, style=solid];
m4_24 -> m4_66  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=0, style=solid];
m4_24 -> m4_29  [key=2, style=dotted];
m4_65 -> m4_66  [color=green, key=0, style=solid];
m4_65 -> m4_67  [color=green, key=0, style=solid];
m4_65 -> m4_31  [color=green, key=2, style=dotted];
m4_66 -> m4_65  [color=green, key=0, style=solid];
m4_66 -> m4_68  [key=2, style=dotted];
m4_67 -> m4_24  [color=blue, key=0, style=bold];
m4_37 -> m4_34  [color=blue, key=0, style=bold];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m4_45 -> m4_48  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m4_45 -> m4_51  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m4_45 -> m4_54  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m4_45 -> m4_55  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m4_45 -> m4_59  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m4_45 -> m4_50  [color=darkorchid, key=3, label="method methodReturn HangFire.Filters.CreatedContext InvokeClientFilter", style=bold];
m4_48 -> m4_39  [key=2, style=dotted];
m4_48 -> m4_61  [key=0, style=solid];
m4_54 -> m4_39  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m4_54 -> m4_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m4_54 -> m4_60  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_62  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_58  [key=0, style=solid];
m4_51 -> m4_63  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_64  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_64  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_58  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_57 -> m4_61  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_49  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=0, style=solid];
m4_61 -> m4_45  [color=blue, key=0, style=bold];
m4_29 -> m4_22  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=0, style=solid];
m4_21 -> m4_14  [color=blue, key=0, style=bold];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_23 -> m4_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_23 -> m4_14  [color=darkorchid, key=3, label="Parameter variable string queue", style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=0, style=solid];
m4_26 -> m4_30  [key=2, style=dotted];
m4_26 -> m4_26  [color=darkorchid, key=3, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation", style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_31  [key=2, style=dotted];
m4_27 -> m4_32  [key=2, style=dotted];
m4_27 -> m4_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_25 -> m4_28  [key=0, style=solid];
m4_25 -> m4_18  [key=2, style=dotted];
m4_25 -> m4_27  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_30  [key=2, style=dotted];
m4_25 -> m4_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m4_28 -> m4_23  [color=blue, key=0, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_33  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=0, style=solid];
m4_22 -> m4_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m4_22 -> m4_25  [key=0, style=solid];
m4_22 -> m4_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m4_22 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m4_22 -> m4_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m4_5 -> m4_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_41  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m4_38 -> m4_9  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
m4_38 -> m4_4  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_4  [key=2, style=dotted];
m4_41 -> m4_40  [color=blue, key=0, style=bold];
m4_40 -> m4_42  [key=0, style=solid];
m4_40 -> m4_27  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m4_42 -> m4_38  [color=blue, key=0, style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_14 -> m4_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_22  [key=2, style=dotted];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_23  [key=2, style=dotted];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m4_17 -> m4_4  [color=blue, key=0, style=bold];
m4_15 -> m4_22  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_21  [key=0, style=solid];
m4_15 -> m4_23  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_4  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_35 -> m4_38  [key=2, style=dotted];
m4_36 -> m4_33  [color=blue, key=0, style=bold];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_39  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=2, style=dotted];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_6 -> m4_8  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_4 -> m4_7  [key=0, style=solid];
m4_4 -> m4_10  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m4_4 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m4_4 -> m4_13  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m4_4 -> m4_0  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
m4_4 -> m4_38  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.JobMethod method", style=bold];
m4_4 -> m4_14  [color=darkorchid, key=3, label="method methodReturn string GetQueue", style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=0, style=solid];
m4_7 -> m4_12  [key=0, style=solid];
m4_7 -> n5  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_19  [key=2, style=dotted];
m4_11 -> m4_20  [key=2, style=dotted];
m4_11 -> m4_21  [key=2, style=dotted];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_19  [key=2, style=dotted];
m4_13 -> m4_20  [key=2, style=dotted];
m4_13 -> m4_21  [key=2, style=dotted];
m4_8 -> m4_17  [key=0, style=solid];
m4_8 -> m4_18  [key=2, style=dotted];
m4_8 -> m4_10  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_12  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_9 -> m4_14  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m4_9 -> m4_9  [color=darkorchid, key=3, label="Local variable HangFire.QueueAttribute attribute", style=bold];
m4_9 -> n5  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_14  [key=0, style=solid];
m4_12 -> m4_5  [color=blue, key=0, style=bold];
m4_69 -> m4_18  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m4_69 -> m4_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m4_69 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m4_69 -> m4_15  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m4_70 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m4_71 -> m4_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m4_72 -> m4_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m4_73 -> m4_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m4_74 -> m4_43  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_50  [key=2, style=dotted];
m5_49 -> m5_47  [color=blue, key=0, style=bold];
m5_51 -> m5_52  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_62  [key=2, style=dotted];
m5_54 -> m5_57  [color=darkseagreen4, key=1, label=worker, style=dashed];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_63  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_65  [key=2, style=dotted];
m5_60 -> m5_66  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_53  [key=0, style=solid];
m5_57 -> m5_52  [key=0, style=solid];
m5_57 -> m5_64  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_59  [key=0, style=solid];
m5_52 -> m5_61  [key=0, style=solid];
m5_52 -> m5_58  [key=0, style=solid];
m5_58 -> m5_61  [key=0, style=solid];
m5_61 -> m5_51  [color=blue, key=0, style=bold];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_24 -> m5_25  [color=green, key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_29  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=0, style=solid];
m5_27 -> m5_26  [key=0, style=solid];
m5_27 -> m5_30  [key=2, style=dotted];
m5_28 -> m5_23  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m5_0 -> m5_9  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_13  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_14  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_15  [key=2, style=dotted];
m5_3 -> m5_16  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_17  [key=2, style=dotted];
m5_6 -> m5_18  [key=2, style=dotted];
m5_6 -> m5_19  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_16  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_20  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_21  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_22  [key=2, style=dotted];
m5_4 -> m5_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_8  [key=0, style=solid];
m5_5 -> m5_5  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m5_7 -> m5_5  [key=0, style=solid];
m5_7 -> m5_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_12 -> m5_0  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=0, style=solid];
m5_33 -> m5_23  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_42  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_16  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_44  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_45  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_46  [key=2, style=dotted];
m5_36 -> m5_35  [key=0, style=solid];
m5_36 -> m5_43  [key=2, style=dotted];
m5_41 -> m5_31  [color=blue, key=0, style=bold];
m5_67 -> m5_24  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_6  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_25  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_26  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_32  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_33  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_35  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_37  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_54  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_67 -> m5_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=2, style=dotted];
m6_6 -> m6_4  [key=2, style=dotted];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_3  [key=2, style=dotted];
m6_14 -> m6_18  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_12 -> m6_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_3  [key=2, style=dotted];
m6_13 -> m6_17  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_3  [key=2, style=dotted];
m6_15 -> m6_19  [key=2, style=dotted];
m6_15 -> m6_20  [key=2, style=dotted];
m6_15 -> m6_21  [key=2, style=dotted];
m6_16 -> m6_12  [color=blue, key=0, style=bold];
m6_23 -> m6_24  [color=green, key=0, style=solid];
m6_23 -> m6_3  [color=green, key=2, style=dotted];
m6_23 -> m6_18  [color=green, key=2, style=dotted];
m6_22 -> m6_23  [color=green, key=0, style=solid];
m6_24 -> m6_22  [color=blue, key=0, style=bold];
m6_9 -> m6_10  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_8  [key=2, style=dotted];
m6_10 -> m6_4  [key=2, style=dotted];
m6_11 -> m6_9  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_3  [key=2, style=dotted];
m6_26 -> m6_29  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=2, style=dotted];
m6_28 -> m6_25  [color=blue, key=0, style=bold];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> n42  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_18 -> m7_16  [color=blue, key=0, style=bold];
m7_23 -> m7_24  [color=green, key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_15 -> m7_16  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_8  [key=2, style=dotted];
m7_17 -> m7_19  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=2, style=dotted];
m7_13 -> m7_18  [key=2, style=dotted];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_14 -> m7_19  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_27 -> m7_28  [color=red, key=0, style=solid];
m7_27 -> m7_20  [color=red, key=2, style=dotted];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_30  [color=green, key=0, style=solid];
m7_28 -> m7_24  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_20  [color=green, key=2, style=dotted];
m7_30 -> m7_31  [color=green, key=0, style=solid];
m7_30 -> m7_37  [color=green, key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_38  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_39  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_40  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_41  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_42  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_27  [color=blue, key=0, style=bold];
m7_26 -> m7_28  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_9  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=2, style=dotted];
m7_3 -> m7_7  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_10  [color=darkseagreen4, key=1, label=elapsedTime, style=dashed];
m7_10 -> m7_17  [key=2, style=dotted];
m7_10 -> m7_15  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_11 -> m7_8  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_39 -> m7_43  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_51  [key=2, style=dotted];
m7_43 -> m7_46  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_52  [key=2, style=dotted];
m7_44 -> m7_46  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_48  [key=0, style=solid];
m7_45 -> m7_50  [key=0, style=solid];
m7_45 -> m7_47  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_47 -> m7_45  [key=0, style=solid];
m7_47 -> m7_54  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_55  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_53  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_50 -> m7_39  [color=blue, key=0, style=bold];
m7_56 -> m7_57  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_61  [key=0, style=solid];
m7_60 -> m7_59  [key=0, style=solid];
m7_60 -> m7_69  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_70  [key=2, style=dotted];
m7_61 -> m7_63  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_62 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_71  [key=2, style=dotted];
m7_64 -> m7_57  [key=0, style=solid];
m7_64 -> m7_72  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_73  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_65  [key=0, style=solid];
m7_57 -> m7_66  [key=0, style=solid];
m7_57 -> m7_68  [key=0, style=solid];
m7_66 -> m7_67  [key=0, style=solid];
m7_65 -> m7_68  [key=0, style=solid];
m7_68 -> m7_56  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_23  [key=2, style=dotted];
m7_21 -> m7_12  [key=2, style=dotted];
m7_22 -> m7_23  [color=green, key=0, style=solid];
m7_22 -> m7_26  [color=green, key=2, style=dotted];
m7_22 -> m7_20  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_19  [color=green, key=2, style=dotted];
m7_24 -> m7_27  [color=red, key=1, label=string, style=dashed];
m7_25 -> m7_20  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [color=red, key=0, style=solid];
m7_25 -> m7_29  [key=2, style=dotted];
m7_74 -> m7_21  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_22  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_23  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_24  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_28  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_29  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_30  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_3  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_4  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_10  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_12  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_13  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_14  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_31  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_32  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_33  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_34  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_35  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_36  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_43  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_44  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_45  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_47  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_49  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_58  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_59  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_60  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_61  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_62  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_63  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_64  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_74 -> m7_67  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m8_83 -> m8_84  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_48  [key=2, style=dotted];
m8_84 -> m8_86  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_85 -> m8_13  [key=2, style=dotted];
m8_85 -> m8_14  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> n42  [key=2, style=dotted];
m8_85 -> m8_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_89  [key=2, style=dotted];
m8_87 -> m8_28  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_88 -> m8_83  [color=blue, key=0, style=bold];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_42  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_15  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_48  [key=2, style=dotted];
m8_95 -> m8_97  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_96 -> m8_13  [key=2, style=dotted];
m8_96 -> m8_14  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> n42  [key=2, style=dotted];
m8_96 -> m8_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_89  [key=2, style=dotted];
m8_98 -> m8_28  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_94  [color=blue, key=0, style=bold];
m8_75 -> m8_76  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_48  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_69  [key=2, style=dotted];
m8_78 -> m8_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_68  [key=2, style=dotted];
m8_79 -> m8_75  [color=blue, key=0, style=bold];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_56  [color=blue, key=0, style=bold];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_48  [key=2, style=dotted];
m8_58 -> m8_60  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_58 -> m8_61  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_58 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_19  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_58 -> m8_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.SucceededStateHandlerFacts", style=dashed];
m8_59 -> m8_10  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_61  [color=darkseagreen4, key=1, label=newState, style=dashed];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_49  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_57  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_22  [key=2, style=dotted];
m8_50 -> m8_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_48  [key=2, style=dotted];
m8_51 -> m8_55  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_51 -> m8_47  [color=blue, key=0, style=bold];
m8_52 -> m8_27  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_53 -> m8_50  [color=blue, key=0, style=bold];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_55  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_14  [key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_48  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_49  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_69  [key=2, style=dotted];
m8_115 -> m8_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_117  [key=2, style=dotted];
m8_113 -> m8_110  [key=2, style=dotted];
m8_116 -> m8_111  [color=blue, key=0, style=bold];
m8_121 -> m8_122  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_48  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_69  [key=2, style=dotted];
m8_128 -> m8_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_69  [key=2, style=dotted];
m8_129 -> m8_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_124 -> m8_13  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_132  [key=2, style=dotted];
m8_124 -> m8_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_124 -> m8_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_133  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_49  [key=2, style=dotted];
m8_122 -> m8_124  [color=darkseagreen4, key=1, label=newState, style=dashed];
m8_122 -> m8_10  [key=2, style=dotted];
m8_122 -> m8_127  [color=darkseagreen4, key=1, label=newState, style=dashed];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_139  [color=darkseagreen4, key=1, label=newState, style=dashed];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_126  [color=darkseagreen4, key=1, label=filter, style=dashed];
m8_123 -> m8_131  [key=2, style=dotted];
m8_130 -> m8_121  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_14  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_21  [key=2, style=dotted];
m8_30 -> m8_32  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_22  [key=2, style=dotted];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_31 -> m8_29  [color=blue, key=0, style=bold];
m8_32 -> m8_28  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_6 -> m8_13  [color=green, key=2, style=dotted];
m8_6 -> m8_14  [color=green, key=2, style=dotted];
m8_6 -> m8_19  [color=green, key=1, label="lambda expression", style=dashed];
m8_26 -> m8_23  [color=blue, key=0, style=bold];
m8_21 -> m8_19  [color=blue, key=0, style=bold];
m8_7 -> m8_0  [color=blue, key=0, style=bold];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_40  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_14  [key=2, style=dotted];
m8_48 -> m8_149  [key=0, style=solid];
m8_55 -> m8_56  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_21  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_28  [key=2, style=dotted];
m8_0 -> m8_1  [key=0, style=solid];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_5 -> m8_12  [key=2, style=dotted];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_9  [key=2, style=dotted];
m8_2 -> m8_7  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_10  [key=2, style=dotted];
m8_3 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_9  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_8  [key=2, style=dotted];
m8_1 -> m8_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1 -> m8_6  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_13 -> m8_10  [color=blue, key=0, style=bold];
m8_103 -> m8_104  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_48  [key=2, style=dotted];
m8_104 -> m8_108  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_105 -> m8_27  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_106 -> m8_103  [color=blue, key=0, style=bold];
m8_36 -> m8_33  [color=blue, key=0, style=bold];
m8_107 -> m8_108  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=2, style=dotted];
m8_24 -> m8_27  [key=2, style=dotted];
m8_24 -> m8_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_25 -> m8_23  [color=blue, key=0, style=bold];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_28  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_36  [key=2, style=dotted];
m8_34 -> m8_27  [key=2, style=dotted];
m8_34 -> m8_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_35 -> m8_33  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_28  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_28  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_46  [key=2, style=dotted];
m8_44 -> m8_49  [key=2, style=dotted];
m8_45 -> m8_43  [color=blue, key=0, style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_28  [key=2, style=dotted];
m8_54 -> m8_52  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_19 -> m8_20  [color=green, key=0, style=solid];
m8_19 -> m8_22  [key=2, style=dotted];
m8_19 -> m8_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_20 -> m8_21  [color=green, key=0, style=solid];
m8_20 -> m8_22  [color=green, key=2, style=dotted];
m8_20 -> m8_16  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_32  [key=2, style=dotted];
m8_38 -> m8_14  [key=2, style=dotted];
m8_142 -> m8_143  [key=0, style=solid];
m8_142 -> m8_144  [key=2, style=dotted];
m8_119 -> m8_22  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_39 -> m8_37  [color=blue, key=0, style=bold];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_42  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_90 -> m8_91  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_110  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_141 -> m8_142  [key=0, style=solid];
m8_143 -> m8_141  [color=blue, key=0, style=bold];
m8_145 -> m8_146  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_138 -> m8_139  [key=0, style=solid];
m8_120 -> m8_118  [color=blue, key=0, style=bold];
m8_135 -> m8_27  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_137  [key=2, style=dotted];
m8_56 -> m8_54  [color=blue, key=0, style=bold];
m8_56 -> m8_57  [key=0, style=solid];
m8_72 -> m8_70  [color=blue, key=0, style=bold];
m8_71 -> n42  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_74  [key=2, style=dotted];
m8_82 -> m8_80  [color=blue, key=0, style=bold];
m8_81 -> n42  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_74  [key=2, style=dotted];
m8_92 -> m8_90  [color=blue, key=0, style=bold];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_93  [key=2, style=dotted];
m8_102 -> m8_100  [color=blue, key=0, style=bold];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_93  [key=2, style=dotted];
m8_109 -> m8_107  [color=blue, key=0, style=bold];
m8_147 -> m8_145  [color=blue, key=0, style=bold];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_148  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_136 -> m8_134  [color=blue, key=0, style=bold];
m8_140 -> m8_138  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_18  [key=2, style=dotted];
m8_17 -> m8_15  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_14  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_48  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_69  [key=2, style=dotted];
m8_66 -> m8_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_68  [key=2, style=dotted];
m8_67 -> m8_63  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_22  [key=2, style=dotted];
m8_40 -> m8_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_48  [key=2, style=dotted];
m8_41 -> m8_43  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_41 -> m8_44  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_41 -> m8_45  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_41 -> m8_46  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_41 -> m8_37  [color=blue, key=0, style=bold];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_49  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_32  [key=2, style=dotted];
m8_150 -> m8_48  [color=blue, key=0, style=bold];
m8_151 -> m8_6  [color=green, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_38  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_84  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_104  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_125  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_128  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_142  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_129  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_151 -> m8_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m8_152 -> m8_55  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_153 -> m8_108  [color=darkseagreen4, key=1, label=context, style=dashed];
m8_154 -> m8_139  [color=darkseagreen4, key=1, label=newState, style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m9_0 -> m9_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_9  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_10  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_12  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_4 -> m9_6  [color=darkseagreen4, key=1, label=token, style=dashed];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_7 -> m9_0  [color=blue, key=0, style=bold];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_72  [key=2, style=dotted];
m12_57 -> m12_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_48 -> m12_49  [color=red, key=0, style=solid];
m12_48 -> m12_50  [color=red, key=1, label="params string[]", style=dashed];
m12_48 -> m12_56  [color=red, key=1, label=string, style=dashed];
m12_48 -> m12_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_48 -> m12_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_48 -> m12_59  [color=red, key=1, label=string, style=dashed];
m12_48 -> m12_60  [color=red, key=1, label=string, style=dashed];
m12_48 -> m12_61  [color=red, key=1, label=string, style=dashed];
m12_48 -> m12_63  [color=red, key=1, label=string, style=dashed];
m12_48 -> m12_40  [color=darkorchid, key=3, label="method methodReturn bool ApplyState", style=bold];
m12_49 -> m12_50  [color=red, key=0, style=solid];
m12_49 -> m12_43  [color=red, key=2, style=dotted];
m12_49 -> m12_66  [color=red, key=2, style=dotted];
m12_49 -> m12_53  [color=red, key=1, label=oldState, style=dashed];
m12_49 -> m12_54  [color=red, key=1, label=oldState, style=dashed];
m12_49 -> m12_59  [color=red, key=1, label=oldState, style=dashed];
m12_50 -> m12_51  [color=red, key=0, style=solid];
m12_50 -> m12_52  [color=red, key=0, style=solid];
m12_50 -> m12_67  [color=red, key=2, style=dotted];
m12_56 -> m12_57  [color=red, key=0, style=solid];
m12_56 -> m12_71  [color=red, key=2, style=dotted];
m12_59 -> m12_58  [color=red, key=0, style=solid];
m12_59 -> m12_73  [color=red, key=2, style=dotted];
m12_60 -> m12_61  [color=red, key=0, style=solid];
m12_60 -> m12_74  [color=red, key=2, style=dotted];
m12_61 -> m12_62  [color=red, key=0, style=solid];
m12_61 -> m12_75  [color=red, key=2, style=dotted];
m12_63 -> m12_62  [color=red, key=0, style=solid];
m12_63 -> m12_76  [color=red, key=2, style=dotted];
m12_53 -> m12_54  [color=red, key=0, style=solid];
m12_53 -> m12_60  [color=red, key=0, style=solid];
m12_53 -> m12_69  [color=red, key=2, style=dotted];
m12_54 -> m12_55  [color=red, key=0, style=solid];
m12_54 -> m12_70  [color=red, key=2, style=dotted];
m12_54 -> m12_56  [color=red, key=1, label=descriptor, style=dashed];
m12_51 -> m12_65  [color=red, key=0, style=solid];
m12_52 -> m12_53  [color=red, key=0, style=solid];
m12_52 -> m12_68  [key=2, style=dotted];
m12_52 -> m12_56  [color=red, key=1, label=transaction, style=dashed];
m12_52 -> m12_57  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m12_52 -> m12_59  [color=red, key=1, label=transaction, style=dashed];
m12_52 -> m12_60  [color=red, key=1, label=transaction, style=dashed];
m12_52 -> m12_61  [color=red, key=1, label=transaction, style=dashed];
m12_52 -> m12_63  [color=red, key=1, label=transaction, style=dashed];
m12_52 -> m12_64  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_77  [key=2, style=dotted];
m12_55 -> m12_56  [color=red, key=0, style=solid];
m12_55 -> m12_57  [color=red, key=0, style=solid];
m12_58 -> m12_59  [color=red, key=0, style=solid];
m12_58 -> m12_60  [color=red, key=0, style=solid];
m12_62 -> m12_63  [color=red, key=0, style=solid];
m12_62 -> m12_64  [key=0, style=solid];
m12_65 -> m12_48  [color=blue, key=0, style=bold];
m12_47 -> m12_82  [key=0, style=solid];
m12_47 -> m12_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_68  [key=2, style=dotted];
m12_82 -> m12_84  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_74  [key=2, style=dotted];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_77  [key=2, style=dotted];
m12_85 -> m12_47  [color=blue, key=0, style=bold];
m12_7 -> m12_11  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=2, style=dotted];
m12_12 -> m12_7  [color=blue, key=0, style=bold];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_32 -> m12_37  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m12_32 -> m12_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_32 -> m12_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_32 -> m12_41  [color=red, key=1, label=string, style=dashed];
m12_32 -> m12_48  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_35  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_43  [key=2, style=dotted];
m12_35 -> m12_44  [key=2, style=dotted];
m12_35 -> m12_45  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_39  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m12_37 -> m12_40  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_46  [key=2, style=dotted];
m12_38 -> m12_41  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m12_40 -> m12_36  [key=0, style=solid];
m12_40 -> m12_47  [key=2, style=dotted];
m12_41 -> m12_42  [color=red, key=0, style=solid];
m12_41 -> m12_48  [color=red, key=2, style=dotted];
m12_34 -> m12_42  [key=0, style=solid];
m12_34 -> n5  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_41  [color=red, key=0, style=solid];
m12_36 -> m12_38  [color=darkseagreen4, key=1, label=filter, style=dashed];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_36  [key=0, style=solid];
m12_42 -> m12_32  [color=blue, key=0, style=bold];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_18  [color=blue, key=0, style=bold];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_72  [key=2, style=dotted];
m12_91 -> m12_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_86 -> m12_87  [color=red, key=0, style=solid];
m12_86 -> m12_89  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m12_86 -> m12_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_86 -> m12_91  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m12_86 -> m12_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_86 -> m12_92  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m12_86 -> m12_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_86 -> m12_93  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m12_86 -> m12_95  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m12_86 -> m12_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_87 -> m12_88  [color=red, key=0, style=solid];
m12_87 -> m12_97  [color=red, key=2, style=dotted];
m12_87 -> m12_89  [color=red, key=1, label=properties, style=dashed];
m12_87 -> m12_92  [color=red, key=1, label=properties, style=dashed];
m12_87 -> m12_104  [color=red, key=1, label=properties, style=dashed];
m12_87 -> m12_93  [color=red, key=1, label=properties, style=dashed];
m12_87 -> m12_94  [color=red, key=1, label=properties, style=dashed];
m12_87 -> m12_95  [color=red, key=1, label=properties, style=dashed];
m12_87 -> m12_108  [color=red, key=1, label=properties, style=dashed];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_13  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_93  [key=0, style=solid];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_72  [key=2, style=dotted];
m12_92 -> m12_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_13  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_72  [key=2, style=dotted];
m12_95 -> m12_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_94  [color=darkseagreen4, key=1, label=now, style=dashed];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_98  [key=2, style=dotted];
m12_94 -> m12_13  [key=2, style=dotted];
m12_96 -> m12_86  [color=blue, key=0, style=bold];
m12_107 -> m12_108  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_43  [key=2, style=dotted];
m12_79 -> m12_81  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_80 -> m12_78  [color=blue, key=0, style=bold];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_43  [key=2, style=dotted];
m12_100 -> m12_102  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_43  [key=2, style=dotted];
m12_104 -> m12_106  [key=2, style=dotted];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_43  [key=2, style=dotted];
m12_108 -> m12_110  [key=2, style=dotted];
m12_108 -> m12_111  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_101 -> m12_99  [color=blue, key=0, style=bold];
m12_105 -> m12_103  [color=blue, key=0, style=bold];
m12_109 -> m12_107  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_6  [key=2, style=dotted];
m12_1 -> m12_7  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_8  [key=2, style=dotted];
m12_2 -> m12_7  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_9  [key=2, style=dotted];
m12_3 -> m12_7  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_10  [key=2, style=dotted];
m12_4 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_0  [color=blue, key=0, style=bold];
m12_14 -> m12_15  [color=red, key=0, style=solid];
m12_15 -> m12_16  [color=red, key=0, style=solid];
m12_15 -> m12_17  [color=red, key=2, style=dotted];
m12_16 -> m12_14  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m12_20 -> m12_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m12_20 -> m12_27  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m12_20 -> m12_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateChangedFilter>", style=dashed];
m12_20 -> m12_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.IStateAppliedFilter>", style=dashed];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_29 -> m12_30  [key=0, style=solid];
m12_22 -> m12_30  [key=0, style=solid];
m12_22 -> n5  [key=2, style=dotted];
m12_24 -> m12_30  [key=0, style=solid];
m12_24 -> n5  [key=2, style=dotted];
m12_26 -> m12_30  [key=0, style=solid];
m12_26 -> n5  [key=2, style=dotted];
m12_30 -> m12_20  [color=blue, key=0, style=bold];
m12_112 -> m12_27  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_28  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_29  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_35  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_36  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_40  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_41  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_49  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_52  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_54  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_58  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_60  [color=red, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_62  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_82  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_112 -> m12_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m12_113 -> m12_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_114 -> m12_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_114 -> m12_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_114 -> m12_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_115 -> m12_100  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m12_116 -> m12_104  [color=darkseagreen4, key=1, label=properties, style=dashed];
m12_116 -> m12_108  [color=darkseagreen4, key=1, label=properties, style=dashed];
m14_28 -> m14_29  [color=red, key=0, style=solid];
m14_28 -> m14_32  [color=red, key=1, label=string, style=dashed];
m14_29 -> m14_30  [color=red, key=0, style=solid];
m14_29 -> m14_9  [color=red, key=2, style=dotted];
m14_29 -> m14_31  [color=red, key=1, label="lambda expression", style=dashed];
m14_30 -> m14_28  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [color=red, key=0, style=solid];
m14_15 -> m14_19  [color=red, key=1, label=string, style=dashed];
m14_16 -> m14_17  [color=red, key=0, style=solid];
m14_16 -> m14_9  [color=red, key=2, style=dotted];
m14_16 -> m14_18  [color=red, key=1, label="lambda expression", style=dashed];
m14_17 -> m14_15  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [color=red, key=0, style=solid];
m14_6 -> m14_11  [color=red, key=1, label=string, style=dashed];
m14_7 -> m14_8  [color=red, key=0, style=solid];
m14_7 -> m14_9  [color=red, key=2, style=dotted];
m14_7 -> m14_10  [color=red, key=1, label="lambda expression", style=dashed];
m14_8 -> m14_6  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [color=red, key=0, style=solid];
m14_0 -> m14_3  [color=red, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_1 -> m14_2  [color=red, key=0, style=solid];
m14_1 -> m14_3  [color=red, key=0, style=solid];
m14_3 -> m14_4  [color=red, key=0, style=solid];
m14_2 -> m14_4  [color=red, key=0, style=solid];
m14_2 -> m14_5  [color=red, key=2, style=dotted];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_31 -> m14_32  [color=red, key=0, style=solid];
m14_11 -> m14_12  [color=red, key=0, style=solid];
m14_11 -> n28  [color=red, key=2, style=dotted];
m14_11 -> m14_14  [color=red, key=2, style=dotted];
m14_10 -> m14_11  [color=red, key=0, style=solid];
m14_12 -> m14_10  [color=blue, key=0, style=bold];
m14_19 -> m14_20  [color=red, key=0, style=solid];
m14_19 -> m14_14  [color=red, key=2, style=dotted];
m14_18 -> m14_19  [color=red, key=0, style=solid];
m14_20 -> m14_18  [color=blue, key=0, style=bold];
m14_25 -> m14_26  [color=red, key=0, style=solid];
m14_25 -> m14_27  [color=red, key=2, style=dotted];
m14_25 -> m14_14  [color=red, key=2, style=dotted];
m14_24 -> m14_25  [color=red, key=0, style=solid];
m14_26 -> m14_24  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [color=red, key=0, style=solid];
m14_32 -> m14_27  [color=red, key=2, style=dotted];
m14_32 -> m14_14  [color=red, key=2, style=dotted];
m14_33 -> m14_31  [color=blue, key=0, style=bold];
m14_21 -> m14_22  [color=red, key=0, style=solid];
m14_21 -> m14_25  [color=red, key=1, label=string, style=dashed];
m14_22 -> m14_23  [color=red, key=0, style=solid];
m14_22 -> m14_9  [color=red, key=2, style=dotted];
m14_22 -> m14_24  [color=red, key=1, label="lambda expression", style=dashed];
m14_23 -> m14_21  [color=blue, key=0, style=bold];
m14_34 -> m14_3  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m14_34 -> m14_7  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m14_34 -> m14_16  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m14_34 -> m14_22  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m14_34 -> m14_29  [color=red, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m14_35 -> m14_11  [color=red, key=1, label=string, style=dashed];
m14_36 -> m14_11  [color=red, key=1, label="System.TimeSpan", style=dashed];
m14_37 -> m14_19  [color=red, key=1, label=string, style=dashed];
m14_38 -> m14_25  [color=red, key=1, label=string, style=dashed];
m14_39 -> m14_25  [color=red, key=1, label=string, style=dashed];
m14_40 -> m14_25  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m14_41 -> m14_32  [color=red, key=1, label=string, style=dashed];
m14_42 -> m14_32  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m15_0 -> m15_4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_2 -> m15_5  [key=0, style=solid];
m15_2 -> n5  [key=2, style=dotted];
m15_5 -> m15_0  [color=blue, key=0, style=bold];
m15_24 -> m15_31  [color=red, key=0, style=solid];
m15_31 -> m15_32  [color=red, key=0, style=solid];
m15_31 -> m15_33  [color=red, key=2, style=dotted];
m15_31 -> m15_34  [color=red, key=2, style=dotted];
m15_32 -> m15_24  [color=blue, key=0, style=bold];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_7 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_17  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_19  [key=2, style=dotted];
m15_12 -> m15_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_19  [key=2, style=dotted];
m15_15 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_9 -> m15_10  [color=red, key=0, style=solid];
m15_9 -> m15_9  [color=darkorchid, key=3, label="Local variable int removedCount", style=bold];
m15_10 -> m15_11  [color=red, key=0, style=solid];
m15_10 -> m15_18  [color=red, key=2, style=dotted];
m15_10 -> m15_21  [color=red, key=1, label="lambda expression", style=dashed];
m15_10 -> m15_14  [color=red, key=1, label=removedCount, style=dashed];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_14  [key=0, style=solid];
m15_14 -> m15_9  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_20  [key=2, style=dotted];
m15_13 -> m15_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_13 -> m15_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_16 -> m15_7  [color=blue, key=0, style=bold];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=2, style=dotted];
m15_27 -> m15_30  [key=2, style=dotted];
m15_28 -> m15_26  [color=blue, key=0, style=bold];
m15_21 -> m15_22  [color=red, key=0, style=solid];
m15_22 -> m15_23  [color=red, key=0, style=solid];
m15_22 -> m15_24  [color=red, key=2, style=dotted];
m15_22 -> m15_25  [color=red, key=2, style=dotted];
m15_23 -> m15_21  [color=blue, key=0, style=bold];
m15_35 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_35 -> m15_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_35 -> m15_10  [color=red, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_35 -> m15_22  [color=red, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_35 -> m15_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m15_35 -> m15_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m20_0 -> m20_1  [color=green, key=0, style=solid];
m20_1 -> m20_2  [color=green, key=0, style=solid];
m20_1 -> m20_3  [color=green, key=2, style=dotted];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m20_4 -> m20_5  [color=green, key=0, style=solid];
m20_4 -> m20_6  [color=green, key=1, label=string, style=dashed];
m20_4 -> m20_8  [color=green, key=1, label=string, style=dashed];
m20_4 -> m20_10  [color=green, key=1, label=string, style=dashed];
m20_4 -> m20_12  [color=green, key=1, label=string, style=dashed];
m20_4 -> m20_14  [color=green, key=1, label=string, style=dashed];
m20_4 -> m20_16  [color=green, key=1, label=string, style=dashed];
m20_4 -> m20_18  [color=green, key=1, label=string, style=dashed];
m20_5 -> m20_6  [color=green, key=0, style=solid];
m20_5 -> m20_7  [color=green, key=1, label=now, style=dashed];
m20_5 -> m20_9  [color=green, key=1, label=now, style=dashed];
m20_5 -> m20_11  [color=green, key=1, label=now, style=dashed];
m20_5 -> m20_13  [color=green, key=1, label=now, style=dashed];
m20_5 -> m20_15  [color=green, key=1, label=now, style=dashed];
m20_5 -> m20_17  [color=green, key=1, label=now, style=dashed];
m20_6 -> m20_7  [color=green, key=0, style=solid];
m20_6 -> m20_8  [color=green, key=0, style=solid];
m20_6 -> m20_20  [color=green, key=2, style=dotted];
m20_7 -> m20_19  [color=green, key=0, style=solid];
m20_7 -> m20_21  [color=green, key=2, style=dotted];
m20_9 -> m20_19  [color=green, key=0, style=solid];
m20_9 -> m20_22  [color=green, key=2, style=dotted];
m20_11 -> m20_19  [color=green, key=0, style=solid];
m20_11 -> m20_23  [color=green, key=2, style=dotted];
m20_13 -> m20_19  [color=green, key=0, style=solid];
m20_13 -> m20_24  [color=green, key=2, style=dotted];
m20_15 -> m20_19  [color=green, key=0, style=solid];
m20_15 -> m20_3  [color=green, key=2, style=dotted];
m20_17 -> m20_19  [color=green, key=0, style=solid];
m20_17 -> m20_25  [color=green, key=2, style=dotted];
m20_8 -> m20_9  [color=green, key=0, style=solid];
m20_8 -> m20_10  [color=green, key=0, style=solid];
m20_8 -> m20_20  [color=green, key=2, style=dotted];
m20_10 -> m20_11  [color=green, key=0, style=solid];
m20_10 -> m20_12  [color=green, key=0, style=solid];
m20_10 -> m20_20  [color=green, key=2, style=dotted];
m20_12 -> m20_13  [color=green, key=0, style=solid];
m20_12 -> m20_14  [color=green, key=0, style=solid];
m20_12 -> m20_20  [color=green, key=2, style=dotted];
m20_14 -> m20_15  [color=green, key=0, style=solid];
m20_14 -> m20_16  [color=green, key=0, style=solid];
m20_14 -> m20_20  [color=green, key=2, style=dotted];
m20_16 -> m20_17  [color=green, key=0, style=solid];
m20_16 -> m20_18  [color=green, key=0, style=solid];
m20_16 -> m20_20  [color=green, key=2, style=dotted];
m20_18 -> m20_19  [color=green, key=0, style=solid];
m20_18 -> m20_26  [color=green, key=2, style=dotted];
m20_18 -> m20_27  [color=green, key=2, style=dotted];
m20_19 -> m20_4  [color=blue, key=0, style=bold];
}
