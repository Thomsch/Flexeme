digraph  {
n0 [cluster="HangFire.BackgroundJob.Perform()", label="Entry HangFire.BackgroundJob.Perform()", span="35-35"];
n1 [cluster="HangFire.BackgroundJob.Perform()", label="Exit HangFire.BackgroundJob.Perform()", span="35-35"];
n2 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
n3 [cluster="lambda expression", label="new JobClient(JobStorage.Current.GetConnection())", span="38-38"];
n4 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
n5 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41"];
n6 [cluster="HangFire.JobStorage.GetConnection()", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
n7 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
n9 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
n10 [cluster="HangFire.BackgroundJob.CreateEnqueuedState()", label="Entry HangFire.BackgroundJob.CreateEnqueuedState()", span="208-208"];
n11 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", label="Entry HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", span="159-159"];
n12 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
n14 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", label="Exit HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
n15 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", label="Entry HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", span="191-191"];
n16 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119"];
n18 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", label="Exit HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119"];
n19 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", label="Entry HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", span="213-213"];
n20 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
n22 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", label="Exit HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
n31 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", label="Exit HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", span="159-159"];
n34 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", label="Entry HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", span="223-223"];
n32 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n33 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n43 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", label="Exit HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", span="191-191"];
n44 [cluster="HangFire.BackgroundJob.CreateEnqueuedState()", label="return new EnqueuedState();", span="210-210"];
n45 [cluster="HangFire.BackgroundJob.CreateEnqueuedState()", label="Exit HangFire.BackgroundJob.CreateEnqueuedState()", span="208-208"];
n46 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="26-26"];
n47 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", label="return CreateScheduledState(DateTime.UtcNow.Add(delay));", span="215-215"];
n48 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", label="Exit HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", span="213-213"];
n49 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
n50 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", label="Entry HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", span="218-218"];
n51 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", label="return new ScheduledState(utcDateTime);", span="220-220"];
n52 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", label="Exit HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", span="218-218"];
n53 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28"];
n55 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", label="var client = ClientFactory()", span="227-227"];
n59 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", label="Entry HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="234-234"];
n60 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n61 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
n58 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", label="Exit HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", span="223-223"];
n62 [cluster="HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", label="Entry HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="24-24"];
n73 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n74 [cluster="Unk.ToArray", label="Entry Unk.ToArray", span=""];
n75 [cluster="List<string>.cstr", label="Entry List<string>.cstr", span=""];
n76 [cluster="Unk.GetType", label="Entry Unk.GetType", span=""];
n77 [cluster="Unk.GetConverter", label="Entry Unk.GetConverter", span=""];
n78 [cluster="Unk.ConvertToInvariantString", label="Entry Unk.ConvertToInvariantString", span=""];
n79 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n72 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", label="Exit HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="234-234"];
n80 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
n81 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", label="Entry HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", span="259-259"];
n86 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", label="Exit HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", span="259-259"];
n87 [cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="39-39"];
d25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", prediction=0, span="96-99"];
d206 [label="HangFire.Redis.RedisConnection", span=""];
d22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="68-71"];
d23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="75-76"];
d24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="jobId == null", span="79-79"];
d26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="return new RedisProcessingJob(this, jobId, queueName);", span="105-105"];
d29 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
d33 [cluster="Unk.SetEntryInHash", label="Entry Unk.SetEntryInHash", span=""];
d77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, label="string arguments = null", prediction=1, span="159-159"];
d41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, label="var jobId = Guid.NewGuid().ToString()", prediction=2, span="120-120"];
d40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
d42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var invocationData = InvocationData.Serialize(job)", span="122-122"];
d55 [cluster="System.Guid.NewGuid()", label="Entry System.Guid.NewGuid()", span="0-0"];
d56 [cluster="System.Guid.ToString()", label="Entry System.Guid.ToString()", span="0-0"];
d50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136"];
d63 [cluster="lambda expression", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136"];
d51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", prediction=2, span="138-140"];
d67 [cluster="lambda expression", color=green, community=0, label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", prediction=2, span="138-140"];
d53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="return jobId;", span="146-146"];
d49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var transaction = Redis.CreateTransaction()", span="132-132"];
d70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
d52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="transaction.Commit()", span="143-143"];
d60 [cluster="Unk.QueueCommand", label="Entry Unk.QueueCommand", span=""];
d66 [cluster="lambda expression", label="Entry lambda expression", span="138-140"];
d207 [label=jobId, span=""];
d209 [label="System.TimeSpan", span=""];
d68 [cluster="lambda expression", label="Exit lambda expression", span="138-140"];
d69 [cluster="Unk.ExpireEntryIn", label="Entry Unk.ExpireEntryIn", span=""];
d72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, label="storedData.Count == 0", prediction=5, span="154-154"];
d71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152"];
d73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, label="return null;", prediction=6, span="154-154"];
d74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="string type = null", span="156-156"];
d79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", color=green, community=0, label="type = storedData[''Type'']", prediction=7, span="163-163"];
d78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="storedData.ContainsKey(''Type'')", span="161-161"];
d80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="storedData.ContainsKey(''Method'')", span="165-165"];
d88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="181-181"];
d93 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
d76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="string parameterTypes = null", span="158-158"];
d1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", label="Redis = redis", span="35-35"];
d4 [cluster="HangFire.Redis.RedisConnection.Dispose()", label="Redis.Dispose()", span="42-42"];
d8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47"];
d36 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", label="return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="110-112"];
d100 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="202-205"];
d103 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="210-212"];
d107 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="var transaction = Redis.CreateTransaction()", span="217-217"];
d125 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="237-239"];
d130 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="var transaction = Redis.CreateTransaction()", span="244-244"];
d152 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", label="RemoveServer(Redis, serverId)", span="271-271"];
d169 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="292-295"];
d172 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="300-300"];
d175 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var pipeline = Redis.CreatePipeline()", span="305-305"];
d184 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="RemoveServer(Redis, heartbeat.Key)", span="333-333"];
d21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="queueIndex == 0", span="66-66"];
d19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="63-63"];
d20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="64-64"];
d30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
d31 [cluster="Unk.PopAndPushItemBetweenLists", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
d15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="var queueIndex = 0", span="54-54"];
d18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="queueName = queues[queueIndex]", span="61-61"];
d27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
d34 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
d114 [cluster="lambda expression", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="219-222"];
d118 [cluster="lambda expression", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="224-226"];
d122 [cluster="lambda expression", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="227-229"];
d143 [cluster="lambda expression", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="249-255"];
d148 [cluster="lambda expression", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="260-262"];
d165 [cluster="lambda expression", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="282-284"];
d48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130"];
d54 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
d43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125"];
d57 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
d44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126"];
d45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127"];
d46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128"];
d47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129"];
d62 [cluster="lambda expression", label="Entry lambda expression", span="134-136"];
d208 [label=storedParameters, span=""];
d64 [cluster="lambda expression", label="Exit lambda expression", span="134-136"];
d65 [cluster="Unk.SetRangeInHash", label="Entry Unk.SetRangeInHash", span=""];
d11 [cluster="Unk.CreateTransaction", label="Entry Unk.CreateTransaction", span=""];
d61 [cluster="Unk.Commit", label="Entry Unk.Commit", span=""];
d108 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="219-222"];
d109 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="224-226"];
d110 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="227-229"];
d131 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="246-247"];
d132 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="249-255"];
d135 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="260-262"];
d156 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="278-280"];
d157 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="282-284"];
d178 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="311-319"];
d94 [cluster="Unk.GetAllEntriesFromHash", label="Entry Unk.GetAllEntriesFromHash", span=""];
d81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="method = storedData[''Method'']", span="167-167"];
d82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="storedData.ContainsKey(''ParameterTypes'')", span="169-169"];
d83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="parameterTypes = storedData[''ParameterTypes'']", span="171-171"];
d84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="storedData.ContainsKey(''Arguments'')", span="173-173"];
d85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="arguments = storedData[''Arguments'']", span="175-175"];
d92 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="192-197"];
d75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="string method = null", span="157-157"];
d95 [cluster="Unk.ContainsKey", label="Entry Unk.ContainsKey", span=""];
d87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="JobLoadException loadException = null", span="179-179"];
d89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="job = invocationData.Deserialize()", span="185-185"];
d96 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
d0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
d2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
d3 [cluster="HangFire.Redis.RedisConnection.Dispose()", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="40-40"];
d5 [cluster="HangFire.Redis.RedisConnection.Dispose()", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="40-40"];
d6 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45"];
d9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45"];
d10 [cluster="RedisWriteOnlyTransaction.cstr", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
d35 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
d37 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
d38 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d39 [cluster="Unk.AcquireLock", label="Entry Unk.AcquireLock", span=""];
d99 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200"];
d101 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200"];
d102 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208"];
d104 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208"];
d105 [cluster="Unk.GetValueFromHash", label="Entry Unk.GetValueFromHash", span=""];
d106 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
d111 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="transaction.Commit()", span="231-231"];
d124 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235"];
d126 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235"];
d127 [cluster="Unk.GetRangeFromSortedSetByLowestScore", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
d128 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d129 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242"];
d136 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="transaction.Commit()", span="265-265"];
d151 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269"];
d153 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269"];
d154 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274"];
d168 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290"];
d170 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290"];
d171 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298"];
d173 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="301-301"];
d188 [cluster="Unk.GetAllItemsFromSet", label="Entry Unk.GetAllItemsFromSet", span=""];
d176 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label=serverNames, span="307-307"];
d174 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var utcNow = DateTime.UtcNow", span="303-303"];
d189 [cluster="Unk.CreatePipeline", label="Entry Unk.CreatePipeline", span=""];
d179 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="pipeline.Flush()", span="322-322"];
d183 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="utcNow > maxTime.Add(timeOut)", span="331-331"];
d182 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="328-329"];
d185 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="removedServerCount++", span="334-334"];
d17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="queueIndex = (queueIndex + 1) % queues.Length", span="60-60"];
d14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="string queueName", span="53-53"];
d16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="cancellationToken.ThrowIfCancellationRequested()", span="58-58"];
d12 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
d210 [label=string, span=""];
d211 [label=string, span=""];
d113 [cluster="lambda expression", label="Entry lambda expression", span="219-222"];
d115 [cluster="lambda expression", label="Exit lambda expression", span="219-222"];
d116 [cluster="Unk.RemoveItemFromList", label="Entry Unk.RemoveItemFromList", span=""];
d117 [cluster="lambda expression", label="Entry lambda expression", span="224-226"];
d119 [cluster="lambda expression", label="Exit lambda expression", span="224-226"];
d120 [cluster="Unk.RemoveEntryFromHash", label="Entry Unk.RemoveEntryFromHash", span=""];
d121 [cluster="lambda expression", label="Entry lambda expression", span="227-229"];
d123 [cluster="lambda expression", label="Exit lambda expression", span="227-229"];
d212 [label=string, span=""];
d213 [label="HangFire.Server.ServerContext", span=""];
d142 [cluster="lambda expression", label="Entry lambda expression", span="249-255"];
d144 [cluster="lambda expression", label="Exit lambda expression", span="249-255"];
d145 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d146 [cluster="int.ToString(System.IFormatProvider)", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
d214 [label=queue1, span=""];
d134 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="var queue1 = queue", span="259-259"];
d147 [cluster="lambda expression", label="Entry lambda expression", span="260-262"];
d149 [cluster="lambda expression", label="Exit lambda expression", span="260-262"];
d150 [cluster="Unk.AddItemToList", label="Entry Unk.AddItemToList", span=""];
d215 [label=string, span=""];
d164 [cluster="lambda expression", label="Entry lambda expression", span="282-284"];
d166 [cluster="lambda expression", label="Exit lambda expression", span="282-284"];
d167 [cluster="Unk.RemoveEntry", label="Entry Unk.RemoveEntry", span=""];
d59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
d58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
d155 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", label="var transaction = redis.CreateTransaction()", span="276-276"];
d158 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", label="transaction.Commit()", span="286-286"];
d138 [cluster="lambda expression", label="Entry lambda expression", span="246-247"];
d133 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="context.Queues", span="257-257"];
d160 [cluster="lambda expression", label="Entry lambda expression", span="278-280"];
d177 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var name = serverName", span="309-309"];
d194 [cluster="lambda expression", label="Entry lambda expression", span="312-314"];
d199 [cluster="lambda expression", label="Entry lambda expression", span="315-319"];
d86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="Job job = null", span="178-178"];
d91 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label="loadException = ex", span="189-189"];
d98 [cluster="HangFire.Storage.JobData.JobData()", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
d90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", label=JobLoadException, span="187-187"];
d97 [cluster="HangFire.Storage.InvocationData.Deserialize()", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
d112 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
d137 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242"];
d139 [cluster="lambda expression", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="246-247"];
d159 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274"];
d161 [cluster="lambda expression", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="278-280"];
d187 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298"];
d200 [cluster="lambda expression", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="315-319"];
d181 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label=heartbeats, span="326-326"];
d180 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="var removedServerCount = 0", span="325-325"];
d190 [cluster="Unk.Flush", label="Entry Unk.Flush", span=""];
d193 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
d191 [cluster="System.DateTime.DateTime(long)", label="Entry System.DateTime.DateTime(long)", span="0-0"];
d192 [cluster="System.Math.Max(long, long)", label="Entry System.Math.Max(long, long)", span="0-0"];
d186 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", label="return removedServerCount;", span="338-338"];
d13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", label="string jobId", span="52-52"];
d28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
d140 [cluster="lambda expression", label="Exit lambda expression", span="246-247"];
d162 [cluster="lambda expression", label="Exit lambda expression", span="278-280"];
d195 [cluster="lambda expression", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="312-314"];
d196 [cluster="lambda expression", label="Exit lambda expression", span="312-314"];
d201 [cluster="lambda expression", label="Exit lambda expression", span="315-319"];
d141 [cluster="Unk.AddItemToSet", label="Entry Unk.AddItemToSet", span=""];
d163 [cluster="Unk.RemoveItemFromSet", label="Entry Unk.RemoveItemFromSet", span=""];
d216 [label=name, span=""];
d217 [label=heartbeats, span=""];
d202 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
d203 [cluster="Unk.FromStringTimestamp", label="Entry Unk.FromStringTimestamp", span=""];
d204 [cluster="Unk.FromNullableStringTimestamp", label="Entry Unk.FromNullableStringTimestamp", span=""];
d205 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d197 [cluster="Unk.Format", label="Entry Unk.Format", span=""];
d198 [cluster="Unk.GetValuesFromHash", label="Entry Unk.GetValuesFromHash", span=""];
m1_109 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", span="120-120"];
m1_112 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", span="120-120"];
m1_230 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", span="219-219"];
m1_231 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="ClientApiTests.cs", label="BackgroundJob.Schedule(() => TestService.StaticMethod(), TimeSpan.FromHours(5))", span="221-221"];
m1_233 [cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", span="219-219"];
m1_16 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_ReturnIdentifierReturnedByClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_ReturnIdentifierReturnedByClient()", span="46-46"];
m1_20 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_ReturnIdentifierReturnedByClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_ReturnIdentifierReturnedByClient()", span="46-46"];
m1_130 [cluster="HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", span="275-275"];
m1_258 [cluster="HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", span="275-275"];
m1_24 [cluster="Unk.Equal", file="ClientApiTests.cs", label="Entry Unk.Equal", span=""];
m1_175 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", span="258-258"];
m1_254 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", span="258-258"];
m1_218 [cluster="System.TimeSpan.FromHours(double)", file="ClientApiTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_33 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_ReturnsIdentifierFromReturnedByClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_ReturnsIdentifierFromReturnedByClient()", span="61-61"];
m1_37 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_ReturnsIdentifierFromReturnedByClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_ReturnsIdentifierFromReturnedByClient()", span="61-61"];
m1_9 [cluster="Mock<JobState>.cstr", file="ClientApiTests.cs", label="Entry Mock<JobState>.cstr", span=""];
m1_76 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", span="98-98"];
m1_79 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", span="98-98"];
m1_7 [cluster="HangFire.Tests.GlobalLock.Acquire()", file="ClientApiTests.cs", label="Entry HangFire.Tests.GlobalLock.Acquire()", span="8-8"];
m1_32 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", span="242-242"];
m1_250 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", span="242-242"];
m1_158 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", span="254-254"];
m1_253 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", span="254-254"];
m1_46 [cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", span="76-76"];
m1_49 [cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", span="76-76"];
m1_23 [cluster="Unk.>", file="ClientApiTests.cs", label="Entry Unk.>", span=""];
m1_201 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", span="193-193"];
m1_202 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="ClientApiTests.cs", label="BackgroundJob.Enqueue(() => TestService.StaticMethod())", span="195-195"];
m1_204 [cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", span="193-193"];
m1_183 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="ClientApiTests.cs", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
m1_122 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", span="131-131"];
m1_123 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="ClientApiTests.cs", label="BackgroundJob.Enqueue(() => DerivedTestService.StaticMethod())", span="133-133"];
m1_125 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", span="131-131"];
m1_99 [cluster="HangFire.Tests.ClientApiTests.IService.Method()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.IService.Method()", span="270-270"];
m1_257 [cluster="HangFire.Tests.ClientApiTests.IService.Method()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.IService.Method()", span="270-270"];
m1_244 [cluster="HangFire.Tests.ClientApiTests.ClientFactory_Set_ExceptionIsThrownWhenTheValueIsNull()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.ClientFactory_Set_ExceptionIsThrownWhenTheValueIsNull()", span="234-234"];
m1_245 [cluster="HangFire.Tests.ClientApiTests.ClientFactory_Set_ExceptionIsThrownWhenTheValueIsNull()", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJob.ClientFactory = null)", span="236-237"];
m1_246 [cluster="HangFire.Tests.ClientApiTests.ClientFactory_Set_ExceptionIsThrownWhenTheValueIsNull()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.ClientFactory_Set_ExceptionIsThrownWhenTheValueIsNull()", span="234-234"];
m1_45 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.StaticMethod()", span="250-250"];
m1_252 [cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.StaticMethod()", span="250-250"];
m1_187 [cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", span="262-262"];
m1_255 [cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="ClientApiTests.cs", label="a = 10", span="264-264"];
m1_256 [cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", span="262-262"];
m1_137 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="142-142"];
m1_140 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="142-142"];
m1_21 [cluster="Unk.Setup", file="ClientApiTests.cs", label="Entry Unk.Setup", span=""];
m1_92 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", span="109-109"];
m1_95 [cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", span="109-109"];
m1_176 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", span="173-173"];
m1_177 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="ClientApiTests.cs", label="int a", span="175-175"];
m1_178 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="ClientApiTests.cs", label="Assert.Throws<ArgumentException>(\r\n                () => BackgroundJob.Enqueue<DerivedTestService>(x => x.OutMethod(out a)))", span="177-178"];
m1_179 [cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", span="173-173"];
m1_214 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", span="204-204"];
m1_215 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="ClientApiTests.cs", label="BackgroundJob.Schedule<TestService>(x => x.InstanceMethod(), TimeSpan.FromHours(5))", span="206-206"];
m1_217 [cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", span="204-204"];
m1_234 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="ClientApiTests.cs", label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119"];
m1_247 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="237-237"];
m1_10 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="26-26"];
m1_11 [cluster="lambda expression", file="ClientApiTests.cs", label="_jobClientMock.Object", span="26-26"];
m1_12 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="26-26"];
m1_25 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="49-52"];
m1_29 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="55-55"];
m1_27 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="49-52"];
m1_31 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="55-55"];
m1_39 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="64-67"];
m1_42 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="70-70"];
m1_41 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="64-67"];
m1_44 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="70-70"];
m1_51 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="78-78"];
m1_54 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="80-83"];
m1_53 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="78-78"];
m1_56 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="80-83"];
m1_57 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="83-83"];
m1_59 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="83-83"];
m1_64 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="89-89"];
m1_67 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="91-94"];
m1_66 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="89-89"];
m1_69 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="91-94"];
m1_70 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="92-92"];
m1_73 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="93-93"];
m1_72 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="92-92"];
m1_74 [cluster="lambda expression", file="ClientApiTests.cs", label="x.Length == 0", span="93-93"];
m1_75 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="93-93"];
m1_80 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="100-100"];
m1_83 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="102-105"];
m1_82 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="100-100"];
m1_85 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="102-105"];
m1_86 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="103-103"];
m1_89 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="104-104"];
m1_88 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="103-103"];
m1_90 [cluster="lambda expression", file="ClientApiTests.cs", label="x.Length == 0", span="104-104"];
m1_91 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="104-104"];
m1_96 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="111-111"];
m1_100 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="113-116"];
m1_98 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="111-111"];
m1_102 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="113-116"];
m1_103 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="114-114"];
m1_106 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="115-115"];
m1_105 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="114-114"];
m1_107 [cluster="lambda expression", file="ClientApiTests.cs", label="x.Length == 0", span="115-115"];
m1_108 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="115-115"];
m1_113 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="122-122"];
m1_116 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="124-127"];
m1_115 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="122-122"];
m1_118 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="124-127"];
m1_119 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="125-125"];
m1_120 [cluster="lambda expression", file="ClientApiTests.cs", label="x.Type == typeof(DerivedTestService)", span="125-125"];
m1_121 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="125-125"];
m1_127 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="133-133"];
m1_131 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="135-138"];
m1_128 [cluster="lambda expression", file="ClientApiTests.cs", label="DerivedTestService.StaticMethod()", span="133-133"];
m1_129 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="133-133"];
m1_133 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="135-138"];
m1_134 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="136-136"];
m1_135 [cluster="lambda expression", file="ClientApiTests.cs", label="x.Type == typeof(DerivedTestService)", span="136-136"];
m1_136 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="136-136"];
m1_141 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="144-144"];
m1_145 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="146-149"];
m1_143 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="144-144"];
m1_147 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="146-149"];
m1_148 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="148-148"];
m1_149 [cluster="lambda expression", file="ClientApiTests.cs", label="x[0] == ''Hello''", span="148-148"];
m1_150 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="148-148"];
m1_155 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="155-155"];
m1_159 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="157-160"];
m1_157 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="155-155"];
m1_161 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="157-160"];
m1_162 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="159-159"];
m1_163 [cluster="lambda expression", file="ClientApiTests.cs", label="x[0] == ''34''", span="159-159"];
m1_164 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="159-159"];
m1_169 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="169-169"];
m1_171 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="169-169"];
m1_172 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="169-169"];
m1_174 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="169-169"];
m1_180 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="178-178"];
m1_181 [cluster="lambda expression", file="ClientApiTests.cs", label="BackgroundJob.Enqueue<DerivedTestService>(x => x.OutMethod(out a))", span="178-178"];
m1_182 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="178-178"];
m1_184 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="178-178"];
m1_185 [cluster="lambda expression", file="ClientApiTests.cs", label="x.OutMethod(out a)", span="178-178"];
m1_186 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="178-178"];
m1_192 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="184-184"];
m1_195 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="186-189"];
m1_193 [cluster="lambda expression", file="ClientApiTests.cs", label="x.InstanceMethod()", span="184-184"];
m1_194 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="184-184"];
m1_197 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="186-189"];
m1_198 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="189-189"];
m1_200 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="189-189"];
m1_205 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="195-195"];
m1_208 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="197-200"];
m1_206 [cluster="lambda expression", file="ClientApiTests.cs", label="TestService.StaticMethod()", span="195-195"];
m1_207 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="195-195"];
m1_210 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="197-200"];
m1_211 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="200-200"];
m1_213 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="200-200"];
m1_220 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="206-206"];
m1_223 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="208-215"];
m1_221 [cluster="lambda expression", file="ClientApiTests.cs", label="x.InstanceMethod()", span="206-206"];
m1_222 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="206-206"];
m1_225 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="208-215"];
m1_226 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="211-215"];
m1_227 [cluster="lambda expression", file="ClientApiTests.cs", label="y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)", span="212-215"];
m1_228 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="211-215"];
m1_235 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="221-221"];
m1_238 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="223-230"];
m1_236 [cluster="lambda expression", file="ClientApiTests.cs", label="TestService.StaticMethod()", span="221-221"];
m1_237 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="221-221"];
m1_240 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="223-230"];
m1_241 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="226-230"];
m1_242 [cluster="lambda expression", file="ClientApiTests.cs", label="y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)", span="227-230"];
m1_243 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="226-230"];
m1_248 [cluster="lambda expression", file="ClientApiTests.cs", label="BackgroundJob.ClientFactory = null", span="237-237"];
m1_249 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="237-237"];
m1_144 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", span="246-246"];
m1_251 [cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", span="246-246"];
m1_165 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", span="164-164"];
m1_166 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="ClientApiTests.cs", label="int a = 10", span="166-166"];
m1_168 [cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", span="164-164"];
m1_229 [cluster="System.DateTime.AddHours(double)", file="ClientApiTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m1_13 [cluster="HangFire.Tests.ClientApiTests.Dispose()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Dispose()", span="31-31"];
m1_14 [cluster="HangFire.Tests.ClientApiTests.Dispose()", file="ClientApiTests.cs", label="BackgroundJob.ClientFactory = _oldClientFactory", span="35-35"];
m1_15 [cluster="HangFire.Tests.ClientApiTests.Dispose()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Dispose()", span="31-31"];
m1_188 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", span="182-182"];
m1_189 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="ClientApiTests.cs", label="BackgroundJob.Enqueue<TestService>(x => x.InstanceMethod())", span="184-184"];
m1_191 [cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", span="182-182"];
m1_38 [cluster="Unk.Create", file="ClientApiTests.cs", label="Entry Unk.Create", span=""];
m1_60 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", span="87-87"];
m1_63 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", span="87-87"];
m1_22 [cluster="Unk.Returns", file="ClientApiTests.cs", label="Entry Unk.Returns", span=""];
m1_28 [cluster="Unk.CreateJob", file="ClientApiTests.cs", label="Entry Unk.CreateJob", span=""];
m1_126 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="ClientApiTests.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
m1_0 [cluster="HangFire.Tests.ClientApiTests.ClientApiTests()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.ClientApiTests()", span="20-20"];
m1_1 [cluster="HangFire.Tests.ClientApiTests.ClientApiTests()", file="ClientApiTests.cs", label="GlobalLock.Acquire()", span="22-22"];
m1_2 [cluster="HangFire.Tests.ClientApiTests.ClientApiTests()", file="ClientApiTests.cs", label="_oldClientFactory = BackgroundJob.ClientFactory", span="23-23"];
m1_3 [cluster="HangFire.Tests.ClientApiTests.ClientApiTests()", file="ClientApiTests.cs", label="_jobClientMock = new Mock<IJobClient>()", span="25-25"];
m1_4 [cluster="HangFire.Tests.ClientApiTests.ClientApiTests()", file="ClientApiTests.cs", label="BackgroundJob.ClientFactory = () => _jobClientMock.Object", span="26-26"];
m1_6 [cluster="HangFire.Tests.ClientApiTests.ClientApiTests()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.ClientApiTests()", span="20-20"];
m1_8 [cluster="Mock<IJobClient>.cstr", file="ClientApiTests.cs", label="Entry Mock<IJobClient>.cstr", span=""];
m1_50 [cluster="Unk.Verify", file="ClientApiTests.cs", label="Entry Unk.Verify", span=""];
m1_151 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="ClientApiTests.cs", label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="153-153"];
m1_154 [cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="ClientApiTests.cs", label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="153-153"];
m1_259 [file="ClientApiTests.cs", label="HangFire.Tests.ClientApiTests", span=""];
m1_260 [file="ClientApiTests.cs", label=a, span=""];
m2_9 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="Command.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98"];
m2_10 [cluster="lambda expression", file="Command.cs", label="Entry lambda expression", span="43-54"];
m2_0 [cluster="lambda expression", file="Command.cs", label="Entry lambda expression", span="26-40"];
m2_1 [cluster="lambda expression", file="Command.cs", label="var connection = JobStorage.Current.GetConnection()", span="28-28"];
m2_2 [cluster="lambda expression", file="Command.cs", label="var stateMachine = new StateMachine(connection)", span="32-32"];
m2_3 [cluster="lambda expression", file="Command.cs", label="var state = new EnqueuedState\r\n                    {\r\n                        Reason = ''The job has been retried by a user''\r\n                    }", span="33-36"];
m2_5 [cluster="lambda expression", file="Command.cs", label="Exit lambda expression", span="26-40"];
m2_11 [cluster="lambda expression", file="Command.cs", label="var connection = JobStorage.Current.GetConnection()", span="45-45"];
m2_12 [cluster="lambda expression", file="Command.cs", label="var stateMachine = new StateMachine(connection)", span="47-47"];
m2_13 [cluster="lambda expression", file="Command.cs", label="var state = new EnqueuedState{\r\n                        Reason = ''Scheduled job has been enqueued by a user''\r\n                    }", span="48-50"];
m2_15 [cluster="lambda expression", file="Command.cs", label="Exit lambda expression", span="43-54"];
m2_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="Command.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m2_6 [cluster="HangFire.JobStorage.GetConnection()", file="Command.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m3_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="var serializedValue = JobHelper.ToJson(value)", span="101-101"];
m3_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="92-92"];
m3_0 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m3_1 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="CreateContext.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m3_2 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="CreateContext.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''SchedulePoller'', ''\r\n  As an Administrator (or a Developer), I want the scheduled \r\n  jobs to added '' +\r\n                    ''to their actual queues when their time has come.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m3_3 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="CreateContext.cs", label="testRunner.OnFeatureStart(featureInfo)", span="36-36"];
m3_21 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="String.IsNullOrWhiteSpace(name)", span="94-94"];
m3_40 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76"];
m3_30 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76"];
m3_4 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", span="44-44"];
m3_19 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="CreateContext.cs", label="testRunner.OnScenarioEnd()", span="59-59"];
m3_75 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", span="166-166"];
m3_76 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller move the job to the Failed state when it could not find its type'', ((string[])(null)))", span="168-168"];
m3_77 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="170-170"];
m3_78 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172"];
m3_79 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="174-174"];
m3_80 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="testRunner.Then(''the job should be moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176"];
m3_81 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="this.ScenarioCleanup()", span="178-178"];
m3_82 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", span="166-166"];
m3_45 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.State)", file="CreateContext.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.State)", span="62-62"];
m3_46 [cluster="Unk.But", file="CreateContext.cs", label="HangFire.Client.CreateContext", span=""];
m3_83 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="185-185"];
m3_84 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller will fail only jobs in the Scheduled state'', ((string[])(null)))", span="187-187"];
m3_85 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="189-189"];
m3_86 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191"];
m3_87 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m3_88 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195"];
m3_89 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197"];
m3_90 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="this.ScenarioCleanup()", span="199-199"];
m3_91 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="185-185"];
m3_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="connection == null", span="49-49"];
m3_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="Items = new Dictionary<string, object>()", span="57-57"];
m3_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="_stateMachine = new StateMachine(connection)", span="59-59"];
m3_17 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47"];
m3_41 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="CreateContext.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m3_42 [cluster="Unk.Given", color=green, community=0, file="CreateContext.cs", label="Entry Unk.Given", prediction=8, span=""];
m3_43 [cluster="Unk.When", file="CreateContext.cs", label="Entry Unk.When", span=""];
m3_44 [cluster="Unk.Then", file="CreateContext.cs", label="Entry Unk.Then", span=""];
m3_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="!_parameters.ContainsKey(name)", span="103-103"];
m3_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="_parameters.Add(name, serializedValue)", span="105-105"];
m3_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="_parameters[name] = serializedValue", span="109-109"];
m3_18 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_20 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="92-92"];
m3_31 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="CreateContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Scheduled jobs should be enqueued on their actual queues'', ((string[])(null)))", span="78-78"];
m3_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="InitialState = initialState", span="55-55"];
m3_7 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", color=green, community=0, file="CreateContext.cs", label="job == null", prediction=9, span="50-50"];
m3_58 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126"];
m3_59 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller should enqueue only jobs in the Scheduled state'', ((string[])(null)))", span="128-128"];
m3_60 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="130-130"];
m3_61 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="132-132"];
m3_62 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="134-134"];
m3_63 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="136-136"];
m3_64 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="138-138"];
m3_65 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140"];
m3_66 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="this.ScenarioCleanup()", span="142-142"];
m3_67 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126"];
m3_33 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="CreateContext.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="82-82"];
m3_47 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101"];
m3_48 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Future jobs should not be enqueued'', ((string[])(null)))", span="103-103"];
m3_49 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="105-105"];
m3_50 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="testRunner.Given(''a future job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="107-107"];
m3_51 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="109-109"];
m3_52 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="testRunner.Then(''the job should be in the Scheduled state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="111-111"];
m3_53 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="testRunner.And(''the schedule should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="113-113"];
m3_54 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="115-115"];
m3_55 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="testRunner.And(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="117-117"];
m3_56 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="this.ScenarioCleanup()", span="119-119"];
m3_57 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101"];
m3_9 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="initialState == null", span="51-51"];
m3_10 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="throw new ArgumentNullException(''initialState'');", span="51-51"];
m3_11 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", file="CreateContext.cs", label="Connection = connection", span="53-53"];
m3_12 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.Job, HangFire.Common.States.State)", color=green, community=0, file="CreateContext.cs", label="Job = job", prediction=10, span="54-54"];
m3_32 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="CreateContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="80-80"];
m3_23 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="CreateContext.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m3_22 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m3_24 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m3_8 [cluster="Unk.OnFeatureStart", color=green, community=0, file="CreateContext.cs", label="Entry Unk.OnFeatureStart", prediction=11, span=""];
m3_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="CreateContext.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m3_34 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CreateContext.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_35 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="125-125"];
m3_36 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="String.IsNullOrWhiteSpace(name)", span="127-127"];
m3_37 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="throw new ArgumentNullException(''name'');", span="127-127"];
m3_38 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="return _parameters.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(_parameters[name])\r\n                : default(T);", span="129-131"];
m3_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="125-125"];
m3_68 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149"];
m3_69 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Should return false when there are no jobs in the schedule'', ((string[])(null)))", span="151-151"];
m3_70 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="153-153"];
m3_71 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="155-155"];
m3_72 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="testRunner.Then(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="157-157"];
m3_73 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="this.ScenarioCleanup()", span="159-159"];
m3_74 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="CreateContext.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149"];
m3_92 [file="CreateContext.cs", label="HangFire.Tests.Server.SchedulePollerFeature", span=""];
m5_0 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DequeuedJobsPage.generated.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m5_1 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DequeuedJobsPage.generated.cs", label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m6_0 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m6_1 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcher.cs", label="_storage = storage", span="41-41"];
m6_2 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m6_73 [cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151"];
m6_81 [cluster="System.Threading.Thread.Join()", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m6_51 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98"];
m6_41 [cluster="string.Format(string, object)", file="DequeuedJobsWatcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_48 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m6_72 [cluster="Unk.Info", file="DequeuedJobsWatcher.cs", label="Entry Unk.Info", span=""];
m6_57 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m6_50 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="26-26"];
m6_26 [cluster="Unk.InfoFormat", file="DequeuedJobsWatcher.cs", label="Entry Unk.InfoFormat", span=""];
m6_80 [cluster="System.Threading.EventWaitHandle.Set()", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m6_49 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15"];
m6_53 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="152-152"];
m6_54 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="154-155"];
m6_55 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="152-152"];
m6_58 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="158-158"];
m6_59 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="163-163"];
m6_61 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="168-169"];
m6_60 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="return false;", span="165-165"];
m6_62 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="158-158"];
m6_46 [cluster="Unk.TimedOutByFetchedTime", file="DequeuedJobsWatcher.cs", label="Entry Unk.TimedOutByFetchedTime", span=""];
m6_19 [cluster="Unk.GetClient", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetClient", span=""];
m6_47 [cluster="Unk.TimedOutByCheckedTime", file="DequeuedJobsWatcher.cs", label="Entry Unk.TimedOutByCheckedTime", span=""];
m6_52 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="230-230"];
m6_56 [cluster="string.IsNullOrEmpty(string)", file="DequeuedJobsWatcher.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_75 [cluster="Unk.Fatal", file="DequeuedJobsWatcher.cs", label="Entry Unk.Fatal", span=""];
m6_24 [cluster="Unk.GetAllItemsFromList", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m6_44 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m6_76 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="198-198"];
m6_77 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="_stopped.Set()", span="200-200"];
m6_78 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="thread.Join()", span="201-201"];
m6_79 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="198-198"];
m6_20 [cluster="Unk.GetAllItemsFromSet", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m6_74 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m6_43 [cluster="Unk.IsNullOrEmpty", file="DequeuedJobsWatcher.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m6_25 [cluster="Unk.RequeueJobIfTimedOut", file="DequeuedJobsWatcher.cs", label="Entry Unk.RequeueJobIfTimedOut", span=""];
m6_22 [cluster="Unk.Format", file="DequeuedJobsWatcher.cs", label="Entry Unk.Format", span=""];
m6_42 [cluster="Unk.GetValuesFromHash", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetValuesFromHash", span=""];
m6_21 [cluster="Unk.DebugFormat", file="DequeuedJobsWatcher.cs", label="Entry Unk.DebugFormat", span=""];
m6_3 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m6_4 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var redis = _storage.PooledManager.GetClient()", span="46-46"];
m6_5 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="48-48"];
m6_8 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="redis.AcquireLock(\r\n                        String.Format(''hangfire:queue:{0}:dequeued:lock'', queue),\r\n                        DequeuedLockTimeout)", span="58-60"];
m6_10 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var jobIds = redis.GetAllItemsFromList(\r\n                            String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="65-66"];
m6_13 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="RequeueJobIfTimedOut(redis, jobId, queue)", span="72-72"];
m6_6 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label=queues, span="50-50"];
m6_7 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.DebugFormat(\r\n                        ''Acquiring the lock for the dequeued list of the '{0}' queue...'', queue)", span="55-56"];
m6_9 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.DebugFormat(\r\n                            ''Looking for timed out jobs in the '{0}' queue...'', queue)", span="62-63"];
m6_16 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.DebugFormat(''No timed out jobs were found in the '{0}' queue'', queue)", span="80-80"];
m6_17 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.InfoFormat(\r\n                                ''{0} timed out jobs were found in the '{1}' queue and re-queued.'',\r\n                                requeued,\r\n                                queue)", span="84-87"];
m6_11 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var requeued = 0", span="68-68"];
m6_12 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label=jobIds, span="70-70"];
m6_14 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="requeued++", span="74-74"];
m6_15 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="requeued == 0", span="78-78"];
m6_18 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m6_63 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="172-172"];
m6_64 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Logger.Info(''Dequeued jobs watcher has been started.'')", span="176-176"];
m6_65 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=true, span="178-178"];
m6_66 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="JobServer.RetryOnException(FindAndRequeueTimedOutJobs, _stopped)", span="180-180"];
m6_68 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Logger.Info(''Dequeued jobs watcher has been stopped.'')", span="188-188"];
m6_67 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="_stopped.WaitOne(SleepTimeout)", span="182-182"];
m6_69 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=Exception, span="190-190"];
m6_70 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Logger.Fatal(\r\n                    ''Unexpected exception caught in the dequeued jobs watcher. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="192-194"];
m6_71 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="172-172"];
m6_32 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="redis.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="124-127"];
m6_27 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", span="94-94"];
m6_28 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var flags = redis.GetValuesFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Fetched'',\r\n                ''Checked'')", span="96-99"];
m6_34 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var stateMachine = new StateMachine(new RedisConnection(_storage, redis))", span="136-136"];
m6_36 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", color=green, community=1, file="DequeuedJobsWatcher.cs", label="stateMachine.TryToChangeState(\r\n                        jobId, \r\n                        state, \r\n                        new [] { EnqueuedState.StateName, ProcessingState.StateName })", prediction=12, span="141-144"];
m6_37 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="RedisConnection.RemoveFromDequeuedList(redis, queue, jobId)", span="143-143"];
m6_29 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var fetched = flags[0]", span="101-101"];
m6_30 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var @checked = flags[1]", span="102-102"];
m6_31 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="String.IsNullOrEmpty(fetched) && String.IsNullOrEmpty(@checked)", span="104-104"];
m6_33 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="TimedOutByFetchedTime(fetched) || TimedOutByCheckedTime(fetched, @checked)", span="134-134"];
m6_39 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="return false;", span="149-149"];
m6_35 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var state = new EnqueuedState{\r\n                        Reason = ''Re-queued due to time out''\r\n                    }", span="137-139"];
m6_38 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="return true;", span="145-145"];
m6_40 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", span="94-94"];
m6_23 [cluster="Unk.AcquireLock", file="DequeuedJobsWatcher.cs", label="Entry Unk.AcquireLock", span=""];
m6_82 [file="DequeuedJobsWatcher.cs", label="HangFire.Redis.Components.DequeuedJobsWatcher", span=""];
m7_0 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="EnqueuedJobDto.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m7_1 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="EnqueuedJobDto.cs", label="InEnqueuedState = true", span="9-9"];
m7_2 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="EnqueuedJobDto.cs", label="Exit HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m7_3 [file="EnqueuedJobDto.cs", label="HangFire.Storage.Monitoring.EnqueuedJobDto", span=""];
m8_9 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40"];
m8_10 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="job == null", span="45-45"];
m8_12 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="parameters == null", span="46-46"];
m8_14 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="state == null", span="47-47"];
m8_17 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                createdAt,\r\n                TimeSpan.FromHours(1))", span="50-54"];
m8_18 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="var context = new StateContext(jobId, job, createdAt)", span="56-56"];
m8_19 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="ChangeState(context, state, null)", span="57-57"];
m8_11 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''job'');", span="45-45"];
m8_13 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''parameters'');", span="46-46"];
m8_15 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''state'');", span="47-47"];
m8_16 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="var createdAt = DateTime.UtcNow", span="49-49"];
m8_20 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="return jobId;", span="59-59"];
m8_21 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40"];
m8_54 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m8_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m8_67 [cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30"];
m8_68 [cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22"];
m8_22 [cluster="System.TimeSpan.FromHours(double)", file="EnqueuedJobsPage.generated.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_24 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24"];
m8_55 [cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_23 [cluster="Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30"];
m8_50 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="25-25"];
m8_69 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24"];
m8_77 [cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23"];
m8_76 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m8_51 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m8_26 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="62-62"];
m8_27 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="jobId == null", span="65-65"];
m8_29 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="toState == null", span="66-66"];
m8_31 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="fromStates != null && fromStates.Length == 0", span="67-67"];
m8_33 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="78-78"];
m8_34 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="var jobData = _connection.GetJobData(jobId)", span="80-80"];
m8_37 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="fromStates != null && !fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="89-89"];
m8_42 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="!toState.IgnoreJobLoadException", span="107-107"];
m8_43 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="toState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state of a job to '{0}': target method was not found.'',\r\n                                toState.Name)\r\n                        }", span="109-114"];
m8_45 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="var context = new StateContext(jobId, jobData.Job, jobData.CreatedAt)", span="120-120"];
m8_46 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="var stateChanged = ChangeState(context, toState, jobData.State)", span="121-121"];
m8_28 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''jobId'');", span="65-65"];
m8_30 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''toState'');", span="66-66"];
m8_32 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="69-69"];
m8_35 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="jobData == null", span="82-82"];
m8_40 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="jobData.EnsureLoaded()", span="98-98"];
m8_36 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="return false;", span="86-86"];
m8_38 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="return false;", span="91-91"];
m8_39 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="bool loadSucceeded = true", span="94-94"];
m8_47 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="return loadSucceeded && stateChanged;", span="123-123"];
m8_41 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label=JobLoadException, span="100-100"];
m8_44 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="loadSucceeded = false", span="116-116"];
m8_48 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="62-62"];
m8_78 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m8_25 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="127-127"];
m8_56 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="var electStateContext = new ElectStateContext(context, _connection, this, toState, oldStateName)", span="131-131"];
m8_58 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="var applyStateContext = new ApplyStateContext(\r\n                    context,\r\n                    electStateContext.CandidateState,\r\n                    oldStateName,\r\n                    electStateContext.TraversedStates)", span="134-138"];
m8_63 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="var applyStateContext = new ApplyStateContext(context, failedState, oldStateName, Enumerable.Empty<IState>())", span="152-152"];
m8_57 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="_stateChangeProcess.ElectState(_connection, electStateContext)", span="132-132"];
m8_59 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="ApplyState(applyStateContext, true)", span="140-140"];
m8_60 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="return true;", span="143-143"];
m8_61 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label=Exception, span="145-145"];
m8_62 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="147-150"];
m8_64 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="ApplyState(applyStateContext, false)", span="156-156"];
m8_65 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="return false;", span="159-159"];
m8_66 [cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="127-127"];
m8_49 [cluster="System.ArgumentException.ArgumentException(string, string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m8_0 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31"];
m8_1 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="connection == null", span="33-33"];
m8_3 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="stateChangeProcess == null", span="34-34"];
m8_5 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="_connection = connection", span="36-36"];
m8_6 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="_stateChangeProcess = stateChangeProcess", span="37-37"];
m8_2 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m8_4 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''stateChangeProcess'');", span="34-34"];
m8_7 [cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31"];
m8_70 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="163-163"];
m8_72 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="EnqueuedJobsPage.generated.cs", label="var transaction = _connection.CreateWriteTransaction()", span="165-165"];
m8_73 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="EnqueuedJobsPage.generated.cs", label="_stateChangeProcess.ApplyState(transaction, context, useFilters)", span="167-167"];
m8_74 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="EnqueuedJobsPage.generated.cs", label="transaction.Commit()", span="169-169"];
m8_75 [cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="163-163"];
m8_53 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m8_71 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m8_79 [file="EnqueuedJobsPage.generated.cs", label="Hangfire.States.StateMachine", span=""];
m9_19 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="EnqueuedState.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m9_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnqueuedState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_38 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="107-107"];
m9_42 [cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="107-107"];
m9_0 [cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", span="33-33"];
m9_3 [cluster="HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.GetData(HangFire.Common.JobMethod)", span="33-33"];
m9_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="EnqueuedState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m9_22 [cluster="string.IsNullOrEmpty(string)", file="EnqueuedState.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_23 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.ValidateQueueName(string)", span="74-74"];
m9_28 [cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.ValidateQueueName(string)", span="74-74"];
m9_29 [cluster="string.IsNullOrWhiteSpace(string)", file="EnqueuedState.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m9_37 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="EnqueuedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="16-16"];
m9_4 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="44-44"];
m9_17 [cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="44-44"];
m9_30 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="EnqueuedState.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m9_33 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="90-90"];
m9_36 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="90-90"];
m9_20 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="EnqueuedState.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m9_32 [cluster="string.Format(string, object)", file="EnqueuedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_6 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m9_31 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedState.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m10_11 [cluster="HangFire.States.EnqueuedState.Serialize()", file="EnqueuedStateFacts.cs", label="Entry HangFire.States.EnqueuedState.Serialize()", span="40-40"];
m10_0 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", file="EnqueuedStateFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", span="9-9"];
m10_1 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", file="EnqueuedStateFacts.cs", label="var state = new EnqueuedState()", span="11-11"];
m10_2 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", color=green, community=0, file="EnqueuedStateFacts.cs", label="Assert.Equal(EnqueuedState.StateName, state.Name)", prediction=13, span="12-12"];
m10_3 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", file="EnqueuedStateFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateFacts.StateName_IsCorrect()", span="9-9"];
m10_4 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="26-26"];
m10_12 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="EnqueuedStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m10_5 [cluster="Unk.Equal", file="EnqueuedStateFacts.cs", label="Entry Unk.Equal", span=""];
m10_6 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", file="EnqueuedStateFacts.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m10_8 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="EnqueuedStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                state.Serialize())", prediction=14, span="20-25"];
m10_7 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", file="EnqueuedStateFacts.cs", label="var state = new EnqueuedState()", span="18-18"];
m10_9 [cluster="HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", file="EnqueuedStateFacts.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m12_0 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobDto.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m12_1 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobDto.cs", label="InFailedState = true", span="9-9"];
m12_2 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="FailedJobDto.cs", label="Exit HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m12_3 [file="FailedJobDto.cs", label="HangFire.Storage.Monitoring.FailedJobDto", span=""];
m13_76 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="FailedJobsPage.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="23-23"];
m13_82 [cluster="HangFire.Web.RazorPage.Write(object)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m13_89 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="110-110"];
m13_87 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m13_85 [cluster="HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", span="90-90"];
m13_0 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52"];
m13_1 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="56-56"];
m13_2 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="68-68"];
m13_3 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="int from, perPage", span="70-70"];
m13_4 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="72-72"];
m13_5 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="73-73"];
m13_9 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="pager = new Pager(from, perPage, monitor.FailedCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/failed'')\r\n        }", span="80-83"];
m13_6 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Pager pager", span="75-75"];
m13_7 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="JobList<FailedJobDto> failedJobs", span="76-76"];
m13_8 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78"];
m13_10 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="failedJobs = monitor\r\n            .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="85-86"];
m13_12 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="98-98"];
m13_14 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="119-119"];
m13_69 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="469-469"];
m13_11 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="93-93"];
m13_17 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label=failedJobs, span="156-156"];
m13_13 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-success\''>\r\n        You have no failed jobs at the mom'' +\r\n''ent.\r\n    </div>\r\n'')", span="104-105"];
m13_15 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(@''    <table class=''''table failed-table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Failed</th>\r\n                <th>Queue</th>\r\n                <th>Job type</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="132-143"];
m13_16 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="var index = 0", span="148-148"];
m13_57 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(index++ == 0 ? ''display: block;'' : null)", span="389-389"];
m13_18 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                <tr class=\'''')", span="162-162"];
m13_68 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="457-457"];
m13_19 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="167-167"];
m13_20 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                    <td rowspan=\'''')", span="172-172"];
m13_21 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="177-177"];
m13_22 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                        <a href=\'''')", span="182-182"];
m13_23 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="187-187"];
m13_24 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="192-192"];
m13_25 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="197-197"];
m13_26 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="202-202"];
m13_27 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="!job.Value.InFailedState", span="207-207"];
m13_28 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="213-214"];
m13_29 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="224-224"];
m13_30 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="job.Value.FailedAt.HasValue", span="229-229"];
m13_31 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="235-235"];
m13_36 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                    <td>'')", span="265-265"];
m13_32 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="240-240"];
m13_37 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="Write(HtmlHelper.QueueLabel(job.Value.Method))", prediction=15, span="270-270"];
m13_33 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="245-245"];
m13_34 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(job.Value.FailedAt)", span="250-250"];
m13_35 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''        \r\n                            </span>\r\n'')", span="255-255"];
m13_38 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''</td>\r\n                    <td class=\'''')", span="275-275"];
m13_39 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(job.Value.InFailedState ? ''expander'' : null)", span="280-280"];
m13_40 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                        <div>\r\n                            <span title=\'''')", span="285-285"];
m13_41 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", prediction=15, span="290-290"];
m13_42 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="295-295"];
m13_43 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="FailedJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", prediction=15, span="300-300"];
m13_44 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n                        </div>\r\n'')", span="305-305"];
m13_45 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="310-310"];
m13_46 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                            <div style=\''color: #888;\''>\r\n                         '' +\r\n''       '')", span="316-317"];
m13_49 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="337-337"];
m13_47 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(job.Value.Reason)", span="322-322"];
m13_50 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="job.Value.InFailedState", span="342-342"];
m13_48 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral('' <span class=\''caret\''></span>\r\n                            </div>\r\n'')", span="327-327"];
m13_51 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                            <div class=\''pull-right\''>\r\n                           '' +\r\n''     <button class=\''btn btn-primary btn-sm\'' data-ajax=\'''')", span="348-349"];
m13_54 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="372-372"];
m13_52 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(Request.LinkTo(''/failed/retry/'' + job.Key))", span="354-354"];
m13_55 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="job.Value.InFailedState", span="377-377"];
m13_53 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\'' data-loading-text=\''Retrying...\''>\r\n                                    <span cla'' +\r\n''ss=\''glyphicon glyphicon-repeat\''></span>\r\n                                    Ret'' +\r\n''ry\r\n                                </button>\r\n                            </div'' +\r\n''>\r\n'')", span="359-362"];
m13_56 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                    <tr>\r\n                        <td colspan=\''4\'' class=\''failed-j'' +\r\n''ob-details\''>\r\n                            <div class=\''expandable\'' style=\'''')", span="383-384"];
m13_59 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(job.Value.ExceptionType)", span="399-399"];
m13_58 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                <h4>'')", span="394-394"];
m13_60 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''</h4>\r\n                                <p>\r\n                                    '')", span="404-404"];
m13_61 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(job.Value.ExceptionMessage)", span="409-409"];
m13_62 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''\r\n                                </p>\r\n                        \r\n'')", span="414-414"];
m13_63 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="419-419"];
m13_64 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                                    <pre class=\''stack-trace\''>'')", span="425-425"];
m13_67 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''                            </div>\r\n                        </td>\r\n              '' +\r\n''      </tr>\r\n'')", span="445-446"];
m13_65 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="430-430"];
m13_66 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="WriteLiteral(''</pre>\r\n'')", span="435-435"];
m13_70 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="FailedJobsPage.generated.cs", label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52"];
m13_75 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m13_73 [cluster="Unk.TryParse", file="FailedJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m13_71 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m13_80 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m13_88 [cluster="string.IsNullOrEmpty(string)", file="FailedJobsPage.generated.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_86 [cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45"];
m13_79 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m13_78 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="18-18"];
m13_81 [cluster="Unk.Write", file="FailedJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m13_83 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m13_74 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="FailedJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m13_72 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m13_77 [cluster="HttpRequestBase.LinkTo(string)", file="FailedJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m13_90 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FailedJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m13_91 [file="FailedJobsPage.generated.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m14_38 [cluster="System.Threading.Thread.Join()", file="FailedState.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m14_59 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="FailedState.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m14_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="FailedState.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", span="32-32"];
m14_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", color=green, community=0, file="FailedState.cs", label="_redis = redisManager.GetClient()", prediction=18, span="37-37"];
m14_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", color=green, community=0, file="FailedState.cs", label="_manager = manager", prediction=19, span="40-40"];
m14_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", color=green, community=0, file="FailedState.cs", label="_stateMachine = new StateMachine(_redis)", prediction=20, span="38-38"];
m14_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", file="FailedState.cs", label="_context = context", span="41-41"];
m14_60 [cluster="string.Format(string, params object[])", file="FailedState.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m14_16 [cluster="System.Threading.Thread.Start()", file="FailedState.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m14_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="FailedState.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86"];
m14_39 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="FailedState.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m14_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_21 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="FailedState.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m14_17 [cluster="HangFire.Server.Worker.Stop()", file="FailedState.cs", label="Entry HangFire.Server.Worker.Stop()", span="56-56"];
m14_18 [cluster="HangFire.Server.Worker.Stop()", file="FailedState.cs", label="_stopSent = true", span="58-58"];
m14_19 [cluster="HangFire.Server.Worker.Stop()", file="FailedState.cs", label="_cts.Cancel()", span="59-59"];
m14_20 [cluster="HangFire.Server.Worker.Stop()", file="FailedState.cs", label="Exit HangFire.Server.Worker.Stop()", span="56-56"];
m14_8 [cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="FailedState.cs", label="Exit HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36"];
m14_27 [cluster="System.Threading.ManualResetEventSlim.Set()", file="FailedState.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m14_55 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="FailedState.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="70-70"];
m14_79 [cluster="Unk.PerformJob", file="FailedState.cs", label="Entry Unk.PerformJob", span=""];
m14_10 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m14_56 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="FailedState.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m14_42 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="Entry HangFire.Server.Worker.DoWork()", span="110-110"];
m14_44 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="_manager.NotifyReady(this)", span="116-116"];
m14_45 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="_jobIsReady.Wait(_cts.Token)", span="117-117"];
m14_46 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label=_jobLock, span="119-119"];
m14_47 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="PerformJob(_jobPayload)", span="121-121"];
m14_48 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="JobFetcher.RemoveFromFetchedQueue(\r\n                            _redis, _jobPayload.Id, _jobPayload.Queue)", span="128-129"];
m14_49 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="_jobIsReady.Reset()", span="134-134"];
m14_52 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="Crashed = true", span="143-143"];
m14_53 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="144-147"];
m14_43 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label=true, span="114-114"];
m14_51 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label=Exception, span="141-141"];
m14_50 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label=OperationCanceledException, span="138-138"];
m14_54 [cluster="HangFire.Server.Worker.DoWork()", file="FailedState.cs", label="Exit HangFire.Server.Worker.DoWork()", span="110-110"];
m14_78 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="FailedState.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m14_58 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="FailedState.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m14_11 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m14_12 [cluster="System.Exception.ToString()", color=green, community=0, file="FailedState.cs", label="Entry System.Exception.ToString()", prediction=21, span="0-0"];
m14_13 [cluster="HangFire.Server.Worker.Start()", file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m14_14 [cluster="HangFire.Server.Worker.Start()", file="FailedState.cs", label="Exit HangFire.Server.Worker.Start()", span="46-46"];
m14_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, IRedisClientsManager, HangFire.Server.WorkerContext)", color=green, community=0, file="FailedState.cs", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', context.WorkerNumber))", prediction=22, span="43-43"];
m14_6 [cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="FailedState.cs", label="Entry HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36"];
m14_75 [cluster="Unk.Warn", file="FailedState.cs", label="Entry Unk.Warn", span=""];
m14_76 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="FailedState.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10"];
m14_74 [cluster="string.IsNullOrEmpty(string)", file="FailedState.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_41 [cluster="Unk.Dispose", file="FailedState.cs", label="Entry Unk.Dispose", span=""];
m14_61 [cluster="Unk.Fatal", file="FailedState.cs", label="Entry Unk.Fatal", span=""];
m14_80 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="FailedState.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m14_57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="151-151"];
m14_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="155-157"];
m14_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="var processingState = new ProcessingState(''Worker has started processing.'', _context.ServerName)", span="162-162"];
m14_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="!_stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name)", span="163-163"];
m14_70 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="178-179"];
m14_71 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="_context.Performer.PerformJob(performContext)", span="181-181"];
m14_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="String.IsNullOrEmpty(payload.Type)", span="153-153"];
m14_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="return;", span="159-159"];
m14_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="return;", span="165-165"];
m14_68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="JobState state", span="173-173"];
m14_69 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="ServerJobDescriptor jobDescriptor = null", span="175-175"];
m14_72 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="state = new SucceededState(''The job has been completed successfully.'')", span="184-184"];
m14_73 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedState.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="151-151"];
m14_40 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="FailedState.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m14_28 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="Entry HangFire.Server.Worker.Dispose()", span="90-90"];
m14_29 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="!_stopSent", span="92-92"];
m14_30 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="Stop()", span="94-94"];
m14_31 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="_thread != null", span="97-97"];
m14_32 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="_thread.Join()", span="99-99"];
m14_33 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="_thread = null", span="100-100"];
m14_34 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="_cts.Dispose()", span="103-103"];
m14_35 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="_jobIsReady.Dispose()", span="104-104"];
m14_36 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="_redis.Dispose()", span="106-106"];
m14_37 [cluster="HangFire.Server.Worker.Dispose()", file="FailedState.cs", label="Exit HangFire.Server.Worker.Dispose()", span="90-90"];
m14_15 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="FailedState.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m14_22 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedState.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="80-80"];
m14_23 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedState.cs", label=_jobLock, span="82-82"];
m14_24 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedState.cs", label="_jobPayload = payload", span="84-84"];
m14_25 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedState.cs", label="_jobIsReady.Set()", span="87-87"];
m14_26 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedState.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="80-80"];
m14_83 [file="FailedState.cs", label="HangFire.Server.Worker", span=""];
m15_3 [cluster="Unk.>", file="FailedStateFacts.cs", label="Entry Unk.>", span=""];
m15_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m15_20 [cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36"];
m15_22 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m15_13 [cluster="Unk.Equal", file="FailedStateFacts.cs", label="Entry Unk.Equal", span=""];
m15_12 [cluster="System.Exception.Exception()", file="FailedStateFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m15_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m15_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="var state = new FailedState(new Exception())", span="19-19"];
m15_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="FailedStateFacts.cs", label="Assert.Equal(FailedState.StateName, state.Name)", prediction=23, span="20-20"];
m15_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m15_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m15_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13"];
m15_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m15_4 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="13-13"];
m15_5 [cluster="lambda expression", file="FailedStateFacts.cs", label="new FailedState(null)", span="13-13"];
m15_6 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="13-13"];
m15_19 [cluster="System.Exception.Exception(string)", file="FailedStateFacts.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m15_14 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m15_15 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="var state = new FailedState(new Exception(''Message''))", span="26-26"];
m15_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="FailedStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ExceptionType'', ''System.Exception'' },\r\n                    { ''ExceptionMessage'', ''Message'' },\r\n                    { ''ExceptionDetails'', ''<Non-empty>'' }\r\n                }, \r\n                state.Serialize())", prediction=24, span="28-36"];
m15_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m16_18 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.Validate()", span="208-208"];
m16_76 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="Method.DeclaringType == null", span="210-210"];
m16_77 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="212-212"];
m16_78 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="215-215"];
m16_79 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="217-220"];
m16_80 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="!Method.IsPublic", span="223-223"];
m16_81 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="225-225"];
m16_82 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="typeof (Task).IsAssignableFrom(Method.ReturnType)", span="228-228"];
m16_83 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="230-230"];
m16_84 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="var parameters = Method.GetParameters()", span="233-233"];
m16_85 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="parameters.Length != Arguments.Length", span="235-235"];
m16_87 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label=parameters, span="240-240"];
m16_86 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="237-237"];
m16_88 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="parameter.IsOut", span="246-246"];
m16_90 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="parameter.ParameterType.IsByRef", span="252-252"];
m16_89 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="248-249"];
m16_91 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="254-255"];
m16_92 [cluster="Hangfire.Common.Job.Validate()", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.Validate()", span="208-208"];
m16_95 [cluster="string.Format(string, object, object)", file="FailedStateHandler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m16_165 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="FailedStateHandler.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m16_33 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="282-282"];
m16_107 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var parameters = Method.GetParameters()", span="286-286"];
m16_115 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="value = cancellationToken", span="298-298"];
m16_108 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var result = new List<object>(Arguments.Length)", span="287-287"];
m16_110 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="i < parameters.Length", span="289-289"];
m16_111 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var parameter = parameters[i]", span="291-291"];
m16_109 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var i = 0", span="289-289"];
m16_122 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="result.Add(value)", span="324-324"];
m16_124 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="return result.ToArray();", span="327-327"];
m16_112 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var argument = Arguments[i]", span="292-292"];
m16_123 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="i++", span="289-289"];
m16_114 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="296-296"];
m16_116 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="value = argument != null\r\n								? JobHelper.FromJson(argument, parameter.ParameterType)\r\n								: null", span="304-306"];
m16_118 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="parameter.ParameterType == typeof (object)", span="310-310"];
m16_120 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="318-318"];
m16_113 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="object value", span="294-294"];
m16_119 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="value = argument", span="314-314"];
m16_121 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="value = converter.ConvertFromInvariantString(argument)", span="319-319"];
m16_117 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label=Exception, span="308-308"];
m16_125 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label=Exception, span="329-329"];
m16_126 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="331-333"];
m16_127 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="282-282"];
m16_47 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="FailedStateHandler.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m16_93 [cluster="System.Type.IsAssignableFrom(System.Type)", file="FailedStateHandler.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m16_173 [cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m16_66 [cluster="object.GetType()", file="FailedStateHandler.cs", label="Entry object.GetType()", span="0-0"];
m16_105 [cluster="string.Format(string, object)", file="FailedStateHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_35 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="122-122"];
m16_36 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="FailedStateHandler.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="124-126"];
m16_37 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="122-122"];
m16_32 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="260-260"];
m16_97 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="var instance = activator.ActivateJob(Type)", span="264-264"];
m16_98 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="instance == null", span="266-266"];
m16_100 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="return instance;", span="272-272"];
m16_99 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="268-269"];
m16_101 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label=Exception, span="274-274"];
m16_102 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="276-278"];
m16_103 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="260-260"];
m16_2 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69"];
m16_3 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="type == null", span="71-71"];
m16_5 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="method == null", span="72-72"];
m16_7 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="arguments == null", span="73-73"];
m16_9 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="method.ContainsGenericParameters", span="75-75"];
m16_11 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="Type = type", span="80-80"];
m16_12 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="Method = method", span="81-81"];
m16_13 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="Arguments = arguments", span="82-82"];
m16_4 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''type'');", span="71-71"];
m16_6 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''method'');", span="72-72"];
m16_8 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''arguments'');", span="73-73"];
m16_10 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="throw new ArgumentException(''Job method can not contain unassigned generic type parameters.'', ''method'');", span="77-77"];
m16_14 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="Validate()", span="84-84"];
m16_15 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69"];
m16_46 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="FailedStateHandler.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m16_94 [cluster="System.ArgumentException.ArgumentException(string)", file="FailedStateHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m16_19 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="96-96"];
m16_20 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="activator == null", span="98-98"];
m16_22 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="cancellationToken == null", span="99-99"];
m16_27 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="instance = Activate(activator)", span="108-108"];
m16_28 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="111-111"];
m16_21 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''activator'');", span="98-98"];
m16_23 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''cancellationToken'');", span="99-99"];
m16_24 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="object instance = null", span="101-101"];
m16_25 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="object result", span="103-103"];
m16_29 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="result = InvokeMethod(instance, deserializedArguments)", span="112-112"];
m16_26 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="!Method.IsStatic", span="106-106"];
m16_30 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="return result;", span="119-119"];
m16_31 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="96-96"];
m16_38 [cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m16_64 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410"];
m16_167 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="Debug.Assert(expression != null)", span="412-412"];
m16_168 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="var constantExpression = expression as ConstantExpression", span="414-414"];
m16_171 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="421-421"];
m16_169 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="constantExpression != null", span="416-416"];
m16_170 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="return constantExpression.Value;", span="418-418"];
m16_172 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410"];
m16_161 [cluster="System.Diagnostics.Debug.Assert(bool)", file="FailedStateHandler.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m16_163 [cluster="Unk.ToArray", file="FailedStateHandler.cs", label="Entry Unk.ToArray", span=""];
m16_65 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="FailedStateHandler.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m16_34 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="337-337"];
m16_134 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label="return Method.Invoke(instance, deserializedArguments);", span="341-341"];
m16_135 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label=TargetInvocationException, span="343-343"];
m16_136 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label="ex.InnerException is OperationCanceledException", span="345-345"];
m16_137 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label="throw ex.InnerException;", span="350-350"];
m16_138 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="353-355"];
m16_139 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="337-337"];
m16_130 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="FailedStateHandler.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m16_140 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="FailedStateHandler.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m16_67 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377"];
m16_149 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="Debug.Assert(callExpression != null)", span="379-379"];
m16_150 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="var arguments = callExpression.Arguments.Select(GetExpressionValue).ToArray()", span="381-381"];
m16_151 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="383-383"];
m16_152 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label=arguments, span="384-384"];
m16_158 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="serializedArguments.Add(value)", span="404-404"];
m16_159 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="return serializedArguments.ToArray();", span="407-407"];
m16_153 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="string value = null", span="386-386"];
m16_154 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="argument != null", span="388-388"];
m16_155 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="argument is DateTime", span="390-390"];
m16_156 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="value = ((DateTime) argument).ToString(''o'', CultureInfo.InvariantCulture)", span="392-392"];
m16_157 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="value = JobHelper.ToJson(argument)", span="396-396"];
m16_160 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377"];
m16_133 [cluster="System.Collections.Generic.List<T>.ToArray()", file="FailedStateHandler.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m16_104 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="FailedStateHandler.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m16_63 [cluster="System.NotSupportedException.NotSupportedException(string)", file="FailedStateHandler.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m16_68 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m16_69 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="methodCall == null", span="194-194"];
m16_71 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="196-196"];
m16_70 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''methodCall'');", span="194-194"];
m16_72 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="callExpression == null", span="197-197"];
m16_74 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="202-205"];
m16_73 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="199-199"];
m16_75 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m16_39 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="136-136"];
m16_44 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="FailedStateHandler.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="138-140"];
m16_45 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="136-136"];
m16_166 [cluster="Unk.ToJson", file="FailedStateHandler.cs", label="Entry Unk.ToJson", span=""];
m16_43 [cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m16_162 [cluster="Unk.Select", file="FailedStateHandler.cs", label="Entry Unk.Select", span=""];
m16_128 [cluster="System.Collections.Generic.List<T>.List(int)", file="FailedStateHandler.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m16_17 [cluster="System.ArgumentException.ArgumentException(string, string)", file="FailedStateHandler.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m16_164 [cluster="List<string>.cstr", file="FailedStateHandler.cs", label="Entry List<string>.cstr", span=""];
m16_129 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m16_132 [cluster="System.Collections.Generic.List<T>.Add(T)", file="FailedStateHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m16_106 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="FailedStateHandler.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m16_40 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129"];
m16_41 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="FailedStateHandler.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="131-133"];
m16_42 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129"];
m16_141 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.Dispose(object)", span="359-359"];
m16_142 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label="var disposable = instance as IDisposable", span="363-363"];
m16_143 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label="disposable != null", span="364-364"];
m16_144 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label="disposable.Dispose()", span="366-366"];
m16_145 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label=Exception, span="369-369"];
m16_146 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="371-373"];
m16_147 [cluster="Hangfire.Common.Job.Dispose(object)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.Dispose(object)", span="359-359"];
m16_131 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="FailedStateHandler.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m16_174 [cluster="Hangfire.Common.Job.ToString()", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.ToString()", span="424-424"];
m16_175 [cluster="Hangfire.Common.Job.ToString()", file="FailedStateHandler.cs", label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="426-426"];
m16_176 [cluster="Hangfire.Common.Job.ToString()", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.ToString()", span="424-424"];
m16_96 [cluster="System.Reflection.MethodBase.GetParameters()", file="FailedStateHandler.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m16_0 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="49-49"];
m16_1 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="49-49"];
m16_148 [cluster="System.IDisposable.Dispose()", file="FailedStateHandler.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m16_177 [cluster="System.Type.ToGenericTypeString()", file="FailedStateHandler.cs", label="Entry System.Type.ToGenericTypeString()", span="8-8"];
m16_48 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m16_49 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="methodCall == null", span="152-152"];
m16_51 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="154-154"];
m16_50 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="throw new ArgumentNullException(''methodCall'');", span="152-152"];
m16_52 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="callExpression == null", span="155-155"];
m16_55 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="callExpression.Object != null", span="162-162"];
m16_56 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="var objectValue = GetExpressionValue(callExpression.Object)", span="164-164"];
m16_60 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="type = callExpression.Method.DeclaringType", span="174-174"];
m16_61 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="return new Job(\r\n                type, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="179-182"];
m16_53 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="157-157"];
m16_54 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="Type type", span="160-160"];
m16_57 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="objectValue == null", span="165-165"];
m16_59 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="type = objectValue.GetType()", span="170-170"];
m16_58 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="throw new InvalidOperationException(''Expression object should not be null.'');", span="167-167"];
m16_62 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FailedStateHandler.cs", label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m16_178 [file="FailedStateHandler.cs", label="Hangfire.Common.Job", span=""];
m17_4 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
m17_5 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="GlobalStateHandlerCollection.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
m17_29 [cluster="Hangfire.JobStorage.GetConnection()", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m17_33 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="100-100"];
m17_34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="jobId == null", span="102-102"];
m17_36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="state == null", span="103-103"];
m17_40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="return stateMachine.ChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", span="108-108"];
m17_35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''jobId'');", span="102-102"];
m17_37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''state'');", span="103-103"];
m17_38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="var connection = _storage.GetConnection()", span="105-105"];
m17_39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="var stateMachine = _stateMachineFactory.Create(connection)", span="107-107"];
m17_41 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="GlobalStateHandlerCollection.cs", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="100-100"];
m17_0 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m17_1 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="GlobalStateHandlerCollection.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m17_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m17_6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
m17_7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="storage == null", span="70-70"];
m17_9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="stateMachineFactory == null", span="71-71"];
m17_11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="process == null", span="72-72"];
m17_13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="_storage = storage", span="74-74"];
m17_14 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="_stateMachineFactory = stateMachineFactory", span="75-75"];
m17_15 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="_process = process", span="76-76"];
m17_8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''storage'');", span="70-70"];
m17_10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71"];
m17_12 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''process'');", span="72-72"];
m17_16 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="GlobalStateHandlerCollection.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
m17_32 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m17_31 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m17_30 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="43-43"];
m17_42 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m17_18 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m17_19 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="job == null", span="82-82"];
m17_21 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="state == null", span="83-83"];
m17_24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89"];
m17_20 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''job'');", span="82-82"];
m17_22 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="throw new ArgumentNullException(''state'');", span="83-83"];
m17_23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="var connection = _storage.GetConnection()", span="87-87"];
m17_25 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="return _process.Run(context);", span="90-90"];
m17_26 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label=Exception, span="93-93"];
m17_27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95"];
m17_28 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="GlobalStateHandlerCollection.cs", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m17_2 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="GlobalStateHandlerCollection.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m17_3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="GlobalStateHandlerCollection.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m17_44 [file="GlobalStateHandlerCollection.cs", label="Hangfire.BackgroundJobClient", span=""];
m18_10 [cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="49-49"];
m18_6 [cluster="HangFire.Common.States.StateHandlerCollection.StateHandlerCollection()", file="GlobalStateHandlers.cs", label="Entry HangFire.Common.States.StateHandlerCollection.StateHandlerCollection()", span="6-6"];
m18_0 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="7-7"];
m18_1 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs", label="Handlers = new StateHandlerCollection()", prediction=25, span="9-9"];
m18_2 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs", label="Handlers.AddHandler(new SucceededState.Handler())", prediction=26, span="10-10"];
m18_3 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs", label="Handlers.AddHandler(new ScheduledState.Handler())", prediction=27, span="11-11"];
m18_4 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=green, community=0, file="GlobalStateHandlers.cs", label="Handlers.AddHandler(new EnqueuedState.Handler())", prediction=28, span="12-12"];
m18_5 [cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs", label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="7-7"];
m18_8 [cluster="Unk.AddHandler", file="GlobalStateHandlers.cs", label="Entry Unk.AddHandler", span=""];
m18_7 [cluster="HangFire.States.SucceededState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.SucceededState.Handler.Handler()", span="53-53"];
m18_9 [cluster="HangFire.States.ScheduledState.Handler.Handler()", file="GlobalStateHandlers.cs", label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="48-48"];
m19_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="HangFireConfig.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m19_0 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="Entry MvcSample.HangFireConfig.Start()", span="16-16"];
m19_1 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="JobStorage.Current = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.SqlServer.Tests;Trusted_Connection=True;'')", span="26-27"];
m19_2 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="_server = new AspNetBackgroundJobServer()", span="42-42"];
m19_3 [cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", label="Exit MvcSample.HangFireConfig.Start()", span="16-16"];
m19_6 [cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs", label="Entry MvcSample.HangFireConfig.Stop()", span="46-46"];
m19_7 [cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs", label="_server.Stop()", span="48-48"];
m19_8 [cluster="MvcSample.HangFireConfig.Stop()", file="HangFireConfig.cs", label="Exit MvcSample.HangFireConfig.Stop()", span="46-46"];
m19_5 [cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="HangFireConfig.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44"];
m19_9 [cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", file="HangFireConfig.cs", label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63"];
m20_31 [cluster="System.Type.GetType(string, bool)", file="HtmlHelper.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m20_172 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="200-200"];
m20_52 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m20_53 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="58-58"];
m20_54 [cluster="lambda expression", file="HtmlHelper.cs", label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58"];
m20_55 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="58-58"];
m20_56 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m20_112 [cluster="lambda expression", file="HtmlHelper.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="118-118"];
m20_0 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m20_2 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m20_5 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28"];
m20_16 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="return new HtmlString(Guid.TryParse(jobId, out guid)\r\n                ? (shorten ? jobId.Substring(0, 8) : jobId)\r\n                : ''#'' + jobId);", span="58-60"];
m20_18 [cluster="System.Guid.TryParse(string, out System.Guid)", file="HtmlHelper.cs", label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0"];
m20_109 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="HtmlHelper.cs", label="Assert.Equal(''some-job'', id)", span="123-123"];
m20_115 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="var client = CreateClient()", span="129-129"];
m20_116 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>()))\r\n                .Throws<InvalidOperationException>()", span="130-131"];
m20_117 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="133-134"];
m20_118 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="Assert.NotNull(exception.InnerException)", span="136-136"];
m20_119 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="137-137"];
m20_40 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="40-40"];
m20_58 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="HtmlHelper.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67"];
m20_60 [cluster="Unk.DoesNotThrow", file="HtmlHelper.cs", label="Entry Unk.DoesNotThrow", span=""];
m20_61 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="67-67"];
m20_63 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="67-67"];
m20_64 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="HtmlHelper.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m20_65 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m20_67 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71"];
m20_62 [cluster="lambda expression", file="HtmlHelper.cs", label="new BackgroundJobClient()", span="67-67"];
m20_66 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="HtmlHelper.cs", label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73"];
m20_68 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="73-73"];
m20_71 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77"];
m20_134 [cluster="lambda expression", file="HtmlHelper.cs", label="client.ChangeState(null, _state.Object, null)", span="146-146"];
m20_135 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="146-146"];
m20_136 [cluster="Unk.ChangeState", file="HtmlHelper.cs", label="Entry Unk.ChangeState", span=""];
m20_137 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="152-152"];
m20_37 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="87-87"];
m20_36 [cluster="Unk.>", file="HtmlHelper.cs", label="Entry Unk.>", span=""];
m20_41 [cluster="BackgroundJobClient.cstr", file="HtmlHelper.cs", label="Entry BackgroundJobClient.cstr", span=""];
m20_43 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="HtmlHelper.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49"];
m20_11 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="HtmlHelper.cs", label="return new HtmlString(value);", span="52-52"];
m20_17 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m20_94 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write('', '')", span="195-195"];
m20_104 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(''</span>'')", span="213-213"];
m20_32 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="85-85"];
m20_34 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", prediction=29, span="85-85"];
m20_33 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="return @String.Join('', '', properties.Select(x => String.Format(''{0}: \''{1}\'''', x.Key, x.Value)));", span="87-87"];
m20_35 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m20_77 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int anchor = match.Index", span="163-163"];
m20_80 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, type.Index - anchor), writer)", span="171-171"];
m20_78 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="GroupCollection groups = match.Groups", span="164-164"];
m20_79 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Group type = groups[''type'']", span="170-170"];
m20_81 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = type.Index", span="172-172"];
m20_44 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="HtmlHelper.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51"];
m20_114 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="127-127"];
m20_57 [cluster="System.IO.StringWriter.StringWriter()", file="HtmlHelper.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m20_59 [cluster="System.IO.StringWriter.ToString()", file="HtmlHelper.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m20_13 [cluster="Unk.Setup", file="HtmlHelper.cs", label="Entry Unk.Setup", span=""];
m20_95 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="string argType = parameter.Substring(0, spaceIndex).Trim()", span="196-196"];
m20_96 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, ''st-param-type'', argType)", span="197-197"];
m20_97 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(' ')", span="198-198"];
m20_98 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="string argName = parameter.Substring(spaceIndex + 1).Trim()", span="199-199"];
m20_99 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, ''st-param-name'', argName)", span="200-200"];
m20_120 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="127-127"];
m20_121 [cluster="Unk.NotNull", file="HtmlHelper.cs", label="Entry Unk.NotNull", span=""];
m20_122 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="130-130"];
m20_123 [cluster="lambda expression", file="HtmlHelper.cs", label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="130-130"];
m20_124 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="130-130"];
m20_125 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="134-134"];
m20_126 [cluster="lambda expression", file="HtmlHelper.cs", label="client.Create(_job, _state.Object)", span="134-134"];
m20_69 [cluster="lambda expression", file="HtmlHelper.cs", label="new BackgroundJobClient(_storage.Object)", span="73-73"];
m20_19 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="HtmlHelper.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m20_20 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="24-24"];
m20_22 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="24-24"];
m20_24 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="29-29"];
m20_70 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="73-73"];
m20_6 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29"];
m20_45 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m20_46 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="49-49"];
m20_47 [cluster="lambda expression", file="HtmlHelper.cs", label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49"];
m20_48 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="49-49"];
m20_49 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55"];
m20_50 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="HtmlHelper.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58"];
m20_51 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="HtmlHelper.cs", label="Assert.Equal(''process'', exception.ParamName)", span="60-60"];
m20_10 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20"];
m20_12 [cluster="Mock<JobStorage>.cstr", file="HtmlHelper.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m20_145 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="HtmlHelper.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102"];
m20_146 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="163-163"];
m20_147 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="HtmlHelper.cs", label="var client = CreateClient()", span="165-165"];
m20_148 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="HtmlHelper.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="167-167"];
m20_149 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="HtmlHelper.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="169-172"];
m20_150 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="163-163"];
m20_7 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="_process = new Mock<IJobCreationProcess>()", span="31-31"];
m20_9 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="HtmlHelper.cs", label="_job = Job.FromExpression(() => Method())", span="33-33"];
m20_38 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="40-40"];
m20_39 [cluster="lambda expression", file="HtmlHelper.cs", label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40"];
m20_25 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="73-73"];
m20_75 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(match != null)", span="160-160"];
m20_84 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-method'', groups[''method''], writer)", span="175-175"];
m20_92 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Span(writer, ''st-param'', parameter.Trim())", span="190-190"];
m20_152 [cluster="lambda expression", file="HtmlHelper.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="169-172"];
m20_160 [cluster="lambda expression", file="HtmlHelper.cs", label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="182-185"];
m20_170 [cluster="lambda expression", file="HtmlHelper.cs", label="x.ChangeState(''job-id'', _state.Object, null)", span="191-191"];
m20_102 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-file'', groups[''file''], writer)", span="210-210"];
m20_26 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="var type = Type.GetType(typeName, throwOnError: false)", span="75-75"];
m20_28 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="return typeName;", span="79-79"];
m20_74 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(text != null)", span="159-159"];
m20_76 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="161-161"];
m20_83 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-type'', type, writer)", span="174-174"];
m20_85 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Group parameters = groups[''params'']", span="181-181"];
m20_91 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="spaceIndex <= 0", span="188-188"];
m20_93 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="position++ > 0", span="194-194"];
m20_101 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = parameters.Index + parameters.Length", span="204-204"];
m20_111 [cluster="string.LastIndexOf(char)", file="HtmlHelper.cs", label="Entry string.LastIndexOf(char)", span="0-0"];
m20_127 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="Debug.Assert(writer != null)", span="246-246"];
m20_133 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="244-244"];
m20_143 [cluster="lambda expression", file="HtmlHelper.cs", label="client.ChangeState(''jobId'', null, null)", span="157-157"];
m20_151 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="169-172"];
m20_153 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="169-172"];
m20_159 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="182-185"];
m20_161 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="182-185"];
m20_169 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="191-191"];
m20_171 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="191-191"];
m20_103 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="anchor = StackFrameSpan(text, anchor, ''st-line'', groups[''line''], writer)", span="211-211"];
m20_113 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", span="244-244"];
m20_142 [cluster="lambda expression", file="HtmlHelper.cs", label="Entry lambda expression", span="157-157"];
m20_30 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.JobType(string)", span="73-73"];
m20_29 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="return type.FullName;", span="82-82"];
m20_144 [cluster="lambda expression", file="HtmlHelper.cs", label="Exit lambda expression", span="157-157"];
m20_86 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, parameters.Index - anchor), writer)", span="182-182"];
m20_89 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="parameters.Captures[0].Value.Split(',')", span="185-185"];
m20_87 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(''<span class='st-params'>('')", span="183-183"];
m20_88 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int position = 0", span="184-184"];
m20_90 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int spaceIndex = parameter.LastIndexOf(' ')", span="187-187"];
m20_105 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="int end = match.Index + match.Length", span="219-219"];
m20_106 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="HtmlEncode(text.Substring(anchor, end - anchor), writer)", span="220-220"];
m20_107 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="Exit HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", span="157-157"];
m20_108 [cluster="System.IO.TextWriter.Write(string)", file="HtmlHelper.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m20_110 [cluster="string.Split(params char[])", file="HtmlHelper.cs", label="Entry string.Split(params char[])", span="0-0"];
m20_14 [cluster="Unk.Returns", file="HtmlHelper.cs", label="Entry Unk.Returns", span=""];
m20_15 [cluster="Mock<IStateMachine>.cstr", file="HtmlHelper.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m20_82 [cluster="HangFire.Web.HtmlHelper.MarkupStackFrame(string, System.Text.RegularExpressions.Match, System.IO.TextWriter)", file="HtmlHelper.cs", label="writer.Write(''<span class='st-frame'>'')", span="173-173"];
m20_173 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="HtmlHelper.cs", label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="206-206"];
m20_174 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="204-204"];
m20_72 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="HtmlHelper.cs", label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80"];
m20_100 [cluster="Unk.Verify", file="HtmlHelper.cs", label="Entry Unk.Verify", span=""];
m20_128 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write(''<span class=''')", span="248-248"];
m20_131 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="HtmlEncode(value, writer)", span="251-251"];
m20_129 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write(klass)", span="249-249"];
m20_130 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write('''>'')", span="250-250"];
m20_132 [cluster="HangFire.Web.HtmlHelper.Span(System.IO.TextWriter, string, string)", file="HtmlHelper.cs", label="writer.Write(''</span>'')", span="252-252"];
m20_154 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="176-176"];
m20_155 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="HtmlHelper.cs", label="var client = CreateClient()", span="178-178"];
m20_156 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="HtmlHelper.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="180-180"];
m20_157 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="HtmlHelper.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="182-185"];
m20_158 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="176-176"];
m20_27 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="type == null", span="77-77"];
m20_162 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="HtmlHelper.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="189-189"];
m20_163 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="HtmlHelper.cs", label="_stateMachine.Setup(x => x.ChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="191-192"];
m20_164 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="HtmlHelper.cs", label="var client = CreateClient()", span="193-193"];
m20_165 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="HtmlHelper.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="195-195"];
m20_166 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="HtmlHelper.cs", label="Assert.True(result)", span="197-197"];
m20_167 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="189-189"];
m20_168 [cluster="Unk.True", file="HtmlHelper.cs", label="Entry Unk.True", span=""];
m20_140 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="HtmlHelper.cs", label="Assert.Equal(''state'', exception.ParamName)", span="159-159"];
m20_138 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="HtmlHelper.cs", label="var client = CreateClient()", span="154-154"];
m20_139 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="HtmlHelper.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="156-157"];
m20_141 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="HtmlHelper.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="152-152"];
m20_73 [cluster="string.Substring(int)", file="HtmlHelper.cs", label="Entry string.Substring(int)", span="0-0"];
m20_175 [file="HtmlHelper.cs", label="Hangfire.Core.Tests.BackgroundJobClientFacts", span=""];
m20_176 [file="HtmlHelper.cs", label=client, span=""];
m20_177 [file="HtmlHelper.cs", label=client, span=""];
m20_178 [file="HtmlHelper.cs", label=client, span=""];
m20_179 [file="HtmlHelper.cs", label=client, span=""];
m20_180 [file="HtmlHelper.cs", label=client, span=""];
m21_1 [cluster="HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="IJobClient.cs", label="Exit HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="24-24"];
m22_0 [cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="IJobFilterProvider.cs", label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34"];
m22_1 [cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="IJobFilterProvider.cs", label="Exit HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34"];
m23_0 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="InvocationData.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4"];
m23_1 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", color=green, community=0, file="InvocationData.cs", label="Type = type", prediction=30, span="7-7"];
m23_2 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", color=green, community=0, file="InvocationData.cs", label="Method = method", prediction=31, span="8-8"];
m23_3 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", color=green, community=0, file="InvocationData.cs", label="ParameterTypes = parameterTypes", prediction=32, span="9-9"];
m23_4 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="InvocationData.cs", label="Exit HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4"];
m24_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="10-10"];
m24_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="10-10"];
m24_6 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13"];
m24_7 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="13-13"];
m24_22 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m24_23 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m24_26 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="31-31"];
m24_27 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="31-31"];
m24_2 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11"];
m24_3 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="11-11"];
m24_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="12-12"];
m24_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="12-12"];
m24_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="25-25"];
m24_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="25-25"];
m24_28 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="32-32"];
m24_29 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="32-32"];
m24_32 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="36-36"];
m24_33 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="36-36"];
m24_34 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="37-37"];
m24_35 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="37-37"];
m24_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="16-16"];
m24_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="16-16"];
m24_36 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39"];
m24_37 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="39-39"];
m24_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19"];
m24_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19"];
m24_20 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m24_21 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m24_14 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="21-21"];
m24_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="21-21"];
m24_30 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="35-35"];
m24_31 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="35-35"];
m24_12 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="20-20"];
m24_13 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="20-20"];
m24_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="22-22"];
m24_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="22-22"];
m24_24 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="30-30"];
m24_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="30-30"];
m28_25 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", span="100-100"];
m28_32 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label=parameters, span="102-102"];
m28_33 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label="parameter.IsOut", span="108-108"];
m28_35 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label="parameter.ParameterType.IsByRef", span="114-114"];
m28_34 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="110-111"];
m28_36 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label="throw new ArgumentException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="116-117"];
m28_37 [cluster="HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.ValidateMethodParameters(System.Collections.Generic.IEnumerable<System.Reflection.ParameterInfo>)", span="100-100"];
m28_24 [cluster="System.Reflection.MethodBase.GetParameters()", file="JobClient.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m28_39 [cluster="System.ArgumentException.ArgumentException(string)", file="JobClient.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m28_27 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="50-50"];
m28_38 [cluster="System.NotSupportedException.NotSupportedException(string)", file="JobClient.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m28_28 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="95-95"];
m28_29 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="_connection.Dispose()", span="97-97"];
m28_30 [cluster="HangFire.Client.JobClient.Dispose()", file="JobClient.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="95-95"];
m28_11 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75"];
m28_16 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", color=green, community=0, file="JobClient.cs", label="state == null", prediction=33, span="79-79"];
m28_17 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="throw new ArgumentNullException(''state'');", span="79-79"];
m28_19 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="ValidateMethodParameters(parameters)", span="83-83"];
m28_21 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="_jobCreator.CreateJob(context)", span="86-86"];
m28_26 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="44-44"];
m28_0 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41"];
m28_1 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41"];
m28_2 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", span="50-50"];
m28_3 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="connection == null", span="52-52"];
m28_5 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="jobCreator == null", span="53-53"];
m28_7 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="_connection = connection", span="55-55"];
m28_8 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="_jobCreator = jobCreator", span="56-56"];
m28_4 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="throw new ArgumentNullException(''connection'');", span="52-52"];
m28_6 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="throw new ArgumentNullException(''jobCreator'');", span="53-53"];
m28_9 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection, HangFire.Client.JobCreator)", span="50-50"];
m28_31 [cluster="System.IDisposable.Dispose()", file="JobClient.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m28_22 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="return context.JobId;", span="88-88"];
m28_23 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75"];
m28_40 [file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m29_92 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="110-110"];
m29_93 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="112-112"];
m29_94 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="_parameters.Add(''Name'', ''Value'')", span="113-113"];
m29_96 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="117-117"];
m29_97 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="119-123"];
m29_95 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="115-115"];
m29_98 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="110-110"];
m29_214 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="265-265"];
m29_215 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="_process.Setup(x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(new Exception())", span="268-269"];
m29_216 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="271-271"];
m29_217 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="274-274"];
m29_218 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false))", span="277-277"];
m29_219 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="Assert.False(result)", span="279-279"];
m29_220 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="265-265"];
m29_17 [cluster="Mock<IState>.cstr", file="JobClientSteps.cs", label="Entry Mock<IState>.cstr", span=""];
m29_58 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68"];
m29_59 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="70-71"];
m29_60 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="73-73"];
m29_61 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68"];
m29_83 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="99-99"];
m29_84 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="101-101"];
m29_85 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="103-104"];
m29_86 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''state'', exception.ParamName)", span="106-106"];
m29_87 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="99-99"];
m29_247 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="309-309"];
m29_248 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="312-318"];
m29_249 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="320-320"];
m29_250 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="322-322"];
m29_251 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="325-325"];
m29_252 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true))", span="328-331"];
m29_253 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="Assert.True(result)", span="333-333"];
m29_254 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="309-309"];
m29_21 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="JobClientSteps.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m29_53 [cluster="Unk.Equal", file="JobClientSteps.cs", label="Entry Unk.Equal", span=""];
m29_221 [cluster="System.Exception.Exception()", file="JobClientSteps.cs", label="Entry System.Exception.Exception()", span="0-0"];
m29_75 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="88-88"];
m29_76 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="90-90"];
m29_77 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="92-93"];
m29_78 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="95-95"];
m29_79 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="88-88"];
m29_0 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25"];
m29_1 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_process = new Mock<IStateChangeProcess>()", span="27-27"];
m29_2 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_job = Job.FromExpression(() => Console.WriteLine())", span="29-29"];
m29_3 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_parameters = new Dictionary<string, string>()", span="30-30"];
m29_4 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_state = new Mock<IState>()", span="31-31"];
m29_5 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="32-32"];
m29_6 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_connection = new Mock<IStorageConnection>()", span="34-34"];
m29_7 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="35-35"];
m29_8 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="37-37"];
m29_9 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="39-43"];
m29_10 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = _job\r\n                })", span="45-50"];
m29_11 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_distributedLock = new Mock<IDisposable>()", span="52-52"];
m29_12 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="53-55"];
m29_13 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25"];
m29_295 [cluster="Unk.ElectState", file="JobClientSteps.cs", label="Entry Unk.ElectState", span=""];
m29_47 [cluster="string.Format(string, object)", file="JobClientSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m29_237 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobClientSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m29_145 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="170-170"];
m29_146 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="172-172"];
m29_147 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.ChangeState(JobId, _state.Object, new string[0]))", span="174-175"];
m29_148 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobClientSteps.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="177-177"];
m29_149 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="170-170"];
m29_38 [cluster="Unk.>", file="JobClientSteps.cs", label="Entry Unk.>", span=""];
m29_39 [cluster="Unk.CreateExpiredJob", file="JobClientSteps.cs", label="Entry Unk.CreateExpiredJob", span=""];
m29_267 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="337-337"];
m29_268 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="var machine = CreateStateMachine()", span="340-340"];
m29_269 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="343-343"];
m29_270 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true))", span="346-350"];
m29_272 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="Assert.True(result)", span="354-354"];
m29_271 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="_transaction.Verify(x => x.Commit())", span="352-352"];
m29_273 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="337-337"];
m29_176 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="210-210"];
m29_177 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="213-213"];
m29_178 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobClientSteps.cs", label="stateMachine.ChangeState(JobId, _state.Object, null)", span="216-216"];
m29_179 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true))", span="219-222"];
m29_180 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="210-210"];
m29_57 [cluster="StateMachine.cstr", file="JobClientSteps.cs", label="Entry StateMachine.cstr", span=""];
m29_195 [cluster="Unk.False", file="JobClientSteps.cs", label="Entry Unk.False", span=""];
m29_127 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="148-148"];
m29_128 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="150-150"];
m29_129 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(null, _state.Object, FromOldState))", span="152-153"];
m29_130 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="155-155"];
m29_131 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="148-148"];
m29_49 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59"];
m29_50 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _process.Object))", span="61-62"];
m29_51 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="64-64"];
m29_52 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59"];
m29_27 [cluster="System.Console.WriteLine()", file="JobClientSteps.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m29_14 [cluster="Mock<IStateChangeProcess>.cstr", file="JobClientSteps.cs", label="Entry Mock<IStateChangeProcess>.cstr", span=""];
m29_135 [cluster="Unk.ChangeState", file="JobClientSteps.cs", label="Entry Unk.ChangeState", span=""];
m29_144 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="JobClientSteps.cs", label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="62-62"];
m29_153 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="181-181"];
m29_154 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="183-183"];
m29_155 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobClientSteps.cs", label="stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="185-185"];
m29_156 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobClientSteps.cs", label="_distributedLock.Verify(x => x.Dispose())", span="187-187"];
m29_157 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="181-181"];
m29_313 [cluster="System.NotSupportedException.NotSupportedException()", file="JobClientSteps.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m29_70 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="402-402"];
m29_323 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobClientSteps.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _process.Object);", span="404-406"];
m29_324 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="402-402"];
m29_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m29_136 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="159-159"];
m29_137 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="161-161"];
m29_138 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(JobId, null, FromOldState))", span="163-164"];
m29_139 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="166-166"];
m29_140 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="159-159"];
m29_18 [cluster="Unk.Setup", file="JobClientSteps.cs", label="Entry Unk.Setup", span=""];
m29_305 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="379-379"];
m29_306 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="var exception = new NotSupportedException()", span="382-382"];
m29_307 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="_process.Setup(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(exception)", span="384-386"];
m29_310 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false))", span="394-397"];
m29_308 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="var machine = CreateStateMachine()", span="388-388"];
m29_309 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="391-391"];
m29_311 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="Assert.False(result)", span="399-399"];
m29_312 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="379-379"];
m29_91 [cluster="Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="JobClientSteps.cs", label="Entry Hangfire.States.StateMachine.CreateInState(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40"];
m29_161 [cluster="Unk.Dispose", file="JobClientSteps.cs", label="Entry Unk.Dispose", span=""];
m29_222 [cluster="Unk.Throws", file="JobClientSteps.cs", label="Entry Unk.Throws", span=""];
m29_65 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="77-77"];
m29_66 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="79-79"];
m29_67 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="JobClientSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="81-82"];
m29_68 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="JobClientSteps.cs", label="Assert.Equal(''job'', exception.ParamName)", span="84-84"];
m29_69 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="77-77"];
m29_123 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="141-141"];
m29_124 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="143-143"];
m29_125 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobClientSteps.cs", label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="144-144"];
m29_126 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="141-141"];
m29_205 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="247-247"];
m29_206 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="250-250"];
m29_207 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobClientSteps.cs", label="var result = stateMachine.ChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="253-254"];
m29_208 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobClientSteps.cs", label="Assert.False(result)", span="257-257"];
m29_209 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobClientSteps.cs", label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="259-261"];
m29_210 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="247-247"];
m29_48 [cluster="Unk.AcquireDistributedLock", file="JobClientSteps.cs", label="Entry Unk.AcquireDistributedLock", span=""];
m29_23 [cluster="Mock<IDisposable>.cstr", file="JobClientSteps.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m29_74 [cluster="Unk.CreateInState", file="JobClientSteps.cs", label="Entry Unk.CreateInState", span=""];
m29_162 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="191-191"];
m29_163 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="194-194"];
m29_164 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobClientSteps.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="197-197"];
m29_165 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true))", span="200-204"];
m29_166 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobClientSteps.cs", label="Assert.True(result)", span="206-206"];
m29_167 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="191-191"];
m29_320 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="396-396"];
m29_24 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="29-29"];
m29_28 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="32-32"];
m29_31 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="37-37"];
m29_35 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="39-43"];
m29_40 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="45-45"];
m29_44 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="54-54"];
m29_25 [cluster="lambda expression", file="JobClientSteps.cs", label="Console.WriteLine()", span="29-29"];
m29_26 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="29-29"];
m29_29 [cluster="lambda expression", file="JobClientSteps.cs", label="x.Name", span="32-32"];
m29_30 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="32-32"];
m29_32 [cluster="lambda expression", file="JobClientSteps.cs", label="x.CreateWriteTransaction()", span="37-37"];
m29_33 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="37-37"];
m29_36 [cluster="lambda expression", file="JobClientSteps.cs", label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="39-43"];
m29_37 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="39-43"];
m29_41 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetJobData(JobId)", span="45-45"];
m29_42 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="45-45"];
m29_45 [cluster="lambda expression", file="JobClientSteps.cs", label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="54-54"];
m29_46 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="54-54"];
m29_54 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="62-62"];
m29_55 [cluster="lambda expression", file="JobClientSteps.cs", label="new StateMachine(null, _process.Object)", span="62-62"];
m29_56 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="62-62"];
m29_62 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="71-71"];
m29_63 [cluster="lambda expression", file="JobClientSteps.cs", label="new StateMachine(_connection.Object, null)", span="71-71"];
m29_64 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="71-71"];
m29_72 [cluster="lambda expression", file="JobClientSteps.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="82-82"];
m29_71 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="82-82"];
m29_73 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="82-82"];
m29_81 [cluster="lambda expression", file="JobClientSteps.cs", label="stateMachine.CreateInState(_job, null, _state.Object)", span="93-93"];
m29_80 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="93-93"];
m29_82 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="93-93"];
m29_89 [cluster="lambda expression", file="JobClientSteps.cs", label="stateMachine.CreateInState(_job, _parameters, null)", span="104-104"];
m29_88 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="104-104"];
m29_90 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="104-104"];
m29_101 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="112-112"];
m29_106 [cluster="lambda expression", file="JobClientSteps.cs", label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="119-123"];
m29_105 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="119-123"];
m29_102 [cluster="lambda expression", file="JobClientSteps.cs", label="Console.WriteLine(''SomeString'')", span="112-112"];
m29_103 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="112-112"];
m29_107 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="119-123"];
m29_108 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="121-121"];
m29_109 [cluster="lambda expression", file="JobClientSteps.cs", label="d[''Name''] == ''Value''", span="121-121"];
m29_110 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="121-121"];
m29_116 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="133-137"];
m29_117 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true)", span="133-137"];
m29_118 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="133-137"];
m29_120 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="135-136"];
m29_121 [cluster="lambda expression", file="JobClientSteps.cs", label="sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null", span="135-136"];
m29_122 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="135-136"];
m29_133 [cluster="lambda expression", file="JobClientSteps.cs", label="stateMachine.ChangeState(null, _state.Object, FromOldState)", span="153-153"];
m29_132 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="153-153"];
m29_134 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="153-153"];
m29_142 [cluster="lambda expression", file="JobClientSteps.cs", label="stateMachine.ChangeState(JobId, null, FromOldState)", span="164-164"];
m29_141 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="164-164"];
m29_143 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="164-164"];
m29_151 [cluster="lambda expression", file="JobClientSteps.cs", label="stateMachine.ChangeState(JobId, _state.Object, new string[0])", span="175-175"];
m29_150 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="175-175"];
m29_152 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="175-175"];
m29_158 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="187-187"];
m29_159 [cluster="lambda expression", file="JobClientSteps.cs", label="x.Dispose()", span="187-187"];
m29_160 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="187-187"];
m29_169 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="200-204"];
m29_170 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true)", span="200-204"];
m29_171 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="200-204"];
m29_172 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="202-203"];
m29_173 [cluster="lambda expression", file="JobClientSteps.cs", label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName", span="202-203"];
m29_174 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="202-203"];
m29_181 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="219-222"];
m29_182 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true)", span="219-222"];
m29_183 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="219-222"];
m29_184 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="221-221"];
m29_185 [cluster="lambda expression", file="JobClientSteps.cs", label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName", span="221-221"];
m29_186 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="221-221"];
m29_196 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="229-229"];
m29_199 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="239-239"];
m29_202 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="242-242"];
m29_197 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetJobData(It.IsAny<string>())", span="229-229"];
m29_198 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="229-229"];
m29_200 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetJobData(JobId)", span="239-239"];
m29_201 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="239-239"];
m29_203 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="242-242"];
m29_204 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="242-242"];
m29_211 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="260-260"];
m29_212 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="260-260"];
m29_213 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="260-260"];
m29_223 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="268-268"];
m29_226 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="277-277"];
m29_224 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="268-268"];
m29_225 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="268-268"];
m29_227 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false)", span="277-277"];
m29_228 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="277-277"];
m29_238 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="286-286"];
m29_241 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="300-303"];
m29_239 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetJobData(JobId)", span="286-286"];
m29_240 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="286-286"];
m29_242 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true)", span="300-303"];
m29_243 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="300-303"];
m29_244 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="302-302"];
m29_245 [cluster="lambda expression", file="JobClientSteps.cs", label="ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState", span="302-302"];
m29_246 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="302-302"];
m29_255 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="312-312"];
m29_258 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="320-320"];
m29_261 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="328-331"];
m29_256 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetJobData(JobId)", span="312-312"];
m29_257 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="312-312"];
m29_259 [cluster="lambda expression", file="JobClientSteps.cs", label="x.IgnoreJobLoadException", span="320-320"];
m29_260 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="320-320"];
m29_262 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true)", span="328-331"];
m29_263 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="328-331"];
m29_264 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="330-330"];
m29_265 [cluster="lambda expression", file="JobClientSteps.cs", label="ctx.NewState == _state.Object", span="330-330"];
m29_266 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="330-330"];
m29_274 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="346-350"];
m29_280 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="352-352"];
m29_275 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true)", span="346-350"];
m29_276 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="346-350"];
m29_277 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="348-349"];
m29_278 [cluster="lambda expression", file="JobClientSteps.cs", label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId", span="348-349"];
m29_279 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="348-349"];
m29_281 [cluster="lambda expression", file="JobClientSteps.cs", label="x.Commit()", span="352-352"];
m29_282 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="352-352"];
m29_297 [cluster="lambda expression", file="JobClientSteps.cs", label="context.CandidateState = anotherState.Object", span="364-364"];
m29_300 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true)", span="372-375"];
m29_303 [cluster="lambda expression", file="JobClientSteps.cs", label="ctx.NewState == anotherState.Object", span="374-374"];
m29_292 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="363-363"];
m29_296 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="364-364"];
m29_299 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="372-375"];
m29_293 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ElectState(_connection.Object, It.IsAny<ElectStateContext>())", span="363-363"];
m29_294 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="363-363"];
m29_298 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="364-364"];
m29_301 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="372-375"];
m29_302 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="374-374"];
m29_304 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="374-374"];
m29_318 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false)", span="394-397"];
m29_321 [cluster="lambda expression", file="JobClientSteps.cs", label="ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception", span="396-396"];
m29_314 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="385-385"];
m29_317 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="394-397"];
m29_315 [cluster="lambda expression", file="JobClientSteps.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="385-385"];
m29_316 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="385-385"];
m29_319 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="394-397"];
m29_322 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="396-396"];
m29_22 [cluster="Hangfire.Storage.JobData.JobData()", file="JobClientSteps.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m29_284 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="358-358"];
m29_285 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="var anotherState = new Mock<IState>()", span="361-361"];
m29_286 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="_process.Setup(x => x.ElectState(_connection.Object, It.IsAny<ElectStateContext>()))\r\n                .Callback((IStorageConnection connection, ElectStateContext context) => context.CandidateState = anotherState.Object)", span="363-364"];
m29_289 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true))", span="372-375"];
m29_287 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="var machine = CreateStateMachine()", span="366-366"];
m29_288 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="369-369"];
m29_290 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="358-358"];
m29_100 [cluster="Unk.Verify", file="JobClientSteps.cs", label="Entry Unk.Verify", span=""];
m29_111 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="127-127"];
m29_112 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="129-129"];
m29_113 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobClientSteps.cs", label="stateMachine.CreateInState(_job, _parameters, _state.Object)", span="131-131"];
m29_114 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true))", span="133-137"];
m29_115 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="127-127"];
m29_229 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="283-283"];
m29_230 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="286-292"];
m29_231 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="294-294"];
m29_232 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="297-297"];
m29_233 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true))", span="300-303"];
m29_234 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="Assert.False(result)", span="305-305"];
m29_235 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="283-283"];
m29_283 [cluster="Unk.Commit", file="JobClientSteps.cs", label="Entry Unk.Commit", span=""];
m29_34 [cluster="Unk.CreateWriteTransaction", file="JobClientSteps.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m29_168 [cluster="Unk.True", file="JobClientSteps.cs", label="Entry Unk.True", span=""];
m29_175 [cluster="Unk.Equals", file="JobClientSteps.cs", label="Entry Unk.Equals", span=""];
m29_187 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="226-226"];
m29_188 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="229-230"];
m29_189 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="var stateMachine = CreateStateMachine()", span="232-232"];
m29_190 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="235-235"];
m29_191 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="Assert.False(result)", span="238-238"];
m29_192 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="_connection.Verify(x => x.GetJobData(JobId))", span="239-239"];
m29_193 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="241-243"];
m29_194 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobClientSteps.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="226-226"];
m29_236 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobClientSteps.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m29_291 [cluster="Unk.Callback", file="JobClientSteps.cs", label="Entry Unk.Callback", span=""];
m29_19 [cluster="Unk.Returns", file="JobClientSteps.cs", label="Entry Unk.Returns", span=""];
m29_104 [cluster="System.Console.WriteLine(string)", file="JobClientSteps.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m29_20 [cluster="Mock<IStorageConnection>.cstr", file="JobClientSteps.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m29_43 [cluster="Unk.GetJobData", file="JobClientSteps.cs", label="Entry Unk.GetJobData", span=""];
m29_119 [cluster="Unk.ApplyState", file="JobClientSteps.cs", label="Entry Unk.ApplyState", span=""];
m29_15 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobClientSteps.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m29_325 [file="JobClientSteps.cs", label="Hangfire.Core.Tests.States.StateMachineFacts", span=""];
m29_326 [file="JobClientSteps.cs", label=stateMachine, span=""];
m29_327 [file="JobClientSteps.cs", label=stateMachine, span=""];
m29_328 [file="JobClientSteps.cs", label=stateMachine, span=""];
m29_329 [file="JobClientSteps.cs", label=job, span=""];
m29_330 [file="JobClientSteps.cs", label=stateMachine, span=""];
m29_331 [file="JobClientSteps.cs", label=stateMachine, span=""];
m29_332 [file="JobClientSteps.cs", label=stateMachine, span=""];
m29_333 [file="JobClientSteps.cs", label=anotherState, span=""];
m29_334 [file="JobClientSteps.cs", label=exception, span=""];
m30_151 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="33-33"];
m30_119 [cluster="System.Collections.Generic.List<T>.List()", file="JobClientTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_303 [cluster="Unk.TryParse", file="JobClientTests.cs", label="Entry Unk.TryParse", span=""];
m30_38 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JobClientTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m30_139 [cluster="int.Parse(string)", file="JobClientTests.cs", label="Entry int.Parse(string)", span="0-0"];
m30_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="90-90"];
m30_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var jobs = new Dictionary<string, List<string>>()", span="104-104"];
m30_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var states = new Dictionary<string, string>()", span="105-105"];
m30_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="scheduledJobs.Count == 0", span="99-99"];
m30_59 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'' }),\r\n                            x => jobs.Add(job.Key, x))", span="113-117"];
m30_62 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Queue = TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="129-138"];
m30_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="107-107"];
m30_60 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="119-123"];
m30_58 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var job = scheduledJob", span="111-111"];
m30_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="94-97"];
m30_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="return new Dictionary<string, ScheduleDto>();", span="101-101"];
m30_61 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="pipeline.Flush()", span="126-126"];
m30_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label=scheduledJobs, span="109-109"];
m30_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label=Redis, span="92-92"];
m30_63 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="90-90"];
m30_44 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="61-61"];
m30_221 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="4-4"];
m30_398 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="JobClientTests.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m30_0 [cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.TryToGetQueue(string)", span="12-12"];
m30_1 [cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="JobClientTests.cs", label="var type = Type.GetType(jobType)", span="14-14"];
m30_3 [cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="JobClientTests.cs", label="return null;", span="17-17"];
m30_5 [cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.TryToGetQueue(string)", span="12-12"];
m30_7 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="11-11"];
m30_9 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=green, community=0, file="JobClientTests.cs", label=Redis, prediction=34, span="25-25"];
m30_10 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobClientTests.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="27-27"];
m30_11 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="23-23"];
m30_12 [cluster="Unk.GetSortedSetCount", file="JobClientTests.cs", label="Entry Unk.GetSortedSetCount", span=""];
m30_2 [cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", color=green, community=0, file="JobClientTests.cs", label="type == null", prediction=35, span="15-15"];
m30_4 [cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="JobClientTests.cs", label="return JobHelper.GetQueue(type);", span="20-20"];
m30_6 [cluster="System.Type.GetType(string)", file="JobClientTests.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m30_8 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="23-23"];
m30_14 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobClientTests.cs", label=Redis, span="33-33"];
m30_37 [cluster="Unk.GetJobsWithProperties", file="JobClientTests.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m30_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobClientTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m30_371 [cluster="KeyValuePair<string, T>.cstr", file="JobClientTests.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m30_204 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="4-4"];
m30_82 [cluster="Unk.GetValueFromHash", file="JobClientTests.cs", label="Entry Unk.GetValueFromHash", span=""];
m30_20 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="JobClientTests.cs", label=Redis, span="41-41"];
m30_21 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="JobClientTests.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="43-43"];
m30_22 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="39-39"];
m30_31 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="63-63"];
m30_34 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="73-86"];
m30_33 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="JobClientTests.cs", label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="68-71"];
m30_32 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="JobClientTests.cs", label=Redis, span="66-66"];
m30_35 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="63-63"];
m30_140 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="56-56"];
m30_269 [cluster="Unk.ContainsKey", file="JobClientTests.cs", label="Entry Unk.ContainsKey", span=""];
m30_15 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobClientTests.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="35-35"];
m30_180 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="505-505"];
m30_343 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="523-525"];
m30_345 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="529-531"];
m30_340 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var pipeline = redis.CreatePipeline()", span="517-517"];
m30_338 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="514-514"];
m30_342 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var id = jobId", span="521-521"];
m30_339 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="515-515"];
m30_344 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="stateProperties != null", span="527-527"];
m30_341 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label=jobIds, span="519-519"];
m30_346 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="pipeline.Flush()", span="535-535"];
m30_347 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="538-548"];
m30_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="jobIds.Count == 0", span="512-512"];
m30_337 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="return new List<KeyValuePair<string, T>>();", span="512-512"];
m30_348 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="505-505"];
m30_373 [cluster="Unk.selector", file="JobClientTests.cs", label="Entry Unk.selector", span=""];
m30_245 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="JobClientTests.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86"];
m30_243 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="JobClientTests.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m30_357 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m30_19 [cluster="Unk.Commit", file="JobClientTests.cs", label="Entry Unk.Commit", span=""];
m30_226 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="444-444"];
m30_290 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var result = new Dictionary<DateTime, long>()", span="458-458"];
m30_289 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="456-456"];
m30_291 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var i = 0", span="459-459"];
m30_296 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="result.Add(dates[i], value)", span="467-467"];
m30_298 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="return result;", span="470-470"];
m30_288 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="455-455"];
m30_294 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="462-462"];
m30_292 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i < dates.Count", span="459-459"];
m30_297 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i++", span="459-459"];
m30_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var dates = new List<DateTime>()", span="448-448"];
m30_295 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="value = 0", span="464-464"];
m30_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var endDate = DateTime.UtcNow", span="447-447"];
m30_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i < 24", span="449-449"];
m30_293 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="long value", span="461-461"];
m30_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var i = 0", span="449-449"];
m30_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="dates.Add(endDate)", span="451-451"];
m30_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="endDate = endDate.AddHours(-1)", span="452-452"];
m30_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i++", span="449-449"];
m30_299 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="444-444"];
m30_241 [cluster="Unk.TryToGetQueue", file="JobClientTests.cs", label="Entry Unk.TryToGetQueue", span=""];
m30_64 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="JobClientTests.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m30_138 [cluster="HangFire.Web.ServerDto.ServerDto()", file="JobClientTests.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m30_244 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="JobClientTests.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m30_270 [cluster="Unk.Where", file="JobClientTests.cs", label="Entry Unk.Where", span=""];
m30_246 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="398-398"];
m30_248 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="402-402"];
m30_247 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label=Redis, span="400-400"];
m30_249 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="var queue = TryToGetQueue(jobType)", span="403-403"];
m30_254 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="return stateMachine.ChangeState(jobId, state, ScheduledState.Name);", span="413-413"];
m30_250 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="String.IsNullOrEmpty(queue)", span="405-405"];
m30_253 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="var state = new EnqueuedState(''The job has been enqueued by a user.'', queue)", span="411-411"];
m30_251 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="return false;", span="407-407"];
m30_252 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="var stateMachine = new StateMachine(Redis)", span="410-410"];
m30_255 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="398-398"];
m30_181 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="JobClientTests.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m30_329 [cluster="System.DateTime.AddDays(double)", file="JobClientTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m30_372 [cluster="Unk.TrueForAll", file="JobClientTests.cs", label="Entry Unk.TrueForAll", span=""];
m30_28 [cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="JobClientTests.cs", label=Redis, prediction=36, span="57-57"];
m30_374 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="547-547"];
m30_41 [cluster="lambda expression", file="JobClientTests.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="77-86"];
m30_90 [cluster="lambda expression", file="JobClientTests.cs", label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Queue = TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="131-138"];
m30_148 [cluster="lambda expression", file="JobClientTests.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="218-228"];
m30_159 [cluster="lambda expression", file="JobClientTests.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="246-252"];
m30_413 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="578-578"];
m30_419 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="582-582"];
m30_433 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="590-590"];
m30_40 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="77-86"];
m30_42 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="77-86"];
m30_89 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="131-138"];
m30_91 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="131-138"];
m30_147 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="218-228"];
m30_149 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="218-228"];
m30_158 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="246-252"];
m30_160 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="246-252"];
m30_412 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="578-578"];
m30_414 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="578-578"];
m30_418 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="582-582"];
m30_420 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="582-582"];
m30_432 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="590-590"];
m30_434 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="590-590"];
m30_136 [cluster="lambda expression", file="JobClientTests.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="193-200"];
m30_202 [cluster="lambda expression", file="JobClientTests.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="292-297"];
m30_211 [cluster="lambda expression", file="JobClientTests.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="327-332"];
m30_219 [cluster="lambda expression", file="JobClientTests.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        State = job[1],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[2]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[4])\r\n                    }", span="350-357"];
m30_76 [cluster="lambda expression", file="JobClientTests.cs", label="jobs.Add(job.Key, x)", span="117-117"];
m30_84 [cluster="lambda expression", file="JobClientTests.cs", label="states.Add(job.Key, x)", span="123-123"];
m30_46 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="86-86"];
m30_135 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="193-200"];
m30_137 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="193-200"];
m30_201 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="292-297"];
m30_203 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="292-297"];
m30_210 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="327-332"];
m30_212 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="327-332"];
m30_218 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="350-357"];
m30_220 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="350-357"];
m30_75 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="117-117"];
m30_77 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="117-117"];
m30_83 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="123-123"];
m30_85 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="123-123"];
m30_70 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="114-116"];
m30_86 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="130-130"];
m30_79 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="120-122"];
m30_415 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="579-579"];
m30_421 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="583-583"];
m30_435 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="591-591"];
m30_48 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="86-86"];
m30_47 [cluster="lambda expression", file="JobClientTests.cs", label="x.Value.StartedAt", span="86-86"];
m30_126 [cluster="lambda expression", file="JobClientTests.cs", label="servers.Add(name, x)", span="182-182"];
m30_133 [cluster="lambda expression", file="JobClientTests.cs", label="queues.Add(name, x)", span="187-187"];
m30_71 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'' })", span="114-116"];
m30_80 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="120-122"];
m30_355 [cluster="lambda expression", file="JobClientTests.cs", label="jobs.Add(id, x)", span="525-525"];
m30_363 [cluster="lambda expression", file="JobClientTests.cs", label="states.Add(id, x)", span="531-531"];
m30_72 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="114-116"];
m30_88 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="130-130"];
m30_87 [cluster="lambda expression", file="JobClientTests.cs", label="job.Key", span="130-130"];
m30_81 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="120-122"];
m30_404 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Servers = x", span="571-571"];
m30_410 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Queues = x", span="575-575"];
m30_416 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Scheduled = x", span="579-579"];
m30_422 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Processing = x", span="583-583"];
m30_429 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="587-587"];
m30_436 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Failed = x", span="591-591"];
m30_442 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Enqueued += x", span="598-598"];
m30_406 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="574-574"];
m30_409 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="575-575"];
m30_417 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="579-579"];
m30_424 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="586-586"];
m30_428 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="587-587"];
m30_423 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="583-583"];
m30_437 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="591-591"];
m30_125 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="182-182"];
m30_127 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="182-182"];
m30_132 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="187-187"];
m30_134 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="187-187"];
m30_122 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="179-181"];
m30_128 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="185-186"];
m30_354 [cluster="lambda expression", file="JobClientTests.cs", label="!jobs.ContainsKey(id)", span="525-525"];
m30_353 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="525-525"];
m30_356 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="525-525"];
m30_362 [cluster="lambda expression", file="JobClientTests.cs", label="!states.ContainsKey(id)", span="531-531"];
m30_361 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="531-531"];
m30_364 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="531-531"];
m30_183 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="272-273"];
m30_186 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="274-274"];
m30_189 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="277-277"];
m30_192 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="278-278"];
m30_195 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="281-281"];
m30_198 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="282-282"];
m30_350 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="524-524"];
m30_358 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="530-530"];
m30_399 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="570-570"];
m30_403 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="571-571"];
m30_438 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="597-597"];
m30_441 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="598-598"];
m30_271 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="438-438"];
m30_275 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="438-438"];
m30_278 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="438-438"];
m30_184 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="272-273"];
m30_405 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="571-571"];
m30_411 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="575-575"];
m30_430 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="587-587"];
m30_443 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="598-598"];
m30_408 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="574-574"];
m30_407 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSetCount(''hangfire:queues'')", span="574-574"];
m30_426 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="586-586"];
m30_425 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="586-586"];
m30_439 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="597-597"];
m30_123 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="179-181"];
m30_129 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="185-186"];
m30_124 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="179-181"];
m30_130 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="185-186"];
m30_351 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="524-524"];
m30_359 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="530-530"];
m30_369 [cluster="lambda expression", file="JobClientTests.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="545-547"];
m30_190 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="277-277"];
m30_196 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="281-281"];
m30_334 [cluster="lambda expression", file="JobClientTests.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="487-487"];
m30_366 [cluster="lambda expression", file="JobClientTests.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="539-544"];
m30_306 [cluster="lambda expression", file="JobClientTests.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="455-455"];
m30_305 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="455-455"];
m30_333 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="487-487"];
m30_185 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="272-273"];
m30_188 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="274-274"];
m30_187 [cluster="lambda expression", file="JobClientTests.cs", label="firstJobIds = x", span="274-274"];
m30_191 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="277-277"];
m30_194 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="278-278"];
m30_193 [cluster="lambda expression", file="JobClientTests.cs", label="length = x", span="278-278"];
m30_197 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="281-281"];
m30_200 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="282-282"];
m30_199 [cluster="lambda expression", file="JobClientTests.cs", label="dequeued = x", span="282-282"];
m30_352 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="524-524"];
m30_360 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="530-530"];
m30_401 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="570-570"];
m30_400 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSetCount(''hangfire:servers'')", span="570-570"];
m30_440 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="597-597"];
m30_272 [cluster="lambda expression", file="JobClientTests.cs", label="!hiddenProperties.Contains(x.Key)", span="438-438"];
m30_273 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="438-438"];
m30_277 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="438-438"];
m30_276 [cluster="lambda expression", file="JobClientTests.cs", label="x.Key", span="438-438"];
m30_280 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="438-438"];
m30_279 [cluster="lambda expression", file="JobClientTests.cs", label="x.Value", span="438-438"];
m30_330 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="486-486"];
m30_365 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="539-544"];
m30_368 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="545-547"];
m30_370 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="545-547"];
m30_335 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="487-487"];
m30_367 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="539-544"];
m30_307 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="455-455"];
m30_332 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="486-486"];
m30_331 [cluster="lambda expression", file="JobClientTests.cs", label="x.ToString(''yyyy-MM-dd'')", span="486-486"];
m30_375 [cluster="lambda expression", file="JobClientTests.cs", label="y == null", span="547-547"];
m30_376 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="547-547"];
m30_36 [cluster="Unk.GetRangeFromSortedSet", file="JobClientTests.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m30_182 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobClientTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m30_121 [cluster="Unk.ToList", file="JobClientTests.cs", label="Entry Unk.ToList", span=""];
m30_73 [cluster="Unk.Format", file="JobClientTests.cs", label="Entry Unk.Format", span=""];
m30_227 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="369-369"];
m30_229 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="373-373"];
m30_228 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label=Redis, span="371-371"];
m30_230 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="369-369"];
m30_43 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="4-4"];
m30_141 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="204-204"];
m30_144 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="213-228"];
m30_143 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="208-211"];
m30_142 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label=Redis, span="206-206"];
m30_145 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="204-204"];
m30_67 [cluster="Unk.QueueCommand", file="JobClientTests.cs", label="Entry Unk.QueueCommand", span=""];
m30_24 [cluster="HangFire.Web.JobStorage.FailedCount()", file="JobClientTests.cs", label=Redis, span="49-49"];
m30_27 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="55-55"];
m30_150 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m30_93 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="46-46"];
m30_308 [cluster="System.DateTime.ToString(string)", file="JobClientTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m30_152 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="232-232"];
m30_155 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="241-252"];
m30_154 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="236-239"];
m30_153 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label=Redis, span="234-234"];
m30_156 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="232-232"];
m30_179 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="JobClientTests.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m30_302 [cluster="Unk.ElementAt", file="JobClientTests.cs", label="Entry Unk.ElementAt", span=""];
m30_157 [cluster="Unk.GetRangeFromList", file="JobClientTests.cs", label="Entry Unk.GetRangeFromList", span=""];
m30_162 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="256-256"];
m30_175 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="287-297"];
m30_171 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="271-274"];
m30_172 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="276-278"];
m30_173 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="280-282"];
m30_170 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="269-269"];
m30_174 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.Flush()", span="284-284"];
m30_176 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="299-305"];
m30_166 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label=queues, span="263-263"];
m30_169 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="long dequeued = 0", span="267-267"];
m30_165 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="261-261"];
m30_164 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="260-260"];
m30_167 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="IList<string> firstJobIds = null", span="265-265"];
m30_177 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="return result;", span="308-308"];
m30_168 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="long length = 0", span="266-266"];
m30_163 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label=Redis, span="258-258"];
m30_178 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="256-256"];
m30_94 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="142-142"];
m30_96 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="146-146"];
m30_95 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label=Redis, span="144-144"];
m30_97 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="142-142"];
m30_23 [cluster="HangFire.Web.JobStorage.FailedCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="47-47"];
m30_161 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="4-4"];
m30_68 [cluster="Unk.Flush", file="JobClientTests.cs", label="Entry Unk.Flush", span=""];
m30_431 [cluster="Unk.Parse", file="JobClientTests.cs", label="Entry Unk.Parse", span=""];
m30_78 [cluster="Unk.Add", file="JobClientTests.cs", label="Entry Unk.Add", span=""];
m30_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="559-559"];
m30_388 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="577-579"];
m30_389 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="581-583"];
m30_391 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="589-591"];
m30_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var stats = new StatisticsDto()", span="563-563"];
m30_387 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="573-575"];
m30_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="567-567"];
m30_390 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="585-587"];
m30_392 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label=queues, span="593-593"];
m30_386 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="569-571"];
m30_394 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="596-598"];
m30_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label=Redis, span="561-561"];
m30_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="565-565"];
m30_396 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="return stats;", span="604-604"];
m30_395 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.Flush()", span="601-601"];
m30_393 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var queueName = queue", span="595-595"];
m30_397 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="559-559"];
m30_103 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="158-158"];
m30_108 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var servers = new Dictionary<string, List<string>>()", span="169-169"];
m30_109 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var queues = new Dictionary<string, List<string>>()", span="170-170"];
m30_106 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="serverNames.Count == 0", span="164-164"];
m30_113 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="178-182"];
m30_116 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="193-200"];
m30_110 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="172-172"];
m30_114 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="184-187"];
m30_112 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var name = serverName", span="176-176"];
m30_105 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="162-162"];
m30_107 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="return new List<ServerDto>();", span="166-166"];
m30_115 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="pipeline.Flush()", span="190-190"];
m30_111 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label=serverNames, span="174-174"];
m30_104 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label=Redis, span="160-160"];
m30_117 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="158-158"];
m30_377 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="551-551"];
m30_379 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="555-555"];
m30_378 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label=Redis, span="553-553"];
m30_380 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="551-551"];
m30_222 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="361-361"];
m30_224 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="365-365"];
m30_223 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label=Redis, span="363-363"];
m30_225 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="361-361"];
m30_16 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="31-31"];
m30_18 [cluster="Unk.GetListCount", file="JobClientTests.cs", label="Entry Unk.GetListCount", span=""];
m30_45 [cluster="string.Equals(string, System.StringComparison)", file="JobClientTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m30_300 [cluster="System.DateTime.AddHours(double)", file="JobClientTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m30_98 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="473-473"];
m30_319 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var result = new Dictionary<DateTime, long>()", span="491-491"];
m30_318 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="489-489"];
m30_320 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var i = 0", span="492-492"];
m30_325 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="result.Add(dates[i], value)", span="499-499"];
m30_327 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="return result;", span="502-502"];
m30_317 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="487-487"];
m30_323 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="495-495"];
m30_321 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i < stringDates.Count", span="492-492"];
m30_326 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i++", span="492-492"];
m30_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var dates = new List<DateTime>()", span="478-478"];
m30_324 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="value = 0", span="497-497"];
m30_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="486-486"];
m30_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var endDate = DateTime.UtcNow.Date", span="476-476"];
m30_322 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="long value", span="494-494"];
m30_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var startDate = endDate.AddDays(-7)", span="477-477"];
m30_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="startDate <= endDate", span="480-480"];
m30_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="dates.Add(endDate)", span="482-482"];
m30_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="endDate = endDate.AddDays(-1)", span="483-483"];
m30_328 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="473-473"];
m30_267 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="JobClientTests.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m30_256 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="417-417"];
m30_264 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="433-440"];
m30_258 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="421-421"];
m30_261 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="424-424"];
m30_263 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="429-431"];
m30_257 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label=Redis, span="419-419"];
m30_259 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="job.Count == 0", span="422-422"];
m30_262 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="426-427"];
m30_260 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="return null;", span="422-422"];
m30_265 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="417-417"];
m30_304 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m30_309 [cluster="string.Format(string, object, object)", file="JobClientTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m30_266 [cluster="Unk.GetAllEntriesFromHash", file="JobClientTests.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m30_69 [cluster="Unk.ToDictionary", file="JobClientTests.cs", label="Entry Unk.ToDictionary", span=""];
m30_349 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m30_402 [cluster="Unk.GetSetCount", file="JobClientTests.cs", label="Entry Unk.GetSetCount", span=""];
m30_213 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="336-336"];
m30_216 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        State = job[1],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[2]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[4])\r\n                    });", span="345-357"];
m30_215 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="341-343"];
m30_214 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label=Redis, span="339-339"];
m30_217 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="336-336"];
m30_99 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="150-150"];
m30_101 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label="return GetTimelineStats(Redis, ''failed'');", span="154-154"];
m30_100 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label=Redis, span="152-152"];
m30_102 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="150-150"];
m30_268 [cluster="Unk.>", file="JobClientTests.cs", label="Entry Unk.>", span=""];
m30_92 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="JobClientTests.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="4-4"];
m30_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m30_242 [cluster="string.IsNullOrEmpty(string)", file="JobClientTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m30_301 [cluster="Unk.GetValuesMap", file="JobClientTests.cs", label="Entry Unk.GetValuesMap", span=""];
m30_29 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="JobClientTests.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m30_30 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="55-55"];
m30_131 [cluster="Unk.GetAllItemsFromList", file="JobClientTests.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m30_274 [cluster="Unk.Contains", file="JobClientTests.cs", label="Entry Unk.Contains", span=""];
m30_120 [cluster="Unk.Select", file="JobClientTests.cs", label="Entry Unk.Select", span=""];
m30_118 [cluster="Unk.GetAllItemsFromSet", file="JobClientTests.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m30_146 [cluster="Unk.GetRangeFromSortedSetDesc", file="JobClientTests.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m30_427 [cluster="Unk.GetValue", file="JobClientTests.cs", label="Entry Unk.GetValue", span=""];
m30_74 [cluster="Unk.GetValuesFromHash", file="JobClientTests.cs", label="Entry Unk.GetValuesFromHash", span=""];
m30_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="377-377"];
m30_233 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="381-381"];
m30_232 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label=Redis, span="379-379"];
m30_234 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="var queue = TryToGetQueue(jobType)", span="383-383"];
m30_239 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="return stateMachine.ChangeState(jobId, state, FailedState.Name);", span="394-394"];
m30_235 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="String.IsNullOrEmpty(queue)", span="384-384"];
m30_238 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="var state = new EnqueuedState(''The job has been retried by a user.'', queue)", span="392-392"];
m30_236 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="return false;", span="386-386"];
m30_237 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="var stateMachine = new StateMachine(Redis)", span="391-391"];
m30_240 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="377-377"];
m30_205 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="312-312"];
m30_208 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="322-332"];
m30_207 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="317-320"];
m30_206 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label=Redis, span="315-315"];
m30_209 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="312-312"];
m30_445 [file="JobClientTests.cs", label=jobs, span=""];
m30_446 [file="JobClientTests.cs", label=states, span=""];
m30_448 [file="JobClientTests.cs", label=servers, span=""];
m30_449 [file="JobClientTests.cs", label=queues, span=""];
m30_444 [file="JobClientTests.cs", label=job, span=""];
m30_447 [file="JobClientTests.cs", label=name, span=""];
m30_455 [file="JobClientTests.cs", label=id, span=""];
m30_456 [file="JobClientTests.cs", label=jobs, span=""];
m30_458 [file="JobClientTests.cs", label=states, span=""];
m30_460 [file="JobClientTests.cs", label=stats, span=""];
m30_450 [file="JobClientTests.cs", label=queue, span=""];
m30_461 [file="JobClientTests.cs", label=queueName, span=""];
m30_454 [file="JobClientTests.cs", label="string[]", span=""];
m30_457 [file="JobClientTests.cs", label="string[]", span=""];
m30_459 [file="JobClientTests.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m30_453 [file="JobClientTests.cs", label=string, span=""];
m30_452 [file="JobClientTests.cs", label=string, span=""];
m30_451 [file="JobClientTests.cs", label=hiddenProperties, span=""];
m31_79 [cluster="HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="27-27"];
m31_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m31_30 [cluster="HangFire.Client.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Client.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="26-26"];
m31_35 [cluster="System.Func<T, TResult>.Invoke(T)", file="JobCreator.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m31_44 [cluster="Unk.thunk", file="JobCreator.cs", label="Entry Unk.thunk", span=""];
m31_18 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="JobCreator.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m31_49 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobCreator.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="134-134"];
m31_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m31_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="JobCreator.cs", label="filters == null", prediction=37, span="43-43"];
m31_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="JobCreator.cs", label="throw new ArgumentNullException(''filters'');", prediction=38, span="43-43"];
m31_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="JobCreator.cs", label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", prediction=39, span="45-45"];
m31_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m31_43 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m31_73 [cluster="HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="27-27"];
m31_34 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobCreator.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="47-47"];
m31_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", span="90-90"];
m31_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="98-99"];
m31_65 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="111-112"];
m31_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="95-95"];
m31_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="96-96"];
m31_62 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="106-106"];
m31_66 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="114-114"];
m31_70 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="124-124"];
m31_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="103-103"];
m31_64 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="110-110"];
m31_67 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="116-116"];
m31_71 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="127-127"];
m31_68 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="118-118"];
m31_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="102-102"];
m31_63 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="108-108"];
m31_69 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="122-122"];
m31_72 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", span="90-90"];
m31_75 [cluster="HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="33-33"];
m31_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="48-48"];
m31_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", color=green, community=0, file="JobCreator.cs", label="var filterInfo = GetFilters(context.Job.MethodData)", prediction=40, span="50-50"];
m31_21 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="CreateWithFilters(context, filterInfo.ClientFilters)", span="54-54"];
m31_24 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", span="60-60"];
m31_23 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="58-58"];
m31_22 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label=Exception, span="56-56"];
m31_25 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="61-61"];
m31_26 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="throw;", span="63-63"];
m31_27 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="48-48"];
m31_53 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="85-85"];
m31_12 [cluster="lambda expression", color=green, community=0, file="JobCreator.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", prediction=41, span="45-45"];
m31_11 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="45-45"];
m31_13 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="45-45"];
m31_15 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="45-45"];
m31_16 [cluster="lambda expression", color=green, community=0, file="JobCreator.cs", label="new JobFilter(f, JobFilterScope.Type, null)", prediction=42, span="45-45"];
m31_17 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="45-45"];
m31_46 [cluster="lambda expression", file="JobCreator.cs", label="context.CreateJob()", span="80-80"];
m31_47 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(context, false, null);", span="81-81"];
m31_54 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="85-85"];
m31_45 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="78-82"];
m31_48 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="78-82"];
m31_51 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="85-85"];
m31_55 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="85-85"];
m31_52 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="85-85"];
m31_28 [cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", span="68-68"];
m31_32 [cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", color=green, community=0, file="JobCreator.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", prediction=43, span="70-70"];
m31_33 [cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", span="68-68"];
m31_14 [cluster="Unk.Select", file="JobCreator.cs", label="Entry Unk.Select", span=""];
m31_31 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="130-130"];
m31_76 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filters.Reverse()", span="133-133"];
m31_77 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filter.OnClientException(context)", span="135-135"];
m31_78 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="130-130"];
m31_50 [cluster="HangFire.Client.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Client.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26"];
m31_41 [cluster="HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24"];
m31_29 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="73-73"];
m31_36 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(context)", span="77-77"];
m31_37 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                context.CreateJob();\r\n                return new CreatedContext(context, false, null);\r\n            }", span="78-82"];
m31_38 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="84-85"];
m31_39 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="87-87"];
m31_40 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="73-73"];
m31_74 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m31_80 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m31_81 [file="JobCreator.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m31_82 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m31_83 [file="JobCreator.cs", label=preContext, span=""];
m31_84 [file="JobCreator.cs", label="System.Func<HangFire.Client.Filters.CreatedContext>", span=""];
m31_85 [file="JobCreator.cs", label="HangFire.Client.Filters.IClientFilter", span=""];
m33_86 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m33_78 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m33_82 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m33_0 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="JobDetailsPage1.generated.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22"];
m33_6 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="job != null && job.Method != null", prediction=44, span="96-96"];
m33_4 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job = monitor.JobDetails(JobId.ToString())", span="91-91"];
m33_5 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="string title = null", span="94-94"];
m33_7 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="title = HtmlHelper.DisplayMethod(job.Method)", prediction=45, span="98-98"];
m33_8 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="title = title ?? ''Job''", span="101-101"];
m33_21 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="job.Method != null", prediction=44, span="179-179"];
m33_17 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.CreatedAt.HasValue", span="149-149"];
m33_20 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166"];
m33_22 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <pre><code>'')", span="185-185"];
m33_25 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205"];
m33_23 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=green, community=0, file="JobDetailsPage1.generated.cs", label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", prediction=44, span="190-190"];
m33_24 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</code></pre>\r\n'')", span="195-195"];
m33_3 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89"];
m33_11 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job == null", span="114-114"];
m33_19 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161"];
m33_26 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties.Count > 0", span="210-210"];
m33_28 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.Properties", span="221-221"];
m33_37 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History.Count > 0", span="277-277"];
m33_40 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="job.History", span="289-289"];
m33_9 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103"];
m33_16 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144"];
m33_18 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156"];
m33_1 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="JobDetailsPage1.generated.cs", label="Exit Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22"];
m33_10 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n'')", span="109-109"];
m33_12 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    '')", span="120-120"];
m33_13 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('' The job with id \''')", span="122-122"];
m33_14 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobId)", span="127-127"];
m33_15 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132"];
m33_27 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216"];
m33_29 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dt>'')", span="227-227"];
m33_30 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Key)", span="232-232"];
m33_31 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dt>\r\n'')", span="237-237"];
m33_32 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <dd><pre>'')", span="241-241"];
m33_33 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(property.Value)", span="246-246"];
m33_34 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251"];
m33_35 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261"];
m33_36 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''    </div>\r\n'')", span="271-271"];
m33_38 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283"];
m33_44 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            <div class=\''job-history '')", span="306-306"];
m33_45 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311"];
m33_46 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316"];
m33_47 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321"];
m33_48 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326"];
m33_49 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(JobHelper.ToStringTimestamp(entry.CreatedAt))", span="331-331"];
m33_50 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\''>'')", span="336-336"];
m33_51 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(entry.CreatedAt)", span="341-341"];
m33_52 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347"];
m33_53 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(entry.StateName)", span="352-352"];
m33_54 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n\r\n'')", span="357-357"];
m33_56 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                            <small>'')", span="368-368"];
m33_57 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(entry.Reason)", span="373-373"];
m33_58 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</small>\r\n'')", span="378-378"];
m33_59 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388"];
m33_63 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403"];
m33_64 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(rendered)", span="408-408"];
m33_65 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413"];
m33_66 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427"];
m33_68 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dt>'')", span="438-438"];
m33_69 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Key)", span="443-443"];
m33_70 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral('':</dt>\r\n'')", span="448-448"];
m33_71 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                                <dd>'')", span="452-452"];
m33_72 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Write(item.Value)", span="457-457"];
m33_73 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''</dd>\r\n'')", span="462-462"];
m33_74 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472"];
m33_75 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="WriteLiteral(''            </div>\r\n'')", span="482-482"];
m33_2 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobDetailsDto job", span="88-88"];
m33_39 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var index = 0", span="288-288"];
m33_76 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index++", span="488-488"];
m33_41 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry.StateName)\r\n               ? JobHistoryRenderer.BackgroundStateColors[entry.StateName]\r\n               : null", span="291-293"];
m33_43 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry.StateName)\r\n                    ? JobHistoryRenderer.ForegroundStateColors[entry.StateName]\r\n                    : null", span="297-299"];
m33_55 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="!String.IsNullOrWhiteSpace(entry.Reason)", span="362-362"];
m33_60 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="JobHistoryRenderer.Exists(entry.StateName)", span="393-393"];
m33_61 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="var rendered = JobHistoryRenderer.Render(entry.StateName, entry.Data)", span="395-395"];
m33_67 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="entry.Data", span="432-432"];
m33_42 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="index == 0", span="295-295"];
m33_62 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="rendered != null", span="396-396"];
m33_77 [cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69"];
m33_79 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m33_93 [cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69"];
m33_83 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m33_92 [cluster="string.IsNullOrWhiteSpace(string)", file="JobDetailsPage1.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m33_81 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="9-9"];
m33_90 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m33_94 [cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74"];
m33_91 [cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m33_88 [cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28"];
m33_80 [cluster="string.ToString()", file="JobDetailsPage1.generated.cs", label="Entry string.ToString()", span="0-0"];
m33_85 [cluster="Unk.ToString", file="JobDetailsPage1.generated.cs", label="Entry Unk.ToString", span=""];
m33_89 [cluster="Unk.Write", file="JobDetailsPage1.generated.cs", label="Entry Unk.Write", span=""];
m33_84 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m33_95 [file="JobDetailsPage1.generated.cs", label="HangFire.Web.Pages.JobDetailsPage", span=""];
m35_13 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="59-59"];
m35_14 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs", label="var typeFilters = GetJobTypeAttributes(method)\r\n                .Select(attr => new JobFilter(attr, JobFilterScope.Type, null))", prediction=48, span="61-62"];
m35_15 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs", label="var methodFilters = GetJobMethodAttributes(method)\r\n                .Select(attr => new JobFilter(attr, JobFilterScope.Method, null))", prediction=49, span="64-65"];
m35_16 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="return typeFilters.Union(methodFilters).ToList();", span="67-67"];
m35_17 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="59-59"];
m35_20 [cluster="Unk.ToList", file="JobFilterAttributeFilterProvider.cs", label="Entry Unk.ToList", span=""];
m35_9 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", span="53-53"];
m35_10 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs", label="return method.GetMethodFilterAttributes(_cacheAttributeInstances);", prediction=50, span="56-56"];
m35_11 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobMethodAttributes(HangFire.Common.JobMethod)", span="53-53"];
m35_8 [cluster="HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", span="158-158"];
m35_2 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", span="42-42"];
m35_3 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", file="JobFilterAttributeFilterProvider.cs", label="_cacheAttributeInstances = cacheAttributeInstances", span="44-44"];
m35_4 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", file="JobFilterAttributeFilterProvider.cs", label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.JobFilterAttributeFilterProvider(bool)", span="42-42"];
m35_24 [cluster="HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.Filters.JobFilter.JobFilter(object, HangFire.Common.Filters.JobFilterScope, int?)", span="38-38"];
m35_5 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", span="47-47"];
m35_6 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", color=green, community=0, file="JobFilterAttributeFilterProvider.cs", label="return method.GetTypeFilterAttributes(_cacheAttributeInstances);", prediction=50, span="50-50"];
m35_7 [cluster="HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", file="JobFilterAttributeFilterProvider.cs", label="Exit HangFire.Common.Filters.JobFilterAttributeFilterProvider.GetJobTypeAttributes(HangFire.Common.JobMethod)", span="47-47"];
m35_0 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobFilterAttributeFilterProvider.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m35_1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobFilterAttributeFilterProvider.cs", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m35_25 [cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs", label="Entry lambda expression", span="65-65"];
m35_21 [cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs", label="Entry lambda expression", span="62-62"];
m35_23 [cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs", label="Exit lambda expression", span="62-62"];
m35_22 [cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs", label="new JobFilter(attr, JobFilterScope.Type, null)", span="62-62"];
m35_26 [cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs", label="new JobFilter(attr, JobFilterScope.Method, null)", span="65-65"];
m35_27 [cluster="lambda expression", file="JobFilterAttributeFilterProvider.cs", label="Exit lambda expression", span="65-65"];
m35_12 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobFilterAttributeFilterProvider.cs", label="Entry HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", span="165-165"];
m35_19 [cluster="Unk.Union", file="JobFilterAttributeFilterProvider.cs", label="Entry Unk.Union", span=""];
m35_28 [file="JobFilterAttributeFilterProvider.cs", label="HangFire.Common.Filters.JobFilterAttributeFilterProvider", span=""];
m36_2 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterInfo.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m36_3 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="var list = filters.Select(f => f.Instance).ToList()", prediction=52, span="49-49"];
m36_4 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="_clientFilters.AddRange(list.OfType<IClientFilter>())", prediction=52, span="51-51"];
m36_5 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="_serverFilters.AddRange(list.OfType<IServerFilter>())", prediction=52, span="52-52"];
m36_6 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="_stateChangingFilters.AddRange(list.OfType<IStateChangingFilter>())", prediction=52, span="54-54"];
m36_7 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="_stateChangedFilters.AddRange(list.OfType<IStateChangedFilter>())", prediction=52, span="55-55"];
m36_8 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="_clientExceptionFilters.AddRange(list.OfType<IClientExceptionFilter>())", prediction=52, span="57-57"];
m36_9 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", color=green, community=0, file="JobFilterInfo.cs", label="_serverExceptionFilters.AddRange(list.OfType<IServerExceptionFilter>())", prediction=52, span="58-58"];
m36_10 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterInfo.cs", label="Exit HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m36_13 [cluster="Unk.>", file="JobFilterInfo.cs", label="Entry Unk.>", span=""];
m36_12 [cluster="Unk.ToList", file="JobFilterInfo.cs", label="Entry Unk.ToList", span=""];
m36_14 [cluster="Unk.AddRange", file="JobFilterInfo.cs", label="Entry Unk.AddRange", span=""];
m36_15 [cluster="lambda expression", file="JobFilterInfo.cs", label="Entry lambda expression", span="121-121"];
m36_16 [cluster="lambda expression", color=green, community=0, file="JobFilterInfo.cs", label="f.Instance", prediction=59, span="49-49"];
m36_17 [cluster="lambda expression", file="JobFilterInfo.cs", label="Exit lambda expression", span="121-121"];
m36_0 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", file="JobFilterInfo.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", span="111-111"];
m36_1 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", file="JobFilterInfo.cs", label="Exit HangFire.Common.Filters.JobFilterInfo.JobFilterInfo()", span="111-111"];
m36_18 [file="JobFilterInfo.cs", label="HangFire.Common.Filters.JobFilterInfo", span=""];
m37_26 [cluster="HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.IJobFilterProvider.GetFilters(HangFire.Common.JobMethod)", span="34-34"];
m37_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m37_18 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobFilterProviderCollection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m37_0 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection()", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m37_1 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection()", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection()", span="34-34"];
m37_42 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", span="104-104"];
m37_43 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="x == null && y == null", span="107-107"];
m37_45 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="x == null", span="111-111"];
m37_47 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="y == null", span="115-115"];
m37_49 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Order < y.Order", span="122-122"];
m37_51 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Order > y.Order", span="126-126"];
m37_53 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Scope < y.Scope", span="133-133"];
m37_55 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="x.Scope > y.Scope", span="137-137"];
m37_44 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return 0;", span="109-109"];
m37_46 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="113-113"];
m37_48 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="117-117"];
m37_50 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="124-124"];
m37_52 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="128-128"];
m37_54 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return -1;", span="135-135"];
m37_56 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return 1;", span="139-139"];
m37_57 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="return 0;", span="142-142"];
m37_58 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.FilterComparer.Compare(HangFire.Common.Filters.JobFilter, HangFire.Common.Filters.JobFilter)", span="104-104"];
m37_2 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(System.Collections.Generic.IList<HangFire.Common.Filters.IJobFilterProvider>)", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(System.Collections.Generic.IList<HangFire.Common.Filters.IJobFilterProvider>)", span="43-43"];
m37_3 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(System.Collections.Generic.IList<HangFire.Common.Filters.IJobFilterProvider>)", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(System.Collections.Generic.IList<HangFire.Common.Filters.IJobFilterProvider>)", span="43-43"];
m37_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m37_4 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(params HangFire.Common.Filters.IJobFilterProvider[])", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(params HangFire.Common.Filters.IJobFilterProvider[])", span="48-48"];
m37_5 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(params HangFire.Common.Filters.IJobFilterProvider[])", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.JobFilterProviderCollection(params HangFire.Common.Filters.IJobFilterProvider[])", span="48-48"];
m37_39 [cluster="object.GetType()", file="JobFilterProviderCollection.cs", label="Entry object.GetType()", span="0-0"];
m37_12 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", span="69-69"];
m37_14 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", file="JobFilterProviderCollection.cs", label="return Enumerable.Empty<JobFilter>();", span="73-73"];
m37_16 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", file="JobFilterProviderCollection.cs", label="return RemoveDuplicates(combinedFilters.Reverse()).Reverse();", span="81-81"];
m37_17 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.GetFilters(HangFire.Common.JobMethod)", span="69-69"];
m37_40 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m37_6 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", span="53-53"];
m37_7 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="var mvcFilter = filterInstance as IJobFilter", span="55-55"];
m37_8 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="mvcFilter == null", span="56-56"];
m37_10 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="return mvcFilter.AllowMultiple;", span="61-61"];
m37_9 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="return true;", span="58-58"];
m37_11 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.AllowMultiple(object)", span="53-53"];
m37_27 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Entry lambda expression", span="78-78"];
m37_23 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Entry lambda expression", span="77-77"];
m37_25 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Exit lambda expression", span="77-77"];
m37_28 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label=filter, span="78-78"];
m37_29 [cluster="lambda expression", file="JobFilterProviderCollection.cs", label="Exit lambda expression", span="78-78"];
m37_41 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m37_22 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="Entry HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="84-84"];
m37_30 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="var visitedTypes = new HashSet<Type>()", span="87-87"];
m37_35 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="yield return filter;", span="96-96"];
m37_31 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label=filters, span="89-89"];
m37_34 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="!visitedTypes.Contains(filterInstanceType) || AllowMultiple(filterInstance)", span="94-94"];
m37_36 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="visitedTypes.Add(filterInstanceType)", span="97-97"];
m37_32 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="var filterInstance = filter.Instance", span="91-91"];
m37_33 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="var filterInstanceType = filterInstance.GetType()", span="92-92"];
m37_37 [cluster="HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="JobFilterProviderCollection.cs", label="Exit HangFire.Common.Filters.JobFilterProviderCollection.RemoveDuplicates(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="84-84"];
m37_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)", span="0-0"];
m37_38 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JobFilterProviderCollection.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m37_59 [file="JobFilterProviderCollection.cs", label="HangFire.Common.Filters.JobFilterProviderCollection", span=""];
m37_60 [file="JobFilterProviderCollection.cs", label="HangFire.Common.JobMethod", span=""];
m38_363 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m38_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m38_623 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="891-894"];
m38_624 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m38_621 [cluster="System.Collections.Generic.List<T>.List()", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m38_155 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m38_401 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286"];
m38_57 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52"];
m38_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m38_812 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1210-1225"];
m38_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1206-1208"];
m38_813 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m38_478 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m38_479 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="JobHistoryRenderer.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="682-683"];
m38_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m38_460 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323"];
m38_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="JobHistoryRenderer.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="29-29"];
m38_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m38_6 [cluster="Mock<IPersistentJobQueue>.cstr", file="JobHistoryRenderer.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m38_12 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="26-26"];
m38_13 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="JobHistoryRenderer.cs", label="var context = CreateContext()", span="29-29"];
m38_14 [cluster="Unk.>", file="JobHistoryRenderer.cs", label="Entry Unk.>", span=""];
m38_15 [cluster="Unk.GetJobQueue", file="JobHistoryRenderer.cs", label="Entry Unk.GetJobQueue", span=""];
m38_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m38_364 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m38_365 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="JobHistoryRenderer.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="530-531"];
m38_366 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m38_739 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m38_740 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1092-1096"];
m38_741 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m38_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m38_669 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="974-987"];
m38_668 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="970-972"];
m38_670 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m38_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m38_866 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1304-1319"];
m38_865 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1300-1302"];
m38_867 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m38_575 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271"];
m38_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m38_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="378-384"];
m38_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m38_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m38_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="503-512"];
m38_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="494-501"];
m38_346 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m38_905 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JobHistoryRenderer.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m38_37 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="JobHistoryRenderer.cs", label="Assert.Equal(ConnectionState.Closed, sqlConnection.State)", span="59-59"];
m38_38 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", span="51-51"];
m38_304 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m38_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="442-454"];
m38_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="437-440"];
m38_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m38_153 [cluster="Unk.ToString", file="JobHistoryRenderer.cs", label="Entry Unk.ToString", span=""];
m38_25 [cluster="Unk.Equal", file="JobHistoryRenderer.cs", label="Entry Unk.Equal", span=""];
m38_26 [cluster="lambda expression", color=green, community=0, file="JobHistoryRenderer.cs", label="Entry lambda expression", prediction=60, span="41-41"];
m38_28 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="41-41"];
m38_857 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m38_858 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1290-1294"];
m38_859 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m38_24 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="36-36"];
m38_209 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m38_210 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="251-253"];
m38_211 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m38_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m38_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1334-1338"];
m38_885 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m38_29 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="45-45"];
m38_829 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473"];
m38_450 [cluster="Unk.NotEqual", file="JobHistoryRenderer.cs", label="Entry Unk.NotEqual", span=""];
m38_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m38_721 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1061-1076"];
m38_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1057-1059"];
m38_722 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m38_281 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m38_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="395-407"];
m38_282 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="390-393"];
m38_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m38_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m38_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="518-524"];
m38_355 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m38_792 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432"];
m38_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m38_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="625-626"];
m38_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m38_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m38_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="JobHistoryRenderer.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="23-23"];
m38_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="JobHistoryRenderer.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="25-25"];
m38_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m38_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1151-1166"];
m38_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1147-1149"];
m38_775 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m38_389 [cluster="Unk.Execute", file="JobHistoryRenderer.cs", label="Entry Unk.Execute", span=""];
m38_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m38_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="320-335"];
m38_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="306-318"];
m38_242 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m38_658 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m38_660 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="949-964"];
m38_659 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="945-947"];
m38_661 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m38_259 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m38_847 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m38_848 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1280-1284"];
m38_849 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m38_488 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335"];
m38_402 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m38_403 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="582-588"];
m38_404 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m38_764 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456"];
m38_685 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404"];
m38_33 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="JobHistoryRenderer.cs", label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="47-47"];
m38_34 [cluster="lambda expression", color=green, community=0, file="JobHistoryRenderer.cs", label="Entry lambda expression", prediction=61, span="54-54"];
m38_36 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="54-54"];
m38_205 [cluster="int.ToString()", file="JobHistoryRenderer.cs", label="Entry int.ToString()", span="0-0"];
m38_326 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m38_327 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="472-478"];
m38_328 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m38_203 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m38_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m38_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="346-360"];
m38_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="341-344"];
m38_253 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m38_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m38_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1348-1363"];
m38_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1344-1346"];
m38_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m38_650 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389"];
m38_156 [cluster="System.DateTime.AddDays(double)", file="JobHistoryRenderer.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m38_439 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311"];
m38_7 [cluster="Unk.>", file="JobHistoryRenderer.cs", label="Entry Unk.>", span=""];
m38_11 [cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, bool, System.Exception)", span="26-26"];
m38_154 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m38_566 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m38_567 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="804-805"];
m38_568 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m38_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m38_512 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="720-726"];
m38_513 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m38_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m38_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="259-263"];
m38_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m38_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m38_577 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="811-815"];
m38_578 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m38_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m38_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="638-646"];
m38_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="632-636"];
m38_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m38_583 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m38_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="825-843"];
m38_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="821-823"];
m38_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m38_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m38_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1172-1178"];
m38_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m38_712 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m38_713 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1047-1051"];
m38_714 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m38_793 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m38_794 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1184-1190"];
m38_795 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m38_412 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m38_413 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="594-619"];
m38_414 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m38_563 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="794-794"];
m38_8 [cluster="Unk.Setup", file="JobHistoryRenderer.cs", label="Entry Unk.Setup", span=""];
m38_9 [cluster="Unk.Returns", file="JobHistoryRenderer.cs", label="Entry Unk.Returns", span=""];
m38_10 [cluster="PersistentJobQueueProviderCollection.cstr", file="JobHistoryRenderer.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m38_51 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var token = new CancellationToken()", span="81-81"];
m38_52 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var queues = new[] { ''default'' }", span="82-82"];
m38_53 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.FetchNextJob(queues, token)", span="84-84"];
m38_30 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", color=green, community=0, file="JobHistoryRenderer.cs", label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", prediction=62, span="47-47"];
m38_71 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="99-100"];
m38_99 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="129-134"];
m38_111 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="145-150"];
m38_173 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="201-202"];
m38_213 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="252-253"];
m38_264 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="368-369"];
m38_275 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="380-381"];
m38_319 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="462-463"];
m38_330 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="474-475"];
m38_348 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="505-507"];
m38_357 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="520-521"];
m38_368 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="530-531"];
m38_394 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="572-573"];
m38_406 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="584-585"];
m38_434 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="625-626"];
m38_455 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="652-653"];
m38_482 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="682-683"];
m38_505 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="714-714"];
m38_534 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="761-762"];
m38_545 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="773-774"];
m38_570 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="805-805"];
m38_599 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="851-852"];
m38_626 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="893-893"];
m38_645 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="927-928"];
m38_680 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="995-995"];
m38_706 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1039-1040"];
m38_733 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1084-1085"];
m38_759 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1129-1130"];
m38_786 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1174-1175"];
m38_797 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1186-1187"];
m38_823 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1233-1234"];
m38_851 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1282-1283"];
m38_877 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1327-1327"];
m38_54 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Hangfire.Core.Tests.Client.CreatedContextFacts", span=""];
m38_70 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="97-97"];
m38_67 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="93-101"];
m38_68 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var token = new CancellationToken()", span="95-95"];
m38_72 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="93-101"];
m38_74 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="100-100"];
m38_98 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="127-137"];
m38_100 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''job'', exception.ParamName)", span="136-136"];
m38_102 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="130-134"];
m38_110 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="143-153"];
m38_112 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="152-152"];
m38_114 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="146-150"];
m38_172 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="201-202"];
m38_174 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="201-202"];
m38_175 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="202-202"];
m38_212 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="252-253"];
m38_214 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="252-253"];
m38_215 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="253-253"];
m38_263 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="366-372"];
m38_265 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''id'', exception.ParamName)", span="371-371"];
m38_267 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="369-369"];
m38_274 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="378-384"];
m38_276 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''name'', exception.ParamName)", span="383-383"];
m38_278 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="381-381"];
m38_318 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="460-466"];
m38_320 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''id'', exception.ParamName)", span="465-465"];
m38_322 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="463-463"];
m38_329 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="472-478"];
m38_331 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''name'', exception.ParamName)", span="477-477"];
m38_333 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="475-475"];
m38_347 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="503-512"];
m38_349 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="509-509"];
m38_356 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="518-524"];
m38_358 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''key'', exception.ParamName)", span="523-523"];
m38_360 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="521-521"];
m38_367 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="530-531"];
m38_369 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="530-531"];
m38_370 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="531-531"];
m38_393 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="570-576"];
m38_395 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="575-575"];
m38_397 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="573-573"];
m38_405 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="582-588"];
m38_407 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''context'', exception.ParamName)", span="587-587"];
m38_409 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="585-585"];
m38_433 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="625-626"];
m38_435 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="625-626"];
m38_436 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="626-626"];
m38_454 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="652-653"];
m38_456 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="652-653"];
m38_457 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="653-653"];
m38_481 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="682-683"];
m38_483 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="682-683"];
m38_484 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="683-683"];
m38_504 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="713-714"];
m38_506 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="713-714"];
m38_507 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="714-714"];
m38_533 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="759-765"];
m38_535 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''key'', exception.ParamName)", span="764-764"];
m38_537 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="762-762"];
m38_544 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="771-777"];
m38_546 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="776-776"];
m38_548 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="774-774"];
m38_569 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="804-805"];
m38_571 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="804-805"];
m38_572 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="805-805"];
m38_598 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="849-853"];
m38_600 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="849-853"];
m38_601 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="852-852"];
m38_625 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="891-894"];
m38_627 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="891-894"];
m38_628 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="893-893"];
m38_644 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="925-929"];
m38_646 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="925-929"];
m38_647 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="928-928"];
m38_679 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="993-996"];
m38_681 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="993-996"];
m38_682 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="995-995"];
m38_705 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1037-1041"];
m38_707 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1037-1041"];
m38_708 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1040-1040"];
m38_732 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1082-1086"];
m38_734 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1082-1086"];
m38_735 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1085-1085"];
m38_758 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1127-1131"];
m38_760 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1127-1131"];
m38_761 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1130-1130"];
m38_785 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1172-1178"];
m38_787 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1177-1177"];
m38_789 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1175-1175"];
m38_796 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1184-1190"];
m38_798 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1189-1189"];
m38_800 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1187-1187"];
m38_822 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1231-1237"];
m38_824 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1236-1236"];
m38_826 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1234-1234"];
m38_850 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1280-1284"];
m38_852 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1280-1284"];
m38_853 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1283-1283"];
m38_876 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1325-1328"];
m38_878 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1325-1328"];
m38_879 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1327-1327"];
m38_50 [cluster="CreateContext.cstr", file="JobHistoryRenderer.cs", label="Entry CreateContext.cstr", span=""];
m38_55 [cluster="lambda expression", file="JobHistoryRenderer.cs", label=context, span=""];
m38_59 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="86-86"];
m38_69 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="96-96"];
m38_80 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="107-111"];
m38_89 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="117-121"];
m38_126 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="159-195"];
m38_182 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="208-212"];
m38_191 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="223-245"];
m38_222 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="259-263"];
m38_230 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="283-300"];
m38_243 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="320-335"];
m38_254 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="346-360"];
m38_285 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="395-407"];
m38_296 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="418-431"];
m38_308 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="442-454"];
m38_339 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="484-488"];
m38_376 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="537-543"];
m38_384 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="557-564"];
m38_415 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="594-619"];
m38_444 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="638-646"];
m38_465 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="665-676"];
m38_493 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="693-707"];
m38_514 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="720-726"];
m38_523 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="736-753"];
m38_554 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="783-798"];
m38_579 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="811-815"];
m38_587 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="825-843"];
m38_608 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="859-863"];
m38_616 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="873-885"];
m38_636 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="904-919"];
m38_654 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="935-939"];
m38_662 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="949-964"];
m38_671 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="974-987"];
m38_689 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1002-1006"];
m38_697 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1016-1031"];
m38_715 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1047-1051"];
m38_723 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1061-1076"];
m38_742 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1092-1096"];
m38_750 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1106-1121"];
m38_768 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1137-1141"];
m38_776 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1151-1166"];
m38_806 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1196-1200"];
m38_814 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1210-1225"];
m38_833 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1243-1247"];
m38_842 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1257-1274"];
m38_860 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1290-1294"];
m38_868 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1304-1319"];
m38_886 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1334-1338"];
m38_894 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="1348-1363"];
m38_75 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="100-100"];
m38_76 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="100-100"];
m38_101 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="127-137"];
m38_103 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="130-134"];
m38_104 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="130-134"];
m38_113 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="143-153"];
m38_115 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="146-150"];
m38_116 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="146-150"];
m38_176 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetJobData(null)", span="202-202"];
m38_177 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="202-202"];
m38_216 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetStateData(null)", span="253-253"];
m38_217 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="253-253"];
m38_266 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="366-372"];
m38_268 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="369-369"];
m38_269 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="369-369"];
m38_277 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="378-384"];
m38_279 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="381-381"];
m38_280 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="381-381"];
m38_321 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="460-466"];
m38_323 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetJobParameter(null, ''hello'')", span="463-463"];
m38_324 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="463-463"];
m38_332 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="472-478"];
m38_334 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetJobParameter(''1'', null)", span="475-475"];
m38_335 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="475-475"];
m38_351 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="503-512"];
m38_350 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''value'', value)", span="511-511"];
m38_131 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="171-171"];
m38_193 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="227-234"];
m38_232 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="290-292"];
m38_245 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="327-329"];
m38_255 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="348-355"];
m38_286 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var job = sql.Query(arrangeSql).Single()", span="397-397"];
m38_289 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="402-404"];
m38_297 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var job = sql.Query(arrangeSql).Single()", span="420-420"];
m38_301 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="426-428"];
m38_309 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var job = sql.Query(arrangeSql).Single()", span="444-444"];
m38_312 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="449-451"];
m38_418 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="603-603"];
m38_424 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="616-616"];
m38_447 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="644-644"];
m38_496 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="705-705"];
m38_359 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="518-524"];
m38_361 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="521-521"];
m38_362 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="521-521"];
m38_371 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="531-531"];
m38_372 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="531-531"];
m38_396 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="570-576"];
m38_398 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.AnnounceServer(null, new ServerContext())", span="573-573"];
m38_399 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="573-573"];
m38_408 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="582-588"];
m38_410 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.AnnounceServer(''server'', null)", span="585-585"];
m38_411 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="585-585"];
m38_437 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.RemoveServer(null)", span="626-626"];
m38_438 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="626-626"];
m38_458 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.Heartbeat(null)", span="653-653"];
m38_459 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="653-653"];
m38_485 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="683-683"];
m38_486 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="683-683"];
m38_508 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetAllItemsFromSet(null)", span="714-714"];
m38_509 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="714-714"];
m38_536 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="759-765"];
m38_538 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="762-762"];
m38_539 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="762-762"];
m38_547 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="771-777"];
m38_549 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="774-774"];
m38_550 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="774-774"];
m38_573 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetAllEntriesFromHash(null)", span="805-805"];
m38_574 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="805-805"];
m38_602 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetSetCount(null)", span="852-852"];
m38_603 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="852-852"];
m38_629 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="893-893"];
m38_630 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="893-893"];
m38_648 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetCounter(null)", span="928-928"];
m38_649 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="928-928"];
m38_683 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetHashCount(null)", span="995-995"];
m38_684 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="995-995"];
m38_709 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetHashTtl(null)", span="1040-1040"];
m38_710 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1040-1040"];
m38_736 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetListCount(null)", span="1085-1085"];
m38_737 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1085-1085"];
m38_762 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetListTtl(null)", span="1130-1130"];
m38_763 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1130-1130"];
m38_788 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1172-1178"];
m38_790 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetValueFromHash(null, ''name'')", span="1175-1175"];
m38_791 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1175-1175"];
m38_799 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1184-1190"];
m38_801 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetValueFromHash(''key'', null)", span="1187-1187"];
m38_802 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1187-1187"];
m38_825 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1231-1237"];
m38_827 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1234-1234"];
m38_828 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1234-1234"];
m38_854 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetAllItemsFromList(null)", span="1283-1283"];
m38_855 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1283-1283"];
m38_880 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.GetSetTtl(null)", span="1327-1327"];
m38_881 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1327-1327"];
m38_60 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="x.Dequeue(queues, token)", span="86-86"];
m38_61 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="86-86"];
m38_83 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="107-111"];
m38_81 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var transaction = connection.CreateWriteTransaction()", span="109-109"];
m38_92 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="117-121"];
m38_90 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="119-119"];
m38_147 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="159-195"];
m38_127 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="161-161"];
m38_128 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="162-166"];
m38_144 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="188-191"];
m38_185 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="208-212"];
m38_183 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetJobData(''1'')", span="210-210"];
m38_202 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="223-245"];
m38_192 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="225-225"];
m38_194 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="236-236"];
m38_225 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="259-263"];
m38_223 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetStateData(''1'')", span="261-261"];
m38_238 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="283-300"];
m38_231 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="285-288"];
m38_233 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetStateData(jobId.ToString())", span="294-294"];
m38_249 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="320-335"];
m38_244 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="322-325"];
m38_246 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetStateData(jobId.ToString())", span="331-331"];
m38_258 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="346-360"];
m38_256 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="357-357"];
m38_291 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="395-407"];
m38_288 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="400-400"];
m38_303 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="418-431"];
m38_299 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="423-423"];
m38_300 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="424-424"];
m38_314 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="442-454"];
m38_311 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="447-447"];
m38_342 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="484-488"];
m38_340 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="486-486"];
m38_379 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="537-543"];
m38_377 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="539-540"];
m38_385 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql)", span="559-559"];
m38_388 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="557-564"];
m38_386 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="561-561"];
m38_427 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="594-619"];
m38_416 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="596-600"];
m38_417 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.AnnounceServer(''server'', context1)", span="601-601"];
m38_423 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.AnnounceServer(''server'', context2)", span="615-615"];
m38_445 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql)", span="640-640"];
m38_449 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="638-646"];
m38_446 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.RemoveServer(''Server1'')", span="642-642"];
m38_466 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql)", span="667-667"];
m38_471 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="665-676"];
m38_467 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.Heartbeat(''server1'')", span="669-669"];
m38_468 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="671-672"];
m38_494 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="695-701"];
m38_498 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="693-707"];
m38_495 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="703-703"];
m38_518 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="720-726"];
m38_515 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="722-722"];
m38_524 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="739-744"];
m38_529 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="736-753"];
m38_525 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="747-747"];
m38_559 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="783-798"];
m38_555 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="785-789"];
m38_556 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="791-794"];
m38_582 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="811-815"];
m38_580 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="813-813"];
m38_588 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="828-833"];
m38_594 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="825-843"];
m38_589 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="836-836"];
m38_611 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="859-863"];
m38_609 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetSetCount(''my-set'')", span="861-861"];
m38_617 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="875-880"];
m38_620 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="873-885"];
m38_618 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetSetCount(''set-1'')", span="882-882"];
m38_637 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="906-914"];
m38_640 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="904-919"];
m38_638 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="916-916"];
m38_657 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="935-939"];
m38_655 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetCounter(''my-counter'')", span="937-937"];
m38_663 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="952-957"];
m38_666 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="949-964"];
m38_664 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetCounter(''counter-1'')", span="960-960"];
m38_672 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="977-981"];
m38_675 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="974-987"];
m38_673 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetCounter(''counter-1'')", span="984-984"];
m38_692 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1002-1006"];
m38_690 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetHashCount(''my-hash'')", span="1004-1004"];
m38_698 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1019-1024"];
m38_701 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1016-1031"];
m38_699 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetHashCount(''hash-1'')", span="1027-1027"];
m38_718 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1047-1051"];
m38_716 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1049-1049"];
m38_724 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1064-1068"];
m38_728 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1061-1076"];
m38_725 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1071-1071"];
m38_745 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1092-1096"];
m38_743 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetListCount(''my-list'')", span="1094-1094"];
m38_751 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1109-1114"];
m38_754 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1106-1121"];
m38_752 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetListCount(''list-1'')", span="1117-1117"];
m38_771 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1137-1141"];
m38_769 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetListTtl(''my-list'')", span="1139-1139"];
m38_777 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1154-1158"];
m38_781 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1151-1166"];
m38_778 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetListTtl(''list-1'')", span="1161-1161"];
m38_809 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1196-1200"];
m38_807 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1198-1198"];
m38_815 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1213-1218"];
m38_818 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1210-1225"];
m38_816 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1221-1221"];
m38_836 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1243-1247"];
m38_834 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1245-1245"];
m38_843 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1260-1267"];
m38_846 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1257-1274"];
m38_844 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1270-1270"];
m38_863 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1290-1294"];
m38_861 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1292-1292"];
m38_869 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1307-1312"];
m38_872 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1304-1319"];
m38_870 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1315-1315"];
m38_889 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1334-1338"];
m38_887 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1336-1336"];
m38_895 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1351-1355"];
m38_899 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="1348-1363"];
m38_896 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1358-1358"];
m38_118 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="147-147"];
m38_132 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="172-172"];
m38_287 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="string jobId = job.Id.ToString()", span="398-398"];
m38_298 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="string jobId = job.Id.ToString()", span="421-421"];
m38_310 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="string jobId = job.Id.ToString()", span="445-445"];
m38_130 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotEmpty(jobId)", span="169-169"];
m38_133 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="173-173"];
m38_134 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="174-174"];
m38_135 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="175-175"];
m38_136 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="177-177"];
m38_137 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="invocationData.Arguments = sqlJob.Arguments", span="178-178"];
m38_142 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="185-185"];
m38_143 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="186-186"];
m38_290 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value'', parameter.Value)", span="406-406"];
m38_302 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="430-430"];
m38_313 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal((string) null, parameter.Value)", span="453-453"];
m38_419 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''server'', server.Id)", span="604-604"];
m38_420 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="605-607"];
m38_421 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(server.LastHeartbeat)", span="608-608"];
m38_425 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''server'', sameServer.Id)", span="617-617"];
m38_426 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="618-618"];
m38_448 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="645-645"];
m38_497 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="706-706"];
m38_82 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(transaction)", span="110-110"];
m38_91 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(@lock)", span="120-120"];
m38_146 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="194-194"];
m38_129 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(jobId)", span="168-168"];
m38_160 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="163-163"];
m38_145 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="193-193"];
m38_163 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="191-191"];
m38_166 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="191-191"];
m38_184 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(result)", span="211-211"];
m38_201 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="244-244"];
m38_206 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="225-225"];
m38_195 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result)", span="238-238"];
m38_196 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result.Job)", span="239-239"];
m38_197 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Succeeded'', result.State)", span="240-240"];
m38_198 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="241-241"];
m38_199 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(result.LoadException)", span="242-242"];
m38_200 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="243-243"];
m38_224 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(result)", span="262-262"];
m38_237 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="299-299"];
m38_234 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result)", span="295-295"];
m38_235 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Name'', result.Name)", span="297-297"];
m38_236 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Reason'', result.Reason)", span="298-298"];
m38_248 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="334-334"];
m38_247 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result)", span="332-332"];
m38_257 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result.LoadException)", span="359-359"];
m38_341 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(value)", span="487-487"];
m38_378 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(result)", span="542-542"];
m38_387 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''-1.0'', result)", span="563-563"];
m38_422 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="610-614"];
m38_470 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="675-675"];
m38_469 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="674-674"];
m38_472 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="672-672"];
m38_475 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="672-672"];
m38_517 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(0, result.Count)", span="725-725"];
m38_516 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result)", span="724-724"];
m38_528 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Contains(''2'', result)", span="752-752"];
m38_526 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2, result.Count)", span="750-750"];
m38_527 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Contains(''1'', result)", span="751-751"];
m38_558 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="797-797"];
m38_557 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="796-796"];
m38_560 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Entry lambda expression", span="794-794"];
m38_581 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(result)", span="814-814"];
m38_593 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="842-842"];
m38_590 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.NotNull(result)", span="839-839"];
m38_591 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2, result.Count)", span="840-840"];
m38_592 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="841-841"];
m38_610 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(0, result)", span="862-862"];
m38_619 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2, result)", span="884-884"];
m38_639 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="918-918"];
m38_656 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(0, result)", span="938-938"];
m38_665 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2, result)", span="963-963"];
m38_674 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(12, result)", span="986-986"];
m38_691 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(0, result)", span="1005-1005"];
m38_700 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2, result)", span="1030-1030"];
m38_717 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result < TimeSpan.Zero)", span="1050-1050"];
m38_727 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1075-1075"];
m38_726 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1074-1074"];
m38_744 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(0, result)", span="1095-1095"];
m38_753 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(2, result)", span="1120-1120"];
m38_770 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result < TimeSpan.Zero)", span="1140-1140"];
m38_780 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1165-1165"];
m38_779 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1164-1164"];
m38_808 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Null(result)", span="1199-1199"];
m38_817 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''1'', result)", span="1224-1224"];
m38_835 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Empty(result)", span="1246-1246"];
m38_845 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1273-1273"];
m38_862 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Empty(result)", span="1293-1293"];
m38_871 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1318-1318"];
m38_888 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result < TimeSpan.Zero)", span="1337-1337"];
m38_898 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1362-1362"];
m38_897 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1361-1361"];
m38_120 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="147-147"];
m38_119 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="SampleMethod(''hello'')", span="147-147"];
m38_138 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="var job = invocationData.Deserialize()", span="180-180"];
m38_141 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="183-183"];
m38_162 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="163-163"];
m38_161 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="SampleMethod(''Hello'')", span="163-163"];
m38_165 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="191-191"];
m38_164 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="(string) x.Name", span="191-191"];
m38_168 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="191-191"];
m38_167 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="(string) x.Value", span="191-191"];
m38_208 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="225-225"];
m38_207 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="SampleMethod(''wrong'')", span="225-225"];
m38_474 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="672-672"];
m38_473 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="(string)x.Id", span="672-672"];
m38_477 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="672-672"];
m38_476 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="(DateTime)x.LastHeartbeat", span="672-672"];
m38_562 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="794-794"];
m38_561 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="(string)x.Field", span="794-794"];
m38_564 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="(string)x.Value", span="794-794"];
m38_139 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="181-181"];
m38_140 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="182-182"];
m38_565 [cluster="lambda expression", file="JobHistoryRenderer.cs", label="Exit lambda expression", span="794-794"];
m38_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m38_695 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1016-1031"];
m38_694 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1012-1014"];
m38_696 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m38_125 [cluster="Unk.UseConnections", file="JobHistoryRenderer.cs", label="Entry Unk.UseConnections", span=""];
m38_540 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m38_62 [cluster="Unk.Dequeue", file="JobHistoryRenderer.cs", label="Entry Unk.Dequeue", span=""];
m38_84 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39"];
m38_39 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="JobHistoryRenderer.cs", label="var connection = new Mock<IStorageConnection>()", span="61-61"];
m38_390 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m38_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="570-576"];
m38_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m38_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m38_502 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="713-714"];
m38_503 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m38_117 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m38_47 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="79-87"];
m38_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m38_902 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="1369-1369"];
m38_901 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1368-1368"];
m38_903 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="action(sqlConnection, connection)", span="1371-1371"];
m38_904 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m38_711 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415"];
m38_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m38_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="366-372"];
m38_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m38_49 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m38_48 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m38_77 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m38_78 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="107-111"];
m38_79 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m38_179 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m38_180 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="208-212"];
m38_181 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m38_336 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m38_337 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="484-488"];
m38_338 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m38_157 [cluster="System.DateTime.AddMinutes(double)", file="JobHistoryRenderer.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m38_66 [cluster="Unk.UseConnection", file="JobHistoryRenderer.cs", label="Entry Unk.UseConnection", span=""];
m38_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="JobHistoryRenderer.cs", label="provider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(_queue.Object)", span="26-27"];
m38_729 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m38_730 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1082-1086"];
m38_731 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m38_631 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356"];
m38_56 [cluster="System.Threading.CancellationToken.CancellationToken()", file="JobHistoryRenderer.cs", label=context, span=""];
m38_121 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m38_910 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m38_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m38_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="759-765"];
m38_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m38_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobHistoryRenderer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, IsolationLevel.Serializable, _providers))", span="35-36"];
m38_40 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m38_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="JobHistoryRenderer.cs", label="connection.Dispose()", span="70-70"];
m38_41 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="JobHistoryRenderer.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="66-66"];
m38_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="JobHistoryRenderer.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers, ownsConnection: false)", span="68-68"];
m38_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="JobHistoryRenderer.cs", label="Assert.Equal(ConnectionState.Open, sqlConnection.State)", span="72-72"];
m38_45 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m38_178 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125"];
m38_94 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44"];
m38_107 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m38_108 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="143-153"];
m38_109 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m38_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m38_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="873-885"];
m38_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="869-871"];
m38_615 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m38_765 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m38_766 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1137-1141"];
m38_767 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m38_489 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m38_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="693-707"];
m38_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="689-691"];
m38_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m38_755 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m38_756 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1127-1131"];
m38_757 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m38_151 [cluster="Unk.Query", file="JobHistoryRenderer.cs", label="Entry Unk.Query", span=""];
m38_909 [cluster="System.Action<T>.Invoke(T)", file="JobHistoryRenderer.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m38_226 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m38_228 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="283-300"];
m38_227 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="269-281"];
m38_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m38_803 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m38_804 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1196-1200"];
m38_805 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m38_85 [cluster="Unk.NotNull", file="JobHistoryRenderer.cs", label="Entry Unk.NotNull", span=""];
m38_63 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m38_64 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="93-101"];
m38_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m38_676 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m38_677 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="993-996"];
m38_678 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m38_186 [cluster="Unk.Null", file="JobHistoryRenderer.cs", label="Entry Unk.Null", span=""];
m38_46 [cluster="Mock<IStorageConnection>.cstr", file="JobHistoryRenderer.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m38_519 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m38_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="736-753"];
m38_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="732-734"];
m38_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m38_106 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72"];
m38_204 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m38_499 [cluster="System.DateTime.AddHours(double)", file="JobHistoryRenderer.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m38_150 [cluster="Unk.NotEmpty", file="JobHistoryRenderer.cs", label="Entry Unk.NotEmpty", span=""];
m38_837 [cluster="Unk.Empty", file="JobHistoryRenderer.cs", label="Entry Unk.Empty", span=""];
m38_541 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m38_542 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="771-777"];
m38_543 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m38_686 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m38_687 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1002-1006"];
m38_688 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m38_702 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m38_703 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1037-1041"];
m38_704 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m38_906 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="var connection = new SqlServerConnection( \r\n                ConnectionUtils.CreateConnection(),\r\n                IsolationLevel.Serializable,\r\n                _providers)", span="1377-1380"];
m38_907 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="action(connection)", span="1382-1382"];
m38_908 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m38_641 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m38_642 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="925-929"];
m38_643 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m38_58 [cluster="Unk.Verify", file="JobHistoryRenderer.cs", label="Entry Unk.Verify", span=""];
m38_510 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225"];
m38_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m38_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1231-1237"];
m38_821 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m38_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m38_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="460-466"];
m38_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m38_19 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m38_428 [cluster="string.StartsWith(string)", file="JobHistoryRenderer.cs", label="Entry string.StartsWith(string)", span="0-0"];
m38_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m38_840 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1257-1274"];
m38_839 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1253-1255"];
m38_841 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m38_487 [cluster="System.TimeSpan.FromMinutes(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m38_159 [cluster="Unk.ToDictionary", file="JobHistoryRenderer.cs", label="Entry Unk.ToDictionary", span=""];
m38_500 [cluster="System.TimeSpan.FromHours(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m38_95 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m38_96 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="127-137"];
m38_97 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m38_651 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m38_652 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="935-939"];
m38_653 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m38_856 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489"];
m38_873 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m38_874 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1325-1328"];
m38_875 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m38_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m38_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="117-121"];
m38_88 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m38_148 [cluster="System.DateTime.DateTime(int, int, int)", file="JobHistoryRenderer.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m38_270 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196"];
m38_595 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m38_596 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="849-853"];
m38_597 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m38_380 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m38_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="557-564"];
m38_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="549-555"];
m38_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m38_93 [cluster="System.TimeSpan.FromSeconds(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m38_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m38_634 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="904-919"];
m38_633 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="900-902"];
m38_635 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m38_292 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m38_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="418-431"];
m38_293 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="413-416"];
m38_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m38_882 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372"];
m38_149 [cluster="System.TimeSpan.FromDays(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m38_325 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214"];
m38_400 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20"];
m38_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m38_352 [cluster="Unk.GetJobParameter", file="JobHistoryRenderer.cs", label="Entry Unk.GetJobParameter", span=""];
m38_20 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="36-36"];
m38_23 [cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="JobHistoryRenderer.cs", label="Assert.Equal(''name'', exception.ParamName)", span="43-43"];
m38_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165"];
m38_461 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m38_463 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="665-676"];
m38_462 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="659-663"];
m38_464 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m38_830 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m38_831 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1243-1247"];
m38_832 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m38_551 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m38_552 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="783-798"];
m38_553 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m38_187 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m38_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="223-245"];
m38_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="218-221"];
m38_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m38_429 [cluster="Unk.Contains", file="JobHistoryRenderer.cs", label="Entry Unk.Contains", span=""];
m38_18 [cluster="Unk.True", color=green, community=0, file="JobHistoryRenderer.cs", label="Entry Unk.True", prediction=63, span=""];
m38_451 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m38_452 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="652-653"];
m38_453 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m38_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m38_748 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1106-1121"];
m38_747 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="JobHistoryRenderer.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1102-1104"];
m38_749 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m38_604 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347"];
m38_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m38_170 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="201-202"];
m38_171 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m38_152 [cluster="Unk.Single", file="JobHistoryRenderer.cs", label="Entry Unk.Single", span=""];
m38_158 [cluster="Unk.True", file="JobHistoryRenderer.cs", label="Entry Unk.True", span=""];
m38_122 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m38_123 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="JobHistoryRenderer.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="159-195"];
m38_124 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m38_373 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m38_374 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="537-543"];
m38_375 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m38_738 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445"];
m38_605 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="JobHistoryRenderer.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m38_606 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="JobHistoryRenderer.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="859-863"];
m38_607 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="JobHistoryRenderer.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m38_911 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m38_931 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_914 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_915 [file="JobHistoryRenderer.cs", label=token, span=""];
m38_916 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_917 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_918 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_920 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_924 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_925 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_929 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_930 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_919 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_921 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_922 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_923 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_926 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_927 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_928 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_932 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_933 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_935 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_936 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_937 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_939 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_941 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_943 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_945 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_946 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_947 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_949 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_951 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_953 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_956 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_958 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_960 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_962 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_964 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_965 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_967 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_969 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_971 [file="JobHistoryRenderer.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m38_912 [file="JobHistoryRenderer.cs", label=token, span=""];
m38_913 [file="JobHistoryRenderer.cs", label=queues, span=""];
m38_934 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_938 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_940 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_942 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_944 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_948 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_950 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_952 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_954 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_955 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_957 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_959 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_961 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_963 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_966 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_968 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_970 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m38_972 [file="JobHistoryRenderer.cs", label=arrangeSql, span=""];
m39_25 [cluster="Unk.OnScenarioStart", file="JobMethod.cs", label="Entry Unk.OnScenarioStart", span=""];
m39_29 [cluster="Unk.CollectScenarioErrors", file="JobMethod.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m39_50 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", span="105-105"];
m39_58 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, file="JobMethod.cs", label="table2.AddRow(new string[] {\r\n                        ''first::OnPerforming''})", prediction=64, span="121-122"];
m39_57 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="119-120"];
m39_59 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="table2.AddRow(new string[] {\r\n                        ''second::OnPerforming''})", span="123-124"];
m39_62 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, file="JobMethod.cs", label="testRunner.Then(''the server filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", prediction=65, span="130-130"];
m39_61 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="table2.AddRow(new string[] {\r\n                        ''first::OnPerformed''})", span="127-128"];
m39_63 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", color=green, community=0, file="JobMethod.cs", label="this.ScenarioCleanup()", prediction=66, span="132-132"];
m39_60 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="table2.AddRow(new string[] {\r\n                        ''second::OnPerformed''})", span="125-126"];
m39_52 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="109-109"];
m39_56 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="117-117"];
m39_51 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple server filters should be executed depending on their order'', ((string[])(null)))", span="107-107"];
m39_53 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="111-111"];
m39_54 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.And(''a server filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="113-113"];
m39_55 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.And(''a server filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="115-115"];
m39_64 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.MultipleServerFiltersShouldBeExecutedDependingOnTheirOrder()", span="105-105"];
m39_26 [cluster="HangFire.Tests.ServerFiltersFeature.ScenarioCleanup()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ScenarioCleanup()", span="66-66"];
m39_27 [cluster="HangFire.Tests.ServerFiltersFeature.ScenarioCleanup()", file="JobMethod.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m39_28 [cluster="HangFire.Tests.ServerFiltersFeature.ScenarioCleanup()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ScenarioCleanup()", span="66-66"];
m39_81 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", span="175-175"];
m39_88 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="189-190"];
m39_89 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnPerforming''})", span="191-192"];
m39_90 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="table4.AddRow(new string[] {\r\n                        ''second::OnPerforming''})", span="193-194"];
m39_91 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnPerformed''})", span="195-196"];
m39_92 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="testRunner.Then(''only the following server filter methods were executed:'', ((string)(null)), table4, ''Then '')", span="198-198"];
m39_83 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="179-179"];
m39_94 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="202-202"];
m39_82 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Server filter\'s OnPerformed could be skipped if there was an exception'', ((string[])(null)))", span="177-177"];
m39_84 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="181-181"];
m39_85 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="testRunner.And(''a server filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="183-183"];
m39_86 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="testRunner.And(''a server filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="185-185"];
m39_93 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="testRunner.And(''the state of the job should be Failed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="200-200"];
m39_87 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="187-187"];
m39_95 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ServerFilterSOnPerformedCouldBeSkippedIfThereWasAnException()", span="175-175"];
m39_45 [cluster="Unk.And", file="JobMethod.cs", label="Entry Unk.And", span=""];
m39_5 [cluster="Unk.GetTestRunner", file="JobMethod.cs", label="Entry Unk.GetTestRunner", span=""];
m39_124 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", span="274-274"];
m39_131 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="288-289"];
m39_132 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="table6.AddRow(new string[] {\r\n                        ''first''})", span="290-291"];
m39_133 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="table6.AddRow(new string[] {\r\n                        ''second''})", span="292-293"];
m39_134 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.Then(''the server exception filters should be executed in the following order:'', ((string)(null)), table6, ''Then '')", span="295-295"];
m39_126 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="278-278"];
m39_136 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="299-299"];
m39_125 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple server exception filters are executed depending on their order'', ((string[])(null)))", span="276-276"];
m39_127 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.Given(''an enqueued broken job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="280-280"];
m39_128 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.And(''a server exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="282-282"];
m39_129 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.And(''a server exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="284-284"];
m39_135 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.And(''the state of the job should be Failed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="297-297"];
m39_130 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="286-286"];
m39_137 [cluster="HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.MultipleServerExceptionFiltersAreExecutedDependingOnTheirOrder()", span="274-274"];
m39_0 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m39_2 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobMethod.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server filters'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", prediction=67, span="33-34"];
m39_1 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethod.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m39_3 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethod.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m39_4 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m39_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobMethod.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m39_13 [cluster="Unk.OnFeatureEnd", file="JobMethod.cs", label="Entry Unk.OnFeatureEnd", span=""];
m39_22 [cluster="HangFire.Tests.ServerFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m39_23 [cluster="HangFire.Tests.ServerFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethod.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m39_24 [cluster="HangFire.Tests.ServerFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m39_46 [cluster="Unk.When", file="JobMethod.cs", label="Entry Unk.When", span=""];
m39_48 [cluster="Unk.AddRow", file="JobMethod.cs", label="Entry Unk.AddRow", span=""];
m39_9 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureTearDown()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.FeatureTearDown()", span="39-39"];
m39_10 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureTearDown()", color=green, community=0, file="JobMethod.cs", label="testRunner.OnFeatureEnd()", prediction=68, span="41-41"];
m39_11 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureTearDown()", file="JobMethod.cs", label="testRunner = null", span="42-42"];
m39_12 [cluster="HangFire.Tests.ServerFiltersFeature.FeatureTearDown()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.FeatureTearDown()", span="39-39"];
m39_65 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", span="139-139"];
m39_66 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Server filter should be able to cancel the performing of a job'', ((string[])(null)))", prediction=69, span="141-141"];
m39_67 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=66, span="143-143"];
m39_68 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", prediction=71, span="145-145"];
m39_69 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="testRunner.And(''a server filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", prediction=72, span="147-147"];
m39_70 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="testRunner.And(''a server filter \'second\' that cancels the performing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", prediction=73, span="149-149"];
m39_71 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="testRunner.And(''a server filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", prediction=74, span="151-151"];
m39_72 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=75, span="153-153"];
m39_73 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="testRunner.Then(''the job should not be performed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=76, span="155-155"];
m39_74 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", color=green, community=0, file="JobMethod.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", prediction=77, span="157-158"];
m39_75 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnPerforming''})", span="159-160"];
m39_76 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="table3.AddRow(new string[] {\r\n                        ''second::OnPerforming''})", span="161-162"];
m39_77 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnPerformed (with the canceled flag set)''})", span="163-164"];
m39_78 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="testRunner.And(''only the following server filter methods were executed:'', ((string)(null)), table3, ''And '')", span="166-166"];
m39_79 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="168-168"];
m39_80 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ServerFilterShouldBeAbleToCancelThePerformingOfAJob()", span="139-139"];
m39_96 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", span="209-209"];
m39_104 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="225-226"];
m39_105 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnPerforming''})", span="227-228"];
m39_106 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnPerforming''})", span="229-230"];
m39_107 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="table5.AddRow(new string[] {\r\n                        ''third::OnPerforming''})", span="231-232"];
m39_108 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnPerformed''})", span="233-234"];
m39_109 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnPerformed''})", span="235-236"];
m39_110 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.Then(''the server filter methods should be executed in the following order:'', ((string)(null)), table5, ''Then '')", span="238-238"];
m39_98 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="213-213"];
m39_112 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="242-242"];
m39_97 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Server filter can handle the exception'', ((string[])(null)))", span="211-211"];
m39_99 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="215-215"];
m39_100 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''a server filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="217-217"];
m39_101 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''a server filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="219-219"];
m39_102 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''a server filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="221-221"];
m39_111 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''the state of the job should be Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="240-240"];
m39_103 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="223-223"];
m39_113 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ServerFilterCanHandleTheException()", span="209-209"];
m39_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobMethod.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m39_14 [cluster="HangFire.Tests.ServerFiltersFeature.TestInitialize()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.TestInitialize()", span="46-46"];
m39_16 [cluster="HangFire.Tests.ServerFiltersFeature.TestInitialize()", file="JobMethod.cs", label="HangFire.Tests.ServerFiltersFeature.FeatureSetup(null)", span="51-51"];
m39_15 [cluster="HangFire.Tests.ServerFiltersFeature.TestInitialize()", file="JobMethod.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server filters''))", span="48-49"];
m39_17 [cluster="HangFire.Tests.ServerFiltersFeature.TestInitialize()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.TestInitialize()", span="46-46"];
m39_49 [cluster="Unk.Then", file="JobMethod.cs", label="Entry Unk.Then", span=""];
m39_44 [cluster="Unk.Given", file="JobMethod.cs", label="Entry Unk.Given", span=""];
m39_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobMethod.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m39_47 [cluster="TechTalk.SpecFlow.Table.cstr", file="JobMethod.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m39_8 [cluster="Unk.OnFeatureStart", file="JobMethod.cs", label="Entry Unk.OnFeatureStart", span=""];
m39_114 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", span="250-250"];
m39_120 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="testRunner.Then(''the server exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="263-263"];
m39_116 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="255-255"];
m39_122 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="267-267"];
m39_115 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Server exception filters are executed when there was an exception while performin'' +\r\n                    ''g a job'', ((string[])(null)))", span="252-253"];
m39_117 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="testRunner.Given(''an enqueued broken job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="257-257"];
m39_118 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="testRunner.And(''a server exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="259-259"];
m39_121 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="testRunner.And(''the state of the job should be Failed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="265-265"];
m39_119 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="261-261"];
m39_123 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ServerExceptionFiltersAreExecutedWhenThereWasAnExceptionWhilePerformingAJob()", span="250-250"];
m39_30 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", span="75-75"];
m39_36 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", color=green, community=0, file="JobMethod.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", prediction=78, span="87-88"];
m39_35 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m39_37 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", color=green, community=0, file="JobMethod.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnPerforming''})", prediction=79, span="89-90"];
m39_38 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", color=green, community=0, file="JobMethod.cs", label="table1.AddRow(new string[] {\r\n                        ''test::OnPerformed''})", prediction=78, span="91-92"];
m39_39 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="testRunner.Then(''the server filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="94-94"];
m39_34 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="testRunner.And(''a server filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m39_40 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="testRunner.And(''the job should be performed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="96-96"];
m39_32 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m39_41 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="98-98"];
m39_31 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Server filters should be executed when the worker performs the job'', ((string[])(null)))", span="77-77"];
m39_33 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m39_42 [cluster="HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ServerFiltersShouldBeExecutedWhenTheWorkerPerformsTheJob()", span="75-75"];
m39_138 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="Entry HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", span="306-306"];
m39_146 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="322-323"];
m39_147 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="table7.AddRow(new string[] {\r\n                        ''first''})", span="324-325"];
m39_148 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="table7.AddRow(new string[] {\r\n                        ''second''})", span="326-327"];
m39_149 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="table7.AddRow(new string[] {\r\n                        ''third''})", span="328-329"];
m39_150 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.Then(''the following server exception filters should be executed:'', ((string)(null)), table7, ''Then '')", span="331-331"];
m39_140 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="this.ScenarioSetup(scenarioInfo)", span="310-310"];
m39_152 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="this.ScenarioCleanup()", span="335-335"];
m39_139 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Server exception filter can handle the exception'', ((string[])(null)))", span="308-308"];
m39_141 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.Given(''an enqueued broken job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="312-312"];
m39_142 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''a server exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314"];
m39_143 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''a server exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="316-316"];
m39_144 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''a server exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="318-318"];
m39_151 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.And(''the state of the job should be Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="333-333"];
m39_145 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="320-320"];
m39_153 [cluster="HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", file="JobMethod.cs", label="Exit HangFire.Tests.ServerFiltersFeature.ServerExceptionFilterCanHandleTheException()", span="306-306"];
m39_154 [file="JobMethod.cs", label="HangFire.Tests.ServerFiltersFeature", span=""];
m40_10 [cluster="System.TimeSpan.FromSeconds(double)", file="JobMethodCallRenderer.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m40_12 [cluster="System.TimeSpan.FromHours(double)", file="JobMethodCallRenderer.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m40_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m40_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="TransactionIsolationLevel = null", span="27-27"];
m40_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28"];
m40_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30"];
m40_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31"];
m40_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="PrepareSchemaIfNecessary = true", span="32-32"];
m40_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="DashboardJobListLimit = 50000", span="33-33"];
m40_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="34-34"];
m40_9 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="JobMethodCallRenderer.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m40_13 [file="JobMethodCallRenderer.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m41_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JobMethodTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m41_9 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="19-19"];
m41_11 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheMethodIsNull()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheMethodIsNull()", span="19-19"];
m41_29 [cluster="Unk.Equal", file="JobMethodTests.cs", label="Entry Unk.Equal", span=""];
m41_42 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="JobMethodTests.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="91-91"];
m41_49 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Deserialize_WrapsAnException_WithTheJobLoadException()", span="71-71"];
m41_50 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobMethodTests.cs", label="var serializedData = new InvocationData()", span="73-73"];
m41_52 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_WrapsAnException_WithTheJobLoadException()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Deserialize_WrapsAnException_WithTheJobLoadException()", span="71-71"];
m41_8 [cluster="System.Type.GetMethod(string)", file="JobMethodTests.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m41_56 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="80-80"];
m41_59 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="80-80"];
m41_3 [cluster="Unk.>", file="JobMethodTests.cs", label="Entry Unk.>", span=""];
m41_63 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="94-94"];
m41_66 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="94-94"];
m41_30 [cluster="Unk.False", file="JobMethodTests.cs", label="Entry Unk.False", span=""];
m41_80 [cluster="HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", file="JobMethodTests.cs", label="Entry HangFire.Common.JobMethod.GetTypeFilterAttributes(bool)", span="134-134"];
m41_104 [cluster="HangFire.Core.Tests.Client.JobMethodTests.SerializedData_IsNotBeingChanged_DuringTheDeserialization()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.SerializedData_IsNotBeingChanged_DuringTheDeserialization()", span="159-159"];
m41_107 [cluster="HangFire.Core.Tests.Client.JobMethodTests.SerializedData_IsNotBeingChanged_DuringTheDeserialization()", file="JobMethodTests.cs", label="Assert.Null(serializedData.Method)", span="167-167"];
m41_108 [cluster="HangFire.Core.Tests.Client.JobMethodTests.SerializedData_IsNotBeingChanged_DuringTheDeserialization()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.SerializedData_IsNotBeingChanged_DuringTheDeserialization()", span="159-159"];
m41_92 [cluster="HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", file="JobMethodTests.cs", label="Entry HangFire.Common.JobMethod.GetMethodFilterAttributes(bool)", span="141-141"];
m41_109 [cluster="Unk.Null", file="JobMethodTests.cs", label="Entry Unk.Null", span=""];
m41_0 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="12-12"];
m41_2 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeIsNull()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeIsNull()", span="12-12"];
m41_31 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", span="45-45"];
m41_32 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobMethodTests.cs", label="var type = typeof(TestJob)", span="47-47"];
m41_33 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobMethodTests.cs", label="var methodInfo = type.GetMethod(''Perform'')", span="48-48"];
m41_36 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobMethodTests.cs", label="Assert.Equal(type, method.Type)", span="58-58"];
m41_38 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobMethodTests.cs", label="Assert.False(method.OldFormat)", span="60-60"];
m41_39 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Deserialize_CorrectlyDeserializes_AllTheData()", span="45-45"];
m41_67 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="104-104"];
m41_4 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="15-15"];
m41_6 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="15-15"];
m41_12 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="22-22"];
m41_14 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="22-22"];
m41_18 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="29-29"];
m41_20 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="29-29"];
m41_46 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="67-67"];
m41_48 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="67-67"];
m41_53 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="76-76"];
m41_55 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="76-76"];
m41_60 [cluster="lambda expression", file="JobMethodTests.cs", label="Entry lambda expression", span="90-90"];
m41_62 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="90-90"];
m41_69 [cluster="lambda expression", file="JobMethodTests.cs", label="Exit lambda expression", span="104-104"];
m41_41 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobMethodTests.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m41_43 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenSerializedDataIsNull()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenSerializedDataIsNull()", span="64-64"];
m41_45 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenSerializedDataIsNull()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Deserialize_ThrowsAnException_WhenSerializedDataIsNull()", span="64-64"];
m41_83 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="122-122"];
m41_84 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="var method = GetCorrectMethod()", span="124-124"];
m41_85 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="var nonCachedAttributes = method.GetMethodFilterAttributes(false).ToArray()", span="125-125"];
m41_86 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="var cachedAttributes = method.GetMethodFilterAttributes(true).ToArray()", span="126-126"];
m41_87 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="128-128"];
m41_89 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.True(nonCachedAttributes[0] is TestMethodAttribute)", span="131-131"];
m41_88 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="129-129"];
m41_90 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.True(cachedAttributes[0] is TestMethodAttribute)", span="132-132"];
m41_91 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="122-122"];
m41_21 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", span="33-33"];
m41_22 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", file="JobMethodTests.cs", label="var type = typeof (TestJob)", span="35-35"];
m41_23 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", file="JobMethodTests.cs", label="var methodInfo = type.GetMethod(''Perform'')", span="36-36"];
m41_25 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", file="JobMethodTests.cs", label="Assert.Equal(type, method.Type)", span="39-39"];
m41_27 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", file="JobMethodTests.cs", label="Assert.False(method.OldFormat)", span="41-41"];
m41_28 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Ctor_CorrectlySets_PropertyValues()", span="33-33"];
m41_70 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="108-108"];
m41_71 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="var method = GetCorrectMethod()", span="110-110"];
m41_72 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="var nonCachedAttributes = method.GetTypeFilterAttributes(false).ToArray()", span="111-111"];
m41_73 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="var cachedAttributes = method.GetTypeFilterAttributes(true).ToArray()", span="112-112"];
m41_74 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="114-114"];
m41_76 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.True(nonCachedAttributes[0] is TestTypeAttribute)", span="117-117"];
m41_75 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="115-115"];
m41_77 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Assert.True(cachedAttributes[0] is TestTypeAttribute)", span="118-118"];
m41_78 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="108-108"];
m41_79 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetCorrectMethod()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.GetCorrectMethod()", span="135-135"];
m41_93 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetCorrectMethod()", file="JobMethodTests.cs", label="var type = typeof(TestJob)", span="137-137"];
m41_94 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetCorrectMethod()", file="JobMethodTests.cs", label="var methodInfo = type.GetMethod(''Perform'')", span="138-138"];
m41_96 [cluster="HangFire.Core.Tests.Client.JobMethodTests.GetCorrectMethod()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.GetCorrectMethod()", span="135-135"];
m41_82 [cluster="Unk.True", file="JobMethodTests.cs", label="Entry Unk.True", span=""];
m41_110 [cluster="HangFire.Core.Tests.Client.JobMethodTests.TestJob.Perform()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.TestJob.Perform()", span="182-182"];
m41_111 [cluster="HangFire.Core.Tests.Client.JobMethodTests.TestJob.Perform()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.TestJob.Perform()", span="182-182"];
m41_15 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="26-26"];
m41_17 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="26-26"];
m41_40 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="JobMethodTests.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m41_97 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialization_FromTheOldFormat_CorrectlySerializesBothTypeAndMethod()", file="JobMethodTests.cs", label="Entry HangFire.Core.Tests.Client.JobMethodTests.Deserialization_FromTheOldFormat_CorrectlySerializesBothTypeAndMethod()", span="145-145"];
m41_100 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialization_FromTheOldFormat_CorrectlySerializesBothTypeAndMethod()", file="JobMethodTests.cs", label="Assert.Equal(typeof(TestJob), method.Type)", span="153-153"];
m41_102 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialization_FromTheOldFormat_CorrectlySerializesBothTypeAndMethod()", file="JobMethodTests.cs", label="Assert.True(method.OldFormat)", span="155-155"];
m41_103 [cluster="HangFire.Core.Tests.Client.JobMethodTests.Deserialization_FromTheOldFormat_CorrectlySerializesBothTypeAndMethod()", file="JobMethodTests.cs", label="Exit HangFire.Core.Tests.Client.JobMethodTests.Deserialization_FromTheOldFormat_CorrectlySerializesBothTypeAndMethod()", span="145-145"];
m41_112 [file="JobMethodTests.cs", label=serializedData, span=""];
m41_113 [file="JobMethodTests.cs", label=serializedData, span=""];
m41_114 [file="JobMethodTests.cs", label=serializedData, span=""];
m42_97 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="JobPerformer.cs", label="Entry Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="42-42"];
m42_129 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151"];
m42_130 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="153-153"];
m42_131 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="JobPerformer.cs", label="Assert.Equal(JobId, stateMachine.CreateJob(_job, _parameters, _state.Object))", span="154-154"];
m42_132 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151"];
m42_220 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275"];
m42_221 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="_process.Setup(x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(new Exception())", span="278-279"];
m42_222 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="281-281"];
m42_223 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="284-284"];
m42_224 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false))", span="287-287"];
m42_225 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="Assert.False(result)", span="289-289"];
m42_226 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275"];
m42_6 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_connection = new Mock<IStorageConnection>()", span="34-34"];
m42_17 [cluster="Unk.Equal", file="JobPerformer.cs", label="Entry Unk.Equal", span=""];
m42_58 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68"];
m42_59 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="70-71"];
m42_60 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobPerformer.cs", label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="73-73"];
m42_61 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68"];
m42_44 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="54-54"];
m42_71 [cluster="Unk.Same", file="JobPerformer.cs", label="Entry Unk.Same", span=""];
m42_253 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319"];
m42_254 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="322-328"];
m42_255 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="330-330"];
m42_256 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="332-332"];
m42_257 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="335-335"];
m42_258 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true))", span="338-341"];
m42_259 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="Assert.True(result)", span="343-343"];
m42_260 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319"];
m42_21 [cluster="CreateContext.cstr", file="JobPerformer.cs", label="Entry CreateContext.cstr", span=""];
m42_0 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25"];
m42_2 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_job = Job.FromExpression(() => Console.WriteLine())", span="29-29"];
m42_3 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_parameters = new Dictionary<string, string>()", span="30-30"];
m42_4 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_state = new Mock<IState>()", span="31-31"];
m42_53 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="JobPerformer.cs", label="return new CreateContext(_connection.Object, _job, _state.Object);", span="78-78"];
m42_227 [cluster="System.Exception.Exception()", file="JobPerformer.cs", label="Entry System.Exception.Exception()", span="0-0"];
m42_5 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobPerformer.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m42_7 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="35-35"];
m42_8 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="37-37"];
m42_11 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="JobPerformer.cs", label="_distributedLock = new Mock<IDisposable>()", span="52-52"];
m42_12 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="24-24"];
m42_13 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _job, _state.Object))", prediction=81, span="26-27"];
m42_29 [cluster="lambda expression", file="JobPerformer.cs", label="x.Name", span="32-32"];
m42_30 [cluster="lambda expression", color=green, community=0, file="JobPerformer.cs", label="Exit lambda expression", prediction=82, span="32-32"];
m42_31 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="37-37"];
m42_32 [cluster="lambda expression", file="JobPerformer.cs", label="x.CreateWriteTransaction()", span="37-37"];
m42_301 [cluster="Unk.ElectState", file="JobPerformer.cs", label="Entry Unk.ElectState", span=""];
m42_47 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="JobPerformer.cs", label="var context = CreateContext()", span="66-66"];
m42_243 [cluster="System.InvalidOperationException.InvalidOperationException()", file="JobPerformer.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m42_151 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180"];
m42_152 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="182-182"];
m42_153 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.ChangeState(JobId, _state.Object, new string[0]))", span="184-185"];
m42_154 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobPerformer.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="187-187"];
m42_155 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180"];
m42_14 [cluster="Mock<IStateChangeProcess>.cstr", file="JobPerformer.cs", label="Entry Mock<IStateChangeProcess>.cstr", span=""];
m42_15 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobPerformer.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m42_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobPerformer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m42_38 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="JobPerformer.cs", label="Assert.Same(_connection.Object, context.Connection)", span="56-56"];
m42_39 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="JobPerformer.cs", label="Assert.Same(_job, context.Job)", span="57-57"];
m42_273 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347"];
m42_274 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="var machine = CreateStateMachine()", span="350-350"];
m42_275 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="353-353"];
m42_276 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true))", span="356-360"];
m42_278 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="Assert.True(result)", span="364-364"];
m42_277 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="_transaction.Verify(x => x.Commit())", span="362-362"];
m42_279 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347"];
m42_182 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="220-220"];
m42_183 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="223-223"];
m42_184 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobPerformer.cs", label="stateMachine.ChangeState(JobId, _state.Object, null)", span="226-226"];
m42_185 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true))", span="229-232"];
m42_186 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="220-220"];
m42_57 [cluster="StateMachine.cstr", file="JobPerformer.cs", label="Entry StateMachine.cstr", span=""];
m42_201 [cluster="Unk.False", file="JobPerformer.cs", label="Entry Unk.False", span=""];
m42_89 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="109-109"];
m42_90 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="111-111"];
m42_91 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateJob(_job, _parameters, null))", span="113-114"];
m42_92 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobPerformer.cs", label="Assert.Equal(''state'', exception.ParamName)", span="116-116"];
m42_93 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="109-109"];
m42_133 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="158-158"];
m42_134 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="160-160"];
m42_135 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(null, _state.Object, FromOldState))", span="162-163"];
m42_136 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobPerformer.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="165-165"];
m42_137 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="158-158"];
m42_43 [cluster="Unk.GetJobData", file="JobPerformer.cs", label="Entry Unk.GetJobData", span=""];
m42_54 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="62-62"];
m42_49 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="JobPerformer.cs", label="Assert.Same(context.Items, contextCopy.Items)", span="69-69"];
m42_50 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="64-64"];
m42_51 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobPerformer.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30"];
m42_52 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59"];
m42_117 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="137-137"];
m42_118 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="139-139"];
m42_119 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="JobPerformer.cs", label="stateMachine.CreateJob(_job, _parameters, _state.Object)", span="141-141"];
m42_120 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true))", span="143-147"];
m42_121 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="137-137"];
m42_65 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77"];
m42_66 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="79-79"];
m42_67 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="JobPerformer.cs", label="var result = stateMachine.Process", span="81-81"];
m42_68 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="JobPerformer.cs", label="Assert.Same(_process.Object, result)", span="83-83"];
m42_69 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77"];
m42_27 [cluster="lambda expression", file="JobPerformer.cs", label="new CreateContext(_connection.Object, null, _state.Object)", span="36-36"];
m42_141 [cluster="Unk.ChangeState", file="JobPerformer.cs", label="Entry Unk.ChangeState", span=""];
m42_150 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="JobPerformer.cs", label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="64-64"];
m42_159 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="191-191"];
m42_160 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="193-193"];
m42_161 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobPerformer.cs", label="stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="195-195"];
m42_162 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobPerformer.cs", label="_distributedLock.Verify(x => x.Dispose())", span="197-197"];
m42_163 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="191-191"];
m42_319 [cluster="System.NotSupportedException.NotSupportedException()", file="JobPerformer.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m42_45 [cluster="lambda expression", file="JobPerformer.cs", label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="54-54"];
m42_70 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412"];
m42_329 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobPerformer.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _process.Object);", span="414-416"];
m42_330 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412"];
m42_37 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="39-43"];
m42_40 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="45-45"];
m42_42 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="45-45"];
m42_142 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169"];
m42_143 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="171-171"];
m42_144 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(JobId, null, FromOldState))", span="173-174"];
m42_145 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobPerformer.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="176-176"];
m42_146 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169"];
m42_18 [cluster="Unk.Setup", file="JobPerformer.cs", label="Entry Unk.Setup", span=""];
m42_311 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389"];
m42_312 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="var exception = new NotSupportedException()", span="392-392"];
m42_313 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="_process.Setup(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(exception)", span="394-396"];
m42_316 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false))", span="404-407"];
m42_314 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="var machine = CreateStateMachine()", span="398-398"];
m42_315 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="401-401"];
m42_317 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="Assert.False(result)", span="409-409"];
m42_318 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389"];
m42_167 [cluster="Unk.Dispose", file="JobPerformer.cs", label="Entry Unk.Dispose", span=""];
m42_228 [cluster="Unk.Throws", file="JobPerformer.cs", label="Entry Unk.Throws", span=""];
m42_98 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120"];
m42_99 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="122-122"];
m42_100 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="_parameters.Add(''Name'', ''Value'')", span="123-123"];
m42_102 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="stateMachine.CreateJob(job, _parameters, _state.Object)", span="127-127"];
m42_103 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="129-133"];
m42_101 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="125-125"];
m42_104 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120"];
m42_211 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257"];
m42_212 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="260-260"];
m42_213 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobPerformer.cs", label="var result = stateMachine.ChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="263-264"];
m42_214 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobPerformer.cs", label="Assert.False(result)", span="267-267"];
m42_215 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobPerformer.cs", label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="269-271"];
m42_216 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257"];
m42_81 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="98-98"];
m42_82 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m42_83 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(_job, null, _state.Object))", span="102-103"];
m42_84 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="JobPerformer.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="105-105"];
m42_85 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="98-98"];
m42_48 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="JobPerformer.cs", label="var contextCopy = new CreateContext(context)", span="67-67"];
m42_72 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87"];
m42_73 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="89-89"];
m42_74 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(null, _parameters, _state.Object))", span="91-92"];
m42_75 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="Assert.Equal(''job'', exception.ParamName)", span="94-94"];
m42_76 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87"];
m42_23 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _state.Object))", span="35-36"];
m42_46 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="54-54"];
m42_168 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="201-201"];
m42_169 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="204-204"];
m42_170 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobPerformer.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="207-207"];
m42_171 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true))", span="210-214"];
m42_172 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobPerformer.cs", label="Assert.True(result)", span="216-216"];
m42_173 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="201-201"];
m42_26 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="29-29"];
m42_24 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="Assert.Equal(''job'', exception.ParamName)", span="38-38"];
m42_28 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="36-36"];
m42_35 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="39-43"];
m42_25 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="33-33"];
m42_33 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="37-37"];
m42_55 [cluster="lambda expression", file="JobPerformer.cs", label="Hangfire.Core.Tests.Client.CreateContextFacts", span=""];
m42_56 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="62-62"];
m42_62 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="71-71"];
m42_63 [cluster="lambda expression", file="JobPerformer.cs", label="new StateMachine(_connection.Object, null)", span="71-71"];
m42_64 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="71-71"];
m42_78 [cluster="lambda expression", file="JobPerformer.cs", label="stateMachine.CreateJob(null, _parameters, _state.Object)", span="92-92"];
m42_77 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="92-92"];
m42_79 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="92-92"];
m42_87 [cluster="lambda expression", file="JobPerformer.cs", label="stateMachine.CreateJob(_job, null, _state.Object)", span="103-103"];
m42_86 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="103-103"];
m42_88 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="103-103"];
m42_95 [cluster="lambda expression", file="JobPerformer.cs", label="stateMachine.CreateJob(_job, _parameters, null)", span="114-114"];
m42_94 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="114-114"];
m42_96 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="114-114"];
m42_107 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="122-122"];
m42_112 [cluster="lambda expression", file="JobPerformer.cs", label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="129-133"];
m42_111 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="129-133"];
m42_108 [cluster="lambda expression", file="JobPerformer.cs", label="Console.WriteLine(''SomeString'')", span="122-122"];
m42_109 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="122-122"];
m42_113 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="129-133"];
m42_114 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="131-131"];
m42_115 [cluster="lambda expression", file="JobPerformer.cs", label="d[''Name''] == ''Value''", span="131-131"];
m42_116 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="131-131"];
m42_122 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="143-147"];
m42_123 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true)", span="143-147"];
m42_124 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="143-147"];
m42_126 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="145-146"];
m42_127 [cluster="lambda expression", file="JobPerformer.cs", label="sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null", span="145-146"];
m42_128 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="145-146"];
m42_139 [cluster="lambda expression", file="JobPerformer.cs", label="stateMachine.ChangeState(null, _state.Object, FromOldState)", span="163-163"];
m42_138 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="163-163"];
m42_140 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="163-163"];
m42_148 [cluster="lambda expression", file="JobPerformer.cs", label="stateMachine.ChangeState(JobId, null, FromOldState)", span="174-174"];
m42_147 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="174-174"];
m42_149 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="174-174"];
m42_157 [cluster="lambda expression", file="JobPerformer.cs", label="stateMachine.ChangeState(JobId, _state.Object, new string[0])", span="185-185"];
m42_156 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="185-185"];
m42_158 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="185-185"];
m42_164 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="197-197"];
m42_165 [cluster="lambda expression", file="JobPerformer.cs", label="x.Dispose()", span="197-197"];
m42_166 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="197-197"];
m42_175 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="210-214"];
m42_176 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true)", span="210-214"];
m42_177 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="210-214"];
m42_178 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="212-213"];
m42_179 [cluster="lambda expression", file="JobPerformer.cs", label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName", span="212-213"];
m42_180 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="212-213"];
m42_187 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="229-232"];
m42_188 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true)", span="229-232"];
m42_189 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="229-232"];
m42_190 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="231-231"];
m42_191 [cluster="lambda expression", file="JobPerformer.cs", label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName", span="231-231"];
m42_192 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="231-231"];
m42_202 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="239-239"];
m42_205 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="249-249"];
m42_208 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="252-252"];
m42_203 [cluster="lambda expression", file="JobPerformer.cs", label="x.GetJobData(It.IsAny<string>())", span="239-239"];
m42_204 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="239-239"];
m42_206 [cluster="lambda expression", file="JobPerformer.cs", label="x.GetJobData(JobId)", span="249-249"];
m42_207 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="249-249"];
m42_209 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="252-252"];
m42_210 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="252-252"];
m42_217 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="270-270"];
m42_218 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="270-270"];
m42_219 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="270-270"];
m42_229 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="278-278"];
m42_232 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="287-287"];
m42_230 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="278-278"];
m42_231 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="278-278"];
m42_233 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false)", span="287-287"];
m42_234 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="287-287"];
m42_244 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="296-296"];
m42_247 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="310-313"];
m42_245 [cluster="lambda expression", file="JobPerformer.cs", label="x.GetJobData(JobId)", span="296-296"];
m42_246 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="296-296"];
m42_248 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true)", span="310-313"];
m42_249 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="310-313"];
m42_250 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="312-312"];
m42_251 [cluster="lambda expression", file="JobPerformer.cs", label="ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState", span="312-312"];
m42_252 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="312-312"];
m42_261 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="322-322"];
m42_264 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="330-330"];
m42_267 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="338-341"];
m42_262 [cluster="lambda expression", file="JobPerformer.cs", label="x.GetJobData(JobId)", span="322-322"];
m42_263 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="322-322"];
m42_265 [cluster="lambda expression", file="JobPerformer.cs", label="x.IgnoreJobLoadException", span="330-330"];
m42_266 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="330-330"];
m42_268 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true)", span="338-341"];
m42_269 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="338-341"];
m42_270 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="340-340"];
m42_271 [cluster="lambda expression", file="JobPerformer.cs", label="ctx.NewState == _state.Object", span="340-340"];
m42_272 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="340-340"];
m42_280 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="356-360"];
m42_286 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="362-362"];
m42_281 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true)", span="356-360"];
m42_282 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="356-360"];
m42_283 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="358-359"];
m42_284 [cluster="lambda expression", file="JobPerformer.cs", label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId", span="358-359"];
m42_285 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="358-359"];
m42_287 [cluster="lambda expression", file="JobPerformer.cs", label="x.Commit()", span="362-362"];
m42_288 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="362-362"];
m42_303 [cluster="lambda expression", file="JobPerformer.cs", label="context.CandidateState = anotherState.Object", span="374-374"];
m42_306 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true)", span="382-385"];
m42_309 [cluster="lambda expression", file="JobPerformer.cs", label="ctx.NewState == anotherState.Object", span="384-384"];
m42_298 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="373-373"];
m42_302 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="374-374"];
m42_305 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="382-385"];
m42_299 [cluster="lambda expression", file="JobPerformer.cs", label="x.ElectState(_connection.Object, It.IsAny<ElectStateContext>())", span="373-373"];
m42_300 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="373-373"];
m42_304 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="374-374"];
m42_307 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="382-385"];
m42_308 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="384-384"];
m42_310 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="384-384"];
m42_324 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false)", span="404-407"];
m42_327 [cluster="lambda expression", file="JobPerformer.cs", label="ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception", span="406-406"];
m42_320 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="395-395"];
m42_323 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="404-407"];
m42_321 [cluster="lambda expression", file="JobPerformer.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="395-395"];
m42_322 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="395-395"];
m42_325 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="404-407"];
m42_326 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="406-406"];
m42_328 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="406-406"];
m42_19 [cluster="Unk.Returns", color=green, community=0, file="JobPerformer.cs", label="Entry Unk.Returns", prediction=82, span=""];
m42_34 [cluster="Unk.CreateWriteTransaction", color=green, community=0, file="JobPerformer.cs", label="Entry Unk.CreateWriteTransaction", prediction=82, span=""];
m42_22 [cluster="Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="33-33"];
m42_290 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368"];
m42_291 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="var anotherState = new Mock<IState>()", span="371-371"];
m42_292 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="_process.Setup(x => x.ElectState(_connection.Object, It.IsAny<ElectStateContext>()))\r\n                .Callback((IStorageConnection connection, ElectStateContext context) => context.CandidateState = anotherState.Object)", span="373-374"];
m42_295 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true))", span="382-385"];
m42_293 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="var machine = CreateStateMachine()", span="376-376"];
m42_294 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="379-379"];
m42_296 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368"];
m42_106 [cluster="Unk.Verify", file="JobPerformer.cs", label="Entry Unk.Verify", span=""];
m42_235 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293"];
m42_236 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="296-302"];
m42_237 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="304-304"];
m42_238 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="307-307"];
m42_239 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true))", span="310-313"];
m42_240 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="Assert.False(result)", span="315-315"];
m42_241 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293"];
m42_289 [cluster="Unk.Commit", file="JobPerformer.cs", label="Entry Unk.Commit", span=""];
m42_174 [cluster="Unk.True", file="JobPerformer.cs", label="Entry Unk.True", span=""];
m42_181 [cluster="Unk.Equals", file="JobPerformer.cs", label="Entry Unk.Equals", span=""];
m42_193 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236"];
m42_194 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="239-240"];
m42_195 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="var stateMachine = CreateStateMachine()", span="242-242"];
m42_196 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="245-245"];
m42_197 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="Assert.False(result)", span="248-248"];
m42_198 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="_connection.Verify(x => x.GetJobData(JobId))", span="249-249"];
m42_199 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="251-253"];
m42_200 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236"];
m42_242 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="JobPerformer.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m42_297 [cluster="Unk.Callback", file="JobPerformer.cs", label="Entry Unk.Callback", span=""];
m42_80 [cluster="Unk.CreateJob", file="JobPerformer.cs", label="Entry Unk.CreateJob", span=""];
m42_110 [cluster="System.Console.WriteLine(string)", file="JobPerformer.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m42_20 [cluster="Mock<IStorageConnection>.cstr", file="JobPerformer.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m42_125 [cluster="Unk.ApplyState", file="JobPerformer.cs", label="Entry Unk.ApplyState", span=""];
m42_331 [file="JobPerformer.cs", label="Hangfire.Core.Tests.States.StateMachineFacts", span=""];
m42_332 [file="JobPerformer.cs", label=stateMachine, span=""];
m42_333 [file="JobPerformer.cs", label=stateMachine, span=""];
m42_334 [file="JobPerformer.cs", label=stateMachine, span=""];
m42_335 [file="JobPerformer.cs", label=job, span=""];
m42_336 [file="JobPerformer.cs", label=stateMachine, span=""];
m42_337 [file="JobPerformer.cs", label=stateMachine, span=""];
m42_338 [file="JobPerformer.cs", label=stateMachine, span=""];
m42_339 [file="JobPerformer.cs", label=anotherState, span=""];
m42_340 [file="JobPerformer.cs", label=exception, span=""];
m43_0 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="JobState.cs", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="27-27"];
m43_1 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="JobState.cs", label="return new Dictionary<string, string>();", span="29-29"];
m43_2 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", file="JobState.cs", label="Exit HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="27-27"];
m44_0 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m44_1 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22"];
m44_2 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m44_3 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="JobStateHandler.cs", label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27"];
m45_3 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36"];
m45_4 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="connection == null", span="38-38"];
m45_6 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="job == null", span="39-39"];
m45_8 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="Connection = connection", span="41-41"];
m45_9 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="Job = job", span="42-42"];
m45_10 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="InitialState = initialState", span="43-43"];
m45_5 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="throw new ArgumentNullException(''connection'');", span="38-38"];
m45_7 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="throw new ArgumentNullException(''job'');", span="39-39"];
m45_11 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="Items = new Dictionary<string, object>()", span="45-45"];
m45_12 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobSteps.cs", label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36"];
m45_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m45_0 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobSteps.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30"];
m45_1 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobSteps.cs", label="Items = context.Items", span="33-33"];
m45_2 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="JobSteps.cs", label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30"];
m45_15 [file="JobSteps.cs", label="Hangfire.Client.CreateContext", span=""];
m46_3 [cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetConnection()", span="45-45"];
m46_4 [cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetComponents()", span="47-47"];
m46_5 [cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs", label="return Enumerable.Empty<IThreadWrappable>();", span="49-49"];
m46_6 [cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetComponents()", span="47-47"];
m46_0 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m46_1 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m46_8 [cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs", label="Entry HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m46_10 [cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs", label="Exit HangFire.JobStorage.GetStateHandlers()", span="52-52"];
m46_7 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobStorage.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m47_25 [cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="PerformContext.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="20-20"];
m47_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m47_20 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="PerformContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m47_17 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64"];
m47_18 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs", label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="66-66"];
m47_19 [cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64"];
m47_26 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="PerformContext.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m47_3 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35"];
m47_4 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="connection == null", span="42-42"];
m47_6 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="jobId == null", span="43-43"];
m47_10 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Connection = connection", span="46-46"];
m47_11 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="JobId = jobId", span="47-47"];
m47_5 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''connection'');", span="42-42"];
m47_7 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="throw new ArgumentNullException(''jobId'');", span="43-43"];
m47_13 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Items = new Dictionary<string, object>()", span="49-49"];
m47_14 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35"];
m47_0 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", span="29-29"];
m47_1 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs", label="Items = context.Items", span="32-32"];
m47_2 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", span="29-29"];
m47_22 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs", label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m47_23 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs", label="return JobHelper.FromJson<T>(Connection.GetJobParameter(JobId, name));", span="71-71"];
m47_24 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs", label="Exit HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m47_21 [cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="PerformContext.cs", label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="19-19"];
m47_27 [file="PerformContext.cs", label="HangFire.Server.Performing.PerformContext", span=""];
m48_0 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ProcessingJobDto.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m48_1 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ProcessingJobDto.cs", label="InProcessingState = true", span="9-9"];
m48_2 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="ProcessingJobDto.cs", label="Exit HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m48_3 [file="ProcessingJobDto.cs", label="HangFire.Storage.Monitoring.ProcessingJobDto", span=""];
m49_57 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119"];
m49_88 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="ProcessingJobsPage.generated.cs", label="return new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, jobId, queue);", span="121-121"];
m49_89 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119"];
m49_14 [cluster="Unk.Equal", file="ProcessingJobsPage.generated.cs", label="Entry Unk.Equal", span=""];
m49_7 [cluster="Mock<SqlServerStorage>.cstr", file="ProcessingJobsPage.generated.cs", label="Entry Mock<SqlServerStorage>.cstr", span=""];
m49_19 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36"];
m49_20 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ProcessingJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, null, _transaction.Object, JobId, Queue))", span="38-39"];
m49_21 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="41-41"];
m49_22 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36"];
m49_5 [cluster="Mock<IDbConnection>.cstr", file="ProcessingJobsPage.generated.cs", label="Entry Mock<IDbConnection>.cstr", span=""];
m49_13 [cluster="Unk.>", file="ProcessingJobsPage.generated.cs", label="Entry Unk.>", span=""];
m49_0 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19"];
m49_1 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="ProcessingJobsPage.generated.cs", label="_connection = new Mock<IDbConnection>()", span="21-21"];
m49_2 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="ProcessingJobsPage.generated.cs", label="_transaction = new Mock<IDbTransaction>()", span="22-22"];
m49_3 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="ProcessingJobsPage.generated.cs", label="_storage = new Mock<SqlServerStorage>(ConnectionUtils.GetConnectionString())", span="23-23"];
m49_4 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19"];
m49_9 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m49_10 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ProcessingJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(null, _connection.Object, _transaction.Object, JobId, Queue))", span="29-30"];
m49_11 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="32-32"];
m49_12 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m49_18 [cluster="SqlServerFetchedJob.cstr", file="ProcessingJobsPage.generated.cs", label="Entry SqlServerFetchedJob.cstr", span=""];
m49_47 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72"];
m49_48 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ProcessingJobsPage.generated.cs", label="var fetchedJob = new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, Queue)", span="74-74"];
m49_49 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(JobId, fetchedJob.JobId)", span="76-76"];
m49_50 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(Queue, fetchedJob.Queue)", span="77-77"];
m49_51 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72"];
m49_73 [cluster="Unk.Rollback", file="ProcessingJobsPage.generated.cs", label="Entry Unk.Rollback", span=""];
m49_26 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45"];
m49_27 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ProcessingJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, null, JobId, Queue))", span="47-48"];
m49_28 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(''transaction'', exception.ParamName)", span="50-50"];
m49_29 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45"];
m49_74 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107"];
m49_75 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="ProcessingJobsPage.generated.cs", label="var processingJob = CreateFetchedJob(''1'', ''queue'')", span="109-109"];
m49_76 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="ProcessingJobsPage.generated.cs", label="processingJob.Dispose()", span="112-112"];
m49_77 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="ProcessingJobsPage.generated.cs", label="_transaction.Verify(x => x.Dispose())", span="115-115"];
m49_78 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="ProcessingJobsPage.generated.cs", label="_connection.Verify(x => x.Dispose())", span="116-116"];
m49_79 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107"];
m49_33 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54"];
m49_34 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, null, Queue))", span="56-57"];
m49_35 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="59-59"];
m49_36 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54"];
m49_6 [cluster="Mock<IDbTransaction>.cstr", file="ProcessingJobsPage.generated.cs", label="Entry Mock<IDbTransaction>.cstr", span=""];
m49_58 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53"];
m49_85 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="116-116"];
m49_15 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="30-30"];
m49_16 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="new SqlServerFetchedJob(null, _connection.Object, _transaction.Object, JobId, Queue)", span="30-30"];
m49_17 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="30-30"];
m49_23 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="39-39"];
m49_24 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="new SqlServerFetchedJob(_storage.Object, null, _transaction.Object, JobId, Queue)", span="39-39"];
m49_25 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="39-39"];
m49_30 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="48-48"];
m49_31 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="new SqlServerFetchedJob(_storage.Object, _connection.Object, null, JobId, Queue)", span="48-48"];
m49_32 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="48-48"];
m49_37 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="57-57"];
m49_38 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, null, Queue)", span="57-57"];
m49_39 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="57-57"];
m49_44 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="66-66"];
m49_45 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null)", span="66-66"];
m49_46 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="66-66"];
m49_60 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="90-90"];
m49_61 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="x.Commit()", span="90-90"];
m49_62 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="90-90"];
m49_70 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="103-103"];
m49_71 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="x.Rollback()", span="103-103"];
m49_72 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="103-103"];
m49_81 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Entry lambda expression", span="115-115"];
m49_82 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="x.Dispose()", span="115-115"];
m49_83 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="115-115"];
m49_86 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="x.Dispose()", span="116-116"];
m49_87 [cluster="lambda expression", file="ProcessingJobsPage.generated.cs", label="Exit lambda expression", span="116-116"];
m49_64 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94"];
m49_65 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="ProcessingJobsPage.generated.cs", label="var processingJob = CreateFetchedJob(''1'', ''default'')", span="97-97"];
m49_66 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="ProcessingJobsPage.generated.cs", label="processingJob.Requeue()", span="100-100"];
m49_67 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="ProcessingJobsPage.generated.cs", label="_transaction.Verify(x => x.Rollback())", span="103-103"];
m49_68 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94"];
m49_63 [cluster="Unk.Commit", file="ProcessingJobsPage.generated.cs", label="Entry Unk.Commit", span=""];
m49_69 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58"];
m49_8 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m49_80 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63"];
m49_59 [cluster="Unk.Verify", file="ProcessingJobsPage.generated.cs", label="Entry Unk.Verify", span=""];
m49_52 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81"];
m49_53 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="ProcessingJobsPage.generated.cs", label="var processingJob = CreateFetchedJob(''1'', ''default'')", span="84-84"];
m49_54 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="ProcessingJobsPage.generated.cs", label="processingJob.RemoveFromQueue()", span="87-87"];
m49_55 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="ProcessingJobsPage.generated.cs", label="_transaction.Verify(x => x.Commit())", span="90-90"];
m49_56 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81"];
m49_40 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63"];
m49_41 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null))", span="65-66"];
m49_42 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="68-68"];
m49_43 [cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ProcessingJobsPage.generated.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63"];
m49_90 [file="ProcessingJobsPage.generated.cs", label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", span=""];
m50_59 [cluster="HangFire.Web.RazorPage.Write(object)", file="ProcessingState.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m50_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m50_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs", label="String.IsNullOrWhiteSpace(serverName)", prediction=85, span="29-29"];
m50_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs", label="throw new ArgumentNullException(''serverName'');", prediction=85, span="29-29"];
m50_3 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs", label="ServerName = serverName", prediction=87, span="31-31"];
m50_4 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=green, community=0, file="ProcessingState.cs", label="StartedAt = DateTime.UtcNow", prediction=88, span="32-32"];
m50_5 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m50_7 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Pager pager = new Pager(from, perPage, monitor.EnqueuedCount(Queue))\n    {\n        BasePageUrl = Request.LinkTo(''/queues/'' + Queue)\n    }", span="96-99"];
m50_6 [cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m50_8 [cluster="HangFire.States.ProcessingState.Serialize()", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.Serialize()", span="40-40"];
m50_10 [cluster="HangFire.States.ProcessingState.Serialize()", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.Serialize()", span="40-40"];
m50_15 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="155-155"];
m50_47 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(RenderPartial(new Paginator(pager)))", span="368-368"];
m50_9 [cluster="HangFire.States.ProcessingState.Serialize()", color=green, community=0, file="ProcessingState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", prediction=85, span="42-46"];
m50_17 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label=enqueuedJobs, span="181-181"];
m50_11 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        The queue is empty.\n    </div>\n'')", span="119-119"];
m50_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m50_13 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="HangFire.States.ProcessingState", span=""];
m50_14 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="143-150"];
m50_16 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>State</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Enqueued</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="160-176"];
m50_18 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover '')", span="187-187"];
m50_46 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="357-357"];
m50_19 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="192-192"];
m50_20 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\''>\n                        <td>\n                            <input type=\''checkbox'' +\r\n''\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="197-198"];
m50_21 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(job.Key)", span="203-203"];
m50_22 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\'' />\n                        </td>\n                        <td class=\''min-width\''>'' +\r\n''\n                            <a href=\'''')", span="208-209"];
m50_23 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="214-214"];
m50_24 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\''>\n                                '')", span="219-219"];
m50_25 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(HtmlHelper.JobId(job.Key))", span="224-224"];
m50_26 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\n                            </a>\n'')", span="229-229"];
m50_27 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="!job.Value.InEnqueuedState", span="234-234"];
m50_28 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="240-241"];
m50_29 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <span class=\''label label-default\'' style=\'''')", span="251-252"];
m50_30 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="257-257"];
m50_31 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\''>\n                                '')", span="262-262"];
m50_32 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(job.Value.State)", span="267-267"];
m50_33 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\n                            </span>\n                        </td>\n              '' +\r\n''          <td>\n                            <a class=\''job-method\'' href=\'''')", span="272-273"];
m50_34 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="278-278"];
m50_35 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\''>\n                                '')", span="283-283"];
m50_36 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="288-288"];
m50_37 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="293-294"];
m50_38 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="job.Value.EnqueuedAt.HasValue", span="299-299"];
m50_39 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="305-305"];
m50_44 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''                                <em>n/a</em>\n'')", span="337-337"];
m50_40 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(JobHelper.ToTimestamp(job.Value.EnqueuedAt.Value))", span="310-310"];
m50_41 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\''>\n                                    '')", span="315-315"];
m50_42 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Write(job.Value.EnqueuedAt)", span="320-320"];
m50_43 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''\n                                </span>\n'')", span="325-325"];
m50_45 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="347-347"];
m50_48 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="ProcessingState.cs", label="Exit HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62"];
m50_65 [cluster="string.Format(string, object)", file="ProcessingState.cs", label="Entry string.Format(string, object)", span="0-0"];
m50_58 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="ProcessingState.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29"];
m50_56 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ProcessingState.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m50_54 [cluster="Unk.TryParse", file="ProcessingState.cs", label="Entry Unk.TryParse", span=""];
m50_49 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ProcessingState.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m50_67 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40"];
m50_51 [cluster="string.ToUpperInvariant()", file="ProcessingState.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m50_61 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ProcessingState.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m50_52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m50_60 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ProcessingState.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m50_64 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ProcessingState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m50_57 [cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="ProcessingState.cs", label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39"];
m50_62 [cluster="Unk.Write", file="ProcessingState.cs", label="Entry Unk.Write", span=""];
m50_63 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ProcessingState.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m50_55 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ProcessingState.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m50_50 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ProcessingState.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m50_53 [cluster="HttpRequestBase.LinkTo(string)", file="ProcessingState.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m50_66 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ProcessingState.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m50_68 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ProcessingState.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m50_69 [file="ProcessingState.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m51_0 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="ProcessingStateFacts.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m51_1 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="ProcessingStateFacts.cs", label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m52_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m52_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m52_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m52_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="13-16"];
m52_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m52_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19"];
m52_6 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="transaction.RemoveFromSet(''processing'', context.JobId)", span="22-22"];
m52_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingStateHandler.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19"];
m52_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ProcessingStateHandler.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m53_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="QueueAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m53_0 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="QueueAttribute.cs", label="Entry HangFire.QueueAttribute.QueueAttribute(string)", span="53-53"];
m53_1 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", color=green, community=0, file="QueueAttribute.cs", label="String.IsNullOrWhiteSpace(queue)", prediction=90, span="59-59"];
m53_2 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", color=green, community=0, file="QueueAttribute.cs", label="Exit HangFire.QueueAttribute.QueueAttribute(string)", prediction=91, span="53-53"];
m53_3 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", color=green, community=0, file="QueueAttribute.cs", label="HangFire.QueueAttribute", prediction=92, span=""];
m53_4 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", color=green, community=1, file="QueueAttribute.cs", label="throw new ArgumentException(\r\n                    String.Format(\r\n                        ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue),\r\n                    ''queue'');", prediction=92, span="66-69"];
m53_5 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", color=green, community=0, file="QueueAttribute.cs", label="Queue = queue", prediction=94, span="72-72"];
m53_7 [cluster="string.IsNullOrWhiteSpace(string)", file="QueueAttribute.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m53_9 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="QueueAttribute.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m53_12 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="QueueAttribute.cs", label="Entry HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="80-80"];
m53_13 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="QueueAttribute.cs", label="var enqueuedState = context.CandidateState as EnqueuedState", prediction=95, span="82-82"];
m53_14 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="QueueAttribute.cs", label="enqueuedState != null", prediction=96, span="83-83"];
m53_15 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="QueueAttribute.cs", label="enqueuedState.Queue = Queue", prediction=97, span="85-85"];
m53_16 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="QueueAttribute.cs", label="Exit HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="80-80"];
m53_11 [cluster="string.Format(string, object)", file="QueueAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m55_0 [cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs", label="Entry HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", span="25-25"];
m55_1 [cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs", label="RepeatInterval = intervalInSeconds", span="27-27"];
m55_2 [cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs", label="Exit HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", span="25-25"];
m55_3 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="Entry HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="32-32"];
m55_4 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="RecurringAttribute.cs", label="context.CandidateState.Name == SucceededState.StateName", prediction=98, span="34-34"];
m55_5 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="var scheduleAt = DateTime.UtcNow.AddSeconds(RepeatInterval)", span="36-36"];
m55_6 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="context.CandidateState = new ScheduledState(scheduleAt)\r\n                {\r\n                    Reason = ''Scheduled as a recurring job''\r\n                }", span="37-40"];
m55_7 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="Exit HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="32-32"];
m55_8 [cluster="System.DateTime.AddSeconds(double)", file="RecurringAttribute.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m55_10 [file="RecurringAttribute.cs", label="HangFire.Filters.RecurringAttribute", span=""];
m56_5 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="RedisConnection.cs", label="context.Request.Body.CanSeek", span="36-36"];
m56_108 [cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m56_41 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m56_166 [cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m56_16 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m56_72 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string)", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string)", span="4-4"];
m56_11 [cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m56_49 [cluster="Unk.SetRangeInHash", file="RedisConnection.cs", label="Entry Unk.SetRangeInHash", span=""];
m56_13 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="33-33"];
m56_14 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="35-35"];
m56_15 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="33-33"];
m56_22 [cluster="System.TimeSpan.FromMinutes(double)", file="RedisConnection.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m56_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15"];
m56_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs", label="_redis = redis", span="17-17"];
m56_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs", label="Storage = storage", span="18-18"];
m56_3 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15"];
m56_4 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="RedisConnection.cs", label="context.Environment.Remove(FormCollectionKey)", span="31-31"];
m56_6 [cluster="Hangfire.Dashboard.OwinRequestExtensions.ReadFormSafeAsync(IOwinContext)", file="RedisConnection.cs", label="context.Request.Body.Seek(0L, SeekOrigin.Begin)", span="38-38"];
m56_7 [cluster="Unk.Dispose", file="RedisConnection.cs", label="Entry Unk.Dispose", span=""];
m56_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="28-28"];
m56_70 [cluster="Unk.GetAllEntriesFromHash", file="RedisConnection.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m56_165 [cluster="Unk.FromStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromStringTimestamp", span=""];
m56_133 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="197-197"];
m56_140 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="210-218"];
m56_134 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="199-199"];
m56_137 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var pipeline = _redis.CreatePipeline()", span="204-204"];
m56_146 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="RemoveServer(_redis, heartbeat.Key)", span="232-232"];
m56_135 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="200-200"];
m56_139 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var name = serverName", span="208-208"];
m56_138 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=serverNames, span="206-206"];
m56_136 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var utcNow = DateTime.UtcNow", span="202-202"];
m56_141 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.Flush()", span="221-221"];
m56_145 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="utcNow > maxTime.Add(timeOut)", span="230-230"];
m56_144 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="227-228"];
m56_147 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="removedServerCount++", span="233-233"];
m56_143 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=heartbeats, span="225-225"];
m56_142 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var removedServerCount = 0", span="224-224"];
m56_148 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="return removedServerCount;", span="237-237"];
m56_149 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="197-197"];
m56_77 [cluster="Unk.SetEntryInHash", file="RedisConnection.cs", label="Entry Unk.SetEntryInHash", span=""];
m56_103 [cluster="Unk.AddItemToSet", file="RedisConnection.cs", label="Entry Unk.AddItemToSet", span=""];
m56_21 [cluster="string.Format(string, object)", file="RedisConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m56_181 [cluster="Unk.RemoveEntryFromHash", file="RedisConnection.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m56_130 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="189-189"];
m56_131 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="191-194"];
m56_132 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="189-189"];
m56_129 [cluster="Unk.RemoveEntry", file="RedisConnection.cs", label="Entry Unk.RemoveEntry", span=""];
m56_116 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="173-173"];
m56_118 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="177-179"];
m56_119 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="181-183"];
m56_117 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="var transaction = redis.CreateTransaction()", span="175-175"];
m56_120 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.Commit()", span="185-185"];
m56_121 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="173-173"];
m56_86 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="134-134"];
m56_87 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="RedisConnection.cs", label="return _redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="136-138"];
m56_88 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="134-134"];
m56_9 [cluster="Unk.ContainsKey", file="RedisConnection.cs", label="Entry Unk.ContainsKey", span=""];
m56_10 [cluster="Unk.Remove", file="RedisConnection.cs", label="Entry Unk.Remove", span=""];
m56_12 [cluster="Unk.CreateTransaction", file="RedisConnection.cs", label="Entry Unk.CreateTransaction", span=""];
m56_78 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="122-122"];
m56_79 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="return _redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="124-126"];
m56_80 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="122-122"];
m56_53 [cluster="Unk.ExpireEntryIn", file="RedisConnection.cs", label="Entry Unk.ExpireEntryIn", span=""];
m56_17 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisConnection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m56_39 [cluster="System.Guid.ToString()", file="RedisConnection.cs", label="Entry System.Guid.ToString()", span="0-0"];
m56_152 [cluster="Unk.Flush", file="RedisConnection.cs", label="Entry Unk.Flush", span=""];
m56_167 [cluster="Unk.Add", file="RedisConnection.cs", label="Entry Unk.Add", span=""];
m56_54 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", span="78-78"];
m56_62 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="RedisConnection.cs", label="type = jobData[''Type'']", prediction=99, span="91-91"];
m56_55 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="var jobData = _redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="80-81"];
m56_61 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="jobData.ContainsKey(''Type'')", span="89-89"];
m56_63 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="jobData.ContainsKey(''Method'')", span="93-93"];
m56_67 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=1, file="RedisConnection.cs", label="var invocationData = new InvocationData(\r\n                type,\r\n                method,\r\n                parameterTypes)", prediction=100, span="102-105"];
m56_64 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="RedisConnection.cs", label="method = jobData[''Method'']", prediction=101, span="95-95"];
m56_65 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="jobData.ContainsKey(''ParameterTypes'')", span="97-97"];
m56_66 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="RedisConnection.cs", label="parameterTypes = jobData[''ParameterTypes'']", prediction=102, span="99-99"];
m56_58 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="RedisConnection.cs", label="string type = null", prediction=103, span="85-85"];
m56_56 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="jobData.Count == 0", span="83-83"];
m56_59 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="RedisConnection.cs", label="string method = null", prediction=104, span="86-86"];
m56_60 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="RedisConnection.cs", label="string parameterTypes = null", prediction=105, span="87-87"];
m56_68 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = invocationData,\r\n                State = jobData.ContainsKey(''State'') ? jobData[''State''] : null,\r\n            };", span="107-111"];
m56_57 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="return null;", span="83-83"];
m56_69 [cluster="HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetJobStateAndInvocationData(string)", span="78-78"];
m56_155 [cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m56_107 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m56_85 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="240-240"];
m56_169 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="247-250"];
m56_170 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="252-254"];
m56_171 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="255-257"];
m56_168 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="var transaction = redis.CreateTransaction()", span="245-245"];
m56_172 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="transaction.Commit()", span="259-259"];
m56_173 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="240-240"];
m56_164 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m56_40 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m56_112 [cluster="Unk.AddItemToList", file="RedisConnection.cs", label="Entry Unk.AddItemToList", span=""];
m56_91 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="141-141"];
m56_93 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="145-146"];
m56_94 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="148-154"];
m56_97 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="159-161"];
m56_92 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="var transaction = _redis.CreateTransaction()", span="143-143"];
m56_95 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label=queues, span="156-156"];
m56_96 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="var queue1 = queue", span="158-158"];
m56_98 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="transaction.Commit()", span="164-164"];
m56_99 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="141-141"];
m56_153 [cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m56_113 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="168-168"];
m56_114 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="RemoveServer(_redis, serverId)", span="170-170"];
m56_115 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="168-168"];
m56_34 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="67-69"];
m56_26 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", prediction=106, span="54-54"];
m56_24 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="45-45"];
m56_25 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var jobId = Guid.NewGuid().ToString()", span="51-51"];
m56_27 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="storedParameters.Add(''Type'', invocationData.Type)", prediction=106, span="55-55"];
m56_28 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="storedParameters.Add(''Method'', invocationData.Method)", prediction=106, span="56-56"];
m56_29 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", prediction=106, span="57-57"];
m56_30 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="storedParameters.Add(''Arguments'', JobHelper.ToJson(arguments))", prediction=106, span="58-58"];
m56_31 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", prediction=106, span="59-59"];
m56_33 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", color=green, community=0, file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", prediction=106, span="63-65"];
m56_32 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var transaction = _redis.CreateTransaction()", span="61-61"];
m56_36 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="return jobId;", span="75-75"];
m56_35 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.Commit()", span="72-72"];
m56_37 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="45-45"];
m56_154 [cluster="System.Math.Max(long, long)", file="RedisConnection.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m56_125 [cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m56_182 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="255-257"];
m56_47 [cluster="lambda expression", color=green, community=0, file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", prediction=106, span="63-65"];
m56_46 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="63-65"];
m56_48 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="63-65"];
m56_51 [cluster="lambda expression", file="RedisConnection.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="67-69"];
m56_50 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="67-69"];
m56_105 [cluster="lambda expression", file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="148-154"];
m56_110 [cluster="lambda expression", file="RedisConnection.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="159-161"];
m56_127 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="181-183"];
m56_175 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="247-250"];
m56_179 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="252-254"];
m56_183 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="255-257"];
m56_52 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="67-69"];
m56_100 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="145-146"];
m56_104 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="148-154"];
m56_109 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="159-161"];
m56_122 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="177-179"];
m56_126 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="181-183"];
m56_156 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="211-213"];
m56_161 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="214-218"];
m56_174 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="247-250"];
m56_178 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="252-254"];
m56_106 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="148-154"];
m56_111 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="159-161"];
m56_128 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="181-183"];
m56_176 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="247-250"];
m56_180 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="252-254"];
m56_184 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="255-257"];
m56_101 [cluster="lambda expression", file="RedisConnection.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="145-146"];
m56_102 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="145-146"];
m56_123 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="177-179"];
m56_124 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="177-179"];
m56_162 [cluster="lambda expression", file="RedisConnection.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="214-218"];
m56_157 [cluster="lambda expression", file="RedisConnection.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="211-213"];
m56_158 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="211-213"];
m56_163 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="214-218"];
m56_43 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m56_90 [cluster="Unk.FirstOrDefault", file="RedisConnection.cs", label="Entry Unk.FirstOrDefault", span=""];
m56_18 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="38-38"];
m56_19 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="40-42"];
m56_20 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="38-38"];
m56_177 [cluster="Unk.RemoveItemFromList", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromList", span=""];
m56_74 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="114-114"];
m56_75 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="116-119"];
m56_76 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="114-114"];
m56_151 [cluster="Unk.CreatePipeline", file="RedisConnection.cs", label="Entry Unk.CreatePipeline", span=""];
m56_42 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m56_38 [cluster="System.Guid.NewGuid()", file="RedisConnection.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m56_45 [cluster="Unk.Commit", file="RedisConnection.cs", label="Entry Unk.Commit", span=""];
m56_81 [cluster="Unk.GetValueFromHash", file="RedisConnection.cs", label="Entry Unk.GetValueFromHash", span=""];
m56_82 [cluster="HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", span="129-129"];
m56_83 [cluster="HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", file="RedisConnection.cs", label="RedisConnection.RemoveFromDequeuedList(_redis, payload.Queue, payload.Id)", span="131-131"];
m56_84 [cluster="HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CompleteJob(HangFire.Server.JobPayload)", span="129-129"];
m56_150 [cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m56_160 [cluster="Unk.GetValuesFromHash", file="RedisConnection.cs", label="Entry Unk.GetValuesFromHash", span=""];
m56_159 [cluster="Unk.Format", file="RedisConnection.cs", label="Entry Unk.Format", span=""];
m56_44 [cluster="Unk.QueueCommand", file="RedisConnection.cs", label="Entry Unk.QueueCommand", span=""];
m56_89 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisConnection.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m56_73 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="RedisConnection.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m56_23 [cluster="Unk.AcquireLock", file="RedisConnection.cs", label="Entry Unk.AcquireLock", span=""];
m56_71 [cluster="Unk.ContainsKey", file="RedisConnection.cs", label="Entry Unk.ContainsKey", span=""];
m56_186 [file="RedisConnection.cs", label=jobId, span=""];
m56_187 [file="RedisConnection.cs", label=storedParameters, span=""];
m56_185 [file="RedisConnection.cs", label="HangFire.Redis.RedisConnection", span=""];
m56_188 [file="RedisConnection.cs", label="System.TimeSpan", span=""];
m56_189 [file="RedisConnection.cs", label=string, span=""];
m56_190 [file="RedisConnection.cs", label=int, span=""];
m56_191 [file="RedisConnection.cs", label=queue1, span=""];
m56_192 [file="RedisConnection.cs", label=string, span=""];
m56_195 [file="RedisConnection.cs", label=string, span=""];
m56_196 [file="RedisConnection.cs", label=string, span=""];
m56_193 [file="RedisConnection.cs", label=name, span=""];
m56_194 [file="RedisConnection.cs", label=heartbeats, span=""];
m57_0 [cluster="HangFire.Tests.CustomJob.Perform()", file="RedisJobFetcher.cs", label="Entry HangFire.Tests.CustomJob.Perform()", span="10-10"];
m57_1 [cluster="HangFire.Tests.CustomJob.Perform()", file="RedisJobFetcher.cs", label="LastArticleId = ArticleId", span="12-12"];
m57_2 [cluster="HangFire.Tests.CustomJob.Perform()", file="RedisJobFetcher.cs", label="LastAuthor = Author", span="13-13"];
m57_3 [cluster="HangFire.Tests.CustomJob.Perform()", file="RedisJobFetcher.cs", label="Exit HangFire.Tests.CustomJob.Perform()", span="10-10"];
m57_4 [file="RedisJobFetcher.cs", label="HangFire.Tests.CustomJob", span=""];
m58_5 [cluster="System.TimeSpan.FromSeconds(double)", file="RedisMonitoringApi.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m58_0 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m58_1 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisMonitoringApi.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26"];
m58_2 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisMonitoringApi.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", span="27-27"];
m58_3 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisMonitoringApi.cs", label="PrepareSchemaIfNecessary = true", span="29-29"];
m58_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="RedisMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m58_7 [file="RedisMonitoringApi.cs", label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
m59_15 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="51-51"];
m59_16 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="return new RedisConnection(this, _pooledManager.GetClient());", span="53-53"];
m59_17 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="51-51"];
m59_9 [cluster="RedisClientManagerConfig.cstr", file="RedisStorage.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m59_10 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46"];
m59_11 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="48-48"];
m59_12 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46"];
m59_14 [cluster="Unk.GetClient", file="RedisStorage.cs", label="Entry Unk.GetClient", span=""];
m59_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23"];
m59_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23"];
m59_19 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="56-56"];
m59_20 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="58-58"];
m59_21 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new DequeuedJobsWatcher(this);", span="59-59"];
m59_22 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="yield return new ServerWatchdog(this);", span="60-60"];
m59_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="56-56"];
m59_24 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="RedisStorage.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m59_25 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="RedisStorage.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m59_26 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="RedisStorage.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m59_27 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63"];
m59_28 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new FailedStateHandler();", span="65-65"];
m59_29 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new ProcessingStateHandler();", span="66-66"];
m59_30 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="yield return new SucceededStateHandler();", span="67-67"];
m59_31 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63"];
m59_8 [cluster="PooledRedisClientManager.cstr", file="RedisStorage.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m59_38 [cluster="string.Format(string, object, object)", file="RedisStorage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m59_13 [cluster="RedisMonitoringApi.cstr", file="RedisStorage.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m59_35 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="70-70"];
m59_36 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="72-72"];
m59_37 [cluster="HangFire.Redis.RedisStorage.ToString()", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="70-70"];
m59_34 [cluster="HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", span="6-6"];
m59_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28"];
m59_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_host = host", span="30-30"];
m59_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_db = db", span="31-31"];
m59_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_options = options", span="32-32"];
m59_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="34-41"];
m59_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="RedisStorage.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28"];
m59_18 [cluster="RedisConnection.cstr", file="RedisStorage.cs", label="Entry RedisConnection.cstr", span=""];
m59_33 [cluster="HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", span="8-8"];
m59_32 [cluster="HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", file="RedisStorage.cs", label="Entry HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", span="8-8"];
m59_39 [file="RedisStorage.cs", label="HangFire.Redis.RedisStorage", span=""];
m60_6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="20-20"];
m60_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="_transaction.Dispose()", span="22-22"];
m60_8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="20-20"];
m60_121 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="126-126"];
m60_119 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="123-123"];
m60_120 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="125-125"];
m60_122 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="123-123"];
m60_83 [cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m60_57 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.State)", span="79-79"];
m60_149 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="147-147"];
m60_150 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="149-150"];
m60_151 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="147-147"];
m60_70 [cluster="Unk.SetRangeInHash", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="Entry Unk.SetRangeInHash", prediction=114, span=""];
m60_74 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''Reason'', state.Reason)", span="90-90"];
m60_75 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="91-91"];
m60_104 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="115-115"];
m60_102 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="112-112"];
m60_103 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="114-114"];
m60_105 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="112-112"];
m60_162 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="159-159"];
m60_163 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="162-163"];
m60_164 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="159-159"];
m60_55 [cluster="HangFire.Common.States.State.Serialize()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.State.Serialize()", span="27-27"];
m60_62 [cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.SetEntryInHash", span=""];
m60_91 [cluster="Unk.AddItemToSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.AddItemToSet", span=""];
m60_23 [cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs", label="Entry string.Format(string, object)", span="0-0"];
m60_48 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="63-64"];
m60_46 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="55-55"];
m60_52 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", prediction=115, span="75-77"];
m60_182 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn))", span="179-180"];
m60_181 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="177-177"];
m60_183 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="177-177"];
m60_66 [cluster="Unk.RemoveEntry", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.RemoveEntry", span=""];
m60_101 [cluster="Unk.IncrementValue", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.IncrementValue", span=""];
m60_31 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="45-45"];
m60_32 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="47-48"];
m60_33 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="49-50"];
m60_34 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="51-52"];
m60_35 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="45-45"];
m60_24 [cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.ExpireEntryIn", span=""];
m60_135 [cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m60_112 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="118-118"];
m60_113 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="120-120"];
m60_114 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="118-118"];
m60_129 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="129-129"];
m60_130 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="131-132"];
m60_131 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="129-129"];
m60_142 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="141-141"];
m60_143 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="143-144"];
m60_144 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="141-141"];
m60_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m60_58 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="82-82"];
m60_76 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="93-95"];
m60_77 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="82-82"];
m60_9 [cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Dispose", span=""];
m60_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="25-25"];
m60_11 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="return _transaction.Commit();", span="27-27"];
m60_12 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="25-25"];
m60_169 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="166-166"];
m60_170 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.IncrementValue(\r\n                RedisStorage.Prefix + key))", span="168-169"];
m60_171 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="166-166"];
m60_63 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="63-64"];
m60_21 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="32-34"];
m60_26 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="36-38"];
m60_29 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="40-42"];
m60_20 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="32-34"];
m60_25 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="36-38"];
m60_28 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="40-42"];
m60_22 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="32-34"];
m60_27 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="36-38"];
m60_30 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="40-42"];
m60_37 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="47-48"];
m60_41 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="49-50"];
m60_44 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="51-52"];
m60_36 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="47-48"];
m60_40 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="49-50"];
m60_43 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="51-52"];
m60_38 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="47-48"];
m60_42 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="49-50"];
m60_45 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="51-52"];
m60_64 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="63-64"];
m60_68 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="75-77"];
m60_59 [cluster="lambda expression", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", prediction=115, span="57-60"];
m60_67 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="72-74"];
m60_61 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="58-61"];
m60_65 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="63-64"];
m60_69 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="75-77"];
m60_80 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="93-95"];
m60_79 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="93-95"];
m60_81 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="93-95"];
m60_89 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="100-101"];
m60_93 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="103-104"];
m60_88 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="100-101"];
m60_92 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="103-104"];
m60_90 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="100-101"];
m60_94 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="103-104"];
m60_99 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="109-109"];
m60_98 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="109-109"];
m60_100 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="109-109"];
m60_107 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="114-114"];
m60_110 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="115-115"];
m60_106 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="114-114"];
m60_109 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="115-115"];
m60_108 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="114-114"];
m60_111 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="115-115"];
m60_116 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="120-120"];
m60_115 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="120-120"];
m60_117 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="120-120"];
m60_124 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="125-125"];
m60_127 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="126-126"];
m60_123 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="125-125"];
m60_126 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="126-126"];
m60_125 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="125-125"];
m60_128 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="126-126"];
m60_133 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="131-132"];
m60_132 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="131-132"];
m60_134 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="131-132"];
m60_140 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="137-138"];
m60_139 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="137-138"];
m60_141 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="137-138"];
m60_146 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="143-144"];
m60_145 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="143-144"];
m60_147 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="143-144"];
m60_153 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="149-150"];
m60_152 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="149-150"];
m60_154 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="149-150"];
m60_159 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="155-156"];
m60_158 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="155-156"];
m60_160 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="155-156"];
m60_166 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="162-163"];
m60_165 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="162-163"];
m60_167 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="162-163"];
m60_173 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.IncrementValue(\r\n                RedisStorage.Prefix + key)", span="168-169"];
m60_172 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="168-169"];
m60_174 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="168-169"];
m60_179 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="174-174"];
m60_178 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="174-174"];
m60_180 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="174-174"];
m60_185 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn)", span="179-180"];
m60_184 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="179-180"];
m60_78 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m60_186 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="179-180"];
m60_136 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="135-135"];
m60_137 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="137-138"];
m60_138 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="135-135"];
m60_175 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="172-172"];
m60_176 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="174-174"];
m60_177 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="172-172"];
m60_95 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="107-107"];
m60_96 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="109-109"];
m60_97 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="107-107"];
m60_161 [cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.RemoveItemFromList", span=""];
m60_17 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="40-42"];
m60_14 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="30-30"];
m60_15 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="32-34"];
m60_16 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="36-38"];
m60_18 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="30-30"];
m60_84 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="98-98"];
m60_85 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="100-101"];
m60_86 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="103-104"];
m60_87 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="98-98"];
m60_82 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m60_39 [cluster="Unk.Persist", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Persist", span=""];
m60_13 [cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m60_19 [cluster="Unk.QueueCommand", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.QueueCommand", span=""];
m60_54 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.Common.States.JobState, HangFire.Common.JobMethod)", span="55-55"];
m60_118 [cluster="Unk.DecrementValue", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.DecrementValue", span=""];
m60_168 [cluster="Unk.TrimList", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.TrimList", span=""];
m60_155 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="153-153"];
m60_156 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="155-156"];
m60_157 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="153-153"];
m60_148 [cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m60_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="13-13"];
m60_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="transaction == null", span="15-15"];
m60_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="_transaction = transaction", span="17-17"];
m60_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''transaction'');", span="15-15"];
m60_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="13-13"];
m60_187 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m60_188 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_189 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m60_190 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Common.States.State", span=""];
m60_191 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_192 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Common.States.JobState", span=""];
m60_193 [file="RedisWriteOnlyTransaction.cs", label=storedData, span=""];
m60_194 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_195 [file="RedisWriteOnlyTransaction.cs", label=storedData, span=""];
m60_196 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_197 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_198 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_199 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_200 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m60_201 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_202 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_203 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m60_204 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_205 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_206 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_207 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_208 [file="RedisWriteOnlyTransaction.cs", label=double, span=""];
m60_209 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_210 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_211 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_212 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_213 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_214 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_215 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_216 [file="RedisWriteOnlyTransaction.cs", label=int, span=""];
m60_217 [file="RedisWriteOnlyTransaction.cs", label=int, span=""];
m60_218 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_219 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_220 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m60_221 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m61_3 [cluster="HangFire.States.FailedState.GetProperties()", file="RetryAttribute.cs", label="Entry HangFire.States.FailedState.GetProperties()", span="20-20"];
m61_4 [cluster="HangFire.States.FailedState.GetProperties()", file="RetryAttribute.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="22-28"];
m61_5 [cluster="HangFire.States.FailedState.GetProperties()", file="RetryAttribute.cs", label="Exit HangFire.States.FailedState.GetProperties()", span="20-20"];
m61_17 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="RetryAttribute.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="40-40"];
m61_0 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="RetryAttribute.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m61_1 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="RetryAttribute.cs", label="Exception = exception", span="13-13"];
m61_2 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="RetryAttribute.cs", label="Exit HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m61_10 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction, string)", file="RetryAttribute.cs", label="Entry HangFire.States.FailedState.Apply(IRedisTransaction, string)", span="31-31"];
m61_11 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction, string)", file="RetryAttribute.cs", label="transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        jobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow)))", span="33-36"];
m61_12 [cluster="HangFire.States.FailedState.Apply(IRedisTransaction, string)", file="RetryAttribute.cs", label="Exit HangFire.States.FailedState.Apply(IRedisTransaction, string)", span="31-31"];
m61_9 [cluster="System.Exception.ToString()", file="RetryAttribute.cs", label="Entry System.Exception.ToString()", span="0-0"];
m61_13 [cluster="Unk.QueueCommand", file="RetryAttribute.cs", label="Entry Unk.QueueCommand", span=""];
m61_18 [cluster="Unk.AddItemToSortedSet", file="RetryAttribute.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m61_8 [cluster="System.Exception.GetType()", file="RetryAttribute.cs", label="Entry System.Exception.GetType()", span="0-0"];
m61_22 [cluster="lambda expression", file="RetryAttribute.cs", label="Entry lambda expression", span="43-43"];
m61_15 [cluster="lambda expression", file="RetryAttribute.cs", label="x.AddItemToSortedSet(\r\n                        ''hangfire:failed'',\r\n                        jobId,\r\n                        JobHelper.ToTimestamp(DateTime.UtcNow))", span="33-36"];
m61_14 [cluster="lambda expression", file="RetryAttribute.cs", label="Entry lambda expression", span="33-36"];
m61_16 [cluster="lambda expression", file="RetryAttribute.cs", label="Exit lambda expression", span="33-36"];
m61_23 [cluster="lambda expression", file="RetryAttribute.cs", label="x.RemoveItemFromSortedSet(''hangfire:failed'', jobId)", span="43-43"];
m61_24 [cluster="lambda expression", file="RetryAttribute.cs", label="Exit lambda expression", span="43-43"];
m61_19 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="RetryAttribute.cs", label="Entry HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", span="41-41"];
m61_20 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="RetryAttribute.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSortedSet(''hangfire:failed'', jobId))", span="43-43"];
m61_21 [cluster="HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", file="RetryAttribute.cs", label="Exit HangFire.States.FailedState.Descriptor.Unapply(IRedisTransaction, string)", span="41-41"];
m61_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="RetryAttribute.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51"];
m61_25 [cluster="Unk.RemoveItemFromSortedSet", file="RetryAttribute.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m61_26 [file="RetryAttribute.cs", label="HangFire.States.FailedState", span=""];
m61_27 [file="RetryAttribute.cs", label=string, span=""];
m61_28 [file="RetryAttribute.cs", label=string, span=""];
m63_24 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m63_3 [cluster="HangFire.RecurringJobsFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="ScheduledState.cs", label="Entry HangFire.RecurringJobsFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21"];
m63_5 [cluster="HangFire.RecurringJobsFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="ScheduledState.cs", label="throw new ArgumentNullException(''redis'');", span="23-23"];
m63_6 [cluster="HangFire.RecurringJobsFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", color=green, community=0, file="ScheduledState.cs", label="state == null", prediction=117, span="24-24"];
m63_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", color=green, community=0, file="ScheduledState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", prediction=118, span="46-46"];
m63_8 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", prediction=117, span="47-47"];
m63_12 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", prediction=120, span="47-47"];
m63_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="ScheduledState.cs", label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", prediction=117, span="53-53"];
m63_13 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", color=green, community=0, file="ScheduledState.cs", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", prediction=122, span="27-27"];
m63_14 [cluster="long.Parse(string)", color=green, community=0, file="ScheduledState.cs", label="Entry long.Parse(string)", prediction=120, span="0-0"];
m63_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m63_16 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="56-56"];
m63_0 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28"];
m63_1 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="EnqueueAt = enqueueAt", span="30-30"];
m63_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28"];
m63_19 [cluster="Unk.GetValueFromHash", file="ScheduledState.cs", label="Entry Unk.GetValueFromHash", span=""];
m63_17 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="59-59"];
m63_18 [cluster="string.Format(string, object)", file="ScheduledState.cs", label="Entry string.Format(string, object)", span="0-0"];
m63_20 [cluster="Unk.GetType", file="ScheduledState.cs", label="HangFire.States.ScheduledState", span=""];
m63_21 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ScheduledState.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m63_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ScheduledState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m63_25 [cluster="System.DateTime.AddSeconds(double)", file="ScheduledState.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m63_22 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ScheduledState.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m64_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", span="17-17"];
m64_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow.AddDays(1))", span="19-19"];
m64_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="ScheduledStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', ''<UtcNow timestamp>'' },\r\n                    { ''EnqueueAt'', ''<Tomorrow timestamp>'' },\r\n                },\r\n                state.Serialize())", prediction=124, span="21-27"];
m64_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.GetStateData_ReturnsCorrectData()", span="17-17"];
m64_12 [cluster="HangFire.States.ScheduledState.Serialize()", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.Serialize()", span="39-39"];
m64_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28"];
m64_14 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m64_0 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="10-10"];
m64_1 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="12-12"];
m64_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", color=green, community=0, file="ScheduledStateFacts.cs", label="Assert.Equal(ScheduledState.StateName, state.Name)", prediction=125, span="13-13"];
m64_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="10-10"];
m64_5 [cluster="Unk.Equal", file="ScheduledStateFacts.cs", label="Entry Unk.Equal", span=""];
m64_11 [cluster="System.DateTime.AddDays(double)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m65_0 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="ScheduleDto.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m65_1 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="ScheduleDto.cs", label="InScheduledState = true", span="9-9"];
m65_2 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="ScheduleDto.cs", label="Exit HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m65_3 [file="ScheduleDto.cs", label="HangFire.Storage.Monitoring.ScheduleDto", span=""];
m66_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SchedulePoller.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m66_0 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SchedulePoller.cs", label="Entry HangFire.QueueAttribute.QueueAttribute(string)", span="57-57"];
m66_1 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SchedulePoller.cs", label="String.IsNullOrWhiteSpace(queue)", span="59-59"];
m66_3 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SchedulePoller.cs", label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="64-64"];
m66_4 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SchedulePoller.cs", label="throw new ArgumentException(\r\n                    String.Format(\r\n                        ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue),\r\n                    ''queue'');", span="66-69"];
m66_5 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SchedulePoller.cs", label="Queue = queue", span="72-72"];
m66_6 [cluster="HangFire.QueueAttribute.QueueAttribute(string)", file="SchedulePoller.cs", label="Exit HangFire.QueueAttribute.QueueAttribute(string)", span="57-57"];
m66_7 [cluster="string.IsNullOrWhiteSpace(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m66_9 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="SchedulePoller.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m66_12 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePoller.cs", label="Entry HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="80-80"];
m66_13 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePoller.cs", label="var enqueuedState = context.CandidateState as EnqueuedState", span="82-82"];
m66_14 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePoller.cs", label="enqueuedState != null", span="83-83"];
m66_15 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePoller.cs", label="enqueuedState.Queue = Queue", span="85-85"];
m66_16 [cluster="HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePoller.cs", label="Exit HangFire.QueueAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="80-80"];
m66_11 [cluster="string.Format(string, object)", file="SchedulePoller.cs", label="Entry string.Format(string, object)", span="0-0"];
m66_17 [file="SchedulePoller.cs", label="HangFire.QueueAttribute", span=""];
m68_52 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="123-123"];
m68_53 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="125-128"];
m68_54 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="123-123"];
m68_58 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="137-137"];
m68_59 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="139-142"];
m68_60 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, long, long)", span="137-137"];
m68_66 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m68_15 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m68_65 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4"];
m68_76 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m68_35 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m68_8 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="29-29"];
m68_9 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="return new SqlServerWriteOnlyTransaction(_connection);", span="31-31"];
m68_10 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="29-29"];
m68_61 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="145-145"];
m68_62 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="147-152"];
m68_63 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="154-160"];
m68_64 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="145-145"];
m68_39 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", span="91-91"];
m68_40 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="string sql = @''\r\nselect InvocationData, StateName \r\nfrom HangFire.Job\r\nwhere id = @id''", span="93-96"];
m68_41 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", color=green, community=0, file="SqlServerConnection.cs", label="var job = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", prediction=126, span="98-99"];
m68_42 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="job == null", span="101-101"];
m68_44 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="var data = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="103-103"];
m68_45 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = data,\r\n                State = job.StateName,\r\n            };", span="105-109"];
m68_43 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="return null;", span="101-101"];
m68_46 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobStateAndInvocationData(string)", span="91-91"];
m68_12 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m68_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="return new SqlServerFetcher(_connection, queueNames);", span="36-36"];
m68_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m68_37 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m68_34 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m68_73 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="177-177"];
m68_74 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="179-181"];
m68_75 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="177-177"];
m68_7 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m68_4 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="24-24"];
m68_5 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_connection.Dispose()", span="26-26"];
m68_6 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="24-24"];
m68_19 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="28-28"];
m68_49 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="112-112"];
m68_50 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="114-120"];
m68_51 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="112-112"];
m68_11 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="18-18"];
m68_33 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m68_16 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="39-39"];
m68_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="41-43"];
m68_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="39-39"];
m68_36 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m68_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16"];
m68_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="_connection = connection", span="18-18"];
m68_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="Storage = storage", span="19-19"];
m68_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.JobStorage, SqlConnection)", span="16-16"];
m68_38 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m68_67 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="163-163"];
m68_68 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="165-167"];
m68_69 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="163-163"];
m68_21 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="46-46"];
m68_22 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="52-55"];
m68_23 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="57-65"];
m68_24 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="67-67"];
m68_25 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="69-69"];
m68_27 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="71-71"];
m68_28 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="73-78"];
m68_31 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="return jobId;", span="88-88"];
m68_26 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="int parameterIndex = 0", span="70-70"];
m68_30 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="85-85"];
m68_29 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="81-83"];
m68_32 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="46-46"];
m68_70 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="170-170"];
m68_71 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="172-174"];
m68_72 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="170-170"];
m68_55 [cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", span="131-131"];
m68_56 [cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = payload.Id, queueName = payload.Queue })", span="133-134"];
m68_57 [cluster="HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CompleteJob(HangFire.Server.JobPayload)", span="131-131"];
m68_47 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m68_48 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m68_77 [file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m69_25 [cluster="System.TimeSpan.Negate()", file="SqlServerFetcher.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m69_30 [cluster="Unk.>", file="SqlServerFetcher.cs", label="Entry Unk.>", span=""];
m69_32 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerFetcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m69_35 [cluster="int.ToString()", file="SqlServerFetcher.cs", label="Entry int.ToString()", span="0-0"];
m69_0 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m69_1 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="_connection = connection", span="23-23"];
m69_2 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="_queues = queues", span="24-24"];
m69_3 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlServerFetcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m69_33 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerFetcher.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m69_31 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerFetcher.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m69_26 [cluster="Unk.Query", file="SqlServerFetcher.cs", label="Entry Unk.Query", span=""];
m69_34 [cluster="HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", file="SqlServerFetcher.cs", label="Entry HangFire.Server.JobPayload.JobPayload(string, string, HangFire.Storage.InvocationData)", span="23-23"];
m69_27 [cluster="Unk.SingleOrDefault", file="SqlServerFetcher.cs", label="Entry Unk.SingleOrDefault", span=""];
m69_4 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
m69_18 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(5))", span="75-75"];
m69_6 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="string queueName = null", span="30-30"];
m69_17 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job == null && currentQueryIndex == fetchQueries.Length - 1", span="73-73"];
m69_21 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="job == null", span="82-82"];
m69_22 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(job.InvocationData)", span="84-84"];
m69_23 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="return new JobPayload(job.Id.ToString(), queueName, invocationData)\r\n            {\r\n                Arguments = job.Arguments\r\n            };", span="86-89"];
m69_7 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="string fetchJobSql = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt is null\r\nand Queue in @queues''", span="32-37"];
m69_8 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="string fetchTimedOutJobSql = @''\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt < DATEADD(second, @timeout, GETUTCDATE())\r\nand Queue in @queues''", span="39-43"];
m69_9 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var fetchQueries = new[] { fetchJobSql, fetchTimedOutJobSql }", span="45-45"];
m69_10 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var currentQueryIndex = 0", span="46-46"];
m69_11 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var idAndQueue = _connection.Query(\r\n                    fetchQueries[currentQueryIndex],\r\n                    new { queues = _queues, timeout = JobTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="50-53"];
m69_20 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchQueries.Length", span="81-81"];
m69_12 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="idAndQueue != null", span="55-55"];
m69_14 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="parameters.Add(''@id'', idAndQueue.JobId, dbType: DbType.Int32)", span="63-63"];
m69_16 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="queueName = idAndQueue.Queue", span="70-70"];
m69_13 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="var parameters = new DynamicParameters()", span="62-62"];
m69_19 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="return null;", span="77-77"];
m69_24 [cluster="HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", file="SqlServerFetcher.cs", label="Exit HangFire.SqlServer.SqlServerFetcher.DequeueJob(System.Threading.CancellationToken)", span="27-27"];
m69_28 [cluster="DynamicParameters.cstr", file="SqlServerFetcher.cs", label="Entry DynamicParameters.cstr", span=""];
m69_36 [file="SqlServerFetcher.cs", label="HangFire.SqlServer.SqlServerFetcher", span=""];
m70_62 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="128-130"];
m70_95 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m70_72 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="135-137"];
m70_143 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_63 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="126-126"];
m70_44 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="96-96"];
m70_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="368-368"];
m70_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var stats = new StatisticsDto()", span="370-370"];
m70_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect count(distinct Queue) from HangFire.JobQueue;\r\nselect sum([Value]) from HangFire.Counter where [Key] = 'stats:succeeded';\r\n''", span="372-379"];
m70_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Servers = multi.Read<int>().Single()", span="392-392"];
m70_191 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Queues = multi.Read<int>().Single()", span="393-393"];
m70_192 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="395-395"];
m70_193 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="return stats;", span="398-398"];
m70_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var multi = _connection.QueryMultiple(sql)", span="381-381"];
m70_184 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="383-383"];
m70_185 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="385-385"];
m70_194 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="368-368"];
m70_43 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m70_84 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerMonitoringApi.cs", label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="161-163"];
m70_85 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="152-152"];
m70_86 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="161-163"];
m70_104 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="182-184"];
m70_45 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="99-106"];
m70_47 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="return DeserializeJobs(jobs, selector);", span="113-113"];
m70_107 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="211-211"];
m70_108 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="217-221"];
m70_110 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="217-221"];
m70_23 [cluster="Unk.Single", file="SqlServerMonitoringApi.cs", label="Entry Unk.Single", span=""];
m70_114 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var queues = _connection.Query<QueueStatusDto>(queuesAndStatusSql).ToList()", span="240-240"];
m70_115 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="241-241"];
m70_7 [cluster="Unk.EnlistTransaction", file="SqlServerMonitoringApi.cs", label="Entry Unk.EnlistTransaction", span=""];
m70_51 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m70_52 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerMonitoringApi.cs", label="_queue.Enqueue(_commandQueue, queue, jobId)", span="116-116"];
m70_53 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m70_56 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerMonitoringApi.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="121-123"];
m70_57 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="119-119"];
m70_54 [cluster="Unk.Enqueue", file="SqlServerMonitoringApi.cs", label="Entry Unk.Enqueue", span=""];
m70_58 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="116-116"];
m70_148 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="401-401"];
m70_208 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow", span="403-403"];
m70_215 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="411-411"];
m70_209 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="404-404"];
m70_212 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="407-407"];
m70_213 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddHours(-1)", span="408-408"];
m70_210 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="405-405"];
m70_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < dates.Count", span="429-429"];
m70_225 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="result.Add(dates[i], value)", span="432-432"];
m70_211 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < 24", span="405-405"];
m70_214 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="405-405"];
m70_216 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="413-416"];
m70_217 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="418-421"];
m70_218 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label=keys, span="423-423"];
m70_219 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", span="425-425"];
m70_220 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", span="425-425"];
m70_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="431-431"];
m70_221 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="428-428"];
m70_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="429-429"];
m70_227 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="return result;", span="435-435"];
m70_226 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="429-429"];
m70_228 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(string)", span="401-401"];
m70_142 [cluster="Unk.ToString", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_152 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="327-327"];
m70_153 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="329-332"];
m70_154 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var multi = _connection.QueryMultiple(sql, new { id = jobId })", span="334-334"];
m70_158 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="339-339"];
m70_159 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="var history =\r\n                    multi.Read<SqlState>()\r\n                        .ToList()\r\n                        .Select(x => new StateHistoryDto\r\n                         {\r\n                             StateName = x.Name,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         })\r\n                        .ToList()", span="340-350"];
m70_156 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="job == null", span="337-337"];
m70_157 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="return null;", span="337-337"];
m70_161 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="327-327"];
m70_89 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var result = new List<ServerDto>()", span="176-176"];
m70_90 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label=servers, span="178-178"];
m70_91 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="180-180"];
m70_102 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="200-208"];
m70_103 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m70_50 [cluster="Unk.DeserializeJobs", file="SqlServerMonitoringApi.cs", label="Entry Unk.DeserializeJobs", span=""];
m70_33 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="71-73"];
m70_35 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="76-76"];
m70_145 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label=int, span=""];
m70_146 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label=trimSql, span=""];
m70_147 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="317-317"];
m70_196 [cluster="Unk.Read", file="SqlServerMonitoringApi.cs", label="Entry Unk.Read", span=""];
m70_105 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="182-184"];
m70_97 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m70_99 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="175-177"];
m70_5 [cluster="TransactionScope.cstr", file="SqlServerMonitoringApi.cs", label="Entry TransactionScope.cstr", span=""];
m70_122 [cluster="Unk.EnqueuedJobs", file="SqlServerMonitoringApi.cs", label="HangFire.States.IState", span=""];
m70_79 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m70_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="160-160"];
m70_81 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="SqlServerMonitoringApi.cs", label="return GetTimelineStats(''succeeded'');", span="162-162"];
m70_82 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="152-152"];
m70_60 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m70_61 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="126-126"];
m70_67 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="133-133"];
m70_69 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="133-133"];
m70_70 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="135-137"];
m70_71 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="135-137"];
m70_140 [cluster="List<KeyValuePair<string, DequeuedJobDto>>.cstr", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_195 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m70_197 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m70_64 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="128-130"];
m70_27 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m70_29 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69"];
m70_96 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerMonitoringApi.cs", label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="175-177"];
m70_144 [cluster="Unk.DeserializeJobMethod", file="SqlServerMonitoringApi.cs", label=int, span=""];
m70_15 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="36-36"];
m70_266 [cluster="System.DateTime.AddDays(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m70_14 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m70_166 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m70_8 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="29-29"];
m70_10 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_transaction.Dispose()", span="32-32"];
m70_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_connection.Dispose()", span="33-33"];
m70_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", span="29-29"];
m70_9 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Dispose()", file="SqlServerMonitoringApi.cs", label="_transaction.Complete()", span="31-31"];
m70_13 [cluster="Unk.Complete", file="SqlServerMonitoringApi.cs", label="Entry Unk.Complete", span=""];
m70_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="50-50"];
m70_25 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="64-66"];
m70_26 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DequeuedCount(string)", span="50-50"];
m70_111 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m70_40 [cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs", label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", prediction=127, span="83-93"];
m70_42 [cluster="HangFire.States.IState.SerializeData()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.States.IState.SerializeData()", span="26-26"];
m70_76 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="142-144"];
m70_78 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="142-144"];
m70_100 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="175-177"];
m70_128 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_130 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_167 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="339-339"];
m70_170 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="339-339"];
m70_173 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="343-349"];
m70_168 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Name", span="339-339"];
m70_169 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="339-339"];
m70_171 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Value", span="339-339"];
m70_172 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="339-339"];
m70_174 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="new StateHistoryDto\r\n                         {\r\n                             StateName = x.Name,\r\n                             CreatedAt = x.CreatedAt,\r\n                             Reason = x.Reason,\r\n                             Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                         }", span="343-349"];
m70_175 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="343-349"];
m70_198 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="383-383"];
m70_201 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="383-383"];
m70_205 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="385-385"];
m70_199 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.State", span="383-383"];
m70_200 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="383-383"];
m70_202 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.Count", span="383-383"];
m70_203 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="383-383"];
m70_204 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="385-385"];
m70_206 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="385-385"];
m70_235 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="411-411"];
m70_234 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="411-411"];
m70_239 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="421-421"];
m70_242 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="421-421"];
m70_236 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="411-411"];
m70_240 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(string)x.Key", span="421-421"];
m70_241 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="421-421"];
m70_243 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x.Count", span="421-421"];
m70_244 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="421-421"];
m70_271 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="451-451"];
m70_267 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="450-450"];
m70_270 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="451-451"];
m70_274 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="461-461"];
m70_277 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Entry lambda expression", span="461-461"];
m70_268 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="x.ToString(''yyyy-MM-dd'')", span="450-450"];
m70_269 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="450-450"];
m70_272 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="451-451"];
m70_275 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(string)x.Key", span="461-461"];
m70_276 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="461-461"];
m70_278 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="(long)x.Count", span="461-461"];
m70_279 [cluster="lambda expression", file="SqlServerMonitoringApi.cs", label="Exit lambda expression", span="461-461"];
m70_49 [cluster="Unk.ToList", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Entry Unk.ToList", prediction=128, span=""];
m70_87 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="170-170"];
m70_59 [cluster="System.Collections.Generic.List<T>.List(int)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m70_65 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m70_93 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="return result;", span="191-191"];
m70_112 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="231-231"];
m70_88 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="var servers = _connection.Query<Entities.Server>(\r\n                @''select * from HangFire.Server'')\r\n                .ToList()", span="172-174"];
m70_92 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="result.Add(new ServerDto\r\n                {\r\n                    Name = server.Id,\r\n                    Heartbeat = server.LastHeartbeat,\r\n                    Queues = data.Queues,\r\n                    StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                    WorkersCount = data.WorkerCount\r\n                })", span="181-188"];
m70_66 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m70_94 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="170-170"];
m70_113 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="string queuesAndStatusSql = @''\r\nselect distinct [Queue],\r\n	(select count(JobId) from HangFire.JobQueue as a where q.Queue = a.Queue and a.FetchedAt is null) as Enqueued,\r\n	(select count(JobId) from HangFire.JobQueue as b where q.Queue = b.Queue and b.FetchedAt is not null) as Fetched\r\nfrom HangFire.[JobQueue] as q\r\n''", span="233-238"];
m70_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="19-19"];
m70_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="_connection.EnlistTransaction(Transaction.Current)", prediction=129, span="26-26"];
m70_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="_connection = connection", span="21-21"];
m70_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="22-24"];
m70_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="19-19"];
m70_121 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m70_273 [cluster="Unk.Format", file="SqlServerMonitoringApi.cs", label="Entry Unk.Format", span=""];
m70_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="66-67"];
m70_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="return _connection.Query<int>(\r\n                sqlQuery,\r\n                new { state = stateName })\r\n                .Single();", span="69-72"];
m70_237 [cluster="System.DateTime.ToString(string)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m70_120 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_233 [cluster="Unk.ElementAt", file="SqlServerMonitoringApi.cs", label="Entry Unk.ElementAt", span=""];
m70_83 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", prediction=130, span="438-438"];
m70_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label=queues, span="243-243"];
m70_230 [cluster="Unk.Query", file="SqlServerMonitoringApi.cs", label="Entry Unk.Query", span=""];
m70_18 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="64-64"];
m70_36 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerMonitoringApi.cs", label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="78-81"];
m70_37 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", color=green, community=0, file="SqlServerMonitoringApi.cs", label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", prediction=131, span="83-93"];
m70_38 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.IState)", span="76-76"];
m70_231 [cluster="Unk.Add", file="SqlServerMonitoringApi.cs", label="Entry Unk.Add", span=""];
m70_19 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="41-41"];
m70_39 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="93-93"];
m70_48 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(int, int, string, System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="93-93"];
m70_6 [cluster="TransactionOptions.cstr", file="SqlServerMonitoringApi.cs", label="Entry TransactionOptions.cstr", span=""];
m70_229 [cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m70_17 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="36-36"];
m70_162 [cluster="Unk.QueryMultiple", file="SqlServerMonitoringApi.cs", label="Entry Unk.QueryMultiple", span=""];
m70_141 [cluster="KeyValuePair<string, DequeuedJobDto>.cstr", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_73 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="140-140"];
m70_75 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="140-140"];
m70_123 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=addAndSetStateSql, span=""];
m70_124 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="string enqueuedJobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  left join HangFire.Job j on jq.JobId = j.Id\r\n  left join HangFire.State s on s.Id = j.StateId\r\n  where jq.Queue = @queue and jq.FetchedAt is null\r\n) as r\r\nwhere r.row_num between @start and @end''", span="259-267"];
m70_127 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_238 [cluster="string.Format(string, object, object)", file="SqlServerMonitoringApi.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m70_164 [cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs", label="Entry Unk.ToDictionary", span=""];
m70_177 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="363-363"];
m70_179 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="363-363"];
m70_131 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m70_245 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var endDate = DateTime.UtcNow.Date", span="440-440"];
m70_252 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="451-451"];
m70_246 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var startDate = endDate.AddDays(-7)", span="441-441"];
m70_248 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="startDate <= endDate", span="444-444"];
m70_249 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="dates.Add(endDate)", span="446-446"];
m70_250 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="endDate = endDate.AddDays(-1)", span="447-447"];
m70_247 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var dates = new List<DateTime>()", span="442-442"];
m70_251 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="450-450"];
m70_262 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="result.Add(dates[i], value)", span="472-472"];
m70_260 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i < stringDates.Count", span="469-469"];
m70_253 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="453-456"];
m70_254 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var valuesMap = _connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="458-461"];
m70_255 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label=keys, span="463-463"];
m70_256 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="!valuesMap.ContainsKey(key)", span="465-465"];
m70_257 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="valuesMap.Add(key, 0)", span="465-465"];
m70_261 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="471-471"];
m70_258 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var result = new Dictionary<DateTime, long>()", span="468-468"];
m70_259 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="var i = 0", span="469-469"];
m70_264 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="return result;", span="475-475"];
m70_263 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="i++", span="469-469"];
m70_265 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(string)", span="438-438"];
m70_232 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerMonitoringApi.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m70_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="return _connection.Query<int>(\r\n                @''select count(JobId) from HangFire.JobQueue '' \r\n                + @''where Queue = @queue and FetchedAt is NULL'',\r\n                new { queue = queue })\r\n                .Single();", span="43-47"];
m70_21 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="41-41"];
m70_149 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="322-322"];
m70_150 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="return GetHourlyTimelineStats(''failed'');", span="324-324"];
m70_151 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="322-322"];
m70_165 [cluster="Unk.Select", file="SqlServerMonitoringApi.cs", label="Entry Unk.Select", span=""];
m70_176 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="SqlServerMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="5-5"];
m70_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m70_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_119 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="SqlServerMonitoringApi.cs", label="System.TimeSpan", span=""];
m70_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", file="SqlServerMonitoringApi.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(string)", span="64-64"];
m70_163 [cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs", label="Entry Unk.SingleOrDefault", span=""];
m70_132 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label="System.TimeSpan", span=""];
m70_133 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_135 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=double, span=""];
m70_136 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=addSql, span=""];
m70_138 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_139 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_280 [file="SqlServerMonitoringApi.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m70_281 [file="SqlServerMonitoringApi.cs", label=countByStates, span=""];
m70_282 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m70_283 [file="SqlServerMonitoringApi.cs", label=string, span=""];
m71_0 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32"];
m71_1 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32"];
m72_141 [cluster="HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", span="49-49"];
m72_114 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="75-75"];
m72_115 [cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="54-54"];
m72_117 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName))", span="76-77"];
m72_119 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="77-77"];
m72_120 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Requeue(jobId, SucceededState.StateName)", span="77-77"];
m72_116 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="76-77"];
m72_118 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="76-77"];
m72_121 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="77-77"];
m72_34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="currentQueryIndex == fetchConditions.Length - 1", span="91-91"];
m72_97 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName))", span="68-69"];
m72_98 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="68-69"];
m72_100 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Requeue(jobId, ScheduledState.StateName)", span="69-69"];
m72_102 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="71-72"];
m72_99 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="69-69"];
m72_101 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="69-69"];
m72_103 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName))", span="71-72"];
m72_122 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="79-79"];
m72_49 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="45-45"];
m72_50 [cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="53-53"];
m72_52 [cluster="lambda expression", color=green, community=0, file="StateApplyingContext.cs", label="new FetchedJobsPage(x.Groups[''Queue''].Value)", prediction=132, span="48-48"];
m72_55 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="51-51"];
m72_56 [cluster="lambda expression", color=green, community=0, file="StateApplyingContext.cs", label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", prediction=132, span="51-51"];
m72_57 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="51-51"];
m72_58 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m72_60 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId))", span="53-54"];
m72_51 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="48-48"];
m72_53 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="48-48"];
m72_54 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m72_61 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="53-54"];
m72_64 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Delete(jobId)", span="54-54"];
m72_59 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="53-54"];
m72_63 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="54-54"];
m72_62 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="StateApplyingContext.cs", label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26"];
m72_65 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="54-54"];
m72_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m72_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateApplyingContext.cs", label="options == null", prediction=134, span="38-38"];
m72_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m72_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''options'');", span="38-38"];
m72_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateApplyingContext.cs", label="_options = options", prediction=135, span="41-41"];
m72_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m72_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0, file="StateApplyingContext.cs", label="_connection.Dispose()", prediction=132, span="46-46"];
m72_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m72_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0, file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", prediction=137, span="44-44"];
m72_12 [cluster="Unk.Dispose", file="StateApplyingContext.cs", label="Entry Unk.Dispose", span=""];
m72_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateApplyingContext.cs", label="connection == null", span="37-37"];
m72_8 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="StateApplyingContext.cs", label="RegisterPathHandlerFactory(''/enqueued/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId)))", span="56-57"];
m72_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
m72_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StateApplyingContext.cs", label="return new SqlServerWriteOnlyTransaction(_connection);", span="51-51"];
m72_15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
m72_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m72_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m72_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m72_20 [cluster="SqlServerDistributedLock.cstr", file="StateApplyingContext.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m72_21 [cluster="string.Format(string, object)", file="StateApplyingContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m72_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m72_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="queues == null", span="63-63"];
m72_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''queues'');", span="63-63"];
m72_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="queues.Length == 0", span="64-64"];
m72_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64"];
m72_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="dynamic idAndQueue", span="66-66"];
m72_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77"];
m72_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateApplyingContext.cs", label="var currentQueryIndex = 0", span="78-78"];
m72_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateApplyingContext.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m72_178 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="StateApplyingContext.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m72_47 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="45-45"];
m72_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateApplyingContext.cs", label="jobData == null", span="166-166"];
m72_43 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="43-43"];
m72_69 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="56-57"];
m72_72 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="57-57"];
m72_73 [cluster="HangFire.BackgroundJob.Requeue(string)", file="StateApplyingContext.cs", label="Entry HangFire.BackgroundJob.Requeue(string)", span="181-181"];
m72_76 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="59-59"];
m72_74 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="59-59"];
m72_75 [cluster="lambda expression", file="StateApplyingContext.cs", label="new ProcessingJobsPage()", span="59-59"];
m72_79 [cluster="lambda expression", color=green, community=0, file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ProcessingState.StateName))", prediction=138, span="60-61"];
m72_80 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="60-61"];
m72_86 [cluster="lambda expression", color=green, community=0, file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName))", prediction=138, span="63-64"];
m72_78 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="60-61"];
m72_83 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="61-61"];
m72_81 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="61-61"];
m72_82 [cluster="lambda expression", color=green, community=0, file="StateApplyingContext.cs", label="BackgroundJob.Delete(jobId, ProcessingState.StateName)", prediction=138, span="61-61"];
m72_84 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="StateApplyingContext.cs", label="Entry HangFire.BackgroundJob.Delete(string, string)", span="168-168"];
m72_85 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="63-64"];
m72_87 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="63-64"];
m72_113 [cluster="lambda expression", file="StateApplyingContext.cs", label="new SucceededJobs()", span="75-75"];
m72_44 [cluster="lambda expression", color=green, community=0, file="StateApplyingContext.cs", label="new JobDetailsPage(x.Groups[''JobId''].Value)", prediction=141, span="43-43"];
m72_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateApplyingContext.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="197-203"];
m72_66 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StateApplyingContext.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m72_182 [cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="StateApplyingContext.cs", label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22"];
m72_42 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateApplyingContext.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m72_48 [cluster="lambda expression", file="StateApplyingContext.cs", label="new QueuesPage()", span="45-45"];
m72_164 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m72_68 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId))", span="56-57"];
m72_151 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="StateApplyingContext.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m72_37 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="37-37"];
m72_35 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="37-37"];
m72_38 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6"];
m72_39 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="39-39"];
m72_36 [cluster="lambda expression", file="StateApplyingContext.cs", label="new ErrorPage(ex)", span="37-37"];
m72_40 [cluster="lambda expression", file="StateApplyingContext.cs", label="new DashboardPage()", span="39-39"];
m72_133 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName))", span="84-85"];
m72_134 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="84-85"];
m72_135 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="85-85"];
m72_136 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Delete(jobId, FailedState.StateName)", span="85-85"];
m72_137 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="85-85"];
m72_186 [cluster="HangFire.Web.JsonStats.JsonStats()", file="StateApplyingContext.cs", label="Entry HangFire.Web.JsonStats.JsonStats()", span="22-22"];
m72_138 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="87-87"];
m72_125 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''serverId'');", span="256-256"];
m72_158 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="98-98"];
m72_45 [cluster="Unk.SingleOrDefault", file="StateApplyingContext.cs", label="Entry Unk.SingleOrDefault", span=""];
m72_89 [cluster="HangFire.Storage.JobData.JobData()", file="StateApplyingContext.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m72_92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''id'');", span="194-194"];
m72_127 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="254-254"];
m72_143 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName))", span="89-90"];
m72_166 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                RecurringJob.RemoveIfExists)", span="101-102"];
m72_169 [cluster="lambda expression", file="StateApplyingContext.cs", label="new BatchCommandHandler(\r\n                RecurringJob.Trigger)", span="103-104"];
m72_106 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="222-222"];
m72_88 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="StateApplyingContext.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m72_90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="192-192"];
m72_41 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateApplyingContext.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m72_67 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateApplyingContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m72_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="192-192"];
m72_108 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''key'');", span="224-224"];
m72_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="222-222"];
m72_126 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateApplyingContext.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="258-260"];
m72_132 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="263-263"];
m72_142 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="89-90"];
m72_148 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="94-94"];
m72_155 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="98-98"];
m72_161 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="100-100"];
m72_165 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="101-102"];
m72_168 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="103-104"];
m72_171 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="106-106"];
m72_175 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="107-107"];
m72_179 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="111-111"];
m72_183 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="115-115"];
m72_94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''name'');", span="195-195"];
m72_93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateApplyingContext.cs", label="name == null", span="195-195"];
m72_71 [cluster="Unk.Execute", file="StateApplyingContext.cs", label="Entry Unk.Execute", span=""];
m72_104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="218-218"];
m72_128 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="263-263"];
m72_130 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''serverId'');", span="265-265"];
m72_144 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="89-90"];
m72_146 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Requeue(jobId, DeletedState.StateName)", span="90-90"];
m72_167 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="101-102"];
m72_170 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="103-104"];
m72_105 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateApplyingContext.cs", label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="218-218"];
m72_107 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateApplyingContext.cs", label="key == null", span="224-224"];
m72_110 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateApplyingContext.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="225-225"];
m72_109 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateApplyingContext.cs", label="toScore < fromScore", span="225-225"];
m72_124 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateApplyingContext.cs", label="serverId == null", span="256-256"];
m72_123 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateApplyingContext.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="254-254"];
m72_140 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="87-87"];
m72_139 [cluster="lambda expression", file="StateApplyingContext.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m72_150 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="94-94"];
m72_149 [cluster="lambda expression", file="StateApplyingContext.cs", label="new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value))", span="94-94"];
m72_153 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Requeue(x.Groups[''JobId''].Value)", span="94-94"];
m72_157 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="98-98"];
m72_156 [cluster="lambda expression", file="StateApplyingContext.cs", label="new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value))", span="98-98"];
m72_159 [cluster="lambda expression", file="StateApplyingContext.cs", label="BackgroundJob.Delete(x.Groups[''JobId''].Value)", span="98-98"];
m72_163 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="100-100"];
m72_162 [cluster="lambda expression", file="StateApplyingContext.cs", label="new RecurringJobsPage()", span="100-100"];
m72_173 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="106-106"];
m72_172 [cluster="lambda expression", file="StateApplyingContext.cs", label="new JavaScriptHandler()", span="106-106"];
m72_177 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="107-107"];
m72_176 [cluster="lambda expression", file="StateApplyingContext.cs", label="new StyleSheetHandler()", span="107-107"];
m72_181 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="111-111"];
m72_180 [cluster="lambda expression", file="StateApplyingContext.cs", label="new FontsHandler(x.Groups[''File''].Value)", span="111-111"];
m72_185 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="115-115"];
m72_184 [cluster="lambda expression", file="StateApplyingContext.cs", label="new JsonStats()", span="115-115"];
m72_70 [cluster="Unk.Single", file="StateApplyingContext.cs", label="Entry Unk.Single", span=""];
m72_129 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateApplyingContext.cs", label="serverId == null", span="265-265"];
m72_131 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateApplyingContext.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="267-269"];
m72_145 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="90-90"];
m72_147 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="90-90"];
m72_152 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="94-94"];
m72_154 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="94-94"];
m72_160 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="98-98"];
m72_174 [cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="StateApplyingContext.cs", label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33"];
m72_91 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="StateApplyingContext.cs", label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="197-197"];
m72_111 [cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="StateApplyingContext.cs", label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="53-53"];
m72_242 [file="StateApplyingContext.cs", label="System.Text.RegularExpressions.Match", span=""];
m72_243 [file="StateApplyingContext.cs", label="System.Text.RegularExpressions.Match", span=""];
m73_29 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58"];
m73_30 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", color=green, community=0, file="StateApplyingContextFacts.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", prediction=142, span="60-62"];
m73_31 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58"];
m73_7 [cluster="System.DateTime.AddMinutes(double)", file="StateApplyingContextFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m73_10 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25"];
m73_11 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", color=green, community=0, file="StateApplyingContextFacts.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", prediction=143, span="27-27"];
m73_12 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", color=green, community=0, file="StateApplyingContextFacts.cs", label="And(''its state is Scheduled'')", prediction=144, span="28-28"];
m73_13 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", color=green, community=0, file="StateApplyingContextFacts.cs", label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", prediction=145, span="30-33"];
m73_14 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25"];
m73_32 [cluster="Unk.SortedSetContainsItem", file="StateApplyingContextFacts.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m73_37 [cluster="Unk.IsTrue", file="StateApplyingContextFacts.cs", label="Entry Unk.IsTrue", span=""];
m73_34 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66"];
m73_35 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", prediction=146, span="68-70"];
m73_36 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66"];
m73_6 [cluster="Unk.And", file="StateApplyingContextFacts.cs", label="Entry Unk.And", span=""];
m73_26 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="StateApplyingContextFacts.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m73_8 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="StateApplyingContextFacts.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="40-40"];
m73_27 [cluster="System.TimeSpan.FromSeconds(double)", file="StateApplyingContextFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m73_9 [cluster="Unk.AddItemToSortedSet", file="StateApplyingContextFacts.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m73_33 [cluster="Unk.IsFalse", file="StateApplyingContextFacts.cs", label="Entry Unk.IsFalse", span=""];
m73_41 [cluster="Unk.AreEqual", file="StateApplyingContextFacts.cs", label="Entry Unk.AreEqual", span=""];
m73_22 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", span="49-49"];
m73_23 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", color=green, community=0, file="StateApplyingContextFacts.cs", label="var poller = new SchedulePoller(RedisFactory.BasicManager, TimeSpan.FromSeconds(15))", prediction=147, span="51-51"];
m73_24 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", color=green, community=0, file="StateApplyingContextFacts.cs", label="_pollerResult = poller.EnqueueNextScheduledJob()", prediction=148, span="53-53"];
m73_25 [cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", span="49-49"];
m73_38 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", span="74-74"];
m73_39 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", color=green, community=0, file="StateApplyingContextFacts.cs", label="Assert.AreEqual(result, _pollerResult)", prediction=149, span="76-76"];
m73_40 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", span="74-74"];
m73_21 [cluster="System.DateTime.AddHours(double)", file="StateApplyingContextFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m73_16 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37"];
m73_17 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="Given(''a job'')", prediction=150, span="39-39"];
m73_18 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="And(''its state is Scheduled'')", prediction=151, span="40-40"];
m73_19 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddHours(1)))", prediction=152, span="42-45"];
m73_20 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37"];
m73_5 [cluster="Unk.Given", file="StateApplyingContextFacts.cs", label="Entry Unk.Given", span=""];
m73_0 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="StateApplyingContextFacts.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13"];
m73_1 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="Given(''a job'')", prediction=153, span="15-15"];
m73_2 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="And(''its state is Scheduled'')", prediction=154, span="16-16"];
m73_3 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", color=green, community=0, file="StateApplyingContextFacts.cs", label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", prediction=155, span="18-21"];
m73_4 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="StateApplyingContextFacts.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13"];
m73_28 [cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="StateApplyingContextFacts.cs", label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="29-29"];
m73_42 [file="StateApplyingContextFacts.cs", label="HangFire.Tests.SchedulePollerSteps", span=""];
m74_18 [cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="StateChangingContext.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="20-20"];
m74_15 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m74_16 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="64-65"];
m74_17 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m74_10 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m74_11 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="59-59"];
m74_12 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m74_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateChangingContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m74_19 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateChangingContext.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m74_0 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m74_1 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="candidateState == null", span="32-32"];
m74_3 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="connection == null", span="33-33"];
m74_5 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="CandidateState = candidateState", span="35-35"];
m74_6 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="CurrentState = currentState", span="36-36"];
m74_7 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Connection = connection", span="37-37"];
m74_2 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="throw new ArgumentNullException(''candidateState'');", span="32-32"];
m74_4 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m74_8 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs", label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m74_14 [cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="StateChangingContext.cs", label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="19-19"];
m74_20 [file="StateChangingContext.cs", label="HangFire.Common.States.StateChangingContext", span=""];
m76_2 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateContext.cs", label="Entry HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m76_3 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", color=green, community=0, file="StateContext.cs", label="String.IsNullOrEmpty(jobId)", prediction=156, span="29-29"];
m76_4 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", color=green, community=0, file="StateContext.cs", label="throw new ArgumentNullException(''jobId'');", prediction=157, span="29-29"];
m76_6 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", color=green, community=0, file="StateContext.cs", label="HangFire.Common.States.StateContext", prediction=156, span=""];
m76_5 [cluster="HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", file="StateContext.cs", label="Exit HangFire.Common.States.StateContext.StateContext(string, HangFire.Common.JobMethod)", span="27-27"];
m76_0 [cluster="HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", file="StateContext.cs", label="Entry HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", span="22-22"];
m76_1 [cluster="HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", file="StateContext.cs", label="Exit HangFire.Common.States.StateContext.StateContext(HangFire.Common.States.StateContext)", span="22-22"];
m76_8 [cluster="string.IsNullOrEmpty(string)", file="StateContext.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m77_119 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
m77_125 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="248-254"];
m77_121 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="238-238"];
m77_123 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''context'');", span="239-239"];
m77_124 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246"];
m77_120 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="serverId == null", span="238-238"];
m77_122 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="context == null", span="239-239"];
m77_126 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236"];
m77_97 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
m77_102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213"];
m77_99 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''id'');", span="207-207"];
m77_101 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''name'');", span="208-208"];
m77_100 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="name == null", span="208-208"];
m77_98 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="id == null", span="207-207"];
m77_103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205"];
m77_127 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m77_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
m77_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129"];
m77_63 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149"];
m77_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''job'');", span="111-111"];
m77_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''parameters'');", span="112-112"];
m77_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="var invocationData = InvocationData.Serialize(job)", span="119-119"];
m77_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117"];
m77_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="parameters.Count > 0", span="131-131"];
m77_61 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142"];
m77_64 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="return jobId;", span="152-152"];
m77_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="var parameterArray = new object[parameters.Count]", span="133-133"];
m77_62 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147"];
m77_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="job == null", span="111-111"];
m77_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="parameters == null", span="112-112"];
m77_60 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label=parameters, span="135-135"];
m77_59 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="int parameterIndex = 0", span="134-134"];
m77_65 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106"];
m77_21 [cluster="string.Format(string, object)", file="StateContextFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m77_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m77_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateContextFacts.cs", label="connection == null", prediction=159, span="37-37"];
m77_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateContextFacts.cs", label="throw new ArgumentNullException(''connection'');", prediction=160, span="37-37"];
m77_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateContextFacts.cs", label="options == null", prediction=161, span="38-38"];
m77_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateContextFacts.cs", label="throw new ArgumentNullException(''options'');", prediction=162, span="38-38"];
m77_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateContextFacts.cs", label="_connection = connection", prediction=163, span="40-40"];
m77_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="StateContextFacts.cs", label="_options = options", prediction=164, span="41-41"];
m77_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.SqlServerStorageOptions)", span="35-35"];
m77_43 [cluster="System.TimeSpan.Negate()", file="StateContextFacts.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m77_69 [cluster="Unk.>", file="StateContextFacts.cs", label="Entry Unk.>", span=""];
m77_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
m77_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163"];
m77_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''id'');", span="157-157"];
m77_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160"];
m77_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="jobData == null", span="165-165"];
m77_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168"];
m77_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="invocationData.Arguments = jobData.Arguments", span="169-169"];
m77_86 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188"];
m77_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="id == null", span="157-157"];
m77_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="return null;", span="165-165"];
m77_83 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="job = invocationData.Deserialize()", span="176-176"];
m77_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="Job job = null", span="171-171"];
m77_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="loadException = ex", span="180-180"];
m77_82 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="JobLoadException loadException = null", span="172-172"];
m77_84 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label=JobLoadException, span="178-178"];
m77_87 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155"];
m77_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
m77_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StateContextFacts.cs", label="return new SqlServerWriteOnlyTransaction(_connection);", span="51-51"];
m77_15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49"];
m77_118 [cluster="System.ArgumentException.ArgumentException(string)", file="StateContextFacts.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m77_44 [cluster="Unk.Query", file="StateContextFacts.cs", label="Entry Unk.Query", span=""];
m77_48 [cluster="Unk.ToString", file="StateContextFacts.cs", label="Entry Unk.ToString", span=""];
m77_20 [cluster="SqlServerDistributedLock.cstr", file="StateContextFacts.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m77_42 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateContextFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m77_68 [cluster="System.DateTime.Add(System.TimeSpan)", file="StateContextFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m77_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m77_32 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87"];
m77_35 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93"];
m77_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''queues'');", span="63-63"];
m77_31 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="82-82"];
m77_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73"];
m77_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77"];
m77_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="var currentQueryIndex = 0", span="78-78"];
m77_33 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="idAndQueue == null", span="89-89"];
m77_38 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="idAndQueue == null", span="99-99"];
m77_39 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="return new SqlServerProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103"];
m77_34 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="currentQueryIndex == fetchConditions.Length - 1", span="91-91"];
m77_36 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="94-94"];
m77_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="queues == null", span="63-63"];
m77_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="queues.Length == 0", span="64-64"];
m77_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="dynamic idAndQueue", span="66-66"];
m77_37 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98"];
m77_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64"];
m77_40 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m77_138 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m77_141 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateContextFacts.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="282-284"];
m77_139 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateContextFacts.cs", label="timeOut.Duration() != timeOut", span="277-277"];
m77_140 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateContextFacts.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="279-279"];
m77_142 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275"];
m77_12 [cluster="Unk.Dispose", file="StateContextFacts.cs", label="Entry Unk.Dispose", span=""];
m77_143 [cluster="System.TimeSpan.Duration()", file="StateContextFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m77_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m77_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateContextFacts.cs", label="_connection.Dispose()", span="46-46"];
m77_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44"];
m77_104 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
m77_109 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222"];
m77_106 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''id'');", span="218-218"];
m77_108 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''queue'');", span="219-219"];
m77_107 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="queue == null", span="219-219"];
m77_105 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="id == null", span="218-218"];
m77_110 [cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216"];
m77_90 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
m77_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202"];
m77_92 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''id'');", span="193-193"];
m77_94 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''name'');", span="194-194"];
m77_93 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="name == null", span="194-194"];
m77_91 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="id == null", span="193-193"];
m77_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191"];
m77_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
m77_116 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233"];
m77_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''key'');", span="227-227"];
m77_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="toScore < fromScore", span="228-228"];
m77_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="key == null", span="227-227"];
m77_115 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228"];
m77_117 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225"];
m77_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m77_67 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateContextFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m77_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m77_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateContextFacts.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="56-58"];
m77_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54"];
m77_70 [cluster="Unk.Single", file="StateContextFacts.cs", label="Entry Unk.Single", span=""];
m77_41 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateContextFacts.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m77_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateContextFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m77_128 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m77_131 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateContextFacts.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="261-263"];
m77_130 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="259-259"];
m77_129 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateContextFacts.cs", label="serverId == null", span="259-259"];
m77_132 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257"];
m77_71 [cluster="Unk.Execute", file="StateContextFacts.cs", label="Entry Unk.Execute", span=""];
m77_89 [cluster="HangFire.Storage.JobData.JobData()", file="StateContextFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m77_88 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="StateContextFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m77_133 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m77_136 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateContextFacts.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="270-272"];
m77_135 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="268-268"];
m77_134 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateContextFacts.cs", label="serverId == null", span="268-268"];
m77_137 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="StateContextFacts.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266"];
m77_47 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", file="StateContextFacts.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(string, string)", span="23-23"];
m77_45 [cluster="Unk.SingleOrDefault", file="StateContextFacts.cs", label="Entry Unk.SingleOrDefault", span=""];
m77_66 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="StateContextFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m77_144 [file="StateContextFacts.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m78_7 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs", label="Entry HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18"];
m78_8 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=green, community=0, file="StateFacts.cs", label="var stateMock = new Mock<State>()", prediction=165, span="20-20"];
m78_9 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=green, community=0, file="StateFacts.cs", label="stateMock.CallBase = true", prediction=166, span="21-21"];
m78_10 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=green, community=0, file="StateFacts.cs", label="Assert.Empty(stateMock.Object.Serialize())", prediction=167, span="23-23"];
m78_11 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs", label="Exit HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18"];
m78_5 [cluster="Mock<State>.cstr", file="StateFacts.cs", label="Entry Mock<State>.cstr", span=""];
m78_6 [cluster="Unk.False", file="StateFacts.cs", label="Entry Unk.False", span=""];
m78_13 [cluster="Unk.Empty", file="StateFacts.cs", label="Entry Unk.Empty", span=""];
m78_12 [cluster="Unk.Serialize", file="StateFacts.cs", label="Entry Unk.Serialize", span=""];
m78_0 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs", label="Entry HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9"];
m78_1 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=green, community=0, file="StateFacts.cs", label="var stateMock = new Mock<State>()", prediction=168, span="11-11"];
m78_2 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=green, community=0, file="StateFacts.cs", label="stateMock.CallBase = true", prediction=169, span="12-12"];
m78_3 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=green, community=0, file="StateFacts.cs", label="Assert.False(stateMock.Object.ExpireJobOnApply)", prediction=170, span="14-14"];
m78_4 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs", label="Exit HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9"];
m79_15 [cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="Entry HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", span="24-24"];
m79_16 [cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="StateHandlerCollection.cs", label="stateName == null || !_handlers.ContainsKey(stateName)", prediction=171, span="26-26"];
m79_17 [cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="StateHandlerCollection.cs", label="return Enumerable.Empty<StateHandler>();", prediction=172, span="28-28"];
m79_18 [cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", color=green, community=0, file="StateHandlerCollection.cs", label="return _handlers[stateName].ToArray();", prediction=171, span="31-31"];
m79_19 [cluster="HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", file="StateHandlerCollection.cs", label="Exit HangFire.Common.States.StateHandlerCollection.GetHandlers(string)", span="24-24"];
m79_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m79_12 [cluster="System.Collections.Generic.List<T>.List()", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m79_10 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateHandlerCollection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m79_22 [cluster="System.Collections.Generic.List<T>.ToArray()", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m79_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateHandlerCollection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m79_0 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", file="StateHandlerCollection.cs", label="Entry HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", span="11-11"];
m79_1 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="handler == null", prediction=174, span="13-13"];
m79_2 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="throw new ArgumentNullException(''handler'');", prediction=175, span="13-13"];
m79_3 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="handler.StateName == null", prediction=171, span="14-14"];
m79_4 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="throw new ArgumentException(''The StateName property of the given state handler must be non null.'', ''handler'');", prediction=177, span="14-14"];
m79_5 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="!_handlers.ContainsKey(handler.StateName)", prediction=171, span="16-16"];
m79_6 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="_handlers.Add(handler.StateName, new List<StateHandler>())", prediction=171, span="18-18"];
m79_7 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", color=green, community=0, file="StateHandlerCollection.cs", label="_handlers[handler.StateName].Add(handler)", prediction=171, span="21-21"];
m79_8 [cluster="HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", file="StateHandlerCollection.cs", label="Exit HangFire.Common.States.StateHandlerCollection.AddHandler(StateHandler)", span="11-11"];
m79_21 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateHandlerCollection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m79_11 [cluster="Unk.ContainsKey", file="StateHandlerCollection.cs", label="Entry Unk.ContainsKey", span=""];
m79_13 [cluster="Unk.Add", file="StateHandlerCollection.cs", label="Entry Unk.Add", span=""];
m79_23 [file="StateHandlerCollection.cs", label="HangFire.Common.States.StateHandlerCollection", span=""];
m81_22 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m81_19 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="StateMachine.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="67-67"];
m81_21 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="StateMachine.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="67-67"];
m81_8 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="StateMachine.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="53-53"];
m81_10 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="StateMachine.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="53-53"];
m81_11 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m81_15 [cluster="System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", span="0-0"];
m81_0 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="StateMachine.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="35-35"];
m81_2 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="StateMachine.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="35-35"];
m81_12 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="StateMachine.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="62-62"];
m81_14 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="StateMachine.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="62-62"];
m81_16 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="64-64"];
m81_18 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="64-64"];
m81_7 [cluster="System.Collections.Generic.List<T>.Clear()", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m81_4 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="StateMachine.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Clear()", span="43-43"];
m81_5 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="StateMachine.cs", label="_filters.Clear()", span="45-45"];
m81_6 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="StateMachine.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Clear()", span="43-43"];
m81_23 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="StateMachine.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="72-72"];
m81_25 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="StateMachine.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="72-72"];
m81_26 [file="StateMachine.cs", label="HangFire.Filters.GlobalJobFilterCollection", span=""];
m81_27 [file="StateMachine.cs", label="HangFire.Filters.IJobFilter", span=""];
m82_13 [cluster="Mock<IState>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m82_16 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m82_67 [cluster="Hangfire.CaptureCultureAttribute.OnPerforming(Hangfire.Server.PerformingContext)", file="StateMachineFacts.cs", label="Entry Hangfire.CaptureCultureAttribute.OnPerforming(Hangfire.Server.PerformingContext)", span="41-41"];
m82_19 [cluster="Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", file="StateMachineFacts.cs", label="Entry Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", span="24-24"];
m82_45 [cluster="Unk.Equal", file="StateMachineFacts.cs", label="Entry Unk.Equal", span=""];
m82_29 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="145-145"];
m82_134 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", color=green, community=0, file="StateMachineFacts.cs", label="return new CaptureCultureAttribute();", prediction=181, span="147-147"];
m82_135 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.CreateFilter()", span="145-145"];
m82_50 [cluster="Unk.DoesNotThrow", file="StateMachineFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m82_35 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="49-49"];
m82_36 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", prediction=182, span="51-51"];
m82_37 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''ru-RU'')", prediction=183, span="52-52"];
m82_38 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=184, span="54-54"];
m82_39 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnCreating(_creatingContext)", prediction=185, span="55-55"];
m82_40 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentCulture''))", prediction=185, span="57-57"];
m82_41 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''ru-RU'', _creatingContext.GetJobParameter<string>(''CurrentUICulture''))", prediction=185, span="58-58"];
m82_42 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_CapturesCultures_AndSetsThemAsJobParameters()", span="49-49"];
m82_30 [cluster="Unk.>", file="StateMachineFacts.cs", label="Entry Unk.>", span=""];
m82_15 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="StateMachineFacts.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="24-24"];
m82_91 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="102-102"];
m82_92 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=188, span="104-104"];
m82_93 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Throws<ArgumentNullException>(() => filter.OnPerformed(null))", prediction=189, span="106-106"];
m82_94 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_ThrowsAnException_WhenContextIsNull()", span="102-102"];
m82_25 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="40-40"];
m82_26 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=190, span="42-42"];
m82_27 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", color=green, community=1, file="StateMachineFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => filter.OnCreating(null))", prediction=191, span="44-45"];
m82_28 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreating_ThrowsAnException_WhenContextIsNull()", span="40-40"];
m82_34 [cluster="Hangfire.CaptureCultureAttribute.OnCreating(Hangfire.Client.CreatingContext)", file="StateMachineFacts.cs", label="Entry Hangfire.CaptureCultureAttribute.OnCreating(Hangfire.Client.CreatingContext)", span="27-27"];
m82_116 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", span="127-127"];
m82_117 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", prediction=185, span="129-129"];
m82_118 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns((string)null)", prediction=185, span="130-130"];
m82_119 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=194, span="132-132"];
m82_120 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=195, span="133-133"];
m82_121 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=185, span="135-135"];
m82_122 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerforming(_performingContext)", prediction=185, span="136-136"];
m82_123 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerformed(_performedContext)", prediction=185, span="137-137"];
m82_124 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", prediction=199, span="139-139"];
m82_125 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", prediction=200, span="140-140"];
m82_126 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture_OnlyIfItWasChanged()", span="127-127"];
m82_75 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", span="86-86"];
m82_76 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns((string)null)", prediction=185, span="88-88"];
m82_77 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns((string)null)", prediction=185, span="89-89"];
m82_78 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=203, span="91-91"];
m82_79 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=204, span="92-92"];
m82_80 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=205, span="94-94"];
m82_81 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerforming(_performingContext)", prediction=185, span="95-95"];
m82_82 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", prediction=207, span="97-97"];
m82_83 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", prediction=208, span="98-98"];
m82_84 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_DoesNotDoAnything_WhenCultureJobParameterIsNotSet()", span="86-86"];
m82_71 [cluster="Unk.GetJobParameter", file="StateMachineFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m82_20 [cluster="Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", file="StateMachineFacts.cs", label="Entry Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", span="26-26"];
m82_54 [cluster="Hangfire.CaptureCultureAttribute.OnCreated(Hangfire.Client.CreatedContext)", file="StateMachineFacts.cs", label="Entry Hangfire.CaptureCultureAttribute.OnCreated(Hangfire.Client.CreatedContext)", span="37-37"];
m82_65 [cluster="Unk.Setup", file="StateMachineFacts.cs", label="Entry Unk.Setup", span=""];
m82_98 [cluster="Hangfire.CaptureCultureAttribute.OnPerformed(Hangfire.Server.PerformedContext)", file="StateMachineFacts.cs", label="Entry Hangfire.CaptureCultureAttribute.OnPerformed(Hangfire.Server.PerformedContext)", span="61-61"];
m82_130 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="130-130"];
m82_21 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="24-24"];
m82_22 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="Sample()", prediction=209, span="24-24"];
m82_23 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="24-24"];
m82_32 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnCreating(null)", prediction=190, span="45-45"];
m82_31 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="45-45"];
m82_33 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="45-45"];
m82_52 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnCreated(null)", prediction=211, span="66-66"];
m82_51 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="66-66"];
m82_53 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="66-66"];
m82_68 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="72-72"];
m82_72 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="73-73"];
m82_69 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentCulture'')", prediction=212, span="72-72"];
m82_70 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="72-72"];
m82_73 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentUICulture'')", prediction=213, span="73-73"];
m82_74 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="73-73"];
m82_85 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="88-88"];
m82_88 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="89-89"];
m82_86 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentCulture'')", prediction=214, span="88-88"];
m82_87 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="88-88"];
m82_89 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentUICulture'')", prediction=215, span="89-89"];
m82_90 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="89-89"];
m82_96 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerformed(null)", prediction=188, span="106-106"];
m82_95 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="106-106"];
m82_97 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="106-106"];
m82_110 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="112-112"];
m82_113 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="113-113"];
m82_111 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentCulture'')", prediction=217, span="112-112"];
m82_112 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="112-112"];
m82_114 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentUICulture'')", prediction=218, span="113-113"];
m82_115 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="113-113"];
m82_127 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="129-129"];
m82_128 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentCulture'')", prediction=219, span="129-129"];
m82_129 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="129-129"];
m82_131 [cluster="lambda expression", color=green, community=0, file="StateMachineFacts.cs", label="x.GetJobParameter(JobId, ''CurrentUICulture'')", prediction=220, span="130-130"];
m82_132 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="130-130"];
m82_14 [cluster="CreateContext.cstr", file="StateMachineFacts.cs", label="Entry CreateContext.cstr", span=""];
m82_46 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="62-62"];
m82_47 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=211, span="64-64"];
m82_48 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.DoesNotThrow(() => filter.OnCreated(null))", prediction=222, span="66-66"];
m82_49 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnCreated_DoesNotThrowAnException()", span="62-62"];
m82_55 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="70-70"];
m82_56 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", prediction=185, span="72-72"];
m82_57 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", prediction=185, span="73-73"];
m82_58 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=225, span="75-75"];
m82_59 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=226, span="76-76"];
m82_60 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=227, span="78-78"];
m82_61 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerforming(_performingContext)", prediction=185, span="79-79"];
m82_62 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentCulture.Name)", prediction=229, span="81-81"];
m82_63 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''ru-RU'', Thread.CurrentThread.CurrentUICulture.Name)", prediction=230, span="82-82"];
m82_64 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerforming_SetsThreadCultures_ToTheSpecifiedOnesInJobParameters()", span="70-70"];
m82_0 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="21-21"];
m82_1 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="_connection = new Mock<IStorageConnection>()", prediction=231, span="23-23"];
m82_2 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="var job = Job.FromExpression(() => Sample())", prediction=232, span="24-24"];
m82_3 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="var state = new Mock<IState>()", prediction=233, span="25-25"];
m82_4 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="var createContext = new CreateContext(\r\n                _connection.Object, job, state.Object)", prediction=234, span="27-28"];
m82_7 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="var performContext = new PerformContext(\r\n                workerContext.Object, _connection.Object, JobId, job, DateTime.UtcNow, new Mock<IJobCancellationToken>().Object)", prediction=235, span="33-34"];
m82_5 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="_creatingContext = new CreatingContext(createContext)", prediction=236, span="29-29"];
m82_6 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="var workerContext = new WorkerContextMock()", prediction=237, span="31-31"];
m82_8 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="_performingContext = new PerformingContext(performContext)", prediction=238, span="35-35"];
m82_9 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", color=green, community=0, file="StateMachineFacts.cs", label="_performedContext = new PerformedContext(performContext, null, false, null)", prediction=239, span="36-36"];
m82_10 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.PreserveCultureAttributeFacts()", span="21-21"];
m82_18 [cluster="Mock<IJobCancellationToken>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m82_44 [cluster="Hangfire.Client.CreateContext.GetJobParameter<T>(string)", file="StateMachineFacts.cs", label="Entry Hangfire.Client.CreateContext.GetJobParameter<T>(string)", span="121-121"];
m82_66 [cluster="Unk.Returns", file="StateMachineFacts.cs", label="Entry Unk.Returns", span=""];
m82_43 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="StateMachineFacts.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m82_11 [cluster="Mock<IStorageConnection>.cstr", file="StateMachineFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m82_136 [cluster="Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", file="StateMachineFacts.cs", label="Entry Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", span="25-25"];
m82_99 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="110-110"];
m82_100 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentCulture'')).Returns(''\''ru-RU\'''')", prediction=185, span="112-112"];
m82_101 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''CurrentUICulture'')).Returns(''\''ru-RU\'''')", prediction=185, span="113-113"];
m82_102 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=242, span="115-115"];
m82_103 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo(''en-US'')", prediction=243, span="116-116"];
m82_104 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="var filter = CreateFilter()", prediction=185, span="118-118"];
m82_105 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerforming(_performingContext)", prediction=185, span="119-119"];
m82_106 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="filter.OnPerformed(_performedContext)", prediction=185, span="120-120"];
m82_107 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentCulture.Name)", prediction=247, span="122-122"];
m82_108 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", color=green, community=0, file="StateMachineFacts.cs", label="Assert.Equal(''en-US'', Thread.CurrentThread.CurrentUICulture.Name)", prediction=248, span="123-123"];
m82_109 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.OnPerformed_RestoresPreviousCurrentCulture()", span="110-110"];
m82_12 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m82_17 [cluster="PerformContext.cstr", file="StateMachineFacts.cs", label="Entry PerformContext.cstr", span=""];
m82_24 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="143-143"];
m82_133 [cluster="Hangfire.Core.Tests.PreserveCultureAttributeFacts.Sample()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.PreserveCultureAttributeFacts.Sample()", span="143-143"];
m82_137 [file="StateMachineFacts.cs", label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", span=""];
m82_138 [file="StateMachineFacts.cs", label=filter, span=""];
m82_139 [file="StateMachineFacts.cs", label=filter, span=""];
m82_140 [file="StateMachineFacts.cs", label=filter, span=""];
m83_228 [cluster="lambda expression", file="StateSteps.cs", label="y == JobSteps.DefaultJobId", span="338-338"];
m83_281 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="413-413"];
m83_239 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="354-354"];
m83_240 [cluster="lambda expression", file="StateSteps.cs", label="x.Unapply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="354-354"];
m83_243 [cluster="lambda expression", file="StateSteps.cs", label="y != null", span="354-354"];
m83_244 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="354-354"];
m83_241 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="354-354"];
m83_242 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="354-354"];
m83_245 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="354-354"];
m83_286 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.Rows[i][''State''], history[i][''State''])", span="421-421"];
m83_285 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="i < table.RowCount", span="419-419"];
m83_283 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="417-417"];
m83_284 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="var i = 0", span="419-419"];
m83_287 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StateSteps.cs", label="i++", span="419-419"];
m83_246 [cluster="lambda expression", file="StateSteps.cs", label="y == JobSteps.DefaultJobId", span="354-354"];
m83_135 [cluster="Unk.GetValue", file="StateSteps.cs", label="Entry Unk.GetValue", span=""];
m83_153 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="307-307"];
m83_154 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, _state.GetProperties())", span="245-245"];
m83_155 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StateSteps.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="310-310"];
m83_156 [cluster="HangFire.States.JobState.GetProperties()", file="StateSteps.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m83_157 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="StateSteps.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m83_158 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="249-249"];
m83_177 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="342-342"];
m83_178 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Assert.Equal(state, job[''State''])", span="343-343"];
m83_176 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="340-340"];
m83_179 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="340-340"];
m83_137 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Assert.AreEqual(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="212-212"];
m83_138 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="213-214"];
m83_139 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="210-210"];
m83_140 [cluster="Unk.GetListCount", file="StateSteps.cs", label="Entry Unk.GetListCount", span=""];
m83_159 [cluster="Unk.GetItemScoreInSortedSet", file="StateSteps.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m83_160 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m83_161 [cluster="System.DateTime.AddSeconds(double)", file="StateSteps.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m83_90 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="StateMachine.Descriptors.ContainsKey(_state.StateName)", span="132-132"];
m83_113 [cluster="string.Format(string, params object[])", color=green, community=0, file="StateSteps.cs", label="Entry string.Format(string, params object[])", prediction=249, span="0-0"];
m83_114 [cluster="Unk.GetValue", file="StateSteps.cs", label="Entry Unk.GetValue", span=""];
m83_93 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="128-128"];
m83_152 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="237-237"];
m83_19 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="62-62"];
m83_20 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="StateSteps.cs", label="_state = new EnqueuedState(''SomeReason'', ''test'')", span="64-64"];
m83_21 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueueStateWithTheValueForTheQueueArgument()", span="62-62"];
m83_183 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="TableAssert.ContainsFollowingItems(table, stateEntry)", span="351-351"];
m83_162 [cluster="Unk.GetSortedSetCount", file="StateSteps.cs", label="Entry Unk.GetSortedSetCount", span=""];
m83_163 [cluster="Unk.SortedSetContainsItem", file="StateSteps.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m83_164 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="256-256"];
m83_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Assert.AreEqual(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="258-258"];
m83_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="256-256"];
m83_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="262-262"];
m83_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="264-264"];
m83_187 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="357-358"];
m83_188 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Assert.NotNull(entry)", span="359-359"];
m83_186 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="355-355"];
m83_184 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="347-347"];
m83_185 [cluster="Unk.ContainsFollowingItems", file="StateSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m83_189 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="361-361"];
m83_119 [cluster="Unk.GetListCount", file="StateSteps.cs", label="Entry Unk.GetListCount", span=""];
m83_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Assert.True(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="336-336"];
m83_71 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="131-131"];
m83_64 [cluster="Mock<JobStateDescriptor>.cstr", file="StateSteps.cs", label="Entry Mock<JobStateDescriptor>.cstr", span=""];
m83_65 [cluster="Unk.Add", file="StateSteps.cs", label="Entry Unk.Add", span=""];
m83_66 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="97-97"];
m83_67 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StateSteps.cs", label="_stateChangingFilters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="99-99"];
m83_73 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="173-173"];
m83_72 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StateSteps.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="15-15"];
m83_230 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.Equal(table.RowCount, _stateChangingResults.Count)", span="435-435"];
m83_231 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="var i = 0", span="437-437"];
m83_232 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i < table.RowCount", span="437-437"];
m83_89 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="var transaction = Redis.Client.CreateTransaction()", span="130-130"];
m83_202 [cluster="Unk.Unapply", file="StateSteps.cs", label="Entry Unk.Unapply", span=""];
m83_124 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="249-249"];
m83_102 [cluster="Unk.ForEach", file="StateSteps.cs", label="Entry Unk.ForEach", span=""];
m83_215 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="409-409"];
m83_48 [cluster="Unk.Given", file="StateSteps.cs", label="Entry Unk.Given", span=""];
m83_190 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Assert.NotNull(history)", span="362-362"];
m83_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="262-262"];
m83_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="268-268"];
m83_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="270-270"];
m83_191 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="TableAssert.ContainsFollowingItems(table, history)", span="364-364"];
m83_192 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="355-355"];
m83_136 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="210-210"];
m83_212 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, history)", span="331-331"];
m83_213 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="322-322"];
m83_214 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.NotNull(entry)", span="407-407"];
m83_216 [cluster="Unk.>", file="StateSteps.cs", label="Entry Unk.>", span=""];
m83_218 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="StateSteps.cs", label="_stateMocks[state].Verify(\r\n                x => x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId)), \r\n                Times.Once)", span="337-339"];
m83_219 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="335-335"];
m83_217 [cluster="HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenApplyMethodHasCalled(string)", span="335-335"];
m83_259 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label=_stateProperties, span="375-375"];
m83_258 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.IsNotNull(history, entry)", span="373-373"];
m83_261 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.AreEqual(property.Value, history[property.Key])", span="378-378"];
m83_260 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="Assert.IsTrue(history.ContainsKey(property.Key))", span="377-377"];
m83_255 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i++", span="467-467"];
m83_257 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StateSteps.cs", label="HangFire.Tests.States.StateSteps", span=""];
m83_256 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="463-463"];
m83_220 [cluster="Unk.Verify", file="StateSteps.cs", label="Entry Unk.Verify", span=""];
m83_121 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="185-190"];
m83_122 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl);\r\n                })", span="192-198"];
m83_123 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="183-183"];
m83_144 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Assert.Equal(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="291-291"];
m83_143 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="289-289"];
m83_145 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="289-289"];
m83_100 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl));\r\n                })", span="222-229"];
m83_141 [cluster="Unk.GetSortedSetCount", file="StateSteps.cs", label="Entry Unk.GetSortedSetCount", span=""];
m83_120 [cluster="Unk.PopItemFromList", file="StateSteps.cs", label="Entry Unk.PopItemFromList", span=""];
m83_101 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="213-213"];
m83_68 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="97-97"];
m83_13 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="StateSteps.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10"];
m83_29 [cluster="Mock<JobState>.cstr", file="StateSteps.cs", label="Entry Mock<JobState>.cstr", span=""];
m83_17 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="StateSteps.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="28-28"];
m83_263 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m83_221 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="338-338"];
m83_22 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="StateSteps.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m83_94 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m83_117 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Assert.Equal(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="244-245"];
m83_96 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="207-207"];
m83_59 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Given(''a job'')", span="89-89"];
m83_60 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Given(''its state is Old'')", span="90-90"];
m83_61 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="_oldStateDescriptorMock = new Mock<JobStateDescriptor>()", span="92-92"];
m83_10 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="58-58"];
m83_11 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="_state = new ProcessingState(''SomeReason'', ''TestServer'')", span="52-52"];
m83_12 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="50-50"];
m83_18 [cluster="System.DateTime.AddDays(double)", file="StateSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m83_236 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="444-444"];
m83_195 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="301-301"];
m83_196 [cluster="Unk.SetContainsItem", file="StateSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m83_197 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="307-307"];
m83_237 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Assert.Equal(0, _stateChangingResults.Count)", span="446-446"];
m83_238 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="444-444"];
m83_267 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="Assert.IsTrue(stateEntry.ContainsKey(property.Key))", span="390-390"];
m83_222 [cluster="lambda expression", file="StateSteps.cs", label="x.Apply(It.Is<IRedisTransaction>(y => y != null), It.Is<string>(y => y == JobSteps.DefaultJobId))", span="338-338"];
m83_223 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="338-338"];
m83_224 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="338-338"];
m83_225 [cluster="lambda expression", file="StateSteps.cs", label="y != null", span="338-338"];
m83_226 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="338-338"];
m83_227 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="338-338"];
m83_266 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label=_stateProperties, span="388-388"];
m83_265 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="385-386"];
m83_268 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StateSteps.cs", label="Assert.AreEqual(property.Value, stateEntry[property.Key])", span="391-391"];
m83_80 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="181-181"];
m83_82 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="181-181"];
m83_81 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StateSteps.cs", label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="183-186"];
m83_83 [cluster="string.Format(string, object, object)", file="StateSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m83_84 [cluster="Unk.When", file="StateSteps.cs", label="Entry Unk.When", span=""];
m83_271 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="396-396"];
m83_229 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="338-338"];
m83_233 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="346-346"];
m83_234 [cluster="lambda expression", file="StateSteps.cs", label="x.Apply(It.IsAny<IRedisTransaction>(), It.IsAny<string>())", span="346-346"];
m83_272 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.RowCount, _stateChangingResults.Count)", span="398-398"];
m83_275 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.Rows[i][''Filter''], _stateChangingResults[i])", span="402-402"];
m83_273 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="var i = 0", span="400-400"];
m83_274 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i < table.RowCount", span="400-400"];
m83_276 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i++", span="400-400"];
m83_235 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="346-346"];
m83_146 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="295-295"];
m83_34 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="88-88"];
m83_37 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="89-89"];
m83_36 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="88-88"];
m83_39 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="89-89"];
m83_50 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="100-100"];
m83_53 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="100-100"];
m83_56 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="101-101"];
m83_52 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="100-100"];
m83_55 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="100-100"];
m83_58 [cluster="HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAJobInTheStateWithRegisteredDescriptor()", span="87-87"];
m83_103 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="222-229"];
m83_104 [cluster="lambda expression", file="StateSteps.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="224-224"];
m83_105 [cluster="lambda expression", file="StateSteps.cs", label="Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl))", span="225-228"];
m83_106 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="222-229"];
m83_125 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="192-198"];
m83_126 [cluster="lambda expression", file="StateSteps.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="194-194"];
m83_127 [cluster="lambda expression", file="StateSteps.cs", label="Assert.IsTrue(\r\n                        ttl.TotalSeconds > 0,\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl)", span="195-197"];
m83_128 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="192-198"];
m83_199 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Assert.AreEqual(state, job[''State''])", span="310-310"];
m83_200 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="307-307"];
m83_201 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="389-391"];
m83_203 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="390-390"];
m83_204 [cluster="lambda expression", file="StateSteps.cs", label="y.JobId == JobSteps.DefaultJobId", span="390-390"];
m83_205 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="390-390"];
m83_209 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Assert.IsNotNull(entry)", span="326-326"];
m83_210 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="328-328"];
m83_211 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Assert.IsNotNull(history, entry)", span="329-329"];
m83_251 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.Equal(table.RowCount, _stateAppliedResults.Count)", span="465-465"];
m83_252 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="var i = 0", span="467-467"];
m83_253 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i < table.RowCount", span="467-467"];
m83_148 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="295-295"];
m83_247 [cluster="Unk.GetAllItemsFromList", file="StateSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m83_147 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StateSteps.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="297-297"];
m83_149 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="301-301"];
m83_175 [cluster="Unk.SetContainsItem", file="StateSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m83_62 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="StateSteps.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m83_63 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StateSteps.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m83_249 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StateSteps.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<IRedisTransaction>(), It.IsAny<string>()),\r\n                Times.Never)", span="360-362"];
m83_108 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StateSteps.cs", label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="162-163"];
m83_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="237-237"];
m83_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Assert.AreEqual(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="239-239"];
m83_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="334-334"];
m83_31 [cluster="Unk.Returns", file="StateSteps.cs", label="Entry Unk.Returns", span=""];
m83_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateSteps.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m83_85 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="190-190"];
m83_77 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StateSteps.cs", label="_stateAppliedFilters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="114-114"];
m83_107 [cluster="Unk.GetTimeToLive", file="StateSteps.cs", label="Entry Unk.GetTimeToLive", span=""];
m83_70 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StateSteps.cs", label="_filters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="133-133"];
m83_9 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateSteps.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m83_76 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="173-173"];
m83_69 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", file="StateSteps.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.States.JobState)", span="15-15"];
m83_78 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.JobStorage, IRedisClient)", span="15-15"];
m83_181 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="347-347"];
m83_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Given(String.Format(''a '{0}' state'', state))", span="80-80"];
m83_46 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="96-96"];
m83_97 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="var stateMachine = new StateMachine(\r\n                Redis.Client, _descriptors, _stateChangingFilters, _stateAppliedFilters)", span="145-146"];
m83_248 [cluster="Unk.Select", file="StateSteps.cs", label="Entry Unk.Select", span=""];
m83_206 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="395-395"];
m83_207 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="322-322"];
m83_208 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StateSteps.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="324-325"];
m83_250 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="463-463"];
m83_193 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="301-301"];
m83_198 [cluster="Unk.Verify", file="StateSteps.cs", label="Entry Unk.Verify", span=""];
m83_131 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="268-268"];
m83_110 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="233-233"];
m83_111 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Assert.Equal(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="235-237"];
m83_112 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="233-233"];
m83_132 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="274-274"];
m83_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StateSteps.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="98-98"];
m83_278 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="407-407"];
m83_279 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Assert.AreEqual(0, _stateChangingResults.Count)", span="409-409"];
m83_280 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="407-407"];
m83_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m83_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="85-85"];
m83_27 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="_stateMocks.Add(state, mock)", span="92-92"];
m83_28 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="85-85"];
m83_194 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="303-303"];
m83_30 [cluster="Unk.Setup", file="StateSteps.cs", label="Entry Unk.Setup", span=""];
m83_14 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="67-67"];
m83_15 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="_state = new ScheduledState(''SomeReason'', DateTime.UtcNow.AddDays(1))", span="58-58"];
m83_16 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="56-56"];
m83_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="334-334"];
m83_115 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="241-241"];
m83_116 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Assert.Equal(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="243-243"];
m83_118 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="241-241"];
m83_182 [cluster="System.DateTime.AddSeconds(double)", file="StateSteps.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m83_142 [cluster="Unk.SortedSetContainsItem", file="StateSteps.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m83_134 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="274-274"];
m83_98 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StateSteps.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="147-147"];
m83_99 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StateSteps.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="215-220"];
m83_49 [cluster="Unk.ToDictionary", file="StateSteps.cs", label="Entry Unk.ToDictionary", span=""];
m83_180 [cluster="Unk.GetAllEntriesFromHash", file="StateSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m83_130 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Assert.Equal(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="270-270"];
m83_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="48-48"];
m83_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="_failedException = new InvalidOperationException(''Hello'')", span="45-45"];
m83_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="_state = new FailedState(''SomeReason'', _failedException)", span="46-46"];
m83_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="43-43"];
m83_47 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m83_40 [cluster="Unk.>", file="StateSteps.cs", label="Entry Unk.>", span=""];
m83_41 [cluster="Unk.GetData", file="StateSteps.cs", label="Entry Unk.GetData", span=""];
m83_3 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="StateSteps.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m83_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="42-42"];
m83_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="_state = new SucceededState(''Some reason'')", span="39-39"];
m83_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StateSteps.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="37-37"];
m83_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m83_129 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="268-268"];
m83_109 [cluster="Unk.True", file="StateSteps.cs", label="Entry Unk.True", span=""];
m83_88 [cluster="HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.WhenAfterIUnapplyIt()", span="128-128"];
m83_292 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="426-426"];
m83_254 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.Equal(table.Rows[i][''Method''], _stateAppliedResults[i])", span="469-469"];
m83_293 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.RowCount, _stateAppliedResults.Count)", span="428-428"];
m83_296 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="Assert.AreEqual(table.Rows[i][''Method''], _stateAppliedResults[i])", span="432-432"];
m83_294 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="var i = 0", span="430-430"];
m83_295 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i < table.RowCount", span="430-430"];
m83_297 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StateSteps.cs", label="i++", span="430-430"];
m83_299 [file="StateSteps.cs", label="HangFire.Tests.States.StateSteps", span=""];
m84_21 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", span="89-89"];
m84_22 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="String.IsNullOrWhiteSpace(name)", span="91-91"];
m84_24 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="95-97"];
m84_26 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="101-103"];
m84_23 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="throw new ArgumentNullException(''name'');", span="91-91"];
m84_25 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label=Exception, span="99-99"];
m84_27 [cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", span="89-89"];
m84_29 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m84_0 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32"];
m84_8 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=green, community=0, file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.Client.CreatingContext.SetJobParameter(string, object)", prediction=250, span="61-61"];
m84_3 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="x.Key", span="41-41"];
m84_7 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="41-41"];
m84_5 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="41-41"];
m84_2 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Entry lambda expression", span="41-41"];
m84_4 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="Exit lambda expression", span="41-41"];
m84_6 [cluster="lambda expression", file="StatisticsHistoryFilterAttribute.cs", label="x.Value", span="41-41"];
m84_1 [cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="StatisticsHistoryFilterAttribute.cs", label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32"];
m84_9 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="String.IsNullOrWhiteSpace(name)", span="63-63"];
m84_10 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="throw new ArgumentNullException(''name'');", span="63-63"];
m84_11 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="var serializedValue = JobHelper.ToJson(value)", span="65-65"];
m84_12 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="!_parameters.ContainsKey(name)", span="67-67"];
m84_13 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="_parameters.Add(name, serializedValue)", span="69-69"];
m84_14 [cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="_parameters[name] = serializedValue", span="73-73"];
m84_28 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StatisticsHistoryFilterAttribute.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m84_30 [cluster="string.Format(string, object)", file="StatisticsHistoryFilterAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m84_19 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m84_17 [cluster="System.Text.StringBuilder.ToString()", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m84_16 [cluster="System.Text.StringBuilder.Remove(int, int)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m84_18 [cluster="string.EndsWith(string, System.StringComparison)", file="StatisticsHistoryFilterAttribute.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m84_15 [cluster="Unk.Equals", file="StatisticsHistoryFilterAttribute.cs", label="Entry Unk.Equals", span=""];
m84_20 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StatisticsHistoryFilterAttribute.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m84_31 [file="StatisticsHistoryFilterAttribute.cs", label="Hangfire.Client.CreatingContext", span=""];
m85_4 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="SucceededJobDto.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
m85_5 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", file="SucceededJobDto.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory)", span="53-53"];
m85_29 [cluster="Hangfire.JobStorage.GetConnection()", file="SucceededJobDto.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m85_33 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="100-100"];
m85_34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="jobId == null", span="102-102"];
m85_36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="state == null", span="103-103"];
m85_40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="return stateMachine.ChangeState(jobId, state, fromState != null ? new[] { fromState } : null);", span="108-108"];
m85_35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''jobId'');", span="102-102"];
m85_37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''state'');", span="103-103"];
m85_38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="var connection = _storage.GetConnection()", span="105-105"];
m85_39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="var stateMachine = _stateMachineFactory.Create(connection)", span="107-107"];
m85_41 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SucceededJobDto.cs", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="100-100"];
m85_0 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="SucceededJobDto.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m85_1 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="SucceededJobDto.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38"];
m85_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SucceededJobDto.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="24-24"];
m85_6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
m85_7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="storage == null", span="70-70"];
m85_9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="stateMachineFactory == null", span="71-71"];
m85_11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="process == null", span="72-72"];
m85_13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="_storage = storage", span="74-74"];
m85_14 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="_stateMachineFactory = stateMachineFactory", span="75-75"];
m85_15 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="_process = process", span="76-76"];
m85_8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''storage'');", span="70-70"];
m85_10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="71-71"];
m85_12 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''process'');", span="72-72"];
m85_16 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", file="SucceededJobDto.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, Hangfire.Client.IJobCreationProcess)", span="65-65"];
m85_32 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="SucceededJobDto.cs", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m85_31 [cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", file="SucceededJobDto.cs", label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext)", span="28-28"];
m85_30 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachineFactory, Hangfire.Common.Job, Hangfire.States.IState)", span="43-43"];
m85_42 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SucceededJobDto.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m85_18 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m85_19 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="job == null", span="82-82"];
m85_21 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="state == null", span="83-83"];
m85_24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="var context = new CreateContext(connection, _stateMachineFactory, job, state)", span="89-89"];
m85_20 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''job'');", span="82-82"];
m85_22 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="throw new ArgumentNullException(''state'');", span="83-83"];
m85_23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="var connection = _storage.GetConnection()", span="87-87"];
m85_25 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="return _process.Run(context);", span="90-90"];
m85_26 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label=Exception, span="93-93"];
m85_27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95"];
m85_28 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SucceededJobDto.cs", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80"];
m85_2 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="SucceededJobDto.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m85_3 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="SucceededJobDto.cs", label="Exit Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", span="48-48"];
m85_44 [file="SucceededJobDto.cs", label="Hangfire.BackgroundJobClient", span=""];
m86_59 [cluster="HangFire.Web.RazorPage.Write(object)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m86_50 [cluster="Unk.TryParse", file="SucceededJobs1.generated.cs", label="Entry Unk.TryParse", span=""];
m86_48 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m86_62 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="95-95"];
m86_64 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34"];
m86_61 [cluster="HangFire.Common.JobMethod.GetQueue()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Common.JobMethod.GetQueue()", span="107-107"];
m86_51 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="SucceededJobs1.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43"];
m86_49 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m86_56 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m86_55 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="17-17"];
m86_58 [cluster="Unk.Write", file="SucceededJobs1.generated.cs", label="Entry Unk.Write", span=""];
m86_63 [cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45"];
m86_54 [cluster="HttpRequestBase.LinkTo(string)", file="SucceededJobs1.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m86_0 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.SucceededJobs.Execute()", span="59-59"];
m86_1 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="63-63"];
m86_2 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Layout = new LayoutPage { Title = ''Succeeded Jobs'' }", span="76-76"];
m86_3 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int from, perPage", span="78-78"];
m86_4 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="80-80"];
m86_5 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="81-81"];
m86_9 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="pager = new Pager(from, perPage, monitor.SucceededListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/succeeded'')\r\n        }", span="88-91"];
m86_6 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Pager pager", span="83-83"];
m86_7 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="JobList<SucceededJobDto> succeededJobs", span="84-84"];
m86_8 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="86-86"];
m86_10 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="succeededJobs = monitor\r\n            .SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="93-94"];
m86_12 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="pager.TotalPageCount == 0", span="106-106"];
m86_14 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="127-127"];
m86_46 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="336-336"];
m86_11 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n'')", span="101-101"];
m86_16 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label=succeededJobs, span="147-147"];
m86_13 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No succeeded jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="112-113"];
m86_15 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Job type</th>\r\n                <th>Succeeded</th>\r'' +\r\n''\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="140-142"];
m86_17 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                <tr class=\'''')", span="153-153"];
m86_45 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="324-324"];
m86_18 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Value != null && !job.Value.InSucceededState ? ''obsolete-data'' : null)", span="158-158"];
m86_19 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="163-163"];
m86_20 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="168-168"];
m86_21 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="173-173"];
m86_22 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="178-178"];
m86_23 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="183-183"];
m86_24 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value != null && !job.Value.InSucceededState", span="188-188"];
m86_25 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="194-195"];
m86_26 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                    </td>\r\n\r\n'')", span="205-205"];
m86_27 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value == null", span="210-210"];
m86_28 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                        <td colspan=\''3\''><em>Job was expired.</em>\r\n              '' +\r\n''          </td>\r\n'')", span="216-217"];
m86_29 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                        <td>\r\n                            '')", span="229-229"];
m86_31 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                            <span title=\'''')", span="239-239"];
m86_33 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="249-249"];
m86_35 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''    \r\n                            </span>\r\n                        </td>\r\n'')", span="259-259"];
m86_37 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="job.Value.SucceededAt.HasValue", span="268-268"];
m86_36 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                        <td>\r\n'')", span="263-263"];
m86_38 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                                <span  data-moment=\'''')", span="274-274"];
m86_43 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                        </td>\r\n'')", span="304-304"];
m86_39 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.SucceededAt.Value))", span="279-279"];
m86_40 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="284-284"];
m86_41 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Write(job.Value.SucceededAt)", span="289-289"];
m86_42 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="294-294"];
m86_44 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="WriteLiteral(''                </tr>\r\n'')", span="314-314"];
m86_47 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs1.generated.cs", label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="59-59"];
m86_66 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m86_57 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m86_52 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m86_60 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SucceededJobs1.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55"];
m86_53 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="SucceededJobs1.generated.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="26-26"];
m86_67 [file="SucceededJobs1.generated.cs", label="HangFire.Web.Pages.SucceededJobs", span=""];
m87_3 [cluster="HangFire.States.SucceededState.Serialize()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Serialize()", span="45-45"];
m87_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="28-28"];
m87_1 [cluster="HangFire.States.SucceededState.SucceededState()", color=green, community=0, file="SucceededState.cs", label="SucceededAt = DateTime.UtcNow", prediction=251, span="30-30"];
m87_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="28-28"];
m87_9 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="46-46"];
m87_10 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="49-49"];
m87_11 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="46-46"];
m87_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19"];
m87_12 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="21-21"];
m87_5 [cluster="HangFire.States.SucceededState.Serialize()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Serialize()", span="45-45"];
m87_6 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="43-43"];
m87_7 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="40-40"];
m87_4 [cluster="HangFire.States.SucceededState.Serialize()", color=green, community=0, file="SucceededState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", prediction=252, span="47-50"];
m87_16 [file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m88_97 [cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="SucceededState.feature.cs", label="Entry Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="42-42"];
m88_129 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151"];
m88_130 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="153-153"];
m88_131 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="SucceededState.feature.cs", label="Assert.Equal(JobId, stateMachine.CreateJob(_job, _parameters, _state.Object))", span="154-154"];
m88_132 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="151-151"];
m88_220 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275"];
m88_221 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="_process.Setup(x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(new Exception())", span="278-279"];
m88_222 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="281-281"];
m88_223 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="284-284"];
m88_224 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false))", span="287-287"];
m88_225 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="Assert.False(result)", span="289-289"];
m88_226 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="275-275"];
m88_0 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25"];
m88_1 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_process = new Mock<IStateChangeProcess>()", span="27-27"];
m88_17 [cluster="Mock<IState>.cstr", file="SucceededState.feature.cs", label="Entry Mock<IState>.cstr", span=""];
m88_58 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68"];
m88_59 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="70-71"];
m88_60 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="73-73"];
m88_61 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68"];
m88_253 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319"];
m88_254 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="322-328"];
m88_255 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="330-330"];
m88_256 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="332-332"];
m88_257 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="335-335"];
m88_258 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true))", span="338-341"];
m88_259 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="Assert.True(result)", span="343-343"];
m88_260 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="319-319"];
m88_71 [cluster="Unk.Same", file="SucceededState.feature.cs", label="Entry Unk.Same", span=""];
m88_21 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="SucceededState.feature.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m88_43 [cluster="Unk.GetJobData", file="SucceededState.feature.cs", label="Entry Unk.GetJobData", span=""];
m88_53 [cluster="Unk.Equal", file="SucceededState.feature.cs", label="Entry Unk.Equal", span=""];
m88_227 [cluster="System.Exception.Exception()", file="SucceededState.feature.cs", label="Entry System.Exception.Exception()", span="0-0"];
m88_2 [cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(Queue<Action<SqlConnection>>, string, string)", file="SucceededState.feature.cs", label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(Queue<Action<SqlConnection>>, string, string)", span="24-24"];
m88_3 [cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(Queue<Action<SqlConnection>>, string, string)", file="SucceededState.feature.cs", label="Exit HangFire.SqlServer.IPersistentJobQueue.Enqueue(Queue<Action<SqlConnection>>, string, string)", span="24-24"];
m88_4 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_state = new Mock<IState>()", span="31-31"];
m88_5 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="32-32"];
m88_6 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_connection = new Mock<IStorageConnection>()", span="34-34"];
m88_7 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="35-35"];
m88_8 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="37-37"];
m88_9 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="39-43"];
m88_10 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = _job\r\n                })", span="45-50"];
m88_11 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_distributedLock = new Mock<IDisposable>()", span="52-52"];
m88_12 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="_connection\r\n                .Setup(x => x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>()))\r\n                .Returns(_distributedLock.Object)", span="53-55"];
m88_13 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="25-25"];
m88_301 [cluster="Unk.ElectState", file="SucceededState.feature.cs", label="Entry Unk.ElectState", span=""];
m88_47 [cluster="string.Format(string, object)", file="SucceededState.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m88_243 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SucceededState.feature.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m88_151 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180"];
m88_152 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="182-182"];
m88_153 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.ChangeState(JobId, _state.Object, new string[0]))", span="184-185"];
m88_154 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="SucceededState.feature.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="187-187"];
m88_155 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="180-180"];
m88_38 [cluster="Unk.>", file="SucceededState.feature.cs", label="Entry Unk.>", span=""];
m88_39 [cluster="Unk.CreateExpiredJob", file="SucceededState.feature.cs", label="Entry Unk.CreateExpiredJob", span=""];
m88_273 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347"];
m88_274 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="var machine = CreateStateMachine()", span="350-350"];
m88_275 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="353-353"];
m88_276 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true))", span="356-360"];
m88_277 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="_transaction.Verify(x => x.Commit())", span="362-362"];
m88_278 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="Assert.True(result)", span="364-364"];
m88_279 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="347-347"];
m88_182 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="220-220"];
m88_183 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="223-223"];
m88_184 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="SucceededState.feature.cs", label="stateMachine.ChangeState(JobId, _state.Object, null)", span="226-226"];
m88_185 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true))", span="229-232"];
m88_186 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="220-220"];
m88_57 [cluster="StateMachine.cstr", file="SucceededState.feature.cs", label="Entry StateMachine.cstr", span=""];
m88_201 [cluster="Unk.False", file="SucceededState.feature.cs", label="Entry Unk.False", span=""];
m88_89 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="109-109"];
m88_91 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateJob(_job, _parameters, null))", prediction=253, span="113-114"];
m88_90 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="111-111"];
m88_92 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''state'', exception.ParamName)", span="116-116"];
m88_93 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="109-109"];
m88_49 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59"];
m88_50 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _process.Object))", span="61-62"];
m88_51 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="64-64"];
m88_52 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59"];
m88_117 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="137-137"];
m88_118 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="139-139"];
m88_119 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="SucceededState.feature.cs", label="stateMachine.CreateJob(_job, _parameters, _state.Object)", span="141-141"];
m88_120 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true))", span="143-147"];
m88_121 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="137-137"];
m88_65 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77"];
m88_66 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="79-79"];
m88_68 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="SucceededState.feature.cs", label="Assert.Same(_process.Object, result)", span="83-83"];
m88_67 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="SucceededState.feature.cs", label="var result = stateMachine.Process", span="81-81"];
m88_69 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Process_ReturnsTheGiven_StateChangingProcess()", span="77-77"];
m88_27 [cluster="System.Console.WriteLine()", file="SucceededState.feature.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m88_159 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="191-191"];
m88_160 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="193-193"];
m88_161 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="SucceededState.feature.cs", label="stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="195-195"];
m88_162 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="SucceededState.feature.cs", label="_distributedLock.Verify(x => x.Dispose())", span="197-197"];
m88_163 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="191-191"];
m88_14 [cluster="Mock<IStateChangeProcess>.cstr", file="SucceededState.feature.cs", label="Entry Mock<IStateChangeProcess>.cstr", span=""];
m88_141 [cluster="Unk.ChangeState", file="SucceededState.feature.cs", label="Entry Unk.ChangeState", span=""];
m88_150 [cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SucceededState.feature.cs", label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="64-64"];
m88_319 [cluster="System.NotSupportedException.NotSupportedException()", file="SucceededState.feature.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m88_70 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412"];
m88_329 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="SucceededState.feature.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _process.Object);", span="414-416"];
m88_330 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="412-412"];
m88_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m88_142 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169"];
m88_143 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="171-171"];
m88_144 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(JobId, null, FromOldState))", span="173-174"];
m88_145 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="176-176"];
m88_146 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="169-169"];
m88_18 [cluster="Unk.Setup", file="SucceededState.feature.cs", label="Entry Unk.Setup", span=""];
m88_311 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389"];
m88_313 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="_process.Setup(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(exception)", span="394-396"];
m88_314 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="var machine = CreateStateMachine()", span="398-398"];
m88_315 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="401-401"];
m88_316 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false))", span="404-407"];
m88_312 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="var exception = new NotSupportedException()", span="392-392"];
m88_317 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="Assert.False(result)", span="409-409"];
m88_318 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="389-389"];
m88_228 [cluster="Unk.Throws", file="SucceededState.feature.cs", label="Entry Unk.Throws", span=""];
m88_167 [cluster="Unk.Dispose", file="SucceededState.feature.cs", label="Entry Unk.Dispose", span=""];
m88_98 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120"];
m88_100 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="_parameters.Add(''Name'', ''Value'')", span="123-123"];
m88_101 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="125-125"];
m88_102 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="stateMachine.CreateJob(job, _parameters, _state.Object)", span="127-127"];
m88_103 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="129-133"];
m88_99 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="122-122"];
m88_104 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="120-120"];
m88_211 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257"];
m88_212 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="260-260"];
m88_213 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="SucceededState.feature.cs", label="var result = stateMachine.ChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="263-264"];
m88_215 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="SucceededState.feature.cs", label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="269-271"];
m88_214 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="SucceededState.feature.cs", label="Assert.False(result)", span="267-267"];
m88_216 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="257-257"];
m88_81 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="98-98"];
m88_82 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m88_83 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(_job, null, _state.Object))", span="102-103"];
m88_84 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="105-105"];
m88_85 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="98-98"];
m88_48 [cluster="Unk.AcquireDistributedLock", file="SucceededState.feature.cs", label="Entry Unk.AcquireDistributedLock", span=""];
m88_72 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87"];
m88_74 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(null, _parameters, _state.Object))", prediction=254, span="91-92"];
m88_73 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="89-89"];
m88_75 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''job'', exception.ParamName)", span="94-94"];
m88_76 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="87-87"];
m88_23 [cluster="Mock<IDisposable>.cstr", file="SucceededState.feature.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m88_168 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="201-201"];
m88_169 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="204-204"];
m88_170 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="SucceededState.feature.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="207-207"];
m88_171 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true))", span="210-214"];
m88_172 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="SucceededState.feature.cs", label="Assert.True(result)", span="216-216"];
m88_173 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="201-201"];
m88_107 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="122-122"];
m88_77 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="92-92"];
m88_94 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="114-114"];
m88_55 [cluster="lambda expression", file="SucceededState.feature.cs", label="new StateMachine(null, _process.Object)", span="62-62"];
m88_63 [cluster="lambda expression", file="SucceededState.feature.cs", label="new StateMachine(_connection.Object, null)", span="71-71"];
m88_78 [cluster="lambda expression", file="SucceededState.feature.cs", label="stateMachine.CreateJob(null, _parameters, _state.Object)", span="92-92"];
m88_87 [cluster="lambda expression", file="SucceededState.feature.cs", label="stateMachine.CreateJob(_job, null, _state.Object)", span="103-103"];
m88_95 [cluster="lambda expression", file="SucceededState.feature.cs", label="stateMachine.CreateJob(_job, _parameters, null)", span="114-114"];
m88_123 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true)", span="143-147"];
m88_127 [cluster="lambda expression", file="SucceededState.feature.cs", label="sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null", span="145-146"];
m88_139 [cluster="lambda expression", file="SucceededState.feature.cs", label="stateMachine.ChangeState(null, _state.Object, FromOldState)", span="163-163"];
m88_157 [cluster="lambda expression", file="SucceededState.feature.cs", label="stateMachine.ChangeState(JobId, _state.Object, new string[0])", span="185-185"];
m88_176 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true)", span="210-214"];
m88_179 [cluster="lambda expression", file="SucceededState.feature.cs", label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName", span="212-213"];
m88_188 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true)", span="229-232"];
m88_191 [cluster="lambda expression", file="SucceededState.feature.cs", label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName", span="231-231"];
m88_233 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false)", span="287-287"];
m88_248 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true)", span="310-313"];
m88_268 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true)", span="338-341"];
m88_271 [cluster="lambda expression", file="SucceededState.feature.cs", label="ctx.NewState == _state.Object", span="340-340"];
m88_281 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true)", span="356-360"];
m88_284 [cluster="lambda expression", file="SucceededState.feature.cs", label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId", span="358-359"];
m88_299 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ElectState(_connection.Object, It.IsAny<ElectStateContext>())", span="373-373"];
m88_306 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true)", span="382-385"];
m88_324 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false)", span="404-407"];
m88_36 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="39-43"];
m88_45 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="54-54"];
m88_112 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="129-133"];
m88_203 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.GetJobData(It.IsAny<string>())", span="239-239"];
m88_209 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="252-252"];
m88_218 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="270-270"];
m88_230 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="278-278"];
m88_321 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="395-395"];
m88_79 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="92-92"];
m88_96 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="114-114"];
m88_24 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="29-29"];
m88_28 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="32-32"];
m88_31 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="37-37"];
m88_35 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="39-43"];
m88_40 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="45-45"];
m88_44 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="54-54"];
m88_54 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="62-62"];
m88_56 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="62-62"];
m88_62 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="71-71"];
m88_64 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="71-71"];
m88_86 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="103-103"];
m88_88 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="103-103"];
m88_111 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="129-133"];
m88_122 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="143-147"];
m88_124 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="143-147"];
m88_126 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="145-146"];
m88_128 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="145-146"];
m88_138 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="163-163"];
m88_140 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="163-163"];
m88_148 [cluster="lambda expression", file="SucceededState.feature.cs", label="stateMachine.ChangeState(JobId, null, FromOldState)", span="174-174"];
m88_156 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="185-185"];
m88_158 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="185-185"];
m88_164 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="197-197"];
m88_175 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="210-214"];
m88_177 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="210-214"];
m88_178 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="212-213"];
m88_180 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="212-213"];
m88_187 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="229-232"];
m88_189 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="229-232"];
m88_190 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="231-231"];
m88_192 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="231-231"];
m88_202 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="239-239"];
m88_205 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="249-249"];
m88_208 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="252-252"];
m88_217 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="270-270"];
m88_229 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="278-278"];
m88_232 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="287-287"];
m88_234 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="287-287"];
m88_244 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="296-296"];
m88_247 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="310-313"];
m88_249 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="310-313"];
m88_250 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="312-312"];
m88_261 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="322-322"];
m88_264 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="330-330"];
m88_267 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="338-341"];
m88_269 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="338-341"];
m88_270 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="340-340"];
m88_272 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="340-340"];
m88_280 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="356-360"];
m88_282 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="356-360"];
m88_283 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="358-359"];
m88_285 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="358-359"];
m88_286 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="362-362"];
m88_298 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="373-373"];
m88_302 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="374-374"];
m88_300 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="373-373"];
m88_305 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="382-385"];
m88_307 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="382-385"];
m88_308 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="384-384"];
m88_320 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="395-395"];
m88_323 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="404-407"];
m88_325 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="404-407"];
m88_326 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="406-406"];
m88_37 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="39-43"];
m88_46 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="54-54"];
m88_113 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="129-133"];
m88_114 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="131-131"];
m88_147 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="174-174"];
m88_204 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="239-239"];
m88_210 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="252-252"];
m88_219 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="270-270"];
m88_231 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="278-278"];
m88_322 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="395-395"];
m88_26 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="29-29"];
m88_25 [cluster="lambda expression", file="SucceededState.feature.cs", label="Console.WriteLine()", span="29-29"];
m88_30 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="32-32"];
m88_29 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Name", span="32-32"];
m88_33 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="37-37"];
m88_32 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.CreateWriteTransaction()", span="37-37"];
m88_42 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="45-45"];
m88_41 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.GetJobData(JobId)", span="45-45"];
m88_149 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="174-174"];
m88_166 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="197-197"];
m88_165 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Dispose()", span="197-197"];
m88_207 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="249-249"];
m88_206 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.GetJobData(JobId)", span="249-249"];
m88_246 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="296-296"];
m88_245 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.GetJobData(JobId)", span="296-296"];
m88_252 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="312-312"];
m88_251 [cluster="lambda expression", file="SucceededState.feature.cs", label="ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState", span="312-312"];
m88_263 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="322-322"];
m88_262 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.GetJobData(JobId)", span="322-322"];
m88_266 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="330-330"];
m88_265 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.IgnoreJobLoadException", span="330-330"];
m88_288 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="362-362"];
m88_287 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Commit()", span="362-362"];
m88_303 [cluster="lambda expression", file="SucceededState.feature.cs", label="context.CandidateState = anotherState.Object", span="374-374"];
m88_309 [cluster="lambda expression", file="SucceededState.feature.cs", label="ctx.NewState == anotherState.Object", span="384-384"];
m88_304 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="374-374"];
m88_310 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="384-384"];
m88_327 [cluster="lambda expression", file="SucceededState.feature.cs", label="ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception", span="406-406"];
m88_328 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="406-406"];
m88_116 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="131-131"];
m88_115 [cluster="lambda expression", file="SucceededState.feature.cs", label="d[''Name''] == ''Value''", span="131-131"];
m88_108 [cluster="lambda expression", file="SucceededState.feature.cs", label="Console.WriteLine(''SomeString'')", span="122-122"];
m88_109 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="122-122"];
m88_290 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368"];
m88_292 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="_process.Setup(x => x.ElectState(_connection.Object, It.IsAny<ElectStateContext>()))\r\n                .Callback((IStorageConnection connection, ElectStateContext context) => context.CandidateState = anotherState.Object)", span="373-374"];
m88_293 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="var machine = CreateStateMachine()", span="376-376"];
m88_294 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="379-379"];
m88_295 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true))", span="382-385"];
m88_291 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="var anotherState = new Mock<IState>()", span="371-371"];
m88_296 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="368-368"];
m88_22 [cluster="Hangfire.Storage.JobData.JobData()", file="SucceededState.feature.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m88_106 [cluster="Unk.Verify", file="SucceededState.feature.cs", label="Entry Unk.Verify", span=""];
m88_235 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293"];
m88_236 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="296-302"];
m88_237 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="304-304"];
m88_238 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="307-307"];
m88_239 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true))", span="310-313"];
m88_240 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="Assert.False(result)", span="315-315"];
m88_241 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="293-293"];
m88_289 [cluster="Unk.Commit", file="SucceededState.feature.cs", label="Entry Unk.Commit", span=""];
m88_242 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33"];
m88_181 [cluster="Unk.Equals", file="SucceededState.feature.cs", label="Entry Unk.Equals", span=""];
m88_174 [cluster="Unk.True", file="SucceededState.feature.cs", label="Entry Unk.True", span=""];
m88_193 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236"];
m88_194 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="239-240"];
m88_195 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="242-242"];
m88_196 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="245-245"];
m88_198 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="_connection.Verify(x => x.GetJobData(JobId))", span="249-249"];
m88_199 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="251-253"];
m88_197 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="Assert.False(result)", span="248-248"];
m88_200 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="236-236"];
m88_297 [cluster="Unk.Callback", file="SucceededState.feature.cs", label="Entry Unk.Callback", span=""];
m88_34 [cluster="Unk.CreateWriteTransaction", file="SucceededState.feature.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m88_19 [cluster="Unk.Returns", file="SucceededState.feature.cs", label="Entry Unk.Returns", span=""];
m88_80 [cluster="Unk.CreateJob", file="SucceededState.feature.cs", label="Entry Unk.CreateJob", span=""];
m88_110 [cluster="System.Console.WriteLine(string)", file="SucceededState.feature.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m88_20 [cluster="Mock<IStorageConnection>.cstr", file="SucceededState.feature.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m88_133 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="158-158"];
m88_134 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="SucceededState.feature.cs", label="var stateMachine = CreateStateMachine()", span="160-160"];
m88_135 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(null, _state.Object, FromOldState))", span="162-163"];
m88_136 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="165-165"];
m88_137 [cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="158-158"];
m88_125 [cluster="Unk.ApplyState", file="SucceededState.feature.cs", label="Entry Unk.ApplyState", span=""];
m88_15 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148"];
m88_331 [file="SucceededState.feature.cs", label="Hangfire.Core.Tests.States.StateMachineFacts", span=""];
m88_332 [file="SucceededState.feature.cs", label=stateMachine, span=""];
m88_333 [file="SucceededState.feature.cs", label=stateMachine, span=""];
m88_334 [file="SucceededState.feature.cs", label=stateMachine, span=""];
m88_336 [file="SucceededState.feature.cs", label=stateMachine, span=""];
m88_338 [file="SucceededState.feature.cs", label=stateMachine, span=""];
m88_339 [file="SucceededState.feature.cs", label=anotherState, span=""];
m88_340 [file="SucceededState.feature.cs", label=exception, span=""];
m88_335 [file="SucceededState.feature.cs", label=job, span=""];
m88_337 [file="SucceededState.feature.cs", label=stateMachine, span=""];
m89_6 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m89_7 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="var state = new SucceededState()", span="18-18"];
m89_8 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", color=green, community=0, file="SucceededStateFacts.cs", label="DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', ''<UtcNow timestamp>'' },\r\n                },\r\n                state.Serialize())", prediction=255, span="20-25"];
m89_10 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.GetStateData_ReturnsCorrectData()", span="16-16"];
m89_11 [cluster="HangFire.States.SucceededState.Serialize()", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.Serialize()", span="45-45"];
m89_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="29-29"];
m89_17 [cluster="Unk.True", file="SucceededStateFacts.cs", label="Entry Unk.True", span=""];
m89_5 [cluster="Unk.Equal", file="SucceededStateFacts.cs", label="Entry Unk.Equal", span=""];
m89_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m89_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="var state = new SucceededState()", span="11-11"];
m89_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", color=green, community=0, file="SucceededStateFacts.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", prediction=256, span="12-12"];
m89_3 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m89_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=green, community=0, file="SucceededStateFacts.cs", label="var state = new SucceededState()", prediction=257, span="31-31"];
m89_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=green, community=0, file="SucceededStateFacts.cs", label="Assert.True(state.ExpireJobOnApply)", prediction=258, span="32-32"];
m89_16 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="29-29"];
m89_4 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="24-24"];
m90_9 [cluster="System.TimeSpan.FromSeconds(double)", file="SucceededStateHandler.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m90_11 [cluster="System.TimeSpan.FromHours(double)", file="SucceededStateHandler.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m90_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m90_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="TransactionIsolationLevel = null", span="27-27"];
m90_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28"];
m90_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29"];
m90_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30"];
m90_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31"];
m90_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="PrepareSchemaIfNecessary = true", span="32-32"];
m90_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="DashboardJobListLimit = 50000", span="33-33"];
m90_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SucceededStateHandler.cs", label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m90_12 [file="SucceededStateHandler.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m91_39 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="54-54"];
m91_40 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SucceededStateHandlerFacts.cs", label="var processingJob = CreateProcessingJob()", span="56-56"];
m91_43 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="54-54"];
m91_19 [cluster="Unk.>", file="SucceededStateHandlerFacts.cs", label="Entry Unk.>", span=""];
m91_32 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="45-45"];
m91_33 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SucceededStateHandlerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(_redisConnection, JobId, null))", span="47-48"];
m91_34 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="50-50"];
m91_35 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="45-45"];
m91_25 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="36-36"];
m91_26 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SucceededStateHandlerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(_redisConnection, null, Queue))", span="38-39"];
m91_27 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="41-41"];
m91_28 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="36-36"];
m91_44 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", span="72-72"];
m91_56 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", file="SucceededStateHandlerFacts.cs", label="return new RedisProcessingJob(_redisConnection, JobId, Queue);", span="74-74"];
m91_57 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", span="72-72"];
m91_51 [cluster="Unk.Verify", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Verify", span=""];
m91_15 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27"];
m91_17 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededStateHandlerFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="32-32"];
m91_18 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27"];
m91_8 [cluster="Unk.Setup", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Setup", span=""];
m91_50 [cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40"];
m91_45 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", span="63-63"];
m91_46 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="SucceededStateHandlerFacts.cs", label="var processingJob = CreateProcessingJob()", span="65-65"];
m91_47 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="SucceededStateHandlerFacts.cs", label="processingJob.Dispose()", span="67-67"];
m91_48 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="SucceededStateHandlerFacts.cs", label="_transaction.Verify(x => x.Commit())", span="69-69"];
m91_49 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", span="63-63"];
m91_20 [cluster="Unk.Equal", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Equal", span=""];
m91_9 [cluster="Unk.Returns", file="SucceededStateHandlerFacts.cs", label="Entry Unk.Returns", span=""];
m91_52 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="69-69"];
m91_11 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="21-21"];
m91_13 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="21-21"];
m91_21 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="30-30"];
m91_23 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="30-30"];
m91_29 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="39-39"];
m91_30 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="new RedisProcessingJob(_redisConnection, null, Queue)", span="39-39"];
m91_31 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="39-39"];
m91_36 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Entry lambda expression", span="48-48"];
m91_37 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="new RedisProcessingJob(_redisConnection, JobId, null)", span="48-48"];
m91_38 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="48-48"];
m91_53 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="x.Commit()", span="69-69"];
m91_54 [cluster="lambda expression", file="SucceededStateHandlerFacts.cs", label="Exit lambda expression", span="69-69"];
m91_24 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m91_6 [cluster="Mock<IRedisClient>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IRedisClient>.cstr", span=""];
m91_10 [cluster="RedisConnection.cstr", file="SucceededStateHandlerFacts.cs", label="Entry RedisConnection.cstr", span=""];
m91_14 [cluster="Unk.CreateTransaction", file="SucceededStateHandlerFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m91_7 [cluster="Mock<IRedisTransaction>.cstr", file="SucceededStateHandlerFacts.cs", label="Entry Mock<IRedisTransaction>.cstr", span=""];
m91_0 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="SucceededStateHandlerFacts.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", span="16-16"];
m91_1 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="SucceededStateHandlerFacts.cs", label="_redis = new Mock<IRedisClient>()", span="18-18"];
m91_2 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="SucceededStateHandlerFacts.cs", label="_transaction = new Mock<IRedisTransaction>()", span="19-19"];
m91_5 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="SucceededStateHandlerFacts.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", span="16-16"];
m91_58 [file="SucceededStateHandlerFacts.cs", label="HangFire.Redis.Tests.RedisProcessingJobFacts", span=""];
m92_11 [cluster="Unk.NotNull", file="TestStateChangingFilter.cs", label="Entry Unk.NotNull", span=""];
m92_5 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="Entry HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21"];
m92_6 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="Assert.NotNull(context)", span="23-23"];
m92_9 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="context.CandidateState = _changeState", span="29-29"];
m92_7 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="_results.Add(_name)", span="25-25"];
m92_8 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="_changeState != null", span="27-27"];
m92_10 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="Exit HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21"];
m92_0 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m92_1 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="_name = name", span="16-16"];
m92_2 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="_results = results", span="17-17"];
m92_3 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="_changeState = changeState", span="18-18"];
m92_4 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="Exit HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m92_12 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TestStateChangingFilter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m92_13 [file="TestStateChangingFilter.cs", label="HangFire.Tests.TestStateChangingFilter", span=""];
m93_39 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="54-54"];
m93_40 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="Worker.cs", label="var processingJob = CreateProcessingJob()", span="56-56"];
m93_41 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="Worker.cs", label="Assert.Equal(JobId, processingJob.JobId)", span="58-58"];
m93_42 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="Worker.cs", label="Assert.Equal(Queue, processingJob.Queue)", span="59-59"];
m93_43 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="54-54"];
m93_19 [cluster="Unk.>", file="Worker.cs", label="Entry Unk.>", span=""];
m93_32 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="45-45"];
m93_33 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="Worker.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(_redisConnection, JobId, null))", span="47-48"];
m93_34 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="Worker.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="50-50"];
m93_35 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="45-45"];
m93_25 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="36-36"];
m93_26 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="Worker.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(_redisConnection, null, Queue))", span="38-39"];
m93_27 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="Worker.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="41-41"];
m93_28 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="36-36"];
m93_44 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", span="72-72"];
m93_56 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", file="Worker.cs", label="return new RedisProcessingJob(_redisConnection, JobId, Queue);", span="74-74"];
m93_57 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.CreateProcessingJob()", span="72-72"];
m93_51 [cluster="Unk.Verify", file="Worker.cs", label="Entry Unk.Verify", span=""];
m93_15 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27"];
m93_16 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="Worker.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisProcessingJob(null, JobId, Queue))", span="29-30"];
m93_17 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="Worker.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="32-32"];
m93_18 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="27-27"];
m93_8 [cluster="Unk.Setup", file="Worker.cs", label="Entry Unk.Setup", span=""];
m93_50 [cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="Worker.cs", label="Entry HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40"];
m93_45 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", span="63-63"];
m93_46 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="Worker.cs", label="var processingJob = CreateProcessingJob()", span="65-65"];
m93_47 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="Worker.cs", label="processingJob.Dispose()", span="67-67"];
m93_48 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="Worker.cs", label="_transaction.Verify(x => x.Commit())", span="69-69"];
m93_49 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.Dispose_CommitsTransaction()", span="63-63"];
m93_20 [cluster="Unk.Equal", file="Worker.cs", label="Entry Unk.Equal", span=""];
m93_9 [cluster="Unk.Returns", file="Worker.cs", label="Entry Unk.Returns", span=""];
m93_52 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="69-69"];
m93_11 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="21-21"];
m93_12 [cluster="lambda expression", file="Worker.cs", label="x.CreateTransaction()", span="21-21"];
m93_13 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="21-21"];
m93_21 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="30-30"];
m93_22 [cluster="lambda expression", file="Worker.cs", label="new RedisProcessingJob(null, JobId, Queue)", span="30-30"];
m93_23 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="30-30"];
m93_29 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="39-39"];
m93_30 [cluster="lambda expression", file="Worker.cs", label="new RedisProcessingJob(_redisConnection, null, Queue)", span="39-39"];
m93_31 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="39-39"];
m93_36 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="48-48"];
m93_37 [cluster="lambda expression", file="Worker.cs", label="new RedisProcessingJob(_redisConnection, JobId, null)", span="48-48"];
m93_38 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="48-48"];
m93_53 [cluster="lambda expression", file="Worker.cs", label="x.Commit()", span="69-69"];
m93_54 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="69-69"];
m93_24 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="Worker.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m93_6 [cluster="Mock<IRedisClient>.cstr", file="Worker.cs", label="Entry Mock<IRedisClient>.cstr", span=""];
m93_10 [cluster="RedisConnection.cstr", file="Worker.cs", label="Entry RedisConnection.cstr", span=""];
m93_14 [cluster="Unk.CreateTransaction", file="Worker.cs", label="Entry Unk.CreateTransaction", span=""];
m93_7 [cluster="Mock<IRedisTransaction>.cstr", file="Worker.cs", label="Entry Mock<IRedisTransaction>.cstr", span=""];
m93_0 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="Worker.cs", label="Entry HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", span="16-16"];
m93_1 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="Worker.cs", label="_redis = new Mock<IRedisClient>()", span="18-18"];
m93_2 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="Worker.cs", label="_transaction = new Mock<IRedisTransaction>()", span="19-19"];
m93_3 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="Worker.cs", label="_redis.Setup(x => x.CreateTransaction()).Returns(_transaction.Object)", span="21-21"];
m93_4 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="Worker.cs", label="_redisConnection = new RedisConnection(_redis.Object)", span="23-23"];
m93_5 [cluster="HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", file="Worker.cs", label="Exit HangFire.Redis.Tests.RedisProcessingJobFacts.RedisProcessingJobFacts()", span="16-16"];
m93_58 [file="Worker.cs", label="HangFire.Redis.Tests.RedisProcessingJobFacts", span=""];
d206 -> d25  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d125  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d152  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d169  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d206 -> d184  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
d22 -> d25  [color=green, key=1, label=jobId, style=dashed];
d22 -> d26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d23 -> d25  [color=green, key=1, label=jobId, style=dashed];
d23 -> d26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d41 -> d50  [color=green, key=1, label=jobId, style=dashed];
d41 -> d63  [color=green, key=1, label=jobId, style=dashed];
d41 -> d51  [color=green, key=1, label=jobId, style=dashed];
d41 -> d67  [color=green, key=1, label=jobId, style=dashed];
d41 -> d53  [color=green, key=1, label=jobId, style=dashed];
d40 -> d51  [color=green, key=1, label="System.TimeSpan", style=dashed];
d40 -> d67  [color=green, key=1, label="System.TimeSpan", style=dashed];
d42 -> d44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
d42 -> d45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
d42 -> d46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
d42 -> d47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
d50 -> d62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d51 -> d66  [color=green, key=1, label="lambda expression", style=dashed];
d49 -> d51  [color=green, key=1, label=transaction, style=dashed];
d49 -> d52  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d207 -> d67  [color=green, key=1, label=jobId, style=dashed];
d207 -> d63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d209 -> d67  [color=green, key=1, label="System.TimeSpan", style=dashed];
d71 -> d78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d71 -> d80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d71 -> d82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d71 -> d84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
d107 -> d109  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d107 -> d110  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d107 -> d111  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d130 -> d132  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d130 -> d135  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d130 -> d136  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d172 -> d176  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
d175 -> d178  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
d175 -> d179  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
d184 -> d184  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
d18 -> d26  [color=darkseagreen4, key=1, label=queueName, style=dashed];
d43 -> d50  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d43 -> d63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d43 -> d48  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d43 -> d45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d43 -> d46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d43 -> d47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d208 -> d63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
d108 -> d113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d109 -> d117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d110 -> d121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d131 -> d138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d132 -> d142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d135 -> d147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d156 -> d160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d157 -> d164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d178 -> d194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d178 -> d199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d106 -> d114  [color=darkseagreen4, key=1, label=string, style=dashed];
d106 -> d118  [color=darkseagreen4, key=1, label=string, style=dashed];
d106 -> d122  [color=darkseagreen4, key=1, label=string, style=dashed];
d106 -> d108  [color=darkseagreen4, key=1, label=string, style=dashed];
d106 -> d109  [color=darkseagreen4, key=1, label=string, style=dashed];
d106 -> d110  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d143  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d148  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d131  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d132  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d135  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d139  [color=darkseagreen4, key=1, label=string, style=dashed];
d129 -> d133  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
d154 -> d165  [color=darkseagreen4, key=1, label=string, style=dashed];
d154 -> d156  [color=darkseagreen4, key=1, label=string, style=dashed];
d154 -> d157  [color=darkseagreen4, key=1, label=string, style=dashed];
d154 -> d161  [color=darkseagreen4, key=1, label=string, style=dashed];
d171 -> d183  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
d173 -> d178  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
d173 -> d200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
d173 -> d181  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
d174 -> d183  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
d182 -> d184  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
d185 -> d185  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
d185 -> d186  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
d17 -> d21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
d16 -> d16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d12 -> d16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d210 -> d114  [color=darkseagreen4, key=1, label=string, style=dashed];
d210 -> d118  [color=darkseagreen4, key=1, label=string, style=dashed];
d210 -> d122  [color=darkseagreen4, key=1, label=string, style=dashed];
d211 -> d114  [color=darkseagreen4, key=1, label=string, style=dashed];
d212 -> d143  [color=darkseagreen4, key=1, label=string, style=dashed];
d212 -> d148  [color=darkseagreen4, key=1, label=string, style=dashed];
d212 -> d139  [color=darkseagreen4, key=1, label=string, style=dashed];
d213 -> d143  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
d214 -> d148  [color=darkseagreen4, key=1, label=queue1, style=dashed];
d134 -> d148  [color=darkseagreen4, key=1, label=queue1, style=dashed];
d215 -> d165  [color=darkseagreen4, key=1, label=string, style=dashed];
d215 -> d161  [color=darkseagreen4, key=1, label=string, style=dashed];
d155 -> d157  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d155 -> d158  [color=darkseagreen4, key=1, label=transaction, style=dashed];
d177 -> d195  [color=darkseagreen4, key=1, label=name, style=dashed];
d177 -> d200  [color=darkseagreen4, key=1, label=name, style=dashed];
d180 -> d185  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
d180 -> d186  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
d216 -> d200  [color=darkseagreen4, key=1, label=name, style=dashed];
d216 -> d195  [color=darkseagreen4, key=1, label=name, style=dashed];
d217 -> d200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m1_231 -> m1_235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_202 -> m1_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_123 -> m1_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_245 -> m1_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_178 -> m1_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_215 -> m1_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_181 -> m1_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_189 -> m1_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_259 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientApiTests", style=dashed];
m3_25 -> m3_27  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m3_4 -> m3_7  [color=green, key=1, label="HangFire.Common.Job", style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label="HangFire.Common.States.State", style=dashed];
m3_46 -> m3_42  [color=green, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_46 -> m3_23  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_46 -> m3_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_46 -> m3_27  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_46 -> m3_38  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_46 -> m3_43  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m3_20 -> m3_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_20 -> m3_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_35 -> m3_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_92 -> m3_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_39  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_49  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_56  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_60  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_70  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_73  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_77  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_81  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_85  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_90  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m6_58 -> m6_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_76 -> m6_78  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m6_4 -> m6_8  [color=darkseagreen4, key=1, label=redis, style=dashed];
m6_4 -> m6_13  [color=darkseagreen4, key=1, label=redis, style=dashed];
m6_10 -> m6_12  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m6_6 -> m6_8  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_9  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_13  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_6 -> m6_17  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_11 -> m6_14  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m6_11 -> m6_15  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m6_11 -> m6_17  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m6_14 -> m6_14  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m6_14 -> m6_15  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m6_14 -> m6_17  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m6_27 -> m6_32  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_27 -> m6_36  [color=green, key=1, label=string, style=dashed];
m6_27 -> m6_37  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m6_34 -> m6_36  [color=green, key=1, label=stateMachine, style=dashed];
m6_29 -> m6_31  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m6_29 -> m6_33  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m6_30 -> m6_33  [color=darkseagreen4, key=1, label="@checked", style=dashed];
m6_82 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m6_82 -> m6_33  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m6_82 -> m6_66  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m6_82 -> m6_67  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m6_82 -> m6_77  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m8_9 -> m8_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_9 -> m8_14  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m8_9 -> m8_19  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m8_17 -> m8_20  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_26 -> m8_29  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m8_26 -> m8_31  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m8_26 -> m8_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_26 -> m8_37  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m8_26 -> m8_42  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m8_34 -> m8_37  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m8_34 -> m8_40  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m8_39 -> m8_47  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="Hangfire.States.IStateChangeProcess", style=dashed];
m8_70 -> m8_73  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m8_72 -> m8_74  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_79 -> m8_19  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m8_79 -> m8_33  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m8_79 -> m8_57  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m8_79 -> m8_59  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m8_79 -> m8_64  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m8_79 -> m8_73  [color=darkseagreen4, key=1, label="Hangfire.States.StateMachine", style=dashed];
m13_9 -> m13_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m13_9 -> m13_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m13_9 -> m13_69  [color=darkseagreen4, key=1, label=pager, style=dashed];
m13_10 -> m13_17  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m13_17 -> m13_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_16 -> m13_57  [color=darkseagreen4, key=1, label=index, style=dashed];
m13_57 -> m13_57  [color=darkseagreen4, key=1, label=index, style=dashed];
m13_19 -> m13_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_19 -> m13_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_21 -> m13_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_21 -> m13_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_23 -> m13_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_23 -> m13_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_25 -> m13_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_25 -> m13_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_27 -> m13_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_27 -> m13_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_30 -> m13_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_30 -> m13_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_30 -> m13_37  [color=green, key=1, label=job, style=dashed];
m13_32 -> m13_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_32 -> m13_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_37 -> m13_37  [color=green, key=1, label=job, style=dashed];
m13_37 -> m13_39  [color=green, key=1, label=job, style=dashed];
m13_34 -> m13_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_34 -> m13_37  [color=green, key=1, label=job, style=dashed];
m13_39 -> m13_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_39 -> m13_41  [color=green, key=1, label=job, style=dashed];
m13_41 -> m13_41  [color=green, key=1, label=job, style=dashed];
m13_41 -> m13_43  [color=green, key=1, label=job, style=dashed];
m13_43 -> m13_43  [color=green, key=1, label=job, style=dashed];
m13_43 -> m13_45  [color=green, key=1, label=job, style=dashed];
m13_45 -> m13_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_45 -> m13_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_45 -> m13_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_47 -> m13_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_47 -> m13_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_50 -> m13_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_50 -> m13_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_50 -> m13_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_52 -> m13_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_52 -> m13_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_55 -> m13_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_55 -> m13_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_59 -> m13_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_59 -> m13_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_61 -> m13_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_61 -> m13_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_63 -> m13_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_63 -> m13_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_65 -> m13_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_91 -> m13_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_37  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_41  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_43  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m13_91 -> m13_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m14_57 -> m14_63  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_57 -> m14_66  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m14_83 -> m14_12  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_19  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_35  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_44  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_45  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_46  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_47  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_48  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_63  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_66  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m14_83 -> m14_71  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m15_1 -> m15_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_84 -> m16_87  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m16_87 -> m16_90  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m16_107 -> m16_110  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m16_108 -> m16_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_108 -> m16_124  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_111 -> m16_114  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m16_111 -> m16_118  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m16_109 -> m16_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_123 -> m16_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_97 -> m16_100  [color=darkseagreen4, key=1, label=instance, style=dashed];
m16_2 -> m16_5  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m16_2 -> m16_7  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m16_2 -> m16_9  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m16_19 -> m16_22  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m16_64 -> m16_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m16_168 -> m16_170  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m16_150 -> m16_152  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m16_151 -> m16_158  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m16_151 -> m16_159  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m16_152 -> m16_154  [color=darkseagreen4, key=1, label=argument, style=dashed];
m16_152 -> m16_155  [color=darkseagreen4, key=1, label=argument, style=dashed];
m16_153 -> m16_158  [color=darkseagreen4, key=1, label=value, style=dashed];
m16_71 -> m16_74  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m16_142 -> m16_144  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m16_51 -> m16_55  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m16_51 -> m16_61  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m16_178 -> m16_14  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_26  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_36  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_41  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_76  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_78  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_79  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_80  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_82  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_85  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_99  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_134  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m16_178 -> m16_175  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m17_33 -> m17_36  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m17_33 -> m17_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_6 -> m17_9  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m17_6 -> m17_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
m17_18 -> m17_21  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m17_44 -> m17_25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m20_52 -> m20_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_53 -> m20_55  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_109 -> m20_116  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Group", style=dashed];
m20_109 -> m20_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_115 -> m20_126  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_116 -> m20_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_117 -> m20_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_117 -> m20_119  [color=darkseagreen4, key=1, label=exception, style=dashed];
m20_58 -> m20_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_58 -> m20_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_58 -> m20_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_58 -> m20_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_58 -> m20_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_63 -> m20_65  [color=darkseagreen4, key=1, label=match, style=dashed];
m20_63 -> m20_66  [color=darkseagreen4, key=1, label=match, style=dashed];
m20_62 -> m20_64  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m20_62 -> m20_67  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m20_66 -> m20_67  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m20_66 -> m20_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_71 -> m20_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_43 -> m20_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_33 -> m20_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_33 -> m20_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_77 -> m20_80  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m20_120 -> m20_122  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_120 -> m20_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_120 -> m20_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_120 -> m20_125  [color=darkseagreen4, key=1, label=int, style=dashed];
m20_6 -> m20_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_45 -> m20_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_45 -> m20_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_50 -> m20_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_149 -> m20_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_9 -> m20_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_38 -> m20_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m20_25 -> m20_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_84 -> m20_86  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m20_26 -> m20_29  [color=darkseagreen4, key=1, label=type, style=dashed];
m20_85 -> m20_89  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m20_93 -> m20_93  [color=darkseagreen4, key=1, label=position, style=dashed];
m20_103 -> m20_106  [color=darkseagreen4, key=1, label=anchor, style=dashed];
m20_113 -> m20_128  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_113 -> m20_129  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_113 -> m20_130  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_113 -> m20_131  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_113 -> m20_132  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_89 -> m20_92  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m20_87 -> m20_92  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_88 -> m20_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_88 -> m20_93  [color=darkseagreen4, key=1, label=position, style=dashed];
m20_106 -> m20_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_14 -> m20_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_72 -> m20_75  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m20_72 -> m20_76  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_72 -> m20_82  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_72 -> m20_87  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_92  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_94  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_96  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_97  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_99  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_100  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_104  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m20_72 -> m20_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_129 -> m20_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_130 -> m20_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_157 -> m20_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_163 -> m20_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_138 -> m20_143  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_139 -> m20_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_175 -> m20_33  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_47  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_108  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_130  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_148  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_149  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_163  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_170  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_175 -> m20_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m20_177 -> m20_92  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_178 -> m20_126  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_179 -> m20_134  [color=darkseagreen4, key=1, label=client, style=dashed];
m20_180 -> m20_143  [color=darkseagreen4, key=1, label=client, style=dashed];
m28_32 -> m28_35  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m28_11 -> m28_16  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m28_2 -> m28_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m28_40 -> m28_21  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m28_40 -> m28_29  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m28_40 -> m28_19  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m29_93 -> m29_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_93 -> m29_96  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_93 -> m29_97  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_93 -> m29_106  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_97 -> m29_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_215 -> m29_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_217 -> m29_219  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_218 -> m29_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_59 -> m29_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_84 -> m29_89  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_85 -> m29_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_248 -> m29_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_249 -> m29_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_251 -> m29_253  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_252 -> m29_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_76 -> m29_81  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_77 -> m29_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_2 -> m29_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_5 -> m29_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_8 -> m29_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_9 -> m29_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_10 -> m29_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_12 -> m29_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_146 -> m29_151  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_147 -> m29_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_269 -> m29_272  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_270 -> m29_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_271 -> m29_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_179 -> m29_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_128 -> m29_133  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_129 -> m29_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_50 -> m29_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_156 -> m29_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_137 -> m29_142  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_138 -> m29_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_306 -> m29_310  [color=darkseagreen4, key=1, label=exception, style=dashed];
m29_306 -> m29_318  [color=darkseagreen4, key=1, label=exception, style=dashed];
m29_306 -> m29_321  [color=darkseagreen4, key=1, label=exception, style=dashed];
m29_307 -> m29_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_310 -> m29_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_309 -> m29_311  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_66 -> m29_72  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_67 -> m29_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_209 -> m29_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_164 -> m29_166  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_165 -> m29_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_106 -> m29_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_117 -> m29_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_170 -> m29_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_182 -> m29_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_242 -> m29_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_262 -> m29_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_275 -> m29_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_300 -> m29_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_318 -> m29_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_285 -> m29_289  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m29_285 -> m29_300  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m29_285 -> m29_303  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m29_286 -> m29_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_286 -> m29_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_289 -> m29_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_114 -> m29_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_230 -> m29_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_232 -> m29_234  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_233 -> m29_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_188 -> m29_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_192 -> m29_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_193 -> m29_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_325 -> m29_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_121  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_133  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_151  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_155  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_170  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_173  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_178  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_182  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_185  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_192  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_193  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_209  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_218  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_227  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_242  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_249  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_252  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_262  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_265  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_270  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_275  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_278  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_271  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_293  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_288  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_289  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_300  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_307  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_310  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_318  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_325 -> m29_323  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m29_326 -> m29_72  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_327 -> m29_81  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_328 -> m29_89  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_329 -> m29_106  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_330 -> m29_133  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_331 -> m29_142  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_332 -> m29_151  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m29_333 -> m29_300  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m29_333 -> m29_303  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m29_334 -> m29_318  [color=darkseagreen4, key=1, label=exception, style=dashed];
m29_334 -> m29_321  [color=darkseagreen4, key=1, label=exception, style=dashed];
m30_54 -> m30_59  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_54 -> m30_76  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_55 -> m30_60  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_55 -> m30_84  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_59 -> m30_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_59 -> m30_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_62 -> m30_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_62 -> m30_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_56 -> m30_59  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_56 -> m30_60  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_56 -> m30_61  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_60 -> m30_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_60 -> m30_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_58 -> m30_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_58 -> m30_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_58 -> m30_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_58 -> m30_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_58 -> m30_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_51 -> m30_57  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m30_0 -> m30_3  [color=darkseagreen4, key=1, label=SqlTransaction, style=dashed];
m30_0 -> m30_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_0 -> m30_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_0 -> m30_9  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m30_0 -> m30_10  [color=darkseagreen4, key=1, label=SqlTransaction, style=dashed];
m30_0 -> m30_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m30_0 -> m30_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_1 -> m30_4  [color=darkseagreen4, key=1, label=type, style=dashed];
m30_34 -> m30_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_34 -> m30_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_180 -> m30_343  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_180 -> m30_345  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_180 -> m30_341  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m30_180 -> m30_351  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_180 -> m30_344  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_180 -> m30_359  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_180 -> m30_369  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m30_343 -> m30_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_343 -> m30_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_345 -> m30_358  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_345 -> m30_361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_340 -> m30_343  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_340 -> m30_345  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_340 -> m30_346  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_338 -> m30_355  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_338 -> m30_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_338 -> m30_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_342 -> m30_355  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_342 -> m30_363  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_342 -> m30_345  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_342 -> m30_354  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_342 -> m30_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_342 -> m30_359  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_342 -> m30_362  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_339 -> m30_363  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_339 -> m30_345  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_339 -> m30_362  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_347 -> m30_365  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_347 -> m30_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_19 -> m30_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_226 -> m30_306  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_290 -> m30_296  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_290 -> m30_298  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_289 -> m30_294  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m30_291 -> m30_294  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_291 -> m30_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_291 -> m30_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_288 -> m30_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_297 -> m30_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_282 -> m30_296  [color=darkseagreen4, key=1, label=dates, style=dashed];
m30_282 -> m30_292  [color=darkseagreen4, key=1, label=dates, style=dashed];
m30_282 -> m30_285  [color=darkseagreen4, key=1, label=dates, style=dashed];
m30_281 -> m30_285  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m30_283 -> m30_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_287 -> m30_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_246 -> m30_254  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_252 -> m30_254  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m30_47 -> m30_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m30_353 -> m30_355  [color=darkseagreen4, key=1, label="?", style=dashed];
m30_361 -> m30_363  [color=darkseagreen4, key=1, label="?", style=dashed];
m30_369 -> m30_374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_144 -> m30_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_155 -> m30_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_175 -> m30_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_171 -> m30_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_171 -> m30_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_172 -> m30_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_172 -> m30_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_173 -> m30_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_173 -> m30_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_170 -> m30_174  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_166 -> m30_184  [color=darkseagreen4, key=1, label=queue, style=dashed];
m30_166 -> m30_190  [color=darkseagreen4, key=1, label=queue, style=dashed];
m30_166 -> m30_196  [color=darkseagreen4, key=1, label=queue, style=dashed];
m30_165 -> m30_177  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_164 -> m30_166  [color=darkseagreen4, key=1, label=queues, style=dashed];
m30_388 -> m30_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_388 -> m30_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_389 -> m30_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_389 -> m30_421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_391 -> m30_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_391 -> m30_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_383 -> m30_396  [color=darkseagreen4, key=1, label=stats, style=dashed];
m30_387 -> m30_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_387 -> m30_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_385 -> m30_395  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_390 -> m30_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_390 -> m30_428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_386 -> m30_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_386 -> m30_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_394 -> m30_438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_394 -> m30_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_384 -> m30_392  [color=darkseagreen4, key=1, label=queues, style=dashed];
m30_393 -> m30_439  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m30_108 -> m30_113  [color=darkseagreen4, key=1, label=servers, style=dashed];
m30_108 -> m30_126  [color=darkseagreen4, key=1, label=servers, style=dashed];
m30_109 -> m30_114  [color=darkseagreen4, key=1, label=queues, style=dashed];
m30_109 -> m30_133  [color=darkseagreen4, key=1, label=queues, style=dashed];
m30_113 -> m30_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_113 -> m30_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_116 -> m30_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_110 -> m30_113  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_110 -> m30_114  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_110 -> m30_115  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m30_114 -> m30_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_114 -> m30_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_112 -> m30_126  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_112 -> m30_133  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_112 -> m30_114  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_112 -> m30_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_112 -> m30_129  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_105 -> m30_111  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m30_98 -> m30_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_319 -> m30_325  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_319 -> m30_327  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_318 -> m30_323  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m30_320 -> m30_323  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_320 -> m30_325  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_320 -> m30_326  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_317 -> m30_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_326 -> m30_326  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_312 -> m30_325  [color=darkseagreen4, key=1, label=dates, style=dashed];
m30_312 -> m30_314  [color=darkseagreen4, key=1, label=dates, style=dashed];
m30_316 -> m30_321  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m30_316 -> m30_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_310 -> m30_313  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m30_310 -> m30_314  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m30_311 -> m30_313  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m30_264 -> m30_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_264 -> m30_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_264 -> m30_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_261 -> m30_272  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m30_216 -> m30_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_29 -> m30_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m30_29 -> m30_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m30_29 -> m30_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m30_29 -> m30_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m30_231 -> m30_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_237 -> m30_239  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m30_208 -> m30_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_445 -> m30_76  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_446 -> m30_84  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_448 -> m30_126  [color=darkseagreen4, key=1, label=servers, style=dashed];
m30_449 -> m30_133  [color=darkseagreen4, key=1, label=queues, style=dashed];
m30_444 -> m30_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_444 -> m30_84  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_444 -> m30_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_444 -> m30_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m30_447 -> m30_126  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_447 -> m30_133  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_447 -> m30_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_447 -> m30_129  [color=darkseagreen4, key=1, label=name, style=dashed];
m30_455 -> m30_355  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_455 -> m30_363  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_455 -> m30_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_455 -> m30_354  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_455 -> m30_359  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_455 -> m30_362  [color=darkseagreen4, key=1, label=id, style=dashed];
m30_456 -> m30_355  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_456 -> m30_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m30_458 -> m30_363  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_458 -> m30_362  [color=darkseagreen4, key=1, label=states, style=dashed];
m30_450 -> m30_184  [color=darkseagreen4, key=1, label=queue, style=dashed];
m30_450 -> m30_190  [color=darkseagreen4, key=1, label=queue, style=dashed];
m30_450 -> m30_196  [color=darkseagreen4, key=1, label=queue, style=dashed];
m30_461 -> m30_439  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m30_454 -> m30_351  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_457 -> m30_359  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m30_459 -> m30_369  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m30_453 -> m30_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_452 -> m30_306  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_451 -> m30_272  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m31_5 -> m31_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m31_56 -> m31_58  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m31_56 -> m31_59  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m31_56 -> m31_66  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.IClientFilter", style=dashed];
m31_56 -> m31_70  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.IClientFilter", style=dashed];
m31_65 -> m31_67  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m31_65 -> m31_70  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m31_65 -> m31_71  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m31_64 -> m31_69  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m31_19 -> m31_21  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m31_20 -> m31_24  [color=green, key=1, label=filterInfo, style=dashed];
m31_23 -> m31_25  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m31_12 -> m31_15  [color=green, key=1, label="lambda expression", style=dashed];
m31_51 -> m31_54  [color=darkseagreen4, key=1, label="System.Func<HangFire.Client.Filters.CreatedContext>", style=dashed];
m31_31 -> m31_77  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.ClientExceptionContext", style=dashed];
m31_29 -> m31_46  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m31_29 -> m31_47  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m31_36 -> m31_54  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m31_38 -> m31_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_80 -> m31_32  [color=green, key=1, label="HangFire.Client.JobCreator", style=dashed];
m31_81 -> m31_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m31_82 -> m31_46  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m31_82 -> m31_47  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m31_83 -> m31_54  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m31_84 -> m31_54  [color=darkseagreen4, key=1, label="System.Func<HangFire.Client.Filters.CreatedContext>", style=dashed];
m31_85 -> m31_54  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.IClientFilter", style=dashed];
m33_4 -> m33_6  [color=green, key=1, label=job, style=dashed];
m33_4 -> m33_21  [color=green, key=1, label=job, style=dashed];
m33_4 -> m33_23  [color=green, key=1, label=job, style=dashed];
m33_4 -> m33_11  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_4 -> m33_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_4 -> m33_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_4 -> m33_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_4 -> m33_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_4 -> m33_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_4 -> m33_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_28 -> m33_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m33_40 -> m33_49  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_40 -> m33_51  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_40 -> m33_53  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_40 -> m33_55  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_40 -> m33_57  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_40 -> m33_60  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_40 -> m33_67  [color=darkseagreen4, key=1, label=entry, style=dashed];
m33_30 -> m33_30  [color=darkseagreen4, key=1, label=property, style=dashed];
m33_30 -> m33_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m33_33 -> m33_33  [color=darkseagreen4, key=1, label=property, style=dashed];
m33_69 -> m33_69  [color=darkseagreen4, key=1, label=item, style=dashed];
m33_69 -> m33_72  [color=darkseagreen4, key=1, label=item, style=dashed];
m33_72 -> m33_72  [color=darkseagreen4, key=1, label=item, style=dashed];
m33_39 -> m33_45  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_39 -> m33_42  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_39 -> m33_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_76 -> m33_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_41 -> m33_47  [color=darkseagreen4, key=1, label=background, style=dashed];
m33_43 -> m33_47  [color=darkseagreen4, key=1, label=background, style=dashed];
m33_61 -> m33_64  [color=darkseagreen4, key=1, label=rendered, style=dashed];
m33_67 -> m33_69  [color=darkseagreen4, key=1, label=item, style=dashed];
m33_95 -> m33_23  [color=green, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_66  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_73  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_74  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m33_95 -> m33_75  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.JobDetailsPage", style=dashed];
m35_14 -> m35_21  [color=green, key=1, label="lambda expression", style=dashed];
m35_14 -> m35_16  [color=green, key=1, label=typeFilters, style=dashed];
m35_15 -> m35_25  [color=green, key=1, label="lambda expression", style=dashed];
m35_28 -> m35_6  [color=green, key=1, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider", style=dashed];
m35_28 -> m35_10  [color=green, key=1, label="HangFire.Common.Filters.JobFilterAttributeFilterProvider", style=dashed];
m36_3 -> m36_15  [color=green, key=1, label="lambda expression", style=dashed];
m36_3 -> m36_5  [color=green, key=1, label=list, style=dashed];
m36_3 -> m36_6  [color=green, key=1, label=list, style=dashed];
m36_3 -> m36_7  [color=green, key=1, label=list, style=dashed];
m36_3 -> m36_8  [color=green, key=1, label=list, style=dashed];
m36_3 -> m36_9  [color=green, key=1, label=list, style=dashed];
m36_18 -> m36_4  [color=green, key=1, label="HangFire.Common.Filters.JobFilterInfo", style=dashed];
m36_18 -> m36_5  [color=green, key=1, label="HangFire.Common.Filters.JobFilterInfo", style=dashed];
m36_18 -> m36_6  [color=green, key=1, label="HangFire.Common.Filters.JobFilterInfo", style=dashed];
m36_18 -> m36_7  [color=green, key=1, label="HangFire.Common.Filters.JobFilterInfo", style=dashed];
m36_18 -> m36_8  [color=green, key=1, label="HangFire.Common.Filters.JobFilterInfo", style=dashed];
m36_18 -> m36_9  [color=green, key=1, label="HangFire.Common.Filters.JobFilterInfo", style=dashed];
m37_42 -> m37_45  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m37_42 -> m37_47  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m37_42 -> m37_49  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m37_42 -> m37_51  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m37_42 -> m37_53  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m37_42 -> m37_55  [color=darkseagreen4, key=1, label="HangFire.Common.Filters.JobFilter", style=dashed];
m37_7 -> m37_10  [color=darkseagreen4, key=1, label=mvcFilter, style=dashed];
m37_22 -> m37_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>", style=dashed];
m37_30 -> m37_34  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m37_30 -> m37_36  [color=darkseagreen4, key=1, label=visitedTypes, style=dashed];
m37_31 -> m37_35  [color=darkseagreen4, key=1, label=filter, style=dashed];
m37_32 -> m37_34  [color=darkseagreen4, key=1, label=filterInstance, style=dashed];
m37_33 -> m37_36  [color=darkseagreen4, key=1, label=filterInstanceType, style=dashed];
m38_623 -> m38_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_812 -> m38_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_479 -> m38_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_5 -> m38_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_13 -> m38_15  [color=darkseagreen4, key=1, label=context, style=dashed];
m38_365 -> m38_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_740 -> m38_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_669 -> m38_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_866 -> m38_868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_272 -> m38_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_345 -> m38_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_306 -> m38_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_26 -> m38_29  [color=green, key=1, label="lambda expression", style=dashed];
m38_858 -> m38_860  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_210 -> m38_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_884 -> m38_886  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_721 -> m38_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_283 -> m38_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_354 -> m38_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_431 -> m38_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_774 -> m38_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_241 -> m38_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_660 -> m38_662  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_848 -> m38_850  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_403 -> m38_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_34 -> m38_37  [color=green, key=1, label=sqlConnection, style=dashed];
m38_327 -> m38_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_252 -> m38_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_892 -> m38_894  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_567 -> m38_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_512 -> m38_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_220 -> m38_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_577 -> m38_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_442 -> m38_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_441 -> m38_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_585 -> m38_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_783 -> m38_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_713 -> m38_715  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_794 -> m38_796  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_413 -> m38_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_51 -> m38_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_51 -> m38_53  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_51 -> m38_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_52 -> m38_54  [color=darkseagreen4, key=1, label=queues, style=dashed];
m38_52 -> m38_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m38_71 -> m38_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_99 -> m38_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_111 -> m38_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_173 -> m38_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_213 -> m38_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_264 -> m38_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_275 -> m38_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_319 -> m38_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_330 -> m38_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_357 -> m38_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_368 -> m38_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_394 -> m38_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_406 -> m38_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_434 -> m38_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_455 -> m38_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_482 -> m38_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_505 -> m38_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_534 -> m38_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_545 -> m38_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_570 -> m38_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_599 -> m38_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_626 -> m38_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_645 -> m38_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_680 -> m38_682  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_706 -> m38_708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_733 -> m38_735  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_759 -> m38_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_786 -> m38_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_797 -> m38_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_823 -> m38_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_851 -> m38_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_877 -> m38_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_54 -> m38_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_54 -> m38_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreatedContextFacts", style=dashed];
m38_54 -> m38_44  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreatedContextFacts", style=dashed];
m38_67 -> m38_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_67 -> m38_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_68 -> m38_71  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_68 -> m38_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_98 -> m38_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_110 -> m38_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_172 -> m38_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_212 -> m38_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_263 -> m38_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_274 -> m38_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_318 -> m38_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_329 -> m38_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_356 -> m38_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_367 -> m38_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_393 -> m38_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_405 -> m38_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_433 -> m38_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_454 -> m38_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_481 -> m38_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_504 -> m38_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_533 -> m38_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_544 -> m38_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_569 -> m38_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_598 -> m38_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_625 -> m38_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_644 -> m38_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_679 -> m38_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_705 -> m38_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_732 -> m38_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_758 -> m38_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_785 -> m38_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_796 -> m38_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_822 -> m38_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_850 -> m38_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_876 -> m38_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_50 -> m38_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_285 -> m38_288  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_296 -> m38_299  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_296 -> m38_300  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_308 -> m38_311  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_415 -> m38_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_415 -> m38_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_444 -> m38_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_465 -> m38_467  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_493 -> m38_495  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_115 -> m38_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_131 -> m38_133  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m38_131 -> m38_134  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m38_131 -> m38_135  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m38_131 -> m38_142  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m38_131 -> m38_143  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m38_418 -> m38_420  [color=darkseagreen4, key=1, label=server, style=dashed];
m38_418 -> m38_421  [color=darkseagreen4, key=1, label=server, style=dashed];
m38_424 -> m38_426  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m38_127 -> m38_133  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m38_127 -> m38_142  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m38_127 -> m38_143  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m38_128 -> m38_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_128 -> m38_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_128 -> m38_132  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_144 -> m38_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_144 -> m38_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_144 -> m38_146  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m38_192 -> m38_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_194 -> m38_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_194 -> m38_197  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_194 -> m38_198  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_194 -> m38_199  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_194 -> m38_200  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_194 -> m38_201  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_233 -> m38_235  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_233 -> m38_236  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_233 -> m38_237  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_246 -> m38_248  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_468 -> m38_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_468 -> m38_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_468 -> m38_470  [color=darkseagreen4, key=1, label=servers, style=dashed];
m38_515 -> m38_517  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_525 -> m38_527  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_525 -> m38_528  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_556 -> m38_560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_556 -> m38_563  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_556 -> m38_558  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_589 -> m38_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_589 -> m38_592  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_589 -> m38_593  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_725 -> m38_727  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_778 -> m38_780  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_896 -> m38_898  [color=darkseagreen4, key=1, label=result, style=dashed];
m38_298 -> m38_300  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m38_138 -> m38_140  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_138 -> m38_141  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_695 -> m38_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_39 -> m38_43  [color=darkseagreen4, key=1, label=connection, style=dashed];
m38_391 -> m38_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_502 -> m38_504  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_47 -> m38_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_900 -> m38_903  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m38_901 -> m38_903  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m38_261 -> m38_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_49 -> m38_907  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m38_78 -> m38_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_180 -> m38_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_337 -> m38_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_3 -> m38_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_730 -> m38_732  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_531 -> m38_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_17 -> m38_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_40 -> m38_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m38_41 -> m38_43  [color=darkseagreen4, key=1, label=state, style=dashed];
m38_41 -> m38_44  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m38_108 -> m38_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_614 -> m38_616  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_766 -> m38_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_491 -> m38_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_756 -> m38_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_228 -> m38_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_804 -> m38_806  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_64 -> m38_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_677 -> m38_679  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_521 -> m38_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_542 -> m38_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_687 -> m38_689  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_703 -> m38_705  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_642 -> m38_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_820 -> m38_822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_316 -> m38_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_840 -> m38_842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_96 -> m38_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_652 -> m38_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_874 -> m38_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_87 -> m38_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_596 -> m38_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_382 -> m38_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_381 -> m38_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_634 -> m38_636  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_294 -> m38_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_463 -> m38_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_462 -> m38_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_831 -> m38_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_552 -> m38_554  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_189 -> m38_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_452 -> m38_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_748 -> m38_750  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_170 -> m38_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_123 -> m38_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_374 -> m38_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_606 -> m38_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_911 -> m38_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_452  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_479  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_502  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_567  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_596  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_623  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_677  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_703  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_730  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_848  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_911 -> m38_874  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m38_914 -> m38_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_915 -> m38_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_916 -> m38_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_917 -> m38_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_918 -> m38_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_920 -> m38_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_924 -> m38_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_925 -> m38_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_929 -> m38_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_930 -> m38_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_932 -> m38_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_933 -> m38_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_935 -> m38_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_936 -> m38_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_937 -> m38_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_939 -> m38_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_941 -> m38_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_943 -> m38_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_945 -> m38_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_946 -> m38_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_947 -> m38_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_949 -> m38_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_951 -> m38_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_953 -> m38_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_956 -> m38_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_958 -> m38_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_960 -> m38_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_962 -> m38_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_964 -> m38_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_965 -> m38_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_967 -> m38_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_969 -> m38_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_971 -> m38_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m38_912 -> m38_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m38_913 -> m38_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m38_934 -> m38_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_938 -> m38_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m38_940 -> m38_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m39_57 -> m39_62  [color=green, key=1, label=table2, style=dashed];
m39_57 -> m39_59  [color=darkseagreen4, key=1, label=table2, style=dashed];
m39_57 -> m39_60  [color=darkseagreen4, key=1, label=table2, style=dashed];
m39_57 -> m39_61  [color=darkseagreen4, key=1, label=table2, style=dashed];
m39_88 -> m39_90  [color=darkseagreen4, key=1, label=table4, style=dashed];
m39_88 -> m39_91  [color=darkseagreen4, key=1, label=table4, style=dashed];
m39_88 -> m39_92  [color=darkseagreen4, key=1, label=table4, style=dashed];
m39_131 -> m39_133  [color=darkseagreen4, key=1, label=table6, style=dashed];
m39_131 -> m39_134  [color=darkseagreen4, key=1, label=table6, style=dashed];
m39_74 -> m39_76  [color=green, key=1, label=table3, style=dashed];
m39_74 -> m39_77  [color=green, key=1, label=table3, style=dashed];
m39_74 -> m39_78  [color=green, key=1, label=table3, style=dashed];
m39_104 -> m39_106  [color=darkseagreen4, key=1, label=table5, style=dashed];
m39_104 -> m39_107  [color=darkseagreen4, key=1, label=table5, style=dashed];
m39_104 -> m39_108  [color=darkseagreen4, key=1, label=table5, style=dashed];
m39_104 -> m39_109  [color=darkseagreen4, key=1, label=table5, style=dashed];
m39_104 -> m39_110  [color=darkseagreen4, key=1, label=table5, style=dashed];
m39_36 -> m39_38  [color=green, key=1, label=table1, style=dashed];
m39_36 -> m39_39  [color=green, key=1, label=table1, style=dashed];
m39_146 -> m39_148  [color=darkseagreen4, key=1, label=table7, style=dashed];
m39_146 -> m39_149  [color=darkseagreen4, key=1, label=table7, style=dashed];
m39_146 -> m39_150  [color=darkseagreen4, key=1, label=table7, style=dashed];
m39_154 -> m39_63  [color=green, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_67  [color=green, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_32  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_41  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_52  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_79  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_83  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_94  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_98  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_116  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_122  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_126  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_136  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_140  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m39_154 -> m39_152  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFiltersFeature", style=dashed];
m41_32 -> m41_36  [color=darkseagreen4, key=1, label=type, style=dashed];
m41_85 -> m41_87  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m41_85 -> m41_89  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m41_86 -> m41_88  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m41_86 -> m41_90  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m41_22 -> m41_25  [color=darkseagreen4, key=1, label=type, style=dashed];
m41_72 -> m41_74  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m41_72 -> m41_76  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m41_73 -> m41_75  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m41_73 -> m41_77  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m42_221 -> m42_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_223 -> m42_225  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_224 -> m42_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_59 -> m42_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_254 -> m42_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_255 -> m42_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_257 -> m42_259  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_258 -> m42_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_2 -> m42_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_5 -> m42_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_8 -> m42_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_12 -> m42_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_13 -> m42_40  [color=green, key=1, label="lambda expression", style=dashed];
m42_30 -> m42_24  [color=green, key=1, label="lambda expression", style=dashed];
m42_47 -> m42_49  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_152 -> m42_157  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_153 -> m42_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_275 -> m42_278  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_276 -> m42_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_277 -> m42_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_185 -> m42_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_90 -> m42_95  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_91 -> m42_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_134 -> m42_139  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_135 -> m42_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_50 -> m42_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_120 -> m42_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_162 -> m42_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_37 -> m42_39  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_37 -> m42_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m42_143 -> m42_148  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_144 -> m42_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_312 -> m42_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m42_312 -> m42_324  [color=darkseagreen4, key=1, label=exception, style=dashed];
m42_312 -> m42_327  [color=darkseagreen4, key=1, label=exception, style=dashed];
m42_313 -> m42_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_316 -> m42_323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_315 -> m42_317  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_99 -> m42_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_99 -> m42_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m42_99 -> m42_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m42_99 -> m42_112  [color=darkseagreen4, key=1, label=job, style=dashed];
m42_103 -> m42_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_215 -> m42_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_82 -> m42_87  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_83 -> m42_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_73 -> m42_78  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_74 -> m42_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_23 -> m42_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_170 -> m42_172  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_171 -> m42_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_55 -> m42_19  [color=green, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_30  [color=green, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_34  [color=green, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_27  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_55 -> m42_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Client.CreateContextFacts", style=dashed];
m42_112 -> m42_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_123 -> m42_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_176 -> m42_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_188 -> m42_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_248 -> m42_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_268 -> m42_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_281 -> m42_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_306 -> m42_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_324 -> m42_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_291 -> m42_295  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m42_291 -> m42_306  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m42_291 -> m42_309  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m42_292 -> m42_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_292 -> m42_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_295 -> m42_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_236 -> m42_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_238 -> m42_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m42_239 -> m42_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_194 -> m42_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_198 -> m42_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_199 -> m42_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m42_331 -> m42_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_123  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_127  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_184  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_185  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_221  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_239  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_258  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_268  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_271  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_276  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_284  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_277  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_294  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_295  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_306  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_313  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_316  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_324  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_331 -> m42_329  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m42_332 -> m42_78  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_333 -> m42_87  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_334 -> m42_95  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_335 -> m42_112  [color=darkseagreen4, key=1, label=job, style=dashed];
m42_336 -> m42_139  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_337 -> m42_148  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_338 -> m42_157  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m42_339 -> m42_306  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m42_339 -> m42_309  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m42_340 -> m42_324  [color=darkseagreen4, key=1, label=exception, style=dashed];
m42_340 -> m42_327  [color=darkseagreen4, key=1, label=exception, style=dashed];
m45_3 -> m45_6  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m47_3 -> m47_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_27 -> m47_18  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m47_27 -> m47_23  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m49_20 -> m49_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_10 -> m49_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_48 -> m49_50  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m49_27 -> m49_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_77 -> m49_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_78 -> m49_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_34 -> m49_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_67 -> m49_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_55 -> m49_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_41 -> m49_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m49_90 -> m49_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_38  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_45  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_55  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_67  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_77  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_78  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m49_90 -> m49_88  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", style=dashed];
m50_7 -> m50_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m50_7 -> m50_15  [color=darkseagreen4, key=1, label=pager, style=dashed];
m50_7 -> m50_47  [color=darkseagreen4, key=1, label=pager, style=dashed];
m50_6 -> m50_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m50_8 -> m50_17  [color=darkseagreen4, key=1, label=enqueuedJobs, style=dashed];
m50_17 -> m50_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_13 -> m50_9  [color=green, key=1, label="HangFire.States.ProcessingState", style=dashed];
m50_19 -> m50_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_19 -> m50_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_21 -> m50_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_21 -> m50_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_23 -> m50_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_23 -> m50_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_25 -> m50_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_25 -> m50_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_27 -> m50_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_27 -> m50_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_30 -> m50_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_30 -> m50_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_32 -> m50_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_32 -> m50_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_34 -> m50_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_34 -> m50_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_36 -> m50_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_36 -> m50_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_38 -> m50_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_38 -> m50_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_40 -> m50_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_40 -> m50_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_42 -> m50_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m50_69 -> m50_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m50_69 -> m50_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m53_0 -> m53_3  [color=green, key=1, label=string, style=dashed];
m53_0 -> m53_4  [color=green, key=1, label=string, style=dashed];
m56_0 -> m56_3  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m56_0 -> m56_4  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m56_0 -> m56_5  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m56_0 -> m56_6  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m56_0 -> m56_7  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m56_133 -> m56_145  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_140 -> m56_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_140 -> m56_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_134 -> m56_138  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m56_137 -> m56_140  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m56_137 -> m56_141  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m56_146 -> m56_146  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m56_135 -> m56_140  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m56_135 -> m56_162  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m56_135 -> m56_143  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m56_139 -> m56_157  [color=darkseagreen4, key=1, label=name, style=dashed];
m56_139 -> m56_162  [color=darkseagreen4, key=1, label=name, style=dashed];
m56_136 -> m56_145  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m56_144 -> m56_146  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m56_147 -> m56_147  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_147 -> m56_148  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_142 -> m56_147  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_142 -> m56_148  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_116 -> m56_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_116 -> m56_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_116 -> m56_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_116 -> m56_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_118 -> m56_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_119 -> m56_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_117 -> m56_119  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_117 -> m56_120  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_55 -> m56_61  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m56_55 -> m56_63  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m56_55 -> m56_65  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m56_85 -> m56_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_85 -> m56_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_85 -> m56_171  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_85 -> m56_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_85 -> m56_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_85 -> m56_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_169 -> m56_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_170 -> m56_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_171 -> m56_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_168 -> m56_170  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_168 -> m56_171  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_168 -> m56_172  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_91 -> m56_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_91 -> m56_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_91 -> m56_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_91 -> m56_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_91 -> m56_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_91 -> m56_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_91 -> m56_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m56_93 -> m56_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_94 -> m56_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_97 -> m56_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_92 -> m56_94  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_92 -> m56_97  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_92 -> m56_98  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_96 -> m56_110  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m56_34 -> m56_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_26 -> m56_28  [color=green, key=1, label=storedParameters, style=dashed];
m56_26 -> m56_29  [color=green, key=1, label=storedParameters, style=dashed];
m56_26 -> m56_30  [color=green, key=1, label=storedParameters, style=dashed];
m56_26 -> m56_31  [color=green, key=1, label=storedParameters, style=dashed];
m56_26 -> m56_33  [color=green, key=1, label=storedParameters, style=dashed];
m56_26 -> m56_47  [color=green, key=1, label=storedParameters, style=dashed];
m56_24 -> m56_27  [color=green, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m56_24 -> m56_30  [color=green, key=1, label="string[]", style=dashed];
m56_24 -> m56_34  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_24 -> m56_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_25 -> m56_33  [color=green, key=1, label=jobId, style=dashed];
m56_25 -> m56_47  [color=green, key=1, label=jobId, style=dashed];
m56_25 -> m56_34  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_25 -> m56_51  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_25 -> m56_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_27 -> m56_27  [color=green, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m56_28 -> m56_28  [color=green, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m56_29 -> m56_29  [color=green, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m56_33 -> m56_46  [color=green, key=1, label="lambda expression", style=dashed];
m56_32 -> m56_34  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_32 -> m56_35  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_186 -> m56_47  [color=green, key=1, label=jobId, style=dashed];
m56_186 -> m56_51  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_187 -> m56_47  [color=green, key=1, label=storedParameters, style=dashed];
m56_185 -> m56_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_14  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_19  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_75  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_79  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_83  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_87  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_114  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_131  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_185 -> m56_146  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m56_188 -> m56_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_189 -> m56_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_189 -> m56_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_189 -> m56_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_190 -> m56_105  [color=darkseagreen4, key=1, label=int, style=dashed];
m56_191 -> m56_110  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m56_192 -> m56_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_192 -> m56_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_195 -> m56_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_196 -> m56_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_196 -> m56_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_196 -> m56_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_193 -> m56_162  [color=darkseagreen4, key=1, label=name, style=dashed];
m56_193 -> m56_157  [color=darkseagreen4, key=1, label=name, style=dashed];
m56_194 -> m56_162  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m59_39 -> m59_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m59_39 -> m59_16  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m59_39 -> m59_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m59_39 -> m59_21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m59_39 -> m59_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m59_39 -> m59_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m60_121 -> m60_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_119 -> m60_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_119 -> m60_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_119 -> m60_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_120 -> m60_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_57 -> m60_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_57 -> m60_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_149 -> m60_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_150 -> m60_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_70 -> m60_74  [color=green, key=1, label=storedData, style=dashed];
m60_70 -> m60_78  [color=green, key=1, label=storedData, style=dashed];
m60_74 -> m60_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_104 -> m60_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_102 -> m60_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_102 -> m60_104  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_102 -> m60_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_103 -> m60_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_162 -> m60_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_163 -> m60_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_48 -> m60_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_46 -> m60_59  [color=green, key=1, label=string, style=dashed];
m60_46 -> m60_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_46 -> m60_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_46 -> m60_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_46 -> m60_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_46 -> m60_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_46 -> m60_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_52 -> m60_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_182 -> m60_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_181 -> m60_185  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_31 -> m60_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_31 -> m60_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_31 -> m60_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_31 -> m60_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_31 -> m60_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_32 -> m60_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_33 -> m60_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_34 -> m60_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_112 -> m60_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_113 -> m60_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_129 -> m60_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_130 -> m60_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_142 -> m60_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_143 -> m60_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_58 -> m60_74  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m60_58 -> m60_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_58 -> m60_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_76 -> m60_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_169 -> m60_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_170 -> m60_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_136 -> m60_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_137 -> m60_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_175 -> m60_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_176 -> m60_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_95 -> m60_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_96 -> m60_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_17 -> m60_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_14 -> m60_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_14 -> m60_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_14 -> m60_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_14 -> m60_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_14 -> m60_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_15 -> m60_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_16 -> m60_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_84 -> m60_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_84 -> m60_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_84 -> m60_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_85 -> m60_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_86 -> m60_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_155 -> m60_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_156 -> m60_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m60_187 -> m60_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_16  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_17  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_32  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_33  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_34  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_48  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_52  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_76  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_85  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_86  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_96  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_104  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_113  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_121  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_130  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_137  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_143  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_150  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_156  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_163  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_170  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_176  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_182  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_187 -> m60_74  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m60_188 -> m60_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_188 -> m60_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_188 -> m60_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_189 -> m60_21  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m60_189 -> m60_26  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m60_189 -> m60_29  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m60_190 -> m60_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_190 -> m60_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_190 -> m60_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_190 -> m60_59  [color=green, key=1, label="HangFire.Common.States.State", style=dashed];
m60_191 -> m60_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_191 -> m60_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_191 -> m60_59  [color=green, key=1, label=string, style=dashed];
m60_191 -> m60_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_191 -> m60_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_193 -> m60_68  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m60_193 -> m60_67  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m60_194 -> m60_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_194 -> m60_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_195 -> m60_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m60_195 -> m60_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m60_196 -> m60_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_196 -> m60_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_197 -> m60_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_198 -> m60_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_199 -> m60_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_199 -> m60_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_200 -> m60_110  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m60_201 -> m60_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_202 -> m60_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_202 -> m60_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_203 -> m60_127  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m60_204 -> m60_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_205 -> m60_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_206 -> m60_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_207 -> m60_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_208 -> m60_140  [color=darkseagreen4, key=1, label=double, style=dashed];
m60_209 -> m60_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_210 -> m60_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_211 -> m60_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_212 -> m60_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_213 -> m60_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_214 -> m60_159  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_215 -> m60_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_216 -> m60_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m60_217 -> m60_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m60_218 -> m60_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_219 -> m60_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_220 -> m60_185  [color=darkseagreen4, key=1, label=string, style=dashed];
m60_221 -> m60_185  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m61_10 -> m61_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_11 -> m61_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_19 -> m61_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_20 -> m61_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m61_26 -> m61_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m61_27 -> m61_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m61_28 -> m61_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_3 -> m63_6  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m63_3 -> m63_8  [color=green, key=1, label="HangFire.States.JobState", style=dashed];
m63_3 -> m63_15  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m63_8 -> m63_11  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m63_12 -> m63_14  [color=green, key=1, label=recurringAttribute, style=dashed];
m66_0 -> m66_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m66_0 -> m66_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m68_21 -> m68_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m68_21 -> m68_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m68_23 -> m68_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m68_25 -> m68_30  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m68_77 -> m68_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m68_77 -> m68_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m68_77 -> m68_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m68_77 -> m68_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m68_77 -> m68_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m69_4 -> m69_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m69_18 -> m69_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m69_9 -> m69_17  [color=darkseagreen4, key=1, label=fetchQueries, style=dashed];
m69_10 -> m69_17  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m69_11 -> m69_14  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m70_62 -> m70_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_95 -> m70_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_143 -> m70_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_44 -> m70_49  [color=green, key=1, label=string, style=dashed];
m70_181 -> m70_193  [color=darkseagreen4, key=1, label=stats, style=dashed];
m70_184 -> m70_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_184 -> m70_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_184 -> m70_205  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m70_185 -> m70_205  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_84 -> m70_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_45 -> m70_49  [color=green, key=1, label=addStateSql, style=dashed];
m70_107 -> m70_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_108 -> m70_112  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m70_115 -> m70_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_115 -> m70_118  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_51 -> m70_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.Job>", style=dashed];
m70_52 -> m70_57  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_56 -> m70_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_148 -> m70_235  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_208 -> m70_212  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m70_215 -> m70_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_215 -> m70_218  [color=darkseagreen4, key=1, label=keys, style=dashed];
m70_209 -> m70_212  [color=darkseagreen4, key=1, label=dates, style=dashed];
m70_209 -> m70_223  [color=darkseagreen4, key=1, label=dates, style=dashed];
m70_209 -> m70_225  [color=darkseagreen4, key=1, label=dates, style=dashed];
m70_210 -> m70_214  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_214 -> m70_214  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_217 -> m70_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_217 -> m70_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_217 -> m70_219  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m70_217 -> m70_220  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m70_218 -> m70_220  [color=darkseagreen4, key=1, label=key, style=dashed];
m70_221 -> m70_225  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_221 -> m70_227  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_222 -> m70_225  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_222 -> m70_226  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_226 -> m70_226  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_158 -> m70_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_158 -> m70_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_159 -> m70_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_89 -> m70_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_102 -> m70_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_145 -> m70_112  [color=darkseagreen4, key=1, label=int, style=dashed];
m70_146 -> m70_112  [color=darkseagreen4, key=1, label=trimSql, style=dashed];
m70_82 -> m70_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_82 -> m70_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_61 -> m70_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_140 -> m70_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_144 -> m70_112  [color=darkseagreen4, key=1, label=int, style=dashed];
m70_9 -> m70_13  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m70_128 -> m70_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_88 -> m70_90  [color=darkseagreen4, key=1, label=servers, style=dashed];
m70_0 -> m70_3  [color=green, key=1, label=SqlConnection, style=dashed];
m70_30 -> m70_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_83 -> m70_87  [color=green, key=1, label=addSql, style=dashed];
m70_83 -> m70_271  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_37 -> m70_100  [color=green, key=1, label="lambda expression", style=dashed];
m70_39 -> m70_47  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.Job, HangFire.Common.JobMethod, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m70_127 -> m70_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_245 -> m70_248  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m70_245 -> m70_249  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m70_252 -> m70_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_252 -> m70_255  [color=darkseagreen4, key=1, label=keys, style=dashed];
m70_246 -> m70_248  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m70_247 -> m70_249  [color=darkseagreen4, key=1, label=dates, style=dashed];
m70_247 -> m70_262  [color=darkseagreen4, key=1, label=dates, style=dashed];
m70_251 -> m70_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_251 -> m70_260  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m70_254 -> m70_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_254 -> m70_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_254 -> m70_256  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m70_254 -> m70_257  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m70_255 -> m70_257  [color=darkseagreen4, key=1, label=key, style=dashed];
m70_258 -> m70_262  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_258 -> m70_264  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_259 -> m70_262  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_259 -> m70_263  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_263 -> m70_263  [color=darkseagreen4, key=1, label=i, style=dashed];
m70_117 -> m70_3  [color=green, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_12  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_52  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_80  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_84  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_90  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_96  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_117 -> m70_102  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m70_133 -> m70_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_135 -> m70_138  [color=darkseagreen4, key=1, label=result, style=dashed];
m70_135 -> m70_87  [color=darkseagreen4, key=1, label=double, style=dashed];
m70_136 -> m70_87  [color=darkseagreen4, key=1, label=addSql, style=dashed];
m70_138 -> m70_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_139 -> m70_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_280 -> m70_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_81  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_85  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_117  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_146  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_280 -> m70_150  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m70_281 -> m70_205  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m70_282 -> m70_235  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_283 -> m70_271  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_283 -> m70_49  [color=green, key=1, label=string, style=dashed];
m72_114 -> m72_117  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m72_114 -> m72_119  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m72_114 -> m72_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_117 -> m72_120  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_97 -> m72_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_97 -> m72_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_103 -> m72_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_49 -> m72_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m72_49 -> m72_55  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m72_49 -> m72_56  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m72_49 -> m72_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m72_49 -> m72_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m72_49 -> m72_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m72_56 -> m72_61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m72_56 -> m72_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m72_58 -> m72_61  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m72_58 -> m72_63  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m72_60 -> m72_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_54 -> m72_56  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m72_61 -> m72_61  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m72_59 -> m72_61  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m72_0 -> m72_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m72_3 -> m72_43  [color=green, key=1, label="lambda expression", style=dashed];
m72_2 -> m72_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_4 -> m72_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_6 -> m72_55  [color=green, key=1, label="lambda expression", style=dashed];
m72_7 -> m72_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_10 -> m72_78  [color=green, key=1, label="lambda expression", style=dashed];
m72_9 -> m72_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_11 -> m72_85  [color=green, key=1, label="lambda expression", style=dashed];
m72_12 -> m72_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_1 -> m72_36  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m72_8 -> m72_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_13 -> m72_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_14 -> m72_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_15 -> m72_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_16 -> m72_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_17 -> m72_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_20 -> m72_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_21 -> m72_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_22 -> m72_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_22 -> m72_25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m72_23 -> m72_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_24 -> m72_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_25 -> m72_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_26 -> m72_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_27 -> m72_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_29 -> m72_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_29 -> m72_37  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m72_30 -> m72_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m72_30 -> m72_37  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m72_72 -> m72_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_76 -> m72_79  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m72_76 -> m72_80  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m72_76 -> m72_86  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m72_79 -> m72_83  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m72_79 -> m72_82  [color=green, key=1, label=string, style=dashed];
m72_68 -> m72_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_37 -> m72_37  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m72_35 -> m72_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_36 -> m72_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m72_133 -> m72_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_134 -> m72_134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m72_136 -> m72_136  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m72_127 -> m72_130  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_143 -> m72_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_106 -> m72_109  [color=darkseagreen4, key=1, label=double, style=dashed];
m72_106 -> m72_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_90 -> m72_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m72_148 -> m72_153  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m72_155 -> m72_159  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m72_139 -> m72_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_76  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_102  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_111  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_120  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_139 -> m72_136  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m72_242 -> m72_153  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m72_243 -> m72_159  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m73_42 -> m73_39  [color=green, key=1, label="HangFire.Tests.SchedulePollerSteps", style=dashed];
m74_0 -> m74_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m74_20 -> m74_11  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m74_20 -> m74_16  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m76_2 -> m76_6  [color=green, key=1, label="HangFire.Common.JobMethod", style=dashed];
m76_6 -> m76_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m76_6 -> m76_6  [color=green, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m77_119 -> m77_122  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m77_97 -> m77_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m77_49 -> m77_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m77_49 -> m77_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m77_49 -> m77_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m77_56 -> m77_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m77_58 -> m77_63  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m77_0 -> m77_3  [color=green, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m77_22 -> m77_25  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m77_22 -> m77_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m77_32 -> m77_38  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m77_32 -> m77_39  [color=darkseagreen4, key=1, label=idAndQueue, style=dashed];
m77_35 -> m77_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m77_31 -> m77_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m77_31 -> m77_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m77_29 -> m77_34  [color=darkseagreen4, key=1, label=fetchConditions, style=dashed];
m77_30 -> m77_34  [color=darkseagreen4, key=1, label=currentQueryIndex, style=dashed];
m77_36 -> m77_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m77_139 -> m77_139  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m77_104 -> m77_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m77_90 -> m77_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m77_111 -> m77_114  [color=darkseagreen4, key=1, label=double, style=dashed];
m77_144 -> m77_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m77_144 -> m77_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m77_144 -> m77_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m77_144 -> m77_35  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m77_144 -> m77_63  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m79_15 -> m79_18  [color=green, key=1, label=string, style=dashed];
m79_0 -> m79_3  [color=green, key=1, label=StateHandler, style=dashed];
m79_0 -> m79_5  [color=green, key=1, label=StateHandler, style=dashed];
m79_0 -> m79_6  [color=green, key=1, label=StateHandler, style=dashed];
m79_0 -> m79_7  [color=green, key=1, label=StateHandler, style=dashed];
m79_23 -> m79_5  [color=green, key=1, label="HangFire.Common.States.StateHandlerCollection", style=dashed];
m79_23 -> m79_6  [color=green, key=1, label="HangFire.Common.States.StateHandlerCollection", style=dashed];
m79_23 -> m79_7  [color=green, key=1, label="HangFire.Common.States.StateHandlerCollection", style=dashed];
m79_23 -> m79_16  [color=green, key=1, label="HangFire.Common.States.StateHandlerCollection", style=dashed];
m79_23 -> m79_18  [color=green, key=1, label="HangFire.Common.States.StateHandlerCollection", style=dashed];
m81_26 -> m81_5  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m82_92 -> m82_96  [color=green, key=1, label=filter, style=dashed];
m82_93 -> m82_95  [color=green, key=1, label="lambda expression", style=dashed];
m82_26 -> m82_32  [color=green, key=1, label=filter, style=dashed];
m82_27 -> m82_31  [color=green, key=1, label="lambda expression", style=dashed];
m82_117 -> m82_127  [color=green, key=1, label="lambda expression", style=dashed];
m82_118 -> m82_130  [color=green, key=1, label="lambda expression", style=dashed];
m82_121 -> m82_123  [color=green, key=1, label=filter, style=dashed];
m82_76 -> m82_85  [color=green, key=1, label="lambda expression", style=dashed];
m82_77 -> m82_88  [color=green, key=1, label="lambda expression", style=dashed];
m82_47 -> m82_52  [color=green, key=1, label=filter, style=dashed];
m82_48 -> m82_51  [color=green, key=1, label="lambda expression", style=dashed];
m82_56 -> m82_68  [color=green, key=1, label="lambda expression", style=dashed];
m82_57 -> m82_72  [color=green, key=1, label="lambda expression", style=dashed];
m82_2 -> m82_21  [color=green, key=1, label="lambda expression", style=dashed];
m82_100 -> m82_110  [color=green, key=1, label="lambda expression", style=dashed];
m82_101 -> m82_113  [color=green, key=1, label="lambda expression", style=dashed];
m82_104 -> m82_106  [color=green, key=1, label=filter, style=dashed];
m82_137 -> m82_39  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_40  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_41  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_56  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_57  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_61  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_76  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_77  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_81  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_100  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_101  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_105  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_106  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_117  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_118  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_122  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_137 -> m82_123  [color=green, key=1, label="Hangfire.Core.Tests.PreserveCultureAttributeFacts", style=dashed];
m82_138 -> m82_32  [color=green, key=1, label=filter, style=dashed];
m82_139 -> m82_52  [color=green, key=1, label=filter, style=dashed];
m82_140 -> m82_96  [color=green, key=1, label=filter, style=dashed];
m83_281 -> m83_286  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_281 -> m83_285  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_239 -> m83_243  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_239 -> m83_244  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_240 -> m83_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_240 -> m83_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_241 -> m83_244  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_242 -> m83_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_242 -> m83_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_245 -> m83_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_283 -> m83_286  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_284 -> m83_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_284 -> m83_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_287 -> m83_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_155 -> m83_157  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m83_176 -> m83_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_90 -> m83_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_165 -> m83_167  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m83_186 -> m83_188  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m83_186 -> m83_191  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_189 -> m83_191  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_71 -> m83_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_64 -> m83_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_231 -> m83_233  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_231 -> m83_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_215 -> m83_218  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_215 -> m83_219  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_218 -> m83_218  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_219 -> m83_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_261 -> m83_261  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_260 -> m83_260  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_255 -> m83_258  [color=darkseagreen4, key=1, label=entry, style=dashed];
m83_255 -> m83_257  [color=darkseagreen4, key=1, label=entry, style=dashed];
m83_255 -> m83_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_257 -> m83_261  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_257 -> m83_260  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_257 -> m83_27  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_196  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_207  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_217  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_224  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_230  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_233  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_237  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_251  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_257 -> m83_254  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_122 -> m83_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_123 -> m83_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_144 -> m83_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_100 -> m83_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_196 -> m83_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_197 -> m83_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_237 -> m83_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_267 -> m83_267  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_222 -> m83_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_222 -> m83_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_223 -> m83_225  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m83_223 -> m83_226  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m83_225 -> m83_225  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_226 -> m83_226  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_265 -> m83_267  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m83_265 -> m83_268  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m83_268 -> m83_268  [color=darkseagreen4, key=1, label=property, style=dashed];
m83_81 -> m83_83  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m83_271 -> m83_275  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_271 -> m83_274  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_229 -> m83_232  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_229 -> m83_233  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_234 -> m83_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_273 -> m83_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_273 -> m83_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_276 -> m83_276  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_146 -> m83_148  [color=darkseagreen4, key=1, label="?", style=dashed];
m83_103 -> m83_105  [color=darkseagreen4, key=1, label="?", style=dashed];
m83_125 -> m83_127  [color=darkseagreen4, key=1, label="?", style=dashed];
m83_200 -> m83_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_210 -> m83_212  [color=darkseagreen4, key=1, label=history, style=dashed];
m83_252 -> m83_254  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_252 -> m83_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_249 -> m83_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_85 -> m83_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_181 -> m83_183  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_207 -> m83_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_207 -> m83_212  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_208 -> m83_211  [color=darkseagreen4, key=1, label=entry, style=dashed];
m83_250 -> m83_253  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_250 -> m83_254  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_23 -> m83_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m83_292 -> m83_296  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_292 -> m83_295  [color=darkseagreen4, key=1, label=Table, style=dashed];
m83_294 -> m83_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_294 -> m83_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_297 -> m83_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m83_299 -> m83_113  [color=green, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_27  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_62  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_67  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_73  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_77  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_82  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_90  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_98  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_109  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_114  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_117  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_154  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_218  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_237  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_249  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_259  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_266  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_272  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_275  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_279  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_293  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m83_299 -> m83_296  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m84_21 -> m84_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_21 -> m84_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_0 -> m84_2  [color=darkseagreen4, key=1, label=HttpRequestBase, style=dashed];
m84_0 -> m84_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_8 -> m84_8  [color=green, key=1, label=pathInfoIndex, style=dashed];
m84_8 -> m84_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_8 -> m84_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_3 -> m84_8  [color=green, key=1, label=pathInfoIndex, style=dashed];
m84_3 -> m84_5  [color=darkseagreen4, key=1, label=pathInfoIndex, style=dashed];
m84_3 -> m84_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m84_7 -> m84_7  [color=darkseagreen4, key=1, label=sbIndex, style=dashed];
m84_2 -> m84_5  [color=darkseagreen4, key=1, label=pathInfo, style=dashed];
m84_4 -> m84_7  [color=darkseagreen4, key=1, label=sbIndex, style=dashed];
m84_4 -> m84_6  [color=darkseagreen4, key=1, label=sbIndex, style=dashed];
m84_6 -> m84_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m84_1 -> m84_5  [color=darkseagreen4, key=1, label=sb, style=dashed];
m84_1 -> m84_4  [color=darkseagreen4, key=1, label=sb, style=dashed];
m84_1 -> m84_6  [color=darkseagreen4, key=1, label=sb, style=dashed];
m84_1 -> m84_9  [color=darkseagreen4, key=1, label=sb, style=dashed];
m84_9 -> m84_12  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m84_11 -> m84_13  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m84_31 -> m84_12  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m84_31 -> m84_13  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m84_31 -> m84_24  [color=darkseagreen4, key=1, label="Hangfire.Client.CreatingContext", style=dashed];
m85_33 -> m85_36  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m85_33 -> m85_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m85_6 -> m85_9  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m85_6 -> m85_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IJobCreationProcess", style=dashed];
m85_18 -> m85_21  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m85_44 -> m85_25  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m86_9 -> m86_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m86_9 -> m86_14  [color=darkseagreen4, key=1, label=pager, style=dashed];
m86_9 -> m86_46  [color=darkseagreen4, key=1, label=pager, style=dashed];
m86_10 -> m86_16  [color=darkseagreen4, key=1, label=succeededJobs, style=dashed];
m86_16 -> m86_18  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_18 -> m86_18  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_18 -> m86_20  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_20 -> m86_20  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_20 -> m86_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_22 -> m86_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_22 -> m86_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_24 -> m86_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_24 -> m86_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_27 -> m86_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_37 -> m86_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_37 -> m86_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_39 -> m86_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_39 -> m86_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_41 -> m86_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_67 -> m86_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m86_67 -> m86_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m87_16 -> m87_4  [color=green, key=1, label="HangFire.States.SucceededState", style=dashed];
m88_221 -> m88_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_223 -> m88_225  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_224 -> m88_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_59 -> m88_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_254 -> m88_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_255 -> m88_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_257 -> m88_259  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_258 -> m88_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_2 -> m88_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_5 -> m88_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_8 -> m88_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_9 -> m88_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_10 -> m88_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_12 -> m88_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_152 -> m88_157  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_153 -> m88_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_275 -> m88_278  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_276 -> m88_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_277 -> m88_286  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_185 -> m88_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_91 -> m88_94  [color=green, key=1, label="lambda expression", style=dashed];
m88_90 -> m88_95  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_50 -> m88_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_120 -> m88_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_162 -> m88_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_143 -> m88_148  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_144 -> m88_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_313 -> m88_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_315 -> m88_317  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_316 -> m88_323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_312 -> m88_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m88_312 -> m88_324  [color=darkseagreen4, key=1, label=exception, style=dashed];
m88_312 -> m88_327  [color=darkseagreen4, key=1, label=exception, style=dashed];
m88_103 -> m88_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_99 -> m88_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m88_99 -> m88_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m88_99 -> m88_112  [color=darkseagreen4, key=1, label=job, style=dashed];
m88_99 -> m88_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_215 -> m88_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_82 -> m88_87  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_83 -> m88_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_74 -> m88_77  [color=green, key=1, label="lambda expression", style=dashed];
m88_73 -> m88_78  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_170 -> m88_172  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_171 -> m88_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_123 -> m88_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_176 -> m88_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_188 -> m88_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_248 -> m88_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_268 -> m88_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_281 -> m88_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_306 -> m88_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_324 -> m88_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_112 -> m88_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_292 -> m88_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_292 -> m88_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_295 -> m88_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_291 -> m88_295  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m88_291 -> m88_306  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m88_291 -> m88_309  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m88_236 -> m88_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_238 -> m88_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m88_239 -> m88_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_194 -> m88_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_198 -> m88_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_199 -> m88_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_134 -> m88_139  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_135 -> m88_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m88_331 -> m88_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_100  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_123  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_127  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_131  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_161  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_162  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_171  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_184  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_185  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_191  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_221  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_239  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_255  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_258  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_268  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_271  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_276  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_284  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_277  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_299  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_294  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_295  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_306  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_313  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_316  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_324  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_331 -> m88_329  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.StateMachineFacts", style=dashed];
m88_332 -> m88_78  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_333 -> m88_87  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_334 -> m88_95  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_336 -> m88_139  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_338 -> m88_157  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m88_339 -> m88_306  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m88_339 -> m88_309  [color=darkseagreen4, key=1, label=anotherState, style=dashed];
m88_340 -> m88_324  [color=darkseagreen4, key=1, label=exception, style=dashed];
m88_340 -> m88_327  [color=darkseagreen4, key=1, label=exception, style=dashed];
m88_335 -> m88_112  [color=darkseagreen4, key=1, label=job, style=dashed];
m88_337 -> m88_148  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m91_33 -> m91_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_26 -> m91_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_48 -> m91_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_58 -> m91_30  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m91_58 -> m91_37  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m91_58 -> m91_48  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m91_58 -> m91_56  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m92_13 -> m92_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m92_13 -> m92_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m93_40 -> m93_42  [color=darkseagreen4, key=1, label=processingJob, style=dashed];
m93_33 -> m93_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_26 -> m93_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_16 -> m93_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_48 -> m93_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_3 -> m93_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_58 -> m93_3  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m93_58 -> m93_30  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m93_58 -> m93_37  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m93_58 -> m93_48  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
m93_58 -> m93_56  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisProcessingJobFacts", style=dashed];
}
