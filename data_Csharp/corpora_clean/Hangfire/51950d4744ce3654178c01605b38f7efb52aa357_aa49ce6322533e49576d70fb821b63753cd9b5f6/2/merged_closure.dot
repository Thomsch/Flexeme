digraph  {
n7 [label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", span=""];
n0 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
n1 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="17-17"];
n2 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24"];
n3 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="26-26"];
n4 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", label="return (other != null)\r\n                   && this.Equals(other);", span="27-28"];
n5 [cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="24-24"];
n6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="32-32"];
d28 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=green, community=0, label="TryToRequeueTheJob(jobId)", prediction=0, span="94-94"];
d91 [label="HangFire.Server.DequeuedJobsWatcher", span=""];
d18 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="Entry HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", span="45-45"];
d27 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="TimedOutByFetchedTime(fetched) || TimedOutByCheckedTime(fetched, @checked)", span="92-92"];
d29 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="JobServer.RemoveFromFetchedQueue(_redis, jobId, queue)", span="95-95"];
d40 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="Entry HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="100-100"];
d1 [cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", label="_redis.Dispose()", span="21-21"];
d5 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="26-26"];
d7 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label="_redis.AcquireLock(\r\n                    String.Format(''hangfire:queue:{0}:dequeued:lock'', queue),\r\n                    TimeSpan.FromMinutes(1))", span="30-32"];
d8 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label="var jobIds = _redis.GetAllItemsFromList(\r\n                        String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="34-35"];
d10 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label="RequeueJobIfTimedOut(jobId, queue)", span="39-39"];
d21 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="var pipeline = _redis.CreatePipeline()", span="50-50"];
d26 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="_redis.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="83-85"];
d55 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="var jobType = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Type'')", span="102-104"];
d59 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="JobState.Apply(\r\n                    _redis,\r\n                    new EnqueuedState(jobId, ''Requeued due to time out'', queue),\r\n                    recoverFromStates)", span="112-115"];
d60 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(\r\n                        jobId,\r\n                        ''Failed to re-queue the job.'',\r\n                        new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    recoverFromStates)", span="119-125"];
d77 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label="FindAndRequeueTimedOutJobs()", span="155-155"];
d81 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label="_logger.Fatal(\r\n                    ''Unexpected exception caught in the timed out jobs thread. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="164-166"];
d30 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="Exit HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", span="45-45"];
d19 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="string fetched = null", span="47-47"];
d22 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(String.Format(''hangfire:job:{0}:fetched'', jobId)),\r\n                    x => fetched = x)", span="52-54"];
d43 [cluster="lambda expression", label="x.GetValue(String.Format(''hangfire:job:{0}:fetched'', jobId))", span="53-53"];
d23 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(String.Format(''hangfire:job:{0}:checked'', jobId)),\r\n                    x => @checked = x)", span="56-58"];
d50 [cluster="lambda expression", label="x.GetValue(String.Format(''hangfire:job:{0}:checked'', jobId))", span="57-57"];
d25 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="String.IsNullOrEmpty(fetched) && String.IsNullOrEmpty(@checked)", span="63-63"];
d38 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="129-129"];
d39 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="135-135"];
d41 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="97-97"];
d61 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="Exit HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="100-100"];
d0 [cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", label="Entry HangFire.Server.DequeuedJobsWatcher.Dispose()", span="19-19"];
d2 [cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", label="Exit HangFire.Server.DequeuedJobsWatcher.Dispose()", span="19-19"];
d3 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d4 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="24-24"];
d6 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label=queues, span="28-28"];
d12 [cluster="Unk.GetAllItemsFromSet", label="Entry Unk.GetAllItemsFromSet", span=""];
d13 [cluster="Unk.Format", label="Entry Unk.Format", span=""];
d14 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d15 [cluster="Unk.AcquireLock", label="Entry Unk.AcquireLock", span=""];
d9 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label=jobIds, span="37-37"];
d16 [cluster="Unk.GetAllItemsFromList", label="Entry Unk.GetAllItemsFromList", span=""];
d17 [cluster="Unk.RequeueJobIfTimedOut", label="Entry Unk.RequeueJobIfTimedOut", span=""];
d20 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="string @checked = null", span="48-48"];
d31 [cluster="Unk.CreatePipeline", label="Entry Unk.CreatePipeline", span=""];
d24 [cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", label="pipeline.Flush()", span="60-60"];
d35 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d36 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
d37 [cluster="Unk.SetEntry", label="Entry Unk.SetEntry", span=""];
d56 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="var queue = JobHelper.TryToGetQueue(jobType)", span="106-106"];
d62 [cluster="Unk.GetValueFromHash", label="Entry Unk.GetValueFromHash", span=""];
d57 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="var recoverFromStates = new[] { EnqueuedState.Name, ProcessingState.Name }", span="108-108"];
d58 [cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", label="!String.IsNullOrEmpty(queue)", span="110-110"];
d64 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
d65 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
d66 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
d67 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d76 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label=true, span="153-153"];
d78 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label="Thread.Sleep(SleepTimeout)", span="156-156"];
d80 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label=Exception, span="162-162"];
d82 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="149-149"];
d84 [cluster="Unk.Fatal", label="Entry Unk.Fatal", span=""];
d32 [cluster="Unk.QueueCommand", label="Entry Unk.QueueCommand", span=""];
d42 [cluster="lambda expression", label="Entry lambda expression", span="53-53"];
d46 [cluster="lambda expression", label="Entry lambda expression", span="54-54"];
d92 [label=string, span=""];
d44 [cluster="lambda expression", label="Exit lambda expression", span="53-53"];
d45 [cluster="Unk.GetValue", label="Entry Unk.GetValue", span=""];
d49 [cluster="lambda expression", label="Entry lambda expression", span="57-57"];
d52 [cluster="lambda expression", label="Entry lambda expression", span="58-58"];
d51 [cluster="lambda expression", label="Exit lambda expression", span="57-57"];
d34 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d69 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="129-129"];
d68 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="131-132"];
d74 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="135-135"];
d71 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="140-140"];
d73 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="145-146"];
d72 [cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", label="return false;", span="142-142"];
d11 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", label="Exit HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="24-24"];
d33 [cluster="Unk.Flush", label="Entry Unk.Flush", span=""];
d63 [cluster="Unk.TryToGetQueue", label="Entry Unk.TryToGetQueue", span=""];
d75 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="149-149"];
d79 [cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", label=ThreadInterruptedException, span="159-159"];
d83 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
d48 [cluster="lambda expression", label="Exit lambda expression", span="54-54"];
d47 [cluster="lambda expression", label="fetched = x", span="54-54"];
d54 [cluster="lambda expression", label="Exit lambda expression", span="58-58"];
d53 [cluster="lambda expression", label="@checked = x", span="58-58"];
d70 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m0_7 [cluster="Hangfire.Common.GlobalJobFilterCollection.GlobalJobFilterCollection()", file="JobFetcher.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.GlobalJobFilterCollection()", span="37-37"];
m0_9 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="JobFetcher.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m0_12 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="JobFetcher.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m0_11 [cluster="Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", file="JobFetcher.cs", label="Entry Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", span="25-25"];
m0_8 [cluster="Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", file="JobFetcher.cs", label="Entry Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", span="25-25"];
m0_10 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="JobFetcher.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="21-21"];
m0_0 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Entry Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25"];
m0_1 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Filters = new GlobalJobFilterCollection()", span="27-27"];
m0_2 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Filters.Add(new CaptureCultureAttribute())", span="28-28"];
m0_3 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Filters.Add(new AutomaticRetryAttribute())", span="29-29"];
m0_4 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Filters.Add(new StatisticsHistoryAttribute())", span="30-30"];
m0_5 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Filters.Add(new ContinuationsSupportAttribute())", span="31-31"];
m0_6 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="JobFetcher.cs", label="Exit Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25"];
m2_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobServer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_24 [cluster="HangFire.JobActivator.JobActivator()", file="JobServer.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m2_47 [cluster="System.Threading.Thread.Join()", file="JobServer.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m2_110 [cluster="Unk.SetRangeInHash", file="JobServer.cs", label="Entry Unk.SetRangeInHash", span=""];
m2_21 [cluster="string.Format(string, object, object)", file="JobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_28 [cluster="System.Threading.Thread.Start()", file="JobServer.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m2_33 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="79-79"];
m2_34 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobServer.cs", label=_disposed, prediction=1, span="81-81"];
m2_35 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobServer.cs", label="return;", prediction=2, span="82-82"];
m2_36 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_disposed = true", span="84-84"];
m2_37 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobServer.cs", label="_fetchedJobsWatcher.Dispose()", prediction=1, span="86-86"];
m2_38 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_schedulePoller.Dispose()", span="87-87"];
m2_41 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobServer.cs", label="_managerThread.Join()", prediction=1, span="91-91"];
m2_40 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_cts.Cancel()", span="90-90"];
m2_42 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobServer.cs", label="_pool.Dispose()", prediction=1, span="93-93"];
m2_43 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_cts.Dispose()", span="94-94"];
m2_39 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_logger.Info(''Stopping manager thread...'')", span="89-89"];
m2_44 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="79-79"];
m2_49 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="JobServer.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m2_103 [cluster="Unk.AddItemToSet", file="JobServer.cs", label="Entry Unk.AddItemToSet", span=""];
m2_22 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobServer.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11"];
m2_48 [cluster="HangFire.Server.WorkerPool.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.WorkerPool.Dispose()", span="59-59"];
m2_46 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobServer.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_29 [cluster="Unk.Info", file="JobServer.cs", label="Entry Unk.Info", span=""];
m2_67 [cluster="Unk.RemoveEntry", file="JobServer.cs", label="Entry Unk.RemoveEntry", span=""];
m2_109 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m2_18 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobServer.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m2_108 [cluster="int.ToString()", file="JobServer.cs", label="Entry int.ToString()", span="0-0"];
m2_20 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m2_30 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobServer.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m2_0 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="29-29"];
m2_7 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs", label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", prediction=6, span="51-51"];
m2_5 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="pollInterval != pollInterval.Duration()", span="46-46"];
m2_8 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                queues.ToList(),\r\n                concurrency,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", prediction=7, span="53-58"];
m2_9 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_pool = new WorkerPool(_context)", span="60-60"];
m2_11 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs", label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = ''HangFire.Manager'',\r\n                    IsBackground = true\r\n                }", prediction=8, span="63-67"];
m2_10 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_fetcher = new JobFetcher(_redis, _context.Queues)", span="61-61"];
m2_12 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs", label="_managerThread.Start()", prediction=1, span="68-68"];
m2_13 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_logger.Info(''Manager thread has been started.'')", span="70-70"];
m2_15 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobServer.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", prediction=10, span="73-73"];
m2_14 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(pollInterval))", span="72-72"];
m2_1 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="queues == null", span="36-36"];
m2_3 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="concurrency <= 0", span="41-41"];
m2_6 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="48-48"];
m2_2 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="throw new ArgumentNullException(''queues'');", span="38-38"];
m2_4 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="throw new ArgumentOutOfRangeException(''concurrency'', ''Concurrency value can not be negative or zero.'');", span="43-43"];
m2_16 [cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobServer.cs", label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="29-29"];
m2_25 [cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext)", file="JobServer.cs", label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext)", span="18-18"];
m2_31 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="JobServer.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m2_86 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobServer.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m2_107 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_68 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.Work()", span="116-116"];
m2_77 [cluster="HangFire.Server.JobServer.Work()", color=green, community=0, file="JobServer.cs", label="jobId == null", prediction=11, span="137-137"];
m2_74 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="jobId = _fetcher.DequeueJob()", span="132-132"];
m2_75 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="jobId == null", span="133-133"];
m2_76 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="_cts.Token.ThrowIfCancellationRequested()", span="135-135"];
m2_73 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="JobPayload jobId", span="128-128"];
m2_78 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="worker.Process(jobId)", span="139-139"];
m2_69 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="AnnounceServer()", span="120-120"];
m2_70 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="_cts.Token.ThrowIfCancellationRequested()", span="122-122"];
m2_72 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="var worker = _pool.TakeFree(_cts.Token)", span="126-126"];
m2_80 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="_logger.Info(''Shutdown has been requested. Exiting...'')", span="144-144"];
m2_81 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="HideServer()", span="145-145"];
m2_83 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="_logger.Fatal(''Unexpected exception caught in the manager thread. Jobs will not be processed.'', ex)", span="149-149"];
m2_71 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label=true, span="124-124"];
m2_79 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label=OperationCanceledException, span="142-142"];
m2_82 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label=Exception, span="147-147"];
m2_84 [cluster="HangFire.Server.JobServer.Work()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.Work()", span="116-116"];
m2_45 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m2_85 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="153-153"];
m2_92 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="var transaction = _redis.CreateTransaction()", span="155-155"];
m2_93 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="157-158"];
m2_94 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="160-166"];
m2_95 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="_context.Queues", span="168-168"];
m2_97 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName))", span="171-173"];
m2_98 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.Commit()", span="176-176"];
m2_96 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="var queueName = queue", span="170-170"];
m2_99 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="153-153"];
m2_122 [cluster="Unk.RemoveItemFromSet", file="JobServer.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m2_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobServer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_91 [cluster="Unk.Fatal", file="JobServer.cs", label="Entry Unk.Fatal", span=""];
m2_19 [cluster="System.TimeSpan.Duration()", file="JobServer.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m2_26 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobServer.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="17-17"];
m2_123 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="188-190"];
m2_64 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="107-109"];
m2_65 [cluster="lambda expression", color=green, community=0, file="JobServer.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId))", prediction=12, span="107-109"];
m2_66 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="107-109"];
m2_101 [cluster="lambda expression", file="JobServer.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="157-158"];
m2_105 [cluster="lambda expression", file="JobServer.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="160-166"];
m2_112 [cluster="lambda expression", file="JobServer.cs", label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName)", span="171-173"];
m2_120 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="184-186"];
m2_124 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="188-190"];
m2_60 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="102-105"];
m2_59 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="102-105"];
m2_100 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="157-158"];
m2_102 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="157-158"];
m2_104 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="160-166"];
m2_106 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="160-166"];
m2_111 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="171-173"];
m2_113 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="171-173"];
m2_119 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="184-186"];
m2_121 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="184-186"];
m2_125 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="188-190"];
m2_61 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="102-105"];
m2_90 [cluster="HangFire.Server.JobServer.HideServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.HideServer()", span="180-180"];
m2_114 [cluster="HangFire.Server.JobServer.HideServer()", file="JobServer.cs", label="var transaction = _redis.CreateTransaction()", span="182-182"];
m2_115 [cluster="HangFire.Server.JobServer.HideServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="184-186"];
m2_116 [cluster="HangFire.Server.JobServer.HideServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="188-190"];
m2_117 [cluster="HangFire.Server.JobServer.HideServer()", file="JobServer.cs", label="transaction.Commit()", span="192-192"];
m2_118 [cluster="HangFire.Server.JobServer.HideServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.HideServer()", span="180-180"];
m2_63 [cluster="Unk.RemoveItemFromList", file="JobServer.cs", label="Entry Unk.RemoveItemFromList", span=""];
m2_58 [cluster="Unk.Commit", file="JobServer.cs", label="Entry Unk.Commit", span=""];
m2_32 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="JobServer.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="9-9"];
m2_88 [cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobServer.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="26-26"];
m2_57 [cluster="Unk.QueueCommand", file="JobServer.cs", label="Entry Unk.QueueCommand", span=""];
m2_87 [cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobServer.cs", label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="34-34"];
m2_53 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", color=green, community=0, file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId)))", prediction=12, span="107-109"];
m2_51 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", color=green, community=0, file="JobServer.cs", label="var transaction = redis.CreateTransaction()", prediction=12, span="100-100"];
m2_50 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobServer.cs", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="97-97"];
m2_52 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="102-105"];
m2_54 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobServer.cs", label="transaction.Commit()", span="111-111"];
m2_55 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobServer.cs", label="Exit HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="97-97"];
m2_56 [cluster="Unk.CreateTransaction", file="JobServer.cs", label="Entry Unk.CreateTransaction", span=""];
m2_27 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobServer.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m2_89 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobServer.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="70-70"];
m2_126 [file="JobServer.cs", label="HangFire.Server.JobServer", span=""];
m2_127 [file="JobServer.cs", label=string, span=""];
m2_129 [file="JobServer.cs", label=queueName, span=""];
m2_128 [file="JobServer.cs", label=string, span=""];
m3_2 [cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="Program.cs", label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", span="23-23"];
m3_3 [cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", file="Program.cs", label="Exit Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext)", span="23-23"];
m3_0 [cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="Program.cs", label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22"];
m3_1 [cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="Program.cs", label="Exit Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22"];
m4_2 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11"];
m4_3 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", color=green, community=0, file="ServerContext.cs", label="ServerName = serverName", prediction=15, span="18-18"];
m4_4 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", label="Queues = queues", span="19-19"];
m4_5 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", label="WorkersCount = workersCount", span="20-20"];
m4_6 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", label="Activator = activator", span="21-21"];
m4_0 [cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ServerContext.cs", label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6"];
m4_1 [cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ServerContext.cs", label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6"];
m4_7 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", label="HangFire.Server.ServerContext", span=""];
m4_8 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ServerContext.cs", label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11"];
m4_9 [file="ServerContext.cs", label="HangFire.Server.ServerContext", span=""];
m5_8 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_83 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", span="10-10"];
m5_43 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="119-119"];
m5_61 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m5_85 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="Worker.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m5_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="JobServer.RemoveFromFetchedQueue(\r\n                    Redis, payload.Id, payload.Queue)", span="188-189"];
m5_20 [cluster="System.Threading.Thread.Start()", file="Worker.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m5_44 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m5_10 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Worker.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m5_33 [cluster="System.Threading.ManualResetEventSlim.Set()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m5_21 [cluster="HangFire.Server.Worker.Stop()", file="Worker.cs", label="Entry HangFire.Server.Worker.Stop()", span="68-68"];
m5_24 [cluster="HangFire.Server.Worker.Dispose()", color=green, community=0, file="Worker.cs", label="_jobIsReady.Dispose()", prediction=16, span="85-85"];
m5_25 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Exit HangFire.Server.Worker.Dispose()", span="80-80"];
m5_26 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m5_41 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_jobIsReady.Dispose()", span="121-121"];
m5_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="36-36"];
m5_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="Worker.cs", label="_context = context", span="42-42"];
m5_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="Worker.cs", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="46-46"];
m5_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="Worker.cs", label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="48-52"];
m5_9 [cluster="Unk.GetLogger", file="Worker.cs", label="Entry Unk.GetLogger", span=""];
m5_59 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m5_46 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Entry HangFire.Server.Worker.DoWork()", span="125-125"];
m5_47 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=true, span="129-129"];
m5_53 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label=OperationCanceledException, span="141-141"];
m5_54 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="_context.Performer.PerformJob(performContext)", span="148-148"];
m5_49 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="_jobIsReady.Wait(_cts.Token)", span="132-132"];
m5_50 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Exception exception = null", span="137-137"];
m5_51 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="PerformJob(_jobPayload)", span="136-136"];
m5_52 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _context.Activator, payload)", span="142-143"];
m5_55 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label=Exception, span="150-150"];
m5_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="exception = ex", span="152-152"];
m5_34 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Entry HangFire.Server.Worker.Dispose()", span="108-108"];
m5_30 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="_jobPayload = payload", span="102-102"];
m5_31 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="_jobIsReady.Set()", span="105-105"];
m5_57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=green, community=0, file="Worker.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", prediction=16, span="154-156"];
m5_88 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
m5_19 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Worker.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_11 [cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs", label="Entry HangFire.Server.Worker.SendStop()", span="47-47"];
m5_12 [cluster="HangFire.Server.Worker.SendStop()", color=green, community=0, file="Worker.cs", label="_cts.Cancel()", prediction=16, span="49-49"];
m5_15 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="_thread.Start()", span="64-64"];
m5_17 [cluster="HangFire.Server.Worker.Start()", file="Worker.cs", label="Exit HangFire.Server.Worker.Start()", span="55-55"];
m5_81 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
m5_84 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="Worker.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m5_63 [cluster="Unk.Fatal", file="Worker.cs", label="Entry Unk.Fatal", span=""];
m5_87 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
m5_18 [cluster="System.Diagnostics.Debug.Assert(bool, string)", file="Worker.cs", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
m5_82 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="Worker.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m5_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label=Redis, span="166-166"];
m5_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="155-155"];
m5_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label=Redis, span="157-157"];
m5_74 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="191-193"];
m5_77 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="207-210"];
m5_78 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="214-217"];
m5_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="return;", span="165-165"];
m5_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Exception exception = null", span="174-174"];
m5_68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="ServerJobDescriptor jobDescriptor = null", span="176-176"];
m5_70 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="182-183"];
m5_72 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label=Exception, span="187-187"];
m5_75 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label=Redis, span="203-203"];
m5_73 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="HangFire.Server.Worker", span=""];
m5_76 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="exception == null", span="205-205"];
m5_80 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="155-155"];
m5_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.WorkerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="36-36"];
m5_89 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="Worker.cs", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="100-100"];
m5_40 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_cts.Dispose()", span="120-120"];
m5_42 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Exit HangFire.Server.Worker.Dispose()", span="108-108"];
m5_86 [cluster="Unk.Error", file="Worker.cs", label="Entry Unk.Error", span=""];
m5_45 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m5_27 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="96-96"];
m5_29 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label=_jobLock, span="100-100"];
m5_32 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="96-96"];
m5_90 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
m6_0 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="8-8"];
m6_1 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs", label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="8-8"];
m6_2 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerContext.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13"];
m6_3 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerContext.cs", label="WorkerNumber = workerNumber", span="16-16"];
m6_4 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="WorkerContext.cs", label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="13-13"];
m6_5 [file="WorkerContext.cs", label="HangFire.Server.WorkerContext", span=""];
m7_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m7_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m7_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m7_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m7_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m7_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m7_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m7_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m7_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m7_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m7_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m7_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m7_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m7_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m7_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerPool.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m7_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerPool.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
n7 -> n4  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", style=dashed];
d91 -> d28  [color=green, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d1  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d7  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d10  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d26  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d29  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d59  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d60  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d77  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d91 -> d81  [color=darkseagreen4, key=1, label="HangFire.Server.DequeuedJobsWatcher", style=dashed];
d18 -> d28  [color=green, key=1, label=string, style=dashed];
d18 -> d43  [color=darkseagreen4, key=1, label=string, style=dashed];
d18 -> d50  [color=darkseagreen4, key=1, label=string, style=dashed];
d18 -> d26  [color=darkseagreen4, key=1, label=string, style=dashed];
d18 -> d29  [color=darkseagreen4, key=1, label=string, style=dashed];
d40 -> d59  [color=darkseagreen4, key=1, label=string, style=dashed];
d40 -> d60  [color=darkseagreen4, key=1, label=string, style=dashed];
d21 -> d24  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
d55 -> d60  [color=darkseagreen4, key=1, label=jobType, style=dashed];
d22 -> d27  [color=darkseagreen4, key=1, label=fetched, style=dashed];
d22 -> d42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d22 -> d46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d22 -> d25  [color=darkseagreen4, key=1, label=fetched, style=dashed];
d23 -> d27  [color=darkseagreen4, key=1, label="@checked", style=dashed];
d23 -> d49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d23 -> d52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d23 -> d25  [color=darkseagreen4, key=1, label="@checked", style=dashed];
d39 -> d73  [color=darkseagreen4, key=1, label=string, style=dashed];
d6 -> d10  [color=darkseagreen4, key=1, label=queue, style=dashed];
d56 -> d59  [color=darkseagreen4, key=1, label=queue, style=dashed];
d56 -> d58  [color=darkseagreen4, key=1, label=queue, style=dashed];
d57 -> d59  [color=darkseagreen4, key=1, label=recoverFromStates, style=dashed];
d57 -> d60  [color=darkseagreen4, key=1, label=recoverFromStates, style=dashed];
d92 -> d43  [color=darkseagreen4, key=1, label=string, style=dashed];
d92 -> d50  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_5 -> m2_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_74 -> m2_77  [color=green, key=1, label=jobId, style=dashed];
m2_74 -> m2_78  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_72 -> m2_78  [color=darkseagreen4, key=1, label=worker, style=dashed];
m2_92 -> m2_94  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_92 -> m2_97  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_92 -> m2_98  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_93 -> m2_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_94 -> m2_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_97 -> m2_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_96 -> m2_112  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m2_114 -> m2_116  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_114 -> m2_117  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_115 -> m2_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_116 -> m2_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_53 -> m2_64  [color=green, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_53  [color=green, key=1, label=transaction, style=dashed];
m2_51 -> m2_54  [color=green, key=1, label=transaction, style=dashed];
m2_50 -> m2_53  [color=green, key=1, label=string, style=dashed];
m2_50 -> m2_65  [color=green, key=1, label=string, style=dashed];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_50 -> m2_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_52 -> m2_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_126 -> m2_12  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_34  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_37  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_41  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_42  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_13  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_43  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_70  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_76  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_80  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_81  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_83  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_93  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_101  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_94  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_105  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_95  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_97  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_112  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_115  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_120  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_116  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_126 -> m2_124  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m2_127 -> m2_65  [color=green, key=1, label=string, style=dashed];
m2_127 -> m2_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_129 -> m2_112  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m2_128 -> m2_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_2 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.Server.JobPerformer", style=dashed];
m4_9 -> m4_7  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m5_43 -> m5_57  [color=green, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_43 -> m5_77  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_43 -> m5_78  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_43 -> m5_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_56 -> m5_76  [color=darkseagreen4, key=1, label=exception, style=dashed];
m5_56 -> m5_78  [color=darkseagreen4, key=1, label=exception, style=dashed];
m5_60 -> m5_74  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_60 -> m5_77  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_60 -> m5_78  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m5_73 -> m5_76  [color=darkseagreen4, key=1, label=exception, style=dashed];
m5_73 -> m5_78  [color=darkseagreen4, key=1, label=exception, style=dashed];
m5_73 -> m5_12  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_24  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_57  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_55  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_73 -> m5_54  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_15  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_40  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_51  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_55  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m5_90 -> m5_74  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
}
