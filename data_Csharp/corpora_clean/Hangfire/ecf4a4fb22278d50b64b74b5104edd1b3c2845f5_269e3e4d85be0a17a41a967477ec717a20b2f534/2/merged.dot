digraph  {
n33 [label="HangFire.AutomaticRetryAttribute", span=""];
n0 [label="Entry HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
n1 [label="Attempts = DefaultRetryAttempts", span="16-16", cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
n2 [label="LogEvents = true", span="17-17", cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
n3 [label="Exit HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="14-14", cluster="HangFire.AutomaticRetryAttribute.AutomaticRetryAttribute()"];
n4 [label="Entry HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n5 [label="var failedState = context.CandidateState as FailedState", span="37-37", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n8 [label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="44-44", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n11 [label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="50-50", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n12 [label="context.CandidateState = new ScheduledState(delay)\r\n                {\r\n                    Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n                }", span="54-57", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n14 [label="Logger.WarnFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        failedState.Exception,\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay)", span="61-67", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n16 [label="Logger.ErrorFormat(\r\n                        ''Failed to process the job '{0}': an exception occurred.'',\r\n                        failedState.Exception,\r\n                        context.JobId)", span="74-77", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n6 [label="failedState == null", span="38-38", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n7 [label="return;", span="41-41", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n9 [label="retryAttempt <= Attempts", span="46-46", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n18 [label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54", cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)"];
n10 [label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="48-48", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n15 [label=LogEvents, span="72-72", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n19 [label="Entry HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83", cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)"];
n20 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n21 [label="Entry HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49", cluster="HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)"];
n13 [label=LogEvents, span="59-59", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n22 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)"];
n23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n17 [label="Exit HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)", span="35-35", cluster="HangFire.AutomaticRetryAttribute.OnStateElection(HangFire.States.ElectStateContext)"];
n25 [label="Entry Unk.ErrorFormat", span="", cluster="Unk.ErrorFormat"];
n24 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat"];
n26 [label="var random = new Random()", span="85-85", cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)"];
n27 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="86-87", cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)"];
n29 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()"];
n28 [label="Exit HangFire.AutomaticRetryAttribute.SecondsToDelay(long)", span="83-83", cluster="HangFire.AutomaticRetryAttribute.SecondsToDelay(long)"];
n30 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)"];
n31 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)"];
n32 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)"];
m0_19 [label="Entry HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="71-71", cluster="HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJob.cs"];
m0_39 [label="Entry HangFire.IBackgroundJobClient.Delete(string)", span="204-204", cluster="HangFire.IBackgroundJobClient.Delete(string)", file="BackgroundJob.cs"];
m0_49 [label="Entry HangFire.IBackgroundJobClient.Requeue(string)", span="249-249", cluster="HangFire.IBackgroundJobClient.Requeue(string)", file="BackgroundJob.cs"];
m0_30 [label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148", cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJob.cs"];
m0_31 [label="var client = ClientFactory()", span="150-150", cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=red, community=0, file="BackgroundJob.cs"];
m0_32 [label="return client.Schedule(methodCall, delay);", span="152-152", cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=red, community=0, file="BackgroundJob.cs"];
m0_33 [label="Exit HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148", cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJob.cs"];
m0_34 [label="Entry HangFire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123", cluster="HangFire.IBackgroundJobClient.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJob.cs"];
m0_15 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="96-96", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJob.cs"];
m0_16 [label="var client = ClientFactory()", span="98-98", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_17 [label="return client.Enqueue(methodCall, queue);", span="100-100", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_18 [label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", span="96-96", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJob.cs"];
m0_29 [label="Entry HangFire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106", cluster="HangFire.IBackgroundJobClient.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs"];
m0_35 [label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164", cluster="HangFire.BackgroundJob.Delete(string)", file="BackgroundJob.cs"];
m0_36 [label="var client = ClientFactory()", span="166-166", cluster="HangFire.BackgroundJob.Delete(string)", color=red, community=0, file="BackgroundJob.cs"];
m0_37 [label="return client.Delete(jobId);", span="168-168", cluster="HangFire.BackgroundJob.Delete(string)", color=red, community=0, file="BackgroundJob.cs"];
m0_38 [label="Exit HangFire.BackgroundJob.Delete(string)", span="164-164", cluster="HangFire.BackgroundJob.Delete(string)", file="BackgroundJob.cs"];
m0_54 [label="Entry HangFire.IBackgroundJobClient.Requeue(string, string)", span="265-265", cluster="HangFire.IBackgroundJobClient.Requeue(string, string)", file="BackgroundJob.cs"];
m0_10 [label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJob.cs"];
m0_11 [label="var client = ClientFactory()", span="80-80", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=red, community=0, file="BackgroundJob.cs"];
m0_12 [label="return client.Enqueue(methodCall);", span="82-82", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", color=red, community=0, file="BackgroundJob.cs"];
m0_13 [label="Exit HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJob.cs"];
m0_14 [label="Entry HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53", cluster="HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJob.cs"];
m0_45 [label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197", cluster="HangFire.BackgroundJob.Requeue(string)", file="BackgroundJob.cs"];
m0_46 [label="var client = ClientFactory()", span="199-199", cluster="HangFire.BackgroundJob.Requeue(string)", color=red, community=0, file="BackgroundJob.cs"];
m0_47 [label="return client.Requeue(jobId);", span="201-201", cluster="HangFire.BackgroundJob.Requeue(string)", color=red, community=0, file="BackgroundJob.cs"];
m0_48 [label="Exit HangFire.BackgroundJob.Requeue(string)", span="197-197", cluster="HangFire.BackgroundJob.Requeue(string)", file="BackgroundJob.cs"];
m0_25 [label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="131-131", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs"];
m0_26 [label="var client = ClientFactory()", span="133-133", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", color=red, community=0, file="BackgroundJob.cs"];
m0_27 [label="return client.Schedule(methodCall, delay);", span="135-135", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", color=red, community=0, file="BackgroundJob.cs"];
m0_28 [label="Exit HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="131-131", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs"];
m0_20 [label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="115-115", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJob.cs"];
m0_21 [label="var client = ClientFactory()", span="117-117", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_22 [label="return client.Enqueue(methodCall, queue);", span="119-119", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_23 [label="Exit HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="115-115", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJob.cs"];
m0_0 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="BackgroundJob.cs"];
m0_1 [label="new BackgroundJobClient(JobStorage.Current)", span="28-28", cluster="lambda expression", file="BackgroundJob.cs"];
m0_2 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="BackgroundJob.cs"];
m0_9 [label="Entry HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="35-35", cluster="HangFire.IBackgroundJobClient.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs"];
m0_44 [label="Entry HangFire.IBackgroundJobClient.Delete(string, string)", span="233-233", cluster="HangFire.IBackgroundJobClient.Delete(string, string)", file="BackgroundJob.cs"];
m0_40 [label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182", cluster="HangFire.BackgroundJob.Delete(string, string)", file="BackgroundJob.cs"];
m0_41 [label="var client = ClientFactory()", span="184-184", cluster="HangFire.BackgroundJob.Delete(string, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_42 [label="return client.Delete(jobId, fromState);", span="186-186", cluster="HangFire.BackgroundJob.Delete(string, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_43 [label="Exit HangFire.BackgroundJob.Delete(string, string)", span="182-182", cluster="HangFire.BackgroundJob.Delete(string, string)", file="BackgroundJob.cs"];
m0_24 [label="Entry HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90", cluster="HangFire.IBackgroundJobClient.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJob.cs"];
m0_4 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs"];
m0_5 [label="var client = ClientFactory()", span="62-62", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="BackgroundJob.cs"];
m0_6 [label="return client.Enqueue(methodCall);", span="64-64", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="BackgroundJob.cs"];
m0_7 [label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs"];
m0_3 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJob.cs"];
m0_8 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="BackgroundJob.cs"];
m0_50 [label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215", cluster="HangFire.BackgroundJob.Requeue(string, string)", file="BackgroundJob.cs"];
m0_51 [label="var client = ClientFactory()", span="217-217", cluster="HangFire.BackgroundJob.Requeue(string, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_52 [label="return client.Requeue(jobId, fromState);", span="219-219", cluster="HangFire.BackgroundJob.Requeue(string, string)", color=red, community=0, file="BackgroundJob.cs"];
m0_53 [label="Exit HangFire.BackgroundJob.Requeue(string, string)", span="215-215", cluster="HangFire.BackgroundJob.Requeue(string, string)", file="BackgroundJob.cs"];
m1_36 [label="state == null", span="103-103", cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="BackgroundJobClient.cs"];
m1_113 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobClient.cs"];
m1_4 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="BackgroundJobClient.cs"];
m1_5 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="BackgroundJobClient.cs"];
m1_291 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="BackgroundJobClient.cs"];
m1_30 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs"];
m1_133 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="BackgroundJobClient.cs"];
m1_43 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs"];
m1_45 [label="Exit HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", color=green, community=0, file="BackgroundJobClient.cs"];
m1_44 [label="_connection.Dispose()", span="115-115", cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs", color=red, community=0];
m1_46 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", color=green, community=0, file="BackgroundJobClient.cs"];
m1_51 [label=scheduledJobs, span="99-99", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_56 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_47 [label="HangFire.BackgroundJobClient", span="", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_48 [label="var jobs = new Dictionary<string, List<string>>()", span="94-94", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_53 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="BackgroundJobClient.cs"];
m1_50 [label="var pipeline = Redis.CreatePipeline()", span="97-97", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_52 [label="var job = scheduledJob", span="101-101", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_54 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="BackgroundJobClient.cs"];
m1_49 [label="var states = new Dictionary<string, string>()", span="95-95", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_55 [label="pipeline.Flush()", span="116-116", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_57 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="BackgroundJobClient.cs"];
m1_38 [label="var stateMachine = _stateMachineFactory.Create(_connection)", span="105-105", cluster="HangFire.BackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="BackgroundJobClient.cs", color=red, community=0];
m1_214 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="BackgroundJobClient.cs"];
m1_386 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="BackgroundJobClient.cs"];
m1_29 [label="Exit HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs"];
m1_31 [label="Entry HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", span="28-28", cluster="HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", file="BackgroundJobClient.cs"];
m1_359 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="BackgroundJobClient.cs"];
m1_33 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76", cluster="lambda expression", file="BackgroundJobClient.cs", color=green, community=0];
m1_34 [label="Exit lambda expression", span="66-76", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_39 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", color=red, community=0, file="BackgroundJobClient.cs"];
m1_35 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="BackgroundJobClient.cs"];
m1_37 [label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9", cluster="HangFire.JobHelper.TryToGetQueue(string)", file="BackgroundJobClient.cs"];
m1_40 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_197 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="BackgroundJobClient.cs"];
m1_60 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="BackgroundJobClient.cs"];
m1_76 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="BackgroundJobClient.cs"];
m1_23 [label="throw new ArgumentNullException(''state'');", span="84-84", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs"];
m1_26 [label="return context.JobId;", span="91-91", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", color=red, community=0, file="BackgroundJobClient.cs"];
m1_25 [label="_process.Run(context)", span="89-89", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", color=red, community=0];
m1_24 [label="var context = new CreateContext(_connection, _stateMachineFactory, job, state)", span="88-88", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs", color=red, community=0];
m1_27 [label=Exception, span="93-93", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs"];
m1_134 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="BackgroundJobClient.cs"];
m1_257 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="BackgroundJobClient.cs"];
m1_17 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40", cluster="HangFire.Web.JobStorage.FailedCount()", file="BackgroundJobClient.cs"];
m1_173 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_331 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="520-522", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_333 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="526-528", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_328 [label="var pipeline = redis.CreatePipeline()", span="514-514", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_326 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="511-511", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_330 [label="var id = jobId", span="518-518", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_332 [label="stateProperties != null", span="524-524", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_327 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="512-512", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_329 [label=jobIds, span="516-516", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_334 [label="pipeline.Flush()", span="532-532", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_324 [label="jobIds.Count == 0", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_335 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="535-545", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_325 [label="return new List<KeyValuePair<string, T>>();", span="509-509", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_336 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="502-502", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundJobClient.cs"];
m1_361 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="BackgroundJobClient.cs"];
m1_0 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="BackgroundJobClient.cs"];
m1_1 [label=Redis, span="14-14", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="BackgroundJobClient.cs"];
m1_345 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobClient.cs"];
m1_11 [label="process == null", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_12 [label="throw new ArgumentNullException(''process'');", span="73-73", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_13 [label="_connection = storage.GetConnection()", span="75-75", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", color=red, community=0];
m1_14 [label="_stateMachineFactory = stateMachineFactory", span="76-76", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_219 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_278 [label="var result = new Dictionary<DateTime, long>()", span="455-455", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_277 [label="var valuesMap = redis.GetValuesMap(keys)", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_279 [label="var i = 0", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_284 [label="result.Add(dates[i], value)", span="464-464", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_286 [label="return result;", span="467-467", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_276 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="452-452", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_282 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="459-459", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_280 [label="i < dates.Count", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_285 [label="i++", span="456-456", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_270 [label="var dates = new List<DateTime>()", span="445-445", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_283 [label="value = 0", span="461-461", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_273 [label="dates.Add(endDate)", span="448-448", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_269 [label="var endDate = DateTime.UtcNow", span="444-444", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_272 [label="i < 24", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_281 [label="long value", span="458-458", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_271 [label="var i = 0", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_274 [label="endDate = endDate.AddHours(-1)", span="449-449", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_275 [label="i++", span="446-446", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_287 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="441-441", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_232 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="BackgroundJobClient.cs"];
m1_42 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_58 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="BackgroundJobClient.cs"];
m1_132 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="BackgroundJobClient.cs"];
m1_234 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="BackgroundJobClient.cs"];
m1_258 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="BackgroundJobClient.cs"];
m1_236 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_238 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="398-398", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_237 [label=Redis, span="396-396", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_239 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="399-399", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_242 [label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="406-410", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_240 [label="String.IsNullOrEmpty(queue)", span="401-401", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_241 [label="return false;", span="403-403", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_243 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="394-394", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="BackgroundJobClient.cs"];
m1_174 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="BackgroundJobClient.cs"];
m1_317 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BackgroundJobClient.cs"];
m1_41 [label="x.Value.StartedAt", span="76-76", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_360 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="BackgroundJobClient.cs"];
m1_318 [label="Entry lambda expression", span="483-483", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_32 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="BackgroundJobClient.cs"];
m1_64 [label="Entry lambda expression", span="104-106", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_69 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_70 [label="jobs.Add(job.Key, x)", span="107-107", cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs"];
m1_71 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_73 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_77 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_74 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112", cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs"];
m1_75 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_84 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_142 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_152 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_195 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_204 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_212 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_130 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_80 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_83 [label="Entry lambda expression", span="121-129", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_65 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_78 [label="states.Add(job.Key, x)", span="113-113", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_66 [label="Exit lambda expression", span="104-106", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_120 [label="servers.Add(name, x)", span="173-173", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_127 [label="queues.Add(name, x)", span="178-178", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_343 [label="jobs.Add(id, x)", span="522-522", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_351 [label="states.Add(id, x)", span="528-528", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_79 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_117 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_123 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_177 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_183 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_189 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_322 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="484-484", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_427 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="594-594", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_339 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="521-521", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_347 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="527-527", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_141 [label="Entry lambda expression", span="209-219", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_151 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_203 [label="Entry lambda expression", span="320-326", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_211 [label="Entry lambda expression", span="344-352", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_85 [label="Exit lambda expression", span="121-129", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_143 [label="Exit lambda expression", span="209-219", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_153 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_194 [label="Entry lambda expression", span="284-290", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_196 [label="Exit lambda expression", span="284-290", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_205 [label="Exit lambda expression", span="320-326", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_213 [label="Exit lambda expression", span="344-352", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_129 [label="Entry lambda expression", span="184-191", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_131 [label="Exit lambda expression", span="184-191", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_82 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_81 [label="job.Key", span="120-120", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_116 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_119 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_122 [label="Entry lambda expression", span="176-177", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_126 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_176 [label="Entry lambda expression", span="264-265", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_179 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_182 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_185 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_188 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_191 [label="Entry lambda expression", span="274-274", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_338 [label="Entry lambda expression", span="521-521", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_341 [label="Entry lambda expression", span="522-522", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_346 [label="Entry lambda expression", span="527-527", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_349 [label="Entry lambda expression", span="528-528", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_387 [label="Entry lambda expression", span="567-567", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_391 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_394 [label="Entry lambda expression", span="571-571", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_397 [label="Entry lambda expression", span="572-572", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_400 [label="Entry lambda expression", span="575-575", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_403 [label="Entry lambda expression", span="576-576", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_406 [label="Entry lambda expression", span="579-579", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_409 [label="Entry lambda expression", span="580-580", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_412 [label="Entry lambda expression", span="583-583", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_416 [label="Entry lambda expression", span="584-584", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_420 [label="Entry lambda expression", span="587-587", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_423 [label="Entry lambda expression", span="588-588", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_426 [label="Entry lambda expression", span="594-594", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_429 [label="Entry lambda expression", span="595-595", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_121 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_128 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_342 [label="!jobs.ContainsKey(id)", span="522-522", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_344 [label="Exit lambda expression", span="522-522", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_350 [label="!states.ContainsKey(id)", span="528-528", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_352 [label="Exit lambda expression", span="528-528", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_118 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_124 [label="Exit lambda expression", span="176-177", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_178 [label="Exit lambda expression", span="264-265", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_184 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_190 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_321 [label="Entry lambda expression", span="484-484", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_323 [label="Exit lambda expression", span="484-484", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_428 [label="Exit lambda expression", span="594-594", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_340 [label="Exit lambda expression", span="521-521", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_348 [label="Exit lambda expression", span="527-527", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_259 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_263 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_266 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_181 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_180 [label="firstJobIds = x", span="266-266", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_187 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_186 [label="length = x", span="270-270", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_193 [label="Exit lambda expression", span="274-274", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_192 [label="dequeued = x", span="274-274", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_357 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="542-544", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_354 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="536-541", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_392 [label="stats.Servers = x", span="568-568", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_398 [label="stats.Queues = x", span="572-572", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_404 [label="stats.Scheduled = x", span="576-576", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_410 [label="stats.Processing = x", span="580-580", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_417 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="584-584", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_424 [label="stats.Failed = x", span="588-588", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_430 [label="stats.Enqueued += x", span="595-595", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_389 [label="Exit lambda expression", span="567-567", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_388 [label="x.GetSetCount(''hangfire:servers'')", span="567-567", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_393 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_396 [label="Exit lambda expression", span="571-571", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_395 [label="x.GetSetCount(''hangfire:queues'')", span="571-571", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_399 [label="Exit lambda expression", span="572-572", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_402 [label="Exit lambda expression", span="575-575", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_401 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="575-575", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_405 [label="Exit lambda expression", span="576-576", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_408 [label="Exit lambda expression", span="579-579", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_407 [label="x.GetSortedSetCount(''hangfire:processing'')", span="579-579", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_411 [label="Exit lambda expression", span="580-580", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_414 [label="Exit lambda expression", span="583-583", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_413 [label="x.GetValue(''hangfire:stats:succeeded'')", span="583-583", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_418 [label="Exit lambda expression", span="584-584", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_422 [label="Exit lambda expression", span="587-587", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_421 [label="x.GetSortedSetCount(''hangfire:failed'')", span="587-587", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_425 [label="Exit lambda expression", span="588-588", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_431 [label="Exit lambda expression", span="595-595", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_260 [label="!hiddenProperties.Contains(x.Key)", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_261 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_265 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_264 [label="x.Key", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_268 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_267 [label="x.Value", span="435-435", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_353 [label="Entry lambda expression", span="536-541", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_356 [label="Entry lambda expression", span="542-544", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_358 [label="Exit lambda expression", span="542-544", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_362 [label="Entry lambda expression", span="544-544", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_355 [label="Exit lambda expression", span="536-541", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_294 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="452-452", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_293 [label="Entry lambda expression", span="452-452", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_364 [label="Exit lambda expression", span="544-544", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_363 [label="y == null", span="544-544", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_295 [label="Exit lambda expression", span="452-452", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_319 [label="x.ToString(''yyyy-MM-dd'')", span="483-483", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_320 [label="Exit lambda expression", span="483-483", cluster="lambda expression", file="BackgroundJobClient.cs"];
m1_28 [label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="BackgroundJobClient.cs"];
m1_175 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobClient.cs"];
m1_115 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BackgroundJobClient.cs"];
m1_67 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="BackgroundJobClient.cs"];
m1_220 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs"];
m1_222 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs"];
m1_221 [label=Redis, span="366-366", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs"];
m1_223 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="BackgroundJobClient.cs"];
m1_61 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="BackgroundJobClient.cs"];
m1_135 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs"];
m1_138 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs"];
m1_137 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs"];
m1_136 [label=Redis, span="197-197", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs"];
m1_139 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="BackgroundJobClient.cs"];
m1_2 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs"];
m1_3 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs"];
m1_144 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="BackgroundJobClient.cs"];
m1_87 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50", cluster="HangFire.JobHelper.FromTimestamp(long)", file="BackgroundJobClient.cs"];
m1_296 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="BackgroundJobClient.cs"];
m1_145 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs"];
m1_148 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs"];
m1_147 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs"];
m1_146 [label=Redis, span="225-225", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs"];
m1_149 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="BackgroundJobClient.cs"];
m1_172 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="BackgroundJobClient.cs"];
m1_290 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="BackgroundJobClient.cs"];
m1_150 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="BackgroundJobClient.cs"];
m1_155 [label="Entry HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_164 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_165 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_166 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_163 [label="var pipeline = Redis.CreatePipeline()", span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_159 [label=queues, span="255-255", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_168 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_169 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_167 [label="pipeline.Flush()", span="276-276", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_162 [label="long dequeued = 0", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_157 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_158 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_160 [label="IList<string> firstJobIds = null", span="257-257", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_170 [label="return result;", span="301-301", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_161 [label="long length = 0", span="258-258", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_156 [label=Redis, span="250-250", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_171 [label="Exit HangFire.Web.JobStorage.Queues()", span="248-248", cluster="HangFire.Web.JobStorage.Queues()", file="BackgroundJobClient.cs"];
m1_88 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs"];
m1_90 [label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs"];
m1_89 [label=Redis, span="135-135", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs"];
m1_91 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="BackgroundJobClient.cs"];
m1_154 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="BackgroundJobClient.cs"];
m1_62 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="BackgroundJobClient.cs"];
m1_419 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="BackgroundJobClient.cs"];
m1_72 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BackgroundJobClient.cs"];
m1_97 [label="Entry HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_107 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_108 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_102 [label="var servers = new Dictionary<string, List<string>>()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_103 [label="var queues = new Dictionary<string, List<string>>()", span="161-161", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_104 [label="var pipeline = Redis.CreatePipeline()", span="163-163", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_106 [label="var name = serverName", span="167-167", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_105 [label=serverNames, span="165-165", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_100 [label="serverNames.Count == 0", span="155-155", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_110 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_109 [label="pipeline.Flush()", span="181-181", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_99 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_101 [label="return new List<ServerDto>();", span="157-157", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_98 [label=Redis, span="151-151", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_111 [label="Exit HangFire.Web.JobStorage.Servers()", span="149-149", cluster="HangFire.Web.JobStorage.Servers()", file="BackgroundJobClient.cs"];
m1_369 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_374 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="566-568", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_375 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="570-572", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_376 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="574-576", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_377 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="578-580", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_378 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="582-584", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_379 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="586-588", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_382 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="593-595", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_373 [label="var pipeline = Redis.CreatePipeline()", span="564-564", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_371 [label="var stats = new StatisticsDto()", span="560-560", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_380 [label=queues, span="590-590", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_381 [label="var queueName = queue", span="592-592", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_383 [label="pipeline.Flush()", span="598-598", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_372 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="562-562", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_370 [label=Redis, span="558-558", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_384 [label="return stats;", span="601-601", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_385 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="556-556", cluster="HangFire.Web.JobStorage.GetStatistics()", file="BackgroundJobClient.cs"];
m1_365 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs"];
m1_367 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="552-552", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs"];
m1_366 [label=Redis, span="550-550", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs"];
m1_368 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="548-548", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="BackgroundJobClient.cs"];
m1_215 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs"];
m1_217 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs"];
m1_216 [label=Redis, span="358-358", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs"];
m1_218 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="BackgroundJobClient.cs"];
m1_235 [label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="BackgroundJobClient.cs"];
m1_288 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="BackgroundJobClient.cs"];
m1_92 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_307 [label="var result = new Dictionary<DateTime, long>()", span="488-488", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_306 [label="var valuesMap = redis.GetValuesMap(keys)", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_308 [label="var i = 0", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_313 [label="result.Add(dates[i], value)", span="496-496", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_315 [label="return result;", span="499-499", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_298 [label="var endDate = DateTime.UtcNow.Date", span="473-473", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_305 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_311 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_309 [label="i < stringDates.Count", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_314 [label="i++", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_300 [label="var dates = new List<DateTime>()", span="475-475", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_312 [label="value = 0", span="494-494", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_302 [label="dates.Add(endDate)", span="479-479", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_299 [label="var startDate = endDate.AddDays(-7)", span="474-474", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_301 [label="startDate <= endDate", span="477-477", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_303 [label="endDate = endDate.AddDays(-1)", span="480-480", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_304 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="483-483", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_310 [label="long value", span="491-491", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_316 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="470-470", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="BackgroundJobClient.cs"];
m1_15 [label="_process = process", span="77-77", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_16 [label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_18 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="BackgroundJobClient.cs"];
m1_255 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="BackgroundJobClient.cs"];
m1_244 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_246 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="418-418", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_250 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="423-424", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_252 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="430-437", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_245 [label=Redis, span="416-416", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_247 [label="job.Count == 0", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_249 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="421-421", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_251 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="426-428", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_248 [label="return null;", span="419-419", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_253 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="414-414", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="BackgroundJobClient.cs"];
m1_292 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobClient.cs"];
m1_7 [label="storage == null", span="71-71", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_6 [label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_8 [label="throw new ArgumentNullException(''storage'');", span="71-71", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_254 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="BackgroundJobClient.cs"];
m1_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="BackgroundJobClient.cs"];
m1_337 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="BackgroundJobClient.cs"];
m1_390 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="BackgroundJobClient.cs"];
m1_206 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_209 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_208 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_207 [label=Redis, span="333-333", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_210 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_9 [label="stateMachineFactory == null", span="72-72", cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs"];
m1_10 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="BackgroundJobClient.cs"];
m1_19 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs"];
m1_20 [label=Redis, span="46-46", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs"];
m1_22 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs"];
m1_21 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="BackgroundJobClient.cs"];
m1_93 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs"];
m1_95 [label="return GetTimelineStats(Redis, ''failed'');", span="145-145", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs"];
m1_94 [label=Redis, span="143-143", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs"];
m1_96 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="BackgroundJobClient.cs"];
m1_256 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClient.cs"];
m1_86 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="BackgroundJobClient.cs"];
m1_59 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobClient.cs"];
m1_233 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJobClient.cs"];
m1_289 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="BackgroundJobClient.cs"];
m1_125 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="BackgroundJobClient.cs"];
m1_262 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundJobClient.cs"];
m1_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BackgroundJobClient.cs"];
m1_112 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="BackgroundJobClient.cs"];
m1_140 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="BackgroundJobClient.cs"];
m1_415 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="BackgroundJobClient.cs"];
m1_68 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="BackgroundJobClient.cs"];
m1_224 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_226 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_225 [label=Redis, span="374-374", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_227 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_230 [label="return JobState.Apply(\r\n                    Redis,\r\n                    jobId,\r\n                    new EnqueuedState(''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-390", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_228 [label="String.IsNullOrEmpty(queue)", span="379-379", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_229 [label="return false;", span="381-381", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_231 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="BackgroundJobClient.cs"];
m1_198 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_201 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_200 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_199 [label=Redis, span="308-308", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_202 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="BackgroundJobClient.cs"];
m1_432 [label=job, span="", file="BackgroundJobClient.cs"];
m1_433 [label=jobs, span="", file="BackgroundJobClient.cs"];
m1_434 [label=states, span="", file="BackgroundJobClient.cs"];
m1_436 [label=servers, span="", file="BackgroundJobClient.cs"];
m1_437 [label=queues, span="", file="BackgroundJobClient.cs"];
m1_435 [label=name, span="", file="BackgroundJobClient.cs"];
m1_443 [label=id, span="", file="BackgroundJobClient.cs"];
m1_444 [label=jobs, span="", file="BackgroundJobClient.cs"];
m1_446 [label=states, span="", file="BackgroundJobClient.cs"];
m1_438 [label=queue, span="", file="BackgroundJobClient.cs"];
m1_441 [label=string, span="", file="BackgroundJobClient.cs"];
m1_449 [label=queueName, span="", file="BackgroundJobClient.cs"];
m1_442 [label="string[]", span="", file="BackgroundJobClient.cs"];
m1_445 [label="string[]", span="", file="BackgroundJobClient.cs"];
m1_447 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="BackgroundJobClient.cs"];
m1_448 [label=stats, span="", file="BackgroundJobClient.cs"];
m1_439 [label=hiddenProperties, span="", file="BackgroundJobClient.cs"];
m1_440 [label=string, span="", file="BackgroundJobClient.cs"];
m3_7 [label="Entry HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs"];
m3_8 [label="var stateMock = new Mock<State>()", span="20-20", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs"];
m3_9 [label="stateMock.CallBase = true", span="21-21", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs"];
m3_10 [label="Assert.Empty(stateMock.Object.SerializeData())", span="23-23", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs"];
m3_11 [label="Exit HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18", cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="BackgroundJobFacts.cs"];
m3_5 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="BackgroundJobFacts.cs"];
m3_6 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundJobFacts.cs"];
m3_13 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="BackgroundJobFacts.cs"];
m3_12 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="BackgroundJobFacts.cs"];
m3_0 [label="Entry HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs"];
m3_1 [label="var stateMock = new Mock<State>()", span="11-11", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs"];
m3_2 [label="stateMock.CallBase = true", span="12-12", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs"];
m3_3 [label="Assert.False(stateMock.Object.ExpireJobOnApply)", span="14-14", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs"];
m3_4 [label="Exit HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9", cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="BackgroundJobFacts.cs"];
m4_30 [label="Entry HangFire.Storage.IMonitoringApi.FailedByDatesCount()", span="48-48", cluster="HangFire.Storage.IMonitoringApi.FailedByDatesCount()", file="DashboardPage.generated.cs"];
m4_33 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="DashboardPage.generated.cs"];
m4_25 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DashboardPage.generated.cs"];
m4_31 [label="Entry HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49", cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="DashboardPage.generated.cs"];
m4_27 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="DashboardPage.generated.cs"];
m4_26 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DashboardPage.generated.cs"];
m4_35 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="DashboardPage.generated.cs"];
m4_34 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="DashboardPage.generated.cs"];
m4_29 [label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47", cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="DashboardPage.generated.cs"];
m4_32 [label="Entry HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", span="50-50", cluster="HangFire.Storage.IMonitoringApi.HourlyFailedJobs()", file="DashboardPage.generated.cs"];
m4_28 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="DashboardPage.generated.cs"];
m4_0 [label="Entry HangFire.Web.Pages.DashboardPage.Execute()", span="51-51", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_1 [label="WriteLiteral(''\r\n'')", span="55-55", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_2 [label="Layout = new LayoutPage { Title = ''Dashboard'' }", span="67-67", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_3 [label="IDictionary<DateTime, long> succeeded = null", span="68-68", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_4 [label="IDictionary<DateTime, long> failed = null", span="69-69", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_18 [label="succeeded != null && failed != null", span="119-119", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_20 [label="Write(JsonConvert.SerializeObject(succeeded))", span="130-130", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_5 [label="var period = Request.QueryString[''period'']?? ''day''", span="71-71", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_22 [label="Write(JsonConvert.SerializeObject(failed))", span="140-140", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_6 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="73-73", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_7 [label="''week''.Equals(period, StringComparison.OrdinalIgnoreCase)", span="75-75", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_10 [label="''day''.Equals(period, StringComparison.OrdinalIgnoreCase)", span="80-80", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_14 [label="Write(''day''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="98-98", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_16 [label="Write(''week''.Equals(period, StringComparison.OrdinalIgnoreCase) ? ''active'' : null)", span="109-109", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_8 [label="succeeded = monitor.SucceededByDatesCount()", span="77-77", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_9 [label="failed = monitor.FailedByDatesCount()", span="78-78", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_11 [label="succeeded = monitor.HourlySucceededJobs()", span="82-82", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_12 [label="failed = monitor.HourlyFailedJobs()", span="83-83", cluster="HangFire.Web.Pages.DashboardPage.Execute()", color=red, community=0, file="DashboardPage.generated.cs"];
m4_13 [label="WriteLiteral(''\r\n<h3>Realtime graph</h3>\r\n<div id=\''realtimeGraph\''></div>\r\n\r\n<h3>\r\n    <div class'' +\r\n''=\''btn-group pull-right\'' style=\''margin-top: 2px;\''>\r\n        <a href=\''?period=day\'''' +\r\n'' class=\''btn btn-sm btn-default '')", span="91-93", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_15 [label="WriteLiteral(''\''>\r\n            Day\r\n        </a>\r\n        <a href=\''?period=week\'' class=\''btn btn-'' +\r\n''sm btn-default '')", span="103-104", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_17 [label="WriteLiteral(''\''>Week</a>\r\n    </div>\r\n    History graph\r\n</h3>\r\n\r\n'')", span="114-114", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_19 [label="WriteLiteral(''    <div id=\''historyGraph\'' \r\n          data-succeeded=\'''')", span="125-125", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_21 [label="WriteLiteral(''\'' \r\n          data-failed=\'''')", span="135-135", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_23 [label="WriteLiteral(''\''>\r\n    </div>\r\n'')", span="145-145", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_24 [label="Exit HangFire.Web.Pages.DashboardPage.Execute()", span="51-51", cluster="HangFire.Web.Pages.DashboardPage.Execute()", file="DashboardPage.generated.cs"];
m4_36 [label="HangFire.Web.Pages.DashboardPage", span="", file="DashboardPage.generated.cs"];
m5_64 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="DeletedJobsPage.generated.cs"];
m5_23 [label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="180-180", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", color=green, community=0];
m5_21 [label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="170-170", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", color=green, community=0];
m5_26 [label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="196-197", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", color=green, community=0];
m5_22 [label="WriteLiteral('' '')", span="175-175", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs", color=green, community=0];
m5_61 [label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45", cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="DeletedJobsPage.generated.cs"];
m5_0 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="DeletedJobsPage.generated.cs"];
m5_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, false, null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_2 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="DeletedJobsPage.generated.cs"];
m5_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="DeletedJobsPage.generated.cs"];
m5_5 [label="new CreatedContext(null, false, null)", span="16-16", cluster="lambda expression", file="DeletedJobsPage.generated.cs", color=red, community=0];
m5_8 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_12 [label="var exception = new Exception()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_17 [label="Assert.Same(exception, context.Exception)", span="33-33", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="DeletedJobsPage.generated.cs", color=red, community=0];
m5_54 [label="Write(RenderPartial(new Paginator(pager)))", span="381-381", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_7 [label="Entry HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="26-26", cluster="HangFire.Client.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_11 [label="var state = new Mock<IState>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="DeletedJobsPage.generated.cs", color=red, community=0];
m5_19 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_13 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="DeletedJobsPage.generated.cs", color=red, community=0];
m5_14 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="28-29", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_53 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="370-370", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_18 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_52 [label="WriteLiteral(''                    </tr>\r\n'')", span="360-360", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_20 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_15 [label="var context = new CreatedContext(createContext, true, exception)", span="30-30", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_16 [label="Assert.True(context.Canceled)", span="32-32", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", color=red, community=0, file="DeletedJobsPage.generated.cs"];
m5_24 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="DeletedJobsPage.generated.cs"];
m5_25 [label="Entry Unk.True", span="", cluster="Unk.True", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_29 [label="Exit lambda expression", span="23-23", cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_27 [label="Entry lambda expression", span="23-23", cluster="lambda expression", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_30 [label="Entry HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="36-36", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_28 [label="TestMethod()", span="23-23", cluster="lambda expression", file="DeletedJobsPage.generated.cs", color=red, community=0];
m5_31 [label="Exit HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="36-36", cluster="HangFire.Core.Tests.Client.CreatedContextFacts.TestMethod()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_32 [label="Write(HtmlHelper.JobId(job.Key))", span="233-233", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_33 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="238-238", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_34 [label="job.Value != null && !job.Value.InDeletedState", span="243-243", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_35 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="249-250", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_36 [label="WriteLiteral(''                        </td>\r\n\r\n'')", span="260-260", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_37 [label="job.Value == null", span="265-265", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_38 [label="WriteLiteral(''                            <td colspan=\''2\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", span="271-272", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_39 [label="WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", span="284-285", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_40 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="290-290", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_41 [label="WriteLiteral(''\''>\r\n                                    '')", span="295-295", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_42 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="300-300", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_43 [label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", span="305-305", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=1, file="DeletedJobsPage.generated.cs"];
m5_45 [label="job.Value.DeletedAt.HasValue", span="314-314", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_44 [label="WriteLiteral(''                            <td class=\''align-right\''>\r\n'')", span="309-309", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_46 [label="WriteLiteral(''                                    <span data-moment=\'''')", span="320-320", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_51 [label="WriteLiteral(''                            </td>\r\n'')", span="350-350", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_47 [label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", span="325-325", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_48 [label="WriteLiteral(''\''>\r\n                                        '')", span="330-330", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_49 [label="Write(job.Value.DeletedAt)", span="335-335", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", color=green, community=0, file="DeletedJobsPage.generated.cs"];
m5_50 [label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="340-340", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="DeletedJobsPage.generated.cs"];
m5_55 [label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53", cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="DeletedJobsPage.generated.cs"];
m5_60 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="DeletedJobsPage.generated.cs"];
m5_58 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="DeletedJobsPage.generated.cs"];
m5_56 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="DeletedJobsPage.generated.cs"];
m5_66 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="DeletedJobsPage.generated.cs"];
m5_63 [label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="DeletedJobsPage.generated.cs"];
m5_65 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="DeletedJobsPage.generated.cs"];
m5_70 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DeletedJobsPage.generated.cs"];
m5_67 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="DeletedJobsPage.generated.cs"];
m5_68 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="DeletedJobsPage.generated.cs"];
m5_59 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="DeletedJobsPage.generated.cs"];
m5_57 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="DeletedJobsPage.generated.cs"];
m5_62 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="DeletedJobsPage.generated.cs"];
m5_69 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="DeletedJobsPage.generated.cs"];
m5_71 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="DeletedJobsPage.generated.cs"];
m5_72 [label="HangFire.Web.Pages.DeletedJobsPage", span="", file="DeletedJobsPage.generated.cs"];
m6_61 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="EnqueuedJobsPage.generated.cs"];
m6_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="93-93", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs"];
m6_0 [label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="EnqueuedJobsPage.generated.cs"];
m6_1 [label="innerComponent == null", span="26-26", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=green, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_2 [label="throw new ArgumentNullException(''innerComponent'');", span="26-26", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="EnqueuedJobsPage.generated.cs", color=green, community=0];
m6_3 [label="InnerComponent = innerComponent", span="27-27", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="EnqueuedJobsPage.generated.cs", color=green, community=0];
m6_4 [label="Exit Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="EnqueuedJobsPage.generated.cs"];
m6_9 [label="InnerComponent.Execute(cancellationToken)", span="37-37", cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=green, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_6 [label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_7 [label=true, span="34-34", cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=green, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_8 [label="cancellationToken.ThrowIfCancellationRequested()", span="36-36", cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=green, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_10 [label="Exit Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_12 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="EnqueuedJobsPage.generated.cs"];
m6_17 [label="Hangfire.Server.InfiniteLoopComponent", span="", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_49 [label="Write(RenderPartial(new Paginator(pager)))", span="373-373", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_11 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_19 [label=enqueuedJobs, span="186-186", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs"];
m6_13 [label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="41-41", cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_14 [label="return InnerComponent.ToString();", span="43-43", cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", color=green, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_15 [label="Exit Hangfire.Server.InfiniteLoopComponent.ToString()", span="41-41", cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_16 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_18 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>State</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Enqueued</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="165-181", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_20 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover '')", span="192-192", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_48 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="362-362", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_21 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="197-197", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_22 [label="WriteLiteral(''\''>\r\n                        <td>\r\n                            <input type=\''checkb'' +\r\n''ox\'' class=\''js-jobs-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="202-203", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_23 [label="Write(job.Key)", span="208-208", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_24 [label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <a href=\'''')", span="213-214", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_25 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="219-219", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_26 [label="WriteLiteral(''\''>\r\n                                '')", span="224-224", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_27 [label="Write(HtmlHelper.JobId(job.Key))", span="229-229", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_28 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="234-234", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_29 [label="!job.Value.InEnqueuedState", span="239-239", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs"];
m6_30 [label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="245-246", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_31 [label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <span class=\''label label-default\'' style=\'''')", span="256-257", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_32 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="262-262", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_33 [label="WriteLiteral(''\''>\r\n                                '')", span="267-267", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_34 [label="Write(job.Value.State)", span="272-272", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_35 [label="WriteLiteral(''\r\n                            </span>\r\n                        </td>\r\n           '' +\r\n''             <td>\r\n                            <a class=\''job-method\'' href=\'''')", span="277-278", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_36 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="283-283", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_37 [label="WriteLiteral(''\''>\r\n                                '')", span="288-288", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_38 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="293-293", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_39 [label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", span="298-299", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=1, file="EnqueuedJobsPage.generated.cs"];
m6_40 [label="job.Value.EnqueuedAt.HasValue", span="304-304", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs"];
m6_41 [label="WriteLiteral(''                                <span data-moment=\'''')", span="310-310", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_46 [label="WriteLiteral(''                                <em>n/a</em>\r\n'')", span="342-342", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_42 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="315-315", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_43 [label="WriteLiteral(''\''>\r\n                                    '')", span="320-320", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_44 [label="Write(job.Value.EnqueuedAt)", span="325-325", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_45 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="330-330", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_47 [label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="352-352", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="EnqueuedJobsPage.generated.cs"];
m6_50 [label="Exit HangFire.Web.Pages.EnqueuedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="EnqueuedJobsPage.generated.cs"];
m6_67 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs"];
m6_60 [label="Entry HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", span="29-29", cluster="HangFire.Storage.IMonitoringApi.EnqueuedJobs(string, int, int)", file="EnqueuedJobsPage.generated.cs"];
m6_58 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="EnqueuedJobsPage.generated.cs"];
m6_56 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="EnqueuedJobsPage.generated.cs"];
m6_51 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="EnqueuedJobsPage.generated.cs"];
m6_53 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="EnqueuedJobsPage.generated.cs"];
m6_63 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="EnqueuedJobsPage.generated.cs"];
m6_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedJobsPage.generated.cs"];
m6_62 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="EnqueuedJobsPage.generated.cs"];
m6_66 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="EnqueuedJobsPage.generated.cs"];
m6_59 [label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39", cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="EnqueuedJobsPage.generated.cs"];
m6_69 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedJobsPage.generated.cs"];
m6_64 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="EnqueuedJobsPage.generated.cs"];
m6_65 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="EnqueuedJobsPage.generated.cs"];
m6_57 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="EnqueuedJobsPage.generated.cs"];
m6_52 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="EnqueuedJobsPage.generated.cs"];
m6_55 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="EnqueuedJobsPage.generated.cs"];
m6_68 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="EnqueuedJobsPage.generated.cs"];
m6_70 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="EnqueuedJobsPage.generated.cs"];
m6_71 [label="HangFire.Web.Pages.EnqueuedJobsPage", span="", file="EnqueuedJobsPage.generated.cs"];
m7_0 [label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="FailedJobsPage.generated.cs"];
m7_1 [label="_command = command", span="28-28", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_2 [label="Exit HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26", cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="FailedJobsPage.generated.cs"];
m7_13 [label="Entry Unk.GetValues", span="", cluster="Unk.GetValues", file="FailedJobsPage.generated.cs"];
m7_3 [label="Entry HangFire.Web.BatchCommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="FailedJobsPage.generated.cs"];
m7_4 [label="var request = HttpContext.Current.Request", span="33-33", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_5 [label="var jobIds = request.Form.GetValues(''jobs[]'')", span="34-34", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_6 [label="jobIds == null", span="36-36", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_9 [label=jobIds, span="42-42", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_7 [label="Response.StatusCode = 422", span="38-38", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_8 [label="return;", span="39-39", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_10 [label="_command(jobId)", span="44-44", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_11 [label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="47-47", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", color=green, community=0, file="FailedJobsPage.generated.cs"];
m7_12 [label="Exit HangFire.Web.BatchCommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.BatchCommandHandler.ProcessRequest()", file="FailedJobsPage.generated.cs"];
m7_14 [label="Entry Unk._command", span="", cluster="Unk._command", file="FailedJobsPage.generated.cs"];
m7_15 [label="HangFire.Web.BatchCommandHandler", span="", file="FailedJobsPage.generated.cs"];
m8_56 [label="Entry HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", span="30-30", cluster="HangFire.Storage.IMonitoringApi.FetchedJobs(string, int, int)", file="FetchedJobsPage.generated.cs"];
m8_57 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="FetchedJobsPage.generated.cs"];
m8_63 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="FetchedJobsPage.generated.cs"];
m8_54 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="FetchedJobsPage.generated.cs"];
m8_52 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="FetchedJobsPage.generated.cs"];
m8_47 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="FetchedJobsPage.generated.cs"];
m8_0 [label="Entry HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m8_1 [label="WriteLiteral(''\r\n'')", span="66-66", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_2 [label="Layout = new LayoutPage\r\n        {\r\n            Title = Queue.ToUpperInvariant(),\r\n            Subtitle = ''Fetched jobs'',\r\n            Breadcrumbs = new Dictionary<string, string>\r\n                {\r\n                    { ''Queues'', Request.LinkTo(''/queues'') },\r\n                    { Queue.ToUpperInvariant(), Request.LinkTo(''/queues/'' + Queue) }\r\n                },\r\n            BreadcrumbsTitle = ''Fetched jobs'',\r\n        }", span="80-90", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m8_3 [label="int from, perPage", span="92-92", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m8_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="94-94", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m8_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="95-95", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m8_9 [label="pager = new Pager(from, perPage, monitor.FetchedCount(Queue))\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/queues/fetched/'' + Queue)\r\n        }", span="102-105", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_6 [label="Pager pager", span="97-97", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_7 [label="JobList<FetchedJobDto> fetchedJobs", span="98-98", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="100-100", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_10 [label="fetchedJobs = monitor\r\n            .FetchedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="107-108", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_12 [label="pager.TotalPageCount == 0", span="120-120", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", color=green, community=0];
m8_19 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="179-179", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_45 [label="Write(RenderPartial(new Paginator(pager)))", span="349-349", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_11 [label="WriteLiteral(''\r\n'')", span="115-115", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_21 [label=fetchedJobs, span="205-205", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", color=green, community=0];
m8_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        The queue is empty.\r\n    </div>\r\n'')", span="126-126", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_14 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="138-140", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_15 [label="Write(Request.LinkTo(''/enqueued/requeue''))", span="145-145", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_16 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-repeat''''></span>\r\n                Requeue jobs\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="150-157", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_17 [label="Write(Request.LinkTo(''/enqueued/delete''))", span="162-162", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_18 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="167-174", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_20 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>State</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Fetched</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="184-200", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_22 [label="WriteLiteral(''                    <tr class=\''js-jobs-list-row hover\''>\r\n                        '' +\r\n''<td>\r\n                            <input type=\''checkbox\'' class=\''js-jobs-list-che'' +\r\n''ckbox\'' name=\''jobs[]\'' value=\'''')", span="211-213", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_44 [label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="338-338", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_23 [label="Write(job.Key)", span="218-218", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_24 [label="WriteLiteral(''\'' />\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <a href=\'''')", span="223-224", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_25 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="229-229", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_26 [label="WriteLiteral(''\''>'')", span="234-234", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_27 [label="Write(HtmlHelper.JobId(job.Key))", span="239-239", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_28 [label="WriteLiteral(''</a>\r\n                        </td>\r\n                        <td class=\''min-width'' +\r\n''\''>\r\n                            <span class=\''label label-default\'' style=\'''')", span="244-245", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_29 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="250-250", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_30 [label="WriteLiteral(''\''>\r\n                                '')", span="255-255", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_31 [label="Write(job.Value.State)", span="260-260", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_32 [label="WriteLiteral(''\r\n                            </span>\r\n                        </td>\r\n           '' +\r\n''             <td>\r\n                            <a class=\''job-method\'' href=\'''')", span="265-266", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_33 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="271-271", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_34 [label="WriteLiteral(''\''>\r\n                                '')", span="276-276", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_35 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="281-281", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_36 [label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", span="286-287", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_37 [label="job.Value.FetchedAt.HasValue", span="292-292", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs", color=green, community=0];
m8_38 [label="WriteLiteral(''                                <span data-moment=\'''')", span="298-298", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_43 [label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="328-328", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_39 [label="Write(JobHelper.ToStringTimestamp(job.Value.FetchedAt.Value))", span="303-303", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_40 [label="WriteLiteral(''\''>\r\n                                    '')", span="308-308", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_41 [label="Write(job.Value.FetchedAt)", span="313-313", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=green, community=0, file="FetchedJobsPage.generated.cs"];
m8_42 [label="WriteLiteral(''\r\n                                </span>\r\n'')", span="318-318", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", color=red, community=0, file="FetchedJobsPage.generated.cs"];
m8_46 [label="Exit HangFire.Web.Pages.FetchedJobsPage.Execute()", span="62-62", cluster="HangFire.Web.Pages.FetchedJobsPage.Execute()", file="FetchedJobsPage.generated.cs"];
m8_49 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="FetchedJobsPage.generated.cs"];
m8_59 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="FetchedJobsPage.generated.cs"];
m8_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FetchedJobsPage.generated.cs"];
m8_58 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs"];
m8_62 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="FetchedJobsPage.generated.cs"];
m8_65 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FetchedJobsPage.generated.cs"];
m8_60 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="FetchedJobsPage.generated.cs"];
m8_61 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="FetchedJobsPage.generated.cs"];
m8_53 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="FetchedJobsPage.generated.cs"];
m8_48 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="FetchedJobsPage.generated.cs"];
m8_51 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="FetchedJobsPage.generated.cs"];
m8_55 [label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="FetchedJobsPage.generated.cs"];
m8_64 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="FetchedJobsPage.generated.cs"];
m8_66 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="FetchedJobsPage.generated.cs"];
m8_67 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="FetchedJobsPage.generated.cs"];
m9_0 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs"];
m9_1 [label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="42-42", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="IBackgroundJobClient.cs"];
m9_2 [label="Entry HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55", cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs"];
m9_3 [label="Exit HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", span="55-55", cluster="HangFire.IBackgroundJobClient.ChangeState(string, HangFire.States.IState, string)", file="IBackgroundJobClient.cs"];
m10_6 [label="_context = new Mock<CreateContext>(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="25-26", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs"];
m10_7 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", span="17-17", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs"];
m10_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="IMonitoringApi.cs"];
m10_11 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="IMonitoringApi.cs"];
m10_38 [label="x.CreateJob()", span="47-47", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_39 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_72 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="IMonitoringApi.cs"];
m10_12 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs"];
m10_4 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="22-22", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs", color=green, community=0];
m10_5 [label="_filters = new List<object>()", span="24-24", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="IMonitoringApi.cs"];
m10_0 [label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24", cluster="HangFire.Storage.IMonitoringApi.Queues()", file="IMonitoringApi.cs"];
m10_3 [label="Exit HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="IMonitoringApi.cs"];
m10_2 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="IMonitoringApi.cs"];
m10_1 [label="Exit HangFire.Storage.IMonitoringApi.Queues()", span="24-24", cluster="HangFire.Storage.IMonitoringApi.Queues()", file="IMonitoringApi.cs"];
m10_25 [label="Exit HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39", cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs"];
m10_34 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", span="41-41", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="IMonitoringApi.cs"];
m10_35 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="IMonitoringApi.cs"];
m10_32 [label="process.Run(_context.Object)", span="45-45", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="IMonitoringApi.cs"];
m10_33 [label="_context.Verify(x => x.CreateJob(), Times.Once)", span="47-47", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsCreateJobMethod()", file="IMonitoringApi.cs"];
m10_42 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="53-53", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs"];
m10_43 [label="var process = CreateProcess()", span="54-54", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs"];
m10_13 [label="Exit HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32", cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs"];
m10_18 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="30-30", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="IMonitoringApi.cs"];
m10_19 [label="var process = CreateProcess()", span="32-32", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="IMonitoringApi.cs"];
m10_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="IMonitoringApi.cs"];
m10_9 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="IMonitoringApi.cs"];
m10_97 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_98 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="104-104", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_101 [label="_filters.Add(filter.Object)", span="109-109", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_102 [label="var process = CreateProcess()", span="111-111", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_103 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="114-114", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_99 [label="var filter = new Mock<IClientExceptionFilter>()", span="105-105", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_100 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="106-107", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_104 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="101-101", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="IMonitoringApi.cs"];
m10_106 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="IMonitoringApi.cs"];
m10_41 [label="Exit HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", span="49-49", cluster="HangFire.Storage.IMonitoringApi.HourlySucceededJobs()", file="IMonitoringApi.cs"];
m10_44 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="56-57", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs"];
m10_45 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="51-51", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="IMonitoringApi.cs"];
m10_251 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_254 [label="_filters.Add(outerFilter.Object)", span="250-250", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_255 [label="_filters.Add(innerFilter.Object)", span="251-251", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_257 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="254-254", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_258 [label="var process = CreateProcess()", span="256-256", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_259 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="259-260", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_252 [label="var outerFilter = new Mock<IClientFilter>()", span="247-247", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_253 [label="var innerFilter = new Mock<IClientFilter>()", span="248-248", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_256 [label="var exception = new InvalidOperationException()", span="253-253", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_260 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="262-262", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_261 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="244-244", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="IMonitoringApi.cs"];
m10_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="IMonitoringApi.cs"];
m10_53 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_55 [label="_filters.Add(filter.Object)", span="64-64", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_56 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="66-66", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_57 [label="var process = CreateProcess()", span="67-67", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_58 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="69-70", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_54 [label="var filter = new Mock<IClientExceptionFilter>()", span="63-63", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_59 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="72-73", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_60 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="61-61", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="IMonitoringApi.cs"];
m10_24 [label="Entry HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", span="39-39", cluster="HangFire.Storage.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs"];
m10_61 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="IMonitoringApi.cs"];
m10_29 [label="Exit HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41", cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="IMonitoringApi.cs"];
m10_119 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_121 [label="_filters.Add(filter.Object)", span="122-122", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_123 [label="_context.Setup(x => x.CreateJob()).InSequence()", span="125-125", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_125 [label="var process = CreateProcess()", span="128-128", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_126 [label="process.Run(_context.Object)", span="131-131", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_120 [label="var filter = new Mock<IClientFilter>()", span="121-121", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_122 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="124-124", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_124 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="126-126", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_127 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="118-118", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_20 [label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="IMonitoringApi.cs"];
m10_21 [label="Exit HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36", cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="IMonitoringApi.cs"];
m10_22 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs"];
m10_164 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_166 [label="_filters.Add(filter.Object)", span="164-164", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_168 [label="var process = CreateProcess()", span="169-169", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_169 [label="process.Run(_context.Object)", span="172-172", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_170 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="175-175", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_165 [label="var filter = new Mock<IClientFilter>()", span="163-163", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_167 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="166-167", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_171 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="176-176", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_172 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", span="160-160", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis()", file="IMonitoringApi.cs"];
m10_23 [label="Exit HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs"];
m10_328 [label="return new JobCreationProcess(_filters);", span="314-314", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="IMonitoringApi.cs"];
m10_329 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="312-312", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="IMonitoringApi.cs"];
m10_139 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="IMonitoringApi.cs"];
m10_228 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_230 [label="_filters.Add(filter.Object)", span="227-227", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_232 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="230-230", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_233 [label="var process = CreateProcess()", span="232-232", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_234 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="235-236", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_229 [label="var filter = new Mock<IClientFilter>()", span="226-226", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_231 [label="var exception = new InvalidOperationException()", span="229-229", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_235 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="239-240", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_236 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="223-223", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="IMonitoringApi.cs"];
m10_62 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="IMonitoringApi.cs"];
m10_84 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="IMonitoringApi.cs"];
m10_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_15 [label="TestMethod()", span="20-20", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_330 [label="Entry HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="HangFire.Client.JobCreationProcess.JobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="IMonitoringApi.cs"];
m10_185 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_188 [label="_filters.Add(outerFilter.Object)", span="186-186", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_189 [label="_filters.Add(innerFilter.Object)", span="187-187", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_191 [label="var process = CreateProcess()", span="192-192", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_192 [label="process.Run(_context.Object)", span="195-195", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_186 [label="var outerFilter = new Mock<IClientFilter>()", span="183-183", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_187 [label="var innerFilter = new Mock<IClientFilter>()", span="184-184", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_190 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="189-190", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_193 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="198-198", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_194 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="180-180", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="IMonitoringApi.cs"];
m10_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="IMonitoringApi.cs"];
m10_28 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_238 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="IMonitoringApi.cs"];
m10_73 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_78 [label="_filters.Add(filter1.Object)", span="86-86", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_79 [label="_filters.Add(filter2.Object)", span="87-87", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_80 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="89-89", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_81 [label="var process = CreateProcess()", span="91-91", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_82 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="94-95", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_74 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="80-80", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_77 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="84-84", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_75 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="81-81", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_76 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="83-83", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_83 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="77-77", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="IMonitoringApi.cs"];
m10_30 [label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs"];
m10_31 [label="Exit HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42", cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs"];
m10_324 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_51 [label="process.Run(_context.Object)", span="57-57", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_67 [label="process.Run(_context.Object)", span="70-70", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_95 [label="process.Run(_context.Object)", span="95-95", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_117 [label="process.Run(_context.Object)", span="114-114", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_220 [label="process.Run(_context.Object)", span="215-215", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_243 [label="process.Run(_context.Object)", span="236-236", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_266 [label="process.Run(_context.Object)", span="260-260", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_296 [label="process.Run(_context.Object)", span="281-281", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_319 [label="process.Run(_context.Object)", span="302-302", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_16 [label="Entry HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", span="34-34", cluster="HangFire.Storage.IMonitoringApi.SucceededJobs(int, int)", file="IMonitoringApi.cs"];
m10_27 [label="Exit HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="IMonitoringApi.cs"];
m10_37 [label="Exit HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47", cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs"];
m10_47 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_50 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_52 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_63 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_66 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_68 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_91 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_94 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_96 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_107 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_116 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_118 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_133 [label="Entry lambda expression", span="125-125", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_179 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_219 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_221 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_222 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_239 [label="Entry lambda expression", span="230-230", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_242 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_244 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_262 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_265 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_267 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_283 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_295 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_297 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_309 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_318 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_320 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_26 [label="Entry HangFire.Storage.IMonitoringApi.FetchedCount(string)", span="40-40", cluster="HangFire.Storage.IMonitoringApi.FetchedCount(string)", file="IMonitoringApi.cs"];
m10_70 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="72-73", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_86 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="83-83", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_89 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="84-84", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_111 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="106-106", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_130 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="124-124", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_137 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="126-126", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_153 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="146-146", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_156 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="147-147", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_159 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="148-148", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_162 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="149-149", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_174 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="166-166", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_183 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="176-176", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_196 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="189-189", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_202 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="198-198", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_217 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="208-208", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_226 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="219-219", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_246 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="239-240", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_269 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="262-262", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_287 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="275-275", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_313 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="296-296", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_322 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="305-305", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_49 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_48 [label="x.CreateJob()", span="53-53", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_65 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_64 [label="x.CreateJob()", span="66-66", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_69 [label="Entry lambda expression", span="72-73", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_88 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_93 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_92 [label="x.CreateJob()", span="89-89", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_109 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_108 [label="x.CreateJob()", span="104-104", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_110 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_113 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_129 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_136 [label="Entry lambda expression", span="126-126", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_135 [label="Exit lambda expression", span="125-125", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_134 [label="x.CreateJob()", span="125-125", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_152 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_161 [label="Entry lambda expression", span="149-149", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_173 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_176 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_182 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_181 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_180 [label="x.CreateJob()", span="175-175", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_195 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_198 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_201 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_216 [label="Entry lambda expression", span="208-208", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_225 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_224 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_223 [label="x.CreateJob()", span="218-218", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_249 [label="context.Exception == exception", span="240-240", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_241 [label="Exit lambda expression", span="230-230", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_240 [label="x.CreateJob()", span="230-230", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_245 [label="Entry lambda expression", span="239-240", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_272 [label="context.Exception == exception", span="262-262", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_264 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_263 [label="x.CreateJob()", span="254-254", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_268 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_290 [label="context.Exception == exception", span="275-275", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_286 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_292 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_285 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_284 [label="x.CreateJob()", span="273-273", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_312 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_315 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_311 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_310 [label="x.CreateJob()", span="294-294", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_321 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_85 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_155 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_158 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_71 [label="Exit lambda expression", span="72-73", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_87 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_90 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_112 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_131 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_138 [label="Exit lambda expression", span="126-126", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_154 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_157 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_160 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_163 [label="Exit lambda expression", span="149-149", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_175 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_184 [label="Exit lambda expression", span="176-176", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_197 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_203 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_204 [label="Entry lambda expression", span="198-198", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_218 [label="Exit lambda expression", span="208-208", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_227 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_247 [label="Exit lambda expression", span="239-240", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_248 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_270 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_271 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_288 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_289 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_314 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_323 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_115 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_114 [label="x.ExceptionHandled = true", span="107-107", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_178 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_177 [label="x.Canceled = true", span="167-167", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_200 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_199 [label="context.Canceled = true", span="190-190", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_250 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_273 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_291 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_294 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_293 [label="x.ExceptionHandled = true", span="276-276", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_317 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_316 [label="x.ExceptionHandled = true", span="297-297", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_206 [label="Exit lambda expression", span="198-198", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_205 [label="context.Canceled", span="198-198", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_325 [label="context.Exception != null", span="305-305", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_326 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="IMonitoringApi.cs"];
m10_36 [label="Entry HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", span="47-47", cluster="HangFire.Storage.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs"];
m10_207 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_209 [label="_filters.Add(filter.Object)", span="206-206", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_211 [label="var process = CreateProcess()", span="211-211", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_212 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="214-215", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_213 [label="_context.Verify(x => x.CreateJob(), Times.Never)", span="218-218", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_208 [label="var filter = new Mock<IClientFilter>()", span="205-205", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_210 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="208-209", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_214 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="219-219", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_215 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="202-202", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="IMonitoringApi.cs"];
m10_17 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="IMonitoringApi.cs"];
m10_298 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_301 [label="_filters.Add(outerFilter.Object)", span="291-291", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_302 [label="_filters.Add(innerFilter.Object)", span="292-292", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_303 [label="_context.Setup(x => x.CreateJob()).Throws<InvalidOperationException>()", span="294-294", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_305 [label="var process = CreateProcess()", span="299-299", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_306 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="302-302", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_299 [label="var outerFilter = new Mock<IClientFilter>()", span="288-288", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_300 [label="var innerFilter = new Mock<IClientFilter>()", span="289-289", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_304 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="296-297", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_307 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="305-305", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_308 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="285-285", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="IMonitoringApi.cs"];
m10_132 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="IMonitoringApi.cs"];
m10_40 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="IMonitoringApi.cs"];
m10_274 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_276 [label="_filters.Add(filter.Object)", span="270-270", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_278 [label="_context.Setup(x => x.CreateJob()).Throws(exception)", span="273-273", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_280 [label="var process = CreateProcess()", span="278-278", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_281 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="281-281", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_275 [label="var filter = new Mock<IClientFilter>()", span="269-269", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_277 [label="var exception = new InvalidOperationException()", span="272-272", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_279 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="275-276", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_282 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="266-266", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="IMonitoringApi.cs"];
m10_105 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="IMonitoringApi.cs"];
m10_327 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="308-308", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="IMonitoringApi.cs"];
m10_128 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="IMonitoringApi.cs"];
m10_140 [label="Entry HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_143 [label="_filters.Add(outerFilter.Object)", span="143-143", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_144 [label="_filters.Add(innerFilter.Object)", span="144-144", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_149 [label="var process = CreateProcess()", span="151-151", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_150 [label="process.Run(_context.Object)", span="154-154", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_141 [label="var outerFilter = new Mock<IClientFilter>()", span="140-140", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_142 [label="var innerFilter = new Mock<IClientFilter>()", span="141-141", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_145 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="146-146", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_148 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="149-149", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_146 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="147-147", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_147 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="148-148", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_151 [label="Exit HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="137-137", cluster="HangFire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="IMonitoringApi.cs"];
m10_331 [label="HangFire.Core.Tests.Client.JobCreationProcessFacts", span="", file="IMonitoringApi.cs"];
m10_333 [label=process, span="", file="IMonitoringApi.cs"];
m10_334 [label=process, span="", file="IMonitoringApi.cs"];
m10_335 [label=process, span="", file="IMonitoringApi.cs"];
m10_336 [label=process, span="", file="IMonitoringApi.cs"];
m10_337 [label=process, span="", file="IMonitoringApi.cs"];
m10_338 [label=process, span="", file="IMonitoringApi.cs"];
m10_340 [label=process, span="", file="IMonitoringApi.cs"];
m10_343 [label=process, span="", file="IMonitoringApi.cs"];
m10_344 [label=process, span="", file="IMonitoringApi.cs"];
m10_332 [label=process, span="", file="IMonitoringApi.cs"];
m10_339 [label=exception, span="", file="IMonitoringApi.cs"];
m10_341 [label=exception, span="", file="IMonitoringApi.cs"];
m10_342 [label=exception, span="", file="IMonitoringApi.cs"];
m12_10 [label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27", cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="JsonStats.cs"];
m12_12 [label="Entry CamelCasePropertyNamesContractResolver.cstr", span="", cluster="CamelCasePropertyNamesContractResolver.cstr", file="JsonStats.cs"];
m12_9 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JsonStats.cs"];
m12_13 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonStats.cs"];
m12_0 [label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m12_1 [label="var monitoring = JobStorage.Current.GetMonitoringApi()", span="26-26", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=0, file="JsonStats.cs"];
m12_2 [label="var response = monitoring.GetStatistics()", span="28-28", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs"];
m12_3 [label="var settings = new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="31-34", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs"];
m12_4 [label="var serialized = JsonConvert.SerializeObject(response, settings)", span="35-35", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs"];
m12_5 [label="Response.ContentType = ''application/json''", span="37-37", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs"];
m12_7 [label="Response.Write(serialized)", span="39-39", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=red, community=0, file="JsonStats.cs"];
m12_6 [label="Response.ContentEncoding = Encoding.UTF8", span="38-38", cluster="HangFire.Web.JsonStats.ProcessRequest()", color=green, community=1, file="JsonStats.cs"];
m12_8 [label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="JsonStats.cs"];
m12_11 [label="Entry JsonSerializerSettings.cstr", span="", cluster="JsonSerializerSettings.cstr", file="JsonStats.cs"];
m12_14 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="JsonStats.cs"];
m12_15 [label="HangFire.Web.JsonStats", span="", file="JsonStats.cs"];
m13_107 [label="Entry HangFire.Storage.IMonitoringApi.GetStatistics()", span="27-27", cluster="HangFire.Storage.IMonitoringApi.GetStatistics()", file="LayoutPage.generated.cs"];
m13_104 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="LayoutPage.generated.cs"];
m13_33 [label="Write(statistics.Enqueued)", span="261-261", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_18 [label="WriteLiteral(''\''\r\n                           href=\'''')", span="178-178", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_109 [label="Entry Unk.StartsWith", span="", cluster="Unk.StartsWith", file="LayoutPage.generated.cs"];
m13_8 [label="WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="109-129", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_0 [label="Entry HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs"];
m13_9 [label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=0, file="LayoutPage.generated.cs"];
m13_10 [label="var payload = _items.Take(cancellationToken)", span="50-50", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", color=green, community=1, file="LayoutPage.generated.cs"];
m13_11 [label=_items, span="52-52", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_7 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="LayoutPage.generated.cs"];
m13_12 [label="_items.Count == 0", span="54-54", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_21 [label="_cts != null", span="67-67", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_27 [label="_innerFetcher.Dispose()", span="80-80", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_35 [label="Entry HangFire.Server.JobFetcher.Dispose()", span="81-81", cluster="HangFire.Server.JobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_41 [label="JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="97-97", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_47 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="LayoutPage.generated.cs"];
m13_53 [label="Monitor.Wait(_items)", span="116-116", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_59 [label=Exception, span="133-133", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_65 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="LayoutPage.generated.cs"];
m13_1 [label="_innerFetcher = innerFetcher", span="27-27", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs"];
m13_2 [label="_count = count", span="28-28", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs"];
m13_3 [label="_prefetchThread = new Thread(Prefetch)\r\n                {\r\n                    Name = String.Format(''HangFire.Prefetch.{0}'', ''queue''),\r\n                    IsBackground = true\r\n                }", span="30-34", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs"];
m13_4 [label="_prefetchThread.Start()", span="35-35", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs"];
m13_5 [label="Exit HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", span="25-25", cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="LayoutPage.generated.cs"];
m13_6 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="LayoutPage.generated.cs"];
m13_13 [label="_jobIsReady.Reset()", span="56-56", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_14 [label="Monitor.Pulse(_items)", span="59-59", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_15 [label="return payload;", span="62-62", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_16 [label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48", cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_17 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_19 [label="Entry System.Threading.Monitor.Pulse(object)", span="0-0", cluster="System.Threading.Monitor.Pulse(object)", file="LayoutPage.generated.cs"];
m13_20 [label="Entry HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_22 [label="_cts.Cancel()", span="69-69", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_23 [label=_items, span="71-71", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_24 [label="Monitor.Pulse(_items)", span="73-73", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_25 [label="_prefetchThread.Join()", span="76-76", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_26 [label="RequeuePrefetched()", span="78-78", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_28 [label="_jobIsReady.Dispose()", span="82-82", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_29 [label="_cts.Dispose()", span="83-83", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_30 [label="_cts = null", span="84-84", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_31 [label="Exit HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65", cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="LayoutPage.generated.cs"];
m13_32 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="LayoutPage.generated.cs"];
m13_34 [label="Entry HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_36 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="LayoutPage.generated.cs"];
m13_37 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="LayoutPage.generated.cs"];
m13_38 [label="var enqueuedState = new EnqueuedState(''Re-queue prefetched job.'', _innerFetcher.Queue)", span="92-92", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_39 [label=_items, span="94-94", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_40 [label="JobState.Apply(_innerFetcher.Redis, payload.Id, enqueuedState)", span="96-96", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_42 [label=Exception, span="100-100", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_43 [label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="102-102", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_44 [label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88", cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="LayoutPage.generated.cs"];
m13_45 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="LayoutPage.generated.cs"];
m13_46 [label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51", cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="LayoutPage.generated.cs"];
m13_48 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="LayoutPage.generated.cs"];
m13_49 [label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_50 [label=true, span="110-110", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_51 [label=_items, span="112-112", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_52 [label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="114-114", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_54 [label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="120-120", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_55 [label=_items, span="122-122", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_56 [label="_items.Add(payload)", span="124-124", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_57 [label="_jobIsReady.Set()", span="126-126", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_58 [label=OperationCanceledException, span="130-130", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_60 [label="_logger.Fatal(''Unexpected exception caught. Jobs will not be fetched.'', ex)", span="135-135", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs", color=red, community=0];
m13_61 [label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106", cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="LayoutPage.generated.cs"];
m13_62 [label="Entry System.Threading.Monitor.Wait(object)", span="0-0", cluster="System.Threading.Monitor.Wait(object)", file="LayoutPage.generated.cs"];
m13_63 [label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="LayoutPage.generated.cs"];
m13_64 [label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="LayoutPage.generated.cs"];
m13_66 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="LayoutPage.generated.cs"];
m13_67 [label="HangFire.Server.PrefetchJobFetcher", span="", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_68 [label="WriteLiteral(''                        <ol class=\''breadcrumb\''>\r\n                            <li>'' +\r\n''<a href=\'''')", span="460-461", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_69 [label="Write(Request.LinkTo(''/''))", span="466-466", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_70 [label="WriteLiteral(''\''><span class=\''glyphicon glyphicon-home\''></span></a></li>\r\n'')", span="471-471", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_71 [label=Breadcrumbs, span="476-476", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_72 [label="WriteLiteral(''                                <li><a href=\'''')", span="482-482", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_73 [label="Write(breadcrumb.Value)", span="487-487", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_74 [label="WriteLiteral(''\''>'')", span="492-492", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_75 [label="Write(breadcrumb.Key)", span="497-497", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_76 [label="WriteLiteral(''</a></li>\r\n'')", span="502-502", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_77 [label="WriteLiteral(''                            <li class=\''active\''>'')", span="512-512", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_78 [label="Write(BreadcrumbsTitle ?? Title)", span="517-517", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_79 [label="WriteLiteral(''</li>\r\n                        </ol>\r\n'')", span="522-522", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_80 [label="WriteLiteral(''\r\n                    <h1 class=\''page-header\''>\r\n                        '')", span="532-532", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_81 [label="Write(Title)", span="537-537", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_82 [label="WriteLiteral(''\r\n'')", span="542-542", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_83 [label="!String.IsNullOrEmpty(Subtitle)", span="547-547", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_84 [label="WriteLiteral(''                            <small>'')", span="553-553", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_85 [label="Write(Subtitle)", span="558-558", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_86 [label="WriteLiteral(''</small>\r\n'')", span="563-563", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_87 [label="WriteLiteral(''                    </h1>\r\n                    '')", span="573-573", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_88 [label="Write(RenderBody())", span="578-578", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_89 [label="WriteLiteral(@''\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>HangFire \r\n                            '')", span="583-593", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_90 [label="Write(FileVersionInfo.GetVersionInfo(GetType().Assembly.Location).ProductVersion)", span="598-598", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_91 [label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="603-604", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_92 [label="Write(JobStorage.Current)", span="609-609", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_93 [label="WriteLiteral(''</li>\r\n                    <li>Time: '')", span="614-614", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_94 [label="Write(DateTime.UtcNow)", span="619-619", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_95 [label="WriteLiteral('' GMT\r\n                    </li>\r\n                    <li>Generated in ['')", span="624-624", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_96 [label="Write((DateTime.UtcNow - (DateTime)Context.Items[''GenerationStartedAt'']).Milliseconds)", span="629-629", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_97 [label="WriteLiteral(@'' ms]\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n        <script>\r\n            (function (hangFire) {\r\n                hangFire.config = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: ''')", span="634-644", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_98 [label="Write(Request.LinkTo(''/stats''))", span="649-649", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_99 [label="WriteLiteral(''\'\r\n                };\r\n            })(window.HangFire = window.HangFire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="654-655", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_100 [label="Write(Request.LinkTo(''/js/scripts.js''))", span="660-660", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_101 [label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="665-665", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_102 [label="Exit HangFire.Web.Pages.LayoutPage.Execute()", span="51-51", cluster="HangFire.Web.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs"];
m13_112 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="LayoutPage.generated.cs"];
m13_113 [label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0", cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="LayoutPage.generated.cs"];
m13_103 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs"];
m13_111 [label="Entry HangFire.Web.RazorPage.RenderBody()", span="84-84", cluster="HangFire.Web.RazorPage.RenderBody()", file="LayoutPage.generated.cs"];
m13_110 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="LayoutPage.generated.cs"];
m13_114 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="LayoutPage.generated.cs"];
m13_106 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="LayoutPage.generated.cs"];
m13_105 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="LayoutPage.generated.cs"];
m13_108 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="LayoutPage.generated.cs"];
m13_115 [label="HangFire.Web.Pages.LayoutPage", span="", file="LayoutPage.generated.cs"];
m14_0 [label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", span="13-13", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_1 [label="_storage = new SqlServerStorage(\r\n                String.Empty,\r\n                new SqlServerStorageOptions { PrepareSchemaIfNecessary = false })", span="15-17", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", color=red, community=0, file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_2 [label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", span="13-13", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.MsmqSqlServerStorageExtensionsFacts()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_14 [label="Entry HangFire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(HangFire.SqlServer.SqlServerStorage, string)", span="23-23", cluster="HangFire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(HangFire.SqlServer.SqlServerStorage, string)", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_5 [label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", span="21-21", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_6 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => MsmqSqlServerStorageExtensions.UseMsmqQueues(null, CleanMsmqQueueAttribute.PathPattern))", span="23-24", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_7 [label="Assert.Equal(''storage'', exception.ParamName)", span="26-26", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_8 [label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", span="21-21", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_ThrowsAnException_WhenStorageIsNull()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_15 [label="Entry HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", span="30-30", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_16 [label="_storage.UseMsmqQueues(CleanMsmqQueueAttribute.PathPattern)", span="32-32", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_17 [label="var providerTypes = _storage.QueueProviders.Select(x => x.GetType())", span="34-34", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_18 [label="Assert.Contains(typeof(MsmqJobQueueProvider), providerTypes)", span="35-35", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_19 [label="Exit HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", span="30-30", cluster="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts.UseMsmqQueues_AddsMsmqJobQueueProvider()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_9 [label="Entry Unk.>", span="", cluster="Unk.>", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_20 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string)", span="23-23", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string)", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_4 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_10 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_3 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="37-37", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_26 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_23 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_11 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_12 [label="MsmqSqlServerStorageExtensions.UseMsmqQueues(null, CleanMsmqQueueAttribute.PathPattern)", span="24-24", cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_24 [label="x.GetType()", span="34-34", cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_25 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_22 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m14_27 [label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts", span="", file="MsmqSqlServerStorageExtensionsFacts.cs"];
m15_9 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ProcessingJobsPage.generated.cs"];
m15_64 [label="Entry System.Random.Next(int, int)", span="0-0", cluster="System.Random.Next(int, int)", file="ProcessingJobsPage.generated.cs"];
m15_60 [label="Entry System.Random.Random(int)", span="0-0", cluster="System.Random.Random(int)", file="ProcessingJobsPage.generated.cs"];
m15_11 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="ProcessingJobsPage.generated.cs"];
m15_41 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="ProcessingJobsPage.generated.cs"];
m15_12 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_0 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="ProcessingJobsPage.generated.cs"];
m15_1 [label="innerComponent == null", span="33-33", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_2 [label="throw new ArgumentNullException(''innerComponent'');", span="33-33", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_3 [label="_innerComponent = innerComponent", span="35-35", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_4 [label="_logger = LogProvider.GetLogger(_innerComponent.GetType())", span="36-36", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_5 [label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="38-38", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_6 [label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="39-39", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_7 [label="DelayCallback = GetBackOffMultiplier", span="40-40", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_8 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=red, community=0, file="ProcessingJobsPage.generated.cs"];
m15_10 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ProcessingJobsPage.generated.cs"];
m15_32 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_33 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ProcessingJobsPage.generated.cs"];
m15_34 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs"];
m15_42 [label=i, span="97-97", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_43 [label=0, span="99-99", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs"];
m15_45 [label=1, span="101-101", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs"];
m15_47 [label=2, span="103-103", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_48 [label="return LogLevel.Warn;", span="104-104", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_46 [label="return LogLevel.Info;", span="102-102", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_50 [label="return LogLevel.Error;", span="107-107", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_44 [label="return LogLevel.Debug;", span="100-100", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs"];
m15_49 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", span="95-95", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetLogLevel(int)", file="ProcessingJobsPage.generated.cs"];
m15_13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_14 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="52-52", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_37 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ProcessingJobsPage.generated.cs"];
m15_35 [label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="ProcessingJobsPage.generated.cs"];
m15_15 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_16 [label="var i = 0", span="59-59", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_17 [label="i <= MaxRetryAttempts", span="59-59", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_23 [label="i >= MaxRetryAttempts - 1", span="73-73", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_25 [label="var nextTry = DelayCallback(i)", span="75-75", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_26 [label="var logLevel = GetLogLevel(i)", span="76-76", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_27 [label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerComponent,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="78-86", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_30 [label="i++", span="59-59", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_28 [label="cancellationToken.WaitHandle.WaitOne(nextTry)", span="89-89", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_29 [label="cancellationToken.ThrowIfCancellationRequested()", span="90-90", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_18 [label="_innerComponent.Execute(cancellationToken)", span="63-63", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_22 [label=Exception, span="70-70", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_24 [label="throw;", span="73-73", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_19 [label="return;", span="64-64", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_21 [label="throw;", span="68-68", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_20 [label=OperationCanceledException, span="66-66", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_31 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="57-57", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="ProcessingJobsPage.generated.cs"];
m15_38 [label="Entry lambda expression", span="80-85", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m15_39 [label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerComponent,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="80-85", cluster="lambda expression", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_40 [label="Exit lambda expression", span="80-85", cluster="lambda expression", file="ProcessingJobsPage.generated.cs"];
m15_65 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)", file="ProcessingJobsPage.generated.cs"];
m15_51 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ProcessingJobsPage.generated.cs"];
m15_52 [label="return _innerComponent.ToString();", span="112-112", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", color=green, community=0, file="ProcessingJobsPage.generated.cs"];
m15_53 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="110-110", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="ProcessingJobsPage.generated.cs"];
m15_61 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="ProcessingJobsPage.generated.cs"];
m15_62 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()", file="ProcessingJobsPage.generated.cs"];
m15_36 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ProcessingJobsPage.generated.cs"];
m15_55 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs"];
m15_58 [label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="122-122", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs"];
m15_57 [label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="119-120", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs"];
m15_56 [label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="118-118", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs"];
m15_59 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="115-115", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="ProcessingJobsPage.generated.cs"];
m15_54 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ProcessingJobsPage.generated.cs"];
m15_67 [label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span="", file="ProcessingJobsPage.generated.cs"];
m15_68 [label=i, span="", file="ProcessingJobsPage.generated.cs"];
m15_69 [label=nextTry, span="", file="ProcessingJobsPage.generated.cs"];
m16_86 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="QueuesPage.generated.cs"];
m16_65 [label="return job.ToString();", span="122-122", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="QueuesPage.generated.cs", color=green, community=0];
m16_5 [label="queues = monitor.Queues()", span="80-80", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_18 [label="queue.Fetched.HasValue", span="169-169", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m16_19 [label="WriteLiteral(''                            <a href=\'''')", span="175-175", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_20 [label="Write(Request.LinkTo(''/queues/fetched/'' + queue.Name))", span="180-180", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_21 [label="WriteLiteral(''\''>\r\n                                '')", span="185-185", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_22 [label="Write(queue.Fetched)", span="190-190", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_52 [label="Write(job.Value.EnqueuedAt)", span="387-387", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_56 [label="WriteLiteral(''                                </tbody>\r\n                            </table>\r\n'')", span="425-425", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_57 [label="WriteLiteral(''                </td>\r\n            </tr>\r\n'')", span="435-435", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_58 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="445-445", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_59 [label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m16_119 [label="Entry System.Text.StringBuilder.Append(int)", span="0-0", cluster="System.Text.StringBuilder.Append(int)", file="QueuesPage.generated.cs"];
m16_130 [label="Entry Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="QueuesPage.generated.cs"];
m16_131 [label="var label = queue != null \r\n                ? $''<a class=\''text-uppercase\'' href=\''{_page.Url.Queue(queue)}\''>{queue}</a>'' \r\n                : $''<span class=\''label label-danger\''><i>{Strings.Common_Unknown}</i></span>''", span="220-222", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_132 [label="return new NonEscapedString(label);", span="224-224", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_133 [label="Exit Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", span="218-218", cluster="Hangfire.Dashboard.HtmlHelper.QueueLabel(string)", file="QueuesPage.generated.cs"];
m16_134 [label="Entry Hangfire.Dashboard.UrlHelper.Queue(string)", span="68-68", cluster="Hangfire.Dashboard.UrlHelper.Queue(string)", file="QueuesPage.generated.cs"];
m16_35 [label="Write(HtmlHelper.JobId(job.Key))", span="287-287", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_36 [label="WriteLiteral(''</a>\r\n'')", span="292-292", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_37 [label="!job.Value.InEnqueuedState", span="297-297", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs"];
m16_38 [label="WriteLiteral(''                                                    <span title=\''Job\'s state has '' +\r\n''been changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></s'' +\r\n''pan>\r\n'')", span="303-305", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=1, file="QueuesPage.generated.cs"];
m16_39 [label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''              <td class=\''min-width\''>\r\n                                          '' +\r\n''      <span class=\''label label-default\'' style=\'''')", span="315-317", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=1];
m16_73 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="QueuesPage.generated.cs"];
m16_117 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="QueuesPage.generated.cs"];
m16_126 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="QueuesPage.generated.cs"];
m16_7 [label="queues.Count == 0", span="92-92", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m16_8 [label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        No queued jobs found. Try to enque'' +\r\n''ue a job.\r\n    </div>\r\n'')", span="98-99", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=1, file="QueuesPage.generated.cs"];
m16_9 [label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Fetched</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=1, file="QueuesPage.generated.cs"];
m16_10 [label=queues, span="126-126", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs"];
m16_11 [label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=1];
m16_74 [label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83", cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="QueuesPage.generated.cs"];
m16_69 [label="String.IsNullOrWhiteSpace(stateName)", span="127-127", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs", color=green, community=0];
m16_122 [label="Entry Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="QueuesPage.generated.cs"];
m16_123 [label="return String.Join('', '', properties.Select(x => $''{x.Key}: \''{x.Value}\''''));", span="215-215", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_124 [label="Exit Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="213-213", cluster="Hangfire.Dashboard.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="QueuesPage.generated.cs"];
m16_17 [label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="164-164", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_78 [label="Entry Hangfire.Dashboard.UrlHelper.JobDetails(string)", span="58-58", cluster="Hangfire.Dashboard.UrlHelper.JobDetails(string)", file="QueuesPage.generated.cs"];
m16_60 [label="Entry System.Guid.TryParse(string, out System.Guid)", span="0-0", cluster="System.Guid.TryParse(string, out System.Guid)", file="QueuesPage.generated.cs"];
m16_14 [label="Write(queue.Name)", span="148-148", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_15 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=1, file="QueuesPage.generated.cs"];
m16_16 [label="Write(queue.Length)", span="159-159", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_116 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="QueuesPage.generated.cs"];
m16_143 [label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="QueuesPage.generated.cs"];
m16_144 [label="return new NonEscapedString(StackTraceFormatter.FormatHtml(stackTrace, StackTraceHtmlFragments));", span="252-252", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_145 [label="Exit Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="250-250", cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="QueuesPage.generated.cs"];
m16_149 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="QueuesPage.generated.cs"];
m16_82 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="QueuesPage.generated.cs"];
m16_147 [label="return WebUtility.HtmlEncode(text);", span="257-257", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_148 [label="Exit Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="255-255", cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="QueuesPage.generated.cs"];
m16_121 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="QueuesPage.generated.cs"];
m16_53 [label="WriteLiteral(''\r\n                                                    </span>\r\n'')", span="392-392", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_54 [label="WriteLiteral(''                                                    <em>n/a</em>\r\n'')", span="404-404", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_55 [label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''          </tr>\r\n'')", span="414-415", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=1];
m16_63 [label="job == null", span="102-102", cluster="Hangfire.Dashboard.HtmlHelper.JobName(Hangfire.Common.Job)", file="QueuesPage.generated.cs"];
m16_0 [label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m16_1 [label="WriteLiteral(''\r\n'')", span="61-61", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_2 [label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs"];
m16_3 [label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_4 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_23 [label="WriteLiteral(''\r\n                            </a>\r\n'')", span="195-195", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_24 [label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="207-207", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_25 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="217-217", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_26 [label="queue.FirstJobs.Count == 0", span="222-222", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="QueuesPage.generated.cs"];
m16_27 [label="WriteLiteral(''                            <em>No jobs queued.</em>\r\n'')", span="228-228", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_87 [label="Entry Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="QueuesPage.generated.cs"];
m16_88 [label="return Raw($''<span data-moment-title=\''{JobHelper.ToTimestamp(time)}\''>{value}</span>'');", span="152-152", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_89 [label="Exit Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", span="150-150", cluster="Hangfire.Dashboard.HtmlHelper.MomentTitle(System.DateTime, string)", file="QueuesPage.generated.cs"];
m16_6 [label="WriteLiteral(''\r\n'')", span="87-87", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_61 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="QueuesPage.generated.cs"];
m16_135 [label="Entry Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs"];
m16_138 [label="return new NonEscapedString(\r\n                $''<span class=\''labe label-defult text-uppercase\'' title=\''{serverId}\''>{shortenedId}</span>'');", span="234-235", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs"];
m16_137 [label="var shortenedId = parts.Length > 1\r\n                ? String.Join('':'', parts.Take(parts.Length - 1))\r\n                : serverId", span="230-232", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs"];
m16_136 [label="var parts = serverId.Split(':')", span="229-229", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs"];
m16_139 [label="Exit Hangfire.Dashboard.HtmlHelper.ServerId(string)", span="227-227", cluster="Hangfire.Dashboard.HtmlHelper.ServerId(string)", file="QueuesPage.generated.cs"];
m16_62 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="QueuesPage.generated.cs"];
m16_64 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_66 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="QueuesPage.generated.cs"];
m16_142 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="QueuesPage.generated.cs"];
m16_90 [label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs"];
m16_94 [label=displaySign, span="160-160", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_93 [label="var builder = new StringBuilder()", span="159-159", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_95 [label="builder.Append(duration.Value.TotalMilliseconds < 0 ? ''-'' : ''+'')", span="162-162", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_96 [label="duration = duration.Value.Duration()", span="165-165", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_97 [label="duration.Value.Days > 0", span="167-167", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_98 [label="builder.Append($''{duration.Value.Days}d '')", span="169-169", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_99 [label="duration.Value.Hours > 0", span="172-172", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_100 [label="builder.Append($''{duration.Value.Hours}h '')", span="174-174", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_101 [label="duration.Value.Minutes > 0", span="177-177", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_102 [label="builder.Append($''{duration.Value.Minutes}m '')", span="179-179", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_103 [label="duration.Value.TotalHours < 1", span="182-182", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_104 [label="duration.Value.Seconds > 0", span="184-184", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_105 [label="builder.Append(duration.Value.Seconds)", span="186-186", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_106 [label="duration.Value.Milliseconds > 0", span="187-187", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_107 [label="builder.Append($''.{duration.Value.Milliseconds}'')", span="189-189", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs"];
m16_109 [label="duration.Value.Milliseconds > 0", span="196-196", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_110 [label="builder.Append($''{duration.Value.Milliseconds}ms '')", span="198-198", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_91 [label="duration == null", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs"];
m16_108 [label="builder.Append(''s '')", span="192-192", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_111 [label="builder.Length <= 1", span="203-203", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_112 [label="builder.Append('' <1ms '')", span="205-205", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_113 [label="builder.Remove(builder.Length - 1, 1)", span="208-208", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_114 [label="return builder.ToString();", span="210-210", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs"];
m16_92 [label="return null;", span="157-157", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs"];
m16_115 [label="Exit Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="155-155", cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="QueuesPage.generated.cs"];
m16_141 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="QueuesPage.generated.cs"];
m16_12 [label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_40 [label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="322-322", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_29 [label="queue.FirstJobs", span="255-255", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs"];
m16_30 [label="WriteLiteral(''                                        <tr class=\'''')", span="261-261", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_31 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="266-266", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_32 [label="WriteLiteral(''\''>\r\n                                            <td class=\''min-width\''>\r\n         '' +\r\n''                                       <a href=\'''')", span="271-272", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=1, file="QueuesPage.generated.cs"];
m16_33 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="277-277", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_68 [label="Entry Hangfire.Dashboard.HtmlHelper.StateLabel(string)", span="125-125", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs"];
m16_28 [label="WriteLiteral(@''                            <table class=''''table table-condensed table-bordered table-inner''''>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=''''min-width''''>Id</th>\r\n                                        <th class=''''min-width''''>State</th>\r\n                                        <th>Job</th>\r\n                                        <th class=''''align-right min-width''''>Enqueued</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n'')", span="240-250", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_83 [label="Entry Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="QueuesPage.generated.cs"];
m16_84 [label="return Raw($''<span data-moment=\''{JobHelper.ToTimestamp(value)}\''>{value}</span>'');", span="147-147", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_85 [label="Exit Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", span="145-145", cluster="Hangfire.Dashboard.HtmlHelper.RelativeTime(System.DateTime)", file="QueuesPage.generated.cs"];
m16_118 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="QueuesPage.generated.cs"];
m16_51 [label="WriteLiteral(''\''>\r\n                                                        '')", span="382-382", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_127 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="QueuesPage.generated.cs"];
m16_128 [label="$''{x.Key}: \''{x.Value}\''''", span="215-215", cluster="lambda expression", color=green, community=0, file="QueuesPage.generated.cs"];
m16_129 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="QueuesPage.generated.cs"];
m16_71 [label="return Raw($''<span class=\''label label-default\'' style=\''background-color: {JobHistoryRenderer.GetForegroundStateColor(stateName)};\''>{stateName}</span>'');", span="132-132", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs", color=green, community=0];
m16_67 [label="Entry Hangfire.Common.Job.ToString()", span="179-179", cluster="Hangfire.Common.Job.ToString()", file="QueuesPage.generated.cs"];
m16_125 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="QueuesPage.generated.cs"];
m16_140 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="QueuesPage.generated.cs"];
m16_70 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_72 [label="HangFire.Web.Pages.QueuesPage", span="", cluster="Hangfire.Dashboard.HtmlHelper.StateLabel(string)", file="QueuesPage.generated.cs"];
m16_41 [label="WriteLiteral(''\''>\r\n                                                    '')", span="327-327", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_42 [label="Write(job.Value.State)", span="332-332", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_43 [label="WriteLiteral(''\r\n                                                </span>\r\n                      '' +\r\n''                      </td>\r\n                                            <td>\r\n '' +\r\n''                                               <a class=\''job-method\'' href=\'''')", span="337-339", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=1, file="QueuesPage.generated.cs"];
m16_44 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="344-344", cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="QueuesPage.generated.cs"];
m16_45 [label="WriteLiteral(''\''>\r\n                                                    '')", span="349-349", cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="QueuesPage.generated.cs", color=red, community=0];
m16_75 [label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="QueuesPage.generated.cs"];
m16_76 [label="return Raw($''<a href=\''{_page.Url.JobDetails(jobId)}\''>{JobId(jobId)}</a>'');", span="137-137", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_77 [label="Exit Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="135-135", cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="QueuesPage.generated.cs"];
m16_79 [label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="QueuesPage.generated.cs"];
m16_80 [label="return Raw($''<a class=\''job-method\'' href=\''{_page.Url.JobDetails(jobId)}\''>{HtmlEncode(JobName(job))}</a>'');", span="142-142", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_81 [label="Exit Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140", cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="QueuesPage.generated.cs"];
m16_13 [label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="QueuesPage.generated.cs"];
m16_34 [label="Entry Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", span="4-4", cluster="Hangfire.Dashboard.Pages.InlineMetric.InlineMetric(Hangfire.Dashboard.DashboardMetric)", color=red, community=0, file="QueuesPage.generated.cs"];
m16_46 [label="Entry Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", span="6-6", cluster="Hangfire.Dashboard.Pages.PerPageSelector.PerPageSelector(Hangfire.Dashboard.Pager)", color=red, community=0, file="QueuesPage.generated.cs"];
m16_47 [label="partialPage.Assign(_page)", span="83-83", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=green, community=0, file="QueuesPage.generated.cs"];
m16_48 [label="return new NonEscapedString(partialPage.ToString());", span="84-84", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="QueuesPage.generated.cs", color=green, community=0];
m16_49 [label="Exit Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="81-81", cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="QueuesPage.generated.cs"];
m16_50 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="74-74", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="QueuesPage.generated.cs"];
m16_120 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="QueuesPage.generated.cs"];
m16_146 [label="Entry Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", span="77-77", cluster="Hangfire.StackTraceFormatter.FormatHtml(string, Hangfire.IStackTraceFormatter<string>)", file="QueuesPage.generated.cs"];
m16_150 [label="Hangfire.Dashboard.HtmlHelper", span="", file="QueuesPage.generated.cs"];
m17_55 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="RecurringJobsPage.generated.cs"];
m17_33 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RecurringJobsPage.generated.cs"];
m17_18 [label="Entry HangFire.Server.SchedulePoller.Dispose()", span="44-44", cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs"];
m17_19 [label="_redis.Dispose()", span="46-46", cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs"];
m17_20 [label="Exit HangFire.Server.SchedulePoller.Dispose()", span="44-44", cluster="HangFire.Server.SchedulePoller.Dispose()", file="RecurringJobsPage.generated.cs"];
m17_38 [label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_39 [label=true, span="75-75", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_40 [label="var wasEnqueued = EnqueueNextScheduledJob()", span="77-77", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_43 [label=Exception, span="88-88", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_41 [label="wasEnqueued && !_cts.IsCancellationRequested", span="79-79", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_42 [label="_stopped.WaitOne(_pollInterval)", span="82-82", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_44 [label="_logger.Fatal(\r\n                    ''Scheduled jobs will not be added to their queues by this server instance: ''\r\n                    + ''unexpected exception caught in the SchedulePoller thread.'',\r\n                    ex)", span="90-93", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_45 [label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="71-71", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="RecurringJobsPage.generated.cs"];
m17_17 [label="Entry Unk.EnqueueScheduledJob", span="", cluster="Unk.EnqueueScheduledJob", file="RecurringJobsPage.generated.cs"];
m17_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsPage.generated.cs"];
m17_22 [label="Entry HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_23 [label="var jobType = _redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="51-51", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_26 [label="JobState.Apply(\r\n                    _redis, new EnqueuedState(jobId, ''Enqueued by schedule poller.'', queue),\r\n                    ScheduledState.Name)", span="56-58", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_27 [label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(jobId, ''Could not enqueue the schedule job.'',\r\n                                    new InvalidOperationException(String.Format(''Could not find type '{0}'.'', jobType))),\r\n                    ScheduledState.Name)", span="62-66", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_24 [label="var queue = JobHelper.TryToGetQueue(jobType)", span="52-52", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_25 [label="!String.IsNullOrEmpty(queue)", span="54-54", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_28 [label="Exit HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", span="49-49", cluster="HangFire.Server.SchedulePoller.EnqueueScheduledJob(string)", file="RecurringJobsPage.generated.cs"];
m17_53 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobsPage.generated.cs"];
m17_0 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="20-20", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m17_1 [label="_redis = redisManager.GetClient()", span="22-22", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m17_2 [label="_pollInterval = pollInterval", span="23-23", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m17_3 [label="Exit HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="20-20", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m17_13 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="RecurringJobsPage.generated.cs"];
m17_31 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="RecurringJobsPage.generated.cs"];
m17_54 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="RecurringJobsPage.generated.cs"];
m17_35 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="RecurringJobsPage.generated.cs"];
m17_36 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RecurringJobsPage.generated.cs"];
m17_4 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="RecurringJobsPage.generated.cs"];
m17_32 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RecurringJobsPage.generated.cs"];
m17_21 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RecurringJobsPage.generated.cs"];
m17_48 [label="Entry HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m17_49 [label="_cts.Cancel()", span="99-99", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m17_51 [label="thread.Join()", span="101-101", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m17_50 [label="_stopped.Set()", span="100-100", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m17_52 [label="Exit HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="97-97", cluster="HangFire.Server.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="RecurringJobsPage.generated.cs"];
m17_47 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="RecurringJobsPage.generated.cs"];
m17_15 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="RecurringJobsPage.generated.cs"];
m17_34 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RecurringJobsPage.generated.cs"];
m17_30 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RecurringJobsPage.generated.cs"];
m17_46 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="RecurringJobsPage.generated.cs"];
m17_16 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="RecurringJobsPage.generated.cs"];
m17_37 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RecurringJobsPage.generated.cs"];
m17_14 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RecurringJobsPage.generated.cs"];
m17_5 [label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_6 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="28-28", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_7 [label="var jobId = _redis\r\n                .GetRangeFromSortedSetByLowestScore(\r\n                    ''hangfire:schedule'', Double.NegativeInfinity, timestamp, 0, 1)\r\n                .FirstOrDefault()", span="30-33", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_8 [label="String.IsNullOrEmpty(jobId)", span="35-35", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_10 [label="EnqueueScheduledJob(jobId)", span="40-40", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_9 [label="return false;", span="37-37", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_11 [label="return true;", span="41-41", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_12 [label="Exit HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="26-26", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="RecurringJobsPage.generated.cs"];
m17_56 [label="HangFire.Server.SchedulePoller", span="", file="RecurringJobsPage.generated.cs"];
m18_19 [label="Entry Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="62-62", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_21 [label="var state = _connection.GetStateData(_jobId)", span="64-64", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_22 [label="state == null", span="66-66", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_24 [label="!state.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="71-71", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_26 [label="!state.Data.ContainsKey(''WorkerId'')", span="76-76", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_28 [label="!state.Data[''WorkerId''].Equals(_workerId, StringComparison.OrdinalIgnoreCase)", span="81-81", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_23 [label="return true;", span="68-68", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_25 [label="return true;", span="73-73", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_27 [label="return true;", span="78-78", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_29 [label="return true;", span="83-83", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_30 [label="return false;", span="86-86", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_31 [label="Exit Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="62-62", cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="RedisConnection.cs"];
m18_32 [label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="RedisConnection.cs"];
m18_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisConnection.cs"];
m18_0 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_1 [label="jobId == null", span="37-37", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_3 [label="workerId == null", span="38-38", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_5 [label="connection == null", span="39-39", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_7 [label="_jobId = jobId", span="41-41", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_8 [label="_workerId = workerId", span="42-42", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_9 [label="_connection = connection", span="43-43", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_10 [label="_shutdownToken = shutdownToken", span="44-44", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_2 [label="throw new ArgumentNullException(''jobId'');", span="37-37", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_4 [label="throw new ArgumentNullException(''workerId'');", span="38-38", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_6 [label="throw new ArgumentNullException(''connection'');", span="39-39", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_11 [label="Exit Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="RedisConnection.cs"];
m18_13 [label="Entry Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="52-52", cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m18_14 [label="_shutdownToken.ThrowIfCancellationRequested()", span="54-54", cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m18_15 [label="IsJobAborted()", span="56-56", cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m18_16 [label="throw new JobAbortedException();", span="58-58", cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m18_17 [label="Exit Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="52-52", cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m18_20 [label="Entry Hangfire.Server.JobAbortedException.JobAbortedException()", span="20-20", cluster="Hangfire.Server.JobAbortedException.JobAbortedException()", file="RedisConnection.cs"];
m18_34 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisConnection.cs"];
m18_33 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="RedisConnection.cs"];
m18_18 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs"];
m18_35 [label="Hangfire.Server.ServerJobCancellationToken", span="", file="RedisConnection.cs"];
m19_12 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_13 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''random-id'');\r\n                Assert.Null(result);\r\n            })", span="20-24", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_14 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_33 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisConnectionFacts.cs"];
m19_3 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="RedisConnectionFacts.cs"];
m19_97 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisConnectionFacts.cs"];
m19_11 [label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnectionFacts.cs"];
m19_35 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisConnectionFacts.cs"];
m19_115 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", span="147-147", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", file="RedisConnectionFacts.cs"];
m19_116 [label="UseConnections((redis, connection) =>\r\n            {\r\n                // Arrange\r\n                redis.SetRangeInHash(''hangfire:some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="149-165", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", file="RedisConnectionFacts.cs"];
m19_117 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", span="147-147", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsAllEntries()", file="RedisConnectionFacts.cs"];
m19_7 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisConnectionFacts.cs"];
m19_132 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="RedisConnectionFacts.cs"];
m19_0 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="RedisConnectionFacts.cs"];
m19_1 [label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="12-14", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="RedisConnectionFacts.cs"];
m19_2 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="RedisConnectionFacts.cs"];
m19_65 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisConnectionFacts.cs"];
m19_133 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="177-177", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_134 [label="var connection = new RedisConnection(RedisUtils.CreateClient())", span="179-179", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_135 [label="action(connection)", span="181-181", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_136 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="177-177", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_137 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RedisConnectionFacts.cs"];
m19_77 [label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnectionFacts.cs"];
m19_34 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RedisConnectionFacts.cs"];
m19_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnectionFacts.cs"];
m19_36 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="51-51", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_37 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="53-54", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs", color=green, community=0];
m19_38 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="51-51", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_19 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="RedisConnectionFacts.cs"];
m19_98 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="130-130", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_99 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="132-133", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_100 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="130-130", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_67 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="89-89", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_68 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="91-97", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_69 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="89-89", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="RedisConnectionFacts.cs"];
m19_108 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", span="137-137", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_109 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="139-143", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_110 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", span="137-137", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllEntriesFromHash_ReturnsNullValue_WhenHashDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_23 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="RedisConnectionFacts.cs"];
m19_118 [label="Entry lambda expression", span="149-165", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_4 [label="Entry lambda expression", span="13-14", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_5 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="13-14", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_9 [label="connection.GetStateData(null)", span="14-14", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_6 [label="Exit lambda expression", span="13-14", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_8 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_10 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_15 [label="Entry lambda expression", span="20-24", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_16 [label="var result = connection.GetStateData(''random-id'')", span="22-22", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_17 [label="Assert.Null(result)", span="23-23", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_18 [label="Exit lambda expression", span="20-24", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_24 [label="Entry lambda expression", span="30-47", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_25 [label="redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    })", span="32-39", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_26 [label="var result = connection.GetStateData(''my-job'')", span="41-41", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_27 [label="Assert.NotNull(result)", span="43-43", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_28 [label="Assert.Equal(''Name'', result.Name)", span="44-44", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_29 [label="Assert.Equal(''Reason'', result.Reason)", span="45-45", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_30 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="46-46", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_31 [label="Exit lambda expression", span="30-47", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_39 [label="Entry lambda expression", span="53-54", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_40 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="54-54", cluster="lambda expression", file="RedisConnectionFacts.cs", color=green, community=0];
m19_43 [label="connection.GetAllItemsFromSet(null)", span="54-54", cluster="lambda expression", file="RedisConnectionFacts.cs", color=green, community=0];
m19_41 [label="Exit lambda expression", span="53-54", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_42 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_44 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_49 [label="Entry lambda expression", span="60-66", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_50 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="62-62", cluster="lambda expression", file="RedisConnectionFacts.cs", color=green, community=0];
m19_51 [label="Assert.NotNull(result)", span="64-64", cluster="lambda expression", file="RedisConnectionFacts.cs", color=green, community=0];
m19_52 [label="Assert.Equal(0, result.Count)", span="65-65", cluster="lambda expression", file="RedisConnectionFacts.cs", color=green, community=0];
m19_53 [label="Exit lambda expression", span="60-66", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_57 [label="Entry lambda expression", span="72-85", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_58 [label="redis.AddItemToSortedSet(''hangfire:some-set'', ''1'')", span="75-75", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_59 [label="redis.AddItemToSortedSet(''hangfire:some-set'', ''2'')", span="76-76", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_60 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="79-79", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_61 [label="Assert.Equal(2, result.Count)", span="82-82", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_62 [label="Assert.Contains(''1'', result)", span="83-83", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_63 [label="Assert.Contains(''2'', result)", span="84-84", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_64 [label="Exit lambda expression", span="72-85", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_70 [label="Entry lambda expression", span="91-97", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_71 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="93-94", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_75 [label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="94-94", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_72 [label="Assert.Equal(''key'', exception.ParamName)", span="96-96", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_74 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_73 [label="Exit lambda expression", span="91-97", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_76 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_81 [label="Entry lambda expression", span="103-109", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_82 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="105-106", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_86 [label="connection.SetRangeInHash(''some-hash'', null)", span="106-106", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_83 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="108-108", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_85 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_84 [label="Exit lambda expression", span="103-109", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_87 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_91 [label="Entry lambda expression", span="115-126", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_92 [label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="117-121", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_93 [label="var hash = redis.GetAllEntriesFromHash(''hangfire:some-hash'')", span="123-123", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_94 [label="Assert.Equal(''Value1'', hash[''Key1''])", span="124-124", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_95 [label="Assert.Equal(''Value2'', hash[''Key2''])", span="125-125", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_96 [label="Exit lambda expression", span="115-126", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_101 [label="Entry lambda expression", span="132-133", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_102 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="133-133", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_105 [label="connection.GetAllEntriesFromHash(null)", span="133-133", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_103 [label="Exit lambda expression", span="132-133", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_104 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_106 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_111 [label="Entry lambda expression", span="139-143", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_112 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="141-141", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_113 [label="Assert.Null(result)", span="142-142", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_114 [label="Exit lambda expression", span="139-143", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_119 [label="redis.SetRangeInHash(''hangfire:some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="152-156", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_120 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="159-159", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_121 [label="Assert.NotNull(result)", span="162-162", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_122 [label="Assert.Equal(''Value1'', result[''Key1''])", span="163-163", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_123 [label="Assert.Equal(''Value2'', result[''Key2''])", span="164-164", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_124 [label="Exit lambda expression", span="149-165", cluster="lambda expression", file="RedisConnectionFacts.cs"];
m19_20 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="RedisConnectionFacts.cs"];
m19_21 [label="UseConnections((redis, connection) =>\r\n            {\r\n                redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    });\r\n\r\n                var result = connection.GetStateData(''my-job'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="30-47", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="RedisConnectionFacts.cs"];
m19_22 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="RedisConnectionFacts.cs"];
m19_66 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="RedisConnectionFacts.cs"];
m19_107 [label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnectionFacts.cs"];
m19_130 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="RedisConnectionFacts.cs"];
m19_54 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="70-70", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="RedisConnectionFacts.cs"];
m19_55 [label="UseConnections((redis, connection) =>\r\n            {\r\n                // Arrange\r\n                redis.AddItemToSortedSet(''hangfire:some-set'', ''1'');\r\n                redis.AddItemToSortedSet(''hangfire:some-set'', ''2'');\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="72-85", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="RedisConnectionFacts.cs"];
m19_56 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="70-70", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="RedisConnectionFacts.cs"];
m19_131 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnectionFacts.cs"];
m19_46 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", span="58-58", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_47 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="60-66", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", file="RedisConnectionFacts.cs", color=green, community=0];
m19_48 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", span="58-58", cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenSetDoesNotExist()", file="RedisConnectionFacts.cs"];
m19_78 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="101-101", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RedisConnectionFacts.cs"];
m19_79 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="103-109", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RedisConnectionFacts.cs"];
m19_80 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="101-101", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="RedisConnectionFacts.cs"];
m19_125 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="168-168", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_126 [label="var redis = RedisUtils.CreateClient()", span="170-170", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_128 [label="action(redis, connection)", span="173-173", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_127 [label="var connection = new RedisConnection(redis)", span="171-171", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_129 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="168-168", cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="RedisConnectionFacts.cs"];
m19_45 [label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnectionFacts.cs"];
m19_88 [label="Entry HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", span="113-113", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="RedisConnectionFacts.cs"];
m19_89 [label="UseConnections((redis, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:some-hash'');\r\n                Assert.Equal(''Value1'', hash[''Key1'']);\r\n                Assert.Equal(''Value2'', hash[''Key2'']);\r\n            })", span="115-126", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="RedisConnectionFacts.cs"];
m19_90 [label="Exit HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", span="113-113", cluster="HangFire.Redis.Tests.RedisConnectionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="RedisConnectionFacts.cs"];
m19_138 [label="HangFire.Redis.Tests.RedisConnectionFacts", span="", file="RedisConnectionFacts.cs"];
m19_139 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnectionFacts.cs"];
m19_140 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnectionFacts.cs"];
m19_141 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnectionFacts.cs"];
m19_142 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnectionFacts.cs"];
m19_143 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnectionFacts.cs"];
m20_19 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="RedisMonitoringApi.cs"];
m20_73 [label="return new InfiniteLoopComponent(_inner.Object);", span="80-80", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_74 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="RedisMonitoringApi.cs"];
m20_20 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="RedisMonitoringApi.cs"];
m20_75 [label="Entry InfiniteLoopComponent.cstr", span="", cluster="InfiniteLoopComponent.cstr", file="RedisMonitoringApi.cs"];
m20_30 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="RedisMonitoringApi.cs"];
m20_14 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs"];
m20_17 [label="Assert.Same(_inner.Object, result)", span="30-30", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_16 [label="var result = component.InnerComponent", span="29-29", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs"];
m20_15 [label="var component = CreateComponent()", span="28-28", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs"];
m20_18 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", span="26-26", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerComponent()", file="RedisMonitoringApi.cs"];
m20_72 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisMonitoringApi.cs"];
m20_55 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="RedisMonitoringApi.cs"];
m20_41 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="RedisMonitoringApi.cs"];
m20_9 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisMonitoringApi.cs"];
m20_6 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisMonitoringApi.cs"];
m20_7 [label="Assert.Throws<ArgumentNullException>(() => new InfiniteLoopComponent(null))", span="22-22", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisMonitoringApi.cs"];
m20_8 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="20-20", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisMonitoringApi.cs"];
m20_21 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_24 [label="_cts.CancelAfter(TimeSpan.FromMilliseconds(100))", span="41-41", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_23 [label="var component = CreateComponent()", span="40-40", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_25 [label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="44-44", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_26 [label="_inner.Verify(x => x.Execute(_cts.Token), Times.AtLeast(5))", span="47-47", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_22 [label="_inner.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="37-38", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_27 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_45 [label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="RedisMonitoringApi.cs"];
m20_0 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs"];
m20_1 [label="_inner = new Mock<IServerComponent>()", span="15-15", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs"];
m20_2 [label="_cts = new CancellationTokenSource()", span="16-16", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs"];
m20_3 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisMonitoringApi.cs"];
m20_71 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="RedisMonitoringApi.cs"];
m20_28 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RedisMonitoringApi.cs"];
m20_5 [label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0", cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="RedisMonitoringApi.cs"];
m20_4 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="RedisMonitoringApi.cs"];
m20_10 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_46 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_47 [label="x.Execute(_cts.Token)", span="47-47", cluster="lambda expression", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_48 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_57 [label="component.Execute(_cts.Token)", span="58-58", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_43 [label="component.Execute(_cts.Token)", span="44-44", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_42 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_35 [label="x.Execute(It.IsAny<CancellationToken>())", span="37-37", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_60 [label="x.Execute(It.IsAny<CancellationToken>())", span="61-61", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_56 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_58 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_34 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_38 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_44 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_59 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_36 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_61 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_40 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_39 [label="Thread.Sleep(5)", span="38-38", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_11 [label="new InfiniteLoopComponent(null)", span="22-22", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_12 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="RedisMonitoringApi.cs"];
m20_65 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs"];
m20_68 [label="Assert.Equal(_inner.Object.ToString(), result)", span="75-75", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_67 [label="var result = component.ToString()", span="74-74", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs"];
m20_66 [label="var component = CreateComponent()", span="73-73", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs"];
m20_69 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisMonitoringApi.cs"];
m20_49 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs"];
m20_50 [label="var component = CreateComponent()", span="54-54", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", color=green, community=0, file="RedisMonitoringApi.cs"];
m20_51 [label="_cts.Cancel()", span="55-55", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs"];
m20_52 [label="Assert.Throws<OperationCanceledException>(() => component.Execute(_cts.Token))", span="58-58", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs"];
m20_53 [label="_inner.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="61-61", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs"];
m20_54 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisMonitoringApi.cs"];
m20_31 [label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="RedisMonitoringApi.cs"];
m20_32 [label="Entry Unk.AtLeast", span="", cluster="Unk.AtLeast", file="RedisMonitoringApi.cs"];
m20_62 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_63 [label="_cts.Cancel()", span="67-67", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_64 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="RedisMonitoringApi.cs"];
m20_37 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="RedisMonitoringApi.cs"];
m20_70 [label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="41-41", cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="RedisMonitoringApi.cs"];
m20_29 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="RedisMonitoringApi.cs"];
m20_13 [label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="24-24", cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="RedisMonitoringApi.cs"];
m20_33 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RedisMonitoringApi.cs"];
m20_76 [label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span="", file="RedisMonitoringApi.cs"];
m20_78 [label=component, span="", file="RedisMonitoringApi.cs"];
m20_77 [label=component, span="", file="RedisMonitoringApi.cs"];
m21_13 [label="Entry System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime, System.TimeZoneInfo)", span="0-0", cluster="System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime, System.TimeZoneInfo)", file="RedisStorage.cs"];
m21_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisStorage.cs"];
m21_23 [label="Entry Unk.GetNextOccurrences", span="", cluster="Unk.GetNextOccurrences", file="RedisStorage.cs"];
m21_16 [label="Entry Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="49-49", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_17 [label="lastInstant.HasValue && lastInstant.Value.Kind != DateTimeKind.Utc", span="51-51", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_19 [label="var baseTime = lastInstant ?? NowInstant.AddSeconds(-1)", span="56-56", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_18 [label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''lastInstant'');", span="53-53", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_20 [label="var endTime = NowInstant.AddSeconds(1)", span="57-57", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_21 [label="return _schedule\r\n                .GetNextOccurrences(\r\n                    TimeZoneInfo.ConvertTimeFromUtc(baseTime, _timeZone),\r\n                    TimeZoneInfo.ConvertTimeFromUtc(endTime, _timeZone))\r\n                .Select(x => TimeZoneInfo.ConvertTimeToUtc(x, _timeZone))\r\n                .ToList();", span="59-64", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_22 [label="Exit Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", span="49-49", cluster="Hangfire.Server.ScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStorage.cs"];
m21_11 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="RedisStorage.cs"];
m21_25 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="RedisStorage.cs"];
m21_12 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="RedisStorage.cs"];
m21_14 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence", file="RedisStorage.cs"];
m21_15 [label="Entry Unk.ConvertTimeToUtc", span="", cluster="Unk.ConvertTimeToUtc", file="RedisStorage.cs"];
m21_26 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="RedisStorage.cs"];
m21_27 [label="TimeZoneInfo.ConvertTimeToUtc(x, _timeZone)", span="63-63", cluster="lambda expression", file="RedisStorage.cs"];
m21_28 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="RedisStorage.cs"];
m21_0 [label="Entry Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="29-29", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_1 [label="schedule == null", span="31-31", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_3 [label="nowInstant.Kind != DateTimeKind.Utc", span="32-32", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_5 [label="_timeZone = timeZone", span="37-37", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_6 [label="_schedule = schedule", span="38-38", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_7 [label="NowInstant = nowInstant.AddSeconds(-nowInstant.Second)", span="40-40", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_2 [label="throw new ArgumentNullException(''schedule'');", span="31-31", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_4 [label="throw new ArgumentException(''Only DateTime values in UTC should be passed.'', ''nowInstant'');", span="34-34", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_8 [label="NextInstant = TimeZoneInfo.ConvertTimeToUtc(\r\n                _schedule.GetNextOccurrence(TimeZoneInfo.ConvertTimeFromUtc(NowInstant, _timeZone)),\r\n                _timeZone)", span="41-43", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_9 [label="Exit Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", span="29-29", cluster="Hangfire.Server.ScheduleInstant.ScheduleInstant(System.DateTime, System.TimeZoneInfo, CrontabSchedule)", file="RedisStorage.cs"];
m21_24 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="RedisStorage.cs"];
m21_29 [label="Hangfire.Server.ScheduleInstant", span="", file="RedisStorage.cs"];
m22_66 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_67 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its properties list'', ((string[])(null)))", span="155-155", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_68 [label="this.ScenarioSetup(scenarioInfo)", span="157-157", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_69 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="159-159", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_70 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="161-161", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_71 [label="this.ScenarioCleanup()", span="163-163", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_72 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="RetryAttribute.cs"];
m22_22 [label="Entry HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RetryAttribute.cs"];
m22_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RetryAttribute.cs"];
m22_24 [label="Exit HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.ServerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RetryAttribute.cs"];
m22_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="RetryAttribute.cs"];
m22_26 [label="Entry HangFire.Tests.ServerFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()", file="RetryAttribute.cs"];
m22_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()", file="RetryAttribute.cs"];
m22_28 [label="Exit HangFire.Tests.ServerFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.ServerFeature.ScenarioCleanup()", file="RetryAttribute.cs"];
m22_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="RetryAttribute.cs"];
m22_52 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_53 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its queues'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_54 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_55 [label="testRunner.When(''the \'Test\' server starts with the queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_56 [label="testRunner.Then(''the \'Test\' server\'s queues list should contain queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="127-127", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_57 [label="this.ScenarioCleanup()", span="129-129", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_58 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="RetryAttribute.cs"];
m22_59 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_60 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should remove itself from the servers set'', ((string[])(null)))", span="138-138", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_61 [label="this.ScenarioSetup(scenarioInfo)", span="140-140", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_62 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_63 [label="testRunner.Then(''the servers set should not contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_64 [label="this.ScenarioCleanup()", span="146-146", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_65 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="RetryAttribute.cs"];
m22_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="RetryAttribute.cs"];
m22_18 [label="Entry HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="RetryAttribute.cs"];
m22_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="RetryAttribute.cs"];
m22_20 [label="Exit HangFire.Tests.ServerFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.ServerFeature.ScenarioTearDown()", file="RetryAttribute.cs"];
m22_0 [label="Entry HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs"];
m22_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="RetryAttribute.cs"];
m22_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs"];
m22_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs"];
m22_4 [label="Exit HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="RetryAttribute.cs"];
m22_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="RetryAttribute.cs"];
m22_30 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should add itself to the servers set'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_33 [label="testRunner.When(''the \'Test\' server starts'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="81-81", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_34 [label="testRunner.Then(''the servers set should contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="83-83", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_35 [label="this.ScenarioCleanup()", span="85-85", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_36 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="RetryAttribute.cs"];
m22_40 [label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_41 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its properties'', ((string[])(null)))", span="94-94", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_42 [label="this.ScenarioSetup(scenarioInfo)", span="96-96", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_43 [label="testRunner.When(''the \'Test\' server starts with 5 workers'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="98-98", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_44 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="100-102", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_45 [label="table1.AddRow(new string[] {\r\n                        ''WorkerCount'',\r\n                        ''5''})", span="103-105", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_46 [label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="106-108", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_47 [label="testRunner.Then(''the \'Test\' server\'s properties should contain the following items:'', ((string)(null)), table1, ''Then '')", span="110-110", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_48 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_49 [label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92", cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="RetryAttribute.cs"];
m22_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="RetryAttribute.cs"];
m22_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="RetryAttribute.cs"];
m22_38 [label="Entry Unk.When", span="", cluster="Unk.When", file="RetryAttribute.cs"];
m22_14 [label="Entry HangFire.Tests.ServerFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs"];
m22_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server''))", span="48-49", cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs"];
m22_16 [label="HangFire.Tests.ServerFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs"];
m22_17 [label="Exit HangFire.Tests.ServerFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.ServerFeature.TestInitialize()", file="RetryAttribute.cs"];
m22_51 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="RetryAttribute.cs"];
m22_73 [label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_74 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its queues'', ((string[])(null)))", span="172-172", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_75 [label="this.ScenarioSetup(scenarioInfo)", span="174-174", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_76 [label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_77 [label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server queues'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="178-178", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_78 [label="this.ScenarioCleanup()", span="180-180", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_79 [label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170", cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="RetryAttribute.cs"];
m22_37 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="RetryAttribute.cs"];
m22_39 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="RetryAttribute.cs"];
m22_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="RetryAttribute.cs"];
m22_50 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="RetryAttribute.cs"];
m22_9 [label="Entry HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs"];
m22_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs"];
m22_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs"];
m22_12 [label="Exit HangFire.Tests.ServerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="RetryAttribute.cs"];
m22_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="RetryAttribute.cs"];
m22_80 [label="HangFire.Tests.ServerFeature", span="", file="RetryAttribute.cs"];
m23_65 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ScheduledJobsPage.generated.cs"];
m23_25 [label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="197-197", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_21 [label=scheduledJobs, span="176-176", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_28 [label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="213-214", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_61 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ScheduledJobsPage.generated.cs"];
m23_20 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Enqueue</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Scheduled</th>\r\n                </tr>\r\n            </thead>\r\n'')", span="156-171", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_59 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ScheduledJobsPage.generated.cs"];
m23_57 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs"];
m23_24 [label="WriteLiteral('' '')", span="192-192", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_67 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ScheduledJobsPage.generated.cs"];
m23_27 [label="job.Value.InScheduledState", span="207-207", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_22 [label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="182-182", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_64 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs"];
m23_23 [label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="187-187", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", color=green, community=0];
m23_0 [label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs"];
m23_1 [label=expected, span="11-11", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_2 [label="var name = row.Key", span="13-13", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", color=red, community=0];
m23_9 [label="var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="27-27", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_4 [label="Assert.True(actual.ContainsKey(name))", span="16-16", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", color=red, community=0];
m23_5 [label="value == ''<UtcNow timestamp>''", span="17-17", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", color=red, community=0];
m23_8 [label="value == ''<Tomorrow timestamp>''", span="25-25", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_10 [label="Assert.True(\r\n                        timestamp >= DateTime.UtcNow.Date.AddDays(1)\r\n                        && timestamp < DateTime.UtcNow.Date.AddDays(2))", span="28-30", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_12 [label="Assert.False(String.IsNullOrEmpty(actual[name]))", span="34-34", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_19 [label="Entry Unk.True", span="", cluster="Unk.True", file="ScheduledJobsPage.generated.cs"];
m23_55 [label="Write(RenderPartial(new Paginator(pager)))", span="383-383", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_6 [label="var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="19-19", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_7 [label="Assert.True(\r\n                        (timestamp > DateTime.UtcNow.AddSeconds(-1))\r\n                        && (timestamp < DateTime.UtcNow.AddSeconds(1)))", span="21-23", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_11 [label="value == ''<Non-empty>''", span="32-32", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", color=red, community=0];
m23_13 [label="value.StartsWith(''<Assembly qualified name of '')", span="36-36", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_14 [label="var splitted = value.Split('\'')", span="38-38", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_54 [label="WriteLiteral(''        </table>\r\n    </div>\r\n'')", span="371-371", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_53 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="361-361", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m23_15 [label="Assert.Equal(Type.GetType(splitted[1]).AssemblyQualifiedName, actual[name])", span="39-39", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", color=red, community=0];
m23_16 [label="Assert.Equal(value, actual[name])", span="43-43", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="ScheduledJobsPage.generated.cs"];
m23_17 [label="Exit HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs"];
m23_18 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_26 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="ScheduledJobsPage.generated.cs"];
m23_31 [label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <a href=\'''')", span="234-235", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_29 [label="Write(job.Key)", span="219-219", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_32 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="240-240", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_30 [label="WriteLiteral(''\'' />\r\n'')", span="224-224", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m23_33 [label="WriteLiteral(''\''>\r\n                            '')", span="245-245", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_34 [label="Write(HtmlHelper.JobId(job.Key))", span="250-250", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_35 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="255-255", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m23_36 [label="!job.Value.InScheduledState", span="260-260", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_37 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="266-267", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_38 [label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <span data-moment=\'''')", span="277-278", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_39 [label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueueAt))", span="283-283", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_40 [label="WriteLiteral(''\''>\r\n                            '')", span="288-288", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_41 [label="Write(job.Value.EnqueueAt)", span="293-293", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_42 [label="WriteLiteral(''\r\n                        </span>\r\n                    </td>\r\n                   '' +\r\n'' <td>\r\n                        <a class=\''job-method\'' href=\'''')", span="298-299", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_43 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="304-304", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_44 [label="WriteLiteral(''\''>\r\n                            '')", span="309-309", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_45 [label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="314-314", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_46 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d class=\''align-right\''>\r\n'')", span="319-320", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_47 [label="job.Value.ScheduledAt != null", span="325-325", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_48 [label="WriteLiteral(''                            <span data-moment=\'''')", span="331-331", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_49 [label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt.Value))", span="336-336", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_50 [label="WriteLiteral(''\''>\r\n                                '')", span="341-341", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_51 [label="Write(job.Value.ScheduledAt)", span="346-346", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="ScheduledJobsPage.generated.cs"];
m23_52 [label="WriteLiteral(''\r\n                            </span>\r\n'')", span="351-351", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m23_3 [label="var value = row.Value", span="14-14", cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledJobsPage.generated.cs", color=red, community=0];
m23_56 [label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs"];
m23_66 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs"];
m23_62 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs"];
m23_70 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledJobsPage.generated.cs"];
m23_68 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ScheduledJobsPage.generated.cs"];
m23_69 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ScheduledJobsPage.generated.cs"];
m23_60 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs"];
m23_58 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs"];
m23_63 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs"];
m23_71 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ScheduledJobsPage.generated.cs"];
m23_72 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs"];
m23_73 [label="HangFire.Web.Pages.ScheduledJobsPage", span="", file="ScheduledJobsPage.generated.cs"];
m25_114 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="127-127", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_115 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="129-132", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_116 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n            })", span="134-154", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_117 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="127-127", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_29 [label="Entry lambda expression", span="44-53", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_38 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs"];
m25_237 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="335-335", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_238 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="337-343", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_239 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", span="335-335", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_18 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="32-32", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs"];
m25_19 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireJobLock(''1'');\r\n                Assert.NotNull(@lock);\r\n            })", span="34-38", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs"];
m25_20 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", span="32-32", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AcquireJobLock_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs"];
m25_432 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ServerBootstrapperFacts.cs"];
m25_279 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="401-401", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerBootstrapperFacts.cs"];
m25_280 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="403-409", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerBootstrapperFacts.cs"];
m25_281 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="401-401", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerBootstrapperFacts.cs"];
m25_337 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="477-477", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerBootstrapperFacts.cs"];
m25_338 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.Null(server.HeartBeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="479-504", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerBootstrapperFacts.cs"];
m25_339 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="477-477", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerBootstrapperFacts.cs"];
m25_81 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should persist the job data'', ((string[])(null)))", span="185-185", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_44 [label="Assert.Equal(''parameters'', exception.ParamName)", span="67-67", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_49 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="ServerBootstrapperFacts.cs"];
m25_48 [label="Exit lambda expression", span="62-65", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_50 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_47 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        TimeSpan.Zero)", span="62-65", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_51 [label="SampleMethod(''hello'')", span="63-63", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_46 [label="Entry lambda expression", span="62-65", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_45 [label="Exit lambda expression", span="59-68", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_52 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_72 [label="Assert.True(DateTime.UtcNow < sqlJob.ExpireAt && sqlJob.ExpireAt < DateTime.UtcNow.AddDays(1))", span="97-97", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_77 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ServerBootstrapperFacts.cs"];
m25_74 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="104-104", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_75 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="105-105", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_78 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="ServerBootstrapperFacts.cs"];
m25_76 [label="Exit lambda expression", span="74-106", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_73 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="99-102", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_79 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="ServerBootstrapperFacts.cs"];
m25_54 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="ServerBootstrapperFacts.cs"];
m25_55 [label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="126-126", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m25_56 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should expire the job data'', ((string[])(null)))", span="128-128", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_80 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ServerBootstrapperFacts.cs"];
m25_86 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="ServerBootstrapperFacts.cs"];
m25_82 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="ServerBootstrapperFacts.cs"];
m25_83 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="ServerBootstrapperFacts.cs"];
m25_87 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_85 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerBootstrapperFacts.cs"];
m25_84 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="ServerBootstrapperFacts.cs"];
m25_88 [label="SampleMethod(''Hello'')", span="77-77", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_7 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", span="35-35", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection)", file="ServerBootstrapperFacts.cs"];
m25_375 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="ServerBootstrapperFacts.cs"];
m25_64 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="86-86", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_69 [label="Assert.Equal(typeof(ConnectionFacts), job.Type)", span="93-93", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=red, community=0];
m25_66 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="89-89", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_67 [label="invocationData.Arguments = sqlJob.Arguments", span="90-90", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_70 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="94-94", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_68 [label="var job = invocationData.Deserialize()", span="92-92", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_65 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="87-87", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_71 [label="Assert.Equal(''Hello'', job.Arguments[0])", span="95-95", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_247 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="214-214", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="ServerBootstrapperFacts.cs"];
m25_289 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="223-223", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerBootstrapperFacts.cs"];
m25_34 [label="Entry lambda expression", span="47-50", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_365 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="515-515", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs"];
m25_366 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data)\r\nvalues \r\n('Server1', ''),\r\n('Server2', '')''", span="517-521", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs"];
m25_367 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="523-531", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs"];
m25_368 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", span="515-515", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerBootstrapperFacts.cs"];
m25_269 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="377-377", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs"];
m25_270 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="379-381", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs"];
m25_271 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    }); \r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(2, count);\r\n            })", span="383-397", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs"];
m25_272 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="377-377", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ServerBootstrapperFacts.cs"];
m25_268 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ServerBootstrapperFacts.cs"];
m25_431 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="ServerBootstrapperFacts.cs"];
m25_306 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="432-432", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs"];
m25_307 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="434-440", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs"];
m25_308 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="442-449", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs"];
m25_309 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="432-432", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerBootstrapperFacts.cs"];
m25_258 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="359-359", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs"];
m25_259 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="361-363", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs"];
m25_260 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' });\r\n\r\n                connection.DeleteJobFromQueue(''1'', ''default'');\r\n\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="365-373", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs"];
m25_261 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="359-359", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ServerBootstrapperFacts.cs"];
m25_326 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="234-234", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="ServerBootstrapperFacts.cs"];
m25_386 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="542-542", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs"];
m25_387 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data)\r\nvalues\r\n('server1', ''),\r\n('server2', '')''", span="544-548", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs"];
m25_388 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime?)x.LastHeartbeat);\r\n\r\n                Assert.NotNull(servers[''server1'']);\r\n                Assert.Null(servers[''server2'']);\r\n            })", span="550-561", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs"];
m25_389 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="542-542", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerBootstrapperFacts.cs"];
m25_26 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="42-42", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerBootstrapperFacts.cs"];
m25_27 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="44-53", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerBootstrapperFacts.cs"];
m25_28 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="42-42", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerBootstrapperFacts.cs"];
m25_199 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="277-277", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_200 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="279-285", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_201 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="277-277", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_99 [label="Entry lambda expression", span="112-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_105 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="153-153", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerBootstrapperFacts.cs"];
m25_101 [label="Exit lambda expression", span="112-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_102 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_106 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="117-117", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerBootstrapperFacts.cs"];
m25_104 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_100 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="112-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=red, community=0];
m25_103 [label="connection.GetJobData(null)", span="113-113", cluster="lambda expression", file="ServerBootstrapperFacts.cs", color=red, community=0];
m25_107 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="119-123", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerBootstrapperFacts.cs"];
m25_89 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_144 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="183-183", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_145 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="185-191", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_146 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="183-183", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_16 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="47-47", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ServerBootstrapperFacts.cs"];
m25_130 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="ServerBootstrapperFacts.cs"];
m25_376 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="535-535", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_377 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="537-538", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_378 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="535-535", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_413 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="275-275", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerBootstrapperFacts.cs"];
m25_325 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs"];
m25_57 [label="this.ScenarioSetup(scenarioInfo)", span="130-130", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_418 [label="Entry lambda expression", span="578-592", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_4 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_5 [label="new SqlServerConnection(null)", span="18-18", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_6 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_12 [label="Entry lambda expression", span="24-28", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_13 [label="var transaction = connection.CreateWriteTransaction()", span="26-26", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_14 [label="Assert.NotNull(transaction)", span="27-27", cluster="lambda expression", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m25_15 [label="Exit lambda expression", span="24-28", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_21 [label="Entry lambda expression", span="34-38", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_22 [label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ServerBootstrapperFacts.cs"];
m25_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ServerBootstrapperFacts.cs"];
m25_24 [label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ServerBootstrapperFacts.cs"];
m25_30 [label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs"];
m25_35 [label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs"];
m25_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs"];
m25_32 [label="testRunner.Given(''the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="77-77", cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs"];
m25_36 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs"];
m25_42 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ServerBootstrapperFacts.cs"];
m25_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="ServerBootstrapperFacts.cs"];
m25_58 [label="this.FeatureBackground()", span="132-132", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_59 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="134-134", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_62 [label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="126-126", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_60 [label="testRunner.Then(''it should expire the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="136-136", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_61 [label="this.ScenarioCleanup()", span="138-138", cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="ServerBootstrapperFacts.cs"];
m25_63 [label="Entry Unk.When", span="", cluster="Unk.When", file="ServerBootstrapperFacts.cs"];
m25_90 [label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_93 [label="this.FeatureBackground()", span="210-210", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_91 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="206-206", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_92 [label="this.ScenarioSetup(scenarioInfo)", span="208-208", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_94 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="212-212", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_95 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="214-214", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_109 [label="Entry lambda expression", span="119-123", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_110 [label="var result = connection.GetJobData(''1'')", span="121-121", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_111 [label="Assert.Null(result)", span="122-122", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_112 [label="Exit lambda expression", span="119-123", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_120 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="138-145", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_118 [label="Entry lambda expression", span="134-154", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_119 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="136-136", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_121 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="147-147", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_131 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_122 [label="Assert.NotNull(result)", span="149-149", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_123 [label="Assert.NotNull(result.Job)", span="150-150", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_124 [label="Assert.Equal(''Succeeded'', result.State)", span="151-151", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_125 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="152-152", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_126 [label="Assert.Null(result.LoadException)", span="153-153", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_127 [label="Exit lambda expression", span="134-154", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_132 [label="SampleMethod(''wrong'')", span="136-136", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_133 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_139 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="167-174", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_138 [label="Entry lambda expression", span="165-179", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_140 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="176-176", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_141 [label="Assert.NotNull(result.LoadException)", span="178-178", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_142 [label="Exit lambda expression", span="165-179", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_147 [label="Entry lambda expression", span="185-191", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_148 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="187-188", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_152 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="188-188", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_149 [label="Assert.Equal(''id'', exception.ParamName)", span="190-190", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_151 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_150 [label="Exit lambda expression", span="185-191", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_153 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_158 [label="Entry lambda expression", span="197-203", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_159 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="199-200", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_163 [label="connection.SetJobParameter(''1'', null, ''value'')", span="200-200", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_160 [label="Assert.Equal(''name'', exception.ParamName)", span="202-202", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_162 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_161 [label="Exit lambda expression", span="197-203", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_164 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_170 [label="var job = sql.Query(arrangeSql).Single()", span="216-216", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_169 [label="Entry lambda expression", span="214-226", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_172 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="219-219", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_173 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="221-223", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_171 [label="string jobId = job.Id.ToString()", span="217-217", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_174 [label="Assert.Equal(''Value'', parameter.Value)", span="225-225", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_175 [label="Exit lambda expression", span="214-226", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_181 [label="var job = sql.Query(arrangeSql).Single()", span="239-239", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_180 [label="Entry lambda expression", span="237-250", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_183 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="242-242", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_184 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="243-243", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_185 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="245-247", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_182 [label="string jobId = job.Id.ToString()", span="240-240", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_186 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="249-249", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_187 [label="Exit lambda expression", span="237-250", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_193 [label="var job = sql.Query(arrangeSql).Single()", span="263-263", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_192 [label="Entry lambda expression", span="261-273", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_195 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="266-266", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_196 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="268-270", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_194 [label="string jobId = job.Id.ToString()", span="264-264", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_197 [label="Assert.Equal((string) null, parameter.Value)", span="272-272", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_198 [label="Exit lambda expression", span="261-273", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_202 [label="Entry lambda expression", span="279-285", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_203 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="281-282", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_207 [label="connection.GetJobParameter(null, ''hello'')", span="282-282", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_204 [label="Assert.Equal(''id'', exception.ParamName)", span="284-284", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_206 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_205 [label="Exit lambda expression", span="279-285", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_208 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_213 [label="Entry lambda expression", span="291-297", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_214 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="293-294", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_218 [label="connection.GetJobParameter(''1'', null)", span="294-294", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_215 [label="Assert.Equal(''name'', exception.ParamName)", span="296-296", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_217 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_216 [label="Exit lambda expression", span="291-297", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_219 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_223 [label="Entry lambda expression", span="303-307", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_224 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="305-305", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_225 [label="Assert.Null(value)", span="306-306", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_226 [label="Exit lambda expression", span="303-307", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_232 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="324-326", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_231 [label="Entry lambda expression", span="322-331", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_233 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="328-328", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_234 [label="Assert.Equal(''value'', value)", span="330-330", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_235 [label="Exit lambda expression", span="322-331", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_240 [label="Entry lambda expression", span="337-343", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_241 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(null, ''default''))", span="339-340", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_245 [label="connection.DeleteJobFromQueue(null, ''default'')", span="340-340", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_242 [label="Assert.Equal(''id'', exception.ParamName)", span="342-342", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_244 [label="Entry lambda expression", span="340-340", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_243 [label="Exit lambda expression", span="337-343", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_246 [label="Exit lambda expression", span="340-340", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_251 [label="Entry lambda expression", span="349-355", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_252 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null))", span="351-352", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_256 [label="connection.DeleteJobFromQueue(''1'', null)", span="352-352", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_253 [label="Assert.Equal(''queue'', exception.ParamName)", span="354-354", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_255 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_254 [label="Exit lambda expression", span="349-355", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_257 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_263 [label="sql.Execute(arrangeSql, new { id = ''1'', queue = ''default'' })", span="367-367", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_262 [label="Entry lambda expression", span="365-373", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_264 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="369-369", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_265 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="371-371", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_266 [label="Assert.Equal(0, count)", span="372-372", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_267 [label="Exit lambda expression", span="365-373", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_274 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    })", span="385-391", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_273 [label="Entry lambda expression", span="383-397", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_275 [label="connection.DeleteJobFromQueue(''1'', ''default'')", span="393-393", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_276 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="395-395", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_277 [label="Assert.Equal(2, count)", span="396-396", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_278 [label="Exit lambda expression", span="383-397", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_282 [label="Entry lambda expression", span="403-409", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_283 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="405-406", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_287 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="406-406", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_284 [label="Assert.Equal(''key'', exception.ParamName)", span="408-408", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_286 [label="Entry lambda expression", span="406-406", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_285 [label="Exit lambda expression", span="403-409", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_288 [label="Exit lambda expression", span="406-406", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_293 [label="Entry lambda expression", span="415-416", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_294 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="415-416", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_297 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="416-416", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_295 [label="Exit lambda expression", span="415-416", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_296 [label="Entry lambda expression", span="416-416", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_298 [label="Exit lambda expression", span="416-416", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_302 [label="Entry lambda expression", span="422-428", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_303 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="424-425", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_304 [label="Assert.Null(result)", span="427-427", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_305 [label="Exit lambda expression", span="422-428", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_311 [label="sql.Execute(arrangeSql)", span="444-444", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_310 [label="Entry lambda expression", span="442-449", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_312 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="446-446", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_313 [label="Assert.Equal(''-1.0'', result)", span="448-448", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_314 [label="Exit lambda expression", span="442-449", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_318 [label="Entry lambda expression", span="455-461", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_319 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="457-458", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_323 [label="connection.AnnounceServer(null, new ServerContext())", span="458-458", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_320 [label="Assert.Equal(''serverId'', exception.ParamName)", span="460-460", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_322 [label="Entry lambda expression", span="458-458", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_321 [label="Exit lambda expression", span="455-461", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_324 [label="Exit lambda expression", span="458-458", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_330 [label="Entry lambda expression", span="467-473", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_331 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="469-470", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_335 [label="connection.AnnounceServer(''server'', null)", span="470-470", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_332 [label="Assert.Equal(''context'', exception.ParamName)", span="472-472", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_334 [label="Entry lambda expression", span="470-470", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_333 [label="Exit lambda expression", span="467-473", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_336 [label="Exit lambda expression", span="470-470", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_340 [label="Entry lambda expression", span="479-504", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_341 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="481-485", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_342 [label="connection.AnnounceServer(''server'', context1)", span="486-486", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_343 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="488-488", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_348 [label="connection.AnnounceServer(''server'', context2)", span="500-500", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_349 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="501-501", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_344 [label="Assert.Equal(''server'', server.Id)", span="489-489", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_345 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="490-492", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_346 [label="Assert.Null(server.HeartBeat)", span="493-493", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_347 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="495-499", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_350 [label="Assert.Equal(''server'', sameServer.Id)", span="502-502", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_351 [label="Assert.Contains(''1000'', sameServer.Data)", span="503-503", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_352 [label="Exit lambda expression", span="479-504", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_358 [label="Entry lambda expression", span="510-511", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_359 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="510-511", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_362 [label="connection.RemoveServer(null)", span="511-511", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_360 [label="Exit lambda expression", span="510-511", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_361 [label="Entry lambda expression", span="511-511", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_363 [label="Exit lambda expression", span="511-511", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_370 [label="sql.Execute(arrangeSql)", span="525-525", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_369 [label="Entry lambda expression", span="523-531", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_371 [label="connection.RemoveServer(''Server1'')", span="527-527", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_372 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="529-529", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_373 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="530-530", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_374 [label="Exit lambda expression", span="523-531", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_379 [label="Entry lambda expression", span="537-538", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_380 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="537-538", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_383 [label="connection.Heartbeat(null)", span="538-538", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_381 [label="Exit lambda expression", span="537-538", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_382 [label="Entry lambda expression", span="538-538", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_384 [label="Exit lambda expression", span="538-538", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_391 [label="sql.Execute(arrangeSql)", span="552-552", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_390 [label="Entry lambda expression", span="550-561", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_392 [label="connection.Heartbeat(''server1'')", span="554-554", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_393 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime?)x.LastHeartbeat)", span="556-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_394 [label="Assert.NotNull(servers[''server1''])", span="559-559", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_397 [label="Entry lambda expression", span="557-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_400 [label="Entry lambda expression", span="557-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_395 [label="Assert.Null(servers[''server2''])", span="560-560", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_396 [label="Exit lambda expression", span="550-561", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_398 [label="(string)x.Id", span="557-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_399 [label="Exit lambda expression", span="557-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_401 [label="(DateTime?)x.LastHeartbeat", span="557-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_402 [label="Exit lambda expression", span="557-557", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_406 [label="Entry lambda expression", span="567-568", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_407 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="567-568", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_410 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="568-568", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_408 [label="Exit lambda expression", span="567-568", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_409 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_411 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_419 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="580-586", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_420 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="588-588", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_421 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="590-590", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_422 [label="Assert.Equal(''server2'', liveServer.Id)", span="591-591", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_423 [label="Exit lambda expression", span="578-592", cluster="lambda expression", file="ServerBootstrapperFacts.cs"];
m25_188 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="254-254", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs"];
m25_189 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="256-259", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs"];
m25_190 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="261-273", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs"];
m25_191 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="254-254", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerBootstrapperFacts.cs"];
m25_154 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="189-189", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerBootstrapperFacts.cs"];
m25_96 [label="testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="216-216", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_97 [label="this.ScenarioCleanup()", span="218-218", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m25_98 [label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204", cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="ServerBootstrapperFacts.cs"];
m25_355 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="508-508", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_356 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="510-511", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_357 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="508-508", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_176 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="230-230", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs"];
m25_177 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="232-235", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs"];
m25_178 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="237-250", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs"];
m25_179 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="230-230", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerBootstrapperFacts.cs"];
m25_209 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="203-203", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerBootstrapperFacts.cs"];
m25_11 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="ServerBootstrapperFacts.cs"];
m25_8 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="22-22", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs"];
m25_9 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="24-28", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m25_10 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="22-22", cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerBootstrapperFacts.cs"];
m25_33 [label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="ServerBootstrapperFacts.cs"];
m25_315 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="453-453", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_316 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="455-461", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_317 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="453-453", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs"];
m25_220 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="301-301", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_221 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="303-307", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_222 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="301-301", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_290 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="413-413", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerBootstrapperFacts.cs"];
m25_291 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="415-416", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerBootstrapperFacts.cs"];
m25_292 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="413-413", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerBootstrapperFacts.cs"];
m25_39 [label="testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs", color=green, community=0];
m25_40 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs"];
m25_41 [label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85", cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="ServerBootstrapperFacts.cs"];
m25_437 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ServerBootstrapperFacts.cs"];
m25_0 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="ServerBootstrapperFacts.cs"];
m25_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", span="17-18", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", color=red, community=0, file="ServerBootstrapperFacts.cs"];
m25_2 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", span="15-15", cluster="HangFire.SqlServer.Tests.ConnectionFacts.Ctor_ThrowsAnException_WhenSqlConnectionIsNull()", file="ServerBootstrapperFacts.cs"];
m25_17 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ServerBootstrapperFacts.cs"];
m25_414 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="572-572", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs"];
m25_415 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="574-576", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs"];
m25_416 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="578-592", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs"];
m25_417 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="572-572", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerBootstrapperFacts.cs"];
m25_403 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="565-565", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerBootstrapperFacts.cs"];
m25_404 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="567-568", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerBootstrapperFacts.cs"];
m25_405 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="565-565", cluster="HangFire.SqlServer.Tests.ConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerBootstrapperFacts.cs"];
m25_113 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="ServerBootstrapperFacts.cs"];
m25_165 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="207-207", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_166 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="209-212", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_167 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="214-226", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_168 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="207-207", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerBootstrapperFacts.cs"];
m25_37 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerBootstrapperFacts.cs"];
m25_53 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="ServerBootstrapperFacts.cs"];
m25_438 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", span="612-612", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SampleMethod(string)", file="ServerBootstrapperFacts.cs"];
m25_299 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="420-420", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerBootstrapperFacts.cs"];
m25_300 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="422-428", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerBootstrapperFacts.cs"];
m25_301 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="420-420", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerBootstrapperFacts.cs"];
m25_424 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="ServerBootstrapperFacts.cs"];
m25_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="ServerBootstrapperFacts.cs"];
m25_364 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="257-257", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerBootstrapperFacts.cs"];
m25_128 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="ServerBootstrapperFacts.cs"];
m25_327 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="465-465", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m25_328 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="467-473", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m25_329 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="465-465", cluster="HangFire.SqlServer.Tests.ConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs"];
m25_143 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ServerBootstrapperFacts.cs"];
m25_353 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="ServerBootstrapperFacts.cs"];
m25_412 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="ServerBootstrapperFacts.cs"];
m25_425 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="ServerBootstrapperFacts.cs"];
m25_433 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="604-604", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_434 [label="var connection = new SqlServerConnection(ConnectionUtils.CreateConnection())", span="606-606", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_435 [label="action(connection)", span="608-608", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_436 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", span="604-604", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnection(System.Action<HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_426 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="595-595", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_427 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="597-597", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_429 [label="action(sqlConnection, connection)", span="600-600", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_428 [label="var connection = new SqlServerConnection(sqlConnection)", span="598-598", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_430 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", span="595-595", cluster="HangFire.SqlServer.Tests.ConnectionFacts.UseConnections(System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>)", file="ServerBootstrapperFacts.cs"];
m25_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="ServerBootstrapperFacts.cs"];
m25_248 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="347-347", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ServerBootstrapperFacts.cs"];
m25_249 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.DeleteJobFromQueue(''1'', null));\r\n\r\n                Assert.Equal(''queue'', exception.ParamName);\r\n            })", span="349-355", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ServerBootstrapperFacts.cs"];
m25_250 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", span="347-347", cluster="HangFire.SqlServer.Tests.ConnectionFacts.DeleteJobFromQueue_ThrowsAnException_WhenQueueIsNull()", file="ServerBootstrapperFacts.cs"];
m25_227 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="311-311", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_228 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="313-320", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_229 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="322-331", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_230 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="311-311", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerBootstrapperFacts.cs"];
m25_134 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="158-158", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs"];
m25_135 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="160-163", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs"];
m25_136 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="165-179", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs"];
m25_137 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="158-158", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerBootstrapperFacts.cs"];
m25_236 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ServerBootstrapperFacts.cs"];
m25_155 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="195-195", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs"];
m25_156 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="197-203", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs"];
m25_157 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="195-195", cluster="HangFire.SqlServer.Tests.ConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs"];
m25_108 [label="HangFire.Tests.States.SucceededStateFeature", span="", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerBootstrapperFacts.cs"];
m25_354 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ServerBootstrapperFacts.cs"];
m25_210 [label="Entry HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="289-289", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs"];
m25_211 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="291-297", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs"];
m25_212 [label="Exit HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="289-289", cluster="HangFire.SqlServer.Tests.ConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerBootstrapperFacts.cs"];
m25_129 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="ServerBootstrapperFacts.cs"];
m25_385 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="266-266", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerBootstrapperFacts.cs"];
m25_439 [label="HangFire.SqlServer.Tests.ConnectionFacts", span="", file="ServerBootstrapperFacts.cs"];
m25_440 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_441 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_442 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_443 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_444 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_445 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_446 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_447 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_448 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_449 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_450 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_451 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_452 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_453 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_454 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_455 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_456 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_457 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_458 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_459 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_460 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_461 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_462 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_463 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_464 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_465 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m25_466 [label="HangFire.SqlServer.SqlServerConnection", span="", file="ServerBootstrapperFacts.cs"];
m25_467 [label=arrangeSql, span="", file="ServerBootstrapperFacts.cs"];
m26_36 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ServersPage.generated.cs"];
m26_38 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ServersPage.generated.cs"];
m26_31 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServersPage.generated.cs"];
m26_16 [label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="157-157", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", color=green, community=0];
m26_17 [label="WriteLiteral(''</td>\r\n                    <td data-moment=\'''')", span="162-162", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_18 [label="Write(JobHelper.ToStringTimestamp(server.StartedAt))", span="167-167", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", color=green, community=0];
m26_35 [label="Entry string.ToUpperInvariant()", span="0-0", cluster="string.ToUpperInvariant()", file="ServersPage.generated.cs"];
m26_4 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="77-77", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", color=green, community=1];
m26_5 [label="servers = monitor.Servers()", span="79-79", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_6 [label="WriteLiteral(''\r\n'')", span="86-86", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_7 [label="servers.Count == 0", span="91-91", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", color=green, community=0];
m26_0 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", file="ServersPage.generated.cs"];
m26_1 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", span="33-33", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(int, params string[])", color=green, community=0, file="ServersPage.generated.cs"];
m26_2 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", file="ServersPage.generated.cs"];
m26_3 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(params string[])", color=green, community=0, file="ServersPage.generated.cs"];
m26_10 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=green, community=0, file="ServersPage.generated.cs"];
m26_8 [label="Entry Unk.RegisterObject", span="", cluster="Unk.RegisterObject", color=green, community=0, file="ServersPage.generated.cs"];
m26_9 [label="Entry HangFire.BackgroundJobServer.Start()", span="66-66", cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, file="ServersPage.generated.cs"];
m26_28 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="223-223", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_11 [label="base.Stop()", span="65-65", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, file="ServersPage.generated.cs"];
m26_29 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="233-233", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_12 [label="HostingEnvironment.UnregisterObject(this)", span="66-66", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=red, community=0, file="ServersPage.generated.cs"];
m26_14 [label="Entry HangFire.BackgroundJobServer.Stop()", span="72-72", cluster="HangFire.BackgroundJobServer.Stop()", color=green, community=0, file="ServersPage.generated.cs"];
m26_20 [label="Write(server.StartedAt)", span="177-177", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_22 [label="server.Heartbeat.HasValue", span="187-187", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_24 [label="Write(JobHelper.ToStringTimestamp(server.Heartbeat.Value))", span="198-198", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_26 [label="Write(server.Heartbeat)", span="208-208", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_13 [label="Exit HangFire.Web.AspNetBackgroundJobServer.Stop()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop()", color=green, community=0, file="ServersPage.generated.cs"];
m26_15 [label="Entry Unk.UnregisterObject", span="", cluster="Unk.UnregisterObject", color=green, community=0, file="ServersPage.generated.cs"];
m26_19 [label="HangFire.Web.AspNetBackgroundJobServer", span="", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_21 [label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="182-182", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_23 [label="WriteLiteral(''                            <span data-moment=\'''')", span="193-193", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_25 [label="WriteLiteral(''\''>\r\n                                '')", span="203-203", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_27 [label="WriteLiteral(''\r\n                            </span>\r\n'')", span="213-213", cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs"];
m26_30 [label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57", cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs"];
m26_39 [label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40", cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ServersPage.generated.cs"];
m26_41 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServersPage.generated.cs"];
m26_40 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ServersPage.generated.cs"];
m26_37 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ServersPage.generated.cs"];
m26_34 [label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25", cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ServersPage.generated.cs"];
m26_33 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServersPage.generated.cs"];
m26_32 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServersPage.generated.cs"];
m26_42 [label="HangFire.Web.Pages.ServersPage", span="", file="ServersPage.generated.cs"];
m27_14 [label="BackgroundJob.ClientFactory = _oldClientFactory", span="37-37", cluster="HangFire.Tests.ClientApiTests.TearDown()", file="SqlServerMonitoringApi.cs"];
m27_109 [label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", span="122-122", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="SqlServerMonitoringApi.cs"];
m27_111 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>()))", span="126-129", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_110 [label="BackgroundJob.Create<DerivedTestService>(x => x.InstanceMethod(), _stateMock.Object)", span="124-124", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="SqlServerMonitoringApi.cs"];
m27_112 [label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", span="122-122", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesSpecifiedTypeToClient_NotTheDeclaringOne()", file="SqlServerMonitoringApi.cs"];
m27_227 [label="Entry HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", span="223-223", cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_229 [label="_jobClientMock.Verify(x => x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y =>\r\n                    y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6))))", span="227-234", cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_228 [label="BackgroundJob.Schedule(() => TestService.StaticMethod(), TimeSpan.FromHours(5))", span="225-225", cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_230 [label="Exit HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", span="223-223", cluster="HangFire.Tests.ClientApiTests.Schedule_StaticExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_47 [label="BackgroundJob.Create<TestService>(x => x.InstanceMethod(), _stateMock.Object)", span="80-80", cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", file="SqlServerMonitoringApi.cs", color=green, community=0];
m27_16 [label="var connection = _storage.GetConnection()", span="49-49", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", color=red, community=0];
m27_17 [label="var nextJob = connection.FetchNextJob(_context.QueueNames, cancellationToken)", span="51-51", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs", color=red, community=0];
m27_18 [label="ProcessJob(nextJob.JobId, connection, _process)", span="55-55", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m27_19 [label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m27_20 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="SqlServerMonitoringApi.cs"];
m27_130 [label="Entry HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", span="279-279", cluster="HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", file="SqlServerMonitoringApi.cs"];
m27_252 [label="Exit HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", span="279-279", cluster="HangFire.Tests.ClientApiTests.DerivedTestService.StaticMethod()", file="SqlServerMonitoringApi.cs"];
m27_174 [label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", span="262-262", cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", file="SqlServerMonitoringApi.cs"];
m27_248 [label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", span="262-262", cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(ref int)", file="SqlServerMonitoringApi.cs"];
m27_15 [label="Exit HangFire.Tests.ClientApiTests.TearDown()", span="33-33", cluster="HangFire.Tests.ClientApiTests.TearDown()", file="SqlServerMonitoringApi.cs"];
m27_215 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SqlServerMonitoringApi.cs"];
m27_45 [label="Entry HangFire.Tests.ClientApiTests.TestService.StaticMethod()", span="254-254", cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod()", file="SqlServerMonitoringApi.cs"];
m27_40 [label="x.CreateJob(\r\n                    It.IsAny<JobMethod>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<JobState>())", span="66-69", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_33 [label=JobPerformanceException, span="106-106", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_35 [label=Exception, span="113-113", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_34 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="108-111", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_36 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="115-118", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs", color=red, community=0];
m27_37 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="123-123", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_32 [label="state = new SucceededState()", span="104-104", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_244 [label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", span="246-246", cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod()", file="SqlServerMonitoringApi.cs"];
m27_76 [label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", span="100-100", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_77 [label="BackgroundJob.Create<TestService>(x => x.InstanceMethod(), _stateMock.Object)", span="102-102", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_78 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''InstanceMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>()))", span="104-107", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_79 [label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", span="100-100", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_9 [label="_storage = storage", span="41-41", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs"];
m27_7 [label="stateMachineFactory == null", span="39-39", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="SqlServerMonitoringApi.cs"];
m27_42 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_158 [label="Entry HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", span="258-258", cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", file="SqlServerMonitoringApi.cs"];
m27_247 [label="Exit HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", span="258-258", cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod(int)", file="SqlServerMonitoringApi.cs"];
m27_41 [label="Exit lambda expression", span="66-69", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_46 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SqlServerMonitoringApi.cs"];
m27_48 [label="HangFire.Server.Worker", span="", cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_49 [label="Exit HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", span="78-78", cluster="HangFire.Tests.ClientApiTests.Create_PassesState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_170 [label="Entry Unk.Inconclusive", span="", cluster="Unk.Inconclusive", file="SqlServerMonitoringApi.cs"];
m27_23 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_198 [label="Entry HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", span="197-197", cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_199 [label="BackgroundJob.Enqueue(() => TestService.StaticMethod())", span="199-199", cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_200 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState)))", span="201-204", cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_201 [label="Exit HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", span="197-197", cluster="HangFire.Tests.ClientApiTests.Enqueue_StaticExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_216 [label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139", cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m27_44 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_180 [label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100", cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="SqlServerMonitoringApi.cs"];
m27_43 [label="TestService.StaticMethod()", span="72-72", cluster="lambda expression", file="SqlServerMonitoringApi.cs", color=green, community=0];
m27_24 [label="var processingState = new ProcessingState(_context.ServerName)", span="78-78", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_122 [label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", span="133-133", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_124 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>()))", span="137-140", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_123 [label="BackgroundJob.Enqueue(() => DerivedTestService.StaticMethod())", span="135-135", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_125 [label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", span="133-133", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesDeclaringType_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_99 [label="Entry HangFire.Tests.ClientApiTests.IService.Method()", span="274-274", cluster="HangFire.Tests.ClientApiTests.IService.Method()", file="SqlServerMonitoringApi.cs"];
m27_251 [label="Exit HangFire.Tests.ClientApiTests.IService.Method()", span="274-274", cluster="HangFire.Tests.ClientApiTests.IService.Method()", file="SqlServerMonitoringApi.cs"];
m27_0 [label="Entry HangFire.Tests.ClientApiTests.SetUp()", span="21-21", cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs"];
m27_1 [label="GlobalLock.Acquire()", span="23-23", cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs"];
m27_3 [label="_jobClientMock = new Mock<IJobClient>()", span="26-26", cluster="HangFire.Tests.ClientApiTests.SetUp()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m27_5 [label="_stateMock = new Mock<JobState>()", span="29-29", cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs"];
m27_10 [label="Entry lambda expression", span="27-27", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m27_11 [label="_jobClientMock.Object", span="27-27", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m27_12 [label="Exit lambda expression", span="27-27", cluster="lambda expression", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m27_2 [label="_oldClientFactory = BackgroundJob.ClientFactory", span="24-24", cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs"];
m27_4 [label="BackgroundJob.ClientFactory = () => _jobClientMock.Object", span="27-27", cluster="HangFire.Tests.ClientApiTests.SetUp()", color=red, community=0, file="SqlServerMonitoringApi.cs"];
m27_6 [label="Exit HangFire.Tests.ClientApiTests.SetUp()", span="21-21", cluster="HangFire.Tests.ClientApiTests.SetUp()", file="SqlServerMonitoringApi.cs"];
m27_8 [label="Entry Mock<IJobClient>.cstr", span="", cluster="Mock<IJobClient>.cstr", file="SqlServerMonitoringApi.cs"];
m27_13 [label="Entry HangFire.Tests.ClientApiTests.TearDown()", span="33-33", cluster="HangFire.Tests.ClientApiTests.TearDown()", file="SqlServerMonitoringApi.cs"];
m27_246 [label="Exit HangFire.Tests.ClientApiTests.TestService.StaticMethod()", span="254-254", cluster="HangFire.Tests.ClientApiTests.TestService.StaticMethod()", file="SqlServerMonitoringApi.cs"];
m27_39 [label="Entry lambda expression", span="66-69", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_184 [label="Entry HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", span="266-266", cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="SqlServerMonitoringApi.cs"];
m27_249 [label="a = 10", span="268-268", cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_250 [label="Exit HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", span="266-266", cluster="HangFire.Tests.ClientApiTests.TestService.OutMethod(out int)", file="SqlServerMonitoringApi.cs"];
m27_137 [label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="144-144", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_138 [label="BackgroundJob.Create<TestService>(x => x.InstanceMethod(''Hello''), _stateMock.Object)", span="146-146", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_139 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''Hello''),\r\n                It.IsAny<JobState>()))", span="148-151", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_140 [label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="144-144", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_21 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m27_92 [label="Entry HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", span="111-111", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_93 [label="BackgroundJob.Create<IService>(x => x.Method(), _stateMock.Object)", span="113-113", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_94 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(IService) && x.Method.Name == ''Method''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>()))", span="115-118", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_95 [label="Exit HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", span="111-111", cluster="HangFire.Tests.ClientApiTests.Create_InstanceExpression_WithInterface_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_175 [label="Entry HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", span="177-177", cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_177 [label="BackgroundJob.Enqueue<DerivedTestService>(x => x.OutMethod(out a))", span="180-180", cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_176 [label="int a", span="179-179", cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_178 [label="Assert.Inconclusive(''Move to JobClient tests'')", span="182-182", cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_179 [label="Exit HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", span="177-177", cluster="HangFire.Tests.ClientApiTests.Create_PassingOutputParameters_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_211 [label="Entry HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", span="208-208", cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_213 [label="_jobClientMock.Verify(x => x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y => \r\n                    y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6))))", span="212-219", cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_212 [label="BackgroundJob.Schedule<TestService>(x => x.InstanceMethod(), TimeSpan.FromHours(5))", span="210-210", cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_214 [label="Exit HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", span="208-208", cluster="HangFire.Tests.ClientApiTests.Schedule_InstanceExpression_PassesCorrectScheduledState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_231 [label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119", cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m27_127 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_51 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_54 [label="Entry lambda expression", span="82-85", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_52 [label="x.InstanceMethod()", span="80-80", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_53 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_55 [label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x == _stateMock.Object))", span="82-85", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_56 [label="Exit lambda expression", span="82-85", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_57 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_116 [label="Entry lambda expression", span="126-129", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_117 [label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>())", span="126-129", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_118 [label="Exit lambda expression", span="126-129", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_119 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_189 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_192 [label="Entry lambda expression", span="190-193", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_190 [label="x.InstanceMethod()", span="188-188", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_191 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_193 [label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState))", span="190-193", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_194 [label="Exit lambda expression", span="190-193", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_195 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_196 [label="x is EnqueuedState", span="193-193", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_197 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_202 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_205 [label="Entry lambda expression", span="201-204", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_203 [label="TestService.StaticMethod()", span="199-199", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_204 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_206 [label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState))", span="201-204", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_207 [label="Exit lambda expression", span="201-204", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_208 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_209 [label="x is EnqueuedState", span="204-204", cluster="lambda expression", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_210 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_58 [label="x == _stateMock.Object", span="85-85", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_65 [label="TestService.StaticMethod()", span="91-91", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_233 [label="TestService.StaticMethod()", span="225-225", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_26 [label="return;", span="85-85", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_68 [label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''StaticMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>())", span="93-96", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_84 [label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''InstanceMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>())", span="104-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_101 [label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(IService) && x.Method.Name == ''Method''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>())", span="115-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_132 [label="client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(DerivedTestService)),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<JobState>())", span="137-140", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_146 [label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''Hello''),\r\n                It.IsAny<JobState>())", span="148-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_160 [label="client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''34''),\r\n                It.IsAny<JobState>())", span="159-162", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_221 [label="x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y => \r\n                    y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)))", span="212-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_236 [label="x.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(y =>\r\n                    y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)))", span="227-234", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_30 [label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="100-100", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_81 [label="x.InstanceMethod()", span="102-102", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_114 [label="x.InstanceMethod()", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_218 [label="x.InstanceMethod()", span="210-210", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_59 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_113 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_121 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_120 [label="x.Type == typeof(DerivedTestService)", span="127-127", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_182 [label="x.OutMethod(out a)", span="180-180", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_25 [label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="80-83", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_29 [label="jobData.EnsureLoaded()", span="98-98", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_64 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_67 [label="Entry lambda expression", span="93-96", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_80 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_83 [label="Entry lambda expression", span="104-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_96 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_100 [label="Entry lambda expression", span="115-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_131 [label="Entry lambda expression", span="137-140", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_141 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_145 [label="Entry lambda expression", span="148-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_155 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_159 [label="Entry lambda expression", span="159-162", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_171 [label="Entry lambda expression", span="170-170", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_172 [label="x.InstanceMethod(ref a)", span="170-170", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_220 [label="Entry lambda expression", span="212-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_235 [label="Entry lambda expression", span="227-234", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_66 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_232 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_234 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_27 [label="State state", span="93-93", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_69 [label="Exit lambda expression", span="93-96", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_70 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_73 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_85 [label="Exit lambda expression", span="104-107", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_86 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_89 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_102 [label="Exit lambda expression", span="115-118", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_103 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_106 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_133 [label="Exit lambda expression", span="137-140", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_134 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_147 [label="Exit lambda expression", span="148-151", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_148 [label="Entry lambda expression", span="150-150", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_161 [label="Exit lambda expression", span="159-162", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_162 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_222 [label="Exit lambda expression", span="212-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_223 [label="Entry lambda expression", span="215-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_237 [label="Exit lambda expression", span="227-234", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_238 [label="Entry lambda expression", span="230-234", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_31 [label="process.Run(performContext, jobData.Job)", span="102-102", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="SqlServerMonitoringApi.cs"];
m27_82 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_115 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_217 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_219 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_181 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_183 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_98 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_97 [label="x.Method()", span="113-113", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_143 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_142 [label="x.InstanceMethod(''Hello'')", span="146-146", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_157 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_156 [label="TestService.StaticMethod(34)", span="157-157", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_173 [label="Exit lambda expression", span="170-170", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_72 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_71 [label="x.Type == typeof(TestService) && x.Method.Name == ''StaticMethod''", span="94-94", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_75 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_74 [label="x.Length == 0", span="95-95", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_88 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_87 [label="x.Type == typeof(TestService) && x.Method.Name == ''InstanceMethod''", span="105-105", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_91 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_90 [label="x.Length == 0", span="106-106", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_105 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_104 [label="x.Type == typeof(IService) && x.Method.Name == ''Method''", span="116-116", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_108 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_107 [label="x.Length == 0", span="117-117", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_136 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_135 [label="x.Type == typeof(DerivedTestService)", span="138-138", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_150 [label="Exit lambda expression", span="150-150", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_149 [label="x[0] == ''Hello''", span="150-150", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_164 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_163 [label="x[0] == ''34''", span="161-161", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_225 [label="Exit lambda expression", span="215-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_224 [label="y is ScheduledState \r\n                    && \r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)", span="216-219", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_240 [label="Exit lambda expression", span="230-234", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_239 [label="y is ScheduledState\r\n                    &&\r\n                    ((ScheduledState)y).EnqueueAt > DateTime.UtcNow.AddHours(4)\r\n                    && ((ScheduledState)y).EnqueueAt < DateTime.UtcNow.AddHours(6)", span="231-234", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_128 [label="DerivedTestService.StaticMethod()", span="135-135", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_129 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m27_165 [label="Entry HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", span="167-167", cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_167 [label="BackgroundJob.Create<DerivedTestService>(x => x.InstanceMethod(ref a), _stateMock.Object)", span="170-170", cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_166 [label="int a = 10", span="169-169", cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_168 [label="Assert.Inconclusive(''Move to JobClient tests'')", span="172-172", cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_169 [label="Exit HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", span="167-167", cluster="HangFire.Tests.ClientApiTests.Create_PassingParametersByReference_IsNotAllowed()", file="SqlServerMonitoringApi.cs"];
m27_144 [label="Entry HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", span="250-250", cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", file="SqlServerMonitoringApi.cs"];
m27_245 [label="Exit HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", span="250-250", cluster="HangFire.Tests.ClientApiTests.TestService.InstanceMethod(string)", file="SqlServerMonitoringApi.cs"];
m27_226 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="SqlServerMonitoringApi.cs"];
m27_22 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerMonitoringApi.cs"];
m27_28 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="SqlServerMonitoringApi.cs"];
m27_38 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="SqlServerMonitoringApi.cs"];
m27_185 [label="Entry HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", span="186-186", cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_186 [label="BackgroundJob.Enqueue<TestService>(x => x.InstanceMethod())", span="188-188", cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_187 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.IsAny<string[]>(),\r\n                It.Is<JobState>(x => x is EnqueuedState)))", span="190-193", cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m27_188 [label="Exit HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", span="186-186", cluster="HangFire.Tests.ClientApiTests.Enqueue_InstanceExpression_PassesEnqueuedState_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_60 [label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", span="89-89", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_61 [label="BackgroundJob.Create(() => TestService.StaticMethod(), _stateMock.Object)", span="91-91", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_62 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.Is<JobMethod>(x => x.Type == typeof(TestService) && x.Method.Name == ''StaticMethod''),\r\n                It.Is<string[]>(x => x.Length == 0),\r\n                It.IsAny<JobState>()))", span="93-96", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_63 [label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", span="89-89", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_CorrectlyDeterminesTypeAndMethod()", file="SqlServerMonitoringApi.cs"];
m27_126 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerMonitoringApi.cs"];
m27_50 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerMonitoringApi.cs"];
m27_151 [label="Entry HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="155-155", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_152 [label="BackgroundJob.Create(() => TestService.StaticMethod(34), _stateMock.Object)", span="157-157", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_153 [label="_jobClientMock.Verify(client => client.CreateJob(\r\n                It.IsAny<JobMethod>(),\r\n                It.Is<string[]>(x => x[0] == ''34''),\r\n                It.IsAny<JobState>()))", span="159-162", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_154 [label="Exit HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", span="155-155", cluster="HangFire.Tests.ClientApiTests.Create_StaticExpression_PassesParameterValuesAndTheirTypes_ToClient()", file="SqlServerMonitoringApi.cs"];
m27_253 [label="HangFire.Tests.ClientApiTests", span="", file="SqlServerMonitoringApi.cs"];
m27_254 [label=a, span="", file="SqlServerMonitoringApi.cs"];
m28_0 [label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="SqlServerStorage.cs"];
m28_1 [label="Exit HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="SqlServerStorage.cs"];
m29_10 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StorageFacts.cs"];
m29_11 [label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_12 [label="Assert.IsNotNull(context)", span="29-29", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_13 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="31-31", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="StorageFacts.cs"];
m29_14 [label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_0 [label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs"];
m29_1 [label="_name = name", span="16-16", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs"];
m29_2 [label="_results = results", span="17-17", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs"];
m29_3 [label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14", cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StorageFacts.cs"];
m29_8 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="StorageFacts.cs"];
m29_4 [label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_5 [label="Assert.IsNotNull(context)", span="22-22", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_6 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_7 [label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="StorageFacts.cs"];
m29_15 [label="HangFire.Tests.TestStateChangedFilter", span="", file="StorageFacts.cs"];
m30_97 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SucceededJobs1.generated.cs"];
m30_252 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="SucceededJobs1.generated.cs"];
m30_5 [label="Assert.IsNotNull(context)", span="22-22", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SucceededJobs1.generated.cs", color=green, community=0];
m30_101 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SucceededJobs1.generated.cs"];
m30_102 [label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="175-175", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_104 [label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="178-180", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_103 [label="AcquireSetLock()", span="177-177", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_105 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SucceededJobs1.generated.cs"];
m30_10 [label="Entry lambda expression", span="46-62", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_45 [label="Entry Hangfire.States.IState.SerializeData()", span="202-202", cluster="Hangfire.States.IState.SerializeData()", file="SucceededJobs1.generated.cs"];
m30_6 [label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="SucceededJobs1.generated.cs", color=green, community=0];
m30_7 [label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20", cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_8 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SucceededJobs1.generated.cs"];
m30_60 [label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", span="20-20", cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueue()", file="SucceededJobs1.generated.cs"];
m30_65 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SucceededJobs1.generated.cs"];
m30_66 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_67 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SucceededJobs1.generated.cs"];
m30_59 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SucceededJobs1.generated.cs"];
m30_225 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SucceededJobs1.generated.cs"];
m30_226 [label="key == null", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_230 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="317-317", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_227 [label="throw new ArgumentNullException(''key'');", span="311-311", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_228 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="313-314", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_229 [label="AcquireSetLock()", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_231 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SucceededJobs1.generated.cs"];
m30_77 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SucceededJobs1.generated.cs"];
m30_78 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_79 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SucceededJobs1.generated.cs"];
m30_235 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SucceededJobs1.generated.cs"];
m30_236 [label="key == null", span="322-322", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_240 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="328-328", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_237 [label="throw new ArgumentNullException(''key'');", span="322-322", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_238 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="324-325", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SucceededJobs1.generated.cs"];
m30_239 [label="AcquireListLock()", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_241 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SucceededJobs1.generated.cs"];
m30_250 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="SucceededJobs1.generated.cs"];
m30_195 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_196 [label="key == null", span="278-278", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_200 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="284-284", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_197 [label="throw new ArgumentNullException(''key'');", span="278-278", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_198 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="280-281", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_199 [label="AcquireSetLock()", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_201 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_251 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SucceededJobs1.generated.cs"];
m30_256 [label="_lockedResources.Add(resource)", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="SucceededJobs1.generated.cs"];
m30_141 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SucceededJobs1.generated.cs"];
m30_254 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_255 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="SucceededJobs1.generated.cs"];
m30_247 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SucceededJobs1.generated.cs"];
m30_38 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs"];
m30_39 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="81-84", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_40 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="86-96", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_41 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="79-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs"];
m30_205 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_206 [label="key == null", span="289-289", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_210 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="295-295", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_207 [label="throw new ArgumentNullException(''key'');", span="289-289", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_208 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="291-292", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_209 [label="AcquireListLock()", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_211 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_4 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SucceededJobs1.generated.cs"];
m30_47 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs"];
m30_48 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="101-103", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_49 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="105-114", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_50 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="99-99", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="SucceededJobs1.generated.cs"];
m30_83 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_84 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_85 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_175 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SucceededJobs1.generated.cs"];
m30_176 [label="key == null", span="257-257", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_180 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_177 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_178 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="259-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_179 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_181 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SucceededJobs1.generated.cs"];
m30_89 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs"];
m30_90 [label="AddToSet(key, value, 0.0)", span="155-155", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs"];
m30_91 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SucceededJobs1.generated.cs"];
m30_11 [label="connection.EnlistTransaction(Transaction.Current)", span="48-48", cluster="lambda expression", file="SucceededJobs1.generated.cs", color=red, community=0];
m30_12 [label="_lockedResources.Count > 0", span="50-50", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_13 [label="connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="52-55", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_14 [label=_commandQueue, span="58-58", cluster="lambda expression", file="SucceededJobs1.generated.cs", color=red, community=0];
m30_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", span="37-37", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SucceededJobs1.generated.cs"];
m30_1 [label="storage == null", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_2 [label="throw new ArgumentNullException(''storage'');", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_3 [label="_storage = storage", span="41-41", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage)", file="SucceededJobs1.generated.cs", color=red, community=0];
m30_27 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs"];
m30_245 [label="_commandQueue.Enqueue(action)", span="333-333", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_246 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="331-331", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SucceededJobs1.generated.cs"];
m30_54 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs"];
m30_55 [label="var provider = _storage.QueueProviders.GetProvider(queue)", span="119-119", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs"];
m30_57 [label="QueueCommand(x => persistentQueue.Enqueue(x, queue, jobId))", span="122-122", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_56 [label="var persistentQueue = provider.GetJobQueue()", span="120-120", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_58 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SucceededJobs1.generated.cs"];
m30_9 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="SucceededJobs1.generated.cs"];
m30_17 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SucceededJobs1.generated.cs"];
m30_20 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SucceededJobs1.generated.cs"];
m30_64 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="SucceededJobs1.generated.cs"];
m30_71 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_72 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_73 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_92 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SucceededJobs1.generated.cs"];
m30_93 [label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_95 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="168-170", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_94 [label="AcquireSetLock()", span="167-167", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_96 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SucceededJobs1.generated.cs"];
m30_132 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SucceededJobs1.generated.cs"];
m30_133 [label="key == null", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_135 [label="keyValuePairs == null", span="217-217", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_139 [label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="227-229", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_134 [label="throw new ArgumentNullException(''key'');", span="216-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_136 [label="throw new ArgumentNullException(''keyValuePairs'');", span="217-217", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_137 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="219-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_138 [label="AcquireHashLock()", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_140 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SucceededJobs1.generated.cs"];
m30_149 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SucceededJobs1.generated.cs"];
m30_150 [label="key == null", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_154 [label="QueueCommand(x => x.Execute(query, new { key }))", span="239-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_151 [label="throw new ArgumentNullException(''key'');", span="234-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_152 [label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="236-236", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_153 [label="AcquireHashLock()", span="238-238", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_155 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SucceededJobs1.generated.cs"];
m30_31 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_32 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SucceededJobs1.generated.cs"];
m30_33 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SucceededJobs1.generated.cs"];
m30_34 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="72-72", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SucceededJobs1.generated.cs"];
m30_185 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_186 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_190 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="273-273", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_187 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_188 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="269-270", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_189 [label="AcquireHashLock()", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_191 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_46 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SucceededJobs1.generated.cs"];
m30_24 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_25 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_26 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="65-65", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SucceededJobs1.generated.cs"];
m30_242 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_15 [label="HangFire.Tests.TestStateChangedFilter", span="", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_21 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_16 [label="Exit lambda expression", span="46-62", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_22 [label="new { resource = x }", span="55-55", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_23 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_29 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_28 [label="Entry lambda expression", span="67-69", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_30 [label="Exit lambda expression", span="67-69", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_36 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_35 [label="Entry lambda expression", span="74-76", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_37 [label="Exit lambda expression", span="74-76", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_43 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="86-96", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_42 [label="Entry lambda expression", span="86-96", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_44 [label="Exit lambda expression", span="86-96", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_52 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="105-114", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_51 [label="Entry lambda expression", span="105-114", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_53 [label="Exit lambda expression", span="105-114", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_62 [label="persistentQueue.Enqueue(x, queue, jobId)", span="122-122", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_61 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_63 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_69 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_68 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_70 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_75 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_74 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_76 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_81 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_80 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_82 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_87 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_86 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_88 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_99 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="168-170", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_98 [label="Entry lambda expression", span="168-170", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_100 [label="Exit lambda expression", span="168-170", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_107 [label="x.Execute(\r\n                query,\r\n                new { key, value })", span="178-180", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_106 [label="Entry lambda expression", span="178-180", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_108 [label="Exit lambda expression", span="178-180", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_115 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="186-188", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_114 [label="Entry lambda expression", span="186-188", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_116 [label="Exit lambda expression", span="186-188", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_122 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="194-196", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_121 [label="Entry lambda expression", span="194-196", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_123 [label="Exit lambda expression", span="194-196", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_130 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="209-211", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_129 [label="Entry lambda expression", span="209-211", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_131 [label="Exit lambda expression", span="209-211", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_144 [label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="227-229", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_147 [label="new { key = key, field = y.Key, value = y.Value }", span="229-229", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_143 [label="Entry lambda expression", span="227-229", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_145 [label="Exit lambda expression", span="227-229", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_146 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_148 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_157 [label="x.Execute(query, new { key })", span="239-239", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_156 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_158 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_169 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="252-252", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_173 [label="new { key = key, value = value }", span="252-252", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_168 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_170 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_172 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_174 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_183 [label="x.Execute(query, new { key = key })", span="262-262", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_182 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_184 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_193 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="273-273", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_192 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_194 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_203 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="284-284", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_202 [label="Entry lambda expression", span="284-284", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_204 [label="Exit lambda expression", span="284-284", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_213 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="295-295", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_212 [label="Entry lambda expression", span="295-295", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_214 [label="Exit lambda expression", span="295-295", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_223 [label="x.Execute(query, new { key = key })", span="306-306", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_222 [label="Entry lambda expression", span="306-306", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_224 [label="Exit lambda expression", span="306-306", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_233 [label="x.Execute(query, new { key = key })", span="317-317", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_232 [label="Entry lambda expression", span="317-317", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_234 [label="Exit lambda expression", span="317-317", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_243 [label="x.Execute(query, new { key = key })", span="328-328", cluster="lambda expression", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_244 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="SucceededJobs1.generated.cs"];
m30_159 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SucceededJobs1.generated.cs"];
m30_160 [label="key == null", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_162 [label="items == null", span="245-245", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_166 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_161 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_163 [label="throw new ArgumentNullException(''items'');", span="245-245", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_164 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="247-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_165 [label="AcquireSetLock()", span="251-251", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_167 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SucceededJobs1.generated.cs"];
m30_18 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SucceededJobs1.generated.cs"];
m30_258 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="SucceededJobs1.generated.cs"];
m30_171 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SucceededJobs1.generated.cs"];
m30_19 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SucceededJobs1.generated.cs"];
m30_142 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SucceededJobs1.generated.cs"];
m30_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededJobs1.generated.cs"];
m30_118 [label="AcquireListLock()", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_119 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="194-196", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_120 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SucceededJobs1.generated.cs"];
m30_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SucceededJobs1.generated.cs"];
m30_248 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_249 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="336-336", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="SucceededJobs1.generated.cs"];
m30_215 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SucceededJobs1.generated.cs"];
m30_216 [label="key == null", span="300-300", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_220 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="306-306", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_217 [label="throw new ArgumentNullException(''key'');", span="300-300", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_218 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="302-303", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_219 [label="AcquireHashLock()", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_221 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SucceededJobs1.generated.cs"];
m30_109 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SucceededJobs1.generated.cs"];
m30_110 [label="AcquireListLock()", span="185-185", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_111 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="186-188", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_112 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SucceededJobs1.generated.cs"];
m30_124 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededJobs1.generated.cs"];
m30_125 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="201-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_127 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="209-211", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_126 [label="AcquireListLock()", span="208-208", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", color=red, community=0, file="SucceededJobs1.generated.cs"];
m30_128 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SucceededJobs1.generated.cs"];
m30_259 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="SucceededJobs1.generated.cs"];
m30_260 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_261 [label="System.TimeSpan", span="", file="SucceededJobs1.generated.cs"];
m30_262 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_263 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_264 [label="Hangfire.States.IState", span="", file="SucceededJobs1.generated.cs"];
m30_265 [label=addAndSetStateSql, span="", file="SucceededJobs1.generated.cs"];
m30_266 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_267 [label="Hangfire.States.IState", span="", file="SucceededJobs1.generated.cs"];
m30_268 [label=addStateSql, span="", file="SucceededJobs1.generated.cs"];
m30_269 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_270 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_271 [label=persistentQueue, span="", file="SucceededJobs1.generated.cs"];
m30_272 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_273 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_274 [label="System.TimeSpan", span="", file="SucceededJobs1.generated.cs"];
m30_275 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_276 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_277 [label="System.TimeSpan", span="", file="SucceededJobs1.generated.cs"];
m30_278 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_279 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_280 [label=double, span="", file="SucceededJobs1.generated.cs"];
m30_281 [label=addSql, span="", file="SucceededJobs1.generated.cs"];
m30_282 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_283 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_284 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_285 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_286 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_287 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_288 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_289 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_290 [label=int, span="", file="SucceededJobs1.generated.cs"];
m30_291 [label=int, span="", file="SucceededJobs1.generated.cs"];
m30_292 [label=trimSql, span="", file="SucceededJobs1.generated.cs"];
m30_293 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_294 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="SucceededJobs1.generated.cs"];
m30_295 [label=sql, span="", file="SucceededJobs1.generated.cs"];
m30_296 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_297 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_298 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_299 [label="System.Collections.Generic.IList<string>", span="", file="SucceededJobs1.generated.cs"];
m30_300 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_301 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_302 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_303 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_304 [label="System.TimeSpan", span="", file="SucceededJobs1.generated.cs"];
m30_305 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_306 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_307 [label="System.TimeSpan", span="", file="SucceededJobs1.generated.cs"];
m30_308 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_309 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_310 [label="System.TimeSpan", span="", file="SucceededJobs1.generated.cs"];
m30_311 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_312 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_313 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_314 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_315 [label=query, span="", file="SucceededJobs1.generated.cs"];
m30_316 [label=string, span="", file="SucceededJobs1.generated.cs"];
m30_317 [label=query, span="", file="SucceededJobs1.generated.cs"];
n33 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n33 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n33 -> n9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n33 -> n12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n33 -> n13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n33 -> n14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n33 -> n15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.AutomaticRetryAttribute"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n4 -> n8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
n4 -> n11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
n4 -> n12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
n4 -> n14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
n4 -> n16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ElectStateContext"];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [key=1, style=dashed, color=darkseagreen4, label=failedState];
n5 -> n16  [key=1, style=dashed, color=darkseagreen4, label=failedState];
n8 -> n9  [key=0, style=solid];
n8 -> n18  [key=2, style=dotted];
n8 -> n10  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
n8 -> n12  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
n8 -> n14  [key=1, style=dashed, color=darkseagreen4, label=retryAttempt];
n11 -> n12  [key=0, style=solid];
n11 -> n21  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n22  [key=2, style=dotted];
n12 -> n23  [key=2, style=dotted];
n14 -> n17  [key=0, style=solid];
n14 -> n24  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n25  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=0, style=solid];
n7 -> n17  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n15  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n19  [key=2, style=dotted];
n10 -> n20  [key=2, style=dotted];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label=delay];
n10 -> n14  [key=1, style=dashed, color=darkseagreen4, label=delay];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n19 -> n26  [key=0, style=solid];
n19 -> n27  [key=1, style=dashed, color=darkseagreen4, label=long];
n19 -> n8  [key=3, color=darkorchid, style=bold, label="Parameter variable long retryCount"];
n13 -> n14  [key=0, style=solid];
n13 -> n17  [key=0, style=solid];
n17 -> n4  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n26 -> n29  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=2, style=dotted];
n27 -> n31  [key=2, style=dotted];
n27 -> n32  [key=2, style=dotted];
n28 -> n19  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid, color=red];
m0_30 -> m0_32  [key=1, style=dashed, color=red, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m0_31 -> m0_32  [key=0, style=solid, color=red];
m0_31 -> m0_8  [key=2, style=dotted, color=red];
m0_32 -> m0_33  [key=0, style=solid, color=red];
m0_32 -> m0_34  [key=2, style=dotted, color=red];
m0_33 -> m0_30  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid, color=red];
m0_15 -> m0_17  [key=1, style=dashed, color=red, label="System.Linq.Expressions.Expression<System.Action>"];
m0_16 -> m0_17  [key=0, style=solid, color=red];
m0_16 -> m0_8  [key=2, style=dotted, color=red];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_17 -> m0_19  [key=2, style=dotted, color=red];
m0_18 -> m0_15  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid, color=red];
m0_35 -> m0_37  [key=1, style=dashed, color=red, label=string];
m0_36 -> m0_37  [key=0, style=solid, color=red];
m0_36 -> m0_8  [key=2, style=dotted, color=red];
m0_37 -> m0_38  [key=0, style=solid, color=red];
m0_37 -> m0_39  [key=2, style=dotted, color=red];
m0_38 -> m0_35  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_12  [key=1, style=dashed, color=red, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_8  [key=2, style=dotted, color=red];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_14  [key=2, style=dotted, color=red];
m0_13 -> m0_10  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid, color=red];
m0_45 -> m0_47  [key=1, style=dashed, color=red, label=string];
m0_46 -> m0_47  [key=0, style=solid, color=red];
m0_46 -> m0_8  [key=2, style=dotted, color=red];
m0_47 -> m0_48  [key=0, style=solid, color=red];
m0_47 -> m0_49  [key=2, style=dotted, color=red];
m0_48 -> m0_45  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid, color=red];
m0_25 -> m0_27  [key=1, style=dashed, color=red, label="System.Linq.Expressions.Expression<System.Action>"];
m0_26 -> m0_27  [key=0, style=solid, color=red];
m0_26 -> m0_8  [key=2, style=dotted, color=red];
m0_27 -> m0_28  [key=0, style=solid, color=red];
m0_27 -> m0_29  [key=2, style=dotted, color=red];
m0_28 -> m0_25  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid, color=red];
m0_20 -> m0_22  [key=1, style=dashed, color=red, label="System.Linq.Expressions.Expression<System.Action<T>>"];
m0_21 -> m0_22  [key=0, style=solid, color=red];
m0_21 -> m0_8  [key=2, style=dotted, color=red];
m0_22 -> m0_23  [key=0, style=solid, color=red];
m0_22 -> m0_24  [key=2, style=dotted, color=red];
m0_23 -> m0_20  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid, color=red];
m0_40 -> m0_42  [key=1, style=dashed, color=red, label=string];
m0_41 -> m0_42  [key=0, style=solid, color=red];
m0_41 -> m0_8  [key=2, style=dotted, color=red];
m0_42 -> m0_43  [key=0, style=solid, color=red];
m0_42 -> m0_44  [key=2, style=dotted, color=red];
m0_43 -> m0_40  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_6  [key=1, style=dashed, color=red, label="System.Linq.Expressions.Expression<System.Action>"];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_8  [key=2, style=dotted, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_9  [key=2, style=dotted, color=red];
m0_7 -> m0_4  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid, color=red];
m0_50 -> m0_52  [key=1, style=dashed, color=red, label=string];
m0_51 -> m0_52  [key=0, style=solid, color=red];
m0_51 -> m0_8  [key=2, style=dotted, color=red];
m0_52 -> m0_53  [key=0, style=solid, color=red];
m0_52 -> m0_54  [key=2, style=dotted, color=red];
m0_53 -> m0_50  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid, color=red];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_5 -> m1_6  [key=0, style=solid];
m1_43 -> m1_45  [key=1, style=dashed, color=green, label=int];
m1_43 -> m1_44  [key=0, style=solid, color=red];
m1_45 -> m1_46  [key=0, style=solid, color=green];
m1_45 -> m1_58  [key=2, style=dotted, color=green];
m1_45 -> m1_51  [key=1, style=dashed, color=green, label=scheduledJobs];
m1_45 -> m1_56  [key=1, style=dashed, color=green, label=scheduledJobs];
m1_45 -> m1_43  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid, color=red];
m1_44 -> m1_46  [key=2, style=dotted, color=red];
m1_46 -> m1_47  [key=0, style=solid, color=green];
m1_46 -> m1_48  [key=0, style=solid, color=green];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_63  [key=2, style=dotted];
m1_56 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_56 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_47 -> m1_57  [key=0, style=solid];
m1_47 -> m1_59  [key=2, style=dotted];
m1_47 -> m1_13  [key=1, style=dashed, color=red, label="HangFire.BackgroundJobClient"];
m1_47 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_47 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobClient"];
m1_47 -> m1_24  [key=1, style=dashed, color=red, label="HangFire.BackgroundJobClient"];
m1_47 -> m1_25  [key=1, style=dashed, color=red, label="HangFire.BackgroundJobClient"];
m1_47 -> m1_38  [key=1, style=dashed, color=red, label="HangFire.BackgroundJobClient"];
m1_47 -> m1_44  [key=1, style=dashed, color=red, label="HangFire.BackgroundJobClient"];
m1_48 -> m1_53  [key=1, style=dashed, color=green, label=jobs];
m1_48 -> m1_70  [key=1, style=dashed, color=green, label=jobs];
m1_48 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_59  [key=2, style=dotted];
m1_48 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_53 -> m1_54  [key=0, style=solid, color=green];
m1_53 -> m1_61  [key=2, style=dotted, color=green];
m1_53 -> m1_64  [key=1, style=dashed, color=green, label="lambda expression"];
m1_53 -> m1_69  [key=1, style=dashed, color=green, label="lambda expression"];
m1_50 -> m1_53  [key=1, style=dashed, color=green, label=pipeline];
m1_50 -> m1_54  [key=1, style=dashed, color=green, label=pipeline];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_60  [key=2, style=dotted];
m1_50 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_52 -> m1_53  [key=0, style=solid, color=green];
m1_52 -> m1_70  [key=1, style=dashed, color=green, label=job];
m1_52 -> m1_54  [key=1, style=dashed, color=green, label=job];
m1_52 -> m1_74  [key=1, style=dashed, color=green, label=job];
m1_52 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_52 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_54 -> m1_51  [key=0, style=solid, color=green];
m1_54 -> m1_61  [key=2, style=dotted, color=green];
m1_54 -> m1_73  [key=1, style=dashed, color=green, label="lambda expression"];
m1_54 -> m1_77  [key=1, style=dashed, color=green, label="lambda expression"];
m1_49 -> m1_54  [key=1, style=dashed, color=green, label=states];
m1_49 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_59  [key=2, style=dotted];
m1_49 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_49 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_62  [key=2, style=dotted];
m1_57 -> m1_43  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid, color=red];
m1_38 -> m1_41  [key=2, style=dotted, color=red];
m1_29 -> m1_19  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid, color=green];
m1_33 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m1_33 -> m1_39  [key=1, style=dashed, color=red, label=string];
m1_33 -> m1_35  [key=2, style=dotted, color=green];
m1_33 -> m1_37  [key=2, style=dotted, color=green];
m1_33 -> m1_38  [key=2, style=dotted, color=green];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_34 -> m1_32  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid, color=red];
m1_39 -> m1_42  [key=2, style=dotted, color=red];
m1_35 -> m1_40  [key=0, style=solid];
m1_35 -> m1_17  [key=2, style=dotted];
m1_37 -> m1_40  [key=0, style=solid];
m1_37 -> m1_17  [key=2, style=dotted];
m1_40 -> m1_33  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid];
m1_23 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_29  [key=0, style=solid];
m1_23 -> m1_17  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid, color=green];
m1_26 -> m1_29  [key=2, style=dotted, color=green];
m1_26 -> m1_30  [key=2, style=dotted, color=green];
m1_26 -> m1_31  [key=2, style=dotted, color=green];
m1_26 -> m1_32  [key=1, style=dashed, color=green, label="lambda expression"];
m1_26 -> m1_40  [key=1, style=dashed, color=green, label="lambda expression"];
m1_25 -> m1_26  [key=0, style=solid, color=red];
m1_25 -> m1_28  [key=2, style=dotted];
m1_25 -> m1_31  [key=2, style=dotted, color=red];
m1_24 -> m1_25  [key=0, style=solid, color=red];
m1_24 -> m1_30  [key=2, style=dotted, color=red];
m1_24 -> m1_26  [key=1, style=dashed, color=red, label=context];
m1_27 -> m1_23  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_17 -> m1_4  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_173 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_173 -> m1_324  [key=0, style=solid];
m1_173 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_173 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m1_173 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m1_331 -> m1_61  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_331 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_333 -> m1_61  [key=2, style=dotted];
m1_333 -> m1_329  [key=0, style=solid];
m1_333 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_333 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_328 -> m1_60  [key=2, style=dotted];
m1_328 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_328 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_326 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_337  [key=2, style=dotted];
m1_326 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_326 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_330 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_329  [key=0, style=solid];
m1_327 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_337  [key=2, style=dotted];
m1_327 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_327 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_334  [key=0, style=solid];
m1_334 -> m1_62  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_324 -> m1_326  [key=0, style=solid];
m1_324 -> m1_325  [key=0, style=solid];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_114  [key=2, style=dotted];
m1_335 -> m1_115  [key=2, style=dotted];
m1_335 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_335 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_325 -> m1_336  [key=0, style=solid];
m1_325 -> m1_113  [key=2, style=dotted];
m1_336 -> m1_173  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_1 -> m1_2  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_12 -> m1_26  [key=3, color=green, style=bold, label="Field variable HangFire.Client.IJobCreationProcess _process"];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=0, style=solid];
m1_12 -> m1_17  [key=2, style=dotted];
m1_13 -> m1_26  [key=3, color=green, style=bold, label="Field variable HangFire.States.IStateMachineFactory _stateMachineFactory"];
m1_13 -> m1_14  [key=0, style=solid, color=red];
m1_13 -> m1_9  [key=2, style=dotted];
m1_13 -> m1_10  [key=2, style=dotted];
m1_13 -> m1_18  [key=2, style=dotted, color=red];
m1_14 -> m1_11  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_219 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_219 -> m1_269  [key=0, style=solid];
m1_219 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_278 -> m1_59  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_278 -> m1_286  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_289  [key=2, style=dotted];
m1_277 -> m1_282  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_279 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_279 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_292  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_114  [key=2, style=dotted];
m1_276 -> m1_115  [key=2, style=dotted];
m1_276 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_282 -> m1_284  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_290  [key=2, style=dotted];
m1_282 -> m1_291  [key=2, style=dotted];
m1_280 -> m1_286  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_285 -> m1_280  [key=0, style=solid];
m1_285 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_270 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_270 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_270 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_113  [key=2, style=dotted];
m1_270 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_283 -> m1_284  [key=0, style=solid];
m1_273 -> m1_175  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_269 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_272 -> m1_276  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_281 -> m1_282  [key=0, style=solid];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_274 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_288  [key=2, style=dotted];
m1_275 -> m1_272  [key=0, style=solid];
m1_275 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_287 -> m1_219  [key=0, style=bold, color=blue];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_236 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_238 -> m1_76  [key=2, style=dotted];
m1_238 -> m1_9  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_237 -> m1_238  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_232  [key=2, style=dotted];
m1_239 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_234  [key=2, style=dotted];
m1_242 -> m1_235  [key=2, style=dotted];
m1_240 -> m1_242  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_233  [key=2, style=dotted];
m1_241 -> m1_243  [key=0, style=solid];
m1_243 -> m1_236  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m1_318 -> m1_319  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid, color=green];
m1_64 -> m1_65  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid, color=green];
m1_70 -> m1_71  [key=0, style=solid, color=green];
m1_70 -> m1_72  [key=2, style=dotted, color=green];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_73 -> m1_74  [key=0, style=solid, color=green];
m1_77 -> m1_78  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid, color=green];
m1_74 -> m1_67  [key=2, style=dotted, color=green];
m1_74 -> m1_76  [key=2, style=dotted, color=green];
m1_75 -> m1_73  [key=0, style=bold, color=blue];
m1_84 -> m1_36  [key=2, style=dotted];
m1_84 -> m1_37  [key=2, style=dotted];
m1_84 -> m1_39  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_87  [key=2, style=dotted];
m1_142 -> m1_36  [key=2, style=dotted];
m1_142 -> m1_37  [key=2, style=dotted];
m1_142 -> m1_38  [key=2, style=dotted];
m1_142 -> m1_39  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_144  [key=2, style=dotted];
m1_152 -> m1_36  [key=2, style=dotted];
m1_152 -> m1_37  [key=2, style=dotted];
m1_152 -> m1_38  [key=2, style=dotted];
m1_152 -> m1_39  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=2, style=dotted];
m1_195 -> m1_36  [key=2, style=dotted];
m1_195 -> m1_38  [key=2, style=dotted];
m1_195 -> m1_39  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_197  [key=2, style=dotted];
m1_204 -> m1_36  [key=2, style=dotted];
m1_204 -> m1_38  [key=2, style=dotted];
m1_204 -> m1_39  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_197  [key=2, style=dotted];
m1_212 -> m1_36  [key=2, style=dotted];
m1_212 -> m1_38  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_214  [key=2, style=dotted];
m1_130 -> m1_38  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=2, style=dotted];
m1_130 -> m1_133  [key=2, style=dotted];
m1_130 -> m1_134  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_65 -> m1_67  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_68  [key=2, style=dotted];
m1_78 -> m1_72  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_66 -> m1_64  [key=0, style=bold, color=blue];
m1_120 -> m1_72  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_127 -> m1_72  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_343 -> m1_72  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_351 -> m1_72  [key=2, style=dotted];
m1_351 -> m1_352  [key=0, style=solid];
m1_79 -> m1_77  [key=0, style=bold, color=blue];
m1_117 -> m1_67  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_68  [key=2, style=dotted];
m1_123 -> m1_67  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_125  [key=2, style=dotted];
m1_177 -> m1_67  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_150  [key=2, style=dotted];
m1_183 -> m1_67  [key=2, style=dotted];
m1_183 -> m1_10  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_189 -> m1_67  [key=2, style=dotted];
m1_189 -> m1_10  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_322 -> m1_67  [key=2, style=dotted];
m1_322 -> m1_323  [key=0, style=solid];
m1_427 -> m1_67  [key=2, style=dotted];
m1_427 -> m1_10  [key=2, style=dotted];
m1_427 -> m1_428  [key=0, style=solid];
m1_339 -> m1_9  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_68  [key=2, style=dotted];
m1_347 -> m1_9  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_68  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_203 -> m1_204  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_85 -> m1_83  [key=0, style=bold, color=blue];
m1_143 -> m1_141  [key=0, style=bold, color=blue];
m1_153 -> m1_151  [key=0, style=bold, color=blue];
m1_194 -> m1_195  [key=0, style=solid];
m1_196 -> m1_194  [key=0, style=bold, color=blue];
m1_205 -> m1_203  [key=0, style=bold, color=blue];
m1_213 -> m1_211  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid];
m1_131 -> m1_129  [key=0, style=bold, color=blue];
m1_82 -> m1_80  [key=0, style=bold, color=blue];
m1_81 -> m1_82  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_179 -> m1_180  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_188 -> m1_189  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_341 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label="?"];
m1_341 -> m1_342  [key=0, style=solid];
m1_346 -> m1_347  [key=0, style=solid];
m1_349 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label="?"];
m1_349 -> m1_350  [key=0, style=solid];
m1_387 -> m1_388  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_394 -> m1_395  [key=0, style=solid];
m1_397 -> m1_398  [key=0, style=solid];
m1_400 -> m1_401  [key=0, style=solid];
m1_403 -> m1_404  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_409 -> m1_410  [key=0, style=solid];
m1_412 -> m1_413  [key=0, style=solid];
m1_416 -> m1_417  [key=0, style=solid];
m1_420 -> m1_421  [key=0, style=solid];
m1_423 -> m1_424  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_429 -> m1_430  [key=0, style=solid];
m1_121 -> m1_119  [key=0, style=bold, color=blue];
m1_128 -> m1_126  [key=0, style=bold, color=blue];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_344  [key=0, style=solid];
m1_342 -> m1_345  [key=2, style=dotted];
m1_344 -> m1_341  [key=0, style=bold, color=blue];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_352  [key=0, style=solid];
m1_350 -> m1_345  [key=2, style=dotted];
m1_352 -> m1_349  [key=0, style=bold, color=blue];
m1_118 -> m1_116  [key=0, style=bold, color=blue];
m1_124 -> m1_122  [key=0, style=bold, color=blue];
m1_178 -> m1_176  [key=0, style=bold, color=blue];
m1_184 -> m1_182  [key=0, style=bold, color=blue];
m1_190 -> m1_188  [key=0, style=bold, color=blue];
m1_321 -> m1_322  [key=0, style=solid];
m1_323 -> m1_321  [key=0, style=bold, color=blue];
m1_428 -> m1_426  [key=0, style=bold, color=blue];
m1_340 -> m1_338  [key=0, style=bold, color=blue];
m1_348 -> m1_346  [key=0, style=bold, color=blue];
m1_259 -> m1_260  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_181 -> m1_179  [key=0, style=bold, color=blue];
m1_180 -> m1_181  [key=0, style=solid];
m1_187 -> m1_185  [key=0, style=bold, color=blue];
m1_186 -> m1_187  [key=0, style=solid];
m1_193 -> m1_191  [key=0, style=bold, color=blue];
m1_192 -> m1_193  [key=0, style=solid];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_359  [key=2, style=dotted];
m1_357 -> m1_360  [key=2, style=dotted];
m1_357 -> m1_361  [key=2, style=dotted];
m1_357 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_345  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_398 -> m1_399  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_419  [key=2, style=dotted];
m1_424 -> m1_425  [key=0, style=solid];
m1_430 -> m1_431  [key=0, style=solid];
m1_389 -> m1_387  [key=0, style=bold, color=blue];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_390  [key=2, style=dotted];
m1_393 -> m1_391  [key=0, style=bold, color=blue];
m1_396 -> m1_394  [key=0, style=bold, color=blue];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_390  [key=2, style=dotted];
m1_399 -> m1_397  [key=0, style=bold, color=blue];
m1_402 -> m1_400  [key=0, style=bold, color=blue];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_4  [key=2, style=dotted];
m1_405 -> m1_403  [key=0, style=bold, color=blue];
m1_408 -> m1_406  [key=0, style=bold, color=blue];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_4  [key=2, style=dotted];
m1_411 -> m1_409  [key=0, style=bold, color=blue];
m1_414 -> m1_412  [key=0, style=bold, color=blue];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_415  [key=2, style=dotted];
m1_418 -> m1_416  [key=0, style=bold, color=blue];
m1_422 -> m1_420  [key=0, style=bold, color=blue];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_4  [key=2, style=dotted];
m1_425 -> m1_423  [key=0, style=bold, color=blue];
m1_431 -> m1_429  [key=0, style=bold, color=blue];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_262  [key=2, style=dotted];
m1_261 -> m1_259  [key=0, style=bold, color=blue];
m1_265 -> m1_263  [key=0, style=bold, color=blue];
m1_264 -> m1_265  [key=0, style=solid];
m1_268 -> m1_266  [key=0, style=bold, color=blue];
m1_267 -> m1_268  [key=0, style=solid];
m1_353 -> m1_354  [key=0, style=solid];
m1_356 -> m1_357  [key=0, style=solid];
m1_358 -> m1_356  [key=0, style=bold, color=blue];
m1_362 -> m1_363  [key=0, style=solid];
m1_355 -> m1_353  [key=0, style=bold, color=blue];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_296  [key=2, style=dotted];
m1_294 -> n23  [key=2, style=dotted];
m1_293 -> m1_294  [key=0, style=solid];
m1_364 -> m1_362  [key=0, style=bold, color=blue];
m1_363 -> m1_364  [key=0, style=solid];
m1_295 -> m1_293  [key=0, style=bold, color=blue];
m1_319 -> m1_296  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_320 -> m1_318  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_222 -> m1_219  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_223 -> m1_220  [key=0, style=bold, color=blue];
m1_135 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_135 -> m1_136  [key=0, style=solid];
m1_138 -> m1_29  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_140  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_139 -> m1_135  [key=0, style=bold, color=blue];
m1_2 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_145 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_145 -> m1_146  [key=0, style=solid];
m1_148 -> m1_29  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_150  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_149 -> m1_145  [key=0, style=bold, color=blue];
m1_155 -> m1_156  [key=0, style=solid];
m1_164 -> m1_61  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_164 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_164 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m1_165 -> m1_61  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=length];
m1_166 -> m1_61  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_166 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_166 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m1_163 -> m1_60  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_163 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_163 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_159 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_170  [key=0, style=solid];
m1_159 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_168 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_173  [key=2, style=dotted];
m1_169 -> m1_159  [key=0, style=solid];
m1_169 -> m1_174  [key=2, style=dotted];
m1_169 -> m1_175  [key=2, style=dotted];
m1_167 -> m1_62  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_162 -> m1_163  [key=0, style=solid];
m1_157 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_112  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_158 -> m1_172  [key=2, style=dotted];
m1_158 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_160 -> m1_161  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_161 -> m1_162  [key=0, style=solid];
m1_156 -> m1_157  [key=0, style=solid];
m1_171 -> m1_155  [key=0, style=bold, color=blue];
m1_88 -> m1_89  [key=0, style=solid];
m1_90 -> m1_92  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_91 -> m1_88  [key=0, style=bold, color=blue];
m1_97 -> m1_98  [key=0, style=solid];
m1_107 -> m1_61  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_107 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_61  [key=2, style=dotted];
m1_108 -> m1_105  [key=0, style=solid];
m1_108 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_108 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_102 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_102 -> m1_59  [key=2, style=dotted];
m1_102 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_102 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_103 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_103 -> m1_59  [key=2, style=dotted];
m1_103 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_103 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_104 -> m1_60  [key=2, style=dotted];
m1_104 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_104 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_106 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_109  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_110 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_114  [key=2, style=dotted];
m1_110 -> m1_115  [key=2, style=dotted];
m1_109 -> m1_62  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_99 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m1_99 -> m1_112  [key=2, style=dotted];
m1_101 -> m1_111  [key=0, style=solid];
m1_101 -> m1_113  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_111 -> m1_97  [key=0, style=bold, color=blue];
m1_369 -> m1_370  [key=0, style=solid];
m1_374 -> m1_61  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_374 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_375 -> m1_61  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_375 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_376 -> m1_61  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_376 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_377 -> m1_61  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_377 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_378 -> m1_61  [key=2, style=dotted];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_378 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_379 -> m1_61  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_420  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_379 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_382 -> m1_61  [key=2, style=dotted];
m1_382 -> m1_380  [key=0, style=solid];
m1_382 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_382 -> m1_429  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_373 -> m1_60  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_373 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m1_371 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_386  [key=2, style=dotted];
m1_371 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_371 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_383  [key=0, style=solid];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m1_383 -> m1_62  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_372 -> m1_112  [key=2, style=dotted];
m1_370 -> m1_371  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_385 -> m1_369  [key=0, style=bold, color=blue];
m1_365 -> m1_366  [key=0, style=solid];
m1_367 -> m1_10  [key=2, style=dotted];
m1_367 -> m1_368  [key=0, style=solid];
m1_366 -> m1_367  [key=0, style=solid];
m1_368 -> m1_365  [key=0, style=bold, color=blue];
m1_215 -> m1_216  [key=0, style=solid];
m1_217 -> m1_219  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_216 -> m1_217  [key=0, style=solid];
m1_218 -> m1_215  [key=0, style=bold, color=blue];
m1_92 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_92 -> m1_298  [key=0, style=solid];
m1_92 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_92 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m1_307 -> m1_59  [key=2, style=dotted];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_307 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_289  [key=2, style=dotted];
m1_306 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_308 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_308 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_292  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_298 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_298 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_305 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_114  [key=2, style=dotted];
m1_305 -> m1_115  [key=2, style=dotted];
m1_311 -> m1_313  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_290  [key=2, style=dotted];
m1_311 -> m1_291  [key=2, style=dotted];
m1_309 -> m1_315  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_314 -> m1_309  [key=0, style=solid];
m1_314 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_300 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_113  [key=2, style=dotted];
m1_300 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_300 -> m1_304  [key=1, style=dashed, color=darkseagreen4, label=dates];
m1_312 -> m1_313  [key=0, style=solid];
m1_302 -> m1_175  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_317  [key=2, style=dotted];
m1_299 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_304  [key=0, style=solid];
m1_303 -> m1_301  [key=0, style=solid];
m1_303 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m1_303 -> m1_317  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_114  [key=2, style=dotted];
m1_304 -> m1_115  [key=2, style=dotted];
m1_304 -> m1_309  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m1_304 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_310 -> m1_311  [key=0, style=solid];
m1_316 -> m1_92  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_6  [key=0, style=bold, color=blue];
m1_18 -> m1_15  [key=0, style=bold, color=blue];
m1_244 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_244 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_244 -> m1_245  [key=0, style=solid];
m1_246 -> m1_9  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_254  [key=2, style=dotted];
m1_246 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_250 -> m1_9  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_125  [key=2, style=dotted];
m1_252 -> m1_63  [key=2, style=dotted];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_255  [key=2, style=dotted];
m1_252 -> m1_256  [key=2, style=dotted];
m1_252 -> m1_257  [key=2, style=dotted];
m1_252 -> m1_258  [key=2, style=dotted];
m1_252 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_252 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_252 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_245 -> m1_246  [key=0, style=solid];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_249  [key=0, style=solid];
m1_249 -> m1_250  [key=0, style=solid];
m1_249 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m1_249 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_114  [key=2, style=dotted];
m1_251 -> m1_115  [key=2, style=dotted];
m1_248 -> m1_253  [key=0, style=solid];
m1_253 -> m1_244  [key=0, style=bold, color=blue];
m1_7 -> m1_9  [key=2, style=dotted];
m1_7 -> m1_10  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m1_6 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m1_6 -> m1_13  [key=1, style=dashed, color=red, label="HangFire.JobStorage"];
m1_6 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m1_6 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.IJobCreationProcess"];
m1_8 -> m1_5  [key=0, style=bold, color=blue];
m1_8 -> m1_16  [key=0, style=solid];
m1_8 -> m1_17  [key=2, style=dotted];
m1_206 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_206 -> m1_207  [key=0, style=solid];
m1_209 -> m1_29  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_208 -> m1_9  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_150  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_210 -> m1_206  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=0, style=solid];
m1_10 -> m1_17  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m1_19 -> m1_24  [key=1, style=dashed, color=red, label="HangFire.Common.Job"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid, color=red];
m1_22 -> m1_19  [key=0, style=bold, color=blue];
m1_21 -> m1_29  [key=0, style=solid];
m1_21 -> m1_17  [key=2, style=dotted];
m1_21 -> m1_4  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_95 -> m1_92  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_96 -> m1_93  [key=0, style=bold, color=blue];
m1_224 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_226 -> m1_76  [key=2, style=dotted];
m1_226 -> m1_9  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_232  [key=2, style=dotted];
m1_227 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_234  [key=2, style=dotted];
m1_230 -> m1_235  [key=2, style=dotted];
m1_228 -> m1_230  [key=0, style=solid];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_233  [key=2, style=dotted];
m1_229 -> m1_231  [key=0, style=solid];
m1_231 -> m1_224  [key=0, style=bold, color=blue];
m1_198 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_198 -> m1_199  [key=0, style=solid];
m1_201 -> m1_29  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_200 -> m1_9  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_150  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_202 -> m1_198  [key=0, style=bold, color=blue];
m1_432 -> m1_70  [key=1, style=dashed, color=green, label=job];
m1_432 -> m1_74  [key=1, style=dashed, color=green, label=job];
m1_432 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_432 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_433 -> m1_70  [key=1, style=dashed, color=green, label=jobs];
m1_433 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_434 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_434 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_436 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_436 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=servers];
m1_437 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_437 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=queues];
m1_435 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_435 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_435 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_435 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m1_443 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_443 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=id];
m1_444 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_444 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_444 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m1_446 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_446 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_446 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=states];
m1_438 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_438 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_438 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label=queue];
m1_441 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_449 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m1_442 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_445 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_447 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m1_448 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_448 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=stats];
m1_439 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m1_440 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_5  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=stateMock];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_10 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_7  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label=stateMock];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m4_25 -> m4_3  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IDictionary<System.DateTime, long> failed"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_25  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_26  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=succeeded];
m4_3 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=succeeded];
m4_3 -> m4_3  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IDictionary<System.DateTime, long> succeeded"];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=failed];
m4_4 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=failed];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_24  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_34  [key=2, style=dotted];
m4_20 -> m4_35  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_5 -> m4_7  [key=1, style=dashed, color=red, label=period];
m4_5 -> m4_10  [key=1, style=dashed, color=red, label=period];
m4_5 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=period];
m4_5 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label=period];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_34  [key=2, style=dotted];
m4_22 -> m4_35  [key=2, style=dotted];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_27  [key=2, style=dotted, color=red];
m4_6 -> m4_8  [key=1, style=dashed, color=red, label=monitor];
m4_6 -> m4_9  [key=1, style=dashed, color=red, label=monitor];
m4_6 -> m4_11  [key=1, style=dashed, color=red, label=monitor];
m4_6 -> m4_12  [key=1, style=dashed, color=red, label=monitor];
m4_7 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_10  [key=0, style=solid, color=red];
m4_7 -> m4_28  [key=2, style=dotted, color=red];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_10 -> m4_13  [key=0, style=solid, color=red];
m4_10 -> m4_28  [key=2, style=dotted, color=red];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_28  [key=2, style=dotted];
m4_14 -> m4_33  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_28  [key=2, style=dotted];
m4_16 -> m4_33  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid, color=red];
m4_8 -> m4_29  [key=2, style=dotted, color=red];
m4_8 -> m4_18  [key=1, style=dashed, color=red, label=succeeded];
m4_8 -> m4_20  [key=1, style=dashed, color=red, label=succeeded];
m4_9 -> m4_13  [key=0, style=solid, color=red];
m4_9 -> m4_30  [key=2, style=dotted, color=red];
m4_9 -> m4_18  [key=1, style=dashed, color=red, label=failed];
m4_9 -> m4_22  [key=1, style=dashed, color=red, label=failed];
m4_11 -> m4_12  [key=0, style=solid, color=red];
m4_11 -> m4_31  [key=2, style=dotted, color=red];
m4_11 -> m4_18  [key=1, style=dashed, color=red, label=succeeded];
m4_11 -> m4_20  [key=1, style=dashed, color=red, label=succeeded];
m4_12 -> m4_13  [key=0, style=solid, color=red];
m4_12 -> m4_32  [key=2, style=dotted, color=red];
m4_12 -> m4_18  [key=1, style=dashed, color=red, label=failed];
m4_12 -> m4_22  [key=1, style=dashed, color=red, label=failed];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_25  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_25  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_25  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_25  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_25  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_25  [key=2, style=dotted];
m4_24 -> m4_0  [key=0, style=bold, color=blue];
m4_36 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m4_36 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DashboardPage"];
m5_23 -> m5_23  [key=1, style=dashed, color=green, label=job];
m5_23 -> m5_24  [key=0, style=solid, color=green];
m5_23 -> m5_64  [key=2, style=dotted, color=green];
m5_23 -> m5_25  [key=1, style=dashed, color=green, label=job];
m5_21 -> m5_21  [key=1, style=dashed, color=green, label=job];
m5_21 -> m5_22  [key=0, style=solid, color=green];
m5_21 -> m5_64  [key=2, style=dotted, color=green];
m5_21 -> m5_23  [key=1, style=dashed, color=green, label=job];
m5_26 -> m5_27  [key=0, style=solid, color=green];
m5_26 -> m5_56  [key=2, style=dotted, color=green];
m5_22 -> m5_23  [key=0, style=solid, color=green];
m5_22 -> m5_56  [key=2, style=dotted, color=green];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_1 -> m5_56  [key=2, style=dotted, color=green];
m5_1 -> m5_3  [key=2, style=dotted, color=red];
m5_1 -> m5_4  [key=1, style=dashed, color=red, label="lambda expression"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_57  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_9 -> m5_60  [key=2, style=dotted, color=green];
m5_9 -> m5_61  [key=2, style=dotted, color=green];
m5_9 -> m5_62  [key=2, style=dotted, color=green];
m5_9 -> m5_12  [key=1, style=dashed, color=green, label=pager];
m5_9 -> m5_17  [key=1, style=dashed, color=green, label=pager];
m5_9 -> m5_54  [key=1, style=dashed, color=green, label=pager];
m5_9 -> m5_19  [key=2, style=dotted, color=red];
m5_9 -> m5_14  [key=1, style=dashed, color=red, label=connection];
m5_4 -> m5_9  [key=1, style=dashed, color=green, label=from];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_4 -> m5_58  [key=2, style=dotted];
m5_5 -> m5_9  [key=1, style=dashed, color=green, label=perPage];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_5 -> m5_58  [key=2, style=dotted];
m5_5 -> m5_7  [key=2, style=dotted, color=red];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_8 -> m5_59  [key=2, style=dotted, color=green];
m5_8 -> m5_10  [key=1, style=dashed, color=green, label=monitor];
m5_10 -> m5_11  [key=0, style=solid, color=red];
m5_10 -> m5_63  [key=2, style=dotted, color=green];
m5_10 -> m5_19  [key=1, style=dashed, color=green, label=jobs];
m5_10 -> m5_20  [key=2, style=dotted, color=red];
m5_10 -> m5_27  [key=1, style=dashed, color=red, label="lambda expression"];
m5_10 -> m5_14  [key=1, style=dashed, color=red, label=job];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_14  [key=0, style=solid, color=green];
m5_12 -> m5_22  [key=2, style=dotted, color=red];
m5_12 -> m5_15  [key=1, style=dashed, color=red, label=exception];
m5_12 -> m5_17  [key=1, style=dashed, color=red, label=exception];
m5_17 -> m5_18  [key=0, style=solid, color=red];
m5_17 -> m5_65  [key=2, style=dotted];
m5_17 -> m5_66  [key=2, style=dotted];
m5_17 -> m5_67  [key=2, style=dotted];
m5_17 -> m5_26  [key=2, style=dotted, color=red];
m5_54 -> m5_55  [key=0, style=solid, color=green];
m5_54 -> m5_71  [key=2, style=dotted, color=green];
m5_54 -> m5_66  [key=2, style=dotted, color=green];
m5_54 -> m5_67  [key=2, style=dotted, color=green];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_6 -> m5_4  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_11 -> m5_12  [key=0, style=solid, color=red];
m5_11 -> m5_56  [key=2, style=dotted];
m5_11 -> m5_21  [key=2, style=dotted, color=red];
m5_11 -> m5_14  [key=1, style=dashed, color=red, label=state];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_19 -> m5_53  [key=0, style=solid, color=green];
m5_19 -> m5_21  [key=1, style=dashed, color=green, label=job];
m5_13 -> m5_56  [key=2, style=dotted];
m5_13 -> m5_55  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_23  [key=2, style=dotted, color=red];
m5_14 -> m5_15  [key=0, style=solid, color=red];
m5_14 -> m5_56  [key=2, style=dotted, color=green];
m5_14 -> m5_24  [key=2, style=dotted, color=red];
m5_53 -> m5_54  [key=0, style=solid, color=green];
m5_53 -> m5_56  [key=2, style=dotted, color=green];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_18 -> m5_56  [key=2, style=dotted, color=green];
m5_18 -> m5_8  [key=0, style=bold, color=blue];
m5_52 -> m5_19  [key=0, style=solid, color=green];
m5_52 -> m5_56  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_56  [key=2, style=dotted, color=green];
m5_15 -> m5_16  [key=0, style=solid, color=red];
m5_15 -> m5_62  [key=2, style=dotted, color=green];
m5_15 -> m5_64  [key=2, style=dotted, color=green];
m5_15 -> m5_7  [key=2, style=dotted, color=red];
m5_15 -> m5_17  [key=1, style=dashed, color=red, label=context];
m5_16 -> m5_17  [key=0, style=solid, color=red];
m5_16 -> m5_56  [key=2, style=dotted, color=green];
m5_16 -> m5_25  [key=2, style=dotted, color=red];
m5_24 -> m5_25  [key=0, style=solid, color=green];
m5_24 -> m5_56  [key=2, style=dotted];
m5_25 -> m5_25  [key=1, style=dashed, color=green, label=job];
m5_25 -> m5_26  [key=0, style=solid, color=green];
m5_25 -> m5_29  [key=0, style=solid, color=green];
m5_25 -> m5_27  [key=1, style=dashed, color=green, label=job];
m5_25 -> m5_30  [key=1, style=dashed, color=green, label=job];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_29 -> m5_56  [key=2, style=dotted, color=green];
m5_29 -> m5_27  [key=0, style=bold, color=blue];
m5_27 -> m5_27  [key=1, style=dashed, color=green, label=job];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_64  [key=2, style=dotted, color=green];
m5_27 -> m5_30  [key=1, style=dashed, color=green, label=job];
m5_30 -> m5_30  [key=1, style=dashed, color=green, label=job];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_62  [key=2, style=dotted, color=green];
m5_30 -> m5_64  [key=2, style=dotted, color=green];
m5_30 -> m5_32  [key=1, style=dashed, color=green, label=job];
m5_28 -> m5_29  [key=0, style=solid, color=red];
m5_28 -> m5_56  [key=2, style=dotted];
m5_28 -> m5_30  [key=2, style=dotted, color=red];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_31 -> m5_56  [key=2, style=dotted, color=green];
m5_31 -> m5_30  [key=0, style=bold, color=blue];
m5_32 -> m5_32  [key=1, style=dashed, color=green, label=job];
m5_32 -> m5_33  [key=0, style=solid, color=green];
m5_32 -> m5_68  [key=2, style=dotted, color=green];
m5_32 -> m5_67  [key=2, style=dotted, color=green];
m5_32 -> m5_34  [key=1, style=dashed, color=green, label=job];
m5_33 -> m5_34  [key=0, style=solid, color=green];
m5_33 -> m5_56  [key=2, style=dotted];
m5_34 -> m5_34  [key=1, style=dashed, color=green, label=job];
m5_34 -> m5_35  [key=0, style=solid, color=green];
m5_34 -> m5_36  [key=0, style=solid, color=green];
m5_34 -> m5_37  [key=1, style=dashed, color=green, label=job];
m5_35 -> m5_36  [key=0, style=solid, color=green];
m5_35 -> m5_56  [key=2, style=dotted, color=green];
m5_36 -> m5_37  [key=0, style=solid, color=green];
m5_36 -> m5_56  [key=2, style=dotted];
m5_37 -> m5_37  [key=1, style=dashed, color=green, label=job];
m5_37 -> m5_38  [key=0, style=solid, color=green];
m5_37 -> m5_39  [key=0, style=solid, color=green];
m5_37 -> m5_40  [key=1, style=dashed, color=green, label=job];
m5_38 -> m5_52  [key=0, style=solid, color=green];
m5_38 -> m5_56  [key=2, style=dotted, color=green];
m5_39 -> m5_40  [key=0, style=solid, color=green];
m5_39 -> m5_56  [key=2, style=dotted, color=green];
m5_40 -> m5_40  [key=1, style=dashed, color=green, label=job];
m5_40 -> m5_41  [key=0, style=solid, color=green];
m5_40 -> m5_62  [key=2, style=dotted, color=green];
m5_40 -> m5_64  [key=2, style=dotted, color=green];
m5_40 -> m5_42  [key=1, style=dashed, color=green, label=job];
m5_41 -> m5_42  [key=0, style=solid, color=green];
m5_41 -> m5_56  [key=2, style=dotted, color=green];
m5_42 -> m5_42  [key=1, style=dashed, color=green, label=job];
m5_42 -> m5_43  [key=0, style=solid, color=green];
m5_42 -> m5_69  [key=2, style=dotted, color=green];
m5_42 -> m5_67  [key=2, style=dotted, color=green];
m5_42 -> m5_45  [key=1, style=dashed, color=green, label=job];
m5_43 -> m5_44  [key=0, style=solid, color=green];
m5_43 -> m5_56  [key=2, style=dotted, color=green];
m5_45 -> m5_45  [key=1, style=dashed, color=green, label=job];
m5_45 -> m5_46  [key=0, style=solid, color=green];
m5_45 -> m5_51  [key=0, style=solid, color=green];
m5_45 -> m5_47  [key=1, style=dashed, color=green, label=job];
m5_44 -> m5_45  [key=0, style=solid, color=green];
m5_44 -> m5_56  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid, color=green];
m5_46 -> m5_56  [key=2, style=dotted, color=green];
m5_51 -> m5_56  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_47 -> m5_47  [key=1, style=dashed, color=green, label=job];
m5_47 -> m5_48  [key=0, style=solid, color=green];
m5_47 -> m5_70  [key=2, style=dotted, color=green];
m5_47 -> m5_64  [key=2, style=dotted, color=green];
m5_47 -> m5_49  [key=1, style=dashed, color=green, label=job];
m5_48 -> m5_49  [key=0, style=solid, color=green];
m5_48 -> m5_56  [key=2, style=dotted, color=green];
m5_49 -> m5_49  [key=1, style=dashed, color=green, label=job];
m5_49 -> m5_50  [key=0, style=solid, color=green];
m5_49 -> m5_64  [key=2, style=dotted, color=green];
m5_50 -> m5_56  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_55 -> m5_0  [key=0, style=bold, color=blue];
m5_72 -> m5_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_54  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_53  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_21  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_30  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_35  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_39  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_42  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_43  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_46  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_47  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_48  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_49  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m5_72 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.DeletedJobsPage"];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_5 -> m6_56  [key=2, style=dotted];
m6_5 -> m6_9  [key=1, style=dashed, color=red, label=perPage];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_0 -> m6_3  [key=1, style=dashed, color=green, label="Hangfire.Server.IServerComponent"];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_51  [key=2, style=dotted, color=red];
m6_1 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_52  [key=2, style=dotted];
m6_2 -> m6_53  [key=2, style=dotted];
m6_2 -> m6_54  [key=2, style=dotted];
m6_2 -> m6_55  [key=2, style=dotted];
m6_2 -> m6_4  [key=0, style=solid, color=green];
m6_2 -> m6_5  [key=2, style=dotted, color=green];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_56  [key=2, style=dotted];
m6_4 -> m6_9  [key=1, style=dashed, color=red, label=from];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid, color=red];
m6_9 -> m6_58  [key=2, style=dotted, color=red];
m6_9 -> m6_59  [key=2, style=dotted, color=red];
m6_9 -> m6_55  [key=2, style=dotted, color=red];
m6_9 -> m6_12  [key=1, style=dashed, color=red, label=pager];
m6_9 -> m6_17  [key=1, style=dashed, color=red, label=pager];
m6_9 -> m6_49  [key=1, style=dashed, color=red, label=pager];
m6_9 -> m6_7  [key=0, style=solid, color=green];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_6 -> m6_8  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_7 -> m6_10  [key=0, style=solid, color=green];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_57  [key=2, style=dotted, color=red];
m6_8 -> m6_10  [key=1, style=dashed, color=red, label=monitor];
m6_8 -> m6_8  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m6_8 -> m6_11  [key=2, style=dotted, color=green];
m6_10 -> m6_11  [key=0, style=solid, color=red];
m6_10 -> m6_60  [key=2, style=dotted, color=red];
m6_10 -> m6_19  [key=1, style=dashed, color=red, label=enqueuedJobs];
m6_10 -> m6_6  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid, color=red];
m6_12 -> m6_14  [key=0, style=solid, color=red];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_17 -> m6_62  [key=2, style=dotted, color=red];
m6_17 -> m6_63  [key=2, style=dotted, color=red];
m6_17 -> m6_64  [key=2, style=dotted, color=red];
m6_17 -> m6_3  [key=1, style=dashed, color=green, label="Hangfire.Server.InfiniteLoopComponent"];
m6_17 -> m6_9  [key=1, style=dashed, color=green, label="Hangfire.Server.InfiniteLoopComponent"];
m6_17 -> m6_14  [key=1, style=dashed, color=green, label="Hangfire.Server.InfiniteLoopComponent"];
m6_49 -> m6_50  [key=0, style=solid, color=red];
m6_49 -> m6_70  [key=2, style=dotted, color=red];
m6_49 -> m6_63  [key=2, style=dotted, color=red];
m6_49 -> m6_64  [key=2, style=dotted, color=red];
m6_11 -> m6_12  [key=0, style=solid, color=red];
m6_11 -> m6_51  [key=2, style=dotted, color=red];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_48  [key=0, style=solid, color=red];
m6_19 -> m6_21  [key=1, style=dashed, color=red, label=job];
m6_13 -> m6_50  [key=0, style=solid, color=red];
m6_13 -> m6_51  [key=2, style=dotted, color=red];
m6_13 -> m6_14  [key=0, style=solid, color=green];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_14 -> m6_51  [key=2, style=dotted, color=red];
m6_14 -> m6_16  [key=2, style=dotted, color=green];
m6_15 -> m6_16  [key=0, style=solid, color=red];
m6_15 -> m6_55  [key=2, style=dotted, color=red];
m6_15 -> m6_61  [key=2, style=dotted, color=red];
m6_15 -> m6_13  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_16 -> m6_51  [key=2, style=dotted, color=red];
m6_18 -> m6_19  [key=0, style=solid, color=red];
m6_18 -> m6_51  [key=2, style=dotted, color=red];
m6_20 -> m6_21  [key=0, style=solid, color=red];
m6_20 -> m6_51  [key=2, style=dotted, color=red];
m6_48 -> m6_49  [key=0, style=solid, color=red];
m6_48 -> m6_51  [key=2, style=dotted, color=red];
m6_21 -> m6_22  [key=0, style=solid, color=red];
m6_21 -> m6_61  [key=2, style=dotted, color=red];
m6_21 -> m6_21  [key=1, style=dashed, color=red, label=job];
m6_21 -> m6_23  [key=1, style=dashed, color=red, label=job];
m6_22 -> m6_23  [key=0, style=solid, color=red];
m6_22 -> m6_51  [key=2, style=dotted, color=red];
m6_23 -> m6_24  [key=0, style=solid, color=red];
m6_23 -> m6_61  [key=2, style=dotted, color=red];
m6_23 -> m6_23  [key=1, style=dashed, color=red, label=job];
m6_23 -> m6_25  [key=1, style=dashed, color=red, label=job];
m6_24 -> m6_25  [key=0, style=solid, color=red];
m6_24 -> m6_51  [key=2, style=dotted, color=red];
m6_25 -> m6_26  [key=0, style=solid, color=red];
m6_25 -> m6_55  [key=2, style=dotted, color=red];
m6_25 -> m6_61  [key=2, style=dotted, color=red];
m6_25 -> m6_25  [key=1, style=dashed, color=red, label=job];
m6_25 -> m6_27  [key=1, style=dashed, color=red, label=job];
m6_26 -> m6_27  [key=0, style=solid, color=red];
m6_26 -> m6_51  [key=2, style=dotted, color=red];
m6_27 -> m6_28  [key=0, style=solid, color=red];
m6_27 -> m6_65  [key=2, style=dotted, color=red];
m6_27 -> m6_64  [key=2, style=dotted, color=red];
m6_27 -> m6_27  [key=1, style=dashed, color=red, label=job];
m6_27 -> m6_29  [key=1, style=dashed, color=red, label=job];
m6_28 -> m6_29  [key=0, style=solid, color=red];
m6_28 -> m6_51  [key=2, style=dotted, color=red];
m6_29 -> m6_30  [key=0, style=solid, color=red];
m6_29 -> m6_31  [key=0, style=solid, color=red];
m6_29 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_29 -> m6_32  [key=1, style=dashed, color=red, label=job];
m6_30 -> m6_31  [key=0, style=solid, color=red];
m6_30 -> m6_51  [key=2, style=dotted, color=red];
m6_31 -> m6_32  [key=0, style=solid, color=red];
m6_31 -> m6_51  [key=2, style=dotted, color=red];
m6_32 -> m6_33  [key=0, style=solid, color=red];
m6_32 -> m6_66  [key=2, style=dotted, color=red];
m6_32 -> m6_67  [key=2, style=dotted, color=red];
m6_32 -> m6_61  [key=2, style=dotted, color=red];
m6_32 -> m6_32  [key=1, style=dashed, color=red, label=job];
m6_32 -> m6_34  [key=1, style=dashed, color=red, label=job];
m6_33 -> m6_34  [key=0, style=solid, color=red];
m6_33 -> m6_51  [key=2, style=dotted, color=red];
m6_34 -> m6_35  [key=0, style=solid, color=red];
m6_34 -> m6_61  [key=2, style=dotted, color=red];
m6_34 -> m6_34  [key=1, style=dashed, color=red, label=job];
m6_34 -> m6_36  [key=1, style=dashed, color=red, label=job];
m6_35 -> m6_36  [key=0, style=solid, color=red];
m6_35 -> m6_51  [key=2, style=dotted, color=red];
m6_36 -> m6_37  [key=0, style=solid, color=red];
m6_36 -> m6_55  [key=2, style=dotted, color=red];
m6_36 -> m6_61  [key=2, style=dotted, color=red];
m6_36 -> m6_36  [key=1, style=dashed, color=red, label=job];
m6_36 -> m6_38  [key=1, style=dashed, color=red, label=job];
m6_37 -> m6_38  [key=0, style=solid, color=red];
m6_37 -> m6_51  [key=2, style=dotted, color=red];
m6_38 -> m6_39  [key=0, style=solid, color=red];
m6_38 -> m6_68  [key=2, style=dotted, color=red];
m6_38 -> m6_64  [key=2, style=dotted, color=red];
m6_38 -> m6_38  [key=1, style=dashed, color=red, label=job];
m6_38 -> m6_40  [key=1, style=dashed, color=red, label=job];
m6_39 -> m6_40  [key=0, style=solid, color=red];
m6_39 -> m6_51  [key=2, style=dotted, color=red];
m6_40 -> m6_41  [key=0, style=solid, color=red];
m6_40 -> m6_46  [key=0, style=solid, color=red];
m6_40 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_40 -> m6_42  [key=1, style=dashed, color=red, label=job];
m6_41 -> m6_42  [key=0, style=solid, color=red];
m6_41 -> m6_51  [key=2, style=dotted, color=red];
m6_46 -> m6_47  [key=0, style=solid, color=red];
m6_46 -> m6_51  [key=2, style=dotted, color=red];
m6_42 -> m6_43  [key=0, style=solid, color=red];
m6_42 -> m6_69  [key=2, style=dotted, color=red];
m6_42 -> m6_61  [key=2, style=dotted, color=red];
m6_42 -> m6_42  [key=1, style=dashed, color=red, label=job];
m6_42 -> m6_44  [key=1, style=dashed, color=red, label=job];
m6_43 -> m6_44  [key=0, style=solid, color=red];
m6_43 -> m6_51  [key=2, style=dotted, color=red];
m6_44 -> m6_45  [key=0, style=solid, color=red];
m6_44 -> m6_61  [key=2, style=dotted, color=red];
m6_44 -> m6_44  [key=1, style=dashed, color=red, label=job];
m6_45 -> m6_47  [key=0, style=solid, color=red];
m6_45 -> m6_51  [key=2, style=dotted, color=red];
m6_47 -> m6_19  [key=0, style=solid, color=red];
m6_47 -> m6_51  [key=2, style=dotted, color=red];
m6_50 -> m6_0  [key=0, style=bold, color=blue];
m6_71 -> m6_1  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_9  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_10  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_11  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_13  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_14  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_15  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_16  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_17  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_18  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_20  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_21  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_22  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_23  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_24  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_25  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_26  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_27  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_28  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_30  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_31  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_32  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_33  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_34  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_35  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_36  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_37  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_38  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_39  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_41  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_42  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_43  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_44  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_45  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_46  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_47  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_48  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m6_71 -> m6_49  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_3 -> m7_4  [key=0, style=solid, color=green];
m7_4 -> m7_5  [key=0, style=solid, color=green];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_5 -> m7_13  [key=2, style=dotted, color=green];
m7_5 -> m7_9  [key=1, style=dashed, color=green, label=jobIds];
m7_6 -> m7_7  [key=0, style=solid, color=green];
m7_6 -> m7_9  [key=0, style=solid, color=green];
m7_9 -> m7_10  [key=0, style=solid, color=green];
m7_9 -> m7_11  [key=0, style=solid, color=green];
m7_7 -> m7_8  [key=0, style=solid, color=green];
m7_8 -> m7_12  [key=0, style=solid, color=green];
m7_10 -> m7_9  [key=0, style=solid, color=green];
m7_10 -> m7_14  [key=2, style=dotted, color=green];
m7_11 -> m7_12  [key=0, style=solid, color=green];
m7_12 -> m7_3  [key=0, style=bold, color=blue];
m7_15 -> m7_1  [key=1, style=dashed, color=green, label="HangFire.Web.BatchCommandHandler"];
m7_15 -> m7_7  [key=1, style=dashed, color=green, label="HangFire.Web.BatchCommandHandler"];
m7_15 -> m7_10  [key=1, style=dashed, color=green, label="HangFire.Web.BatchCommandHandler"];
m7_15 -> m7_11  [key=1, style=dashed, color=green, label="HangFire.Web.BatchCommandHandler"];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_47  [key=2, style=dotted, color=green];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_48  [key=2, style=dotted];
m8_2 -> m8_49  [key=2, style=dotted];
m8_2 -> m8_50  [key=2, style=dotted];
m8_2 -> m8_51  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_52  [key=2, style=dotted];
m8_4 -> m8_9  [key=1, style=dashed, color=green, label=from];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_5 -> m8_52  [key=2, style=dotted];
m8_5 -> m8_9  [key=1, style=dashed, color=green, label=perPage];
m8_9 -> m8_10  [key=0, style=solid, color=green];
m8_9 -> m8_54  [key=2, style=dotted, color=green];
m8_9 -> m8_55  [key=2, style=dotted, color=green];
m8_9 -> m8_51  [key=2, style=dotted, color=green];
m8_9 -> m8_12  [key=1, style=dashed, color=green, label=pager];
m8_9 -> m8_19  [key=1, style=dashed, color=green, label=pager];
m8_9 -> m8_45  [key=1, style=dashed, color=green, label=pager];
m8_6 -> m8_7  [key=0, style=solid, color=green];
m8_7 -> m8_8  [key=0, style=solid, color=green];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_8 -> m8_53  [key=2, style=dotted, color=green];
m8_8 -> m8_10  [key=1, style=dashed, color=green, label=monitor];
m8_10 -> m8_11  [key=0, style=solid, color=green];
m8_10 -> m8_56  [key=2, style=dotted, color=green];
m8_10 -> m8_21  [key=1, style=dashed, color=green, label=fetchedJobs];
m8_12 -> m8_13  [key=0, style=solid, color=green];
m8_12 -> m8_14  [key=0, style=solid, color=green];
m8_19 -> m8_20  [key=0, style=solid, color=green];
m8_19 -> m8_58  [key=2, style=dotted, color=red];
m8_19 -> m8_59  [key=2, style=dotted, color=red];
m8_19 -> m8_60  [key=2, style=dotted, color=red];
m8_45 -> m8_46  [key=0, style=solid, color=green];
m8_45 -> m8_66  [key=2, style=dotted, color=green];
m8_45 -> m8_59  [key=2, style=dotted, color=green];
m8_45 -> m8_60  [key=2, style=dotted, color=green];
m8_11 -> m8_12  [key=0, style=solid, color=green];
m8_11 -> m8_47  [key=2, style=dotted, color=red];
m8_21 -> m8_22  [key=0, style=solid, color=green];
m8_21 -> m8_44  [key=0, style=solid, color=green];
m8_21 -> m8_23  [key=1, style=dashed, color=green, label=job];
m8_13 -> m8_46  [key=0, style=solid, color=red];
m8_13 -> m8_47  [key=2, style=dotted, color=red];
m8_14 -> m8_15  [key=0, style=solid, color=green];
m8_14 -> m8_47  [key=2, style=dotted, color=green];
m8_15 -> m8_16  [key=0, style=solid, color=green];
m8_15 -> m8_51  [key=2, style=dotted, color=red];
m8_15 -> m8_57  [key=2, style=dotted, color=red];
m8_16 -> m8_17  [key=0, style=solid, color=green];
m8_16 -> m8_47  [key=2, style=dotted, color=green];
m8_17 -> m8_18  [key=0, style=solid, color=green];
m8_17 -> m8_51  [key=2, style=dotted, color=red];
m8_17 -> m8_57  [key=2, style=dotted, color=red];
m8_18 -> m8_19  [key=0, style=solid, color=green];
m8_18 -> m8_47  [key=2, style=dotted, color=green];
m8_20 -> m8_21  [key=0, style=solid, color=green];
m8_20 -> m8_47  [key=2, style=dotted, color=green];
m8_22 -> m8_23  [key=0, style=solid, color=green];
m8_22 -> m8_47  [key=2, style=dotted, color=green];
m8_44 -> m8_45  [key=0, style=solid, color=green];
m8_44 -> m8_47  [key=2, style=dotted, color=green];
m8_23 -> m8_24  [key=0, style=solid, color=green];
m8_23 -> m8_57  [key=2, style=dotted, color=green];
m8_23 -> m8_23  [key=1, style=dashed, color=green, label=job];
m8_23 -> m8_25  [key=1, style=dashed, color=green, label=job];
m8_24 -> m8_25  [key=0, style=solid, color=green];
m8_24 -> m8_47  [key=2, style=dotted, color=green];
m8_25 -> m8_26  [key=0, style=solid, color=green];
m8_25 -> m8_51  [key=2, style=dotted, color=green];
m8_25 -> m8_57  [key=2, style=dotted, color=green];
m8_25 -> m8_25  [key=1, style=dashed, color=green, label=job];
m8_25 -> m8_27  [key=1, style=dashed, color=green, label=job];
m8_26 -> m8_27  [key=0, style=solid, color=green];
m8_26 -> m8_47  [key=2, style=dotted, color=green];
m8_27 -> m8_28  [key=0, style=solid, color=green];
m8_27 -> m8_61  [key=2, style=dotted, color=green];
m8_27 -> m8_60  [key=2, style=dotted, color=green];
m8_27 -> m8_27  [key=1, style=dashed, color=green, label=job];
m8_27 -> m8_29  [key=1, style=dashed, color=green, label=job];
m8_28 -> m8_29  [key=0, style=solid, color=green];
m8_28 -> m8_47  [key=2, style=dotted, color=green];
m8_29 -> m8_30  [key=0, style=solid, color=green];
m8_29 -> m8_62  [key=2, style=dotted, color=green];
m8_29 -> m8_63  [key=2, style=dotted, color=green];
m8_29 -> m8_57  [key=2, style=dotted, color=green];
m8_29 -> m8_29  [key=1, style=dashed, color=green, label=job];
m8_29 -> m8_31  [key=1, style=dashed, color=green, label=job];
m8_30 -> m8_31  [key=0, style=solid, color=green];
m8_30 -> m8_47  [key=2, style=dotted, color=green];
m8_31 -> m8_32  [key=0, style=solid, color=green];
m8_31 -> m8_57  [key=2, style=dotted, color=green];
m8_31 -> m8_31  [key=1, style=dashed, color=green, label=job];
m8_31 -> m8_33  [key=1, style=dashed, color=green, label=job];
m8_32 -> m8_33  [key=0, style=solid, color=green];
m8_32 -> m8_47  [key=2, style=dotted, color=green];
m8_33 -> m8_34  [key=0, style=solid, color=green];
m8_33 -> m8_51  [key=2, style=dotted, color=green];
m8_33 -> m8_57  [key=2, style=dotted, color=green];
m8_33 -> m8_33  [key=1, style=dashed, color=green, label=job];
m8_33 -> m8_35  [key=1, style=dashed, color=green, label=job];
m8_34 -> m8_35  [key=0, style=solid, color=green];
m8_34 -> m8_47  [key=2, style=dotted, color=green];
m8_35 -> m8_36  [key=0, style=solid, color=green];
m8_35 -> m8_64  [key=2, style=dotted, color=green];
m8_35 -> m8_60  [key=2, style=dotted, color=green];
m8_35 -> m8_35  [key=1, style=dashed, color=green, label=job];
m8_35 -> m8_37  [key=1, style=dashed, color=green, label=job];
m8_36 -> m8_37  [key=0, style=solid, color=green];
m8_36 -> m8_47  [key=2, style=dotted, color=green];
m8_37 -> m8_38  [key=0, style=solid, color=green];
m8_37 -> m8_43  [key=0, style=solid, color=green];
m8_37 -> m8_37  [key=1, style=dashed, color=green, label=job];
m8_37 -> m8_39  [key=1, style=dashed, color=green, label=job];
m8_38 -> m8_39  [key=0, style=solid, color=green];
m8_38 -> m8_47  [key=2, style=dotted, color=green];
m8_43 -> m8_21  [key=0, style=solid, color=green];
m8_43 -> m8_47  [key=2, style=dotted, color=red];
m8_39 -> m8_40  [key=0, style=solid, color=green];
m8_39 -> m8_65  [key=2, style=dotted, color=green];
m8_39 -> m8_57  [key=2, style=dotted, color=green];
m8_39 -> m8_39  [key=1, style=dashed, color=green, label=job];
m8_39 -> m8_41  [key=1, style=dashed, color=green, label=job];
m8_40 -> m8_41  [key=0, style=solid, color=green];
m8_40 -> m8_47  [key=2, style=dotted, color=green];
m8_41 -> m8_42  [key=0, style=solid, color=green];
m8_41 -> m8_57  [key=2, style=dotted, color=green];
m8_41 -> m8_41  [key=1, style=dashed, color=green, label=job];
m8_42 -> m8_43  [key=0, style=solid, color=red];
m8_42 -> m8_47  [key=2, style=dotted, color=red];
m8_46 -> m8_0  [key=0, style=bold, color=blue];
m8_67 -> m8_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_10  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_30  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_34  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_35  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_36  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_39  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_44  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m8_67 -> m8_45  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FetchedJobsPage"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_13  [key=2, style=dotted];
m10_7 -> m10_6  [key=0, style=bold, color=blue];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_10  [key=0, style=bold, color=blue];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=2, style=dotted];
m10_39 -> m10_38  [key=0, style=bold, color=blue];
m10_39 -> m10_37  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid, color=green];
m10_4 -> m10_11  [key=2, style=dotted, color=green];
m10_4 -> m10_6  [key=1, style=dashed, color=green, label=stateMachineFactory];
m10_5 -> m10_4  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_12  [key=2, style=dotted];
m10_0 -> m10_1  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_3 -> m10_10  [key=2, style=dotted];
m10_3 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=state];
m10_3 -> m10_2  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m10_2 -> m10_9  [key=2, style=dotted];
m10_2 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_1 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=connection];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_8  [key=2, style=dotted];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_25 -> m10_24  [key=0, style=bold, color=blue];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_30  [key=0, style=bold, color=blue];
m10_35 -> m10_34  [key=0, style=bold, color=blue];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_35  [key=2, style=dotted];
m10_33 -> m10_32  [key=0, style=bold, color=blue];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_36  [key=2, style=dotted];
m10_33 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_46  [key=2, style=dotted];
m10_42 -> m10_24  [key=2, style=dotted];
m10_42 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_43 -> m10_42  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_23  [key=2, style=dotted];
m10_43 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_13 -> m10_12  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid];
m10_19 -> m10_18  [key=0, style=bold, color=blue];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_23  [key=2, style=dotted];
m10_19 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_8  [key=0, style=bold, color=blue];
m10_97 -> m10_98  [key=0, style=solid];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_46  [key=2, style=dotted];
m10_98 -> m10_24  [key=2, style=dotted];
m10_98 -> m10_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_62  [key=2, style=dotted];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_23  [key=2, style=dotted];
m10_102 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_106  [key=2, style=dotted];
m10_103 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_99 -> m10_101  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_61  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_46  [key=2, style=dotted];
m10_100 -> m10_105  [key=2, style=dotted];
m10_100 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_100 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_104 -> m10_97  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_40  [key=0, style=bold, color=blue];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_24  [key=2, style=dotted];
m10_44 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_45 -> m10_41  [key=0, style=bold, color=blue];
m10_251 -> m10_252  [key=0, style=solid];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_62  [key=2, style=dotted];
m10_255 -> m10_256  [key=0, style=solid];
m10_255 -> m10_62  [key=2, style=dotted];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_46  [key=2, style=dotted];
m10_257 -> m10_238  [key=2, style=dotted];
m10_257 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_258 -> m10_259  [key=0, style=solid];
m10_258 -> m10_23  [key=2, style=dotted];
m10_258 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_259 -> m10_260  [key=0, style=solid];
m10_259 -> m10_24  [key=2, style=dotted];
m10_259 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_252 -> m10_254  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_252 -> m10_253  [key=0, style=solid];
m10_252 -> m10_128  [key=2, style=dotted];
m10_252 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_253 -> m10_254  [key=0, style=solid];
m10_253 -> m10_255  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_253 -> m10_128  [key=2, style=dotted];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_237  [key=2, style=dotted];
m10_256 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_256 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_256 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_260 -> m10_36  [key=2, style=dotted];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_261 -> m10_251  [key=0, style=bold, color=blue];
m10_53 -> m10_54  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_62  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_46  [key=2, style=dotted];
m10_56 -> m10_24  [key=2, style=dotted];
m10_56 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_23  [key=2, style=dotted];
m10_57 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_24  [key=2, style=dotted];
m10_58 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_61  [key=2, style=dotted];
m10_54 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_59 -> m10_36  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_60 -> m10_53  [key=0, style=bold, color=blue];
m10_24 -> m10_25  [key=0, style=solid];
m10_29 -> m10_28  [key=0, style=bold, color=blue];
m10_119 -> m10_120  [key=0, style=solid];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_62  [key=2, style=dotted];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_46  [key=2, style=dotted];
m10_123 -> m10_84  [key=2, style=dotted];
m10_123 -> m10_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_23  [key=2, style=dotted];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_35  [key=2, style=dotted];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_128  [key=2, style=dotted];
m10_120 -> m10_122  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_120 -> m10_124  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_46  [key=2, style=dotted];
m10_122 -> m10_84  [key=2, style=dotted];
m10_122 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_46  [key=2, style=dotted];
m10_124 -> m10_84  [key=2, style=dotted];
m10_124 -> m10_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_127 -> m10_119  [key=0, style=bold, color=blue];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_24  [key=2, style=dotted];
m10_20 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_25  [key=2, style=dotted];
m10_21 -> m10_20  [key=0, style=bold, color=blue];
m10_22 -> m10_18  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid];
m10_164 -> m10_165  [key=0, style=solid];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_62  [key=2, style=dotted];
m10_168 -> m10_169  [key=0, style=solid];
m10_168 -> m10_23  [key=2, style=dotted];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_35  [key=2, style=dotted];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_36  [key=2, style=dotted];
m10_170 -> m10_179  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_128  [key=2, style=dotted];
m10_165 -> m10_167  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_165 -> m10_171  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_46  [key=2, style=dotted];
m10_167 -> m10_105  [key=2, style=dotted];
m10_167 -> m10_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_167 -> m10_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_171 -> m10_36  [key=2, style=dotted];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_172 -> m10_164  [key=0, style=bold, color=blue];
m10_23 -> m10_328  [key=0, style=solid];
m10_23 -> m10_22  [key=0, style=bold, color=blue];
m10_328 -> m10_329  [key=0, style=solid];
m10_328 -> m10_330  [key=2, style=dotted];
m10_329 -> m10_23  [key=0, style=bold, color=blue];
m10_228 -> m10_229  [key=0, style=solid];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_62  [key=2, style=dotted];
m10_232 -> m10_233  [key=0, style=solid];
m10_232 -> m10_46  [key=2, style=dotted];
m10_232 -> m10_238  [key=2, style=dotted];
m10_232 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_23  [key=2, style=dotted];
m10_233 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_234 -> m10_235  [key=0, style=solid];
m10_234 -> m10_24  [key=2, style=dotted];
m10_234 -> m10_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_229 -> m10_230  [key=0, style=solid];
m10_229 -> m10_128  [key=2, style=dotted];
m10_229 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_237  [key=2, style=dotted];
m10_231 -> m10_235  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_231 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_231 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_235 -> m10_36  [key=2, style=dotted];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_236 -> m10_228  [key=0, style=bold, color=blue];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_14  [key=0, style=bold, color=blue];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=2, style=dotted];
m10_185 -> m10_186  [key=0, style=solid];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_62  [key=2, style=dotted];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_62  [key=2, style=dotted];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_23  [key=2, style=dotted];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_35  [key=2, style=dotted];
m10_186 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_128  [key=2, style=dotted];
m10_186 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_187 -> m10_128  [key=2, style=dotted];
m10_187 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_46  [key=2, style=dotted];
m10_190 -> m10_105  [key=2, style=dotted];
m10_190 -> m10_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_190 -> m10_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_193 -> m10_36  [key=2, style=dotted];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_194 -> m10_185  [key=0, style=bold, color=blue];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_26  [key=0, style=bold, color=blue];
m10_73 -> m10_74  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_62  [key=2, style=dotted];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_62  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_46  [key=2, style=dotted];
m10_80 -> m10_24  [key=2, style=dotted];
m10_80 -> m10_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_23  [key=2, style=dotted];
m10_81 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_24  [key=2, style=dotted];
m10_82 -> m10_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_74 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_61  [key=2, style=dotted];
m10_74 -> m10_77  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_46  [key=2, style=dotted];
m10_77 -> m10_84  [key=2, style=dotted];
m10_77 -> m10_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_75 -> m10_79  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_61  [key=2, style=dotted];
m10_76 -> m10_46  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_84  [key=2, style=dotted];
m10_76 -> m10_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_83 -> m10_73  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_23  [key=2, style=dotted];
m10_31 -> m10_30  [key=0, style=bold, color=blue];
m10_324 -> m10_325  [key=0, style=solid];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_35  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_35  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_35  [key=2, style=dotted];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_35  [key=2, style=dotted];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_35  [key=2, style=dotted];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_35  [key=2, style=dotted];
m10_266 -> m10_267  [key=0, style=solid];
m10_266 -> m10_35  [key=2, style=dotted];
m10_296 -> m10_297  [key=0, style=solid];
m10_296 -> m10_35  [key=2, style=dotted];
m10_319 -> m10_320  [key=0, style=solid];
m10_319 -> m10_35  [key=2, style=dotted];
m10_16 -> m10_14  [key=0, style=bold, color=blue];
m10_16 -> m10_17  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=2, style=dotted];
m10_27 -> m10_26  [key=0, style=bold, color=blue];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_36  [key=0, style=bold, color=blue];
m10_47 -> m10_48  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_52 -> m10_50  [key=0, style=bold, color=blue];
m10_63 -> m10_64  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_68 -> m10_66  [key=0, style=bold, color=blue];
m10_91 -> m10_92  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_96 -> m10_94  [key=0, style=bold, color=blue];
m10_107 -> m10_108  [key=0, style=solid];
m10_116 -> m10_117  [key=0, style=solid];
m10_118 -> m10_116  [key=0, style=bold, color=blue];
m10_133 -> m10_134  [key=0, style=solid];
m10_179 -> m10_180  [key=0, style=solid];
m10_219 -> m10_220  [key=0, style=solid];
m10_221 -> m10_219  [key=0, style=bold, color=blue];
m10_222 -> m10_223  [key=0, style=solid];
m10_239 -> m10_240  [key=0, style=solid];
m10_242 -> m10_243  [key=0, style=solid];
m10_244 -> m10_242  [key=0, style=bold, color=blue];
m10_262 -> m10_263  [key=0, style=solid];
m10_265 -> m10_266  [key=0, style=solid];
m10_267 -> m10_265  [key=0, style=bold, color=blue];
m10_283 -> m10_284  [key=0, style=solid];
m10_295 -> m10_296  [key=0, style=solid];
m10_297 -> m10_295  [key=0, style=bold, color=blue];
m10_309 -> m10_310  [key=0, style=solid];
m10_318 -> m10_319  [key=0, style=solid];
m10_320 -> m10_318  [key=0, style=bold, color=blue];
m10_26 -> m10_27  [key=0, style=solid];
m10_70 -> m10_24  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_72  [key=2, style=dotted];
m10_86 -> m10_24  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_72  [key=2, style=dotted];
m10_89 -> m10_24  [key=2, style=dotted];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_72  [key=2, style=dotted];
m10_111 -> m10_24  [key=2, style=dotted];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_72  [key=2, style=dotted];
m10_130 -> m10_24  [key=2, style=dotted];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_132  [key=2, style=dotted];
m10_137 -> m10_24  [key=2, style=dotted];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_139  [key=2, style=dotted];
m10_153 -> m10_24  [key=2, style=dotted];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_132  [key=2, style=dotted];
m10_156 -> m10_24  [key=2, style=dotted];
m10_156 -> m10_157  [key=0, style=solid];
m10_156 -> m10_132  [key=2, style=dotted];
m10_159 -> m10_24  [key=2, style=dotted];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_139  [key=2, style=dotted];
m10_162 -> m10_24  [key=2, style=dotted];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_139  [key=2, style=dotted];
m10_174 -> m10_24  [key=2, style=dotted];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_132  [key=2, style=dotted];
m10_183 -> m10_24  [key=2, style=dotted];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_139  [key=2, style=dotted];
m10_196 -> m10_24  [key=2, style=dotted];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_132  [key=2, style=dotted];
m10_202 -> m10_24  [key=2, style=dotted];
m10_202 -> m10_203  [key=0, style=solid];
m10_202 -> m10_139  [key=2, style=dotted];
m10_202 -> m10_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_217 -> m10_24  [key=2, style=dotted];
m10_217 -> m10_218  [key=0, style=solid];
m10_217 -> m10_132  [key=2, style=dotted];
m10_226 -> m10_24  [key=2, style=dotted];
m10_226 -> m10_227  [key=0, style=solid];
m10_226 -> m10_139  [key=2, style=dotted];
m10_246 -> m10_24  [key=2, style=dotted];
m10_246 -> m10_247  [key=0, style=solid];
m10_246 -> m10_139  [key=2, style=dotted];
m10_246 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_269 -> m10_24  [key=2, style=dotted];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_139  [key=2, style=dotted];
m10_269 -> m10_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_287 -> m10_24  [key=2, style=dotted];
m10_287 -> m10_288  [key=0, style=solid];
m10_287 -> m10_139  [key=2, style=dotted];
m10_287 -> m10_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_313 -> m10_24  [key=2, style=dotted];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_139  [key=2, style=dotted];
m10_322 -> m10_24  [key=2, style=dotted];
m10_322 -> m10_323  [key=0, style=solid];
m10_322 -> m10_139  [key=2, style=dotted];
m10_322 -> m10_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_49 -> m10_47  [key=0, style=bold, color=blue];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_40  [key=2, style=dotted];
m10_65 -> m10_63  [key=0, style=bold, color=blue];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_40  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_93 -> m10_91  [key=0, style=bold, color=blue];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_40  [key=2, style=dotted];
m10_109 -> m10_107  [key=0, style=bold, color=blue];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_40  [key=2, style=dotted];
m10_110 -> m10_111  [key=0, style=solid];
m10_113 -> m10_114  [key=0, style=solid];
m10_129 -> m10_130  [key=0, style=solid];
m10_136 -> m10_137  [key=0, style=solid];
m10_135 -> m10_133  [key=0, style=bold, color=blue];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_40  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_161 -> m10_162  [key=0, style=solid];
m10_173 -> m10_174  [key=0, style=solid];
m10_176 -> m10_177  [key=0, style=solid];
m10_182 -> m10_183  [key=0, style=solid];
m10_181 -> m10_179  [key=0, style=bold, color=blue];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_40  [key=2, style=dotted];
m10_195 -> m10_196  [key=0, style=solid];
m10_198 -> m10_199  [key=0, style=solid];
m10_201 -> m10_202  [key=0, style=solid];
m10_216 -> m10_217  [key=0, style=solid];
m10_225 -> m10_226  [key=0, style=solid];
m10_224 -> m10_222  [key=0, style=bold, color=blue];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_40  [key=2, style=dotted];
m10_249 -> m10_250  [key=0, style=solid];
m10_241 -> m10_239  [key=0, style=bold, color=blue];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_40  [key=2, style=dotted];
m10_245 -> m10_246  [key=0, style=solid];
m10_272 -> m10_273  [key=0, style=solid];
m10_264 -> m10_262  [key=0, style=bold, color=blue];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_40  [key=2, style=dotted];
m10_268 -> m10_269  [key=0, style=solid];
m10_290 -> m10_291  [key=0, style=solid];
m10_286 -> m10_287  [key=0, style=solid];
m10_292 -> m10_293  [key=0, style=solid];
m10_285 -> m10_283  [key=0, style=bold, color=blue];
m10_284 -> m10_285  [key=0, style=solid];
m10_284 -> m10_40  [key=2, style=dotted];
m10_312 -> m10_313  [key=0, style=solid];
m10_315 -> m10_316  [key=0, style=solid];
m10_311 -> m10_309  [key=0, style=bold, color=blue];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_40  [key=2, style=dotted];
m10_321 -> m10_322  [key=0, style=solid];
m10_85 -> m10_86  [key=0, style=solid];
m10_155 -> m10_156  [key=0, style=solid];
m10_158 -> m10_159  [key=0, style=solid];
m10_71 -> m10_69  [key=0, style=bold, color=blue];
m10_87 -> m10_85  [key=0, style=bold, color=blue];
m10_90 -> m10_88  [key=0, style=bold, color=blue];
m10_112 -> m10_110  [key=0, style=bold, color=blue];
m10_131 -> m10_129  [key=0, style=bold, color=blue];
m10_138 -> m10_136  [key=0, style=bold, color=blue];
m10_154 -> m10_152  [key=0, style=bold, color=blue];
m10_157 -> m10_155  [key=0, style=bold, color=blue];
m10_160 -> m10_158  [key=0, style=bold, color=blue];
m10_163 -> m10_161  [key=0, style=bold, color=blue];
m10_175 -> m10_173  [key=0, style=bold, color=blue];
m10_184 -> m10_182  [key=0, style=bold, color=blue];
m10_197 -> m10_195  [key=0, style=bold, color=blue];
m10_203 -> m10_201  [key=0, style=bold, color=blue];
m10_204 -> m10_205  [key=0, style=solid];
m10_218 -> m10_216  [key=0, style=bold, color=blue];
m10_227 -> m10_225  [key=0, style=bold, color=blue];
m10_247 -> m10_245  [key=0, style=bold, color=blue];
m10_248 -> m10_249  [key=0, style=solid];
m10_270 -> m10_268  [key=0, style=bold, color=blue];
m10_271 -> m10_272  [key=0, style=solid];
m10_288 -> m10_286  [key=0, style=bold, color=blue];
m10_289 -> m10_290  [key=0, style=solid];
m10_314 -> m10_312  [key=0, style=bold, color=blue];
m10_323 -> m10_321  [key=0, style=bold, color=blue];
m10_115 -> m10_113  [key=0, style=bold, color=blue];
m10_114 -> m10_115  [key=0, style=solid];
m10_178 -> m10_176  [key=0, style=bold, color=blue];
m10_177 -> m10_178  [key=0, style=solid];
m10_200 -> m10_198  [key=0, style=bold, color=blue];
m10_199 -> m10_200  [key=0, style=solid];
m10_250 -> m10_248  [key=0, style=bold, color=blue];
m10_273 -> m10_271  [key=0, style=bold, color=blue];
m10_291 -> m10_289  [key=0, style=bold, color=blue];
m10_294 -> m10_292  [key=0, style=bold, color=blue];
m10_293 -> m10_294  [key=0, style=solid];
m10_317 -> m10_315  [key=0, style=bold, color=blue];
m10_316 -> m10_317  [key=0, style=solid];
m10_206 -> m10_204  [key=0, style=bold, color=blue];
m10_205 -> m10_206  [key=0, style=solid];
m10_325 -> m10_326  [key=0, style=solid];
m10_326 -> m10_324  [key=0, style=bold, color=blue];
m10_36 -> m10_37  [key=0, style=solid];
m10_207 -> m10_208  [key=0, style=solid];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_62  [key=2, style=dotted];
m10_211 -> m10_212  [key=0, style=solid];
m10_211 -> m10_23  [key=2, style=dotted];
m10_211 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_212 -> m10_213  [key=0, style=solid];
m10_212 -> m10_24  [key=2, style=dotted];
m10_212 -> m10_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_36  [key=2, style=dotted];
m10_213 -> m10_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_128  [key=2, style=dotted];
m10_208 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_208 -> m10_214  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_46  [key=2, style=dotted];
m10_210 -> m10_24  [key=2, style=dotted];
m10_210 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_214 -> m10_36  [key=2, style=dotted];
m10_214 -> m10_215  [key=0, style=solid];
m10_214 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_215 -> m10_207  [key=0, style=bold, color=blue];
m10_17 -> m10_16  [key=0, style=bold, color=blue];
m10_17 -> m10_327  [key=0, style=solid];
m10_298 -> m10_299  [key=0, style=solid];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_62  [key=2, style=dotted];
m10_302 -> m10_303  [key=0, style=solid];
m10_302 -> m10_62  [key=2, style=dotted];
m10_303 -> m10_304  [key=0, style=solid];
m10_303 -> m10_46  [key=2, style=dotted];
m10_303 -> m10_24  [key=2, style=dotted];
m10_303 -> m10_309  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_23  [key=2, style=dotted];
m10_305 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_106  [key=2, style=dotted];
m10_306 -> m10_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_299 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_128  [key=2, style=dotted];
m10_299 -> m10_307  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_302  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_300 -> m10_128  [key=2, style=dotted];
m10_300 -> m10_304  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_304 -> m10_305  [key=0, style=solid];
m10_304 -> m10_46  [key=2, style=dotted];
m10_304 -> m10_105  [key=2, style=dotted];
m10_304 -> m10_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_304 -> m10_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_307 -> m10_36  [key=2, style=dotted];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_308 -> m10_298  [key=0, style=bold, color=blue];
m10_40 -> m10_41  [key=0, style=solid];
m10_274 -> m10_275  [key=0, style=solid];
m10_276 -> m10_277  [key=0, style=solid];
m10_276 -> m10_62  [key=2, style=dotted];
m10_278 -> m10_279  [key=0, style=solid];
m10_278 -> m10_46  [key=2, style=dotted];
m10_278 -> m10_238  [key=2, style=dotted];
m10_278 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_280 -> m10_281  [key=0, style=solid];
m10_280 -> m10_23  [key=2, style=dotted];
m10_280 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_281 -> m10_282  [key=0, style=solid];
m10_281 -> m10_106  [key=2, style=dotted];
m10_281 -> m10_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_275 -> m10_276  [key=0, style=solid];
m10_275 -> m10_128  [key=2, style=dotted];
m10_275 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label=filter];
m10_277 -> m10_278  [key=0, style=solid];
m10_277 -> m10_237  [key=2, style=dotted];
m10_277 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_277 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_277 -> m10_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_279 -> m10_280  [key=0, style=solid];
m10_279 -> m10_46  [key=2, style=dotted];
m10_279 -> m10_105  [key=2, style=dotted];
m10_279 -> m10_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_279 -> m10_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_282 -> m10_274  [key=0, style=bold, color=blue];
m10_327 -> m10_17  [key=0, style=bold, color=blue];
m10_140 -> m10_141  [key=0, style=solid];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_62  [key=2, style=dotted];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_62  [key=2, style=dotted];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_23  [key=2, style=dotted];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_35  [key=2, style=dotted];
m10_141 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_128  [key=2, style=dotted];
m10_141 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_141 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_142 -> m10_128  [key=2, style=dotted];
m10_142 -> m10_146  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_142 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m10_145 -> m10_46  [key=2, style=dotted];
m10_145 -> m10_84  [key=2, style=dotted];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_46  [key=2, style=dotted];
m10_148 -> m10_84  [key=2, style=dotted];
m10_148 -> m10_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_146 -> m10_46  [key=2, style=dotted];
m10_146 -> m10_84  [key=2, style=dotted];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_147 -> m10_46  [key=2, style=dotted];
m10_147 -> m10_84  [key=2, style=dotted];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_151 -> m10_140  [key=0, style=bold, color=blue];
m10_331 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_149  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_168  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_170  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_232  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_254  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_257  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_276  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_278  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_301  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_302  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_305  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_306  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_331 -> m10_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Client.JobCreationProcessFacts"];
m10_333 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_334 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_335 -> m10_95  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_336 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_337 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_338 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_340 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_343 -> m10_296  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_344 -> m10_319  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_332 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m10_339 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_339 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_341 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_341 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_342 -> m10_287  [key=1, style=dashed, color=darkseagreen4, label=exception];
m10_342 -> m10_290  [key=1, style=dashed, color=darkseagreen4, label=exception];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_9  [key=2, style=dotted, color=green];
m12_2 -> m12_3  [key=0, style=solid, color=green];
m12_2 -> m12_10  [key=2, style=dotted, color=red];
m12_2 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=response];
m12_3 -> m12_4  [key=0, style=solid, color=green];
m12_3 -> m12_11  [key=2, style=dotted, color=green];
m12_3 -> m12_12  [key=2, style=dotted, color=green];
m12_4 -> m12_5  [key=0, style=solid, color=green];
m12_4 -> m12_13  [key=2, style=dotted, color=red];
m12_4 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=serialized];
m12_5 -> m12_6  [key=0, style=solid, color=green];
m12_7 -> m12_8  [key=0, style=solid, color=red];
m12_7 -> m12_14  [key=2, style=dotted, color=red];
m12_6 -> m12_7  [key=0, style=solid, color=green];
m12_8 -> m12_0  [key=0, style=bold, color=blue];
m12_15 -> m12_5  [key=1, style=dashed, color=green, label="HangFire.Web.JsonStats"];
m12_15 -> m12_6  [key=1, style=dashed, color=green, label="HangFire.Web.JsonStats"];
m12_15 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JsonStats"];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_104  [key=2, style=dotted];
m13_18 -> m13_103  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid, color=green];
m13_8 -> m13_103  [key=2, style=dotted];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_9 -> m13_10  [key=0, style=solid, color=green];
m13_10 -> m13_11  [key=0, style=solid, color=green];
m13_10 -> m13_106  [key=2, style=dotted, color=green];
m13_10 -> m13_17  [key=2, style=dotted];
m13_10 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label=payload];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_107  [key=2, style=dotted];
m13_11 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_59  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_11 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_105  [key=2, style=dotted];
m13_7 -> m13_104  [key=2, style=dotted];
m13_12 -> m13_103  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_14  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_104  [key=2, style=dotted];
m13_21 -> m13_31  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_104  [key=2, style=dotted];
m13_27 -> m13_35  [key=2, style=dotted];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_104  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_104  [key=2, style=dotted];
m13_41 -> m13_39  [key=0, style=solid];
m13_41 -> m13_47  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_104  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_104  [key=2, style=dotted];
m13_53 -> m13_52  [key=0, style=solid];
m13_53 -> m13_62  [key=2, style=dotted];
m13_59 -> m13_60  [key=0, style=solid, color=red];
m13_59 -> m13_104  [key=2, style=dotted];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_104  [key=2, style=dotted];
m13_1 -> m13_103  [key=2, style=dotted];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_103  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_104  [key=2, style=dotted];
m13_3 -> m13_6  [key=2, style=dotted];
m13_3 -> m13_7  [key=2, style=dotted];
m13_4 -> m13_103  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_8  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_105  [key=2, style=dotted];
m13_5 -> m13_104  [key=2, style=dotted];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_103  [key=2, style=dotted];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_108  [key=2, style=dotted];
m13_13 -> m13_104  [key=2, style=dotted];
m13_13 -> m13_18  [key=2, style=dotted];
m13_14 -> m13_103  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_19  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_105  [key=2, style=dotted];
m13_15 -> m13_104  [key=2, style=dotted];
m13_16 -> m13_103  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_9  [key=0, style=bold, color=blue];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_108  [key=2, style=dotted];
m13_17 -> m13_104  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_105  [key=2, style=dotted];
m13_19 -> m13_104  [key=2, style=dotted];
m13_20 -> m13_103  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_22 -> m13_103  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_32  [key=2, style=dotted];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_108  [key=2, style=dotted];
m13_23 -> m13_104  [key=2, style=dotted];
m13_24 -> m13_103  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_19  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_105  [key=2, style=dotted];
m13_25 -> m13_104  [key=2, style=dotted];
m13_25 -> m13_33  [key=2, style=dotted];
m13_26 -> m13_103  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_34  [key=2, style=dotted];
m13_28 -> m13_103  [key=2, style=dotted];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_36  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_109  [key=2, style=dotted];
m13_29 -> m13_104  [key=2, style=dotted];
m13_29 -> m13_37  [key=2, style=dotted];
m13_30 -> m13_103  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_105  [key=2, style=dotted];
m13_31 -> m13_104  [key=2, style=dotted];
m13_31 -> m13_20  [key=0, style=bold, color=blue];
m13_32 -> m13_103  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_34 -> m13_103  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_38  [key=0, style=solid];
m13_36 -> m13_103  [key=2, style=dotted];
m13_36 -> m13_37  [key=0, style=solid];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_108  [key=2, style=dotted];
m13_37 -> m13_104  [key=2, style=dotted];
m13_38 -> m13_103  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_45  [key=2, style=dotted];
m13_38 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label=enqueuedState];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_105  [key=2, style=dotted];
m13_39 -> m13_104  [key=2, style=dotted];
m13_39 -> m13_42  [key=0, style=solid];
m13_39 -> m13_44  [key=0, style=solid];
m13_39 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=payload];
m13_40 -> m13_103  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_46  [key=2, style=dotted];
m13_42 -> m13_103  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_108  [key=2, style=dotted];
m13_43 -> m13_104  [key=2, style=dotted];
m13_43 -> m13_48  [key=2, style=dotted];
m13_44 -> m13_103  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_34  [key=0, style=bold, color=blue];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_105  [key=2, style=dotted];
m13_45 -> m13_104  [key=2, style=dotted];
m13_46 -> m13_103  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_48 -> m13_103  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_108  [key=2, style=dotted];
m13_49 -> m13_104  [key=2, style=dotted];
m13_50 -> m13_103  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_58  [key=0, style=solid];
m13_50 -> m13_59  [key=0, style=solid];
m13_50 -> m13_61  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_105  [key=2, style=dotted];
m13_51 -> m13_104  [key=2, style=dotted];
m13_52 -> m13_103  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_54  [key=0, style=solid];
m13_54 -> m13_103  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_63  [key=2, style=dotted];
m13_54 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label=payload];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_108  [key=2, style=dotted];
m13_55 -> m13_104  [key=2, style=dotted];
m13_56 -> m13_103  [key=2, style=dotted];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_64  [key=2, style=dotted];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_105  [key=2, style=dotted];
m13_57 -> m13_104  [key=2, style=dotted];
m13_57 -> m13_50  [key=0, style=solid];
m13_57 -> m13_65  [key=2, style=dotted];
m13_58 -> m13_103  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_61  [key=0, style=solid];
m13_60 -> m13_103  [key=2, style=dotted];
m13_60 -> m13_61  [key=0, style=solid, color=red];
m13_60 -> m13_66  [key=2, style=dotted, color=red];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_108  [key=2, style=dotted];
m13_61 -> m13_104  [key=2, style=dotted];
m13_61 -> m13_49  [key=0, style=bold, color=blue];
m13_62 -> m13_103  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_105  [key=2, style=dotted];
m13_63 -> m13_104  [key=2, style=dotted];
m13_64 -> m13_103  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_66 -> m13_103  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_80  [key=0, style=solid];
m13_67 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.PrefetchJobFetcher"];
m13_67 -> m13_60  [key=1, style=dashed, color=red, label="HangFire.Server.PrefetchJobFetcher"];
m13_68 -> m13_103  [key=2, style=dotted];
m13_68 -> m13_69  [key=0, style=solid];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_105  [key=2, style=dotted];
m13_69 -> m13_104  [key=2, style=dotted];
m13_70 -> m13_103  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_77  [key=0, style=solid];
m13_71 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label=breadcrumb];
m13_72 -> m13_103  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_73 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label=breadcrumb];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_104  [key=2, style=dotted];
m13_73 -> m13_75  [key=1, style=dashed, color=darkseagreen4, label=breadcrumb];
m13_74 -> m13_103  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_75 -> m13_75  [key=1, style=dashed, color=darkseagreen4, label=breadcrumb];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_104  [key=2, style=dotted];
m13_76 -> m13_103  [key=2, style=dotted];
m13_76 -> m13_71  [key=0, style=solid];
m13_77 -> m13_103  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_104  [key=2, style=dotted];
m13_79 -> m13_103  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid];
m13_80 -> m13_103  [key=2, style=dotted];
m13_80 -> m13_81  [key=0, style=solid];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_104  [key=2, style=dotted];
m13_82 -> m13_103  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_87  [key=0, style=solid];
m13_83 -> m13_110  [key=2, style=dotted];
m13_84 -> m13_103  [key=2, style=dotted];
m13_84 -> m13_85  [key=0, style=solid];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_104  [key=2, style=dotted];
m13_86 -> m13_103  [key=2, style=dotted];
m13_86 -> m13_87  [key=0, style=solid];
m13_87 -> m13_103  [key=2, style=dotted];
m13_87 -> m13_88  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_111  [key=2, style=dotted];
m13_88 -> m13_104  [key=2, style=dotted];
m13_89 -> m13_103  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_112  [key=2, style=dotted];
m13_90 -> m13_113  [key=2, style=dotted];
m13_90 -> m13_104  [key=2, style=dotted];
m13_91 -> m13_103  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_104  [key=2, style=dotted];
m13_93 -> m13_103  [key=2, style=dotted];
m13_93 -> m13_94  [key=0, style=solid];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_104  [key=2, style=dotted];
m13_95 -> m13_103  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_114  [key=2, style=dotted];
m13_97 -> m13_103  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_105  [key=2, style=dotted];
m13_98 -> m13_104  [key=2, style=dotted];
m13_99 -> m13_103  [key=2, style=dotted];
m13_99 -> m13_100  [key=0, style=solid];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_105  [key=2, style=dotted];
m13_100 -> m13_104  [key=2, style=dotted];
m13_101 -> m13_103  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_102 -> m13_0  [key=0, style=bold, color=blue];
m13_115 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_85  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m13_115 -> m13_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.LayoutPage"];
m14_0 -> m14_1  [key=0, style=solid, color=red];
m14_1 -> m14_2  [key=0, style=solid, color=red];
m14_1 -> m14_3  [key=2, style=dotted, color=red];
m14_1 -> m14_4  [key=2, style=dotted, color=red];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_9  [key=2, style=dotted];
m14_6 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_10  [key=2, style=dotted];
m14_8 -> m14_5  [key=0, style=bold, color=blue];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_20  [key=2, style=dotted];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_21  [key=2, style=dotted];
m14_17 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_22  [key=2, style=dotted];
m14_19 -> m14_15  [key=0, style=bold, color=blue];
m14_23 -> m14_24  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_14  [key=2, style=dotted];
m14_13 -> m14_11  [key=0, style=bold, color=blue];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_26  [key=2, style=dotted];
m14_25 -> m14_23  [key=0, style=bold, color=blue];
m14_27 -> m14_1  [key=1, style=dashed, color=red, label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts"];
m14_27 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts"];
m14_27 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Msmq.Tests.MsmqSqlServerStorageExtensionsFacts"];
m15_9 -> m15_0  [key=0, style=bold, color=blue];
m15_12 -> m15_13  [key=0, style=solid, color=green];
m15_0 -> m15_1  [key=0, style=solid, color=green];
m15_0 -> m15_3  [key=1, style=dashed, color=green, label="Hangfire.Server.IServerComponent"];
m15_1 -> m15_2  [key=0, style=solid, color=green];
m15_1 -> m15_3  [key=0, style=solid, color=green];
m15_2 -> m15_3  [key=0, style=solid, color=red];
m15_2 -> m15_10  [key=2, style=dotted, color=red];
m15_2 -> m15_8  [key=0, style=solid, color=green];
m15_2 -> m15_9  [key=2, style=dotted, color=green];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_11  [key=2, style=dotted, color=red];
m15_4 -> m15_5  [key=0, style=solid, color=green];
m15_4 -> m15_12  [key=2, style=dotted, color=red];
m15_4 -> m15_10  [key=2, style=dotted, color=green];
m15_4 -> m15_11  [key=2, style=dotted, color=green];
m15_5 -> m15_6  [key=0, style=solid, color=green];
m15_5 -> m15_11  [key=2, style=dotted, color=red];
m15_6 -> m15_7  [key=0, style=solid, color=green];
m15_7 -> m15_8  [key=0, style=solid, color=green];
m15_8 -> m15_9  [key=0, style=solid, color=red];
m15_8 -> m15_11  [key=2, style=dotted, color=red];
m15_8 -> m15_0  [key=0, style=bold, color=blue];
m15_34 -> m15_16  [key=3, color=green, style=bold, label="Parameter variable int i"];
m15_34 -> m15_42  [key=0, style=solid, color=green];
m15_34 -> m15_46  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m15_34 -> m15_48  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m15_34 -> m15_50  [key=3, color=green, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m15_34 -> m15_44  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
m15_42 -> m15_43  [key=0, style=solid, color=green];
m15_42 -> m15_45  [key=0, style=solid, color=green];
m15_42 -> m15_47  [key=0, style=solid, color=green];
m15_43 -> m15_44  [key=0, style=solid];
m15_45 -> m15_46  [key=0, style=solid, color=green];
m15_47 -> m15_48  [key=0, style=solid, color=green];
m15_48 -> m15_49  [key=0, style=solid, color=green];
m15_46 -> m15_49  [key=0, style=solid, color=green];
m15_50 -> m15_49  [key=0, style=solid, color=green];
m15_44 -> m15_49  [key=0, style=solid];
m15_49 -> m15_34  [key=0, style=bold, color=blue];
m15_13 -> m15_14  [key=0, style=solid, color=green];
m15_13 -> m15_15  [key=2, style=dotted, color=green];
m15_13 -> m15_1  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_2  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_4  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_5  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_6  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_7  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_13 -> m15_8  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m15_14 -> m15_12  [key=0, style=bold, color=blue];
m15_15 -> m15_16  [key=0, style=solid, color=green];
m15_15 -> m15_28  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m15_15 -> m15_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
m15_15 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m15_16 -> m15_16  [key=3, color=green, style=bold, label="Local variable int i"];
m15_16 -> m15_17  [key=0, style=solid, color=green];
m15_16 -> m15_23  [key=1, style=dashed, color=green, label=i];
m15_16 -> m15_25  [key=1, style=dashed, color=green, label=i];
m15_16 -> m15_26  [key=1, style=dashed, color=green, label=i];
m15_16 -> m15_27  [key=1, style=dashed, color=green, label=i];
m15_16 -> m15_39  [key=1, style=dashed, color=green, label=i];
m15_16 -> m15_30  [key=1, style=dashed, color=green, label=i];
m15_17 -> m15_18  [key=0, style=solid, color=green];
m15_17 -> m15_31  [key=0, style=solid, color=green];
m15_23 -> m15_24  [key=0, style=solid, color=green];
m15_23 -> m15_25  [key=0, style=solid, color=green];
m15_25 -> m15_28  [key=1, style=dashed, color=green, label=nextTry];
m15_25 -> m15_26  [key=0, style=solid, color=green];
m15_25 -> m15_33  [key=2, style=dotted, color=green];
m15_25 -> m15_27  [key=1, style=dashed, color=green, label=nextTry];
m15_25 -> m15_39  [key=1, style=dashed, color=green, label=nextTry];
m15_26 -> m15_27  [key=0, style=solid, color=green];
m15_26 -> m15_34  [key=2, style=dotted, color=green];
m15_27 -> m15_28  [key=0, style=solid, color=green];
m15_27 -> m15_35  [key=2, style=dotted, color=green];
m15_27 -> m15_38  [key=1, style=dashed, color=green, label="lambda expression"];
m15_30 -> m15_17  [key=0, style=solid, color=green];
m15_30 -> m15_30  [key=1, style=dashed, color=green, label=i];
m15_28 -> m15_28  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m15_28 -> m15_29  [key=0, style=solid, color=green];
m15_28 -> m15_36  [key=2, style=dotted, color=green];
m15_29 -> m15_30  [key=0, style=solid, color=green];
m15_29 -> m15_29  [key=1, style=dashed, color=green, label="System.Threading.CancellationToken"];
m15_29 -> m15_37  [key=2, style=dotted, color=green];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_32  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid, color=green];
m15_24 -> m15_31  [key=0, style=solid, color=green];
m15_19 -> m15_31  [key=0, style=solid];
m15_21 -> m15_31  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_31 -> m15_15  [key=0, style=bold, color=blue];
m15_38 -> m15_39  [key=0, style=solid, color=green];
m15_39 -> m15_40  [key=0, style=solid, color=green];
m15_39 -> m15_41  [key=2, style=dotted, color=green];
m15_40 -> m15_38  [key=0, style=bold, color=blue];
m15_51 -> m15_52  [key=0, style=solid, color=green];
m15_52 -> m15_53  [key=0, style=solid, color=green];
m15_52 -> m15_54  [key=2, style=dotted, color=green];
m15_53 -> m15_51  [key=0, style=bold, color=blue];
m15_55 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_55 -> m15_56  [key=0, style=solid];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_65  [key=2, style=dotted];
m15_58 -> m15_10  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> n30  [key=2, style=dotted];
m15_57 -> m15_64  [key=2, style=dotted];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_60  [key=2, style=dotted];
m15_56 -> m15_61  [key=2, style=dotted];
m15_56 -> m15_62  [key=2, style=dotted];
m15_59 -> m15_55  [key=0, style=bold, color=blue];
m15_67 -> m15_3  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_4  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_5  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_6  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_7  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_13  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_17  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_23  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_25  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_27  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_39  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_52  [key=1, style=dashed, color=green, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_67 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m15_68 -> m15_39  [key=1, style=dashed, color=green, label=i];
m15_69 -> m15_39  [key=1, style=dashed, color=green, label=nextTry];
m16_65 -> m16_66  [key=0, style=solid, color=green];
m16_65 -> m16_67  [key=2, style=dotted, color=green];
m16_5 -> m16_6  [key=0, style=solid, color=red];
m16_5 -> m16_63  [key=2, style=dotted, color=red];
m16_5 -> m16_7  [key=1, style=dashed, color=red, label=queues];
m16_5 -> m16_10  [key=1, style=dashed, color=red, label=queues];
m16_18 -> m16_19  [key=0, style=solid, color=red];
m16_18 -> m16_20  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m16_18 -> m16_21  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Func<Hangfire.Dashboard.RazorPage, Hangfire.Dashboard.MenuItem>>"];
m16_18 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString SidebarMenu"];
m16_18 -> m16_24  [key=0, style=solid, color=red];
m16_19 -> m16_20  [key=0, style=solid, color=red];
m16_19 -> m16_21  [key=0, style=solid, color=green];
m16_19 -> m16_60  [key=2, style=dotted, color=red];
m16_20 -> m16_22  [key=0, style=solid, color=green];
m16_20 -> m16_5  [key=2, style=dotted, color=green];
m16_20 -> m16_6  [key=2, style=dotted, color=green];
m16_20 -> m16_21  [key=0, style=solid, color=red];
m16_20 -> m16_64  [key=2, style=dotted, color=red];
m16_20 -> m16_65  [key=2, style=dotted, color=red];
m16_21 -> m16_22  [key=0, style=solid, color=red];
m16_21 -> m16_17  [key=2, style=dotted, color=green];
m16_21 -> m16_13  [key=2, style=dotted, color=green];
m16_21 -> m16_60  [key=2, style=dotted, color=red];
m16_22 -> m16_18  [key=0, style=bold, color=blue];
m16_22 -> m16_23  [key=0, style=solid, color=red];
m16_22 -> m16_65  [key=2, style=dotted, color=red];
m16_52 -> m16_53  [key=0, style=solid, color=red];
m16_52 -> m16_65  [key=2, style=dotted, color=red];
m16_52 -> m16_52  [key=1, style=dashed, color=red, label=job];
m16_56 -> m16_57  [key=0, style=solid, color=red];
m16_56 -> m16_58  [key=1, style=dashed, color=green, label=string];
m16_56 -> m16_75  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m16_56 -> m16_60  [key=2, style=dotted, color=red];
m16_57 -> m16_58  [key=0, style=solid, color=green];
m16_57 -> m16_10  [key=0, style=solid, color=red];
m16_57 -> m16_60  [key=2, style=dotted, color=red];
m16_58 -> m16_59  [key=0, style=solid, color=red];
m16_58 -> m16_51  [key=2, style=dotted, color=green];
m16_58 -> m16_60  [key=2, style=dotted, color=red];
m16_58 -> m16_61  [key=2, style=dotted, color=green];
m16_59 -> m16_56  [key=0, style=bold, color=blue];
m16_59 -> m16_0  [key=0, style=bold, color=blue];
m16_130 -> m16_131  [key=0, style=solid, color=green];
m16_131 -> m16_132  [key=0, style=solid, color=green];
m16_131 -> m16_134  [key=2, style=dotted, color=green];
m16_132 -> m16_133  [key=0, style=solid, color=green];
m16_132 -> m16_51  [key=2, style=dotted, color=green];
m16_133 -> m16_130  [key=0, style=bold, color=blue];
m16_35 -> m16_36  [key=0, style=solid, color=red];
m16_35 -> m16_37  [key=1, style=dashed, color=red, label=job];
m16_35 -> m16_38  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pager"];
m16_35 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Paginator"];
m16_35 -> m16_66  [key=2, style=dotted, color=red];
m16_35 -> m16_67  [key=2, style=dotted, color=red];
m16_35 -> m16_35  [key=1, style=dashed, color=red, label=job];
m16_36 -> m16_37  [key=0, style=solid, color=red];
m16_36 -> m16_38  [key=0, style=solid, color=green];
m16_36 -> m16_60  [key=2, style=dotted, color=red];
m16_37 -> m16_39  [key=0, style=solid, color=red];
m16_37 -> m16_5  [key=2, style=dotted, color=green];
m16_37 -> m16_6  [key=2, style=dotted, color=green];
m16_37 -> m16_38  [key=0, style=solid, color=red];
m16_37 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_37 -> m16_40  [key=1, style=dashed, color=red, label=job];
m16_38 -> m16_39  [key=0, style=solid, color=red];
m16_38 -> m16_40  [key=2, style=dotted, color=green];
m16_38 -> m16_13  [key=2, style=dotted, color=green];
m16_38 -> m16_60  [key=2, style=dotted, color=red];
m16_39 -> m16_35  [key=0, style=bold, color=blue];
m16_39 -> m16_40  [key=0, style=solid, color=red];
m16_39 -> m16_60  [key=2, style=dotted, color=red];
m16_7 -> m16_8  [key=0, style=solid, color=red];
m16_7 -> m16_9  [key=1, style=dashed, color=green, label="System.Collections.Generic.IDictionary<string, string>"];
m16_7 -> m16_10  [key=1, style=dashed, color=green, label=string];
m16_7 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString Breadcrumbs"];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_10  [key=0, style=solid, color=green];
m16_8 -> m16_59  [key=0, style=solid, color=red];
m16_8 -> m16_60  [key=2, style=dotted, color=red];
m16_9 -> m16_11  [key=0, style=solid, color=green];
m16_9 -> m16_5  [key=2, style=dotted, color=green];
m16_9 -> m16_6  [key=2, style=dotted, color=green];
m16_9 -> m16_10  [key=0, style=solid, color=red];
m16_9 -> m16_60  [key=2, style=dotted, color=red];
m16_10 -> m16_11  [key=0, style=solid, color=red];
m16_10 -> m16_12  [key=2, style=dotted, color=green];
m16_10 -> m16_13  [key=2, style=dotted, color=green];
m16_10 -> m16_58  [key=0, style=solid, color=red];
m16_10 -> m16_14  [key=1, style=dashed, color=red, label=queue];
m16_10 -> m16_16  [key=1, style=dashed, color=red, label=queue];
m16_10 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=queue];
m16_10 -> m16_20  [key=1, style=dashed, color=red, label=queue];
m16_10 -> m16_22  [key=1, style=dashed, color=red, label=queue];
m16_10 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label=queue];
m16_10 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label=queue];
m16_11 -> m16_7  [key=0, style=bold, color=blue];
m16_11 -> m16_12  [key=0, style=solid, color=red];
m16_11 -> m16_60  [key=2, style=dotted, color=red];
m16_69 -> m16_70  [key=0, style=solid, color=green];
m16_69 -> m16_71  [key=0, style=solid, color=green];
m16_69 -> m16_73  [key=2, style=dotted, color=green];
m16_122 -> m16_123  [key=0, style=solid, color=green];
m16_123 -> m16_124  [key=0, style=solid, color=green];
m16_123 -> m16_125  [key=2, style=dotted, color=green];
m16_123 -> m16_126  [key=2, style=dotted, color=green];
m16_123 -> m16_127  [key=1, style=dashed, color=green, label="lambda expression"];
m16_124 -> m16_122  [key=0, style=bold, color=blue];
m16_17 -> m16_18  [key=0, style=solid, color=red];
m16_17 -> m16_60  [key=2, style=dotted, color=red];
m16_14 -> m16_15  [key=0, style=solid, color=red];
m16_14 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobsSidebar"];
m16_14 -> m16_65  [key=2, style=dotted, color=red];
m16_15 -> m16_16  [key=0, style=solid, color=red];
m16_15 -> m16_17  [key=2, style=dotted, color=green];
m16_15 -> m16_13  [key=2, style=dotted, color=green];
m16_15 -> m16_60  [key=2, style=dotted, color=red];
m16_16 -> m16_14  [key=0, style=bold, color=blue];
m16_16 -> m16_17  [key=0, style=solid, color=red];
m16_16 -> m16_65  [key=2, style=dotted, color=red];
m16_143 -> m16_144  [key=0, style=solid, color=green];
m16_144 -> m16_145  [key=0, style=solid, color=green];
m16_144 -> m16_51  [key=2, style=dotted, color=green];
m16_144 -> m16_146  [key=2, style=dotted, color=green];
m16_145 -> m16_143  [key=0, style=bold, color=blue];
m16_82 -> m16_147  [key=0, style=solid, color=green];
m16_82 -> m16_62  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
m16_147 -> m16_148  [key=0, style=solid, color=green];
m16_147 -> m16_149  [key=2, style=dotted, color=green];
m16_148 -> m16_82  [key=0, style=bold, color=blue];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_55  [key=0, style=solid, color=red];
m16_53 -> m16_60  [key=2, style=dotted, color=red];
m16_54 -> m16_51  [key=2, style=dotted];
m16_54 -> m16_55  [key=0, style=solid, color=red];
m16_54 -> m16_60  [key=2, style=dotted, color=red];
m16_55 -> m16_53  [key=0, style=bold, color=blue];
m16_55 -> m16_29  [key=0, style=solid, color=red];
m16_55 -> m16_60  [key=2, style=dotted, color=red];
m16_63 -> m16_65  [key=0, style=solid, color=green];
m16_63 -> m16_64  [key=0, style=solid, color=green];
m16_0 -> m16_1  [key=0, style=solid, color=red];
m16_0 -> m16_2  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m16_0 -> m16_3  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m16_1 -> m16_2  [key=0, style=solid, color=red];
m16_1 -> m16_3  [key=0, style=solid, color=green];
m16_1 -> m16_60  [key=2, style=dotted, color=red];
m16_2 -> m16_4  [key=0, style=solid, color=green];
m16_2 -> m16_5  [key=2, style=dotted, color=green];
m16_2 -> m16_6  [key=2, style=dotted, color=green];
m16_2 -> m16_3  [key=0, style=solid, color=red];
m16_2 -> m16_61  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid, color=red];
m16_4 -> m16_0  [key=0, style=bold, color=blue];
m16_4 -> m16_5  [key=0, style=solid, color=red];
m16_4 -> m16_62  [key=2, style=dotted, color=red];
m16_23 -> m16_24  [key=0, style=solid, color=green];
m16_23 -> m16_25  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.DashboardMetric"];
m16_23 -> m16_26  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.DashboardMetric"];
m16_23 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString BlockMetric"];
m16_23 -> m16_60  [key=2, style=dotted, color=red];
m16_24 -> m16_25  [key=0, style=solid, color=red];
m16_24 -> m16_26  [key=0, style=solid, color=green];
m16_24 -> m16_60  [key=2, style=dotted, color=red];
m16_25 -> m16_27  [key=0, style=solid, color=green];
m16_25 -> m16_5  [key=2, style=dotted, color=green];
m16_25 -> m16_6  [key=2, style=dotted, color=green];
m16_25 -> m16_26  [key=0, style=solid, color=red];
m16_25 -> m16_60  [key=2, style=dotted, color=red];
m16_26 -> m16_27  [key=0, style=solid, color=red];
m16_26 -> m16_28  [key=2, style=dotted, color=green];
m16_26 -> m16_13  [key=2, style=dotted, color=green];
m16_27 -> m16_23  [key=0, style=bold, color=blue];
m16_27 -> m16_57  [key=0, style=solid, color=red];
m16_27 -> m16_60  [key=2, style=dotted, color=red];
m16_87 -> m16_88  [key=0, style=solid, color=green];
m16_87 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString MomentTitle"];
m16_88 -> m16_89  [key=0, style=solid, color=green];
m16_88 -> m16_86  [key=2, style=dotted, color=green];
m16_88 -> m16_53  [key=2, style=dotted, color=green];
m16_89 -> m16_87  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid, color=red];
m16_6 -> m16_60  [key=2, style=dotted, color=red];
m16_135 -> m16_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_138 -> m16_51  [key=2, style=dotted];
m16_138 -> m16_139  [key=0, style=solid];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_141  [key=2, style=dotted];
m16_137 -> m16_142  [key=2, style=dotted];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_140  [key=2, style=dotted];
m16_139 -> m16_135  [key=0, style=bold, color=blue];
m16_62 -> m16_65  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_79  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Common.Job job"];
m16_64 -> m16_66  [key=0, style=solid, color=green];
m16_66 -> m16_62  [key=0, style=bold, color=blue];
m16_90 -> m16_94  [key=1, style=dashed, color=green, label=bool];
m16_90 -> m16_95  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_90 -> m16_96  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_90 -> m16_91  [key=0, style=solid];
m16_94 -> m16_95  [key=0, style=solid, color=green];
m16_94 -> m16_96  [key=0, style=solid, color=green];
m16_93 -> m16_94  [key=0, style=solid, color=green];
m16_93 -> m16_95  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_116  [key=2, style=dotted, color=green];
m16_93 -> m16_98  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_100  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_102  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_105  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_107  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_108  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_110  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_111  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_112  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_113  [key=1, style=dashed, color=green, label=builder];
m16_93 -> m16_114  [key=1, style=dashed, color=green, label=builder];
m16_95 -> m16_96  [key=0, style=solid, color=green];
m16_95 -> m16_117  [key=2, style=dotted, color=green];
m16_96 -> m16_96  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_97  [key=0, style=solid, color=green];
m16_96 -> m16_118  [key=2, style=dotted, color=green];
m16_96 -> m16_98  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_99  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_100  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_101  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_102  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_103  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_104  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_105  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_106  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_107  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_109  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_96 -> m16_110  [key=1, style=dashed, color=green, label="System.TimeSpan?"];
m16_97 -> m16_98  [key=0, style=solid, color=green];
m16_97 -> m16_99  [key=0, style=solid, color=green];
m16_98 -> m16_99  [key=0, style=solid, color=green];
m16_98 -> m16_117  [key=2, style=dotted, color=green];
m16_99 -> m16_100  [key=0, style=solid, color=green];
m16_99 -> m16_101  [key=0, style=solid, color=green];
m16_100 -> m16_101  [key=0, style=solid, color=green];
m16_100 -> m16_117  [key=2, style=dotted, color=green];
m16_101 -> m16_102  [key=0, style=solid, color=green];
m16_101 -> m16_103  [key=0, style=solid, color=green];
m16_102 -> m16_103  [key=0, style=solid, color=green];
m16_102 -> m16_117  [key=2, style=dotted, color=green];
m16_103 -> m16_111  [key=0, style=solid, color=green];
m16_103 -> m16_104  [key=0, style=solid, color=green];
m16_104 -> m16_105  [key=0, style=solid, color=green];
m16_104 -> m16_109  [key=0, style=solid, color=green];
m16_105 -> m16_106  [key=0, style=solid, color=green];
m16_105 -> m16_119  [key=2, style=dotted, color=green];
m16_106 -> m16_108  [key=0, style=solid, color=green];
m16_106 -> m16_107  [key=0, style=solid, color=green];
m16_107 -> m16_108  [key=0, style=solid, color=green];
m16_107 -> m16_117  [key=2, style=dotted];
m16_109 -> m16_110  [key=0, style=solid, color=green];
m16_109 -> m16_111  [key=0, style=solid, color=green];
m16_110 -> m16_111  [key=0, style=solid, color=green];
m16_110 -> m16_117  [key=2, style=dotted, color=green];
m16_91 -> m16_93  [key=0, style=solid, color=green];
m16_91 -> m16_92  [key=0, style=solid];
m16_108 -> m16_111  [key=0, style=solid, color=green];
m16_108 -> m16_117  [key=2, style=dotted, color=green];
m16_111 -> m16_112  [key=0, style=solid, color=green];
m16_111 -> m16_113  [key=0, style=solid, color=green];
m16_112 -> m16_113  [key=0, style=solid, color=green];
m16_112 -> m16_117  [key=2, style=dotted, color=green];
m16_113 -> m16_114  [key=0, style=solid, color=green];
m16_113 -> m16_120  [key=2, style=dotted, color=green];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_121  [key=2, style=dotted];
m16_92 -> m16_115  [key=0, style=solid];
m16_115 -> m16_90  [key=0, style=bold, color=blue];
m16_12 -> m16_13  [key=0, style=solid, color=red];
m16_12 -> m16_64  [key=2, style=dotted, color=red];
m16_12 -> m16_65  [key=2, style=dotted, color=red];
m16_40 -> m16_41  [key=0, style=solid, color=red];
m16_40 -> m16_68  [key=2, style=dotted, color=red];
m16_40 -> m16_69  [key=2, style=dotted, color=red];
m16_40 -> m16_65  [key=2, style=dotted, color=red];
m16_40 -> m16_40  [key=1, style=dashed, color=red, label=job];
m16_40 -> m16_42  [key=1, style=dashed, color=red, label=job];
m16_29 -> m16_30  [key=0, style=solid, color=red];
m16_29 -> m16_31  [key=1, style=dashed, color=red, label=job];
m16_29 -> m16_32  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.DashboardMetric"];
m16_29 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString InlineMetric"];
m16_29 -> m16_56  [key=0, style=solid, color=red];
m16_30 -> m16_31  [key=0, style=solid, color=red];
m16_30 -> m16_32  [key=0, style=solid, color=green];
m16_30 -> m16_60  [key=2, style=dotted, color=red];
m16_31 -> m16_33  [key=0, style=solid, color=green];
m16_31 -> m16_5  [key=2, style=dotted, color=green];
m16_31 -> m16_6  [key=2, style=dotted, color=green];
m16_31 -> m16_32  [key=0, style=solid, color=red];
m16_31 -> m16_65  [key=2, style=dotted, color=red];
m16_31 -> m16_31  [key=1, style=dashed, color=red, label=job];
m16_32 -> m16_33  [key=0, style=solid, color=red];
m16_32 -> m16_34  [key=2, style=dotted, color=green];
m16_32 -> m16_13  [key=2, style=dotted, color=green];
m16_32 -> m16_60  [key=2, style=dotted, color=red];
m16_33 -> m16_29  [key=0, style=bold, color=blue];
m16_33 -> m16_34  [key=0, style=solid, color=red];
m16_33 -> m16_64  [key=2, style=dotted, color=red];
m16_33 -> m16_65  [key=2, style=dotted, color=red];
m16_33 -> m16_33  [key=1, style=dashed, color=red, label=job];
m16_33 -> m16_35  [key=1, style=dashed, color=red, label=job];
m16_68 -> m16_69  [key=0, style=solid, color=green];
m16_68 -> m16_71  [key=1, style=dashed, color=green, label=string];
m16_68 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString StateLabel"];
m16_28 -> m16_29  [key=0, style=solid, color=red];
m16_28 -> m16_60  [key=2, style=dotted, color=red];
m16_83 -> m16_84  [key=0, style=solid, color=green];
m16_83 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString RelativeTime"];
m16_84 -> m16_85  [key=0, style=solid, color=green];
m16_84 -> m16_86  [key=2, style=dotted, color=green];
m16_84 -> m16_53  [key=2, style=dotted, color=green];
m16_85 -> m16_83  [key=0, style=bold, color=blue];
m16_51 -> m16_52  [key=0, style=solid, color=red];
m16_51 -> m16_60  [key=2, style=dotted, color=red];
m16_127 -> m16_128  [key=0, style=solid, color=green];
m16_128 -> m16_128  [key=1, style=dashed, color=green, label="System.Collections.Generic.KeyValuePair<string, string>"];
m16_128 -> m16_129  [key=0, style=solid, color=green];
m16_129 -> m16_127  [key=0, style=bold, color=blue];
m16_71 -> m16_72  [key=0, style=solid, color=green];
m16_71 -> m16_74  [key=2, style=dotted, color=green];
m16_71 -> m16_53  [key=2, style=dotted, color=green];
m16_70 -> m16_72  [key=0, style=solid, color=green];
m16_70 -> m16_53  [key=2, style=dotted, color=green];
m16_72 -> m16_68  [key=0, style=bold, color=blue];
m16_72 -> m16_1  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_6  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_8  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_9  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_11  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_12  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_13  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_14  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_15  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_16  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_17  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_19  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_20  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_21  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_22  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_23  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_24  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_25  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_27  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_28  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_30  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_31  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_32  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_33  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_34  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_35  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_36  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_38  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_39  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_40  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_41  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_42  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_43  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_44  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_45  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_46  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_47  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_49  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_50  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_51  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_52  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_53  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_54  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_55  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_56  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_57  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_72 -> m16_58  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.QueuesPage"];
m16_41 -> m16_42  [key=0, style=solid, color=red];
m16_41 -> m16_43  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pager"];
m16_41 -> m16_44  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.Pager"];
m16_41 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString PerPageSelector"];
m16_41 -> m16_60  [key=2, style=dotted, color=red];
m16_42 -> m16_43  [key=0, style=solid, color=red];
m16_42 -> m16_44  [key=0, style=solid, color=green];
m16_42 -> m16_65  [key=2, style=dotted, color=red];
m16_42 -> m16_42  [key=1, style=dashed, color=red, label=job];
m16_43 -> m16_45  [key=0, style=solid, color=green];
m16_43 -> m16_5  [key=2, style=dotted, color=green];
m16_43 -> m16_6  [key=2, style=dotted, color=green];
m16_43 -> m16_44  [key=0, style=solid, color=red];
m16_43 -> m16_60  [key=2, style=dotted, color=red];
m16_44 -> m16_45  [key=0, style=solid, color=red];
m16_44 -> m16_46  [key=2, style=dotted, color=green];
m16_44 -> m16_13  [key=2, style=dotted, color=green];
m16_44 -> m16_64  [key=2, style=dotted, color=red];
m16_44 -> m16_65  [key=2, style=dotted, color=red];
m16_44 -> m16_44  [key=1, style=dashed, color=red, label=job];
m16_45 -> m16_41  [key=0, style=bold, color=blue];
m16_45 -> m16_46  [key=0, style=solid, color=red];
m16_45 -> m16_60  [key=2, style=dotted, color=red];
m16_75 -> m16_76  [key=0, style=solid, color=green];
m16_75 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobIdLink"];
m16_76 -> m16_77  [key=0, style=solid, color=green];
m16_76 -> m16_78  [key=2, style=dotted, color=green];
m16_76 -> m16_56  [key=2, style=dotted, color=green];
m16_76 -> m16_53  [key=2, style=dotted, color=green];
m16_77 -> m16_75  [key=0, style=bold, color=blue];
m16_79 -> m16_80  [key=0, style=solid, color=green];
m16_79 -> m16_53  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.NonEscapedString JobNameLink"];
m16_80 -> m16_81  [key=0, style=solid, color=green];
m16_80 -> m16_78  [key=2, style=dotted, color=green];
m16_80 -> m16_62  [key=2, style=dotted, color=green];
m16_80 -> m16_82  [key=2, style=dotted, color=green];
m16_80 -> m16_53  [key=2, style=dotted, color=green];
m16_81 -> m16_79  [key=0, style=bold, color=blue];
m16_13 -> m16_14  [key=0, style=solid, color=red];
m16_13 -> m16_60  [key=2, style=dotted, color=red];
m16_13 -> m16_47  [key=0, style=solid, color=green];
m16_13 -> m16_48  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m16_34 -> m16_35  [key=0, style=solid, color=red];
m16_34 -> m16_60  [key=2, style=dotted, color=red];
m16_46 -> m16_47  [key=0, style=solid, color=red];
m16_46 -> m16_70  [key=2, style=dotted, color=red];
m16_46 -> m16_67  [key=2, style=dotted, color=red];
m16_46 -> m16_46  [key=1, style=dashed, color=red, label=job];
m16_46 -> m16_48  [key=1, style=dashed, color=red, label=job];
m16_47 -> m16_48  [key=0, style=solid, color=green];
m16_47 -> m16_60  [key=2, style=dotted, color=red];
m16_47 -> m16_50  [key=2, style=dotted, color=green];
m16_48 -> m16_49  [key=0, style=solid, color=green];
m16_48 -> m16_54  [key=0, style=solid, color=red];
m16_48 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label=job];
m16_48 -> m16_50  [key=1, style=dashed, color=red, label=job];
m16_48 -> m16_51  [key=2, style=dotted, color=green];
m16_48 -> m16_52  [key=2, style=dotted, color=green];
m16_49 -> m16_50  [key=0, style=solid, color=red];
m16_49 -> m16_60  [key=2, style=dotted, color=red];
m16_49 -> m16_13  [key=0, style=bold, color=blue];
m16_50 -> m16_51  [key=0, style=solid, color=red];
m16_50 -> m16_71  [key=2, style=dotted, color=red];
m16_50 -> m16_65  [key=2, style=dotted, color=red];
m16_50 -> m16_50  [key=1, style=dashed, color=red, label=job];
m16_50 -> m16_52  [key=1, style=dashed, color=red, label=job];
m16_150 -> m16_3  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_10  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_15  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_21  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_26  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_32  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_38  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_44  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_47  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_71  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_70  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_76  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_80  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_84  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_88  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m16_150 -> m16_131  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.HtmlHelper"];
m17_18 -> m17_19  [key=0, style=solid];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=2, style=dotted];
m17_20 -> m17_18  [key=0, style=bold, color=blue];
m17_38 -> m17_39  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_43  [key=0, style=solid];
m17_39 -> m17_45  [key=0, style=solid];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_5  [key=2, style=dotted];
m17_43 -> m17_44  [key=0, style=solid];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_39  [key=0, style=solid];
m17_42 -> m17_39  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_45  [key=0, style=solid];
m17_42 -> m17_46  [key=2, style=dotted];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_47  [key=2, style=dotted];
m17_45 -> m17_38  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_22 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_29  [key=2, style=dotted];
m17_23 -> m17_30  [key=2, style=dotted];
m17_23 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m17_26 -> m17_28  [key=0, style=solid];
m17_26 -> m17_33  [key=2, style=dotted];
m17_26 -> m17_34  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_35  [key=2, style=dotted];
m17_27 -> m17_36  [key=2, style=dotted];
m17_27 -> m17_37  [key=2, style=dotted];
m17_27 -> m17_34  [key=2, style=dotted];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_31  [key=2, style=dotted];
m17_24 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_27  [key=0, style=solid];
m17_25 -> m17_32  [key=2, style=dotted];
m17_28 -> m17_22  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_4  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_0  [key=0, style=bold, color=blue];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_51  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_53  [key=2, style=dotted];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_55  [key=2, style=dotted];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_54  [key=2, style=dotted];
m17_52 -> m17_48  [key=0, style=bold, color=blue];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_9  [key=3, color=green, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m17_5 -> m17_11  [key=3, color=green, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_13  [key=2, style=dotted];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_14  [key=2, style=dotted];
m17_7 -> m17_15  [key=2, style=dotted];
m17_7 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=0, style=solid];
m17_8 -> m17_16  [key=2, style=dotted];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_17  [key=2, style=dotted];
m17_9 -> m17_12  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_5  [key=0, style=bold, color=blue];
m17_56 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m17_56 -> m17_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.SchedulePoller"];
m18_19 -> m18_21  [key=0, style=solid];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_32  [key=2, style=dotted];
m18_21 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label=state];
m18_21 -> m18_26  [key=1, style=dashed, color=darkseagreen4, label=state];
m18_21 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label=state];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_24  [key=0, style=solid];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_26  [key=0, style=solid];
m18_24 -> m18_33  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_28  [key=0, style=solid];
m18_26 -> m18_34  [key=2, style=dotted];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_30  [key=0, style=solid];
m18_28 -> m18_33  [key=2, style=dotted];
m18_23 -> m18_31  [key=0, style=solid];
m18_25 -> m18_31  [key=0, style=solid];
m18_27 -> m18_31  [key=0, style=solid];
m18_29 -> m18_31  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_31 -> m18_19  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m18_0 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m18_0 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=0, style=solid];
m18_7 -> m18_8  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_2 -> m18_11  [key=0, style=solid];
m18_2 -> m18_12  [key=2, style=dotted];
m18_4 -> m18_11  [key=0, style=solid];
m18_4 -> m18_12  [key=2, style=dotted];
m18_6 -> m18_11  [key=0, style=solid];
m18_6 -> m18_12  [key=2, style=dotted];
m18_11 -> m18_0  [key=0, style=bold, color=blue];
m18_13 -> m18_14  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_18  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [key=0, style=solid];
m18_15 -> m18_19  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_20  [key=2, style=dotted];
m18_17 -> m18_13  [key=0, style=bold, color=blue];
m18_35 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m18_35 -> m18_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerJobCancellationToken"];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_3  [key=2, style=dotted];
m19_13 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_14 -> m19_12  [key=0, style=bold, color=blue];
m19_115 -> m19_116  [key=0, style=solid];
m19_116 -> m19_117  [key=0, style=solid];
m19_116 -> m19_23  [key=2, style=dotted];
m19_116 -> m19_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_117 -> m19_115  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=2, style=dotted];
m19_1 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_135  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.Redis.RedisConnection>"];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_131  [key=2, style=dotted];
m19_134 -> m19_130  [key=2, style=dotted];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_137  [key=2, style=dotted];
m19_136 -> m19_133  [key=0, style=bold, color=blue];
m19_36 -> m19_37  [key=0, style=solid, color=green];
m19_37 -> m19_38  [key=0, style=solid, color=green];
m19_37 -> m19_3  [key=2, style=dotted, color=green];
m19_37 -> m19_39  [key=1, style=dashed, color=green, label="lambda expression"];
m19_38 -> m19_36  [key=0, style=bold, color=blue];
m19_98 -> m19_99  [key=0, style=solid];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_3  [key=2, style=dotted];
m19_99 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_100 -> m19_98  [key=0, style=bold, color=blue];
m19_67 -> m19_68  [key=0, style=solid];
m19_68 -> m19_69  [key=0, style=solid];
m19_68 -> m19_3  [key=2, style=dotted];
m19_68 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_69 -> m19_67  [key=0, style=bold, color=blue];
m19_108 -> m19_109  [key=0, style=solid];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_3  [key=2, style=dotted];
m19_109 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_110 -> m19_108  [key=0, style=bold, color=blue];
m19_118 -> m19_119  [key=0, style=solid];
m19_118 -> m19_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=2, style=dotted];
m19_5 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=2, style=dotted];
m19_6 -> m19_4  [key=0, style=bold, color=blue];
m19_8 -> m19_9  [key=0, style=solid];
m19_10 -> m19_8  [key=0, style=bold, color=blue];
m19_15 -> m19_16  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_11  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_19  [key=2, style=dotted];
m19_18 -> m19_15  [key=0, style=bold, color=blue];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_32  [key=2, style=dotted];
m19_25 -> m19_33  [key=2, style=dotted];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_11  [key=2, style=dotted];
m19_26 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_26 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_26 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_34  [key=2, style=dotted];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_35  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_35  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_35  [key=2, style=dotted];
m19_31 -> m19_24  [key=0, style=bold, color=blue];
m19_39 -> m19_40  [key=0, style=solid, color=green];
m19_39 -> m19_43  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m19_40 -> m19_41  [key=0, style=solid, color=green];
m19_40 -> m19_7  [key=2, style=dotted, color=green];
m19_40 -> m19_42  [key=1, style=dashed, color=green, label="lambda expression"];
m19_43 -> m19_44  [key=0, style=solid, color=green];
m19_43 -> m19_45  [key=2, style=dotted, color=green];
m19_41 -> m19_39  [key=0, style=bold, color=blue];
m19_42 -> m19_43  [key=0, style=solid, color=green];
m19_44 -> m19_42  [key=0, style=bold, color=blue];
m19_49 -> m19_50  [key=0, style=solid, color=green];
m19_50 -> m19_51  [key=0, style=solid, color=green];
m19_50 -> m19_45  [key=2, style=dotted, color=green];
m19_50 -> m19_52  [key=1, style=dashed, color=green, label=result];
m19_51 -> m19_52  [key=0, style=solid, color=green];
m19_51 -> m19_34  [key=2, style=dotted, color=green];
m19_52 -> m19_53  [key=0, style=solid, color=green];
m19_52 -> m19_35  [key=2, style=dotted, color=green];
m19_53 -> m19_49  [key=0, style=bold, color=blue];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m19_57 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_65  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_65  [key=2, style=dotted];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_45  [key=2, style=dotted];
m19_60 -> m19_62  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_60 -> m19_63  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_35  [key=2, style=dotted];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_66  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_66  [key=2, style=dotted];
m19_64 -> m19_57  [key=0, style=bold, color=blue];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_7  [key=2, style=dotted];
m19_71 -> m19_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_32  [key=2, style=dotted];
m19_75 -> m19_77  [key=2, style=dotted];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_35  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_73 -> m19_70  [key=0, style=bold, color=blue];
m19_76 -> m19_74  [key=0, style=bold, color=blue];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_7  [key=2, style=dotted];
m19_82 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_77  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_35  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_84 -> m19_81  [key=0, style=bold, color=blue];
m19_87 -> m19_85  [key=0, style=bold, color=blue];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_93  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_32  [key=2, style=dotted];
m19_92 -> m19_77  [key=2, style=dotted];
m19_93 -> m19_94  [key=0, style=solid];
m19_93 -> m19_97  [key=2, style=dotted];
m19_93 -> m19_95  [key=1, style=dashed, color=darkseagreen4, label=hash];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_35  [key=2, style=dotted];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_35  [key=2, style=dotted];
m19_96 -> m19_91  [key=0, style=bold, color=blue];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_7  [key=2, style=dotted];
m19_102 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_107  [key=2, style=dotted];
m19_103 -> m19_101  [key=0, style=bold, color=blue];
m19_104 -> m19_105  [key=0, style=solid];
m19_106 -> m19_104  [key=0, style=bold, color=blue];
m19_111 -> m19_112  [key=0, style=solid];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_107  [key=2, style=dotted];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_19  [key=2, style=dotted];
m19_114 -> m19_111  [key=0, style=bold, color=blue];
m19_119 -> m19_120  [key=0, style=solid];
m19_119 -> m19_32  [key=2, style=dotted];
m19_119 -> m19_33  [key=2, style=dotted];
m19_120 -> m19_121  [key=0, style=solid];
m19_120 -> m19_107  [key=2, style=dotted];
m19_120 -> m19_122  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_120 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_34  [key=2, style=dotted];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_35  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_35  [key=2, style=dotted];
m19_124 -> m19_118  [key=0, style=bold, color=blue];
m19_20 -> m19_21  [key=0, style=solid];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=2, style=dotted];
m19_21 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_22 -> m19_20  [key=0, style=bold, color=blue];
m19_54 -> m19_55  [key=0, style=solid];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_23  [key=2, style=dotted];
m19_55 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_56 -> m19_54  [key=0, style=bold, color=blue];
m19_46 -> m19_47  [key=0, style=solid, color=green];
m19_47 -> m19_48  [key=0, style=solid, color=green];
m19_47 -> m19_3  [key=2, style=dotted, color=green];
m19_47 -> m19_49  [key=1, style=dashed, color=green, label="lambda expression"];
m19_48 -> m19_46  [key=0, style=bold, color=blue];
m19_78 -> m19_79  [key=0, style=solid];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_3  [key=2, style=dotted];
m19_79 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_80 -> m19_78  [key=0, style=bold, color=blue];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label="System.Action<IRedisClient, HangFire.Redis.RedisConnection>"];
m19_126 -> m19_127  [key=0, style=solid];
m19_126 -> m19_130  [key=2, style=dotted];
m19_126 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label=redis];
m19_128 -> m19_129  [key=0, style=solid];
m19_128 -> m19_132  [key=2, style=dotted];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_131  [key=2, style=dotted];
m19_129 -> m19_125  [key=0, style=bold, color=blue];
m19_88 -> m19_89  [key=0, style=solid];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_23  [key=2, style=dotted];
m19_89 -> m19_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_90 -> m19_88  [key=0, style=bold, color=blue];
m19_138 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_37  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_47  [key=1, style=dashed, color=green, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_138 -> m19_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisConnectionFacts"];
m19_139 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_140 -> m19_43  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m19_141 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_142 -> m19_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_143 -> m19_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m20_19 -> m20_73  [key=0, style=solid, color=green];
m20_73 -> m20_74  [key=0, style=solid, color=green];
m20_73 -> m20_75  [key=2, style=dotted, color=green];
m20_74 -> m20_19  [key=0, style=bold, color=blue];
m20_14 -> m20_15  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid, color=green];
m20_17 -> m20_20  [key=2, style=dotted, color=green];
m20_17 -> m20_45  [key=3, color=green, style=bold, label="Field variable PooledRedisClientManager _connectionPool"];
m20_16 -> m20_17  [key=0, style=solid, color=green];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_19  [key=2, style=dotted];
m20_18 -> m20_14  [key=0, style=bold, color=blue];
m20_6 -> m20_7  [key=0, style=solid];
m20_7 -> m20_9  [key=2, style=dotted];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_8 -> m20_6  [key=0, style=bold, color=blue];
m20_21 -> m20_22  [key=0, style=solid];
m20_24 -> m20_25  [key=0, style=solid, color=green];
m20_24 -> m20_30  [key=2, style=dotted, color=green];
m20_24 -> m20_31  [key=2, style=dotted, color=green];
m20_23 -> m20_24  [key=0, style=solid, color=green];
m20_23 -> m20_19  [key=2, style=dotted];
m20_23 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label=component];
m20_23 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label=component];
m20_25 -> m20_26  [key=0, style=solid, color=green];
m20_25 -> m20_9  [key=2, style=dotted];
m20_25 -> m20_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_26 -> m20_27  [key=0, style=solid, color=green];
m20_26 -> m20_32  [key=2, style=dotted, color=green];
m20_26 -> m20_33  [key=2, style=dotted, color=green];
m20_26 -> m20_46  [key=1, style=dashed, color=green, label="lambda expression"];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_28  [key=2, style=dotted];
m20_22 -> m20_29  [key=2, style=dotted];
m20_22 -> m20_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_22 -> m20_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_27 -> m20_21  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_4  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_5  [key=2, style=dotted];
m20_3 -> m20_0  [key=0, style=bold, color=blue];
m20_10 -> m20_11  [key=0, style=solid];
m20_46 -> m20_47  [key=0, style=solid, color=green];
m20_47 -> m20_48  [key=0, style=solid, color=green];
m20_47 -> m20_37  [key=2, style=dotted, color=green];
m20_48 -> m20_46  [key=0, style=bold, color=blue];
m20_57 -> m20_45  [key=2, style=dotted];
m20_57 -> m20_58  [key=0, style=solid];
m20_43 -> m20_45  [key=2, style=dotted];
m20_43 -> m20_44  [key=0, style=solid];
m20_42 -> m20_43  [key=0, style=solid];
m20_35 -> m20_37  [key=2, style=dotted];
m20_35 -> m20_9  [key=2, style=dotted];
m20_35 -> m20_36  [key=0, style=solid];
m20_60 -> m20_37  [key=2, style=dotted];
m20_60 -> m20_9  [key=2, style=dotted];
m20_60 -> m20_61  [key=0, style=solid];
m20_56 -> m20_57  [key=0, style=solid];
m20_58 -> m20_56  [key=0, style=bold, color=blue];
m20_34 -> m20_35  [key=0, style=solid];
m20_38 -> m20_39  [key=0, style=solid];
m20_44 -> m20_42  [key=0, style=bold, color=blue];
m20_59 -> m20_60  [key=0, style=solid];
m20_36 -> m20_34  [key=0, style=bold, color=blue];
m20_61 -> m20_59  [key=0, style=bold, color=blue];
m20_40 -> m20_38  [key=0, style=bold, color=blue];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_41  [key=2, style=dotted];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_13  [key=2, style=dotted];
m20_12 -> m20_10  [key=0, style=bold, color=blue];
m20_65 -> m20_66  [key=0, style=solid];
m20_68 -> m20_69  [key=0, style=solid, color=green];
m20_68 -> m20_71  [key=2, style=dotted, color=green];
m20_68 -> m20_72  [key=2, style=dotted, color=green];
m20_67 -> m20_68  [key=0, style=solid, color=green];
m20_67 -> m20_70  [key=2, style=dotted];
m20_66 -> m20_19  [key=2, style=dotted];
m20_66 -> m20_67  [key=0, style=solid];
m20_69 -> m20_65  [key=0, style=bold, color=blue];
m20_49 -> m20_50  [key=0, style=solid, color=green];
m20_50 -> m20_51  [key=0, style=solid, color=green];
m20_50 -> m20_19  [key=2, style=dotted, color=green];
m20_50 -> m20_52  [key=1, style=dashed, color=green, label=component];
m20_50 -> m20_57  [key=1, style=dashed, color=green, label=component];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_55  [key=2, style=dotted];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_9  [key=2, style=dotted];
m20_52 -> m20_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_53 -> m20_33  [key=2, style=dotted];
m20_53 -> m20_54  [key=0, style=solid];
m20_53 -> m20_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_54 -> m20_49  [key=0, style=bold, color=blue];
m20_62 -> m20_63  [key=0, style=solid];
m20_63 -> m20_64  [key=0, style=solid];
m20_63 -> m20_55  [key=2, style=dotted];
m20_64 -> m20_62  [key=0, style=bold, color=blue];
m20_76 -> m20_17  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_24  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_26  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_47  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_50  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_68  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_73  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_76 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m20_78 -> m20_57  [key=1, style=dashed, color=darkseagreen4, label=component];
m20_77 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label=component];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime?"];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_19  [key=0, style=solid];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_12  [key=2, style=dotted];
m21_19 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label=baseTime];
m21_18 -> m21_22  [key=0, style=solid];
m21_18 -> m21_11  [key=2, style=dotted];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_12  [key=2, style=dotted];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_13  [key=2, style=dotted];
m21_21 -> m21_23  [key=2, style=dotted];
m21_21 -> m21_24  [key=2, style=dotted];
m21_21 -> m21_25  [key=2, style=dotted];
m21_21 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_22 -> m21_16  [key=0, style=bold, color=blue];
m21_26 -> m21_27  [key=0, style=solid];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_15  [key=2, style=dotted];
m21_28 -> m21_26  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_0 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m21_0 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label=CrontabSchedule];
m21_0 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_6 -> m21_7  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_12  [key=2, style=dotted];
m21_2 -> m21_9  [key=0, style=solid];
m21_2 -> m21_10  [key=2, style=dotted];
m21_4 -> m21_9  [key=0, style=solid];
m21_4 -> m21_11  [key=2, style=dotted];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_13  [key=2, style=dotted];
m21_8 -> m21_14  [key=2, style=dotted];
m21_8 -> m21_15  [key=2, style=dotted];
m21_9 -> m21_0  [key=0, style=bold, color=blue];
m21_29 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m21_29 -> m21_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ScheduleInstant"];
m22_66 -> m22_67  [key=0, style=solid];
m22_67 -> m22_68  [key=0, style=solid];
m22_67 -> m22_37  [key=2, style=dotted];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_22  [key=2, style=dotted];
m22_69 -> m22_70  [key=0, style=solid];
m22_69 -> m22_38  [key=2, style=dotted];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_39  [key=2, style=dotted];
m22_71 -> m22_72  [key=0, style=solid];
m22_71 -> m22_26  [key=2, style=dotted];
m22_72 -> m22_66  [key=0, style=bold, color=blue];
m22_22 -> m22_23  [key=0, style=solid];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_25  [key=2, style=dotted];
m22_24 -> m22_22  [key=0, style=bold, color=blue];
m22_26 -> m22_27  [key=0, style=solid];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_29  [key=2, style=dotted];
m22_28 -> m22_26  [key=0, style=bold, color=blue];
m22_52 -> m22_53  [key=0, style=solid];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_37  [key=2, style=dotted];
m22_54 -> m22_55  [key=0, style=solid];
m22_54 -> m22_22  [key=2, style=dotted];
m22_55 -> m22_56  [key=0, style=solid];
m22_55 -> m22_38  [key=2, style=dotted];
m22_56 -> m22_57  [key=0, style=solid];
m22_56 -> m22_39  [key=2, style=dotted];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_26  [key=2, style=dotted];
m22_58 -> m22_52  [key=0, style=bold, color=blue];
m22_59 -> m22_60  [key=0, style=solid];
m22_60 -> m22_61  [key=0, style=solid];
m22_60 -> m22_37  [key=2, style=dotted];
m22_61 -> m22_62  [key=0, style=solid];
m22_61 -> m22_22  [key=2, style=dotted];
m22_62 -> m22_63  [key=0, style=solid];
m22_62 -> m22_38  [key=2, style=dotted];
m22_63 -> m22_64  [key=0, style=solid];
m22_63 -> m22_39  [key=2, style=dotted];
m22_64 -> m22_65  [key=0, style=solid];
m22_64 -> m22_26  [key=2, style=dotted];
m22_65 -> m22_59  [key=0, style=bold, color=blue];
m22_18 -> m22_19  [key=0, style=solid];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_21  [key=2, style=dotted];
m22_20 -> m22_18  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=red];
m22_1 -> m22_2  [key=0, style=solid, color=red];
m22_1 -> m22_5  [key=2, style=dotted, color=red];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_6  [key=2, style=dotted];
m22_2 -> m22_7  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_0  [key=0, style=bold, color=blue];
m22_30 -> m22_31  [key=0, style=solid];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_37  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_22  [key=2, style=dotted];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_38  [key=2, style=dotted];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_39  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_26  [key=2, style=dotted];
m22_36 -> m22_30  [key=0, style=bold, color=blue];
m22_40 -> m22_41  [key=0, style=solid];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_37  [key=2, style=dotted];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_22  [key=2, style=dotted];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_38  [key=2, style=dotted];
m22_44 -> m22_45  [key=0, style=solid];
m22_44 -> m22_50  [key=2, style=dotted];
m22_44 -> m22_46  [key=1, style=dashed, color=darkseagreen4, label=table1];
m22_44 -> m22_47  [key=1, style=dashed, color=darkseagreen4, label=table1];
m22_45 -> m22_46  [key=0, style=solid];
m22_45 -> m22_51  [key=2, style=dotted];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_51  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_39  [key=2, style=dotted];
m22_48 -> m22_49  [key=0, style=solid];
m22_48 -> m22_26  [key=2, style=dotted];
m22_49 -> m22_40  [key=0, style=bold, color=blue];
m22_14 -> m22_15  [key=0, style=solid];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_17  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid];
m22_16 -> m22_0  [key=2, style=dotted];
m22_17 -> m22_14  [key=0, style=bold, color=blue];
m22_73 -> m22_74  [key=0, style=solid];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_37  [key=2, style=dotted];
m22_75 -> m22_76  [key=0, style=solid];
m22_75 -> m22_22  [key=2, style=dotted];
m22_76 -> m22_77  [key=0, style=solid];
m22_76 -> m22_38  [key=2, style=dotted];
m22_77 -> m22_78  [key=0, style=solid];
m22_77 -> m22_39  [key=2, style=dotted];
m22_78 -> m22_79  [key=0, style=solid];
m22_78 -> m22_26  [key=2, style=dotted];
m22_79 -> m22_73  [key=0, style=bold, color=blue];
m22_9 -> m22_10  [key=0, style=solid];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_13  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_12 -> m22_9  [key=0, style=bold, color=blue];
m22_80 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m22_80 -> m22_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ServerFeature"];
m23_25 -> m23_25  [key=1, style=dashed, color=green, label=job];
m23_25 -> m23_26  [key=0, style=solid, color=green];
m23_25 -> m23_65  [key=2, style=dotted, color=green];
m23_25 -> m23_27  [key=1, style=dashed, color=green, label=job];
m23_21 -> m23_22  [key=0, style=solid, color=green];
m23_21 -> m23_54  [key=0, style=solid, color=green];
m23_21 -> m23_23  [key=1, style=dashed, color=green, label=job];
m23_28 -> m23_29  [key=0, style=solid, color=green];
m23_28 -> m23_57  [key=2, style=dotted, color=green];
m23_20 -> m23_21  [key=0, style=solid, color=green];
m23_20 -> m23_57  [key=2, style=dotted, color=green];
m23_24 -> m23_25  [key=0, style=solid, color=green];
m23_24 -> m23_57  [key=2, style=dotted, color=green];
m23_27 -> m23_27  [key=1, style=dashed, color=green, label=job];
m23_27 -> m23_28  [key=0, style=solid, color=green];
m23_27 -> m23_31  [key=0, style=solid, color=green];
m23_27 -> m23_29  [key=1, style=dashed, color=green, label=job];
m23_27 -> m23_32  [key=1, style=dashed, color=green, label=job];
m23_22 -> m23_23  [key=0, style=solid, color=green];
m23_22 -> m23_57  [key=2, style=dotted, color=green];
m23_23 -> m23_23  [key=1, style=dashed, color=green, label=job];
m23_23 -> m23_24  [key=0, style=solid, color=green];
m23_23 -> m23_65  [key=2, style=dotted, color=green];
m23_23 -> m23_25  [key=1, style=dashed, color=green, label=job];
m23_0 -> m23_1  [key=0, style=solid, color=red];
m23_0 -> m23_4  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m23_0 -> m23_6  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m23_0 -> m23_9  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m23_0 -> m23_12  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m23_0 -> m23_15  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m23_0 -> m23_16  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m23_1 -> m23_2  [key=0, style=solid, color=red];
m23_1 -> m23_57  [key=2, style=dotted, color=green];
m23_1 -> m23_17  [key=0, style=solid, color=red];
m23_2 -> m23_3  [key=0, style=solid, color=red];
m23_2 -> m23_58  [key=2, style=dotted];
m23_2 -> m23_2  [key=1, style=dashed, color=red, label=row];
m23_2 -> m23_4  [key=1, style=dashed, color=red, label=name];
m23_2 -> m23_6  [key=1, style=dashed, color=red, label=name];
m23_2 -> m23_9  [key=1, style=dashed, color=red, label=name];
m23_2 -> m23_12  [key=1, style=dashed, color=red, label=name];
m23_2 -> m23_15  [key=1, style=dashed, color=red, label=name];
m23_2 -> m23_16  [key=1, style=dashed, color=red, label=name];
m23_9 -> m23_10  [key=0, style=solid, color=red];
m23_9 -> m23_61  [key=2, style=dotted, color=green];
m23_9 -> m23_62  [key=2, style=dotted, color=green];
m23_9 -> m23_63  [key=2, style=dotted, color=green];
m23_9 -> m23_12  [key=1, style=dashed, color=green, label=pager];
m23_9 -> m23_19  [key=1, style=dashed, color=green, label=pager];
m23_9 -> m23_55  [key=1, style=dashed, color=green, label=pager];
m23_9 -> m23_20  [key=2, style=dotted, color=red];
m23_4 -> m23_9  [key=1, style=dashed, color=green, label=from];
m23_4 -> m23_5  [key=0, style=solid, color=red];
m23_4 -> m23_59  [key=2, style=dotted];
m23_4 -> m23_18  [key=2, style=dotted, color=red];
m23_4 -> m23_19  [key=2, style=dotted, color=red];
m23_5 -> m23_9  [key=1, style=dashed, color=green, label=perPage];
m23_5 -> m23_6  [key=0, style=solid, color=red];
m23_5 -> m23_59  [key=2, style=dotted];
m23_5 -> m23_8  [key=0, style=solid, color=red];
m23_8 -> m23_9  [key=0, style=solid, color=red];
m23_8 -> m23_60  [key=2, style=dotted, color=green];
m23_8 -> m23_10  [key=1, style=dashed, color=green, label=monitor];
m23_8 -> m23_11  [key=0, style=solid, color=red];
m23_10 -> m23_11  [key=0, style=solid, color=green];
m23_10 -> m23_64  [key=2, style=dotted, color=green];
m23_10 -> m23_21  [key=1, style=dashed, color=green, label=scheduledJobs];
m23_10 -> m23_1  [key=0, style=solid, color=red];
m23_10 -> m23_22  [key=2, style=dotted, color=red];
m23_10 -> m23_19  [key=2, style=dotted, color=red];
m23_12 -> m23_13  [key=0, style=solid, color=green];
m23_12 -> m23_14  [key=0, style=solid, color=green];
m23_12 -> m23_1  [key=0, style=solid, color=red];
m23_12 -> m23_23  [key=2, style=dotted, color=red];
m23_12 -> m23_24  [key=2, style=dotted, color=red];
m23_19 -> m23_20  [key=0, style=solid, color=green];
m23_19 -> m23_66  [key=2, style=dotted];
m23_19 -> m23_67  [key=2, style=dotted];
m23_19 -> m23_68  [key=2, style=dotted];
m23_55 -> m23_56  [key=0, style=solid, color=green];
m23_55 -> m23_72  [key=2, style=dotted, color=green];
m23_55 -> m23_67  [key=2, style=dotted, color=green];
m23_55 -> m23_68  [key=2, style=dotted, color=green];
m23_6 -> m23_7  [key=0, style=solid, color=red];
m23_6 -> m23_20  [key=2, style=dotted, color=red];
m23_7 -> m23_8  [key=0, style=solid, color=green];
m23_7 -> m23_1  [key=0, style=solid, color=red];
m23_7 -> m23_21  [key=2, style=dotted, color=red];
m23_7 -> m23_19  [key=2, style=dotted, color=red];
m23_11 -> m23_12  [key=0, style=solid, color=red];
m23_11 -> m23_57  [key=2, style=dotted];
m23_11 -> m23_13  [key=0, style=solid, color=red];
m23_13 -> m23_56  [key=0, style=solid, color=green];
m23_13 -> m23_57  [key=2, style=dotted, color=green];
m23_13 -> m23_14  [key=0, style=solid, color=red];
m23_13 -> m23_16  [key=0, style=solid, color=red];
m23_13 -> m23_25  [key=2, style=dotted, color=red];
m23_14 -> m23_15  [key=0, style=solid, color=red];
m23_14 -> m23_57  [key=2, style=dotted, color=green];
m23_14 -> m23_26  [key=2, style=dotted, color=red];
m23_54 -> m23_55  [key=0, style=solid, color=green];
m23_54 -> m23_57  [key=2, style=dotted, color=green];
m23_53 -> m23_21  [key=0, style=solid, color=green];
m23_53 -> m23_57  [key=2, style=dotted];
m23_15 -> m23_16  [key=0, style=solid, color=green];
m23_15 -> m23_63  [key=2, style=dotted];
m23_15 -> m23_65  [key=2, style=dotted];
m23_15 -> m23_1  [key=0, style=solid, color=red];
m23_15 -> m23_27  [key=2, style=dotted, color=red];
m23_15 -> m23_28  [key=2, style=dotted, color=red];
m23_16 -> m23_17  [key=0, style=solid, color=green];
m23_16 -> m23_57  [key=2, style=dotted, color=green];
m23_16 -> m23_1  [key=0, style=solid, color=red];
m23_16 -> m23_28  [key=2, style=dotted, color=red];
m23_17 -> m23_18  [key=0, style=solid, color=green];
m23_17 -> m23_63  [key=2, style=dotted];
m23_17 -> m23_65  [key=2, style=dotted];
m23_17 -> m23_0  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid, color=green];
m23_18 -> m23_57  [key=2, style=dotted, color=green];
m23_26 -> m23_27  [key=0, style=solid, color=green];
m23_26 -> m23_57  [key=2, style=dotted];
m23_31 -> m23_32  [key=0, style=solid, color=green];
m23_31 -> m23_57  [key=2, style=dotted, color=green];
m23_29 -> m23_29  [key=1, style=dashed, color=green, label=job];
m23_29 -> m23_30  [key=0, style=solid, color=green];
m23_29 -> m23_65  [key=2, style=dotted, color=green];
m23_29 -> m23_32  [key=1, style=dashed, color=green, label=job];
m23_32 -> m23_32  [key=1, style=dashed, color=green, label=job];
m23_32 -> m23_33  [key=0, style=solid, color=green];
m23_32 -> m23_63  [key=2, style=dotted, color=green];
m23_32 -> m23_65  [key=2, style=dotted, color=green];
m23_32 -> m23_34  [key=1, style=dashed, color=green, label=job];
m23_30 -> m23_31  [key=0, style=solid, color=green];
m23_30 -> m23_57  [key=2, style=dotted];
m23_33 -> m23_34  [key=0, style=solid, color=green];
m23_33 -> m23_57  [key=2, style=dotted, color=green];
m23_34 -> m23_34  [key=1, style=dashed, color=green, label=job];
m23_34 -> m23_35  [key=0, style=solid, color=green];
m23_34 -> m23_69  [key=2, style=dotted, color=green];
m23_34 -> m23_68  [key=2, style=dotted, color=green];
m23_34 -> m23_36  [key=1, style=dashed, color=green, label=job];
m23_35 -> m23_36  [key=0, style=solid, color=green];
m23_35 -> m23_57  [key=2, style=dotted];
m23_36 -> m23_36  [key=1, style=dashed, color=green, label=job];
m23_36 -> m23_37  [key=0, style=solid, color=green];
m23_36 -> m23_38  [key=0, style=solid, color=green];
m23_36 -> m23_39  [key=1, style=dashed, color=green, label=job];
m23_37 -> m23_38  [key=0, style=solid, color=green];
m23_37 -> m23_57  [key=2, style=dotted, color=green];
m23_38 -> m23_39  [key=0, style=solid, color=green];
m23_38 -> m23_57  [key=2, style=dotted, color=green];
m23_39 -> m23_39  [key=1, style=dashed, color=green, label=job];
m23_39 -> m23_40  [key=0, style=solid, color=green];
m23_39 -> m23_70  [key=2, style=dotted, color=green];
m23_39 -> m23_65  [key=2, style=dotted, color=green];
m23_39 -> m23_41  [key=1, style=dashed, color=green, label=job];
m23_40 -> m23_41  [key=0, style=solid, color=green];
m23_40 -> m23_57  [key=2, style=dotted, color=green];
m23_41 -> m23_41  [key=1, style=dashed, color=green, label=job];
m23_41 -> m23_42  [key=0, style=solid, color=green];
m23_41 -> m23_65  [key=2, style=dotted, color=green];
m23_41 -> m23_43  [key=1, style=dashed, color=green, label=job];
m23_42 -> m23_43  [key=0, style=solid, color=green];
m23_42 -> m23_57  [key=2, style=dotted, color=green];
m23_43 -> m23_43  [key=1, style=dashed, color=green, label=job];
m23_43 -> m23_44  [key=0, style=solid, color=green];
m23_43 -> m23_63  [key=2, style=dotted, color=green];
m23_43 -> m23_65  [key=2, style=dotted, color=green];
m23_43 -> m23_45  [key=1, style=dashed, color=green, label=job];
m23_44 -> m23_45  [key=0, style=solid, color=green];
m23_44 -> m23_57  [key=2, style=dotted, color=green];
m23_45 -> m23_45  [key=1, style=dashed, color=green, label=job];
m23_45 -> m23_46  [key=0, style=solid, color=green];
m23_45 -> m23_71  [key=2, style=dotted, color=green];
m23_45 -> m23_68  [key=2, style=dotted, color=green];
m23_45 -> m23_47  [key=1, style=dashed, color=green, label=job];
m23_46 -> m23_47  [key=0, style=solid, color=green];
m23_46 -> m23_57  [key=2, style=dotted, color=green];
m23_47 -> m23_47  [key=1, style=dashed, color=green, label=job];
m23_47 -> m23_48  [key=0, style=solid, color=green];
m23_47 -> m23_53  [key=0, style=solid, color=green];
m23_47 -> m23_49  [key=1, style=dashed, color=green, label=job];
m23_48 -> m23_49  [key=0, style=solid, color=green];
m23_48 -> m23_57  [key=2, style=dotted, color=green];
m23_49 -> m23_49  [key=1, style=dashed, color=green, label=job];
m23_49 -> m23_50  [key=0, style=solid, color=green];
m23_49 -> m23_70  [key=2, style=dotted, color=green];
m23_49 -> m23_65  [key=2, style=dotted, color=green];
m23_49 -> m23_51  [key=1, style=dashed, color=green, label=job];
m23_50 -> m23_51  [key=0, style=solid, color=green];
m23_50 -> m23_57  [key=2, style=dotted, color=green];
m23_51 -> m23_51  [key=1, style=dashed, color=green, label=job];
m23_51 -> m23_52  [key=0, style=solid, color=green];
m23_51 -> m23_65  [key=2, style=dotted, color=green];
m23_52 -> m23_57  [key=2, style=dotted];
m23_52 -> m23_53  [key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid, color=red];
m23_3 -> m23_3  [key=1, style=dashed, color=red, label=row];
m23_3 -> m23_5  [key=1, style=dashed, color=red, label=value];
m23_3 -> m23_8  [key=1, style=dashed, color=red, label=value];
m23_3 -> m23_11  [key=1, style=dashed, color=red, label=value];
m23_3 -> m23_13  [key=1, style=dashed, color=red, label=value];
m23_3 -> m23_14  [key=1, style=dashed, color=red, label=value];
m23_3 -> m23_16  [key=1, style=dashed, color=red, label=value];
m23_56 -> m23_0  [key=0, style=bold, color=blue];
m23_73 -> m23_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_55  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_13  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_22  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_54  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_31  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_32  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_33  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_34  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_37  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_38  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_39  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_40  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_41  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_42  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_43  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_44  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_45  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_46  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_48  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_49  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_50  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_51  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m23_73 -> m23_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ScheduledJobsPage"];
m25_114 -> m25_115  [key=0, style=solid];
m25_115 -> m25_116  [key=0, style=solid];
m25_115 -> m25_120  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_116 -> m25_117  [key=0, style=solid];
m25_116 -> m25_57  [key=2, style=dotted];
m25_116 -> m25_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_117 -> m25_114  [key=0, style=bold, color=blue];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_38 -> m25_39  [key=0, style=solid, color=green];
m25_38 -> m25_30  [key=2, style=dotted];
m25_237 -> m25_238  [key=0, style=solid];
m25_238 -> m25_239  [key=0, style=solid];
m25_238 -> m25_11  [key=2, style=dotted];
m25_238 -> m25_240  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_239 -> m25_237  [key=0, style=bold, color=blue];
m25_18 -> m25_19  [key=0, style=solid];
m25_19 -> m25_20  [key=0, style=solid];
m25_19 -> m25_11  [key=2, style=dotted];
m25_19 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_20 -> m25_18  [key=0, style=bold, color=blue];
m25_279 -> m25_280  [key=0, style=solid];
m25_280 -> m25_281  [key=0, style=solid];
m25_280 -> m25_11  [key=2, style=dotted];
m25_280 -> m25_282  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_281 -> m25_279  [key=0, style=bold, color=blue];
m25_337 -> m25_338  [key=0, style=solid];
m25_338 -> m25_339  [key=0, style=solid];
m25_338 -> m25_57  [key=2, style=dotted];
m25_338 -> m25_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_339 -> m25_337  [key=0, style=bold, color=blue];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_42  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_33  [key=2, style=dotted];
m25_49 -> m25_50  [key=0, style=solid, color=green];
m25_49 -> m25_54  [key=2, style=dotted, color=green];
m25_48 -> m25_49  [key=0, style=solid, color=green];
m25_48 -> m25_53  [key=2, style=dotted];
m25_48 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label=table1];
m25_48 -> m25_46  [key=0, style=bold, color=blue];
m25_50 -> m25_43  [key=2, style=dotted];
m25_50 -> m25_51  [key=0, style=solid];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_30  [key=2, style=dotted];
m25_47 -> m25_49  [key=2, style=dotted];
m25_47 -> m25_38  [key=2, style=dotted];
m25_47 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_51 -> m25_26  [key=2, style=dotted];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_53  [key=2, style=dotted];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_22  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_42  [key=2, style=dotted];
m25_52 -> m25_44  [key=0, style=bold, color=blue];
m25_52 -> m25_50  [key=0, style=bold, color=blue];
m25_72 -> m25_73  [key=0, style=solid];
m25_72 -> m25_84  [key=2, style=dotted];
m25_72 -> m25_85  [key=2, style=dotted];
m25_77 -> m25_43  [key=2, style=dotted];
m25_77 -> m25_78  [key=0, style=solid];
m25_74 -> m25_75  [key=0, style=solid];
m25_74 -> m25_22  [key=2, style=dotted];
m25_74 -> m25_33  [key=2, style=dotted];
m25_75 -> m25_30  [key=2, style=dotted];
m25_75 -> m25_76  [key=0, style=solid];
m25_75 -> m25_33  [key=2, style=dotted];
m25_78 -> m25_26  [key=2, style=dotted];
m25_78 -> m25_79  [key=0, style=solid];
m25_76 -> m25_77  [key=0, style=solid];
m25_76 -> m25_63  [key=2, style=dotted];
m25_76 -> m25_58  [key=0, style=bold, color=blue];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_42  [key=2, style=dotted];
m25_73 -> m25_79  [key=2, style=dotted];
m25_73 -> m25_86  [key=2, style=dotted];
m25_73 -> m25_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_73 -> m25_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_73 -> m25_75  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m25_79 -> m25_72  [key=0, style=bold, color=blue];
m25_54 -> m25_55  [key=0, style=solid, color=red];
m25_55 -> m25_56  [key=0, style=solid, color=red];
m25_55 -> m25_57  [key=2, style=dotted, color=red];
m25_55 -> m25_58  [key=1, style=dashed, color=red, label="lambda expression"];
m25_56 -> m25_54  [key=0, style=bold, color=blue];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_42  [key=2, style=dotted];
m25_80 -> m25_81  [key=0, style=solid];
m25_86 -> m25_43  [key=2, style=dotted];
m25_86 -> m25_87  [key=0, style=solid];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_22  [key=2, style=dotted];
m25_83 -> m25_30  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_87 -> m25_26  [key=2, style=dotted];
m25_87 -> m25_88  [key=0, style=solid];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_89  [key=2, style=dotted];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_63  [key=2, style=dotted];
m25_88 -> m25_80  [key=0, style=bold, color=blue];
m25_88 -> m25_89  [key=0, style=solid];
m25_88 -> m25_53  [key=2, style=dotted];
m25_64 -> m25_65  [key=0, style=solid];
m25_64 -> m25_33  [key=2, style=dotted];
m25_69 -> m25_43  [key=2, style=dotted];
m25_69 -> m25_70  [key=0, style=solid, color=red];
m25_69 -> m25_33  [key=2, style=dotted, color=red];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_22  [key=2, style=dotted];
m25_66 -> m25_82  [key=2, style=dotted];
m25_66 -> m25_68  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m25_67 -> m25_30  [key=2, style=dotted];
m25_67 -> m25_68  [key=0, style=solid];
m25_70 -> m25_26  [key=2, style=dotted];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> m25_33  [key=2, style=dotted];
m25_68 -> m25_69  [key=0, style=solid, color=red];
m25_68 -> m25_63  [key=2, style=dotted];
m25_68 -> m25_83  [key=2, style=dotted];
m25_68 -> m25_70  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_68 -> m25_71  [key=1, style=dashed, color=darkseagreen4, label=job];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_42  [key=2, style=dotted];
m25_65 -> m25_33  [key=2, style=dotted];
m25_71 -> m25_64  [key=0, style=bold, color=blue];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_33  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_365 -> m25_366  [key=0, style=solid];
m25_366 -> m25_367  [key=0, style=solid];
m25_366 -> m25_370  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_367 -> m25_368  [key=0, style=solid];
m25_367 -> m25_57  [key=2, style=dotted];
m25_367 -> m25_369  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_368 -> m25_365  [key=0, style=bold, color=blue];
m25_269 -> m25_270  [key=0, style=solid];
m25_270 -> m25_271  [key=0, style=solid];
m25_270 -> m25_274  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_271 -> m25_272  [key=0, style=solid];
m25_271 -> m25_57  [key=2, style=dotted];
m25_271 -> m25_273  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_272 -> m25_269  [key=0, style=bold, color=blue];
m25_306 -> m25_307  [key=0, style=solid];
m25_307 -> m25_308  [key=0, style=solid];
m25_307 -> m25_311  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_308 -> m25_309  [key=0, style=solid];
m25_308 -> m25_57  [key=2, style=dotted];
m25_308 -> m25_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_309 -> m25_306  [key=0, style=bold, color=blue];
m25_258 -> m25_259  [key=0, style=solid];
m25_259 -> m25_260  [key=0, style=solid];
m25_259 -> m25_263  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_260 -> m25_261  [key=0, style=solid];
m25_260 -> m25_57  [key=2, style=dotted];
m25_260 -> m25_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_261 -> m25_258  [key=0, style=bold, color=blue];
m25_386 -> m25_387  [key=0, style=solid];
m25_387 -> m25_388  [key=0, style=solid];
m25_387 -> m25_391  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_388 -> m25_389  [key=0, style=solid];
m25_388 -> m25_57  [key=2, style=dotted];
m25_388 -> m25_390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_389 -> m25_386  [key=0, style=bold, color=blue];
m25_26 -> m25_27  [key=0, style=solid];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_29  [key=2, style=dotted];
m25_27 -> m25_11  [key=2, style=dotted];
m25_28 -> m25_26  [key=0, style=bold, color=blue];
m25_199 -> m25_200  [key=0, style=solid];
m25_200 -> m25_201  [key=0, style=solid];
m25_200 -> m25_11  [key=2, style=dotted];
m25_200 -> m25_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_201 -> m25_199  [key=0, style=bold, color=blue];
m25_99 -> m25_100  [key=0, style=solid, color=red];
m25_99 -> m25_103  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerConnection"];
m25_105 -> m25_43  [key=2, style=dotted];
m25_105 -> m25_106  [key=0, style=solid];
m25_101 -> m25_102  [key=0, style=solid];
m25_101 -> m25_22  [key=2, style=dotted];
m25_101 -> m25_99  [key=0, style=bold, color=blue];
m25_102 -> m25_30  [key=2, style=dotted];
m25_102 -> m25_103  [key=0, style=solid, color=red];
m25_106 -> m25_26  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_89  [key=2, style=dotted];
m25_104 -> m25_102  [key=0, style=bold, color=blue];
m25_100 -> m25_101  [key=0, style=solid, color=red];
m25_100 -> m25_42  [key=2, style=dotted];
m25_100 -> m25_3  [key=2, style=dotted, color=red];
m25_100 -> m25_102  [key=1, style=dashed, color=red, label="lambda expression"];
m25_103 -> m25_104  [key=0, style=solid, color=red];
m25_103 -> m25_63  [key=2, style=dotted];
m25_103 -> m25_105  [key=2, style=dotted, color=red];
m25_107 -> m25_99  [key=0, style=bold, color=blue];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_11  [key=2, style=dotted];
m25_107 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_89 -> m25_87  [key=0, style=bold, color=blue];
m25_144 -> m25_145  [key=0, style=solid];
m25_145 -> m25_146  [key=0, style=solid];
m25_145 -> m25_11  [key=2, style=dotted];
m25_145 -> m25_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_146 -> m25_144  [key=0, style=bold, color=blue];
m25_376 -> m25_377  [key=0, style=solid];
m25_377 -> m25_378  [key=0, style=solid];
m25_377 -> m25_11  [key=2, style=dotted];
m25_377 -> m25_379  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_378 -> m25_376  [key=0, style=bold, color=blue];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_22  [key=2, style=dotted];
m25_418 -> m25_419  [key=0, style=solid];
m25_418 -> m25_420  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_418 -> m25_421  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=2, style=dotted];
m25_6 -> m25_4  [key=0, style=bold, color=blue];
m25_12 -> m25_13  [key=0, style=solid];
m25_13 -> m25_14  [key=0, style=solid, color=red];
m25_13 -> m25_16  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid, color=red];
m25_14 -> m25_17  [key=2, style=dotted, color=red];
m25_15 -> m25_12  [key=0, style=bold, color=blue];
m25_21 -> m25_22  [key=0, style=solid];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_25  [key=2, style=dotted];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_17  [key=2, style=dotted];
m25_23 -> m25_25  [key=2, style=dotted];
m25_24 -> m25_21  [key=0, style=bold, color=blue];
m25_24 -> m25_22  [key=0, style=bold, color=blue];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_3  [key=2, style=dotted];
m25_30 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_37  [key=2, style=dotted];
m25_35 -> m25_38  [key=2, style=dotted];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_33  [key=2, style=dotted];
m25_31 -> m25_34  [key=2, style=dotted];
m25_32 -> m25_29  [key=0, style=bold, color=blue];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_34  [key=2, style=dotted];
m25_36 -> m25_34  [key=0, style=bold, color=blue];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_42  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_3  [key=2, style=dotted];
m25_43 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_58 -> m25_59  [key=0, style=solid];
m25_58 -> m25_62  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_58 -> m25_73  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_58 -> m25_30  [key=2, style=dotted];
m25_59 -> m25_60  [key=0, style=solid];
m25_59 -> m25_49  [key=2, style=dotted];
m25_59 -> m25_37  [key=2, style=dotted];
m25_59 -> m25_77  [key=2, style=dotted];
m25_59 -> m25_38  [key=2, style=dotted];
m25_59 -> m25_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_59 -> m25_61  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_59 -> m25_63  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_59 -> m25_73  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_62 -> m25_63  [key=0, style=solid];
m25_62 -> m25_79  [key=2, style=dotted];
m25_62 -> m25_80  [key=2, style=dotted];
m25_62 -> m25_64  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m25_62 -> m25_65  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m25_62 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m25_62 -> m25_67  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m25_62 -> m25_72  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m25_62 -> m25_55  [key=0, style=bold, color=blue];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_17  [key=2, style=dotted];
m25_60 -> m25_43  [key=2, style=dotted];
m25_61 -> m25_62  [key=0, style=solid];
m25_61 -> m25_78  [key=2, style=dotted];
m25_61 -> m25_26  [key=2, style=dotted];
m25_63 -> m25_64  [key=0, style=solid];
m25_63 -> m25_81  [key=2, style=dotted];
m25_63 -> m25_33  [key=2, style=dotted];
m25_90 -> m25_91  [key=0, style=solid];
m25_93 -> m25_94  [key=0, style=solid];
m25_93 -> m25_30  [key=2, style=dotted];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_42  [key=2, style=dotted];
m25_92 -> m25_90  [key=0, style=bold, color=blue];
m25_92 -> m25_93  [key=0, style=solid];
m25_92 -> m25_22  [key=2, style=dotted];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_63  [key=2, style=dotted];
m25_95 -> m25_93  [key=0, style=bold, color=blue];
m25_95 -> m25_96  [key=0, style=solid];
m25_95 -> m25_89  [key=2, style=dotted];
m25_109 -> m25_110  [key=0, style=solid];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_105  [key=2, style=dotted];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_113  [key=2, style=dotted];
m25_112 -> m25_109  [key=0, style=bold, color=blue];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_128  [key=2, style=dotted];
m25_120 -> m25_129  [key=2, style=dotted];
m25_120 -> m25_79  [key=2, style=dotted];
m25_120 -> m25_80  [key=2, style=dotted];
m25_118 -> m25_119  [key=0, style=solid];
m25_118 -> m25_120  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_118 -> m25_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_119 -> m25_120  [key=0, style=solid];
m25_119 -> m25_49  [key=2, style=dotted];
m25_119 -> m25_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_121 -> m25_122  [key=0, style=solid];
m25_121 -> m25_130  [key=2, style=dotted];
m25_121 -> m25_105  [key=2, style=dotted];
m25_121 -> m25_123  [key=1, style=dashed, color=darkseagreen4, label=result];
m25_121 -> m25_124  [key=1, style=dashed, color=darkseagreen4, label=result];
m25_121 -> m25_125  [key=1, style=dashed, color=darkseagreen4, label=result];
m25_121 -> m25_126  [key=1, style=dashed, color=darkseagreen4, label=result];
m25_131 -> m25_132  [key=0, style=solid];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_17  [key=2, style=dotted];
m25_123 -> m25_124  [key=0, style=solid];
m25_123 -> m25_17  [key=2, style=dotted];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_33  [key=2, style=dotted];
m25_125 -> m25_126  [key=0, style=solid];
m25_125 -> m25_33  [key=2, style=dotted];
m25_126 -> m25_127  [key=0, style=solid];
m25_126 -> m25_113  [key=2, style=dotted];
m25_127 -> m25_118  [key=0, style=bold, color=blue];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_53  [key=2, style=dotted];
m25_133 -> m25_131  [key=0, style=bold, color=blue];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_143  [key=2, style=dotted];
m25_139 -> m25_129  [key=2, style=dotted];
m25_139 -> m25_79  [key=2, style=dotted];
m25_139 -> m25_80  [key=2, style=dotted];
m25_138 -> m25_139  [key=0, style=solid];
m25_138 -> m25_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_140 -> m25_141  [key=0, style=solid];
m25_140 -> m25_130  [key=2, style=dotted];
m25_140 -> m25_105  [key=2, style=dotted];
m25_141 -> m25_142  [key=0, style=solid];
m25_141 -> m25_17  [key=2, style=dotted];
m25_142 -> m25_138  [key=0, style=bold, color=blue];
m25_147 -> m25_148  [key=0, style=solid];
m25_147 -> m25_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_3  [key=2, style=dotted];
m25_148 -> m25_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_152 -> m25_153  [key=0, style=solid];
m25_152 -> m25_154  [key=2, style=dotted];
m25_149 -> m25_150  [key=0, style=solid];
m25_149 -> m25_33  [key=2, style=dotted];
m25_151 -> m25_152  [key=0, style=solid];
m25_150 -> m25_147  [key=0, style=bold, color=blue];
m25_153 -> m25_151  [key=0, style=bold, color=blue];
m25_158 -> m25_159  [key=0, style=solid];
m25_158 -> m25_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_159 -> m25_160  [key=0, style=solid];
m25_159 -> m25_3  [key=2, style=dotted];
m25_159 -> m25_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_163 -> m25_164  [key=0, style=solid];
m25_163 -> m25_154  [key=2, style=dotted];
m25_160 -> m25_161  [key=0, style=solid];
m25_160 -> m25_33  [key=2, style=dotted];
m25_162 -> m25_163  [key=0, style=solid];
m25_161 -> m25_158  [key=0, style=bold, color=blue];
m25_164 -> m25_162  [key=0, style=bold, color=blue];
m25_170 -> m25_171  [key=0, style=solid];
m25_170 -> m25_79  [key=2, style=dotted];
m25_170 -> m25_80  [key=2, style=dotted];
m25_169 -> m25_170  [key=0, style=solid];
m25_169 -> m25_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_169 -> m25_173  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_172 -> m25_173  [key=0, style=solid];
m25_172 -> m25_154  [key=2, style=dotted];
m25_173 -> m25_174  [key=0, style=solid];
m25_173 -> m25_79  [key=2, style=dotted];
m25_173 -> m25_80  [key=2, style=dotted];
m25_171 -> m25_172  [key=0, style=solid];
m25_171 -> m25_81  [key=2, style=dotted];
m25_171 -> m25_173  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_174 -> m25_175  [key=0, style=solid];
m25_174 -> m25_33  [key=2, style=dotted];
m25_175 -> m25_169  [key=0, style=bold, color=blue];
m25_181 -> m25_182  [key=0, style=solid];
m25_181 -> m25_79  [key=2, style=dotted];
m25_181 -> m25_80  [key=2, style=dotted];
m25_180 -> m25_181  [key=0, style=solid];
m25_180 -> m25_183  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_180 -> m25_184  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_180 -> m25_185  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_183 -> m25_184  [key=0, style=solid];
m25_183 -> m25_154  [key=2, style=dotted];
m25_184 -> m25_185  [key=0, style=solid];
m25_184 -> m25_154  [key=2, style=dotted];
m25_185 -> m25_186  [key=0, style=solid];
m25_185 -> m25_79  [key=2, style=dotted];
m25_185 -> m25_80  [key=2, style=dotted];
m25_182 -> m25_183  [key=0, style=solid];
m25_182 -> m25_81  [key=2, style=dotted];
m25_182 -> m25_184  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_182 -> m25_185  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_186 -> m25_187  [key=0, style=solid];
m25_186 -> m25_33  [key=2, style=dotted];
m25_187 -> m25_180  [key=0, style=bold, color=blue];
m25_193 -> m25_194  [key=0, style=solid];
m25_193 -> m25_79  [key=2, style=dotted];
m25_193 -> m25_80  [key=2, style=dotted];
m25_192 -> m25_193  [key=0, style=solid];
m25_192 -> m25_195  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_192 -> m25_196  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_195 -> m25_196  [key=0, style=solid];
m25_195 -> m25_154  [key=2, style=dotted];
m25_196 -> m25_197  [key=0, style=solid];
m25_196 -> m25_79  [key=2, style=dotted];
m25_196 -> m25_80  [key=2, style=dotted];
m25_194 -> m25_195  [key=0, style=solid];
m25_194 -> m25_81  [key=2, style=dotted];
m25_194 -> m25_196  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m25_197 -> m25_198  [key=0, style=solid];
m25_197 -> m25_33  [key=2, style=dotted];
m25_198 -> m25_192  [key=0, style=bold, color=blue];
m25_202 -> m25_203  [key=0, style=solid];
m25_202 -> m25_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_203 -> m25_204  [key=0, style=solid];
m25_203 -> m25_3  [key=2, style=dotted];
m25_203 -> m25_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_207 -> m25_208  [key=0, style=solid];
m25_207 -> m25_209  [key=2, style=dotted];
m25_204 -> m25_205  [key=0, style=solid];
m25_204 -> m25_33  [key=2, style=dotted];
m25_206 -> m25_207  [key=0, style=solid];
m25_205 -> m25_202  [key=0, style=bold, color=blue];
m25_208 -> m25_206  [key=0, style=bold, color=blue];
m25_213 -> m25_214  [key=0, style=solid];
m25_213 -> m25_218  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_214 -> m25_215  [key=0, style=solid];
m25_214 -> m25_3  [key=2, style=dotted];
m25_214 -> m25_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_218 -> m25_219  [key=0, style=solid];
m25_218 -> m25_209  [key=2, style=dotted];
m25_215 -> m25_216  [key=0, style=solid];
m25_215 -> m25_33  [key=2, style=dotted];
m25_217 -> m25_218  [key=0, style=solid];
m25_216 -> m25_213  [key=0, style=bold, color=blue];
m25_219 -> m25_217  [key=0, style=bold, color=blue];
m25_223 -> m25_224  [key=0, style=solid];
m25_224 -> m25_225  [key=0, style=solid];
m25_224 -> m25_209  [key=2, style=dotted];
m25_225 -> m25_226  [key=0, style=solid];
m25_225 -> m25_113  [key=2, style=dotted];
m25_226 -> m25_223  [key=0, style=bold, color=blue];
m25_232 -> m25_233  [key=0, style=solid];
m25_232 -> m25_3  [key=2, style=dotted];
m25_232 -> m25_80  [key=2, style=dotted];
m25_231 -> m25_232  [key=0, style=solid];
m25_231 -> m25_233  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_233 -> m25_234  [key=0, style=solid];
m25_233 -> m25_81  [key=2, style=dotted];
m25_233 -> m25_236  [key=2, style=dotted];
m25_234 -> m25_235  [key=0, style=solid];
m25_234 -> m25_33  [key=2, style=dotted];
m25_235 -> m25_231  [key=0, style=bold, color=blue];
m25_240 -> m25_241  [key=0, style=solid];
m25_240 -> m25_245  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_241 -> m25_242  [key=0, style=solid];
m25_241 -> m25_3  [key=2, style=dotted];
m25_241 -> m25_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_245 -> m25_246  [key=0, style=solid];
m25_245 -> m25_247  [key=2, style=dotted];
m25_242 -> m25_243  [key=0, style=solid];
m25_242 -> m25_33  [key=2, style=dotted];
m25_244 -> m25_245  [key=0, style=solid];
m25_243 -> m25_240  [key=0, style=bold, color=blue];
m25_246 -> m25_244  [key=0, style=bold, color=blue];
m25_251 -> m25_252  [key=0, style=solid];
m25_251 -> m25_256  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_252 -> m25_253  [key=0, style=solid];
m25_252 -> m25_3  [key=2, style=dotted];
m25_252 -> m25_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_256 -> m25_257  [key=0, style=solid];
m25_256 -> m25_247  [key=2, style=dotted];
m25_253 -> m25_254  [key=0, style=solid];
m25_253 -> m25_33  [key=2, style=dotted];
m25_255 -> m25_256  [key=0, style=solid];
m25_254 -> m25_251  [key=0, style=bold, color=blue];
m25_257 -> m25_255  [key=0, style=bold, color=blue];
m25_263 -> m25_264  [key=0, style=solid];
m25_263 -> m25_268  [key=2, style=dotted];
m25_262 -> m25_263  [key=0, style=solid];
m25_262 -> m25_264  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_262 -> m25_265  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_264 -> m25_265  [key=0, style=solid];
m25_264 -> m25_247  [key=2, style=dotted];
m25_265 -> m25_266  [key=0, style=solid];
m25_265 -> m25_3  [key=2, style=dotted];
m25_265 -> m25_80  [key=2, style=dotted];
m25_266 -> m25_267  [key=0, style=solid];
m25_266 -> m25_33  [key=2, style=dotted];
m25_267 -> m25_262  [key=0, style=bold, color=blue];
m25_274 -> m25_275  [key=0, style=solid];
m25_274 -> m25_268  [key=2, style=dotted];
m25_273 -> m25_274  [key=0, style=solid];
m25_273 -> m25_275  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_273 -> m25_276  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_275 -> m25_276  [key=0, style=solid];
m25_275 -> m25_247  [key=2, style=dotted];
m25_276 -> m25_277  [key=0, style=solid];
m25_276 -> m25_3  [key=2, style=dotted];
m25_276 -> m25_80  [key=2, style=dotted];
m25_277 -> m25_278  [key=0, style=solid];
m25_277 -> m25_33  [key=2, style=dotted];
m25_278 -> m25_273  [key=0, style=bold, color=blue];
m25_282 -> m25_283  [key=0, style=solid];
m25_282 -> m25_287  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_283 -> m25_284  [key=0, style=solid];
m25_283 -> m25_3  [key=2, style=dotted];
m25_283 -> m25_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_287 -> m25_288  [key=0, style=solid];
m25_287 -> m25_289  [key=2, style=dotted];
m25_284 -> m25_285  [key=0, style=solid];
m25_284 -> m25_33  [key=2, style=dotted];
m25_286 -> m25_287  [key=0, style=solid];
m25_285 -> m25_282  [key=0, style=bold, color=blue];
m25_288 -> m25_286  [key=0, style=bold, color=blue];
m25_293 -> m25_294  [key=0, style=solid];
m25_293 -> m25_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_294 -> m25_295  [key=0, style=solid];
m25_294 -> m25_3  [key=2, style=dotted];
m25_294 -> m25_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_297 -> m25_298  [key=0, style=solid];
m25_297 -> m25_289  [key=2, style=dotted];
m25_295 -> m25_293  [key=0, style=bold, color=blue];
m25_296 -> m25_297  [key=0, style=solid];
m25_298 -> m25_296  [key=0, style=bold, color=blue];
m25_302 -> m25_303  [key=0, style=solid];
m25_303 -> m25_304  [key=0, style=solid];
m25_303 -> m25_289  [key=2, style=dotted];
m25_304 -> m25_305  [key=0, style=solid];
m25_304 -> m25_113  [key=2, style=dotted];
m25_305 -> m25_302  [key=0, style=bold, color=blue];
m25_311 -> m25_312  [key=0, style=solid];
m25_311 -> m25_268  [key=2, style=dotted];
m25_310 -> m25_311  [key=0, style=solid];
m25_310 -> m25_312  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_312 -> m25_313  [key=0, style=solid];
m25_312 -> m25_289  [key=2, style=dotted];
m25_313 -> m25_314  [key=0, style=solid];
m25_313 -> m25_33  [key=2, style=dotted];
m25_314 -> m25_310  [key=0, style=bold, color=blue];
m25_318 -> m25_319  [key=0, style=solid];
m25_318 -> m25_323  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_319 -> m25_320  [key=0, style=solid];
m25_319 -> m25_3  [key=2, style=dotted];
m25_319 -> m25_322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_323 -> m25_324  [key=0, style=solid];
m25_323 -> m25_325  [key=2, style=dotted];
m25_323 -> m25_326  [key=2, style=dotted];
m25_320 -> m25_321  [key=0, style=solid];
m25_320 -> m25_33  [key=2, style=dotted];
m25_322 -> m25_323  [key=0, style=solid];
m25_321 -> m25_318  [key=0, style=bold, color=blue];
m25_324 -> m25_322  [key=0, style=bold, color=blue];
m25_330 -> m25_331  [key=0, style=solid];
m25_330 -> m25_335  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_331 -> m25_332  [key=0, style=solid];
m25_331 -> m25_3  [key=2, style=dotted];
m25_331 -> m25_334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_335 -> m25_336  [key=0, style=solid];
m25_335 -> m25_326  [key=2, style=dotted];
m25_332 -> m25_333  [key=0, style=solid];
m25_332 -> m25_33  [key=2, style=dotted];
m25_334 -> m25_335  [key=0, style=solid];
m25_333 -> m25_330  [key=0, style=bold, color=blue];
m25_336 -> m25_334  [key=0, style=bold, color=blue];
m25_340 -> m25_341  [key=0, style=solid];
m25_340 -> m25_342  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_340 -> m25_343  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_340 -> m25_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_340 -> m25_349  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_341 -> m25_342  [key=0, style=solid];
m25_341 -> m25_325  [key=2, style=dotted];
m25_342 -> m25_343  [key=0, style=solid];
m25_342 -> m25_326  [key=2, style=dotted];
m25_343 -> m25_344  [key=0, style=solid];
m25_343 -> m25_79  [key=2, style=dotted];
m25_343 -> m25_80  [key=2, style=dotted];
m25_343 -> m25_345  [key=1, style=dashed, color=darkseagreen4, label=server];
m25_343 -> m25_346  [key=1, style=dashed, color=darkseagreen4, label=server];
m25_348 -> m25_349  [key=0, style=solid];
m25_348 -> m25_326  [key=2, style=dotted];
m25_349 -> m25_350  [key=0, style=solid];
m25_349 -> m25_79  [key=2, style=dotted];
m25_349 -> m25_80  [key=2, style=dotted];
m25_349 -> m25_351  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m25_344 -> m25_345  [key=0, style=solid];
m25_344 -> m25_33  [key=2, style=dotted];
m25_345 -> m25_346  [key=0, style=solid];
m25_345 -> m25_353  [key=2, style=dotted];
m25_345 -> m25_85  [key=2, style=dotted];
m25_346 -> m25_347  [key=0, style=solid];
m25_346 -> m25_113  [key=2, style=dotted];
m25_347 -> m25_348  [key=0, style=solid];
m25_347 -> m25_325  [key=2, style=dotted];
m25_350 -> m25_351  [key=0, style=solid];
m25_350 -> m25_33  [key=2, style=dotted];
m25_351 -> m25_352  [key=0, style=solid];
m25_351 -> m25_354  [key=2, style=dotted];
m25_352 -> m25_340  [key=0, style=bold, color=blue];
m25_358 -> m25_359  [key=0, style=solid];
m25_358 -> m25_362  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_359 -> m25_360  [key=0, style=solid];
m25_359 -> m25_3  [key=2, style=dotted];
m25_359 -> m25_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_362 -> m25_363  [key=0, style=solid];
m25_362 -> m25_364  [key=2, style=dotted];
m25_360 -> m25_358  [key=0, style=bold, color=blue];
m25_361 -> m25_362  [key=0, style=solid];
m25_363 -> m25_361  [key=0, style=bold, color=blue];
m25_370 -> m25_371  [key=0, style=solid];
m25_370 -> m25_268  [key=2, style=dotted];
m25_369 -> m25_370  [key=0, style=solid];
m25_369 -> m25_371  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_369 -> m25_372  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_371 -> m25_372  [key=0, style=solid];
m25_371 -> m25_364  [key=2, style=dotted];
m25_372 -> m25_373  [key=0, style=solid];
m25_372 -> m25_79  [key=2, style=dotted];
m25_372 -> m25_80  [key=2, style=dotted];
m25_373 -> m25_374  [key=0, style=solid];
m25_373 -> m25_375  [key=2, style=dotted];
m25_374 -> m25_369  [key=0, style=bold, color=blue];
m25_379 -> m25_380  [key=0, style=solid];
m25_379 -> m25_383  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_380 -> m25_381  [key=0, style=solid];
m25_380 -> m25_3  [key=2, style=dotted];
m25_380 -> m25_382  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_383 -> m25_384  [key=0, style=solid];
m25_383 -> m25_385  [key=2, style=dotted];
m25_381 -> m25_379  [key=0, style=bold, color=blue];
m25_382 -> m25_383  [key=0, style=solid];
m25_384 -> m25_382  [key=0, style=bold, color=blue];
m25_391 -> m25_392  [key=0, style=solid];
m25_391 -> m25_268  [key=2, style=dotted];
m25_390 -> m25_391  [key=0, style=solid];
m25_390 -> m25_392  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_390 -> m25_393  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m25_392 -> m25_393  [key=0, style=solid];
m25_392 -> m25_385  [key=2, style=dotted];
m25_393 -> m25_394  [key=0, style=solid];
m25_393 -> m25_79  [key=2, style=dotted];
m25_393 -> m25_86  [key=2, style=dotted];
m25_393 -> m25_397  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_393 -> m25_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_393 -> m25_395  [key=1, style=dashed, color=darkseagreen4, label=servers];
m25_394 -> m25_395  [key=0, style=solid];
m25_394 -> m25_17  [key=2, style=dotted];
m25_397 -> m25_398  [key=0, style=solid];
m25_400 -> m25_401  [key=0, style=solid];
m25_395 -> m25_396  [key=0, style=solid];
m25_395 -> m25_113  [key=2, style=dotted];
m25_396 -> m25_390  [key=0, style=bold, color=blue];
m25_398 -> m25_399  [key=0, style=solid];
m25_399 -> m25_397  [key=0, style=bold, color=blue];
m25_401 -> m25_402  [key=0, style=solid];
m25_402 -> m25_400  [key=0, style=bold, color=blue];
m25_406 -> m25_407  [key=0, style=solid];
m25_406 -> m25_410  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_407 -> m25_408  [key=0, style=solid];
m25_407 -> m25_3  [key=2, style=dotted];
m25_407 -> m25_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_410 -> m25_411  [key=0, style=solid];
m25_410 -> m25_412  [key=2, style=dotted];
m25_410 -> m25_413  [key=2, style=dotted];
m25_408 -> m25_406  [key=0, style=bold, color=blue];
m25_409 -> m25_410  [key=0, style=solid];
m25_411 -> m25_409  [key=0, style=bold, color=blue];
m25_419 -> m25_420  [key=0, style=solid];
m25_419 -> m25_84  [key=2, style=dotted];
m25_419 -> m25_424  [key=2, style=dotted];
m25_419 -> m25_268  [key=2, style=dotted];
m25_420 -> m25_421  [key=0, style=solid];
m25_420 -> m25_425  [key=2, style=dotted];
m25_420 -> m25_413  [key=2, style=dotted];
m25_421 -> m25_422  [key=0, style=solid];
m25_421 -> m25_79  [key=2, style=dotted];
m25_421 -> m25_80  [key=2, style=dotted];
m25_422 -> m25_423  [key=0, style=solid];
m25_422 -> m25_33  [key=2, style=dotted];
m25_423 -> m25_418  [key=0, style=bold, color=blue];
m25_188 -> m25_189  [key=0, style=solid];
m25_189 -> m25_190  [key=0, style=solid];
m25_189 -> m25_193  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_190 -> m25_191  [key=0, style=solid];
m25_190 -> m25_57  [key=2, style=dotted];
m25_190 -> m25_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_191 -> m25_188  [key=0, style=bold, color=blue];
m25_96 -> m25_97  [key=0, style=solid, color=red];
m25_96 -> m25_43  [key=2, style=dotted];
m25_97 -> m25_98  [key=0, style=solid, color=red];
m25_97 -> m25_11  [key=2, style=dotted, color=red];
m25_97 -> m25_99  [key=1, style=dashed, color=red, label="lambda expression"];
m25_97 -> m25_26  [key=2, style=dotted];
m25_98 -> m25_96  [key=0, style=bold, color=blue];
m25_98 -> m25_90  [key=0, style=bold, color=blue];
m25_355 -> m25_356  [key=0, style=solid];
m25_356 -> m25_357  [key=0, style=solid];
m25_356 -> m25_11  [key=2, style=dotted];
m25_356 -> m25_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_357 -> m25_355  [key=0, style=bold, color=blue];
m25_176 -> m25_177  [key=0, style=solid];
m25_177 -> m25_178  [key=0, style=solid];
m25_177 -> m25_181  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_178 -> m25_179  [key=0, style=solid];
m25_178 -> m25_57  [key=2, style=dotted];
m25_178 -> m25_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_179 -> m25_176  [key=0, style=bold, color=blue];
m25_8 -> m25_9  [key=0, style=solid, color=red];
m25_9 -> m25_10  [key=0, style=solid, color=red];
m25_9 -> m25_11  [key=2, style=dotted, color=red];
m25_9 -> m25_12  [key=1, style=dashed, color=red, label="lambda expression"];
m25_10 -> m25_8  [key=0, style=bold, color=blue];
m25_33 -> m25_30  [key=0, style=bold, color=blue];
m25_315 -> m25_316  [key=0, style=solid];
m25_316 -> m25_317  [key=0, style=solid];
m25_316 -> m25_11  [key=2, style=dotted];
m25_316 -> m25_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_317 -> m25_315  [key=0, style=bold, color=blue];
m25_220 -> m25_221  [key=0, style=solid];
m25_221 -> m25_222  [key=0, style=solid];
m25_221 -> m25_11  [key=2, style=dotted];
m25_221 -> m25_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_222 -> m25_220  [key=0, style=bold, color=blue];
m25_290 -> m25_291  [key=0, style=solid];
m25_291 -> m25_292  [key=0, style=solid];
m25_291 -> m25_11  [key=2, style=dotted];
m25_291 -> m25_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_292 -> m25_290  [key=0, style=bold, color=blue];
m25_39 -> m25_40  [key=0, style=solid, color=green];
m25_39 -> m25_43  [key=2, style=dotted, color=green];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_11  [key=2, style=dotted];
m25_40 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_40 -> m25_26  [key=2, style=dotted];
m25_41 -> m25_39  [key=0, style=bold, color=blue];
m25_41 -> m25_35  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid, color=red];
m25_1 -> m25_2  [key=0, style=solid, color=red];
m25_1 -> m25_3  [key=2, style=dotted, color=red];
m25_1 -> m25_4  [key=1, style=dashed, color=red, label="lambda expression"];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_414 -> m25_415  [key=0, style=solid];
m25_415 -> m25_416  [key=0, style=solid];
m25_415 -> m25_419  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_416 -> m25_417  [key=0, style=solid];
m25_416 -> m25_57  [key=2, style=dotted];
m25_416 -> m25_418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_417 -> m25_414  [key=0, style=bold, color=blue];
m25_403 -> m25_404  [key=0, style=solid];
m25_404 -> m25_405  [key=0, style=solid];
m25_404 -> m25_11  [key=2, style=dotted];
m25_404 -> m25_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_405 -> m25_403  [key=0, style=bold, color=blue];
m25_165 -> m25_166  [key=0, style=solid];
m25_166 -> m25_167  [key=0, style=solid];
m25_166 -> m25_170  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_167 -> m25_168  [key=0, style=solid];
m25_167 -> m25_57  [key=2, style=dotted];
m25_167 -> m25_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_168 -> m25_165  [key=0, style=bold, color=blue];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_22  [key=2, style=dotted];
m25_53 -> m25_438  [key=0, style=solid];
m25_438 -> m25_53  [key=0, style=bold, color=blue];
m25_299 -> m25_300  [key=0, style=solid];
m25_300 -> m25_301  [key=0, style=solid];
m25_300 -> m25_11  [key=2, style=dotted];
m25_300 -> m25_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_301 -> m25_299  [key=0, style=bold, color=blue];
m25_327 -> m25_328  [key=0, style=solid];
m25_328 -> m25_329  [key=0, style=solid];
m25_328 -> m25_11  [key=2, style=dotted];
m25_328 -> m25_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_329 -> m25_327  [key=0, style=bold, color=blue];
m25_433 -> m25_434  [key=0, style=solid];
m25_433 -> m25_435  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerConnection>"];
m25_434 -> m25_435  [key=0, style=solid];
m25_434 -> m25_7  [key=2, style=dotted];
m25_434 -> m25_431  [key=2, style=dotted];
m25_435 -> m25_436  [key=0, style=solid];
m25_435 -> m25_437  [key=2, style=dotted];
m25_436 -> m25_433  [key=0, style=bold, color=blue];
m25_426 -> m25_427  [key=0, style=solid];
m25_426 -> m25_429  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, HangFire.SqlServer.SqlServerConnection>"];
m25_427 -> m25_428  [key=0, style=solid];
m25_427 -> m25_431  [key=2, style=dotted];
m25_427 -> m25_429  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m25_429 -> m25_430  [key=0, style=solid];
m25_429 -> m25_432  [key=2, style=dotted];
m25_428 -> m25_429  [key=0, style=solid];
m25_428 -> m25_7  [key=2, style=dotted];
m25_430 -> m25_426  [key=0, style=bold, color=blue];
m25_248 -> m25_249  [key=0, style=solid];
m25_249 -> m25_250  [key=0, style=solid];
m25_249 -> m25_11  [key=2, style=dotted];
m25_249 -> m25_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_250 -> m25_248  [key=0, style=bold, color=blue];
m25_227 -> m25_228  [key=0, style=solid];
m25_228 -> m25_229  [key=0, style=solid];
m25_228 -> m25_232  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_229 -> m25_230  [key=0, style=solid];
m25_229 -> m25_57  [key=2, style=dotted];
m25_229 -> m25_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_230 -> m25_227  [key=0, style=bold, color=blue];
m25_134 -> m25_135  [key=0, style=solid];
m25_135 -> m25_136  [key=0, style=solid];
m25_135 -> m25_139  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_136 -> m25_137  [key=0, style=solid];
m25_136 -> m25_57  [key=2, style=dotted];
m25_136 -> m25_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_137 -> m25_134  [key=0, style=bold, color=blue];
m25_155 -> m25_156  [key=0, style=solid];
m25_156 -> m25_157  [key=0, style=solid];
m25_156 -> m25_11  [key=2, style=dotted];
m25_156 -> m25_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_157 -> m25_155  [key=0, style=bold, color=blue];
m25_108 -> m25_106  [key=0, style=bold, color=blue];
m25_108 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_108 -> m25_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.SucceededStateFeature"];
m25_210 -> m25_211  [key=0, style=solid];
m25_211 -> m25_212  [key=0, style=solid];
m25_211 -> m25_11  [key=2, style=dotted];
m25_211 -> m25_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_212 -> m25_210  [key=0, style=bold, color=blue];
m25_439 -> m25_9  [key=1, style=dashed, color=red, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_55  [key=1, style=dashed, color=red, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_97  [key=1, style=dashed, color=red, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_145  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_178  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_190  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_221  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_238  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_249  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_260  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_280  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_291  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_300  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_308  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_316  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_328  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_338  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_356  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_367  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_377  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_388  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_404  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_439 -> m25_416  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.ConnectionFacts"];
m25_440 -> m25_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_441 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_442 -> m25_103  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerConnection"];
m25_443 -> m25_120  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_444 -> m25_139  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_445 -> m25_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_446 -> m25_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_447 -> m25_170  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_448 -> m25_181  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_449 -> m25_193  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_450 -> m25_207  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_451 -> m25_218  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_452 -> m25_232  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_453 -> m25_245  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_454 -> m25_256  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_455 -> m25_263  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_456 -> m25_274  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_457 -> m25_287  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_458 -> m25_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_459 -> m25_311  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_460 -> m25_323  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_461 -> m25_335  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_462 -> m25_362  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_463 -> m25_370  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_464 -> m25_383  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_465 -> m25_391  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m25_466 -> m25_410  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m25_467 -> m25_419  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m26_16 -> m26_17  [key=0, style=solid, color=green];
m26_16 -> m26_37  [key=2, style=dotted, color=green];
m26_16 -> m26_38  [key=2, style=dotted, color=green];
m26_16 -> m26_39  [key=2, style=dotted, color=green];
m26_16 -> m26_40  [key=2, style=dotted, color=green];
m26_17 -> m26_18  [key=0, style=solid, color=green];
m26_17 -> m26_10  [key=2, style=dotted, color=red];
m26_17 -> m26_31  [key=2, style=dotted, color=green];
m26_18 -> m26_16  [key=0, style=bold, color=blue];
m26_18 -> m26_19  [key=0, style=solid, color=green];
m26_18 -> m26_41  [key=2, style=dotted, color=green];
m26_18 -> m26_36  [key=2, style=dotted, color=green];
m26_4 -> m26_5  [key=0, style=solid, color=green];
m26_4 -> m26_33  [key=2, style=dotted, color=green];
m26_5 -> m26_6  [key=0, style=solid, color=green];
m26_5 -> m26_8  [key=2, style=dotted, color=red];
m26_5 -> m26_34  [key=2, style=dotted, color=green];
m26_5 -> m26_7  [key=1, style=dashed, color=green, label=servers];
m26_5 -> m26_10  [key=1, style=dashed, color=green, label=servers];
m26_6 -> m26_7  [key=0, style=solid, color=green];
m26_6 -> m26_9  [key=2, style=dotted, color=red];
m26_6 -> m26_31  [key=2, style=dotted, color=green];
m26_7 -> m26_4  [key=0, style=bold, color=blue];
m26_7 -> m26_8  [key=0, style=solid, color=green];
m26_7 -> m26_9  [key=0, style=solid, color=green];
m26_0 -> m26_1  [key=0, style=solid, color=green];
m26_1 -> m26_2  [key=0, style=solid, color=green];
m26_1 -> m26_31  [key=2, style=dotted, color=green];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m26_2 -> m26_3  [key=0, style=solid, color=green];
m26_2 -> m26_32  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid, color=green];
m26_3 -> m26_2  [key=0, style=bold, color=blue];
m26_10 -> m26_11  [key=0, style=solid, color=red];
m26_10 -> m26_29  [key=0, style=solid, color=green];
m26_10 -> m26_12  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_14  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_16  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_18  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_20  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_22  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_24  [key=1, style=dashed, color=green, label=server];
m26_10 -> m26_26  [key=1, style=dashed, color=green, label=server];
m26_8 -> m26_30  [key=0, style=solid, color=green];
m26_8 -> m26_31  [key=2, style=dotted, color=green];
m26_9 -> m26_10  [key=0, style=solid, color=green];
m26_9 -> m26_31  [key=2, style=dotted, color=green];
m26_28 -> m26_10  [key=0, style=solid, color=green];
m26_28 -> m26_31  [key=2, style=dotted, color=green];
m26_11 -> m26_12  [key=0, style=solid, color=red];
m26_11 -> m26_31  [key=2, style=dotted, color=green];
m26_11 -> m26_14  [key=2, style=dotted, color=red];
m26_29 -> m26_30  [key=0, style=solid, color=green];
m26_29 -> m26_31  [key=2, style=dotted, color=green];
m26_12 -> m26_13  [key=0, style=solid, color=red];
m26_12 -> m26_35  [key=2, style=dotted, color=green];
m26_12 -> m26_36  [key=2, style=dotted, color=green];
m26_12 -> m26_15  [key=2, style=dotted, color=red];
m26_14 -> m26_15  [key=0, style=solid, color=green];
m26_14 -> m26_36  [key=2, style=dotted, color=green];
m26_20 -> m26_21  [key=0, style=solid, color=green];
m26_20 -> m26_36  [key=2, style=dotted, color=green];
m26_22 -> m26_23  [key=0, style=solid, color=green];
m26_22 -> m26_28  [key=0, style=solid, color=green];
m26_24 -> m26_25  [key=0, style=solid, color=green];
m26_24 -> m26_41  [key=2, style=dotted, color=green];
m26_24 -> m26_36  [key=2, style=dotted, color=green];
m26_26 -> m26_27  [key=0, style=solid, color=green];
m26_26 -> m26_36  [key=2, style=dotted, color=green];
m26_13 -> m26_14  [key=0, style=solid, color=green];
m26_13 -> m26_31  [key=2, style=dotted, color=green];
m26_13 -> m26_10  [key=0, style=bold, color=blue];
m26_15 -> m26_16  [key=0, style=solid, color=green];
m26_15 -> m26_31  [key=2, style=dotted, color=green];
m26_19 -> m26_20  [key=0, style=solid, color=green];
m26_19 -> m26_31  [key=2, style=dotted, color=green];
m26_19 -> m26_5  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m26_19 -> m26_6  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m26_19 -> m26_11  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m26_19 -> m26_12  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m26_19 -> m26_17  [key=1, style=dashed, color=red, label="HangFire.Web.AspNetBackgroundJobServer"];
m26_21 -> m26_22  [key=0, style=solid, color=green];
m26_21 -> m26_31  [key=2, style=dotted, color=green];
m26_23 -> m26_24  [key=0, style=solid, color=green];
m26_23 -> m26_31  [key=2, style=dotted, color=green];
m26_25 -> m26_26  [key=0, style=solid, color=green];
m26_25 -> m26_31  [key=2, style=dotted, color=green];
m26_27 -> m26_28  [key=0, style=solid, color=green];
m26_27 -> m26_31  [key=2, style=dotted, color=green];
m26_30 -> m26_0  [key=0, style=bold, color=blue];
m26_42 -> m26_1  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_6  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_8  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_9  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_11  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_29  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_12  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_14  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_18  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_20  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_24  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_26  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_13  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_17  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_19  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_21  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_23  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_28  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_25  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_27  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.ServersPage"];
m26_42 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.ServersPage"];
m27_14 -> m27_15  [key=0, style=solid];
m27_109 -> m27_110  [key=0, style=solid];
m27_111 -> m27_112  [key=0, style=solid, color=green];
m27_111 -> m27_50  [key=2, style=dotted, color=green];
m27_111 -> m27_116  [key=1, style=dashed, color=green, label="lambda expression"];
m27_110 -> m27_111  [key=0, style=solid, color=green];
m27_110 -> m27_23  [key=2, style=dotted];
m27_110 -> m27_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_112 -> m27_109  [key=0, style=bold, color=blue];
m27_227 -> m27_228  [key=0, style=solid];
m27_229 -> m27_50  [key=2, style=dotted];
m27_229 -> m27_230  [key=0, style=solid];
m27_229 -> m27_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_228 -> m27_229  [key=0, style=solid];
m27_228 -> m27_215  [key=2, style=dotted];
m27_228 -> m27_231  [key=2, style=dotted];
m27_228 -> m27_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_230 -> m27_227  [key=0, style=bold, color=blue];
m27_47 -> m27_48  [key=0, style=solid, color=green];
m27_47 -> m27_23  [key=2, style=dotted, color=green];
m27_47 -> m27_51  [key=1, style=dashed, color=green, label="lambda expression"];
m27_16 -> m27_17  [key=0, style=solid, color=red];
m27_16 -> m27_20  [key=2, style=dotted, color=red];
m27_16 -> m27_18  [key=1, style=dashed, color=red, label=connection];
m27_17 -> m27_18  [key=0, style=solid, color=red];
m27_17 -> m27_21  [key=2, style=dotted, color=red];
m27_17 -> m27_22  [key=2, style=dotted];
m27_17 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_18 -> m27_23  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_18 -> m27_22  [key=2, style=dotted];
m27_19 -> m27_24  [key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_15  [key=0, style=bold, color=blue];
m27_20 -> m27_16  [key=0, style=bold, color=blue];
m27_130 -> m27_252  [key=0, style=solid];
m27_252 -> m27_130  [key=0, style=bold, color=blue];
m27_174 -> m27_248  [key=0, style=solid];
m27_248 -> m27_174  [key=0, style=bold, color=blue];
m27_15 -> m27_16  [key=0, style=solid, color=red];
m27_15 -> m27_17  [key=1, style=dashed, color=red, label="System.Threading.CancellationToken"];
m27_15 -> m27_13  [key=0, style=bold, color=blue];
m27_45 -> m27_246  [key=0, style=solid];
m27_40 -> m27_23  [key=2, style=dotted];
m27_40 -> m27_28  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_33 -> m27_34  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid, color=red];
m27_35 -> m27_38  [key=2, style=dotted, color=green];
m27_35 -> m27_42  [key=1, style=dashed, color=green, label="lambda expression"];
m27_34 -> m27_35  [key=0, style=solid, color=green];
m27_34 -> m27_21  [key=2, style=dotted];
m27_34 -> m27_22  [key=2, style=dotted];
m27_34 -> m27_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_34 -> m27_37  [key=0, style=solid];
m27_34 -> m27_47  [key=2, style=dotted];
m27_36 -> m27_37  [key=0, style=solid, color=red];
m27_36 -> m27_24  [key=2, style=dotted];
m27_36 -> m27_47  [key=2, style=dotted, color=red];
m27_37 -> m27_33  [key=0, style=bold, color=blue];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_41  [key=2, style=dotted];
m27_32 -> m27_244  [key=0, style=solid];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_35  [key=0, style=solid];
m27_32 -> m27_37  [key=0, style=solid];
m27_32 -> m27_46  [key=2, style=dotted];
m27_244 -> m27_32  [key=0, style=bold, color=blue];
m27_76 -> m27_77  [key=0, style=solid];
m27_77 -> m27_23  [key=2, style=dotted];
m27_77 -> m27_78  [key=0, style=solid];
m27_77 -> m27_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_78 -> m27_50  [key=2, style=dotted];
m27_78 -> m27_79  [key=0, style=solid];
m27_78 -> m27_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_79 -> m27_76  [key=0, style=bold, color=blue];
m27_9 -> m27_10  [key=0, style=solid, color=red];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_9  [key=0, style=solid];
m27_42 -> m27_43  [key=0, style=solid, color=green];
m27_158 -> m27_247  [key=0, style=solid];
m27_247 -> m27_158  [key=0, style=bold, color=blue];
m27_41 -> m27_39  [key=0, style=bold, color=blue];
m27_46 -> m27_47  [key=0, style=solid, color=green];
m27_48 -> m27_49  [key=0, style=solid, color=green];
m27_48 -> m27_50  [key=2, style=dotted, color=green];
m27_48 -> m27_54  [key=1, style=dashed, color=green, label="lambda expression"];
m27_48 -> m27_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m27_48 -> m27_10  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m27_48 -> m27_11  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m27_48 -> m27_12  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m27_48 -> m27_16  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m27_48 -> m27_17  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m27_48 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m27_48 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m27_48 -> m27_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m27_48 -> m27_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m27_49 -> m27_46  [key=0, style=bold, color=blue];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_39  [key=2, style=dotted];
m27_23 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m27_23 -> m27_37  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m27_198 -> m27_199  [key=0, style=solid, color=green];
m27_199 -> m27_200  [key=0, style=solid, color=green];
m27_199 -> m27_126  [key=2, style=dotted, color=green];
m27_199 -> m27_202  [key=1, style=dashed, color=green, label="lambda expression"];
m27_200 -> m27_201  [key=0, style=solid, color=green];
m27_200 -> m27_50  [key=2, style=dotted, color=green];
m27_200 -> m27_205  [key=1, style=dashed, color=green, label="lambda expression"];
m27_201 -> m27_198  [key=0, style=bold, color=blue];
m27_44 -> m27_42  [key=0, style=bold, color=blue];
m27_43 -> m27_44  [key=0, style=solid, color=green];
m27_43 -> m27_45  [key=2, style=dotted, color=green];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_40  [key=2, style=dotted];
m27_122 -> m27_123  [key=0, style=solid];
m27_124 -> m27_50  [key=2, style=dotted];
m27_124 -> m27_125  [key=0, style=solid];
m27_124 -> m27_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_123 -> m27_126  [key=2, style=dotted];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_125 -> m27_122  [key=0, style=bold, color=blue];
m27_99 -> m27_251  [key=0, style=solid];
m27_251 -> m27_99  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_3  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m27_0 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m27_0 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m27_0 -> m27_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m27_0 -> m27_10  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m27_0 -> m27_11  [key=1, style=dashed, color=red, label="HangFire.Server.IJobPerformanceProcess"];
m27_0 -> m27_12  [key=1, style=dashed, color=red, label="HangFire.States.IStateMachineFactory"];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=0, style=solid, color=red];
m27_1 -> m27_7  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid, color=red];
m27_3 -> m27_5  [key=0, style=solid, color=red];
m27_3 -> m27_8  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_7  [key=0, style=solid];
m27_5 -> m27_9  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid, color=red];
m27_11 -> m27_12  [key=0, style=solid, color=red];
m27_12 -> m27_13  [key=0, style=solid, color=red];
m27_12 -> m27_10  [key=0, style=bold, color=blue];
m27_2 -> m27_13  [key=0, style=solid];
m27_2 -> m27_14  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_4 -> m27_13  [key=0, style=solid, color=red];
m27_4 -> m27_14  [key=2, style=dotted, color=red];
m27_4 -> m27_5  [key=0, style=solid];
m27_6 -> m27_13  [key=0, style=solid];
m27_6 -> m27_14  [key=2, style=dotted];
m27_6 -> m27_0  [key=0, style=bold, color=blue];
m27_8 -> m27_13  [key=0, style=solid];
m27_8 -> m27_14  [key=2, style=dotted];
m27_13 -> m27_0  [key=0, style=bold, color=blue];
m27_13 -> m27_14  [key=0, style=solid];
m27_246 -> m27_45  [key=0, style=bold, color=blue];
m27_39 -> m27_40  [key=0, style=solid];
m27_184 -> m27_249  [key=0, style=solid, color=green];
m27_249 -> m27_250  [key=0, style=solid, color=green];
m27_250 -> m27_184  [key=0, style=bold, color=blue];
m27_137 -> m27_138  [key=0, style=solid];
m27_138 -> m27_23  [key=2, style=dotted];
m27_138 -> m27_139  [key=0, style=solid];
m27_138 -> m27_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_139 -> m27_50  [key=2, style=dotted];
m27_139 -> m27_140  [key=0, style=solid];
m27_139 -> m27_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_140 -> m27_137  [key=0, style=bold, color=blue];
m27_92 -> m27_93  [key=0, style=solid];
m27_93 -> m27_23  [key=2, style=dotted];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_94 -> m27_50  [key=2, style=dotted];
m27_94 -> m27_95  [key=0, style=solid];
m27_94 -> m27_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_95 -> m27_92  [key=0, style=bold, color=blue];
m27_175 -> m27_176  [key=0, style=solid];
m27_177 -> m27_180  [key=2, style=dotted];
m27_177 -> m27_178  [key=0, style=solid];
m27_177 -> m27_181  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_176 -> m27_177  [key=0, style=solid];
m27_178 -> m27_179  [key=0, style=solid];
m27_178 -> m27_170  [key=2, style=dotted];
m27_179 -> m27_175  [key=0, style=bold, color=blue];
m27_211 -> m27_212  [key=0, style=solid];
m27_213 -> m27_50  [key=2, style=dotted];
m27_213 -> m27_214  [key=0, style=solid];
m27_213 -> m27_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_212 -> m27_213  [key=0, style=solid];
m27_212 -> m27_215  [key=2, style=dotted];
m27_212 -> m27_216  [key=2, style=dotted];
m27_212 -> m27_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_214 -> m27_211  [key=0, style=bold, color=blue];
m27_127 -> m27_128  [key=0, style=solid];
m27_51 -> m27_52  [key=0, style=solid, color=green];
m27_54 -> m27_55  [key=0, style=solid, color=green];
m27_52 -> m27_53  [key=0, style=solid, color=green];
m27_52 -> m27_32  [key=2, style=dotted, color=green];
m27_53 -> m27_51  [key=0, style=bold, color=blue];
m27_55 -> m27_56  [key=0, style=solid, color=green];
m27_55 -> m27_23  [key=2, style=dotted, color=green];
m27_55 -> m27_28  [key=2, style=dotted, color=green];
m27_55 -> m27_57  [key=1, style=dashed, color=green, label="lambda expression"];
m27_56 -> m27_54  [key=0, style=bold, color=blue];
m27_57 -> m27_58  [key=0, style=solid];
m27_116 -> m27_117  [key=0, style=solid, color=green];
m27_117 -> m27_118  [key=0, style=solid, color=green];
m27_117 -> m27_23  [key=2, style=dotted, color=green];
m27_117 -> m27_28  [key=2, style=dotted, color=green];
m27_117 -> m27_119  [key=1, style=dashed, color=green, label="lambda expression"];
m27_118 -> m27_116  [key=0, style=bold, color=blue];
m27_119 -> m27_120  [key=0, style=solid];
m27_189 -> m27_190  [key=0, style=solid, color=green];
m27_192 -> m27_193  [key=0, style=solid, color=green];
m27_190 -> m27_191  [key=0, style=solid, color=green];
m27_190 -> m27_32  [key=2, style=dotted, color=green];
m27_191 -> m27_189  [key=0, style=bold, color=blue];
m27_193 -> m27_194  [key=0, style=solid, color=green];
m27_193 -> m27_23  [key=2, style=dotted, color=green];
m27_193 -> m27_28  [key=2, style=dotted, color=green];
m27_193 -> m27_195  [key=1, style=dashed, color=green, label="lambda expression"];
m27_194 -> m27_192  [key=0, style=bold, color=blue];
m27_195 -> m27_196  [key=0, style=solid, color=green];
m27_196 -> m27_197  [key=0, style=solid, color=green];
m27_197 -> m27_195  [key=0, style=bold, color=blue];
m27_202 -> m27_203  [key=0, style=solid, color=green];
m27_205 -> m27_206  [key=0, style=solid, color=green];
m27_203 -> m27_204  [key=0, style=solid, color=green];
m27_203 -> m27_45  [key=2, style=dotted, color=green];
m27_204 -> m27_202  [key=0, style=bold, color=blue];
m27_206 -> m27_207  [key=0, style=solid, color=green];
m27_206 -> m27_23  [key=2, style=dotted, color=green];
m27_206 -> m27_28  [key=2, style=dotted, color=green];
m27_206 -> m27_208  [key=1, style=dashed, color=green, label="lambda expression"];
m27_207 -> m27_205  [key=0, style=bold, color=blue];
m27_208 -> m27_209  [key=0, style=solid, color=green];
m27_209 -> m27_210  [key=0, style=solid, color=green];
m27_210 -> m27_208  [key=0, style=bold, color=blue];
m27_58 -> m27_59  [key=0, style=solid];
m27_65 -> m27_45  [key=2, style=dotted];
m27_65 -> m27_66  [key=0, style=solid];
m27_233 -> m27_45  [key=2, style=dotted];
m27_233 -> m27_234  [key=0, style=solid];
m27_26 -> m27_23  [key=2, style=dotted];
m27_26 -> m27_28  [key=2, style=dotted];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_38  [key=0, style=solid];
m27_68 -> m27_23  [key=2, style=dotted];
m27_68 -> m27_28  [key=2, style=dotted];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_68 -> m27_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_84 -> m27_23  [key=2, style=dotted];
m27_84 -> m27_28  [key=2, style=dotted];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_84 -> m27_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_101 -> m27_23  [key=2, style=dotted];
m27_101 -> m27_28  [key=2, style=dotted];
m27_101 -> m27_102  [key=0, style=solid];
m27_101 -> m27_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_101 -> m27_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_132 -> m27_23  [key=2, style=dotted];
m27_132 -> m27_28  [key=2, style=dotted];
m27_132 -> m27_133  [key=0, style=solid];
m27_132 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_146 -> m27_23  [key=2, style=dotted];
m27_146 -> m27_28  [key=2, style=dotted];
m27_146 -> m27_147  [key=0, style=solid];
m27_146 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_160 -> m27_23  [key=2, style=dotted];
m27_160 -> m27_28  [key=2, style=dotted];
m27_160 -> m27_161  [key=0, style=solid];
m27_160 -> m27_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_221 -> m27_23  [key=2, style=dotted];
m27_221 -> m27_28  [key=2, style=dotted];
m27_221 -> m27_222  [key=0, style=solid];
m27_221 -> m27_223  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_236 -> m27_23  [key=2, style=dotted];
m27_236 -> m27_28  [key=2, style=dotted];
m27_236 -> m27_237  [key=0, style=solid];
m27_236 -> m27_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_30 -> m27_32  [key=2, style=dotted];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_44  [key=2, style=dotted];
m27_81 -> m27_32  [key=2, style=dotted];
m27_81 -> m27_82  [key=0, style=solid];
m27_114 -> m27_32  [key=2, style=dotted];
m27_114 -> m27_115  [key=0, style=solid];
m27_218 -> m27_32  [key=2, style=dotted];
m27_218 -> m27_219  [key=0, style=solid];
m27_59 -> m27_57  [key=0, style=bold, color=blue];
m27_113 -> m27_114  [key=0, style=solid];
m27_121 -> m27_119  [key=0, style=bold, color=blue];
m27_120 -> m27_121  [key=0, style=solid];
m27_182 -> m27_184  [key=2, style=dotted];
m27_182 -> m27_183  [key=0, style=solid];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_27  [key=0, style=solid];
m27_25 -> m27_41  [key=2, style=dotted];
m27_29 -> m27_30  [key=0, style=solid];
m27_29 -> m27_43  [key=2, style=dotted];
m27_64 -> m27_65  [key=0, style=solid];
m27_67 -> m27_68  [key=0, style=solid];
m27_80 -> m27_81  [key=0, style=solid];
m27_83 -> m27_84  [key=0, style=solid];
m27_96 -> m27_97  [key=0, style=solid];
m27_100 -> m27_101  [key=0, style=solid];
m27_131 -> m27_132  [key=0, style=solid];
m27_141 -> m27_142  [key=0, style=solid];
m27_145 -> m27_146  [key=0, style=solid];
m27_155 -> m27_156  [key=0, style=solid];
m27_159 -> m27_160  [key=0, style=solid];
m27_171 -> m27_172  [key=0, style=solid];
m27_172 -> m27_172  [key=1, style=dashed, color=darkseagreen4, label=a];
m27_172 -> m27_173  [key=0, style=solid];
m27_172 -> m27_174  [key=2, style=dotted];
m27_220 -> m27_221  [key=0, style=solid];
m27_235 -> m27_236  [key=0, style=solid];
m27_66 -> m27_64  [key=0, style=bold, color=blue];
m27_232 -> m27_233  [key=0, style=solid];
m27_234 -> m27_232  [key=0, style=bold, color=blue];
m27_27 -> m27_25  [key=0, style=bold, color=blue];
m27_27 -> m27_28  [key=0, style=solid];
m27_69 -> m27_67  [key=0, style=bold, color=blue];
m27_70 -> m27_71  [key=0, style=solid];
m27_73 -> m27_74  [key=0, style=solid];
m27_85 -> m27_83  [key=0, style=bold, color=blue];
m27_86 -> m27_87  [key=0, style=solid];
m27_89 -> m27_90  [key=0, style=solid];
m27_102 -> m27_100  [key=0, style=bold, color=blue];
m27_103 -> m27_104  [key=0, style=solid];
m27_106 -> m27_107  [key=0, style=solid];
m27_133 -> m27_131  [key=0, style=bold, color=blue];
m27_134 -> m27_135  [key=0, style=solid];
m27_147 -> m27_145  [key=0, style=bold, color=blue];
m27_148 -> m27_149  [key=0, style=solid];
m27_161 -> m27_159  [key=0, style=bold, color=blue];
m27_162 -> m27_163  [key=0, style=solid];
m27_222 -> m27_220  [key=0, style=bold, color=blue];
m27_223 -> m27_224  [key=0, style=solid];
m27_237 -> m27_235  [key=0, style=bold, color=blue];
m27_238 -> m27_239  [key=0, style=solid];
m27_31 -> m27_29  [key=0, style=bold, color=blue];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_45  [key=2, style=dotted];
m27_82 -> m27_80  [key=0, style=bold, color=blue];
m27_115 -> m27_113  [key=0, style=bold, color=blue];
m27_217 -> m27_218  [key=0, style=solid];
m27_219 -> m27_217  [key=0, style=bold, color=blue];
m27_181 -> m27_182  [key=0, style=solid];
m27_183 -> m27_181  [key=0, style=bold, color=blue];
m27_98 -> m27_96  [key=0, style=bold, color=blue];
m27_97 -> m27_98  [key=0, style=solid];
m27_97 -> m27_99  [key=2, style=dotted];
m27_143 -> m27_141  [key=0, style=bold, color=blue];
m27_142 -> m27_143  [key=0, style=solid];
m27_142 -> m27_144  [key=2, style=dotted];
m27_157 -> m27_155  [key=0, style=bold, color=blue];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_158  [key=2, style=dotted];
m27_173 -> m27_171  [key=0, style=bold, color=blue];
m27_72 -> m27_70  [key=0, style=bold, color=blue];
m27_71 -> m27_72  [key=0, style=solid];
m27_75 -> m27_73  [key=0, style=bold, color=blue];
m27_74 -> m27_75  [key=0, style=solid];
m27_88 -> m27_86  [key=0, style=bold, color=blue];
m27_87 -> m27_88  [key=0, style=solid];
m27_91 -> m27_89  [key=0, style=bold, color=blue];
m27_90 -> m27_91  [key=0, style=solid];
m27_105 -> m27_103  [key=0, style=bold, color=blue];
m27_104 -> m27_105  [key=0, style=solid];
m27_108 -> m27_106  [key=0, style=bold, color=blue];
m27_107 -> m27_108  [key=0, style=solid];
m27_136 -> m27_134  [key=0, style=bold, color=blue];
m27_135 -> m27_136  [key=0, style=solid];
m27_150 -> m27_148  [key=0, style=bold, color=blue];
m27_149 -> m27_150  [key=0, style=solid];
m27_164 -> m27_162  [key=0, style=bold, color=blue];
m27_163 -> m27_164  [key=0, style=solid];
m27_225 -> m27_223  [key=0, style=bold, color=blue];
m27_224 -> m27_225  [key=0, style=solid];
m27_224 -> m27_226  [key=2, style=dotted];
m27_240 -> m27_238  [key=0, style=bold, color=blue];
m27_239 -> m27_240  [key=0, style=solid];
m27_239 -> m27_226  [key=2, style=dotted];
m27_128 -> m27_129  [key=0, style=solid];
m27_128 -> m27_130  [key=2, style=dotted];
m27_129 -> m27_127  [key=0, style=bold, color=blue];
m27_165 -> m27_166  [key=0, style=solid];
m27_167 -> m27_23  [key=2, style=dotted];
m27_167 -> m27_168  [key=0, style=solid];
m27_167 -> m27_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_167 -> m27_172  [key=1, style=dashed, color=darkseagreen4, label=a];
m27_166 -> m27_167  [key=0, style=solid];
m27_168 -> m27_169  [key=0, style=solid];
m27_168 -> m27_170  [key=2, style=dotted];
m27_169 -> m27_165  [key=0, style=bold, color=blue];
m27_144 -> m27_245  [key=0, style=solid];
m27_245 -> m27_144  [key=0, style=bold, color=blue];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_22 -> m27_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_22 -> m27_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_22 -> m27_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m27_22 -> m27_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_42  [key=2, style=dotted];
m27_28 -> m27_30  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m27_28 -> m27_31  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m27_38 -> m27_22  [key=0, style=bold, color=blue];
m27_185 -> m27_186  [key=0, style=solid, color=green];
m27_186 -> m27_187  [key=0, style=solid, color=green];
m27_186 -> m27_180  [key=2, style=dotted, color=green];
m27_186 -> m27_189  [key=1, style=dashed, color=green, label="lambda expression"];
m27_187 -> m27_188  [key=0, style=solid, color=green];
m27_187 -> m27_50  [key=2, style=dotted, color=green];
m27_187 -> m27_192  [key=1, style=dashed, color=green, label="lambda expression"];
m27_188 -> m27_185  [key=0, style=bold, color=blue];
m27_60 -> m27_61  [key=0, style=solid];
m27_61 -> m27_38  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_62 -> m27_50  [key=2, style=dotted];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_63 -> m27_60  [key=0, style=bold, color=blue];
m27_151 -> m27_152  [key=0, style=solid];
m27_152 -> m27_38  [key=2, style=dotted];
m27_152 -> m27_153  [key=0, style=solid];
m27_152 -> m27_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_153 -> m27_50  [key=2, style=dotted];
m27_153 -> m27_154  [key=0, style=solid];
m27_153 -> m27_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_154 -> m27_151  [key=0, style=bold, color=blue];
m27_253 -> m27_35  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_47  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_48  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_55  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_111  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_187  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_200  [key=1, style=dashed, color=green, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_138  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_153  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_167  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_253 -> m27_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientApiTests"];
m27_254 -> m27_172  [key=1, style=dashed, color=darkseagreen4, label=a];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [key=0, style=bold, color=blue];
m29_11 -> m29_12  [key=0, style=solid];
m29_12 -> m29_13  [key=0, style=solid, color=green];
m29_12 -> m29_8  [key=2, style=dotted];
m29_13 -> m29_14  [key=0, style=solid, color=green];
m29_13 -> n23  [key=2, style=dotted, color=green];
m29_13 -> m29_10  [key=2, style=dotted, color=green];
m29_14 -> m29_11  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_3  [key=0, style=solid];
m29_3 -> m29_0  [key=0, style=bold, color=blue];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_8  [key=2, style=dotted];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> n23  [key=2, style=dotted];
m29_6 -> m29_10  [key=2, style=dotted];
m29_7 -> m29_4  [key=0, style=bold, color=blue];
m29_15 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m29_15 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m29_15 -> m29_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.TestStateChangedFilter"];
m29_15 -> m29_13  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangedFilter"];
m30_97 -> m30_252  [key=0, style=solid, color=red];
m30_252 -> m30_253  [key=0, style=solid, color=red];
m30_252 -> m30_250  [key=2, style=dotted, color=red];
m30_252 -> m30_251  [key=2, style=dotted, color=red];
m30_253 -> m30_97  [key=0, style=bold, color=blue];
m30_5 -> m30_6  [key=0, style=solid, color=green];
m30_5 -> m30_8  [key=2, style=dotted, color=green];
m30_101 -> m30_102  [key=0, style=solid, color=red];
m30_101 -> m30_104  [key=1, style=dashed, color=red, label=string];
m30_101 -> m30_107  [key=1, style=dashed, color=red, label=string];
m30_102 -> m30_103  [key=0, style=solid, color=red];
m30_102 -> m30_104  [key=1, style=dashed, color=red, label=query];
m30_102 -> m30_107  [key=1, style=dashed, color=red, label=query];
m30_104 -> m30_105  [key=0, style=solid, color=red];
m30_104 -> m30_27  [key=2, style=dotted, color=red];
m30_104 -> m30_106  [key=1, style=dashed, color=red, label="lambda expression"];
m30_103 -> m30_104  [key=0, style=solid, color=red];
m30_103 -> m30_97  [key=2, style=dotted, color=red];
m30_105 -> m30_101  [key=0, style=bold, color=blue];
m30_10 -> m30_11  [key=0, style=solid, color=red];
m30_10 -> m30_13  [key=1, style=dashed, color=red, label=SqlConnection];
m30_10 -> m30_15  [key=1, style=dashed, color=red, label=SqlConnection];
m30_6 -> m30_7  [key=0, style=solid, color=green];
m30_6 -> n23  [key=2, style=dotted, color=green];
m30_6 -> m30_10  [key=2, style=dotted, color=green];
m30_7 -> m30_8  [key=0, style=solid, color=red];
m30_7 -> m30_9  [key=2, style=dotted, color=red];
m30_7 -> m30_10  [key=1, style=dashed, color=red, label="lambda expression"];
m30_7 -> m30_4  [key=0, style=bold, color=blue];
m30_8 -> m30_6  [key=0, style=bold, color=blue];
m30_65 -> m30_66  [key=0, style=solid, color=red];
m30_65 -> m30_69  [key=1, style=dashed, color=red, label=string];
m30_66 -> m30_67  [key=0, style=solid, color=red];
m30_66 -> m30_27  [key=2, style=dotted, color=red];
m30_66 -> m30_68  [key=1, style=dashed, color=red, label="lambda expression"];
m30_67 -> m30_65  [key=0, style=bold, color=blue];
m30_225 -> m30_226  [key=0, style=solid, color=red];
m30_225 -> m30_230  [key=1, style=dashed, color=red, label=string];
m30_225 -> m30_233  [key=1, style=dashed, color=red, label=string];
m30_226 -> m30_227  [key=0, style=solid, color=red];
m30_226 -> m30_228  [key=0, style=solid, color=red];
m30_230 -> m30_231  [key=0, style=solid, color=red];
m30_230 -> m30_27  [key=2, style=dotted, color=red];
m30_230 -> m30_232  [key=1, style=dashed, color=red, label="lambda expression"];
m30_227 -> m30_231  [key=0, style=solid, color=red];
m30_227 -> m30_5  [key=2, style=dotted, color=red];
m30_228 -> m30_229  [key=0, style=solid, color=red];
m30_228 -> m30_230  [key=1, style=dashed, color=red, label=query];
m30_228 -> m30_233  [key=1, style=dashed, color=red, label=query];
m30_229 -> m30_230  [key=0, style=solid, color=red];
m30_229 -> m30_97  [key=2, style=dotted, color=red];
m30_231 -> m30_225  [key=0, style=bold, color=blue];
m30_77 -> m30_78  [key=0, style=solid, color=red];
m30_77 -> m30_81  [key=1, style=dashed, color=red, label=string];
m30_78 -> m30_79  [key=0, style=solid, color=red];
m30_78 -> m30_27  [key=2, style=dotted, color=red];
m30_78 -> m30_80  [key=1, style=dashed, color=red, label="lambda expression"];
m30_79 -> m30_77  [key=0, style=bold, color=blue];
m30_235 -> m30_236  [key=0, style=solid, color=red];
m30_235 -> m30_240  [key=1, style=dashed, color=red, label=string];
m30_235 -> m30_243  [key=1, style=dashed, color=red, label=string];
m30_236 -> m30_237  [key=0, style=solid, color=red];
m30_236 -> m30_238  [key=0, style=solid, color=red];
m30_240 -> m30_241  [key=0, style=solid, color=red];
m30_240 -> m30_27  [key=2, style=dotted, color=red];
m30_240 -> m30_242  [key=1, style=dashed, color=red, label="lambda expression"];
m30_237 -> m30_241  [key=0, style=solid, color=red];
m30_237 -> m30_5  [key=2, style=dotted, color=red];
m30_238 -> m30_239  [key=0, style=solid, color=red];
m30_238 -> m30_240  [key=1, style=dashed, color=red, label=query];
m30_238 -> m30_243  [key=1, style=dashed, color=red, label=query];
m30_239 -> m30_240  [key=0, style=solid, color=red];
m30_239 -> m30_113  [key=2, style=dotted, color=red];
m30_241 -> m30_235  [key=0, style=bold, color=blue];
m30_195 -> m30_196  [key=0, style=solid, color=red];
m30_195 -> m30_200  [key=1, style=dashed, color=red, label=string];
m30_195 -> m30_203  [key=1, style=dashed, color=red, label=string];
m30_196 -> m30_197  [key=0, style=solid, color=red];
m30_196 -> m30_198  [key=0, style=solid, color=red];
m30_200 -> m30_201  [key=0, style=solid, color=red];
m30_200 -> m30_27  [key=2, style=dotted, color=red];
m30_200 -> m30_202  [key=1, style=dashed, color=red, label="lambda expression"];
m30_197 -> m30_201  [key=0, style=solid, color=red];
m30_197 -> m30_5  [key=2, style=dotted, color=red];
m30_198 -> m30_199  [key=0, style=solid, color=red];
m30_198 -> m30_200  [key=1, style=dashed, color=red, label=query];
m30_198 -> m30_203  [key=1, style=dashed, color=red, label=query];
m30_199 -> m30_200  [key=0, style=solid, color=red];
m30_199 -> m30_97  [key=2, style=dotted, color=red];
m30_201 -> m30_195  [key=0, style=bold, color=blue];
m30_251 -> m30_256  [key=0, style=solid, color=red];
m30_256 -> m30_257  [key=0, style=solid, color=red];
m30_256 -> m30_258  [key=2, style=dotted, color=red];
m30_257 -> m30_251  [key=0, style=bold, color=blue];
m30_141 -> m30_254  [key=0, style=solid, color=red];
m30_254 -> m30_255  [key=0, style=solid, color=red];
m30_254 -> m30_250  [key=2, style=dotted, color=red];
m30_254 -> m30_251  [key=2, style=dotted, color=red];
m30_255 -> m30_141  [key=0, style=bold, color=blue];
m30_38 -> m30_39  [key=0, style=solid, color=red];
m30_38 -> m30_40  [key=1, style=dashed, color=red, label=string];
m30_38 -> m30_43  [key=1, style=dashed, color=red, label=string];
m30_39 -> m30_40  [key=0, style=solid, color=red];
m30_39 -> m30_43  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m30_40 -> m30_41  [key=0, style=solid, color=red];
m30_40 -> m30_27  [key=2, style=dotted, color=red];
m30_40 -> m30_42  [key=1, style=dashed, color=red, label="lambda expression"];
m30_41 -> m30_38  [key=0, style=bold, color=blue];
m30_205 -> m30_206  [key=0, style=solid];
m30_205 -> m30_210  [key=1, style=dashed, color=red, label=string];
m30_205 -> m30_213  [key=1, style=dashed, color=red, label=string];
m30_206 -> m30_207  [key=0, style=solid];
m30_206 -> m30_208  [key=0, style=solid, color=red];
m30_210 -> m30_211  [key=0, style=solid, color=red];
m30_210 -> m30_27  [key=2, style=dotted, color=red];
m30_210 -> m30_212  [key=1, style=dashed, color=red, label="lambda expression"];
m30_207 -> m30_211  [key=0, style=solid];
m30_207 -> m30_5  [key=2, style=dotted];
m30_208 -> m30_209  [key=0, style=solid, color=red];
m30_208 -> m30_210  [key=1, style=dashed, color=red, label=query];
m30_208 -> m30_213  [key=1, style=dashed, color=red, label=query];
m30_209 -> m30_210  [key=0, style=solid, color=red];
m30_209 -> m30_113  [key=2, style=dotted, color=red];
m30_211 -> m30_205  [key=0, style=bold, color=blue];
m30_4 -> m30_5  [key=0, style=solid, color=green];
m30_4 -> m30_0  [key=0, style=bold, color=blue];
m30_47 -> m30_48  [key=0, style=solid, color=red];
m30_47 -> m30_49  [key=1, style=dashed, color=red, label=string];
m30_47 -> m30_52  [key=1, style=dashed, color=red, label=string];
m30_48 -> m30_49  [key=0, style=solid, color=red];
m30_48 -> m30_52  [key=1, style=dashed, color=red, label=addStateSql];
m30_49 -> m30_50  [key=0, style=solid, color=red];
m30_49 -> m30_27  [key=2, style=dotted, color=red];
m30_49 -> m30_51  [key=1, style=dashed, color=red, label="lambda expression"];
m30_50 -> m30_47  [key=0, style=bold, color=blue];
m30_83 -> m30_84  [key=0, style=solid];
m30_83 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_84 -> m30_85  [key=0, style=solid];
m30_84 -> m30_27  [key=2, style=dotted];
m30_84 -> m30_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_85 -> m30_83  [key=0, style=bold, color=blue];
m30_175 -> m30_176  [key=0, style=solid, color=red];
m30_175 -> m30_180  [key=1, style=dashed, color=red, label=string];
m30_175 -> m30_183  [key=1, style=dashed, color=red, label=string];
m30_176 -> m30_177  [key=0, style=solid, color=red];
m30_176 -> m30_178  [key=0, style=solid, color=red];
m30_180 -> m30_181  [key=0, style=solid, color=red];
m30_180 -> m30_27  [key=2, style=dotted, color=red];
m30_180 -> m30_182  [key=1, style=dashed, color=red, label="lambda expression"];
m30_177 -> m30_181  [key=0, style=solid, color=red];
m30_177 -> m30_5  [key=2, style=dotted, color=red];
m30_178 -> m30_179  [key=0, style=solid, color=red];
m30_178 -> m30_180  [key=1, style=dashed, color=red, label=query];
m30_178 -> m30_183  [key=1, style=dashed, color=red, label=query];
m30_179 -> m30_180  [key=0, style=solid, color=red];
m30_179 -> m30_97  [key=2, style=dotted, color=red];
m30_181 -> m30_175  [key=0, style=bold, color=blue];
m30_89 -> m30_90  [key=0, style=solid];
m30_90 -> m30_91  [key=0, style=solid];
m30_90 -> m30_92  [key=2, style=dotted];
m30_91 -> m30_89  [key=0, style=bold, color=blue];
m30_11 -> m30_12  [key=0, style=solid, color=red];
m30_11 -> m30_17  [key=2, style=dotted, color=red];
m30_12 -> m30_13  [key=0, style=solid, color=red];
m30_12 -> m30_8  [key=2, style=dotted, color=green];
m30_12 -> m30_14  [key=0, style=solid, color=red];
m30_13 -> m30_14  [key=0, style=solid, color=red];
m30_13 -> n23  [key=2, style=dotted, color=green];
m30_13 -> m30_10  [key=2, style=dotted, color=green];
m30_13 -> m30_18  [key=2, style=dotted, color=red];
m30_13 -> m30_19  [key=2, style=dotted, color=red];
m30_13 -> m30_21  [key=1, style=dashed, color=red, label="lambda expression"];
m30_14 -> m30_11  [key=0, style=bold, color=blue];
m30_14 -> m30_15  [key=0, style=solid, color=red];
m30_14 -> m30_16  [key=0, style=solid, color=red];
m30_0 -> m30_1  [key=0, style=solid, color=red];
m30_0 -> m30_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.IList<string>"];
m30_0 -> m30_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorage"];
m30_1 -> m30_2  [key=0, style=solid, color=red];
m30_1 -> m30_3  [key=0, style=solid, color=red];
m30_2 -> m30_3  [key=0, style=solid, color=green];
m30_2 -> m30_4  [key=0, style=solid, color=red];
m30_2 -> m30_5  [key=2, style=dotted, color=red];
m30_3 -> m30_0  [key=0, style=bold, color=blue];
m30_3 -> m30_4  [key=0, style=solid, color=red];
m30_27 -> m30_245  [key=0, style=solid, color=red];
m30_245 -> m30_246  [key=0, style=solid, color=red];
m30_245 -> m30_247  [key=2, style=dotted, color=red];
m30_246 -> m30_27  [key=0, style=bold, color=blue];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_57  [key=1, style=dashed, color=red, label=string];
m30_54 -> m30_62  [key=1, style=dashed, color=red, label=string];
m30_55 -> m30_56  [key=0, style=solid, color=red];
m30_55 -> m30_59  [key=2, style=dotted];
m30_57 -> m30_58  [key=0, style=solid, color=red];
m30_57 -> m30_27  [key=2, style=dotted, color=red];
m30_57 -> m30_61  [key=1, style=dashed, color=red, label="lambda expression"];
m30_56 -> m30_57  [key=0, style=solid, color=red];
m30_56 -> m30_60  [key=2, style=dotted, color=red];
m30_56 -> m30_62  [key=1, style=dashed, color=red, label=persistentQueue];
m30_58 -> m30_54  [key=0, style=bold, color=blue];
m30_71 -> m30_72  [key=0, style=solid, color=red];
m30_71 -> m30_75  [key=1, style=dashed, color=red, label=string];
m30_72 -> m30_73  [key=0, style=solid, color=red];
m30_72 -> m30_27  [key=2, style=dotted, color=red];
m30_72 -> m30_74  [key=1, style=dashed, color=red, label="lambda expression"];
m30_73 -> m30_71  [key=0, style=bold, color=blue];
m30_92 -> m30_93  [key=0, style=solid, color=red];
m30_92 -> m30_95  [key=1, style=dashed, color=red, label=string];
m30_92 -> m30_99  [key=1, style=dashed, color=red, label=string];
m30_93 -> m30_94  [key=0, style=solid, color=red];
m30_93 -> m30_95  [key=1, style=dashed, color=red, label=addSql];
m30_93 -> m30_99  [key=1, style=dashed, color=red, label=addSql];
m30_95 -> m30_96  [key=0, style=solid, color=red];
m30_95 -> m30_27  [key=2, style=dotted, color=red];
m30_95 -> m30_98  [key=1, style=dashed, color=red, label="lambda expression"];
m30_94 -> m30_95  [key=0, style=solid, color=red];
m30_94 -> m30_97  [key=2, style=dotted, color=red];
m30_96 -> m30_92  [key=0, style=bold, color=blue];
m30_132 -> m30_133  [key=0, style=solid, color=red];
m30_132 -> m30_135  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m30_132 -> m30_139  [key=1, style=dashed, color=red, label=string];
m30_132 -> m30_144  [key=1, style=dashed, color=red, label=string];
m30_132 -> m30_147  [key=1, style=dashed, color=red, label=string];
m30_133 -> m30_134  [key=0, style=solid, color=red];
m30_133 -> m30_135  [key=0, style=solid, color=red];
m30_135 -> m30_136  [key=0, style=solid, color=red];
m30_135 -> m30_137  [key=0, style=solid, color=red];
m30_139 -> m30_140  [key=0, style=solid, color=red];
m30_139 -> m30_142  [key=2, style=dotted, color=red];
m30_139 -> m30_143  [key=1, style=dashed, color=red, label="lambda expression"];
m30_134 -> m30_140  [key=0, style=solid, color=red];
m30_134 -> m30_5  [key=2, style=dotted, color=red];
m30_136 -> m30_140  [key=0, style=solid, color=red];
m30_136 -> m30_5  [key=2, style=dotted, color=red];
m30_137 -> m30_138  [key=0, style=solid, color=red];
m30_137 -> m30_139  [key=1, style=dashed, color=red, label=sql];
m30_137 -> m30_144  [key=1, style=dashed, color=red, label=sql];
m30_138 -> m30_139  [key=0, style=solid, color=red];
m30_138 -> m30_141  [key=2, style=dotted, color=red];
m30_140 -> m30_132  [key=0, style=bold, color=blue];
m30_149 -> m30_150  [key=0, style=solid, color=red];
m30_149 -> m30_154  [key=1, style=dashed, color=red, label=string];
m30_149 -> m30_157  [key=1, style=dashed, color=red, label=string];
m30_150 -> m30_151  [key=0, style=solid, color=red];
m30_150 -> m30_152  [key=0, style=solid, color=red];
m30_154 -> m30_155  [key=0, style=solid, color=red];
m30_154 -> m30_27  [key=2, style=dotted, color=red];
m30_154 -> m30_156  [key=1, style=dashed, color=red, label="lambda expression"];
m30_151 -> m30_155  [key=0, style=solid, color=red];
m30_151 -> m30_5  [key=2, style=dotted, color=red];
m30_152 -> m30_153  [key=0, style=solid, color=red];
m30_152 -> m30_154  [key=1, style=dashed, color=red, label=query];
m30_152 -> m30_157  [key=1, style=dashed, color=red, label=query];
m30_153 -> m30_154  [key=0, style=solid, color=red];
m30_153 -> m30_141  [key=2, style=dotted, color=red];
m30_155 -> m30_149  [key=0, style=bold, color=blue];
m30_32 -> m30_33  [key=0, style=solid];
m30_32 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_33 -> m30_34  [key=0, style=solid];
m30_33 -> m30_27  [key=2, style=dotted];
m30_33 -> m30_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_34 -> m30_32  [key=0, style=bold, color=blue];
m30_185 -> m30_186  [key=0, style=solid, color=red];
m30_185 -> m30_190  [key=1, style=dashed, color=red, label=string];
m30_185 -> m30_193  [key=1, style=dashed, color=red, label=string];
m30_186 -> m30_187  [key=0, style=solid, color=red];
m30_186 -> m30_188  [key=0, style=solid, color=red];
m30_190 -> m30_191  [key=0, style=solid, color=red];
m30_190 -> m30_27  [key=2, style=dotted, color=red];
m30_190 -> m30_192  [key=1, style=dashed, color=red, label="lambda expression"];
m30_187 -> m30_191  [key=0, style=solid, color=red];
m30_187 -> m30_5  [key=2, style=dotted, color=red];
m30_188 -> m30_189  [key=0, style=solid, color=red];
m30_188 -> m30_190  [key=1, style=dashed, color=red, label=query];
m30_188 -> m30_193  [key=1, style=dashed, color=red, label=query];
m30_189 -> m30_190  [key=0, style=solid, color=red];
m30_189 -> m30_141  [key=2, style=dotted, color=red];
m30_191 -> m30_185  [key=0, style=bold, color=blue];
m30_24 -> m30_25  [key=0, style=solid, color=red];
m30_24 -> m30_29  [key=1, style=dashed, color=red, label=string];
m30_25 -> m30_26  [key=0, style=solid, color=red];
m30_25 -> m30_27  [key=2, style=dotted, color=red];
m30_25 -> m30_28  [key=1, style=dashed, color=red, label="lambda expression"];
m30_26 -> m30_24  [key=0, style=bold, color=blue];
m30_242 -> m30_243  [key=0, style=solid, color=red];
m30_15 -> m30_14  [key=0, style=solid, color=red];
m30_15 -> m30_20  [key=2, style=dotted, color=red];
m30_15 -> m30_1  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangedFilter"];
m30_15 -> m30_2  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangedFilter"];
m30_15 -> m30_6  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangedFilter"];
m30_15 -> m30_13  [key=1, style=dashed, color=green, label="HangFire.Tests.TestStateChangedFilter"];
m30_21 -> m30_22  [key=0, style=solid, color=red];
m30_16 -> m30_10  [key=0, style=bold, color=blue];
m30_22 -> m30_23  [key=0, style=solid, color=red];
m30_23 -> m30_21  [key=0, style=bold, color=blue];
m30_29 -> m30_30  [key=0, style=solid, color=red];
m30_29 -> m30_31  [key=2, style=dotted, color=red];
m30_29 -> m30_19  [key=2, style=dotted, color=red];
m30_28 -> m30_29  [key=0, style=solid, color=red];
m30_30 -> m30_28  [key=0, style=bold, color=blue];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_19  [key=2, style=dotted];
m30_35 -> m30_36  [key=0, style=solid];
m30_37 -> m30_35  [key=0, style=bold, color=blue];
m30_43 -> m30_44  [key=0, style=solid, color=red];
m30_43 -> m30_45  [key=2, style=dotted, color=red];
m30_43 -> m30_46  [key=2, style=dotted, color=red];
m30_43 -> m30_19  [key=2, style=dotted, color=red];
m30_42 -> m30_43  [key=0, style=solid, color=red];
m30_44 -> m30_42  [key=0, style=bold, color=blue];
m30_52 -> m30_53  [key=0, style=solid, color=red];
m30_52 -> m30_45  [key=2, style=dotted, color=red];
m30_52 -> m30_46  [key=2, style=dotted, color=red];
m30_52 -> m30_19  [key=2, style=dotted, color=red];
m30_51 -> m30_52  [key=0, style=solid, color=red];
m30_53 -> m30_51  [key=0, style=bold, color=blue];
m30_62 -> m30_63  [key=0, style=solid, color=red];
m30_62 -> m30_64  [key=2, style=dotted, color=red];
m30_61 -> m30_62  [key=0, style=solid, color=red];
m30_63 -> m30_61  [key=0, style=bold, color=blue];
m30_69 -> m30_70  [key=0, style=solid, color=red];
m30_69 -> m30_19  [key=2, style=dotted, color=red];
m30_68 -> m30_69  [key=0, style=solid, color=red];
m30_70 -> m30_68  [key=0, style=bold, color=blue];
m30_75 -> m30_76  [key=0, style=solid, color=red];
m30_75 -> m30_31  [key=2, style=dotted, color=red];
m30_75 -> m30_19  [key=2, style=dotted, color=red];
m30_74 -> m30_75  [key=0, style=solid, color=red];
m30_76 -> m30_74  [key=0, style=bold, color=blue];
m30_81 -> m30_82  [key=0, style=solid, color=red];
m30_81 -> m30_19  [key=2, style=dotted, color=red];
m30_80 -> m30_81  [key=0, style=solid, color=red];
m30_82 -> m30_80  [key=0, style=bold, color=blue];
m30_87 -> m30_88  [key=0, style=solid];
m30_87 -> m30_31  [key=2, style=dotted];
m30_87 -> m30_19  [key=2, style=dotted];
m30_86 -> m30_87  [key=0, style=solid];
m30_88 -> m30_86  [key=0, style=bold, color=blue];
m30_99 -> m30_100  [key=0, style=solid, color=red];
m30_99 -> m30_19  [key=2, style=dotted, color=red];
m30_98 -> m30_99  [key=0, style=solid, color=red];
m30_100 -> m30_98  [key=0, style=bold, color=blue];
m30_107 -> m30_108  [key=0, style=solid, color=red];
m30_107 -> m30_19  [key=2, style=dotted, color=red];
m30_106 -> m30_107  [key=0, style=solid, color=red];
m30_108 -> m30_106  [key=0, style=bold, color=blue];
m30_115 -> m30_116  [key=0, style=solid, color=red];
m30_115 -> m30_19  [key=2, style=dotted, color=red];
m30_114 -> m30_115  [key=0, style=solid, color=red];
m30_116 -> m30_114  [key=0, style=bold, color=blue];
m30_122 -> m30_123  [key=0, style=solid, color=red];
m30_122 -> m30_19  [key=2, style=dotted, color=red];
m30_121 -> m30_122  [key=0, style=solid, color=red];
m30_123 -> m30_121  [key=0, style=bold, color=blue];
m30_130 -> m30_131  [key=0, style=solid, color=red];
m30_130 -> m30_19  [key=2, style=dotted, color=red];
m30_129 -> m30_130  [key=0, style=solid, color=red];
m30_131 -> m30_129  [key=0, style=bold, color=blue];
m30_144 -> m30_145  [key=0, style=solid, color=red];
m30_144 -> m30_18  [key=2, style=dotted, color=red];
m30_144 -> m30_19  [key=2, style=dotted, color=red];
m30_144 -> m30_146  [key=1, style=dashed, color=red, label="lambda expression"];
m30_147 -> m30_148  [key=0, style=solid, color=red];
m30_147 -> m30_147  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, string>"];
m30_143 -> m30_144  [key=0, style=solid, color=red];
m30_145 -> m30_143  [key=0, style=bold, color=blue];
m30_146 -> m30_147  [key=0, style=solid, color=red];
m30_148 -> m30_146  [key=0, style=bold, color=blue];
m30_157 -> m30_158  [key=0, style=solid, color=red];
m30_157 -> m30_19  [key=2, style=dotted, color=red];
m30_156 -> m30_157  [key=0, style=solid, color=red];
m30_158 -> m30_156  [key=0, style=bold, color=blue];
m30_169 -> m30_170  [key=0, style=solid, color=red];
m30_169 -> m30_18  [key=2, style=dotted, color=red];
m30_169 -> m30_171  [key=2, style=dotted, color=red];
m30_169 -> m30_19  [key=2, style=dotted, color=red];
m30_169 -> m30_172  [key=1, style=dashed, color=red, label="lambda expression"];
m30_173 -> m30_174  [key=0, style=solid, color=red];
m30_168 -> m30_169  [key=0, style=solid, color=red];
m30_170 -> m30_168  [key=0, style=bold, color=blue];
m30_172 -> m30_173  [key=0, style=solid, color=red];
m30_174 -> m30_172  [key=0, style=bold, color=blue];
m30_183 -> m30_184  [key=0, style=solid, color=red];
m30_183 -> m30_19  [key=2, style=dotted, color=red];
m30_182 -> m30_183  [key=0, style=solid, color=red];
m30_184 -> m30_182  [key=0, style=bold, color=blue];
m30_193 -> m30_194  [key=0, style=solid, color=red];
m30_193 -> m30_31  [key=2, style=dotted, color=red];
m30_193 -> m30_19  [key=2, style=dotted, color=red];
m30_192 -> m30_193  [key=0, style=solid, color=red];
m30_194 -> m30_192  [key=0, style=bold, color=blue];
m30_203 -> m30_204  [key=0, style=solid, color=red];
m30_203 -> m30_31  [key=2, style=dotted, color=red];
m30_203 -> m30_19  [key=2, style=dotted, color=red];
m30_202 -> m30_203  [key=0, style=solid, color=red];
m30_204 -> m30_202  [key=0, style=bold, color=blue];
m30_213 -> m30_214  [key=0, style=solid, color=red];
m30_213 -> m30_31  [key=2, style=dotted, color=red];
m30_213 -> m30_19  [key=2, style=dotted, color=red];
m30_212 -> m30_213  [key=0, style=solid, color=red];
m30_214 -> m30_212  [key=0, style=bold, color=blue];
m30_223 -> m30_224  [key=0, style=solid, color=red];
m30_223 -> m30_19  [key=2, style=dotted, color=red];
m30_222 -> m30_223  [key=0, style=solid, color=red];
m30_224 -> m30_222  [key=0, style=bold, color=blue];
m30_233 -> m30_234  [key=0, style=solid, color=red];
m30_233 -> m30_19  [key=2, style=dotted, color=red];
m30_232 -> m30_233  [key=0, style=solid, color=red];
m30_234 -> m30_232  [key=0, style=bold, color=blue];
m30_243 -> m30_244  [key=0, style=solid, color=red];
m30_243 -> m30_19  [key=2, style=dotted, color=red];
m30_244 -> m30_242  [key=0, style=bold, color=blue];
m30_159 -> m30_160  [key=0, style=solid, color=red];
m30_159 -> m30_162  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
m30_159 -> m30_166  [key=1, style=dashed, color=red, label=string];
m30_159 -> m30_169  [key=1, style=dashed, color=red, label=string];
m30_159 -> m30_173  [key=1, style=dashed, color=red, label=string];
m30_160 -> m30_161  [key=0, style=solid, color=red];
m30_160 -> m30_162  [key=0, style=solid, color=red];
m30_162 -> m30_163  [key=0, style=solid, color=red];
m30_162 -> m30_164  [key=0, style=solid, color=red];
m30_166 -> m30_167  [key=0, style=solid, color=red];
m30_166 -> m30_142  [key=2, style=dotted, color=red];
m30_166 -> m30_168  [key=1, style=dashed, color=red, label="lambda expression"];
m30_161 -> m30_167  [key=0, style=solid, color=red];
m30_161 -> m30_5  [key=2, style=dotted, color=red];
m30_163 -> m30_167  [key=0, style=solid, color=red];
m30_163 -> m30_5  [key=2, style=dotted, color=red];
m30_164 -> m30_165  [key=0, style=solid, color=red];
m30_164 -> m30_166  [key=1, style=dashed, color=red, label=query];
m30_164 -> m30_169  [key=1, style=dashed, color=red, label=query];
m30_165 -> m30_166  [key=0, style=solid, color=red];
m30_165 -> m30_97  [key=2, style=dotted, color=red];
m30_167 -> m30_159  [key=0, style=bold, color=blue];
m30_117 -> m30_118  [key=0, style=solid, color=red];
m30_117 -> m30_119  [key=1, style=dashed, color=red, label=string];
m30_117 -> m30_122  [key=1, style=dashed, color=red, label=string];
m30_118 -> m30_119  [key=0, style=solid, color=red];
m30_118 -> m30_113  [key=2, style=dotted, color=red];
m30_119 -> m30_120  [key=0, style=solid, color=red];
m30_119 -> m30_27  [key=2, style=dotted, color=red];
m30_119 -> m30_121  [key=1, style=dashed, color=red, label="lambda expression"];
m30_120 -> m30_117  [key=0, style=bold, color=blue];
m30_113 -> m30_248  [key=0, style=solid, color=red];
m30_248 -> m30_249  [key=0, style=solid, color=red];
m30_248 -> m30_250  [key=2, style=dotted, color=red];
m30_248 -> m30_251  [key=2, style=dotted, color=red];
m30_249 -> m30_113  [key=0, style=bold, color=blue];
m30_215 -> m30_216  [key=0, style=solid, color=red];
m30_215 -> m30_220  [key=1, style=dashed, color=red, label=string];
m30_215 -> m30_223  [key=1, style=dashed, color=red, label=string];
m30_216 -> m30_217  [key=0, style=solid, color=red];
m30_216 -> m30_218  [key=0, style=solid, color=red];
m30_220 -> m30_221  [key=0, style=solid, color=red];
m30_220 -> m30_27  [key=2, style=dotted, color=red];
m30_220 -> m30_222  [key=1, style=dashed, color=red, label="lambda expression"];
m30_217 -> m30_221  [key=0, style=solid, color=red];
m30_217 -> m30_5  [key=2, style=dotted, color=red];
m30_218 -> m30_219  [key=0, style=solid, color=red];
m30_218 -> m30_220  [key=1, style=dashed, color=red, label=query];
m30_218 -> m30_223  [key=1, style=dashed, color=red, label=query];
m30_219 -> m30_220  [key=0, style=solid, color=red];
m30_219 -> m30_141  [key=2, style=dotted, color=red];
m30_221 -> m30_215  [key=0, style=bold, color=blue];
m30_109 -> m30_110  [key=0, style=solid, color=red];
m30_109 -> m30_111  [key=1, style=dashed, color=red, label=string];
m30_109 -> m30_115  [key=1, style=dashed, color=red, label=string];
m30_110 -> m30_111  [key=0, style=solid, color=red];
m30_110 -> m30_113  [key=2, style=dotted, color=red];
m30_111 -> m30_112  [key=0, style=solid, color=red];
m30_111 -> m30_27  [key=2, style=dotted, color=red];
m30_111 -> m30_114  [key=1, style=dashed, color=red, label="lambda expression"];
m30_112 -> m30_109  [key=0, style=bold, color=blue];
m30_124 -> m30_125  [key=0, style=solid, color=red];
m30_124 -> m30_127  [key=1, style=dashed, color=red, label=string];
m30_124 -> m30_130  [key=1, style=dashed, color=red, label=string];
m30_125 -> m30_126  [key=0, style=solid, color=red];
m30_125 -> m30_127  [key=1, style=dashed, color=red, label=trimSql];
m30_125 -> m30_130  [key=1, style=dashed, color=red, label=trimSql];
m30_127 -> m30_128  [key=0, style=solid, color=red];
m30_127 -> m30_27  [key=2, style=dotted, color=red];
m30_127 -> m30_129  [key=1, style=dashed, color=red, label="lambda expression"];
m30_126 -> m30_127  [key=0, style=solid, color=red];
m30_126 -> m30_113  [key=2, style=dotted, color=red];
m30_128 -> m30_124  [key=0, style=bold, color=blue];
m30_259 -> m30_3  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_7  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_12  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_13  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_14  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_25  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_40  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_49  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_57  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_66  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_72  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_78  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_94  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_95  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_103  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_104  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_110  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_111  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_118  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_119  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_126  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_127  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_138  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_139  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_153  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_154  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_165  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_166  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_179  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_180  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_189  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_190  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_199  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_200  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_209  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_210  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_219  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_220  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_229  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_230  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_239  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_240  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_245  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_248  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_252  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_254  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_259 -> m30_256  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m30_260 -> m30_29  [key=1, style=dashed, color=red, label=string];
m30_261 -> m30_29  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m30_262 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_263 -> m30_43  [key=1, style=dashed, color=red, label=string];
m30_264 -> m30_43  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m30_265 -> m30_43  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m30_266 -> m30_52  [key=1, style=dashed, color=red, label=string];
m30_267 -> m30_52  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m30_268 -> m30_52  [key=1, style=dashed, color=red, label=addStateSql];
m30_269 -> m30_62  [key=1, style=dashed, color=red, label=string];
m30_270 -> m30_62  [key=1, style=dashed, color=red, label=string];
m30_271 -> m30_62  [key=1, style=dashed, color=red, label=persistentQueue];
m30_272 -> m30_69  [key=1, style=dashed, color=red, label=string];
m30_273 -> m30_75  [key=1, style=dashed, color=red, label=string];
m30_274 -> m30_75  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m30_275 -> m30_81  [key=1, style=dashed, color=red, label=string];
m30_276 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_277 -> m30_87  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m30_278 -> m30_99  [key=1, style=dashed, color=red, label=string];
m30_279 -> m30_99  [key=1, style=dashed, color=red, label=string];
m30_280 -> m30_99  [key=1, style=dashed, color=red, label=double];
m30_281 -> m30_99  [key=1, style=dashed, color=red, label=addSql];
m30_282 -> m30_107  [key=1, style=dashed, color=red, label=string];
m30_283 -> m30_107  [key=1, style=dashed, color=red, label=string];
m30_284 -> m30_107  [key=1, style=dashed, color=red, label=query];
m30_285 -> m30_115  [key=1, style=dashed, color=red, label=string];
m30_286 -> m30_115  [key=1, style=dashed, color=red, label=string];
m30_287 -> m30_122  [key=1, style=dashed, color=red, label=string];
m30_288 -> m30_122  [key=1, style=dashed, color=red, label=string];
m30_289 -> m30_130  [key=1, style=dashed, color=red, label=string];
m30_290 -> m30_130  [key=1, style=dashed, color=red, label=int];
m30_291 -> m30_130  [key=1, style=dashed, color=red, label=int];
m30_292 -> m30_130  [key=1, style=dashed, color=red, label=trimSql];
m30_293 -> m30_144  [key=1, style=dashed, color=red, label=string];
m30_293 -> m30_147  [key=1, style=dashed, color=red, label=string];
m30_294 -> m30_144  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m30_295 -> m30_144  [key=1, style=dashed, color=red, label=sql];
m30_296 -> m30_157  [key=1, style=dashed, color=red, label=string];
m30_297 -> m30_157  [key=1, style=dashed, color=red, label=query];
m30_298 -> m30_169  [key=1, style=dashed, color=red, label=string];
m30_298 -> m30_173  [key=1, style=dashed, color=red, label=string];
m30_299 -> m30_169  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
m30_300 -> m30_169  [key=1, style=dashed, color=red, label=query];
m30_301 -> m30_183  [key=1, style=dashed, color=red, label=string];
m30_302 -> m30_183  [key=1, style=dashed, color=red, label=query];
m30_303 -> m30_193  [key=1, style=dashed, color=red, label=string];
m30_304 -> m30_193  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m30_305 -> m30_193  [key=1, style=dashed, color=red, label=query];
m30_306 -> m30_203  [key=1, style=dashed, color=red, label=string];
m30_307 -> m30_203  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m30_308 -> m30_203  [key=1, style=dashed, color=red, label=query];
m30_309 -> m30_213  [key=1, style=dashed, color=red, label=string];
m30_310 -> m30_213  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m30_311 -> m30_213  [key=1, style=dashed, color=red, label=query];
m30_312 -> m30_223  [key=1, style=dashed, color=red, label=string];
m30_313 -> m30_223  [key=1, style=dashed, color=red, label=query];
m30_314 -> m30_233  [key=1, style=dashed, color=red, label=string];
m30_315 -> m30_233  [key=1, style=dashed, color=red, label=query];
m30_316 -> m30_243  [key=1, style=dashed, color=red, label=string];
m30_317 -> m30_243  [key=1, style=dashed, color=red, label=query];
}
