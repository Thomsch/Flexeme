digraph  {
n0 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", label="Entry HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="27-27"];
n1 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", color=red, community=0, label="1: return new Dictionary<string, string>();", span="29-29"];
n2 [cluster="HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", label="Exit HangFire.Common.States.JobState.GetData(HangFire.Common.JobMethod)", span="27-27"];
n3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_8 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="MessageQueueJobQueue.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m2_59 [cluster="Mock<IState>.cstr", file="MessageQueueJobQueue.cs", label="Entry Mock<IState>.cstr", span=""];
m2_35 [cluster="Unk.Same", file="MessageQueueJobQueue.cs", label="Entry Unk.Same", span=""];
m2_90 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116"];
m2_91 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="MessageQueueJobQueue.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''0'')", span="118-118"];
m2_92 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="MessageQueueJobQueue.cs", label="var filter = new AutomaticRetryAttribute { Attempts = 0, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="119-119"];
m2_93 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="MessageQueueJobQueue.cs", label="filter.OnStateElection(_context.Object)", span="121-121"];
m2_94 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="MessageQueueJobQueue.cs", label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="123-123"];
m2_95 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116"];
m2_17 [cluster="Unk.Equal", file="MessageQueueJobQueue.cs", label="Entry Unk.Equal", span=""];
m2_9 [cluster="System.InvalidOperationException.InvalidOperationException()", file="MessageQueueJobQueue.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m2_21 [cluster="Unk.>", file="MessageQueueJobQueue.cs", label="Entry Unk.>", span=""];
m2_16 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m2_11 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11"];
m2_44 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126"];
m2_99 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="MessageQueueJobQueue.cs", label="return new AutomaticRetryAttribute { Attempts = 1 };", span="128-128"];
m2_100 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126"];
m2_34 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="MessageQueueJobQueue.cs", label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
m2_71 [cluster="Unk.GetJobParameter", file="MessageQueueJobQueue.cs", label="Entry Unk.GetJobParameter", span=""];
m2_66 [cluster="Unk.Setup", file="MessageQueueJobQueue.cs", label="Entry Unk.Setup", span=""];
m2_36 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58"];
m2_37 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: var filter = CreateFilter()", span="60-60"];
m2_38 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: filter.OnStateElection(_context.Object)", span="61-61"];
m2_39 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: Assert.IsType<ScheduledState>(_context.Object.CandidateState)", span="63-63"];
m2_40 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: Assert.True(((ScheduledState)_context.Object.CandidateState).EnqueueAt > DateTime.UtcNow)", span="64-64"];
m2_41 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: Assert.Contains(''1 of 1'', _context.Object.CandidateState.Reason)", span="65-65"];
m2_42 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: _connection.Verify(x => x.SetJobParameter(JobId, ''RetryCount'', ''1''))", span="67-67"];
m2_43 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58"];
m2_52 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71"];
m2_53 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: var filter = CreateFilter()", span="73-73"];
m2_54 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: var state = new Mock<IState>()", span="74-74"];
m2_56 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: filter.OnStateElection(_context.Object)", span="77-77"];
m2_55 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: _context.CandidateStateValue = state.Object", span="75-75"];
m2_57 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: Assert.Same(state.Object, _context.Object.CandidateState)", span="79-79"];
m2_58 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71"];
m2_60 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83"];
m2_61 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: _connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="85-85"];
m2_62 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: var filter = CreateFilter()", span="86-86"];
m2_63 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: filter.OnStateElection(_context.Object)", span="88-88"];
m2_64 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: Assert.Same(_failedState, _context.Object.CandidateState)", span="90-90"];
m2_65 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83"];
m2_12 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28"];
m2_13 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: var filter = new AutomaticRetryAttribute()", span="30-30"];
m2_14 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: Assert.Equal(10, filter.Attempts)", span="31-31"];
m2_15 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28"];
m2_29 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49"];
m2_30 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: var filter = new AutomaticRetryAttribute { Attempts = 0 }", span="51-51"];
m2_31 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: filter.OnStateElection(_context.Object)", span="52-52"];
m2_32 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: Assert.Same(_failedState, _context.Object.CandidateState)", span="54-54"];
m2_33 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49"];
m2_96 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Entry lambda expression", span="118-118"];
m2_22 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Entry lambda expression", span="38-38"];
m2_23 [cluster="lambda expression", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: new AutomaticRetryAttribute { Attempts = -1 }", span="38-38"];
m2_24 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Exit lambda expression", span="38-38"];
m2_48 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Entry lambda expression", span="67-67"];
m2_49 [cluster="lambda expression", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: x.SetJobParameter(JobId, ''RetryCount'', ''1'')", span="67-67"];
m2_50 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Exit lambda expression", span="67-67"];
m2_68 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Entry lambda expression", span="85-85"];
m2_69 [cluster="lambda expression", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: x.GetJobParameter(JobId, ''RetryCount'')", span="85-85"];
m2_70 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Exit lambda expression", span="85-85"];
m2_78 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Entry lambda expression", span="96-96"];
m2_79 [cluster="lambda expression", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: x.GetJobParameter(JobId, ''RetryCount'')", span="96-96"];
m2_80 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Exit lambda expression", span="96-96"];
m2_87 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Entry lambda expression", span="107-107"];
m2_88 [cluster="lambda expression", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: x.GetJobParameter(JobId, ''RetryCount'')", span="107-107"];
m2_89 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Exit lambda expression", span="107-107"];
m2_97 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="x.GetJobParameter(JobId, ''RetryCount'')", span="118-118"];
m2_98 [cluster="lambda expression", file="MessageQueueJobQueue.cs", label="Exit lambda expression", span="118-118"];
m2_46 [cluster="Unk.Contains", file="MessageQueueJobQueue.cs", label="Entry Unk.Contains", span=""];
m2_47 [cluster="Unk.Verify", file="MessageQueueJobQueue.cs", label="Entry Unk.Verify", span=""];
m2_81 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105"];
m2_82 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: _connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="107-107"];
m2_83 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Fail }", span="108-108"];
m2_84 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="MessageQueueJobQueue.cs", label="filter.OnStateElection(_context.Object)", span="110-110"];
m2_85 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="MessageQueueJobQueue.cs", label="Assert.IsType<FailedState>(_context.Object.CandidateState)", span="112-112"];
m2_86 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105"];
m2_72 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94"];
m2_73 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: _connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="96-96"];
m2_74 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="97-97"];
m2_75 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: filter.OnStateElection(_context.Object)", span="99-99"];
m2_76 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="101-101"];
m2_77 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94"];
m2_45 [cluster="Unk.True", file="MessageQueueJobQueue.cs", label="Entry Unk.True", span=""];
m2_0 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16"];
m2_1 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: _failedState = new FailedState(new InvalidOperationException())", span="18-18"];
m2_2 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: _connection = new Mock<IStorageConnection>()", span="19-19"];
m2_3 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: _context = new ElectStateContextMock()", span="21-21"];
m2_4 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: _context.StateContextValue.JobIdValue = JobId", span="22-22"];
m2_5 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: _context.ConnectionValue = _connection", span="23-23"];
m2_6 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: _context.CandidateStateValue = _failedState", span="24-24"];
m2_7 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16"];
m2_67 [cluster="Unk.Returns", file="MessageQueueJobQueue.cs", label="Entry Unk.Returns", span=""];
m2_10 [cluster="Mock<IStorageConnection>.cstr", file="MessageQueueJobQueue.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m2_51 [cluster="Unk.SetJobParameter", file="MessageQueueJobQueue.cs", label="Entry Unk.SetJobParameter", span=""];
m2_18 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35"];
m2_19 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", color=red, community=0, file="MessageQueueJobQueue.cs", label="4: Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new AutomaticRetryAttribute { Attempts = -1 })", span="37-38"];
m2_20 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35"];
m2_25 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="MessageQueueJobQueue.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42"];
m2_26 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", color=red, community=0, file="MessageQueueJobQueue.cs", label="0: var filter = new AutomaticRetryAttribute()", span="44-44"];
m2_27 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", color=red, community=0, file="MessageQueueJobQueue.cs", label="1: Assert.Equal(AttemptsExceededAction.Fail, filter.OnAttemptsExceeded)", span="45-45"];
m2_28 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="MessageQueueJobQueue.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42"];
m2_101 [file="MessageQueueJobQueue.cs", label="Hangfire.Core.Tests.RetryAttributeFacts", span=""];
m3_25 [cluster="Unk.OnScenarioStart", file="MessageQueueProcessingJob.cs", label="Entry Unk.OnScenarioStart", span=""];
m3_29 [cluster="Unk.CollectScenarioErrors", file="MessageQueueProcessingJob.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m3_21 [cluster="Unk.OnScenarioEnd", file="MessageQueueProcessingJob.cs", label="Entry Unk.OnScenarioEnd", span=""];
m3_0 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m3_1 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="MessageQueueProcessingJob.cs", label="0: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m3_2 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="MessageQueueProcessingJob.cs", label="0: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''SchedulePoller'', ''\r\n  As an Administrator (or a Developer), I want the scheduled \r\n  jobs to added '' +\r\n                    ''to their actual queues when their time has come.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m3_3 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="MessageQueueProcessingJob.cs", label="4: testRunner.OnFeatureStart(featureInfo)", span="36-36"];
m3_4 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m3_75 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", span="166-166"];
m3_76 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller move the job to the Failed state when it could not find its type'', ((string[])(null)))", span="168-168"];
m3_77 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="170-170"];
m3_78 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172"];
m3_79 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="174-174"];
m3_80 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="testRunner.Then(''the job should be moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="176-176"];
m3_81 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="this.ScenarioCleanup()", span="178-178"];
m3_82 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerMoveTheJobToTheFailedStateWhenItCouldNotFindItsType()", span="166-166"];
m3_45 [cluster="Unk.And", file="MessageQueueProcessingJob.cs", label="Entry Unk.And", span=""];
m3_46 [cluster="Unk.But", file="MessageQueueProcessingJob.cs", label="Entry Unk.But", span=""];
m3_83 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="185-185"];
m3_84 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller will fail only jobs in the Scheduled state'', ((string[])(null)))", span="187-187"];
m3_85 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="189-189"];
m3_86 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.Given(''a scheduled job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191"];
m3_87 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193"];
m3_88 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195"];
m3_89 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197"];
m3_90 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="this.ScenarioCleanup()", span="199-199"];
m3_91 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerWillFailOnlyJobsInTheScheduledState()", span="185-185"];
m3_5 [cluster="Unk.GetTestRunner", file="MessageQueueProcessingJob.cs", label="Entry Unk.GetTestRunner", span=""];
m3_14 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47"];
m3_15 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", color=red, community=0, file="MessageQueueProcessingJob.cs", label="1: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''SchedulePoller''))", span="49-50"];
m3_16 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="MessageQueueProcessingJob.cs", label="HangFire.Tests.Server.SchedulePollerFeature.FeatureSetup(null)", span="52-52"];
m3_17 [cluster="HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.TestInitialize()", span="47-47"];
m3_26 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", span="67-67"];
m3_27 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="MessageQueueProcessingJob.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m3_28 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioCleanup()", span="67-67"];
m3_18 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", span="57-57"];
m3_19 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="MessageQueueProcessingJob.cs", label="testRunner.OnScenarioEnd()", span="59-59"];
m3_20 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioTearDown()", span="57-57"];
m3_13 [cluster="Unk.OnFeatureEnd", file="MessageQueueProcessingJob.cs", label="Entry Unk.OnFeatureEnd", span=""];
m3_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="MessageQueueProcessingJob.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_43 [cluster="Unk.When", file="MessageQueueProcessingJob.cs", label="Entry Unk.When", span=""];
m3_58 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126"];
m3_59 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Poller should enqueue only jobs in the Scheduled state'', ((string[])(null)))", span="128-128"];
m3_60 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="130-130"];
m3_61 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="132-132"];
m3_62 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="134-134"];
m3_63 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="136-136"];
m3_64 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.Then(''the job should be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="138-138"];
m3_65 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140"];
m3_66 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="this.ScenarioCleanup()", span="142-142"];
m3_67 [cluster="HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.PollerShouldEnqueueOnlyJobsInTheScheduledState()", span="126-126"];
m3_41 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="MessageQueueProcessingJob.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m3_47 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101"];
m3_48 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Future jobs should not be enqueued'', ((string[])(null)))", span="103-103"];
m3_49 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="105-105"];
m3_50 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="testRunner.Given(''a future job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="107-107"];
m3_51 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="109-109"];
m3_52 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="testRunner.Then(''the job should be in the Scheduled state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="111-111"];
m3_53 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''the schedule should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="113-113"];
m3_54 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''the queue should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="115-115"];
m3_55 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="117-117"];
m3_56 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="this.ScenarioCleanup()", span="119-119"];
m3_57 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FutureJobsShouldNotBeEnqueued()", span="101-101"];
m3_9 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40"];
m3_10 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", color=red, community=0, file="MessageQueueProcessingJob.cs", label="4: testRunner.OnFeatureEnd()", span="42-42"];
m3_11 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", color=red, community=0, file="MessageQueueProcessingJob.cs", label="4: testRunner = null", span="43-43"];
m3_12 [cluster="HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.FeatureTearDown()", span="40-40"];
m3_44 [cluster="Unk.Then", file="MessageQueueProcessingJob.cs", label="Entry Unk.Then", span=""];
m3_42 [cluster="Unk.Given", file="MessageQueueProcessingJob.cs", label="Entry Unk.Given", span=""];
m3_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="MessageQueueProcessingJob.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m3_30 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76"];
m3_31 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Scheduled jobs should be enqueued on their actual queues'', ((string[])(null)))", span="78-78"];
m3_32 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="80-80"];
m3_33 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="testRunner.Given(''a scheduled job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="82-82"];
m3_34 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="84-84"];
m3_35 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="testRunner.Then(''the job should be in the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="86-86"];
m3_36 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''the schedule should not contain it anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="88-88"];
m3_37 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="testRunner.But(''the queue should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="90-90"];
m3_38 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="testRunner.And(''schedule poller should return \'true\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="92-92"];
m3_39 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="this.ScenarioCleanup()", span="94-94"];
m3_40 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScheduledJobsShouldBeEnqueuedOnTheirActualQueues()", span="76-76"];
m3_22 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m3_23 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="MessageQueueProcessingJob.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m3_24 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m3_68 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="Entry HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149"];
m3_69 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Should return false when there are no jobs in the schedule'', ((string[])(null)))", span="151-151"];
m3_70 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="this.ScenarioSetup(scenarioInfo)", span="153-153"];
m3_71 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="testRunner.When(''the poller runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="155-155"];
m3_72 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="testRunner.Then(''schedule poller should return \'false\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="157-157"];
m3_73 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="this.ScenarioCleanup()", span="159-159"];
m3_74 [cluster="HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", file="MessageQueueProcessingJob.cs", label="Exit HangFire.Tests.Server.SchedulePollerFeature.ShouldReturnFalseWhenThereAreNoJobsInTheSchedule()", span="149-149"];
m3_8 [cluster="Unk.OnFeatureStart", file="MessageQueueProcessingJob.cs", label="Entry Unk.OnFeatureStart", span=""];
m3_92 [file="MessageQueueProcessingJob.cs", label="HangFire.Tests.Server.SchedulePollerFeature", span=""];
m4_7 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="93-93"];
m4_8 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="_server != null", span="95-95"];
m4_9 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="97-97"];
m4_10 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="var serverName = String.Format(''{0}:{1}'', MachineName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="100-100"];
m4_11 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="_server = new JobServer(JobStorage.Current, serverName, WorkerCount, Queues)", span="102-102"];
m4_12 [cluster="HangFire.BackgroundJobServer.Start()", file="Program.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="93-93"];
m4_16 [cluster="string.Format(string, object, object)", file="Program.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_15 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="Program.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m4_17 [cluster="HangFire.Server.JobServer.JobServer(HangFire.JobStorage, string, int, System.Collections.Generic.IEnumerable<string>)", file="Program.cs", label="Entry HangFire.Server.JobServer.JobServer(HangFire.JobStorage, string, int, System.Collections.Generic.IEnumerable<string>)", span="47-47"];
m4_25 [cluster="HangFire.Server.JobServer.Dispose()", file="Program.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="72-72"];
m4_26 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="121-121"];
m4_27 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="Program.cs", label="Stop()", span="123-123"];
m4_28 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="Program.cs", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="121-121"];
m4_0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="Program.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36"];
m4_1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="Program.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36"];
m4_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Program.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m4_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Program.cs", label="MachineName = Environment.MachineName", span="43-43"];
m4_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Program.cs", label="WorkerCount = workerCount", span="45-45"];
m4_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Program.cs", label="Queues = queues.Length != 0 ? queues : new[] { EnqueuedState.DefaultQueue }", span="46-46"];
m4_6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="Program.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m4_18 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="109-109"];
m4_19 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="_server != null", span="111-111"];
m4_20 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="_server.Dispose()", span="113-113"];
m4_23 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="return false;", span="118-118"];
m4_21 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="_server = null", span="114-114"];
m4_22 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="return true;", span="116-116"];
m4_24 [cluster="HangFire.BackgroundJobServer.Stop()", file="Program.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="109-109"];
m4_14 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m4_13 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Program.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m4_29 [file="Program.cs", label="HangFire.BackgroundJobServer", span=""];
m5_3 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="RedisConnection.cs", label="OldStateValue = null", span="16-16"];
m5_4 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="RedisConnection.cs", label="TraversedStatesValue = Enumerable.Empty<IState>()", span="17-17"];
m5_5 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="RedisConnection.cs", label="_context = new Lazy<ApplyStateContext>(\r\n                () => new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue,\r\n                    TraversedStatesValue))", span="19-24"];
m5_146 [cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m5_12 [cluster="lambda expression", file="RedisConnection.cs", label="new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue,\r\n                    TraversedStatesValue)", span="20-24"];
m5_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="RedisConnection.cs", label="4: return new RedisProcessingJob(this, jobId, queueName);", span="105-105"];
m5_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="queueName = queues[queueIndex]", span="61-61"];
m5_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="68-71"];
m5_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="75-76"];
m5_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="96-99"];
m5_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="60-60"];
m5_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="63-63"];
m5_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="64-64"];
m5_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="queueIndex == 0", span="66-66"];
m5_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId == null", span="79-79"];
m5_13 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="20-24"];
m5_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="58-58"];
m5_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="Hangfire.Core.Tests.ApplyStateContextMock", span=""];
m5_14 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="RedisConnection.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24"];
m5_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
m5_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_96 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m5_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47"];
m5_204 [cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m5_65 [cluster="Unk.SetRangeInHash", file="RedisConnection.cs", label="Entry Unk.SetRangeInHash", span=""];
m5_38 [cluster="System.TimeSpan.FromMinutes(double)", file="RedisConnection.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m5_94 [cluster="Unk.GetAllEntriesFromHash", file="RedisConnection.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m5_203 [cluster="Unk.FromStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromStringTimestamp", span=""];
m5_171 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298"];
m5_172 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="300-300"];
m5_175 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var pipeline = Redis.CreatePipeline()", span="305-305"];
m5_184 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="RemoveServer(Redis, heartbeat.Key)", span="333-333"];
m5_173 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="301-301"];
m5_176 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=serverNames, span="307-307"];
m5_174 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var utcNow = DateTime.UtcNow", span="303-303"];
m5_178 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="311-319"];
m5_179 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.Flush()", span="322-322"];
m5_183 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="utcNow > maxTime.Add(timeOut)", span="331-331"];
m5_182 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="328-329"];
m5_185 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="removedServerCount++", span="334-334"];
m5_180 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var removedServerCount = 0", span="325-325"];
m5_181 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=heartbeats, span="326-326"];
m5_177 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var name = serverName", span="309-309"];
m5_186 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="return removedServerCount;", span="338-338"];
m5_187 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298"];
m5_33 [cluster="Unk.SetEntryInHash", file="RedisConnection.cs", label="Entry Unk.SetEntryInHash", span=""];
m5_11 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="20-24"];
m5_141 [cluster="Unk.AddItemToSet", file="RedisConnection.cs", label="Entry Unk.AddItemToSet", span=""];
m5_29 [cluster="string.Format(string, object)", file="RedisConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_120 [cluster="Unk.RemoveEntryFromHash", file="RedisConnection.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m5_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="RedisConnection.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m5_168 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290"];
m5_169 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="292-295"];
m5_170 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290"];
m5_167 [cluster="Unk.RemoveEntry", file="RedisConnection.cs", label="Entry Unk.RemoveEntry", span=""];
m5_157 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="282-284"];
m5_154 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274"];
m5_155 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="var transaction = redis.CreateTransaction()", span="276-276"];
m5_156 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="278-280"];
m5_158 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.Commit()", span="286-286"];
m5_159 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274"];
m5_7 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="RedisConnection.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10"];
m5_9 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RedisConnection.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_10 [cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m5_102 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208"];
m5_103 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="210-212"];
m5_104 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208"];
m5_69 [cluster="Unk.ExpireEntryIn", file="RedisConnection.cs", label="Entry Unk.ExpireEntryIn", span=""];
m5_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
m5_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs", label="Redis = redis", span="35-35"];
m5_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
m5_6 [cluster="Unk.Dispose", file="RedisConnection.cs", label="Entry Unk.Dispose", span=""];
m5_190 [cluster="Unk.Flush", file="RedisConnection.cs", label="Entry Unk.Flush", span=""];
m5_56 [cluster="System.Guid.ToString()", file="RedisConnection.cs", label="Entry System.Guid.ToString()", span="0-0"];
m5_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m5_205 [cluster="Unk.Add", file="RedisConnection.cs", label="Entry Unk.Add", span=""];
m5_193 [cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m5_129 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242"];
m5_130 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="var transaction = Redis.CreateTransaction()", span="244-244"];
m5_131 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="246-247"];
m5_132 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="249-255"];
m5_135 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="260-262"];
m5_136 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.Commit()", span="265-265"];
m5_133 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="context.Queues", span="257-257"];
m5_134 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="var queue1 = queue", span="259-259"];
m5_137 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242"];
m5_202 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m5_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m5_150 [cluster="Unk.AddItemToList", file="RedisConnection.cs", label="Entry Unk.AddItemToList", span=""];
m5_110 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="227-229"];
m5_107 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="var transaction = Redis.CreateTransaction()", span="217-217"];
m5_106 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
m5_108 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="219-222"];
m5_109 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="224-226"];
m5_111 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="transaction.Commit()", span="231-231"];
m5_112 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
m5_191 [cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m5_163 [cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m5_151 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269"];
m5_152 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="RemoveServer(Redis, serverId)", span="271-271"];
m5_153 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269"];
m5_192 [cluster="System.Math.Max(long, long)", file="RedisConnection.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m5_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m5_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152"];
m5_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.Count == 0", span="154-154"];
m5_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''Type'')", span="161-161"];
m5_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="type = storedData[''Type'']", span="163-163"];
m5_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''Method'')", span="165-165"];
m5_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="method = storedData[''Method'']", span="167-167"];
m5_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="169-169"];
m5_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="171-171"];
m5_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''Arguments'')", span="173-173"];
m5_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="arguments = storedData[''Arguments'']", span="175-175"];
m5_92 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="192-197"];
m5_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string type = null", span="156-156"];
m5_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string method = null", span="157-157"];
m5_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string parameterTypes = null", span="158-158"];
m5_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string arguments = null", span="159-159"];
m5_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="Job job = null", span="178-178"];
m5_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="JobLoadException loadException = null", span="179-179"];
m5_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="return null;", span="154-154"];
m5_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="181-181"];
m5_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="job = invocationData.Deserialize()", span="185-185"];
m5_91 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="loadException = ex", span="189-189"];
m5_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label=JobLoadException, span="187-187"];
m5_93 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m5_57 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m5_160 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="278-280"];
m5_67 [cluster="lambda expression", file="RedisConnection.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="138-140"];
m5_63 [cluster="lambda expression", file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136"];
m5_114 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="219-222"];
m5_118 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="224-226"];
m5_122 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="227-229"];
m5_143 [cluster="lambda expression", file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="249-255"];
m5_148 [cluster="lambda expression", file="RedisConnection.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="260-262"];
m5_165 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="282-284"];
m5_62 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="134-136"];
m5_66 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="138-140"];
m5_113 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="219-222"];
m5_117 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="224-226"];
m5_121 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="227-229"];
m5_139 [cluster="lambda expression", file="RedisConnection.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="246-247"];
m5_138 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="246-247"];
m5_142 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="249-255"];
m5_147 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="260-262"];
m5_161 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="278-280"];
m5_200 [cluster="lambda expression", file="RedisConnection.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="315-319"];
m5_194 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="312-314"];
m5_199 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="315-319"];
m5_68 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="138-140"];
m5_64 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="134-136"];
m5_115 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="219-222"];
m5_119 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="224-226"];
m5_123 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="227-229"];
m5_144 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="249-255"];
m5_149 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="260-262"];
m5_164 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="282-284"];
m5_166 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="282-284"];
m5_140 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="246-247"];
m5_162 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="278-280"];
m5_201 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="315-319"];
m5_195 [cluster="lambda expression", file="RedisConnection.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="312-314"];
m5_196 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="312-314"];
m5_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m5_128 [cluster="Unk.FirstOrDefault", file="RedisConnection.cs", label="Entry Unk.FirstOrDefault", span=""];
m5_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m5_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var transaction = Redis.CreateTransaction()", span="132-132"];
m5_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130"];
m5_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136"];
m5_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="138-140"];
m5_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="transaction.Commit()", span="143-143"];
m5_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125"];
m5_47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129"];
m5_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var jobId = Guid.NewGuid().ToString()", span="120-120"];
m5_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="return jobId;", span="146-146"];
m5_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="122-122"];
m5_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126"];
m5_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127"];
m5_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128"];
m5_54 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m5_35 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m5_36 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="110-112"];
m5_37 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m5_189 [cluster="Unk.CreatePipeline", file="RedisConnection.cs", label="Entry Unk.CreatePipeline", span=""];
m5_99 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200"];
m5_100 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="202-205"];
m5_101 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200"];
m5_116 [cluster="Unk.RemoveItemFromList", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromList", span=""];
m5_55 [cluster="System.Guid.NewGuid()", file="RedisConnection.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m5_105 [cluster="Unk.GetValueFromHash", file="RedisConnection.cs", label="Entry Unk.GetValueFromHash", span=""];
m5_61 [cluster="Unk.Commit", file="RedisConnection.cs", label="Entry Unk.Commit", span=""];
m5_188 [cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m5_98 [cluster="HangFire.Storage.JobData.JobData()", file="RedisConnection.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m5_97 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m5_197 [cluster="Unk.Format", file="RedisConnection.cs", label="Entry Unk.Format", span=""];
m5_198 [cluster="Unk.GetValuesFromHash", file="RedisConnection.cs", label="Entry Unk.GetValuesFromHash", span=""];
m5_127 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisConnection.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m5_60 [cluster="Unk.QueueCommand", file="RedisConnection.cs", label="Entry Unk.QueueCommand", span=""];
m5_31 [cluster="Unk.PopAndPushItemBetweenLists", file="RedisConnection.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m5_34 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m5_39 [cluster="Unk.AcquireLock", file="RedisConnection.cs", label="Entry Unk.AcquireLock", span=""];
m5_124 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235"];
m5_125 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="237-239"];
m5_126 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235"];
m5_95 [cluster="Unk.ContainsKey", file="RedisConnection.cs", label="Entry Unk.ContainsKey", span=""];
m5_206 [file="RedisConnection.cs", label="HangFire.Redis.RedisConnection", span=""];
m5_207 [file="RedisConnection.cs", label=jobId, span=""];
m5_209 [file="RedisConnection.cs", label="System.TimeSpan", span=""];
m5_208 [file="RedisConnection.cs", label=storedParameters, span=""];
m5_210 [file="RedisConnection.cs", label=string, span=""];
m5_211 [file="RedisConnection.cs", label=string, span=""];
m5_212 [file="RedisConnection.cs", label=string, span=""];
m5_213 [file="RedisConnection.cs", label="HangFire.Server.ServerContext", span=""];
m5_214 [file="RedisConnection.cs", label=queue1, span=""];
m5_215 [file="RedisConnection.cs", label=string, span=""];
m5_216 [file="RedisConnection.cs", label=name, span=""];
m5_217 [file="RedisConnection.cs", label=heartbeats, span=""];
m6_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisProcessingJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_15 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="RedisProcessingJob.cs", label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
m6_12 [cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="RedisProcessingJob.cs", label="Entry HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40"];
m6_13 [cluster="HangFire.Redis.RedisProcessingJob.Dispose()", color=red, community=0, file="RedisProcessingJob.cs", label="1: _connection.DeleteJobFromQueue(JobId, Queue)", span="42-42"];
m6_14 [cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="RedisProcessingJob.cs", label="Exit HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40"];
m6_0 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m6_1 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="RedisProcessingJob.cs", label="0: connection == null", span="27-27"];
m6_3 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="jobId == null", span="28-28"];
m6_5 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="queue == null", span="29-29"];
m6_7 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="RedisProcessingJob.cs", label="4: _connection = connection", span="31-31"];
m6_8 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="JobId = jobId", span="33-33"];
m6_9 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="Queue = queue", span="34-34"];
m6_2 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="RedisProcessingJob.cs", label="4: throw new ArgumentNullException(''connection'');", span="27-27"];
m6_4 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="throw new ArgumentNullException(''jobId'');", span="28-28"];
m6_6 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="throw new ArgumentNullException(''queue'');", span="29-29"];
m6_10 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="RedisProcessingJob.cs", label="Exit HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m6_16 [file="RedisProcessingJob.cs", label="HangFire.Redis.RedisProcessingJob", span=""];
m7_33 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="101-101"];
m7_34 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="104-104"];
m7_35 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="var applyContext = new ApplyStateContext(\r\n                    context.Storage,\r\n                    context.Connection,\r\n                    transaction,\r\n                    backgroundJob,\r\n                    toState,\r\n                    oldStateName)", span="106-112"];
m7_37 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="transaction.Commit()", span="116-116"];
m7_36 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="var appliedState = _stateMachine.ApplyState(applyContext)", span="114-114"];
m7_38 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="return appliedState;", span="118-118"];
m7_39 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="101-101"];
m7_0 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", span="30-30"];
m7_1 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", file="RedisProcessingJobFacts.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger()", span="30-30"];
m7_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisProcessingJobFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_30 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75"];
m7_42 [cluster="Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.IStateMachine.ApplyState(Hangfire.States.ApplyStateContext)", span="30-30"];
m7_4 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", span="40-40"];
m7_5 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="RedisProcessingJobFacts.cs", label="stateMachine == null", span="42-42"];
m7_7 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="RedisProcessingJobFacts.cs", label="_stateMachine = stateMachine", span="43-43"];
m7_6 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="RedisProcessingJobFacts.cs", label="throw new ArgumentNullException(''stateMachine'');", span="42-42"];
m7_8 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", file="RedisProcessingJobFacts.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.States.IStateMachine)", span="40-40"];
m7_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="RedisProcessingJobFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m7_41 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Storage.IWriteOnlyTransaction, Hangfire.BackgroundJob, Hangfire.States.IState, string)", span="33-33"];
m7_57 [cluster="string.IsNullOrEmpty(string)", file="RedisProcessingJobFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_2 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m7_3 [cluster="Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", file="RedisProcessingJobFacts.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.BackgroundJobStateChanger(Hangfire.Common.IJobFilterProvider)", span="35-35"];
m7_10 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="46-46"];
m7_11 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="context.Connection.AcquireDistributedJobLock(context.BackgroundJobId, JobLockTimeout)", span="54-54"];
m7_12 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="RedisProcessingJobFacts.cs", label="0: var jobData = GetJobData(context)", span="56-56"];
m7_15 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="RedisProcessingJobFacts.cs", label="4: context.ExpectedStates != null && !context.ExpectedStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="65-65"];
m7_17 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="RedisProcessingJobFacts.cs", label="4: var appliedState = context.NewState", span="70-70"];
m7_22 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="var backgroundJob = new BackgroundJob(context.BackgroundJobId, jobData.Job, jobData.CreatedAt)", span="94-94"];
m7_23 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="appliedState = ChangeState(context, backgroundJob, appliedState, jobData.State)", span="95-95"];
m7_13 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="jobData == null", span="58-58"];
m7_18 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="RedisProcessingJobFacts.cs", label="1: jobData.EnsureLoaded()", span="74-74"];
m7_14 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="RedisProcessingJobFacts.cs", label="2: return null;", span="62-62"];
m7_16 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", color=red, community=0, file="RedisProcessingJobFacts.cs", label="4: return null;", span="67-67"];
m7_20 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="!appliedState.IgnoreJobLoadException", span="83-83"];
m7_21 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="appliedState = new FailedState(ex.InnerException)\r\n                        {\r\n                            Reason = String.Format(\r\n                                ''Can not change the state to '{0}': target method was not found.'',\r\n                                appliedState.Name)\r\n                        }", span="85-90"];
m7_19 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label=JobLoadException, span="76-76"];
m7_24 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="return appliedState;", span="97-97"];
m7_25 [cluster="Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="46-46"];
m7_43 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m7_56 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m7_27 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", span="122-122"];
m7_44 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="var firstAttempt = true", span="124-124"];
m7_46 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="var jobData = context.Connection.GetJobData(context.BackgroundJobId)", span="128-128"];
m7_51 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="context.CancellationToken.IsCancellationRequested", span="139-139"];
m7_45 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label=true, span="126-126"];
m7_53 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="Thread.Sleep(firstAttempt ? 0 : 100)", span="144-144"];
m7_47 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="jobData == null", span="129-129"];
m7_49 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="!String.IsNullOrEmpty(jobData.State)", span="134-134"];
m7_50 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="return jobData;", span="136-136"];
m7_48 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="return null;", span="131-131"];
m7_52 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="return null;", span="141-141"];
m7_54 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="firstAttempt = false", span="145-145"];
m7_55 [cluster="Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", file="RedisProcessingJobFacts.cs", label="Exit Hangfire.States.BackgroundJobStateChanger.GetJobData(Hangfire.States.StateChangeContext)", span="122-122"];
m7_40 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m7_29 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m7_31 [cluster="string.Format(string, object)", file="RedisProcessingJobFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_26 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedJobLock(string, System.TimeSpan)", span="26-26"];
m7_32 [cluster="Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", file="RedisProcessingJobFacts.cs", label="Entry Hangfire.BackgroundJob.BackgroundJob(string, Hangfire.Common.Job, System.DateTime)", span="25-25"];
m7_58 [cluster="System.Threading.Thread.Sleep(int)", file="RedisProcessingJobFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m7_59 [file="RedisProcessingJobFacts.cs", label="Hangfire.States.BackgroundJobStateChanger", span=""];
m8_342 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m8_601 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853"];
m8_602 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="855-858"];
m8_603 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853"];
m8_134 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m8_600 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_380 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286"];
m8_36 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52"];
m8_789 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168"];
m8_791 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1174-1189"];
m8_790 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1170-1172"];
m8_792 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168"];
m8_457 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644"];
m8_458 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnection.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="646-647"];
m8_459 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644"];
m8_439 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323"];
m8_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492"];
m8_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnection.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="494-495"];
m8_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492"];
m8_718 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054"];
m8_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1056-1060"];
m8_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054"];
m8_646 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932"];
m8_648 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="938-951"];
m8_647 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="934-936"];
m8_649 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932"];
m8_843 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262"];
m8_845 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1268-1283"];
m8_844 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1264-1266"];
m8_846 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262"];
m8_554 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271"];
m8_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340"];
m8_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="342-348"];
m8_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340"];
m8_322 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456"];
m8_324 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="467-476"];
m8_323 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="458-465"];
m8_325 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456"];
m8_887 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="SqlServerConnection.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m8_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399"];
m8_285 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="406-418"];
m8_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="401-404"];
m8_286 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399"];
m8_132 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m8_836 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252"];
m8_837 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1254-1258"];
m8_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252"];
m8_895 [cluster="SqlServerConnection.cstr", file="SqlServerConnection.cs", label="Entry SqlServerConnection.cstr", span=""];
m8_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213"];
m8_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="SqlServerConnection.cs", label="0: UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="215-217"];
m8_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213"];
m8_862 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296"];
m8_863 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1298-1302"];
m8_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296"];
m8_429 [cluster="Unk.NotEqual", file="SqlServerConnection.cs", label="Entry Unk.NotEqual", span=""];
m8_808 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473"];
m8_698 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019"];
m8_700 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1025-1040"];
m8_699 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1021-1023"];
m8_701 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019"];
m8_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352"];
m8_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="359-371"];
m8_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="354-357"];
m8_263 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352"];
m8_332 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480"];
m8_333 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="482-488"];
m8_334 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480"];
m8_771 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432"];
m8_409 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587"];
m8_410 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="589-590"];
m8_411 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587"];
m8_751 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109"];
m8_753 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1115-1130"];
m8_752 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1111-1113"];
m8_754 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109"];
m8_368 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m8_218 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268"];
m8_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="284-299"];
m8_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="270-282"];
m8_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268"];
m8_637 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907"];
m8_639 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="913-928"];
m8_638 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="909-911"];
m8_640 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907"];
m8_238 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m8_826 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242"];
m8_827 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1244-1248"];
m8_828 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242"];
m8_467 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335"];
m8_6 [cluster="HangFire.Sample.MvcApplication.Application_Start()", file="SqlServerConnection.cs", label="Exit HangFire.Sample.MvcApplication.Application_Start()", span="16-16"];
m8_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544"];
m8_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="546-552"];
m8_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544"];
m8_743 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456"];
m8_664 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404"];
m8_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="20-20"];
m8_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnection.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="22-22"];
m8_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnection.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="24-24"];
m8_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnection.cs", label="provider.Setup(x => x.GetJobQueue())\r\n                .Returns(_queue.Object)", span="25-26"];
m8_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnection.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="28-28"];
m8_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="20-20"];
m8_184 [cluster="int.ToString()", file="SqlServerConnection.cs", label="Entry int.ToString()", span="0-0"];
m8_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434"];
m8_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="436-442"];
m8_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434"];
m8_182 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m8_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303"];
m8_231 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="310-324"];
m8_230 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="305-308"];
m8_232 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303"];
m8_869 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306"];
m8_871 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1312-1327"];
m8_870 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1308-1310"];
m8_872 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306"];
m8_629 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389"];
m8_135 [cluster="System.DateTime.AddDays(double)", file="SqlServerConnection.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m8_418 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311"];
m8_7 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="SqlServerConnection.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m8_133 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerConnection.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m8_545 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766"];
m8_546 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="768-769"];
m8_547 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766"];
m8_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682"];
m8_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="684-690"];
m8_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682"];
m8_198 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221"];
m8_199 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", color=green, community=0, file="SqlServerConnection.cs", label="4: UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="223-227"];
m8_200 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221"];
m8_555 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773"];
m8_556 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="775-779"];
m8_557 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773"];
m8_419 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594"];
m8_421 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="602-610"];
m8_420 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="596-600"];
m8_422 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594"];
m8_15 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32"];
m8_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="SqlServerConnection.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", span="34-35"];
m8_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnection.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="37-37"];
m8_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32"];
m8_562 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783"];
m8_564 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="789-807"];
m8_563 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="785-787"];
m8_565 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783"];
m8_761 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134"];
m8_762 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1136-1142"];
m8_763 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134"];
m8_691 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009"];
m8_692 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1011-1015"];
m8_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009"];
m8_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146"];
m8_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1148-1154"];
m8_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146"];
m8_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556"];
m8_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="558-583"];
m8_393 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556"];
m8_185 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="189-189"];
m8_21 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="35-35"];
m8_22 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: new SqlServerConnection(null)", span="35-35"];
m8_23 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="35-35"];
m8_29 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="43-51"];
m8_46 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="57-65"];
m8_50 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="4: Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="63-64"];
m8_47 [cluster="lambda expression", file="SqlServerConnection.cs", label="var token = new CancellationToken()", span="59-59"];
m8_49 [cluster="lambda expression", file="SqlServerConnection.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="61-61"];
m8_51 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="57-65"];
m8_53 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="64-64"];
m8_54 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="64-64"];
m8_55 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="64-64"];
m8_59 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="71-75"];
m8_60 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: var transaction = connection.CreateWriteTransaction()", span="73-73"];
m8_61 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="4: Assert.NotNull(transaction)", span="74-74"];
m8_62 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="71-75"];
m8_68 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="81-85"];
m8_69 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="83-83"];
m8_70 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="4: Assert.NotNull(@lock)", span="84-84"];
m8_71 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="81-85"];
m8_77 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="91-101"];
m8_78 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="93-98"];
m8_79 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="4: Assert.Equal(''job'', exception.ParamName)", span="100-100"];
m8_81 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="94-98"];
m8_82 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="0: connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="94-98"];
m8_83 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="94-98"];
m8_80 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="91-101"];
m8_191 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="216-217"];
m8_192 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="4: Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="216-217"];
m8_193 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="216-217"];
m8_194 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="217-217"];
m8_195 [cluster="lambda expression", color=green, community=0, file="SqlServerConnection.cs", label="1: connection.GetStateData(null)", span="217-217"];
m8_196 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="217-217"];
m8_201 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="223-227"];
m8_90 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="109-114"];
m8_152 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="165-166"];
m8_243 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="332-333"];
m8_254 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="344-345"];
m8_298 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="426-427"];
m8_309 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="438-439"];
m8_327 [cluster="lambda expression", file="SqlServerConnection.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="469-471"];
m8_336 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="484-485"];
m8_347 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="494-495"];
m8_373 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="536-537"];
m8_385 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="548-549"];
m8_413 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="589-590"];
m8_434 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="616-617"];
m8_461 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="646-647"];
m8_484 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="678-678"];
m8_513 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="725-726"];
m8_524 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="737-738"];
m8_549 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="769-769"];
m8_578 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="815-816"];
m8_605 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="857-857"];
m8_624 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="891-892"];
m8_659 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="959-959"];
m8_685 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1003-1004"];
m8_712 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1048-1049"];
m8_738 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1093-1094"];
m8_765 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1138-1139"];
m8_776 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1150-1151"];
m8_802 [cluster="lambda expression", file="SqlServerConnection.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1197-1198"];
m8_830 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1246-1247"];
m8_856 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1291-1291"];
m8_33 [cluster="lambda expression", file="SqlServerConnection.cs", label="_queue.Verify(x => x.Dequeue(queues, token))", span="50-50"];
m8_34 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="43-51"];
m8_30 [cluster="lambda expression", file="SqlServerConnection.cs", label="var token = new CancellationToken()", span="45-45"];
m8_32 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.FetchNextJob(queues, token)", span="48-48"];
m8_48 [cluster="lambda expression", file="SqlServerConnection.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="60-60"];
m8_108 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(jobId)", span="132-132"];
m8_174 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result)", span="202-202"];
m8_175 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result.Job)", span="203-203"];
m8_213 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result)", span="259-259"];
m8_226 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result)", span="296-296"];
m8_236 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result.LoadException)", span="323-323"];
m8_400 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(server.LastHeartbeat)", span="572-572"];
m8_495 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result)", span="688-688"];
m8_569 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotNull(result)", span="803-803"];
m8_107 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="126-130"];
m8_210 [cluster="lambda expression", file="SqlServerConnection.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="249-252"];
m8_223 [cluster="lambda expression", file="SqlServerConnection.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="286-289"];
m8_517 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="726-726"];
m8_534 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="749-753"];
m8_94 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="110-114"];
m8_91 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="116-116"];
m8_112 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="137-137"];
m8_111 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="136-136"];
m8_113 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="138-138"];
m8_114 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="139-139"];
m8_118 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="145-145"];
m8_119 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="146-146"];
m8_120 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="147-147"];
m8_124 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="157-157"];
m8_125 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="158-158"];
m8_176 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Succeeded'', result.State)", span="204-204"];
m8_177 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="205-205"];
m8_214 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Name'', result.Name)", span="261-261"];
m8_215 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Reason'', result.Reason)", span="262-262"];
m8_216 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="263-263"];
m8_227 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="298-298"];
m8_244 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''id'', exception.ParamName)", span="335-335"];
m8_255 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''name'', exception.ParamName)", span="347-347"];
m8_269 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value'', parameter.Value)", span="370-370"];
m8_281 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="394-394"];
m8_292 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal((string) null, parameter.Value)", span="417-417"];
m8_299 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''id'', exception.ParamName)", span="429-429"];
m8_310 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''name'', exception.ParamName)", span="441-441"];
m8_329 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''value'', value)", span="475-475"];
m8_337 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''key'', exception.ParamName)", span="487-487"];
m8_366 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''-1.0'', result)", span="527-527"];
m8_374 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="539-539"];
m8_386 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''context'', exception.ParamName)", span="551-551"];
m8_398 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''server'', server.Id)", span="568-568"];
m8_404 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''server'', sameServer.Id)", span="581-581"];
m8_449 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="639-639"];
m8_476 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="670-670"];
m8_496 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(0, result.Count)", span="689-689"];
m8_505 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2, result.Count)", span="714-714"];
m8_514 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''key'', exception.ParamName)", span="728-728"];
m8_525 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="740-740"];
m8_536 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="760-760"];
m8_537 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="761-761"];
m8_570 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2, result.Count)", span="804-804"];
m8_571 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="805-805"];
m8_572 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="806-806"];
m8_589 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(0, result)", span="826-826"];
m8_598 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2, result)", span="848-848"];
m8_618 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="882-882"];
m8_635 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(0, result)", span="902-902"];
m8_644 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2, result)", span="927-927"];
m8_653 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(12, result)", span="950-950"];
m8_670 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(0, result)", span="969-969"];
m8_679 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2, result)", span="994-994"];
m8_723 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(0, result)", span="1059-1059"];
m8_732 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(2, result)", span="1084-1084"];
m8_766 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1141-1141"];
m8_777 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1153-1153"];
m8_796 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''1'', result)", span="1188-1188"];
m8_803 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1200-1200"];
m8_824 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1237-1237"];
m8_850 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1282-1282"];
m8_202 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetStateData(''1'')", span="225-225"];
m8_212 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetStateData(jobId.ToString())", span="258-258"];
m8_225 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetStateData(jobId.ToString())", span="295-295"];
m8_204 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="223-227"];
m8_89 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="107-117"];
m8_93 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="110-114"];
m8_151 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="165-166"];
m8_153 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="165-166"];
m8_154 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="166-166"];
m8_242 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="330-336"];
m8_246 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="333-333"];
m8_253 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="342-348"];
m8_257 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="345-345"];
m8_297 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="424-430"];
m8_301 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="427-427"];
m8_308 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="436-442"];
m8_312 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="439-439"];
m8_326 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="467-476"];
m8_328 [cluster="lambda expression", file="SqlServerConnection.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="473-473"];
m8_335 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="482-488"];
m8_339 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="485-485"];
m8_346 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="494-495"];
m8_348 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="494-495"];
m8_349 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="495-495"];
m8_372 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="534-540"];
m8_376 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="537-537"];
m8_384 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="546-552"];
m8_388 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="549-549"];
m8_412 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="589-590"];
m8_414 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="589-590"];
m8_415 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="590-590"];
m8_433 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="616-617"];
m8_435 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="616-617"];
m8_436 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="617-617"];
m8_460 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="646-647"];
m8_462 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="646-647"];
m8_463 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="647-647"];
m8_483 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="677-678"];
m8_485 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="677-678"];
m8_486 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="678-678"];
m8_512 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="723-729"];
m8_516 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="726-726"];
m8_523 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="735-741"];
m8_527 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="738-738"];
m8_548 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="768-769"];
m8_550 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="768-769"];
m8_551 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="769-769"];
m8_577 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="813-817"];
m8_579 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="813-817"];
m8_580 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="816-816"];
m8_604 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="855-858"];
m8_606 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="855-858"];
m8_607 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="857-857"];
m8_623 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="889-893"];
m8_625 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="889-893"];
m8_626 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="892-892"];
m8_658 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="957-960"];
m8_660 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="957-960"];
m8_661 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="959-959"];
m8_684 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1001-1005"];
m8_686 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1001-1005"];
m8_687 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1004-1004"];
m8_711 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1046-1050"];
m8_713 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1046-1050"];
m8_714 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1049-1049"];
m8_737 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1091-1095"];
m8_739 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1091-1095"];
m8_740 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1094-1094"];
m8_764 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1136-1142"];
m8_768 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1139-1139"];
m8_775 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1148-1154"];
m8_779 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1151-1151"];
m8_801 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1195-1201"];
m8_805 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1198-1198"];
m8_829 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1244-1248"];
m8_831 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1244-1248"];
m8_832 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1247-1247"];
m8_855 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1289-1292"];
m8_857 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1289-1292"];
m8_858 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1291-1291"];
m8_11 [cluster="Unk.RegisterBundles", file="SqlServerConnection.cs", label="Entry Unk.RegisterBundles", span=""];
m8_31 [cluster="lambda expression", file="SqlServerConnection.cs", label="var queues = new[] { ''default'' }", span="46-46"];
m8_38 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="50-50"];
m8_105 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="123-159"];
m8_161 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="172-176"];
m8_170 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="187-209"];
m8_209 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="247-264"];
m8_222 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="284-299"];
m8_233 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="310-324"];
m8_264 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="359-371"];
m8_275 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="382-395"];
m8_287 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="406-418"];
m8_318 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="448-452"];
m8_355 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="501-507"];
m8_363 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="521-528"];
m8_394 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="558-583"];
m8_423 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="602-610"];
m8_444 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="629-640"];
m8_472 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="657-671"];
m8_493 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="684-690"];
m8_502 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="700-717"];
m8_533 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="747-762"];
m8_558 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="775-779"];
m8_566 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="789-807"];
m8_587 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="823-827"];
m8_595 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="837-849"];
m8_615 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="868-883"];
m8_633 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="899-903"];
m8_641 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="913-928"];
m8_650 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="938-951"];
m8_668 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="966-970"];
m8_676 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="980-995"];
m8_694 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1011-1015"];
m8_702 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1025-1040"];
m8_721 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1056-1060"];
m8_729 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1070-1085"];
m8_747 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1101-1105"];
m8_755 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1115-1130"];
m8_785 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1160-1164"];
m8_793 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1174-1189"];
m8_812 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1207-1211"];
m8_821 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1221-1238"];
m8_839 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1254-1258"];
m8_847 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1268-1283"];
m8_865 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1298-1302"];
m8_873 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1312-1327"];
m8_897 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="1347-1347"];
m8_39 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Dequeue(queues, token)", span="50-50"];
m8_109 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotEmpty(jobId)", span="133-133"];
m8_173 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="200-200"];
m8_235 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="321-321"];
m8_237 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="310-324"];
m8_397 [cluster="lambda expression", file="SqlServerConnection.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="567-567"];
m8_399 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="569-571"];
m8_401 [cluster="lambda expression", file="SqlServerConnection.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="574-578"];
m8_494 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="686-686"];
m8_568 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="800-800"];
m8_106 [cluster="lambda expression", file="SqlServerConnection.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="125-125"];
m8_139 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="127-127"];
m8_123 [cluster="lambda expression", file="SqlServerConnection.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="152-155"];
m8_211 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="254-256"];
m8_224 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="291-293"];
m8_518 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="726-726"];
m8_535 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="755-758"];
m8_95 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="110-114"];
m8_97 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="111-111"];
m8_92 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="107-117"];
m8_110 [cluster="lambda expression", file="SqlServerConnection.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="135-135"];
m8_115 [cluster="lambda expression", file="SqlServerConnection.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="141-141"];
m8_117 [cluster="lambda expression", file="SqlServerConnection.cs", label="var job = invocationData.Deserialize()", span="144-144"];
m8_121 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="149-149"];
m8_126 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="123-159"];
m8_178 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(result.LoadException)", span="206-206"];
m8_217 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="247-264"];
m8_228 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="284-299"];
m8_245 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="330-336"];
m8_256 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="342-348"];
m8_268 [cluster="lambda expression", file="SqlServerConnection.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="366-368"];
m8_270 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="359-371"];
m8_280 [cluster="lambda expression", file="SqlServerConnection.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="390-392"];
m8_282 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="382-395"];
m8_291 [cluster="lambda expression", file="SqlServerConnection.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="413-415"];
m8_293 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="406-418"];
m8_300 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="424-430"];
m8_311 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="436-442"];
m8_330 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="467-476"];
m8_338 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="482-488"];
m8_365 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="525-525"];
m8_367 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="521-528"];
m8_375 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="534-540"];
m8_387 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="546-552"];
m8_403 [cluster="lambda expression", file="SqlServerConnection.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="580-580"];
m8_405 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="582-582"];
m8_447 [cluster="lambda expression", file="SqlServerConnection.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="635-636"];
m8_448 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="638-638"];
m8_450 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="629-640"];
m8_475 [cluster="lambda expression", file="SqlServerConnection.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="669-669"];
m8_477 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="657-671"];
m8_497 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="684-690"];
m8_504 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="711-711"];
m8_506 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Contains(''1'', result)", span="715-715"];
m8_515 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="723-729"];
m8_526 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="735-741"];
m8_538 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="747-762"];
m8_573 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="789-807"];
m8_588 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetSetCount(''my-set'')", span="825-825"];
m8_590 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="823-827"];
m8_597 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetSetCount(''set-1'')", span="846-846"];
m8_599 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="837-849"];
m8_617 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="880-880"];
m8_619 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="868-883"];
m8_634 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetCounter(''my-counter'')", span="901-901"];
m8_636 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="899-903"];
m8_643 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetCounter(''counter-1'')", span="924-924"];
m8_645 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="913-928"];
m8_652 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetCounter(''counter-1'')", span="948-948"];
m8_654 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="938-951"];
m8_669 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetHashCount(''my-hash'')", span="968-968"];
m8_671 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="966-970"];
m8_678 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetHashCount(''hash-1'')", span="991-991"];
m8_680 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="980-995"];
m8_722 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetListCount(''my-list'')", span="1058-1058"];
m8_724 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1056-1060"];
m8_731 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetListCount(''list-1'')", span="1081-1081"];
m8_733 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1070-1085"];
m8_767 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1136-1142"];
m8_778 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1148-1154"];
m8_795 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1185-1185"];
m8_797 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1174-1189"];
m8_804 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1195-1201"];
m8_823 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1234-1234"];
m8_825 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1221-1238"];
m8_849 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1279-1279"];
m8_851 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1268-1283"];
m8_203 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(result)", span="226-226"];
m8_155 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetJobData(null)", span="166-166"];
m8_156 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="166-166"];
m8_247 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="333-333"];
m8_248 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="333-333"];
m8_258 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="345-345"];
m8_259 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="345-345"];
m8_302 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetJobParameter(null, ''hello'')", span="427-427"];
m8_303 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="427-427"];
m8_313 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetJobParameter(''1'', null)", span="439-439"];
m8_314 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="439-439"];
m8_172 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="191-198"];
m8_234 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="312-319"];
m8_265 [cluster="lambda expression", file="SqlServerConnection.cs", label="var job = sql.Query(arrangeSql).Single()", span="361-361"];
m8_276 [cluster="lambda expression", file="SqlServerConnection.cs", label="var job = sql.Query(arrangeSql).Single()", span="384-384"];
m8_288 [cluster="lambda expression", file="SqlServerConnection.cs", label="var job = sql.Query(arrangeSql).Single()", span="408-408"];
m8_426 [cluster="lambda expression", file="SqlServerConnection.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="608-608"];
m8_340 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="485-485"];
m8_341 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="485-485"];
m8_350 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="495-495"];
m8_351 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="495-495"];
m8_377 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.AnnounceServer(null, new ServerContext())", span="537-537"];
m8_378 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="537-537"];
m8_389 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.AnnounceServer(''server'', null)", span="549-549"];
m8_390 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="549-549"];
m8_416 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.RemoveServer(null)", span="590-590"];
m8_417 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="590-590"];
m8_437 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Heartbeat(null)", span="617-617"];
m8_438 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="617-617"];
m8_464 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="647-647"];
m8_465 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="647-647"];
m8_487 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetAllItemsFromSet(null)", span="678-678"];
m8_488 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="678-678"];
m8_528 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="738-738"];
m8_529 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="738-738"];
m8_552 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetAllEntriesFromHash(null)", span="769-769"];
m8_553 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="769-769"];
m8_581 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetSetCount(null)", span="816-816"];
m8_582 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="816-816"];
m8_608 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="857-857"];
m8_609 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="857-857"];
m8_627 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetCounter(null)", span="892-892"];
m8_628 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="892-892"];
m8_662 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetHashCount(null)", span="959-959"];
m8_663 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="959-959"];
m8_688 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetHashTtl(null)", span="1004-1004"];
m8_689 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1004-1004"];
m8_715 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetListCount(null)", span="1049-1049"];
m8_716 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1049-1049"];
m8_741 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetListTtl(null)", span="1094-1094"];
m8_742 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1094-1094"];
m8_769 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetValueFromHash(null, ''name'')", span="1139-1139"];
m8_770 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1139-1139"];
m8_780 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetValueFromHash(''key'', null)", span="1151-1151"];
m8_781 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1151-1151"];
m8_806 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1198-1198"];
m8_807 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1198-1198"];
m8_833 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetAllItemsFromList(null)", span="1247-1247"];
m8_834 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1247-1247"];
m8_859 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.GetSetTtl(null)", span="1291-1291"];
m8_860 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1291-1291"];
m8_13 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="25-25"];
m8_12 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.GetJobQueue()", span="25-25"];
m8_40 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="50-50"];
m8_98 [cluster="lambda expression", file="SqlServerConnection.cs", label="SampleMethod(''hello'')", span="111-111"];
m8_140 [cluster="lambda expression", file="SqlServerConnection.cs", label="SampleMethod(''Hello'')", span="127-127"];
m8_186 [cluster="lambda expression", file="SqlServerConnection.cs", label="SampleMethod(''wrong'')", span="189-189"];
m8_164 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="172-176"];
m8_162 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetJobData(''1'')", span="174-174"];
m8_181 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="187-209"];
m8_171 [cluster="lambda expression", file="SqlServerConnection.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="189-189"];
m8_267 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="364-364"];
m8_278 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="387-387"];
m8_279 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="388-388"];
m8_290 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="411-411"];
m8_321 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="448-452"];
m8_319 [cluster="lambda expression", file="SqlServerConnection.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="450-450"];
m8_358 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="501-507"];
m8_356 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="503-504"];
m8_364 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql)", span="523-523"];
m8_406 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="558-583"];
m8_395 [cluster="lambda expression", file="SqlServerConnection.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="560-564"];
m8_396 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.AnnounceServer(''server'', context1)", span="565-565"];
m8_402 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.AnnounceServer(''server'', context2)", span="579-579"];
m8_424 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql)", span="604-604"];
m8_428 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="602-610"];
m8_425 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.RemoveServer(''Server1'')", span="606-606"];
m8_445 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql)", span="631-631"];
m8_446 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Heartbeat(''server1'')", span="633-633"];
m8_473 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="659-665"];
m8_474 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="667-667"];
m8_503 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="703-708"];
m8_508 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="700-717"];
m8_561 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="775-779"];
m8_559 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="777-777"];
m8_567 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="792-797"];
m8_596 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="839-844"];
m8_616 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="870-878"];
m8_642 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="916-921"];
m8_651 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="941-945"];
m8_677 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="983-988"];
m8_697 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1011-1015"];
m8_695 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1013-1013"];
m8_703 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1028-1032"];
m8_707 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1025-1040"];
m8_704 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1035-1035"];
m8_730 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1073-1078"];
m8_750 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1101-1105"];
m8_748 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetListTtl(''my-list'')", span="1103-1103"];
m8_756 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1118-1122"];
m8_760 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1115-1130"];
m8_757 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetListTtl(''list-1'')", span="1125-1125"];
m8_788 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1160-1164"];
m8_786 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1162-1162"];
m8_794 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1177-1182"];
m8_815 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1207-1211"];
m8_813 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1209-1209"];
m8_822 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1224-1231"];
m8_842 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1254-1258"];
m8_840 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1256-1256"];
m8_848 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1271-1276"];
m8_868 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1298-1302"];
m8_866 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1300-1300"];
m8_874 [cluster="lambda expression", file="SqlServerConnection.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1315-1319"];
m8_878 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1312-1327"];
m8_875 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1322-1322"];
m8_899 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="1347-1347"];
m8_898 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.QueueProviders", span="1347-1347"];
m8_179 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="207-207"];
m8_180 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="208-208"];
m8_122 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="150-150"];
m8_141 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="127-127"];
m8_142 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="155-155"];
m8_145 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="155-155"];
m8_539 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="758-758"];
m8_542 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="758-758"];
m8_99 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="111-111"];
m8_116 [cluster="lambda expression", file="SqlServerConnection.cs", label="invocationData.Arguments = sqlJob.Arguments", span="142-142"];
m8_266 [cluster="lambda expression", file="SqlServerConnection.cs", label="string jobId = job.Id.ToString()", span="362-362"];
m8_277 [cluster="lambda expression", file="SqlServerConnection.cs", label="string jobId = job.Id.ToString()", span="385-385"];
m8_289 [cluster="lambda expression", file="SqlServerConnection.cs", label="string jobId = job.Id.ToString()", span="409-409"];
m8_451 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="636-636"];
m8_454 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="636-636"];
m8_507 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Contains(''2'', result)", span="716-716"];
m8_427 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="609-609"];
m8_187 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="189-189"];
m8_163 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(result)", span="175-175"];
m8_320 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(value)", span="451-451"];
m8_357 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(result)", span="506-506"];
m8_560 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(result)", span="778-778"];
m8_696 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result < TimeSpan.Zero)", span="1014-1014"];
m8_706 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1039-1039"];
m8_705 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1038-1038"];
m8_749 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result < TimeSpan.Zero)", span="1104-1104"];
m8_759 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1129-1129"];
m8_758 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1128-1128"];
m8_787 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Null(result)", span="1163-1163"];
m8_814 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Empty(result)", span="1210-1210"];
m8_841 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.Empty(result)", span="1257-1257"];
m8_867 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result < TimeSpan.Zero)", span="1301-1301"];
m8_877 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1326-1326"];
m8_876 [cluster="lambda expression", file="SqlServerConnection.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1325-1325"];
m8_144 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="155-155"];
m8_143 [cluster="lambda expression", file="SqlServerConnection.cs", label="(string) x.Name", span="155-155"];
m8_147 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="155-155"];
m8_146 [cluster="lambda expression", file="SqlServerConnection.cs", label="(string) x.Value", span="155-155"];
m8_541 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="758-758"];
m8_540 [cluster="lambda expression", file="SqlServerConnection.cs", label="(string)x.Field", span="758-758"];
m8_544 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="758-758"];
m8_543 [cluster="lambda expression", file="SqlServerConnection.cs", label="(string)x.Value", span="758-758"];
m8_453 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="636-636"];
m8_452 [cluster="lambda expression", file="SqlServerConnection.cs", label="(string)x.Id", span="636-636"];
m8_455 [cluster="lambda expression", file="SqlServerConnection.cs", label="(DateTime)x.LastHeartbeat", span="636-636"];
m8_456 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="636-636"];
m8_672 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974"];
m8_674 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="980-995"];
m8_673 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="976-978"];
m8_675 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974"];
m8_104 [cluster="Unk.UseConnections", file="SqlServerConnection.cs", label="Entry Unk.UseConnections", span=""];
m8_519 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m8_63 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39"];
m8_41 [cluster="Unk.Dequeue", file="SqlServerConnection.cs", label="Entry Unk.Dequeue", span=""];
m8_24 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33"];
m8_9 [cluster="Unk.RegisterGlobalFilters", file="SqlServerConnection.cs", label="Entry Unk.RegisterGlobalFilters", span=""];
m8_369 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532"];
m8_370 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="534-540"];
m8_371 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532"];
m8_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675"];
m8_481 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="677-678"];
m8_482 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675"];
m8_96 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnection.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m8_879 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330"];
m8_882 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="var connection = new SqlServerConnection(storage)", span="1335-1335"];
m8_881 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="var storage = new SqlServerStorage(sqlConnection)", span="1334-1334"];
m8_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="action(sqlConnection, connection)", span="1337-1337"];
m8_880 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1332-1332"];
m8_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330"];
m8_690 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415"];
m8_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328"];
m8_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="330-336"];
m8_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328"];
m8_886 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96"];
m8_158 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170"];
m8_159 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="172-176"];
m8_160 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170"];
m8_56 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69"];
m8_57 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", color=green, community=0, file="SqlServerConnection.cs", label="4: UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="71-75"];
m8_58 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69"];
m8_136 [cluster="System.DateTime.AddMinutes(double)", file="SqlServerConnection.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m8_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446"];
m8_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="448-452"];
m8_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446"];
m8_45 [cluster="Unk.UseConnection", file="SqlServerConnection.cs", label="Entry Unk.UseConnection", span=""];
m8_20 [cluster="Unk.Equal", file="SqlServerConnection.cs", label="Entry Unk.Equal", span=""];
m8_708 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044"];
m8_709 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1046-1050"];
m8_710 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044"];
m8_100 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356"];
m8_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356"];
m8_35 [cluster="System.Threading.CancellationToken.CancellationToken()", file="SqlServerConnection.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m8_610 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356"];
m8_509 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721"];
m8_510 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="723-729"];
m8_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721"];
m8_885 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m8_157 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125"];
m8_894 [cluster="Mock<SqlServerStorage>.cstr", file="SqlServerConnection.cs", label="Entry Mock<SqlServerStorage>.cstr", span=""];
m8_73 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44"];
m8_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105"];
m8_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="107-117"];
m8_88 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105"];
m8_591 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831"];
m8_593 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="837-849"];
m8_592 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="833-835"];
m8_594 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831"];
m8_744 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099"];
m8_745 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1101-1105"];
m8_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099"];
m8_468 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651"];
m8_470 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="657-671"];
m8_469 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="653-655"];
m8_471 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651"];
m8_734 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089"];
m8_735 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1091-1095"];
m8_736 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089"];
m8_130 [cluster="Unk.Query", file="SqlServerConnection.cs", label="Entry Unk.Query", span=""];
m8_896 [cluster="System.Action<T>.Invoke(T)", file="SqlServerConnection.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m8_205 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231"];
m8_207 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="247-264"];
m8_206 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="233-245"];
m8_208 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231"];
m8_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158"];
m8_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1160-1164"];
m8_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158"];
m8_52 [cluster="Unk.Add", file="SqlServerConnection.cs", label="Entry Unk.Add", span=""];
m8_64 [cluster="Unk.NotNull", file="SqlServerConnection.cs", label="Entry Unk.NotNull", span=""];
m8_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55"];
m8_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", color=green, community=0, file="SqlServerConnection.cs", label="0: UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="57-65"];
m8_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55"];
m8_8 [cluster="Unk.Register", file="SqlServerConnection.cs", label="Entry Unk.Register", span=""];
m8_655 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955"];
m8_656 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="957-960"];
m8_657 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955"];
m8_165 [cluster="Unk.Null", file="SqlServerConnection.cs", label="Entry Unk.Null", span=""];
m8_25 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41"];
m8_26 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", color=green, community=0, file="SqlServerConnection.cs", label="4: UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="43-51"];
m8_27 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41"];
m8_498 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694"];
m8_500 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="700-717"];
m8_499 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="696-698"];
m8_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694"];
m8_85 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72"];
m8_10 [cluster="Unk.RegisterRoutes", file="SqlServerConnection.cs", label="Entry Unk.RegisterRoutes", span=""];
m8_183 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m8_478 [cluster="System.DateTime.AddHours(double)", file="SqlServerConnection.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m8_129 [cluster="Unk.NotEmpty", file="SqlServerConnection.cs", label="Entry Unk.NotEmpty", span=""];
m8_14 [cluster="Unk.GetJobQueue", file="SqlServerConnection.cs", label="Entry Unk.GetJobQueue", span=""];
m8_816 [cluster="Unk.Empty", file="SqlServerConnection.cs", label="Entry Unk.Empty", span=""];
m8_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733"];
m8_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="735-741"];
m8_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733"];
m8_665 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964"];
m8_666 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="966-970"];
m8_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964"];
m8_681 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999"];
m8_682 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1001-1005"];
m8_683 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999"];
m8_28 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342"];
m8_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="storage.Setup(x => x.QueueProviders).Returns(_providers)", span="1347-1347"];
m8_888 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="var sql = ConnectionUtils.CreateConnection()", span="1344-1344"];
m8_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="action(connection)", span="1351-1351"];
m8_889 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="var storage = new Mock<SqlServerStorage>(sql)", span="1346-1346"];
m8_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="var connection = new SqlServerConnection(storage.Object)", span="1349-1349"];
m8_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342"];
m8_620 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887"];
m8_621 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="889-893"];
m8_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887"];
m8_37 [cluster="Unk.Verify", file="SqlServerConnection.cs", label="Entry Unk.Verify", span=""];
m8_489 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225"];
m8_798 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193"];
m8_799 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1195-1201"];
m8_800 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193"];
m8_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422"];
m8_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="424-430"];
m8_296 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422"];
m8_407 [cluster="string.StartsWith(string)", file="SqlServerConnection.cs", label="Entry string.StartsWith(string)", span="0-0"];
m8_817 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215"];
m8_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1221-1238"];
m8_818 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1217-1219"];
m8_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215"];
m8_466 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerConnection.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m8_138 [cluster="Unk.ToDictionary", file="SqlServerConnection.cs", label="Entry Unk.ToDictionary", span=""];
m8_479 [cluster="System.TimeSpan.FromHours(double)", file="SqlServerConnection.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_74 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89"];
m8_75 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="SqlServerConnection.cs", label="0: UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="91-101"];
m8_76 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89"];
m8_630 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897"];
m8_631 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="899-903"];
m8_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897"];
m8_835 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489"];
m8_852 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287"];
m8_853 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1289-1292"];
m8_854 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287"];
m8_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79"];
m8_66 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", color=green, community=0, file="SqlServerConnection.cs", label="4: UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="81-85"];
m8_67 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79"];
m8_127 [cluster="System.DateTime.DateTime(int, int, int)", file="SqlServerConnection.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_19 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m8_249 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196"];
m8_574 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811"];
m8_575 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="813-817"];
m8_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811"];
m8_72 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m8_359 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511"];
m8_361 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="521-528"];
m8_360 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="513-519"];
m8_362 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511"];
m8_611 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862"];
m8_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="868-883"];
m8_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="864-866"];
m8_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862"];
m8_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375"];
m8_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="382-395"];
m8_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="377-380"];
m8_274 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375"];
m8_128 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerConnection.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m8_861 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372"];
m8_304 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214"];
m8_379 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="SqlServerConnection.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20"];
m8_197 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165"];
m8_331 [cluster="Unk.GetJobParameter", file="SqlServerConnection.cs", label="Entry Unk.GetJobParameter", span=""];
m8_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621"];
m8_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="629-640"];
m8_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="623-627"];
m8_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621"];
m8_809 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205"];
m8_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1207-1211"];
m8_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205"];
m8_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745"];
m8_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="747-762"];
m8_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745"];
m8_166 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180"];
m8_168 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="187-209"];
m8_167 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="182-185"];
m8_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180"];
m8_408 [cluster="Unk.Contains", file="SqlServerConnection.cs", label="Entry Unk.Contains", span=""];
m8_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614"];
m8_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="616-617"];
m8_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614"];
m8_725 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064"];
m8_727 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1070-1085"];
m8_726 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnection.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1066-1068"];
m8_728 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064"];
m8_583 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347"];
m8_148 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163"];
m8_149 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="165-166"];
m8_150 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163"];
m8_131 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m8_101 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121"];
m8_102 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnection.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="123-159"];
m8_103 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121"];
m8_137 [cluster="Unk.True", file="SqlServerConnection.cs", label="Entry Unk.True", span=""];
m8_352 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499"];
m8_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="501-507"];
m8_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499"];
m8_717 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445"];
m8_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821"];
m8_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnection.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="823-827"];
m8_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821"];
m8_901 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m8_904 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_905 [file="SqlServerConnection.cs", label=token, span=""];
m8_906 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_910 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_921 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_935 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_907 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_902 [file="SqlServerConnection.cs", label=token, span=""];
m8_903 [file="SqlServerConnection.cs", label=queues, span=""];
m8_911 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_912 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_908 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_914 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_915 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_919 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_920 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_909 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_913 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_916 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_917 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_918 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_922 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_923 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_925 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_926 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_927 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_929 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_931 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_933 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_936 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_937 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_939 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_941 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_943 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_946 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_948 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_950 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_952 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_954 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_955 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_957 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_959 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_961 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m8_924 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_928 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_930 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_932 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_934 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_938 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_940 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_942 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_944 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_945 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_947 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_949 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_951 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_953 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_956 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_958 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_960 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m8_962 [file="SqlServerConnection.cs", label=arrangeSql, span=""];
m9_20 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m9_21 [cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="42-42"];
m9_0 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
m9_1 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="28-28"];
m9_22 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="73-73"];
m9_23 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="75-75"];
m9_24 [cluster="Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.States.ScheduledState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="73-73"];
m9_10 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m9_25 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m9_11 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="59-59"];
m9_12 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="var scheduledState = context.NewState as ScheduledState", span="61-61"];
m9_16 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="70-70"];
m9_13 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="scheduledState == null", span="62-62"];
m9_15 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="69-69"];
m9_14 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="64-66"];
m9_17 [cluster="Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.States.ScheduledState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="59-59"];
m9_6 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.States.ScheduledState.SerializeData()", span="48-48"];
m9_7 [cluster="Hangfire.States.ScheduledState.SerializeData()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.SerializeDateTime(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.SerializeDateTime(ScheduledAt) }\r\n            };", span="50-54"];
m9_8 [cluster="Hangfire.States.ScheduledState.SerializeData()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.States.ScheduledState.SerializeData()", span="48-48"];
m9_19 [cluster="string.Format(string, object)", file="SqlServerConnectionFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_18 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnectionFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m9_2 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
m9_3 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", color=red, community=0, file="SqlServerConnectionFacts.cs", label="4: EnqueueAt = enqueueAt", span="36-36"];
m9_4 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="SqlServerConnectionFacts.cs", label="ScheduledAt = DateTime.UtcNow", span="37-37"];
m9_5 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="34-34"];
m9_26 [file="SqlServerConnectionFacts.cs", label="Hangfire.States.ScheduledState", span=""];
m10_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerJobQueue.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_31 [cluster="System.TimeSpan.Negate()", file="SqlServerJobQueue.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m10_28 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m10_43 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerJobQueue.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m10_34 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerJobQueue.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m10_35 [cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", file="SqlServerJobQueue.cs", label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", span="27-27"];
m10_47 [cluster="Unk.Execute", file="SqlServerJobQueue.cs", label="Entry Unk.Execute", span=""];
m10_0 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", file="SqlServerJobQueue.cs", label="Entry HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", span="33-33"];
m10_1 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: options == null", span="35-35"];
m10_3 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: connection == null", span="36-36"];
m10_5 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: _options = options", span="38-38"];
m10_6 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", color=red, community=0, file="SqlServerJobQueue.cs", label="2: _connection = connection", span="39-39"];
m10_2 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: throw new ArgumentNullException(''options'');", span="35-35"];
m10_4 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: throw new ArgumentNullException(''connection'');", span="36-36"];
m10_7 [cluster="HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", file="SqlServerJobQueue.cs", label="Exit HangFire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(HangFire.SqlServer.SqlServerStorageOptions, IDbConnection)", span="33-33"];
m10_37 [cluster="HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="SqlServerJobQueue.cs", label="Entry HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="88-88"];
m10_38 [cluster="HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: actions == null", span="90-90"];
m10_41 [cluster="HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", color=red, community=1, file="SqlServerJobQueue.cs", label="4: actions.Enqueue(x => x.Execute(\r\n                enqueueJobSql, new { jobId = jobId, queue = queue }))", span="95-96"];
m10_39 [cluster="HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: throw new ArgumentNullException(''actions'');", span="90-90"];
m10_40 [cluster="HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", color=red, community=1, file="SqlServerJobQueue.cs", label="1: string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue) values (@jobId, @queue)''", span="92-93"];
m10_42 [cluster="HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="SqlServerJobQueue.cs", label="Exit HangFire.SqlServer.SqlServerJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="88-88"];
m10_32 [cluster="Unk.Query", file="SqlServerJobQueue.cs", label="Entry Unk.Query", span=""];
m10_9 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Entry HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42"];
m10_10 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: queues == null", span="44-44"];
m10_12 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="1: queues.Length == 0", span="45-45"];
m10_18 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: cancellationToken.ThrowIfCancellationRequested()", span="63-63"];
m10_19 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=1, file="SqlServerJobQueue.cs", label="0: idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="65-68"];
m10_11 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: throw new ArgumentNullException(''queues'');", span="44-44"];
m10_13 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="45-45"];
m10_14 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="4: dynamic idAndQueue", span="47-47"];
m10_15 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=1, file="SqlServerJobQueue.cs", label="0: string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="49-54"];
m10_16 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="58-58"];
m10_17 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: var currentQueryIndex = 0", span="59-59"];
m10_21 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: currentQueryIndex == fetchConditions.Length - 1", span="72-72"];
m10_24 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="79-79"];
m10_22 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="1: cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="74-74"];
m10_20 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="1: idAndQueue == null", span="70-70"];
m10_25 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: idAndQueue == null", span="80-80"];
m10_26 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=1, file="SqlServerJobQueue.cs", label="4: return new SqlServerProcessingJob(\r\n                _connection,\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="82-85"];
m10_23 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: cancellationToken.ThrowIfCancellationRequested()", span="75-75"];
m10_27 [cluster="HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Exit HangFire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42"];
m10_44 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Entry lambda expression", span="95-96"];
m10_45 [cluster="lambda expression", color=red, community=1, file="SqlServerJobQueue.cs", label="1: x.Execute(\r\n                enqueueJobSql, new { jobId = jobId, queue = queue })", span="95-96"];
m10_46 [cluster="lambda expression", file="SqlServerJobQueue.cs", label="Exit lambda expression", span="95-96"];
m10_33 [cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs", label="Entry Unk.SingleOrDefault", span=""];
m10_30 [cluster="string.Format(string, object)", file="SqlServerJobQueue.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_36 [cluster="Unk.ToString", file="SqlServerJobQueue.cs", label="Entry Unk.ToString", span=""];
m10_29 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m10_48 [file="SqlServerJobQueue.cs", label="HangFire.SqlServer.SqlServerJobQueue", span=""];
m10_49 [file="SqlServerJobQueue.cs", label=string, span=""];
m10_50 [file="SqlServerJobQueue.cs", label=string, span=""];
m10_51 [file="SqlServerJobQueue.cs", label=enqueueJobSql, span=""];
m11_3 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m11_0 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m11_1 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="5: transaction.AddToSet(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="13-16"];
m11_2 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="SqlServerJobQueueFacts.cs", label="3: Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m11_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerJobQueueFacts.cs", label="HangFire.Web.StyleSheetHandler", span=""];
m12_11 [cluster="Unk.EnqueueItemOnList", file="SqlServerProcessingJob.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m12_22 [cluster="string.Format(string, object, object)", file="SqlServerProcessingJob.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_23 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="59-59"];
m12_24 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerProcessingJob.cs", label="Given(String.Format(''the '{0}' job'', jobId))", span="61-61"];
m12_25 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerProcessingJob.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                jobId)", span="63-65"];
m12_26 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="59-59"];
m12_7 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="25-25"];
m12_8 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", color=red, community=0, file="SqlServerProcessingJob.cs", label="0: Given(String.Format(''a job of the '{0}' type'', typeof(BrokenJob).AssemblyQualifiedName))", span="27-27"];
m12_9 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", color=red, community=0, file="SqlServerProcessingJob.cs", label="4: Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                JobSteps.DefaultJobId)", span="29-31"];
m12_10 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedBrokenJob()", span="25-25"];
m12_2 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19"];
m12_3 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerProcessingJob.cs", label="Given(String.Format(''a job in the '{0}' queue'', DefaultQueue))", span="21-21"];
m12_4 [cluster="HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEnqueuedJob()", span="19-19"];
m12_5 [cluster="string.Format(string, object)", file="SqlServerProcessingJob.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_50 [cluster="Unk.AreEqual", file="SqlServerProcessingJob.cs", label="Entry Unk.AreEqual", span=""];
m12_49 [cluster="Unk.GetListCount", file="SqlServerProcessingJob.cs", label="Entry Unk.GetListCount", span=""];
m12_40 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="92-92"];
m12_41 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerProcessingJob.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="94-95"];
m12_42 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerProcessingJob.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="97-97"];
m12_43 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob(string)", span="92-92"];
m12_15 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="43-43"];
m12_16 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", color=red, community=0, file="SqlServerProcessingJob.cs", label="0: Given(''a job'')", span="45-45"];
m12_17 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerProcessingJob.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                JobSteps.DefaultJobId)", span="47-49"];
m12_18 [cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="43-43"];
m12_37 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="86-86"];
m12_38 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerProcessingJob.cs", label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", span="88-88"];
m12_39 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="86-86"];
m12_12 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="35-35"];
m12_13 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="SqlServerProcessingJob.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', DefaultQueue),\r\n                jobId)", span="37-39"];
m12_14 [cluster="HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnUnexistingEnqueuedJob(string)", span="35-35"];
m12_31 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="76-76"];
m12_32 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerProcessingJob.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="78-79"];
m12_33 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerProcessingJob.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="81-81"];
m12_34 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="76-76"];
m12_35 [cluster="Unk.GetAllItemsFromList", file="SqlServerProcessingJob.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m12_36 [cluster="Unk.Contains", file="SqlServerProcessingJob.cs", label="Entry Unk.Contains", span=""];
m12_30 [cluster="Unk.Then", file="SqlServerProcessingJob.cs", label="Entry Unk.Then", span=""];
m12_6 [cluster="Unk.Given", file="SqlServerProcessingJob.cs", label="Entry Unk.Given", span=""];
m12_44 [cluster="Unk.DoesNotContain", file="SqlServerProcessingJob.cs", label="Entry Unk.DoesNotContain", span=""];
m12_19 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="53-53"];
m12_20 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerProcessingJob.cs", label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", span="55-55"];
m12_21 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="53-53"];
m12_51 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="109-109"];
m12_52 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerProcessingJob.cs", label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="111-112"];
m12_53 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerProcessingJob.cs", label="Assert.AreEqual(length, actualLength)", span="113-113"];
m12_54 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="109-109"];
m12_27 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="69-69"];
m12_28 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerProcessingJob.cs", label="Then(String.Format(''the '{0}' queue contains the job'', DefaultQueue))", span="71-71"];
m12_29 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="69-69"];
m12_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="101-101"];
m12_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerProcessingJob.cs", label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="103-104"];
m12_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerProcessingJob.cs", label="Assert.AreEqual(0, length)", span="105-105"];
m12_48 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="101-101"];
m12_0 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="SqlServerProcessingJob.cs", label="Entry HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="14-14"];
m12_1 [cluster="HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", file="SqlServerProcessingJob.cs", label="Exit HangFire.Tests.QueueSteps.GivenAnEmptyQueue()", span="14-14"];
m13_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m13_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
m13_5 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="40-40"];
m13_146 [cluster="int.ToString(System.IFormatProvider)", file="SqlServerProcessingJobFacts.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m13_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="96-99"];
m13_12 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
m13_13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerProcessingJobFacts.cs", label="string jobId", span="52-52"];
m13_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: cancellationToken.ThrowIfCancellationRequested()", span="58-58"];
m13_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="4: queueIndex = (queueIndex + 1) % queues.Length", span="60-60"];
m13_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: queueName = queues[queueIndex]", span="61-61"];
m13_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerProcessingJobFacts.cs", label="string queueName", span="53-53"];
m13_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerProcessingJobFacts.cs", label="var queueIndex = 0", span="54-54"];
m13_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="4: queueIndex == 0", span="66-66"];
m13_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="63-63"];
m13_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="64-64"];
m13_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="4: return new RedisProcessingJob(this, jobId, queueName);", span="105-105"];
m13_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="68-71"];
m13_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="75-76"];
m13_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: jobId == null", span="79-79"];
m13_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="50-50"];
m13_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m13_96 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m13_204 [cluster="Unk.FromNullableStringTimestamp", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m13_124 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235"];
m13_125 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerProcessingJobFacts.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="237-239"];
m13_126 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="235-235"];
m13_65 [cluster="Unk.SetRangeInHash", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m13_38 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerProcessingJobFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m13_94 [cluster="Unk.GetAllEntriesFromHash", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m13_203 [cluster="Unk.FromStringTimestamp", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.FromStringTimestamp", span=""];
m13_171 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298"];
m13_172 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="300-300"];
m13_183 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="utcNow > maxTime.Add(timeOut)", span="331-331"];
m13_173 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="301-301"];
m13_176 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label=serverNames, span="307-307"];
m13_174 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var utcNow = DateTime.UtcNow", span="303-303"];
m13_178 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="311-319"];
m13_181 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label=heartbeats, span="326-326"];
m13_175 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var pipeline = Redis.CreatePipeline()", span="305-305"];
m13_179 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="pipeline.Flush()", span="322-322"];
m13_177 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var name = serverName", span="309-309"];
m13_180 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var removedServerCount = 0", span="325-325"];
m13_185 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="removedServerCount++", span="334-334"];
m13_186 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="return removedServerCount;", span="338-338"];
m13_182 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="328-329"];
m13_184 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="RemoveServer(Redis, heartbeat.Key)", span="333-333"];
m13_187 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="298-298"];
m13_33 [cluster="Unk.SetEntryInHash", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m13_141 [cluster="Unk.AddItemToSet", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m13_29 [cluster="string.Format(string, object)", file="SqlServerProcessingJobFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_120 [cluster="Unk.RemoveEntryFromHash", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m13_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m13_169 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="SqlServerProcessingJobFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="292-295"];
m13_168 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290"];
m13_170 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="290-290"];
m13_167 [cluster="Unk.RemoveEntry", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m13_157 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="282-284"];
m13_154 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274"];
m13_155 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SqlServerProcessingJobFacts.cs", label="var transaction = redis.CreateTransaction()", span="276-276"];
m13_156 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="278-280"];
m13_158 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.Commit()", span="286-286"];
m13_159 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="274-274"];
m13_7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45"];
m13_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="SqlServerProcessingJobFacts.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="47-47"];
m13_9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="45-45"];
m13_102 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208"];
m13_103 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="SqlServerProcessingJobFacts.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="210-212"];
m13_104 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="208-208"];
m13_69 [cluster="Unk.ExpireEntryIn", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.ExpireEntryIn", span=""];
m13_56 [cluster="System.Guid.ToString()", file="SqlServerProcessingJobFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m13_190 [cluster="Unk.Flush", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Flush", span=""];
m13_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerProcessingJobFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m13_10 [cluster="RedisWriteOnlyTransaction.cstr", file="SqlServerProcessingJobFacts.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m13_205 [cluster="Unk.Add", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Add", span=""];
m13_193 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m13_129 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242"];
m13_130 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="var transaction = Redis.CreateTransaction()", span="244-244"];
m13_131 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="246-247"];
m13_132 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="249-255"];
m13_133 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="context.Queues", span="257-257"];
m13_135 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="260-262"];
m13_136 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="transaction.Commit()", span="265-265"];
m13_134 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="var queue1 = queue", span="259-259"];
m13_137 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="242-242"];
m13_202 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m13_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m13_150 [cluster="Unk.AddItemToList", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.AddItemToList", span=""];
m13_110 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked''))", span="227-229"];
m13_106 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
m13_107 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="var transaction = Redis.CreateTransaction()", span="217-217"];
m13_108 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1))", span="219-222"];
m13_109 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched''))", span="224-226"];
m13_111 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="transaction.Commit()", span="231-231"];
m13_112 [cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215"];
m13_6 [cluster="Unk.Dispose", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Dispose", span=""];
m13_163 [cluster="Unk.RemoveItemFromSet", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m13_191 [cluster="System.DateTime.DateTime(long)", file="SqlServerProcessingJobFacts.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m13_151 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269"];
m13_152 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="SqlServerProcessingJobFacts.cs", label="RemoveServer(Redis, serverId)", span="271-271"];
m13_153 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="269-269"];
m13_192 [cluster="System.Math.Max(long, long)", file="SqlServerProcessingJobFacts.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m13_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m13_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="151-152"];
m13_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="storedData.Count == 0", span="154-154"];
m13_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="storedData.ContainsKey(''Type'')", span="161-161"];
m13_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="type = storedData[''Type'']", span="163-163"];
m13_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="storedData.ContainsKey(''Method'')", span="165-165"];
m13_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="method = storedData[''Method'']", span="167-167"];
m13_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="169-169"];
m13_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="171-171"];
m13_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="storedData.ContainsKey(''Arguments'')", span="173-173"];
m13_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="arguments = storedData[''Arguments'']", span="175-175"];
m13_92 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                LoadException = loadException\r\n            };", span="192-197"];
m13_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="return null;", span="154-154"];
m13_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="string type = null", span="156-156"];
m13_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="string method = null", span="157-157"];
m13_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="181-181"];
m13_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="string parameterTypes = null", span="158-158"];
m13_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="string arguments = null", span="159-159"];
m13_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="Job job = null", span="178-178"];
m13_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="JobLoadException loadException = null", span="179-179"];
m13_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="job = invocationData.Deserialize()", span="185-185"];
m13_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label=JobLoadException, span="187-187"];
m13_91 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="loadException = ex", span="189-189"];
m13_93 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="149-149"];
m13_57 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m13_199 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="315-319"];
m13_67 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="138-140"];
m13_63 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="134-136"];
m13_62 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="134-136"];
m13_66 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="138-140"];
m13_64 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="134-136"];
m13_68 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="138-140"];
m13_114 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    id,\r\n                    -1)", span="219-222"];
m13_118 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Fetched'')", span="224-226"];
m13_122 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                    ''Checked'')", span="227-229"];
m13_113 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="219-222"];
m13_117 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="224-226"];
m13_121 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="227-229"];
m13_115 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="219-222"];
m13_119 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="224-226"];
m13_123 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="227-229"];
m13_139 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="246-247"];
m13_143 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="249-255"];
m13_148 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="260-262"];
m13_138 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="246-247"];
m13_142 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="249-255"];
m13_147 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="260-262"];
m13_140 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="246-247"];
m13_144 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="249-255"];
m13_149 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="260-262"];
m13_161 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="278-280"];
m13_165 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="282-284"];
m13_160 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="278-280"];
m13_164 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="282-284"];
m13_162 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="278-280"];
m13_166 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="282-284"];
m13_200 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="315-319"];
m13_195 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="312-314"];
m13_194 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Entry lambda expression", span="312-314"];
m13_196 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="312-314"];
m13_201 [cluster="lambda expression", file="SqlServerProcessingJobFacts.cs", label="Exit lambda expression", span="315-319"];
m13_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m13_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="SqlServerProcessingJobFacts.cs", label="1: transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="13-16"];
m13_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m13_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m13_128 [cluster="Unk.FirstOrDefault", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.FirstOrDefault", span=""];
m13_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="138-140"];
m13_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m13_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var jobId = Guid.NewGuid().ToString()", span="120-120"];
m13_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var invocationData = InvocationData.Serialize(job)", span="122-122"];
m13_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="125-125"];
m13_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="134-136"];
m13_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="return jobId;", span="146-146"];
m13_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="126-126"];
m13_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="127-127"];
m13_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="128-128"];
m13_47 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="129-129"];
m13_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-130"];
m13_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="var transaction = Redis.CreateTransaction()", span="132-132"];
m13_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="transaction.Commit()", span="143-143"];
m13_54 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="115-115"];
m13_35 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m13_36 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", color=red, community=0, file="SqlServerProcessingJobFacts.cs", label="0: return Redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="110-112"];
m13_37 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="108-108"];
m13_116 [cluster="Unk.RemoveItemFromList", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.RemoveItemFromList", span=""];
m13_100 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="SqlServerProcessingJobFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="202-205"];
m13_99 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200"];
m13_101 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="SqlServerProcessingJobFacts.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="200-200"];
m13_189 [cluster="Unk.CreatePipeline", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m13_55 [cluster="System.Guid.NewGuid()", file="SqlServerProcessingJobFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m13_105 [cluster="Unk.GetValueFromHash", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m13_61 [cluster="Unk.Commit", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Commit", span=""];
m13_188 [cluster="Unk.GetAllItemsFromSet", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m13_98 [cluster="HangFire.Storage.JobData.JobData()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m13_97 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m13_197 [cluster="Unk.Format", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.Format", span=""];
m13_198 [cluster="Unk.GetValuesFromHash", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m13_60 [cluster="Unk.QueueCommand", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.QueueCommand", span=""];
m13_127 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m13_31 [cluster="Unk.PopAndPushItemBetweenLists", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m13_34 [cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="SqlServerProcessingJobFacts.cs", label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m13_39 [cluster="Unk.AcquireLock", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.AcquireLock", span=""];
m13_11 [cluster="Unk.CreateTransaction", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m13_95 [cluster="Unk.ContainsKey", file="SqlServerProcessingJobFacts.cs", label="Entry Unk.ContainsKey", span=""];
m13_206 [file="SqlServerProcessingJobFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m13_207 [file="SqlServerProcessingJobFacts.cs", label=jobId, span=""];
m13_208 [file="SqlServerProcessingJobFacts.cs", label=storedParameters, span=""];
m13_209 [file="SqlServerProcessingJobFacts.cs", label="System.TimeSpan", span=""];
m13_210 [file="SqlServerProcessingJobFacts.cs", label=string, span=""];
m13_211 [file="SqlServerProcessingJobFacts.cs", label=string, span=""];
m13_212 [file="SqlServerProcessingJobFacts.cs", label=string, span=""];
m13_213 [file="SqlServerProcessingJobFacts.cs", label="HangFire.Server.ServerContext", span=""];
m13_214 [file="SqlServerProcessingJobFacts.cs", label=queue1, span=""];
m13_215 [file="SqlServerProcessingJobFacts.cs", label=string, span=""];
m13_216 [file="SqlServerProcessingJobFacts.cs", label=name, span=""];
m13_217 [file="SqlServerProcessingJobFacts.cs", label=heartbeats, span=""];
m14_0 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="SqlServerStorage.cs", label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11"];
m14_1 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="SqlServerStorage.cs", label="Exit HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11"];
m15_5 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m15_6 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m15_0 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m15_1 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26"];
m15_2 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", span="27-27"];
m15_3 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="PrepareSchemaIfNecessary = true", span="29-29"];
m15_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m15_7 [file="SqlServerStorageOptions.cs", label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
m16_587 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_153 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="162-162"];
m16_154 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var correctJobQueue = new Mock<IPersistentJobQueue>();\r\n                var correctProvider = new Mock<IPersistentJobQueueProvider>();\r\n                correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object);\r\n\r\n                _queueProviders.Add(correctProvider.Object, new [] { ''default'' });\r\n\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''));\r\n            })", span="164-176"];
m16_155 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="162-162"];
m16_726 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="287-287"];
m16_627 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="722-722"];
m16_629 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                Commit(sql, x => x.RemoveSet(''set-1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n                Assert.Equal(''set-2'', record.Key);\r\n            })", span="727-739"];
m16_628 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score]) values (@key, @value, 0.0)''", span="724-725"];
m16_630 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="722-722"];
m16_119 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="129-129"];
m16_121 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="136-158"];
m16_120 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="131-134"];
m16_122 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="129-129"];
m16_393 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="454-454"];
m16_394 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="456-468"];
m16_395 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="454-454"];
m16_614 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="712-712"];
m16_615 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)));\r\n            })", span="714-718"];
m16_616 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="712-712"];
m16_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132"];
m16_419 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="489-489"];
m16_420 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="491-502"];
m16_421 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="489-489"];
m16_318 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m16_48 [cluster="Unk.ToString", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.ToString", span=""];
m16_152 [cluster="Unk.AddJobState", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.AddJobState", span=""];
m16_476 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="564-564"];
m16_477 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="566-577"];
m16_478 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="564-564"];
m16_782 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="897-897"];
m16_783 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="899-905"];
m16_784 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="897-897"];
m16_655 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="265-265"];
m16_319 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="355-355"];
m16_320 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="357-368"];
m16_321 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="355-355"];
m16_559 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="653-653"];
m16_560 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                // Act\r\n                Commit(sql, x => x.RemoveHash(''some-hash''));\r\n\r\n                // Assert\r\n                var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="655-670"];
m16_561 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="653-653"];
m16_589 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="686-686"];
m16_590 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)));\r\n\r\n                Assert.Equal(''items'', exception.ParamName);\r\n            })", span="688-694"];
m16_591 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="686-686"];
m16_637 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Execute", span=""];
m16_407 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="472-472"];
m16_408 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="474-485"];
m16_409 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="472-472"];
m16_177 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="179-179"];
m16_178 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerWriteOnlyTransaction.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where Id = @id'', new { id = jobId })\r\n                .Single();", span="181-183"];
m16_179 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="179-179"];
m16_2 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransaction.cs", label="defaultProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="20-21"];
m16_3 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransaction.cs", label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="23-23"];
m16_4 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="17-17"];
m16_5 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m16_761 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="298-298"];
m16_343 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m16_50 [cluster="Unk.GetTestJob", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetTestJob", span=""];
m16_816 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="935-935"];
m16_817 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="937-943"];
m16_818 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="935-935"];
m16_7 [cluster="Mock<IPersistentJobQueue>.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m16_267 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="291-291"];
m16_268 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="293-302"];
m16_269 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="291-291"];
m16_829 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="320-320"];
m16_193 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m16_795 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="309-309"];
m16_514 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="610-610"];
m16_515 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="612-618"];
m16_516 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="610-610"];
m16_691 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="276-276"];
m16_23 [cluster="SqlServerWriteOnlyTransaction.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry SqlServerWriteOnlyTransaction.cstr", span=""];
m16_280 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m16_194 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="202-202"];
m16_195 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="4: UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="204-218"];
m16_196 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="202-202"];
m16_293 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="323-323"];
m16_294 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="325-336"];
m16_295 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="323-323"];
m16_513 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="214-214"];
m16_441 [cluster="Unk.ToArray", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.ToArray", span=""];
m16_52 [cluster="System.DateTime.AddDays(double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m16_0 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="17-17"];
m16_1 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransaction.cs", label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="19-19"];
m16_830 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="947-947"];
m16_832 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistList(''list-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''list-1'']);\r\n                Assert.NotNull(records[''list-2'']);\r\n            })", span="953-969"];
m16_831 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="949-951"];
m16_833 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="947-947"];
m16_692 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="794-794"];
m16_694 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1'']);\r\n                Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''set-2'']);\r\n            })", span="800-817"];
m16_693 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="796-798"];
m16_695 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="794-794"];
m16_143 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="142-142"];
m16_82 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="98-125"];
m16_96 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: var jobState = sql.Query(''select * from HangFire.State'').Single()", span="119-119"];
m16_95 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="4: Assert.Null(anotherJob.StateId)", span="117-117"];
m16_97 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="4: Assert.Equal((string)jobId, jobState.JobId.ToString())", span="120-120"];
m16_98 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Assert.Equal(''State'', jobState.Name)", span="121-121"];
m16_99 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="4: Assert.Equal(''Reason'', jobState.Reason)", span="122-122"];
m16_100 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(jobState.CreatedAt)", span="123-123"];
m16_101 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="124-124"];
m16_83 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="100-100"];
m16_94 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Assert.Null(anotherJob.StateName)", span="116-116"];
m16_93 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="115-115"];
m16_197 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="204-218"];
m16_21 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="new SqlServerWriteOnlyTransaction(null, null, _queueProviders)", span="30-30"];
m16_40 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="57-57"];
m16_41 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m16_43 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m16_67 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="80-80"];
m16_68 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var job = GetTestJob(sql, jobId)", span="82-82"];
m16_70 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="85-85"];
m16_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="109-109"];
m16_90 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var job = GetTestJob(sql, jobId)", span="111-111"];
m16_129 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="146-146"];
m16_130 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var job = GetTestJob(sql, jobId)", span="148-148"];
m16_160 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="_queueProviders.Add(correctProvider.Object, new [] { ''default'' })", span="171-171"];
m16_161 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="173-173"];
m16_184 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="191-191"];
m16_198 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="206-206"];
m16_216 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="226-230"];
m16_228 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="243-243"];
m16_242 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="258-258"];
m16_259 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="278-282"];
m16_271 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="295-295"];
m16_285 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="310-314"];
m16_297 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="327-331"];
m16_309 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="344-344"];
m16_323 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="359-363"];
m16_335 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="376-380"];
m16_348 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="393-397"];
m16_360 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="410-414"];
m16_372 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="427-427"];
m16_385 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="441-445"];
m16_397 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="458-463"];
m16_411 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="476-480"];
m16_423 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="493-497"];
m16_435 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="510-517"];
m16_454 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="532-538"];
m16_468 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="551-555"];
m16_480 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="568-572"];
m16_492 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="585-589"];
m16_504 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="602-603"];
m16_508 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="603-603"];
m16_518 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)))", span="614-615"];
m16_522 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null))", span="615-615"];
m16_531 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="626-630"];
m16_550 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)))", span="647-648"];
m16_553 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.RemoveHash(null))", span="648-648"];
m16_563 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="658-662"];
m16_564 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.RemoveHash(''some-hash''))", span="665-665"];
m16_578 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())))", span="678-679"];
m16_582 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddRangeToSet(null, new List<string>()))", span="679-679"];
m16_593 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)))", span="690-691"];
m16_597 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', null))", span="691-691"];
m16_607 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', items))", span="704-704"];
m16_618 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)))", span="716-717"];
m16_621 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.RemoveSet(null))", span="717-717"];
m16_633 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.RemoveSet(''set-1''))", span="735-735"];
m16_645 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))))", span="747-748"];
m16_649 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)))", span="748-748"];
m16_662 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)))", span="771-771"];
m16_681 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))))", span="786-787"];
m16_685 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)))", span="787-787"];
m16_698 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)))", span="810-810"];
m16_717 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))))", span="825-826"];
m16_721 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)))", span="826-826"];
m16_733 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)))", span="848-848"];
m16_752 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)))", span="863-864"];
m16_756 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistHash(null))", span="864-864"];
m16_768 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistHash(''hash-1''))", span="887-887"];
m16_786 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)))", span="901-902"];
m16_790 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistSet(null))", span="902-902"];
m16_802 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistSet(''set-1''))", span="925-925"];
m16_820 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)))", span="939-940"];
m16_824 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistList(null))", span="940-940"];
m16_836 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Commit(sql, x => x.PersistList(''list-1''))", span="963-963"];
m16_84 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="101-101"];
m16_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="98-125"];
m16_38 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m16_39 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m16_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m16_66 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m16_124 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="138-138"];
m16_133 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="152-152"];
m16_185 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="193-193"];
m16_199 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="208-208"];
m16_229 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="245-245"];
m16_243 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="260-260"];
m16_272 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="297-297"];
m16_310 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="346-346"];
m16_324 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="365-365"];
m16_373 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="429-429"];
m16_436 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="519-519"];
m16_532 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="632-635"];
m16_634 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="737-737"];
m16_663 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="774-774"];
m16_699 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="813-813"];
m16_734 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="851-851"];
m16_769 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="890-890"];
m16_803 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="928-928"];
m16_837 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="966-966"];
m16_217 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="232-232"];
m16_260 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="284-284"];
m16_286 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="316-316"];
m16_298 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="333-333"];
m16_336 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="382-382"];
m16_349 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="399-399"];
m16_361 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="416-416"];
m16_386 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="447-447"];
m16_398 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="465-465"];
m16_412 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="482-482"];
m16_424 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="499-499"];
m16_455 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="540-540"];
m16_469 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="557-557"];
m16_481 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="574-574"];
m16_493 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="591-591"];
m16_565 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single()", span="668-668"];
m16_116 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SetJobState(jobId, state.Object)", span="109-109"];
m16_134 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="153-153"];
m16_91 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''State'', job.StateName)", span="112-112"];
m16_135 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''State'', jobState.Name)", span="154-154"];
m16_136 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="155-155"];
m16_138 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="157-157"];
m16_186 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="195-195"];
m16_187 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, record.Value)", span="196-196"];
m16_188 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="197-197"];
m16_200 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="210-210"];
m16_201 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, record.Value)", span="211-211"];
m16_218 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(2, recordCount)", span="234-234"];
m16_230 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="247-247"];
m16_231 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(-1, record.Value)", span="248-248"];
m16_232 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="249-249"];
m16_244 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="262-262"];
m16_245 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(-1, record.Value)", span="263-263"];
m16_261 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(2, recordCount)", span="286-286"];
m16_273 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="299-299"];
m16_274 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-value'', record.Value)", span="300-300"];
m16_275 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(0.0, record.Score, 2)", span="301-301"];
m16_287 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(2, recordCount)", span="318-318"];
m16_299 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, recordCount)", span="335-335"];
m16_311 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="348-348"];
m16_312 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-value'', record.Value)", span="349-349"];
m16_313 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(3.2, record.Score, 3)", span="350-350"];
m16_325 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(3.2, record.Score, 3)", span="367-367"];
m16_337 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(0, recordCount)", span="384-384"];
m16_350 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, recordCount)", span="401-401"];
m16_362 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, recordCount)", span="418-418"];
m16_374 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-key'', record.Key)", span="431-431"];
m16_375 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''my-value'', record.Value)", span="432-432"];
m16_387 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(2, recordCount)", span="449-449"];
m16_399 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(0, recordCount)", span="467-467"];
m16_413 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, recordCount)", span="484-484"];
m16_425 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, recordCount)", span="501-501"];
m16_437 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(2, records.Length)", span="521-521"];
m16_438 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''1'', records[0].Value)", span="522-522"];
m16_439 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''2'', records[1].Value)", span="523-523"];
m16_456 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(2, recordCount)", span="542-542"];
m16_470 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(0, recordCount)", span="559-559"];
m16_482 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(0, recordCount)", span="576-576"];
m16_494 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(1, recordCount)", span="593-593"];
m16_505 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="605-605"];
m16_519 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="617-617"];
m16_533 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="637-637"];
m16_534 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="638-638"];
m16_566 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(0, count)", span="669-669"];
m16_579 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="681-681"];
m16_594 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''items'', exception.ParamName)", span="693-693"];
m16_609 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(items, records)", span="707-707"];
m16_635 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''set-2'', record.Key)", span="738-738"];
m16_646 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="750-750"];
m16_682 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="789-789"];
m16_718 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="828-828"];
m16_753 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="866-866"];
m16_787 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="904-904"];
m16_821 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''key'', exception.ParamName)", span="942-942"];
m16_92 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(job.StateId)", span="113-113"];
m16_44 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(anotherJob.ExpireAt)", span="63-63"];
m16_69 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(job.ExpireAt)", span="83-83"];
m16_131 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(job.StateName)", span="149-149"];
m16_132 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(job.StateId)", span="150-150"];
m16_666 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(records[''hash-2''])", span="777-777"];
m16_702 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(records[''set-2''])", span="816-816"];
m16_737 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(records[''list-2''])", span="854-854"];
m16_770 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(records[''hash-1''])", span="891-891"];
m16_804 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(records[''set-1''])", span="929-929"];
m16_838 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Null(records[''list-1''])", span="967-967"];
m16_206 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="204-218"];
m16_20 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="30-30"];
m16_22 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="30-30"];
m16_37 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="52-64"];
m16_55 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="57-57"];
m16_42 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="60-60"];
m16_64 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="75-87"];
m16_74 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="80-80"];
m16_71 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="86-86"];
m16_85 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var state = new Mock<IState>()", span="103-103"];
m16_88 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="106-107"];
m16_115 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="109-109"];
m16_123 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="136-158"];
m16_125 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var state = new Mock<IState>()", span="140-140"];
m16_128 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="143-144"];
m16_149 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="146-146"];
m16_156 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="164-176"];
m16_158 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="167-167"];
m16_159 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object)", span="168-169"];
m16_162 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''))", span="175-175"];
m16_169 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="173-173"];
m16_183 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="189-198"];
m16_190 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="191-191"];
m16_208 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="206-206"];
m16_215 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="224-235"];
m16_220 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="226-230"];
m16_227 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="241-250"];
m16_234 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="243-243"];
m16_241 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="256-270"];
m16_251 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="258-258"];
m16_258 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="276-287"];
m16_263 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="278-282"];
m16_270 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="293-302"];
m16_277 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="295-295"];
m16_284 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="308-319"];
m16_289 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="310-314"];
m16_296 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="325-336"];
m16_301 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="327-331"];
m16_308 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="342-351"];
m16_315 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="344-344"];
m16_322 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="357-368"];
m16_327 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="359-363"];
m16_334 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="374-385"];
m16_339 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="376-380"];
m16_347 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="391-402"];
m16_352 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="393-397"];
m16_359 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="408-419"];
m16_364 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="410-414"];
m16_371 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="425-433"];
m16_377 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="427-427"];
m16_384 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="439-450"];
m16_389 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="441-445"];
m16_396 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="456-468"];
m16_401 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="458-463"];
m16_410 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="474-485"];
m16_415 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="476-480"];
m16_422 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="491-502"];
m16_427 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="493-497"];
m16_434 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="508-524"];
m16_442 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="510-517"];
m16_453 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="530-543"];
m16_458 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="532-538"];
m16_467 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="549-560"];
m16_472 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="551-555"];
m16_479 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="566-577"];
m16_484 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="568-572"];
m16_491 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="583-594"];
m16_496 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="585-589"];
m16_503 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="600-606"];
m16_507 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="603-603"];
m16_509 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="603-603"];
m16_510 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="603-603"];
m16_517 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="612-618"];
m16_521 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="615-615"];
m16_523 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="615-615"];
m16_524 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="615-615"];
m16_530 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="624-639"];
m16_537 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="626-630"];
m16_549 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="645-649"];
m16_551 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="645-649"];
m16_552 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="648-648"];
m16_554 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="648-648"];
m16_555 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="648-648"];
m16_562 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="655-670"];
m16_568 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="658-662"];
m16_571 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="665-665"];
m16_577 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="676-682"];
m16_581 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="679-679"];
m16_583 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="679-679"];
m16_584 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="679-679"];
m16_592 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="688-694"];
m16_596 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="691-691"];
m16_598 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="691-691"];
m16_599 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="691-691"];
m16_605 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="700-708"];
m16_606 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var items = new List<string> { ''1'', ''2'', ''3'' }", span="702-702"];
m16_608 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''')", span="706-706"];
m16_611 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="704-704"];
m16_617 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="714-718"];
m16_619 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="714-718"];
m16_620 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="717-717"];
m16_622 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="717-717"];
m16_623 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="717-717"];
m16_631 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="727-739"];
m16_632 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="729-733"];
m16_638 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="735-735"];
m16_644 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="745-751"];
m16_648 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="748-748"];
m16_650 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="748-748"];
m16_651 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="748-748"];
m16_660 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="761-778"];
m16_661 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                })", span="764-768"];
m16_668 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="771-771"];
m16_680 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="784-790"];
m16_684 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="787-787"];
m16_686 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="787-787"];
m16_687 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="787-787"];
m16_696 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="800-817"];
m16_697 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="803-807"];
m16_704 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="810-810"];
m16_716 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="823-829"];
m16_720 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="826-826"];
m16_722 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="826-826"];
m16_723 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="826-826"];
m16_731 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="838-855"];
m16_732 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                })", span="841-845"];
m16_739 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="848-848"];
m16_751 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="861-867"];
m16_755 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="864-864"];
m16_757 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="864-864"];
m16_758 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="864-864"];
m16_766 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="877-893"];
m16_767 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="880-884"];
m16_773 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="887-887"];
m16_785 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="899-905"];
m16_789 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="902-902"];
m16_791 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="902-902"];
m16_792 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="902-902"];
m16_800 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="915-931"];
m16_801 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="918-922"];
m16_807 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="925-925"];
m16_819 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="937-943"];
m16_823 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="940-940"];
m16_825 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="940-940"];
m16_826 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="940-940"];
m16_834 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="953-969"];
m16_835 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="956-960"];
m16_841 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="963-963"];
m16_56 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="57-57"];
m16_75 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistJob(jobId)", span="80-80"];
m16_150 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddJobState(jobId, state.Object)", span="146-146"];
m16_137 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(jobState.CreatedAt)", span="156-156"];
m16_202 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(record.ExpireAt)", span="212-212"];
m16_203 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var expireAt = (DateTime) record.ExpireAt", span="214-214"];
m16_246 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(record.ExpireAt)", span="264-264"];
m16_247 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var expireAt = (DateTime)record.ExpireAt", span="266-266"];
m16_540 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="635-635"];
m16_543 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="635-635"];
m16_664 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1''])", span="775-775"];
m16_671 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="774-774"];
m16_674 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="774-774"];
m16_665 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61))", span="776-776"];
m16_700 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1''])", span="814-814"];
m16_707 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="813-813"];
m16_710 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="813-813"];
m16_701 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61))", span="815-815"];
m16_735 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1''])", span="852-852"];
m16_742 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="851-851"];
m16_745 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="851-851"];
m16_736 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61))", span="853-853"];
m16_776 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="890-890"];
m16_779 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="890-890"];
m16_771 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(records[''hash-2''])", span="892-892"];
m16_810 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="928-928"];
m16_813 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="928-928"];
m16_805 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(records[''set-2''])", span="930-930"];
m16_844 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="966-966"];
m16_847 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="966-966"];
m16_839 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.NotNull(records[''list-2''])", span="968-968"];
m16_117 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="109-109"];
m16_139 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="136-158"];
m16_189 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="189-198"];
m16_219 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="224-235"];
m16_233 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="241-250"];
m16_262 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="276-287"];
m16_276 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="293-302"];
m16_288 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="308-319"];
m16_300 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="325-336"];
m16_314 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="342-351"];
m16_326 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="357-368"];
m16_338 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="374-385"];
m16_351 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="391-402"];
m16_363 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="408-419"];
m16_376 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="425-433"];
m16_388 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="439-450"];
m16_400 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="456-468"];
m16_414 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="474-485"];
m16_426 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="491-502"];
m16_440 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="508-524"];
m16_457 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="530-543"];
m16_471 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="549-560"];
m16_483 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="566-577"];
m16_495 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="583-594"];
m16_506 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="600-606"];
m16_520 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="612-618"];
m16_535 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="624-639"];
m16_567 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="655-670"];
m16_580 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="676-682"];
m16_595 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="688-694"];
m16_610 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="700-708"];
m16_636 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="727-739"];
m16_647 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="745-751"];
m16_683 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="784-790"];
m16_719 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="823-829"];
m16_754 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="861-867"];
m16_788 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="899-905"];
m16_822 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="937-943"];
m16_45 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="52-64"];
m16_667 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="761-778"];
m16_703 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="800-817"];
m16_738 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="838-855"];
m16_205 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="217-217"];
m16_10 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="20-20"];
m16_11 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="20-20"];
m16_167 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="168-168"];
m16_29 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null, null)", span="39-39"];
m16_57 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="57-57"];
m16_72 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="75-87"];
m16_76 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="80-80"];
m16_86 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="104-104"];
m16_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="105-105"];
m16_111 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="106-106"];
m16_126 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="141-141"];
m16_127 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="142-142"];
m16_146 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="143-143"];
m16_151 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="146-146"];
m16_163 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="164-176"];
m16_157 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="166-166"];
m16_166 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="168-168"];
m16_173 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="175-175"];
m16_171 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="173-173"];
m16_170 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToQueue(''default'', ''1'')", span="173-173"];
m16_192 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="191-191"];
m16_191 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.IncrementCounter(''my-key'')", span="191-191"];
m16_210 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="206-206"];
m16_209 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="206-206"];
m16_223 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="226-230"];
m16_221 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.IncrementCounter(''my-key'')", span="228-228"];
m16_222 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.IncrementCounter(''my-key'')", span="229-229"];
m16_236 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="243-243"];
m16_235 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.DecrementCounter(''my-key'')", span="243-243"];
m16_250 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="256-270"];
m16_253 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="258-258"];
m16_252 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="258-258"];
m16_266 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="278-282"];
m16_264 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.DecrementCounter(''my-key'')", span="280-280"];
m16_265 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.DecrementCounter(''my-key'')", span="281-281"];
m16_279 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="295-295"];
m16_278 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="295-295"];
m16_292 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="310-314"];
m16_290 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="312-312"];
m16_291 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="313-313"];
m16_304 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="327-331"];
m16_302 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="329-329"];
m16_303 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="330-330"];
m16_317 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="344-344"];
m16_316 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="344-344"];
m16_330 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="359-363"];
m16_328 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="361-361"];
m16_329 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="362-362"];
m16_342 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="376-380"];
m16_340 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="378-378"];
m16_341 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="379-379"];
m16_355 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="393-397"];
m16_353 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="395-395"];
m16_354 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="396-396"];
m16_367 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="410-414"];
m16_365 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="412-412"];
m16_366 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="413-413"];
m16_379 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="427-427"];
m16_378 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="427-427"];
m16_392 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="441-445"];
m16_390 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="443-443"];
m16_391 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="444-444"];
m16_405 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="458-463"];
m16_402 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="460-460"];
m16_403 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="461-461"];
m16_404 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="462-462"];
m16_418 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="476-480"];
m16_416 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="478-478"];
m16_417 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="479-479"];
m16_430 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="493-497"];
m16_428 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="495-495"];
m16_429 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="496-496"];
m16_448 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="510-517"];
m16_443 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''0'')", span="512-512"];
m16_444 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''1'')", span="513-513"];
m16_445 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''2'')", span="514-514"];
m16_446 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''3'')", span="515-515"];
m16_447 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.TrimList(''my-key'', 1, 2)", span="516-516"];
m16_463 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="532-538"];
m16_459 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''0'')", span="534-534"];
m16_460 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''1'')", span="535-535"];
m16_461 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''2'')", span="536-536"];
m16_462 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.TrimList(''my-key'', 1, 100)", span="537-537"];
m16_475 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="551-555"];
m16_473 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''0'')", span="553-553"];
m16_474 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.TrimList(''my-key'', 1, 100)", span="554-554"];
m16_487 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="568-572"];
m16_485 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''0'')", span="570-570"];
m16_486 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.TrimList(''my-key'', 1, 0)", span="571-571"];
m16_499 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="585-589"];
m16_497 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.InsertToList(''my-key'', ''0'')", span="587-587"];
m16_498 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.TrimList(''another-key'', 1, 0)", span="588-588"];
m16_512 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="603-603"];
m16_511 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="603-603"];
m16_526 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="615-615"];
m16_525 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SetRangeInHash(''some-hash'', null)", span="615-615"];
m16_539 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="626-630"];
m16_538 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="626-630"];
m16_557 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="648-648"];
m16_556 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveHash(null)", span="648-648"];
m16_570 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="658-662"];
m16_569 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="658-662"];
m16_573 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="665-665"];
m16_572 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveHash(''some-hash'')", span="665-665"];
m16_586 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="679-679"];
m16_585 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddRangeToSet(null, new List<string>())", span="679-679"];
m16_601 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="691-691"];
m16_600 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddRangeToSet(''my-set'', null)", span="691-691"];
m16_612 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.AddRangeToSet(''my-set'', items)", span="704-704"];
m16_613 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="704-704"];
m16_625 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="717-717"];
m16_624 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveSet(null)", span="717-717"];
m16_640 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="735-735"];
m16_639 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.RemoveSet(''set-1'')", span="735-735"];
m16_653 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="748-748"];
m16_652 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireHash(null, TimeSpan.FromMinutes(5))", span="748-748"];
m16_670 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="771-771"];
m16_669 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60))", span="771-771"];
m16_689 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="787-787"];
m16_688 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireSet(null, TimeSpan.FromSeconds(45))", span="787-787"];
m16_706 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="810-810"];
m16_705 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60))", span="810-810"];
m16_725 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="826-826"];
m16_724 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireList(null, TimeSpan.FromSeconds(45))", span="826-826"];
m16_741 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="848-848"];
m16_740 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.ExpireList(''list-1'', TimeSpan.FromMinutes(60))", span="848-848"];
m16_760 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="864-864"];
m16_759 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistHash(null)", span="864-864"];
m16_772 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="877-893"];
m16_775 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="887-887"];
m16_774 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistHash(''hash-1'')", span="887-887"];
m16_794 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="902-902"];
m16_793 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistSet(null)", span="902-902"];
m16_806 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="915-931"];
m16_809 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="925-925"];
m16_808 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistSet(''set-1'')", span="925-925"];
m16_828 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="940-940"];
m16_827 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistList(null)", span="940-940"];
m16_840 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="953-969"];
m16_843 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="963-963"];
m16_842 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.PersistList(''list-1'')", span="963-963"];
m16_204 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="216-216"];
m16_248 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="268-268"];
m16_249 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="269-269"];
m16_542 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="635-635"];
m16_541 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Field", span="635-635"];
m16_545 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="635-635"];
m16_544 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Value", span="635-635"];
m16_673 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="774-774"];
m16_672 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Key", span="774-774"];
m16_676 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="774-774"];
m16_675 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(DateTime?)x.ExpireAt", span="774-774"];
m16_709 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="813-813"];
m16_708 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Key", span="813-813"];
m16_712 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="813-813"];
m16_711 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(DateTime?)x.ExpireAt", span="813-813"];
m16_744 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="851-851"];
m16_743 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Key", span="851-851"];
m16_747 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="851-851"];
m16_746 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(DateTime?)x.ExpireAt", span="851-851"];
m16_778 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="890-890"];
m16_777 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Key", span="890-890"];
m16_781 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="890-890"];
m16_780 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(DateTime?)x.ExpireAt", span="890-890"];
m16_812 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="928-928"];
m16_811 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Key", span="928-928"];
m16_815 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="928-928"];
m16_814 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(DateTime?)x.ExpireAt", span="928-928"];
m16_846 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="966-966"];
m16_845 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(string)x.Key", span="966-966"];
m16_849 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="966-966"];
m16_848 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="(DateTime?)x.ExpireAt", span="966-966"];
m16_28 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="39-39"];
m16_12 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="20-20"];
m16_168 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="168-168"];
m16_30 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="39-39"];
m16_105 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="104-104"];
m16_108 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="105-105"];
m16_113 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="106-106"];
m16_112 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SerializeData()", span="106-106"];
m16_140 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Entry lambda expression", span="141-141"];
m16_148 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="143-143"];
m16_147 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.SerializeData()", span="143-143"];
m16_175 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="175-175"];
m16_174 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Enqueue(''default'', ''1'')", span="175-175"];
m16_107 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="104-104"];
m16_106 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Name", span="104-104"];
m16_110 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="105-105"];
m16_109 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Reason", span="105-105"];
m16_142 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="141-141"];
m16_141 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Name", span="141-141"];
m16_144 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="x.Reason", span="142-142"];
m16_145 [cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs", label="Exit lambda expression", span="142-142"];
m16_588 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="242-242"];
m16_381 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="437-437"];
m16_382 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="439-450"];
m16_383 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="437-437"];
m16_368 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="423-423"];
m16_369 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="425-433"];
m16_370 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="423-423"];
m16_602 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="698-698"];
m16_603 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var items = new List<string> { ''1'', ''2'', ''3'' };\r\n\r\n                Commit(sql, x => x.AddRangeToSet(''my-set'', items));\r\n\r\n                var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''');\r\n                Assert.Equal(items, records);\r\n            })", span="700-708"];
m16_604 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="698-698"];
m16_406 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="191-191"];
m16_8 [cluster="Unk.Returns", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Returns", span=""];
m16_796 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="909-909"];
m16_798 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistSet(''set-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''set-1'']);\r\n                Assert.NotNull(records[''set-2'']);\r\n            })", span="915-931"];
m16_797 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="911-913"];
m16_799 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="909-909"];
m16_356 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="406-406"];
m16_357 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="408-419"];
m16_358 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="406-406"];
m16_713 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="821-821"];
m16_714 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="823-829"];
m16_715 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="821-821"];
m16_103 [cluster="Mock<IState>.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry Mock<IState>.cstr", span=""];
m16_224 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="239-239"];
m16_225 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="241-250"];
m16_226 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="239-239"];
m16_51 [cluster="System.DateTime.AddMinutes(double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m16_859 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m16_36 [cluster="Unk.UseConnection", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.UseConnection", span=""];
m16_19 [cluster="Unk.Equal", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Equal", span=""];
m16_237 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m16_118 [cluster="Unk.SetJobState", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.SetJobState", span=""];
m16_488 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="581-581"];
m16_489 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="583-594"];
m16_490 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="581-581"];
m16_24 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="36-36"];
m16_26 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''queueProviders'', exception.ParamName)", span="41-41"];
m16_25 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null, null))", span="38-39"];
m16_27 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="36-36"];
m16_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m16_59 [cluster="Unk.ExpireJob", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.ExpireJob", span=""];
m16_331 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="372-372"];
m16_332 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="374-385"];
m16_333 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="372-372"];
m16_15 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="27-27"];
m16_16 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, null, _queueProviders))", span="29-30"];
m16_17 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="32-32"];
m16_18 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="27-27"];
m16_305 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="340-340"];
m16_306 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="342-351"];
m16_307 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="340-340"];
m16_46 [cluster="Unk.Query", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Query", span=""];
m16_854 [cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m16_558 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="232-232"];
m16_238 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="254-254"];
m16_239 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="256-270"];
m16_240 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="254-254"];
m16_500 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="598-598"];
m16_501 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="600-606"];
m16_502 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="598-598"];
m16_727 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="833-833"];
m16_729 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1'']);\r\n                Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''list-2'']);\r\n            })", span="838-855"];
m16_728 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key]) values (@key)''", span="835-836"];
m16_730 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="833-833"];
m16_164 [cluster="Unk.Add", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Add", span=""];
m16_73 [cluster="Unk.NotNull", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.NotNull", span=""];
m16_32 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="45-45"];
m16_34 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m16_33 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m16_35 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="45-45"];
m16_762 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="871-871"];
m16_764 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistHash(''hash-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''hash-1'']);\r\n                Assert.NotNull(records[''hash-2'']);\r\n            })", span="877-893"];
m16_763 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="873-875"];
m16_765 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="871-871"];
m16_180 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="187-187"];
m16_181 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="189-198"];
m16_182 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="187-187"];
m16_49 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="980-980"];
m16_855 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransaction.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection, null, _queueProviders)", span="984-984"];
m16_856 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransaction.cs", label="action(transaction)", span="986-986"];
m16_857 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransaction.cs", label="transaction.Commit()", span="987-987"];
m16_858 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="980-980"];
m16_6 [cluster="Unk.Setup", file="SqlServerWriteOnlyTransaction.cs", label="HangFire.Common.States.StateContext", span=""];
m16_54 [cluster="Unk.Null", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Null", span=""];
m16_9 [cluster="PersistentJobQueueProviderCollection.cstr", file="SqlServerWriteOnlyTransaction.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m16_850 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="972-972"];
m16_852 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="action(connection)", span="976-976"];
m16_851 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="var connection = ConnectionUtils.CreateConnection()", span="974-974"];
m16_853 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="972-972"];
m16_656 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="755-755"];
m16_658 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1'']);\r\n                Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''hash-2'']);\r\n            })", span="761-778"];
m16_657 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="757-759"];
m16_659 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="755-755"];
m16_464 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="547-547"];
m16_465 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="549-560"];
m16_466 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="547-547"];
m16_207 [cluster="System.DateTime.AddHours(double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m16_212 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="222-222"];
m16_213 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="224-235"];
m16_214 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="222-222"];
m16_748 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="859-859"];
m16_749 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="861-867"];
m16_750 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="859-859"];
m16_450 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="528-528"];
m16_451 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="530-543"];
m16_452 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="528-528"];
m16_14 [cluster="Unk.GetJobQueue", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetJobQueue", span=""];
m16_431 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="506-506"];
m16_432 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="508-524"];
m16_433 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="506-506"];
m16_165 [cluster="Unk.Verify", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Verify", span=""];
m16_255 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="274-274"];
m16_256 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="276-287"];
m16_257 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="274-274"];
m16_449 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="199-199"];
m16_654 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m16_536 [cluster="Unk.ToDictionary", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.ToDictionary", span=""];
m16_281 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="306-306"];
m16_282 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="308-319"];
m16_283 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="306-306"];
m16_78 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="91-91"];
m16_80 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="4: UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="98-125"];
m16_79 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="93-96"];
m16_81 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="91-91"];
m16_60 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="68-68"];
m16_62 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="75-87"];
m16_61 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m16_63 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="68-68"];
m16_254 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146"];
m16_626 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="255-255"];
m16_13 [cluster="Unk.>", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.>", span=""];
m16_690 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m16_172 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="117-117"];
m16_58 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m16_176 [cluster="Unk.Enqueue", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Enqueue", span=""];
m16_527 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="622-622"];
m16_528 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="624-639"];
m16_529 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="622-622"];
m16_574 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="674-674"];
m16_575 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="676-682"];
m16_576 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="674-674"];
m16_344 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="389-389"];
m16_345 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="391-402"];
m16_346 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="389-389"];
m16_641 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="743-743"];
m16_642 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="745-751"];
m16_643 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="743-743"];
m16_114 [cluster="Unk.SerializeData", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.SerializeData", span=""];
m16_47 [cluster="Unk.Single", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Single", span=""];
m16_53 [cluster="Unk.True", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.True", span=""];
m16_77 [cluster="Unk.PersistJob", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.PersistJob", span=""];
m16_677 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="782-782"];
m16_678 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="784-790"];
m16_679 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="782-782"];
m16_380 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="183-183"];
m16_546 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="643-643"];
m16_547 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)));\r\n            })", span="645-649"];
m16_548 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransaction.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="643-643"];
m16_860 [file="SqlServerWriteOnlyTransaction.cs", label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
m16_865 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_871 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_872 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_873 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_874 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_875 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_877 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_879 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_881 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_883 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_885 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_887 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_889 [file="SqlServerWriteOnlyTransaction.cs", label=SqlConnection, span=""];
m16_861 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_863 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_868 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_866 [file="SqlServerWriteOnlyTransaction.cs", label=jobId, span=""];
m16_867 [file="SqlServerWriteOnlyTransaction.cs", label=state, span=""];
m16_878 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_880 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_882 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_884 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_886 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_888 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_890 [file="SqlServerWriteOnlyTransaction.cs", label=arrangeSql, span=""];
m16_862 [file="SqlServerWriteOnlyTransaction.cs", label=jobId, span=""];
m16_864 [file="SqlServerWriteOnlyTransaction.cs", label=jobId, span=""];
m16_869 [file="SqlServerWriteOnlyTransaction.cs", label=jobId, span=""];
m16_870 [file="SqlServerWriteOnlyTransaction.cs", label=state, span=""];
m16_876 [file="SqlServerWriteOnlyTransaction.cs", label=items, span=""];
m17_8 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m17_59 [cluster="Mock<IState>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m17_35 [cluster="Unk.Same", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Same", span=""];
m17_90 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116"];
m17_91 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''0'')", span="118-118"];
m17_92 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = new AutomaticRetryAttribute { Attempts = 0, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="119-119"];
m17_93 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="121-121"];
m17_94 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="123-123"];
m17_95 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116"];
m17_17 [cluster="Unk.Equal", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Equal", span=""];
m17_9 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m17_21 [cluster="Unk.>", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.>", span=""];
m17_16 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m17_11 [cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11"];
m17_44 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126"];
m17_99 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="return new AutomaticRetryAttribute { Attempts = 1 };", span="128-128"];
m17_100 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126"];
m17_34 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
m17_71 [cluster="Unk.GetJobParameter", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m17_66 [cluster="Unk.Setup", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Setup", span=""];
m17_36 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58"];
m17_37 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = CreateFilter()", span="60-60"];
m17_38 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="61-61"];
m17_39 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.IsType<ScheduledState>(_context.Object.CandidateState)", span="63-63"];
m17_40 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(((ScheduledState)_context.Object.CandidateState).EnqueueAt > DateTime.UtcNow)", span="64-64"];
m17_41 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Contains(''1 of 1'', _context.Object.CandidateState.Reason)", span="65-65"];
m17_42 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_connection.Verify(x => x.SetJobParameter(JobId, ''RetryCount'', ''1''))", span="67-67"];
m17_43 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58"];
m17_52 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71"];
m17_53 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = CreateFilter()", span="73-73"];
m17_54 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var state = new Mock<IState>()", span="74-74"];
m17_56 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="77-77"];
m17_55 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_context.CandidateStateValue = state.Object", span="75-75"];
m17_57 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Same(state.Object, _context.Object.CandidateState)", span="79-79"];
m17_58 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71"];
m17_60 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83"];
m17_61 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="85-85"];
m17_62 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = CreateFilter()", span="86-86"];
m17_63 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="88-88"];
m17_64 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Same(_failedState, _context.Object.CandidateState)", span="90-90"];
m17_65 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83"];
m17_12 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28"];
m17_13 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = new AutomaticRetryAttribute()", span="30-30"];
m17_14 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(10, filter.Attempts)", span="31-31"];
m17_15 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28"];
m17_29 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49"];
m17_30 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = new AutomaticRetryAttribute { Attempts = 0 }", span="51-51"];
m17_31 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="52-52"];
m17_32 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Same(_failedState, _context.Object.CandidateState)", span="54-54"];
m17_33 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49"];
m17_96 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="118-118"];
m17_22 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="38-38"];
m17_23 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new AutomaticRetryAttribute { Attempts = -1 }", span="38-38"];
m17_24 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="38-38"];
m17_48 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="67-67"];
m17_49 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SetJobParameter(JobId, ''RetryCount'', ''1'')", span="67-67"];
m17_50 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="67-67"];
m17_68 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="85-85"];
m17_69 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.GetJobParameter(JobId, ''RetryCount'')", span="85-85"];
m17_70 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="85-85"];
m17_78 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="96-96"];
m17_79 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.GetJobParameter(JobId, ''RetryCount'')", span="96-96"];
m17_80 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="96-96"];
m17_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="107-107"];
m17_88 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.GetJobParameter(JobId, ''RetryCount'')", span="107-107"];
m17_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="107-107"];
m17_97 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.GetJobParameter(JobId, ''RetryCount'')", span="118-118"];
m17_98 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="118-118"];
m17_46 [cluster="Unk.Contains", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Contains", span=""];
m17_47 [cluster="Unk.Verify", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Verify", span=""];
m17_81 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105"];
m17_82 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="107-107"];
m17_83 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Fail }", span="108-108"];
m17_84 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="110-110"];
m17_85 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.IsType<FailedState>(_context.Object.CandidateState)", span="112-112"];
m17_86 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105"];
m17_72 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94"];
m17_73 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="96-96"];
m17_74 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="97-97"];
m17_75 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="filter.OnStateElection(_context.Object)", span="99-99"];
m17_76 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="101-101"];
m17_77 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94"];
m17_45 [cluster="Unk.True", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.True", span=""];
m17_0 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16"];
m17_1 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=green, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="0: _failedState = new FailedState(new InvalidOperationException())", span="18-18"];
m17_2 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="0: _connection = new Mock<IStorageConnection>()", span="19-19"];
m17_3 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="4: _context = new ElectStateContextMock()", span="21-21"];
m17_4 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="4: _context.StateContextValue.JobIdValue = JobId", span="22-22"];
m17_5 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="4: _context.ConnectionValue = _connection", span="23-23"];
m17_6 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=red, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="4: _context.CandidateStateValue = _failedState", span="24-24"];
m17_7 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16"];
m17_67 [cluster="Unk.Returns", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Returns", span=""];
m17_10 [cluster="Mock<IStorageConnection>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m17_51 [cluster="Unk.SetJobParameter", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.SetJobParameter", span=""];
m17_18 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35"];
m17_19 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new AutomaticRetryAttribute { Attempts = -1 })", span="37-38"];
m17_20 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35"];
m17_25 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42"];
m17_26 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var filter = new AutomaticRetryAttribute()", span="44-44"];
m17_27 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(AttemptsExceededAction.Fail, filter.OnAttemptsExceeded)", span="45-45"];
m17_28 [cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42"];
m17_101 [file="SqlServerWriteOnlyTransactionFacts.cs", label="Hangfire.Core.Tests.RetryAttributeFacts", span=""];
m18_14 [cluster="HangFire.Server.Worker.ToString()", file="Worker.cs", label="Entry HangFire.Server.Worker.ToString()", span="51-51"];
m18_15 [cluster="HangFire.Server.Worker.ToString()", color=green, community=0, file="Worker.cs", label="2: return ''Worker #'' + _context.WorkerNumber;", span="53-53"];
m18_16 [cluster="HangFire.Server.Worker.ToString()", file="Worker.cs", label="Exit HangFire.Server.Worker.ToString()", span="51-51"];
m18_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Worker.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_13 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="56-56"];
m18_17 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="61-61"];
m18_19 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="64-67"];
m18_22 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="81-81"];
m18_24 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="84-84"];
m18_25 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="process.Run(performContext, jobData.Job)", span="86-86"];
m18_31 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="107-107"];
m18_18 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var processingState = new ProcessingState(_context.ServerId)", span="62-62"];
m18_20 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="return;", span="69-69"];
m18_21 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="IState state", span="77-77"];
m18_23 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="jobData.EnsureLoaded()", span="82-82"];
m18_26 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new SucceededState()", span="88-88"];
m18_27 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=JobPerformanceException, span="90-90"];
m18_29 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=Exception, span="97-97"];
m18_28 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="92-95"];
m18_30 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="99-102"];
m18_32 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="56-56"];
m18_33 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m18_41 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m18_12 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30"];
m18_38 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35"];
m18_35 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="Worker.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="24-24"];
m18_37 [cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
m18_6 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34"];
m18_7 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="var connection = _context.Storage.GetConnection()", span="36-36"];
m18_8 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs", label="0: var nextJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="37-37"];
m18_9 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs", label="4: ProcessJob(nextJob.JobId, connection, _context.PerformanceProcess)", span="39-39"];
m18_10 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34"];
m18_39 [cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs", label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20"];
m18_36 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="36-36"];
m18_34 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m18_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m18_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="context == null", span="29-29"];
m18_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="_context = context", span="31-31"];
m18_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="29-29"];
m18_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m18_40 [cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m18_11 [cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m18_42 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
m19_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerFacts.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_19 [cluster="Unk.Commit", file="WorkerFacts.cs", label="Entry Unk.Commit", span=""];
m19_20 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="WorkerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="56-56"];
m19_21 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="WorkerFacts.cs", label="_transaction.Rollback()", span="58-58"];
m19_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="WorkerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="56-56"];
m19_0 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", span="29-29"];
m19_1 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="connection == null", span="34-34"];
m19_3 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="transaction == null", span="35-35"];
m19_5 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="jobId == null", span="36-36"];
m19_7 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="queue == null", span="37-37"];
m19_9 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="_connection = connection", span="39-39"];
m19_10 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="_transaction = transaction", span="40-40"];
m19_11 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="Id = id", span="42-42"];
m19_12 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="JobId = jobId", span="43-43"];
m19_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="Queue = queue", span="44-44"];
m19_2 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''connection'');", span="34-34"];
m19_4 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''transaction'');", span="35-35"];
m19_6 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''jobId'');", span="36-36"];
m19_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="throw new ArgumentNullException(''queue'');", span="37-37"];
m19_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="WorkerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", span="29-29"];
m19_28 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m19_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="WorkerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="61-61"];
m19_25 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="WorkerFacts.cs", label="_transaction.Dispose()", span="63-63"];
m19_26 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="WorkerFacts.cs", label="_connection.Dispose()", span="64-64"];
m19_27 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="WorkerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="61-61"];
m19_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="WorkerFacts.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="51-51"];
m19_17 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="WorkerFacts.cs", label="_transaction.Commit()", span="53-53"];
m19_18 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="WorkerFacts.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="51-51"];
m19_23 [cluster="Unk.Rollback", file="WorkerFacts.cs", label="Entry Unk.Rollback", span=""];
m19_29 [file="WorkerFacts.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
n0 -> n1  [color=red, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n3  [color=red, key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_66  [key=2, style=dotted];
m2_91 -> m2_67  [key=2, style=dotted];
m2_91 -> m2_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_16  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_34  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_21  [key=2, style=dotted];
m2_95 -> m2_90  [color=blue, key=0, style=bold];
m2_44 -> m2_99  [key=0, style=solid];
m2_44 -> m2_25  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_16  [key=2, style=dotted];
m2_100 -> m2_44  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [color=red, key=0, style=solid];
m2_37 -> m2_38  [color=red, key=0, style=solid];
m2_37 -> m2_44  [color=red, key=2, style=dotted];
m2_38 -> m2_39  [color=red, key=0, style=solid];
m2_38 -> m2_34  [color=red, key=2, style=dotted];
m2_39 -> m2_40  [color=red, key=0, style=solid];
m2_39 -> m2_21  [color=red, key=2, style=dotted];
m2_40 -> m2_41  [color=red, key=0, style=solid];
m2_40 -> m2_45  [color=red, key=2, style=dotted];
m2_41 -> m2_42  [color=red, key=0, style=solid];
m2_41 -> m2_46  [color=red, key=2, style=dotted];
m2_41 -> m2_41  [color=red, key=3, label="Local variable string arrangeSql", style=bold];
m2_42 -> m2_43  [color=red, key=0, style=solid];
m2_42 -> m2_47  [color=red, key=2, style=dotted];
m2_42 -> m2_48  [color=red, key=1, label="lambda expression", style=dashed];
m2_43 -> m2_36  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [color=red, key=0, style=solid];
m2_53 -> m2_54  [color=red, key=0, style=solid];
m2_53 -> m2_44  [color=red, key=2, style=dotted];
m2_53 -> m2_56  [color=red, key=1, label=filter, style=dashed];
m2_54 -> m2_55  [color=red, key=0, style=solid];
m2_54 -> m2_59  [color=red, key=2, style=dotted];
m2_54 -> m2_57  [color=red, key=1, label=state, style=dashed];
m2_56 -> m2_57  [color=red, key=0, style=solid];
m2_56 -> m2_34  [color=red, key=2, style=dotted];
m2_55 -> m2_56  [color=red, key=0, style=solid];
m2_57 -> m2_58  [color=red, key=0, style=solid];
m2_57 -> m2_35  [color=red, key=2, style=dotted];
m2_58 -> m2_52  [color=blue, key=0, style=bold];
m2_60 -> m2_61  [color=red, key=0, style=solid];
m2_61 -> m2_62  [color=red, key=0, style=solid];
m2_61 -> m2_66  [color=red, key=2, style=dotted];
m2_61 -> m2_67  [color=red, key=2, style=dotted];
m2_61 -> m2_68  [color=red, key=1, label="lambda expression", style=dashed];
m2_62 -> m2_63  [color=red, key=0, style=solid];
m2_62 -> m2_44  [color=red, key=2, style=dotted];
m2_63 -> m2_64  [color=red, key=0, style=solid];
m2_63 -> m2_34  [color=red, key=2, style=dotted];
m2_63 -> m2_25  [color=red, key=3, label="Local variable string arrangeSql", style=bold];
m2_64 -> m2_65  [color=red, key=0, style=solid];
m2_64 -> m2_35  [color=red, key=2, style=dotted];
m2_64 -> m2_76  [color=red, key=3, label="Local variable MessageQueue messageQueue", style=bold];
m2_65 -> m2_60  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [color=red, key=0, style=solid];
m2_13 -> m2_14  [color=red, key=0, style=solid];
m2_13 -> m2_16  [color=red, key=2, style=dotted];
m2_14 -> m2_15  [color=red, key=0, style=solid];
m2_14 -> m2_17  [color=red, key=2, style=dotted];
m2_15 -> m2_12  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [color=red, key=0, style=solid];
m2_30 -> m2_31  [color=red, key=0, style=solid];
m2_30 -> m2_16  [color=red, key=2, style=dotted];
m2_31 -> m2_32  [color=red, key=0, style=solid];
m2_31 -> m2_34  [color=red, key=2, style=dotted];
m2_32 -> m2_33  [color=red, key=0, style=solid];
m2_32 -> m2_35  [color=red, key=2, style=dotted];
m2_33 -> m2_29  [color=blue, key=0, style=bold];
m2_96 -> m2_97  [key=0, style=solid];
m2_22 -> m2_23  [color=red, key=0, style=solid];
m2_23 -> m2_24  [color=red, key=0, style=solid];
m2_23 -> m2_16  [color=red, key=2, style=dotted];
m2_24 -> m2_22  [color=blue, key=0, style=bold];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_49 -> m2_50  [color=red, key=0, style=solid];
m2_49 -> m2_51  [color=red, key=2, style=dotted];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [color=red, key=0, style=solid];
m2_69 -> m2_70  [color=red, key=0, style=solid];
m2_69 -> m2_71  [color=red, key=2, style=dotted];
m2_70 -> m2_68  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [color=red, key=0, style=solid];
m2_79 -> m2_80  [color=red, key=0, style=solid];
m2_79 -> m2_71  [color=red, key=2, style=dotted];
m2_80 -> m2_78  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [color=red, key=0, style=solid];
m2_88 -> m2_89  [color=red, key=0, style=solid];
m2_88 -> m2_71  [color=red, key=2, style=dotted];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_71  [key=2, style=dotted];
m2_98 -> m2_96  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [color=red, key=0, style=solid];
m2_82 -> m2_83  [color=red, key=0, style=solid];
m2_82 -> m2_66  [color=red, key=2, style=dotted];
m2_82 -> m2_67  [color=red, key=2, style=dotted];
m2_82 -> m2_87  [color=red, key=1, label="lambda expression", style=dashed];
m2_82 -> m2_81  [color=red, key=3, label="Local variable var job", style=bold];
m2_83 -> m2_84  [color=red, key=0, style=solid];
m2_83 -> m2_16  [color=red, key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_34  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_21  [key=2, style=dotted];
m2_86 -> m2_81  [color=blue, key=0, style=bold];
m2_72 -> m2_73  [color=red, key=0, style=solid];
m2_73 -> m2_74  [color=red, key=0, style=solid];
m2_73 -> m2_66  [color=red, key=2, style=dotted];
m2_73 -> m2_67  [color=red, key=2, style=dotted];
m2_73 -> m2_78  [color=red, key=1, label="lambda expression", style=dashed];
m2_74 -> m2_75  [color=red, key=0, style=solid];
m2_74 -> m2_16  [color=red, key=2, style=dotted];
m2_75 -> m2_76  [color=red, key=0, style=solid];
m2_75 -> m2_34  [color=red, key=2, style=dotted];
m2_76 -> m2_77  [color=red, key=0, style=solid];
m2_76 -> m2_21  [color=red, key=2, style=dotted];
m2_76 -> m2_30  [color=red, key=3, label="Parameter variable string queue", style=bold];
m2_76 -> m2_62  [color=red, key=3, label="Parameter variable string queue", style=bold];
m2_77 -> m2_72  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=red, key=0, style=solid];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_1 -> m2_8  [color=red, key=2, style=dotted];
m2_1 -> m2_9  [color=red, key=2, style=dotted];
m2_2 -> m2_3  [color=red, key=0, style=solid];
m2_2 -> m2_10  [color=red, key=2, style=dotted];
m2_3 -> m2_4  [color=red, key=0, style=solid];
m2_3 -> m2_11  [color=red, key=2, style=dotted];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_6 -> m2_7  [color=red, key=0, style=solid];
m2_7 -> m2_0  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [color=red, key=0, style=solid];
m2_19 -> m2_20  [color=red, key=0, style=solid];
m2_19 -> m2_21  [color=red, key=2, style=dotted];
m2_19 -> m2_22  [color=red, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [color=red, key=0, style=solid];
m2_25 -> m2_25  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m2_26 -> m2_27  [color=red, key=0, style=solid];
m2_26 -> m2_16  [color=red, key=2, style=dotted];
m2_26 -> m2_26  [color=red, key=3, label="Local variable int queueIndex", style=bold];
m2_27 -> m2_28  [color=red, key=0, style=solid];
m2_27 -> m2_17  [color=red, key=2, style=dotted];
m2_28 -> m2_25  [color=blue, key=0, style=bold];
m2_101 -> m2_1  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_2  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_3  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_4  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_5  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_6  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_31  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_32  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_38  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_39  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_40  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_41  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_42  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_55  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_56  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_57  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_61  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_63  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_64  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_73  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_75  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_76  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_82  [color=red, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m2_101 -> m2_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_5  [color=red, key=2, style=dotted];
m3_2 -> m3_3  [color=red, key=0, style=solid];
m3_2 -> m3_6  [color=red, key=2, style=dotted];
m3_2 -> m3_7  [color=red, key=2, style=dotted];
m3_3 -> m3_4  [color=red, key=0, style=solid];
m3_3 -> m3_8  [color=red, key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_41  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_22  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_42  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_43  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_44  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_26  [key=2, style=dotted];
m3_82 -> m3_75  [color=blue, key=0, style=bold];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_41  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_22  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_42  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_45  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_43  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_44  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_26  [key=2, style=dotted];
m3_91 -> m3_83  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_15 -> m3_16  [color=red, key=0, style=solid];
m3_15 -> m3_17  [color=red, key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_0  [key=2, style=dotted];
m3_17 -> m3_14  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=2, style=dotted];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_41  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_22  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_42  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_45  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_43  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_44  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_45  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_26  [key=2, style=dotted];
m3_67 -> m3_58  [color=blue, key=0, style=bold];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_41  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_22  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_42  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_43  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_44  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_45  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_45  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_45  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_26  [key=2, style=dotted];
m3_57 -> m3_47  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_10 -> m3_11  [color=red, key=0, style=solid];
m3_10 -> m3_13  [color=red, key=2, style=dotted];
m3_11 -> m3_12  [color=red, key=0, style=solid];
m3_12 -> m3_9  [color=blue, key=0, style=bold];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_41  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_22  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_42  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_43  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_44  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_45  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_46  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_45  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_26  [key=2, style=dotted];
m3_40 -> m3_30  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [key=2, style=dotted];
m3_24 -> m3_22  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_41  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_22  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_43  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_44  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_26  [key=2, style=dotted];
m3_74 -> m3_68  [color=blue, key=0, style=bold];
m3_92 -> m3_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_39  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_49  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_56  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_60  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_70  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_73  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_77  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_81  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_85  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m3_92 -> m3_90  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.SchedulePollerFeature", style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=0, style=solid];
m4_9 -> m4_12  [key=0, style=solid];
m4_9 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_10 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_16  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_17  [key=2, style=dotted];
m4_12 -> m4_7  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_18  [key=2, style=dotted];
m4_28 -> m4_26  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_2 -> m4_5  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_2  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_23  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_25  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_24  [key=0, style=solid];
m4_24 -> m4_18  [color=blue, key=0, style=bold];
m4_29 -> m4_3  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_8  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_11  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_19  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_20  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m4_29 -> m4_27  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_3  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_10  [key=2, style=dotted];
m5_12 -> m5_18  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_12 -> m5_17  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_12 -> m5_14  [key=2, style=dotted];
m5_26 -> m5_27  [color=green, key=0, style=solid];
m5_26 -> m5_34  [color=green, key=2, style=dotted];
m5_18 -> m5_26  [color=green, key=1, label=queueName, style=dashed];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_22 -> m5_26  [color=green, key=1, label=jobId, style=dashed];
m5_22 -> m5_24  [key=0, style=solid];
m5_22 -> m5_30  [key=2, style=dotted];
m5_22 -> m5_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_23 -> m5_26  [color=green, key=1, label=jobId, style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_31  [key=2, style=dotted];
m5_23 -> m5_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_25 -> m5_26  [color=green, key=0, style=solid];
m5_25 -> m5_29  [key=2, style=dotted];
m5_25 -> m5_32  [key=2, style=dotted];
m5_25 -> m5_33  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_17  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m5_17 -> m5_21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m5_19 -> m5_22  [color=darkseagreen4, key=1, label=queueKey, style=dashed];
m5_19 -> m5_23  [color=darkseagreen4, key=1, label=queueKey, style=dashed];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_29  [key=2, style=dotted];
m5_20 -> m5_22  [color=darkseagreen4, key=1, label=fetchedKey, style=dashed];
m5_20 -> m5_23  [color=darkseagreen4, key=1, label=fetchedKey, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_29  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_23  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_15  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_11  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m5_16 -> m5_28  [key=2, style=dotted];
m5_15 -> m5_17  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_15  [color=darkorchid, key=3, label="Local variable int queueIndex", style=bold];
m5_15 -> m5_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m5_15 -> m5_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m5_15 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m5_15 -> m5_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m5_15 -> m5_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m5_15 -> m5_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_27 -> m5_12  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_8 -> m5_11  [key=2, style=dotted];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_183  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_171 -> m5_180  [color=darkorchid, key=3, label="method methodReturn int RemoveTimedOutServers", style=bold];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_188  [key=2, style=dotted];
m5_172 -> m5_176  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_189  [key=2, style=dotted];
m5_175 -> m5_178  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_175 -> m5_179  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_184 -> m5_184  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_154  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> n3  [key=2, style=dotted];
m5_173 -> m5_178  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m5_173 -> m5_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m5_173 -> m5_181  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_179  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_183  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m5_178 -> m5_176  [key=0, style=solid];
m5_178 -> m5_60  [key=2, style=dotted];
m5_178 -> m5_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_178 -> m5_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_190  [key=2, style=dotted];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_181  [key=0, style=solid];
m5_183 -> m5_193  [key=2, style=dotted];
m5_182 -> m5_184  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_182  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m5_182 -> m5_191  [key=2, style=dotted];
m5_182 -> m5_192  [key=2, style=dotted];
m5_185 -> m5_185  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_185 -> m5_181  [key=0, style=solid];
m5_185 -> m5_186  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_180 -> m5_185  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_180 -> m5_15  [color=darkorchid, key=3, label="Local variable int removedServerCount", style=bold];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_186  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_186  [key=0, style=solid];
m5_177 -> m5_176  [color=darkorchid, key=3, label="Local variable var name", style=bold];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_200  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_177 -> m5_195  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_186 -> m5_187  [key=0, style=solid];
m5_187 -> m5_171  [color=blue, key=0, style=bold];
m5_11 -> m5_12  [key=0, style=solid];
m5_168 -> m5_169  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_29  [key=2, style=dotted];
m5_169 -> m5_32  [key=2, style=dotted];
m5_169 -> m5_33  [key=2, style=dotted];
m5_170 -> m5_168  [color=blue, key=0, style=bold];
m5_157 -> m5_60  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_154 -> m5_151  [color=darkorchid, key=3, label="Parameter variable string serverId", style=bold];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_154 -> m5_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_154 -> m5_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_154 -> m5_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_154 -> m5_97  [color=darkorchid, key=3, label="Parameter variable IRedisClient redis", style=bold];
m5_155 -> m5_11  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_157  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_155 -> m5_158  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_156 -> m5_60  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_158 -> m5_61  [key=2, style=dotted];
m5_158 -> m5_159  [key=0, style=solid];
m5_159 -> m5_154  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_9 -> m5_7  [color=blue, key=0, style=bold];
m5_102 -> m5_103  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_29  [key=2, style=dotted];
m5_103 -> m5_105  [key=2, style=dotted];
m5_104 -> m5_102  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_6 -> m5_0  [color=blue, key=0, style=bold];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_129 -> m5_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_129 -> m5_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_129 -> m5_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_129 -> m5_133  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m5_129 -> m5_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_129 -> m5_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_11  [key=2, style=dotted];
m5_130 -> m5_132  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_130 -> m5_135  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_130 -> m5_136  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_60  [key=2, style=dotted];
m5_131 -> m5_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_60  [key=2, style=dotted];
m5_132 -> m5_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_135 -> m5_133  [key=0, style=solid];
m5_135 -> m5_60  [key=2, style=dotted];
m5_135 -> m5_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_61  [key=2, style=dotted];
m5_133 -> m5_136  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_148  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m5_134 -> m5_133  [color=darkorchid, key=3, label="Local variable string queue1", style=bold];
m5_137 -> m5_129  [color=blue, key=0, style=bold];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_60  [key=2, style=dotted];
m5_110 -> m5_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_11  [key=2, style=dotted];
m5_107 -> m5_109  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_107 -> m5_110  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_107 -> m5_111  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_60  [key=2, style=dotted];
m5_108 -> m5_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_60  [key=2, style=dotted];
m5_109 -> m5_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_61  [key=2, style=dotted];
m5_112 -> m5_106  [color=blue, key=0, style=bold];
m5_151 -> m5_152  [key=0, style=solid];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_154  [key=2, style=dotted];
m5_153 -> m5_151  [color=blue, key=0, style=bold];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_72  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.JobData GetJobData", style=bold];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_29  [key=2, style=dotted];
m5_71 -> m5_94  [key=2, style=dotted];
m5_71 -> m5_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_79  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_85  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_71 -> m5_92  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_74  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_80  [key=0, style=solid];
m5_78 -> m5_95  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_88  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_82  [key=0, style=solid];
m5_80 -> m5_95  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_88  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_84  [key=0, style=solid];
m5_82 -> m5_95  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_88  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_86  [key=0, style=solid];
m5_84 -> m5_95  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_88  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_98  [key=2, style=dotted];
m5_92 -> m5_95  [key=2, style=dotted];
m5_74 -> m5_72  [color=darkorchid, key=3, label="Local variable string type", style=bold];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_88  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_75 -> m5_72  [color=darkorchid, key=3, label="Local variable string method", style=bold];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_88  [color=darkseagreen4, key=1, label=method, style=dashed];
m5_76 -> m5_72  [color=darkorchid, key=3, label="Local variable string parameterTypes", style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_88  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m5_77 -> m5_72  [color=darkorchid, key=3, label="Local variable string arguments", style=bold];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_88  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m5_86 -> m5_72  [color=darkorchid, key=3, label="Local variable HangFire.Common.Job job", style=bold];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_72  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_90  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m5_73 -> m5_93  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_96  [key=2, style=dotted];
m5_89 -> m5_92  [key=0, style=solid];
m5_89 -> m5_97  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_93 -> m5_70  [color=blue, key=0, style=bold];
m5_160 -> m5_161  [key=0, style=solid];
m5_67 -> m5_29  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_69  [key=2, style=dotted];
m5_63 -> m5_29  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=2, style=dotted];
m5_114 -> m5_29  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_116  [key=2, style=dotted];
m5_118 -> m5_29  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_120  [key=2, style=dotted];
m5_122 -> m5_29  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_120  [key=2, style=dotted];
m5_143 -> m5_29  [key=2, style=dotted];
m5_143 -> m5_32  [key=2, style=dotted];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> n3  [key=2, style=dotted];
m5_143 -> m5_146  [key=2, style=dotted];
m5_143 -> m5_65  [key=2, style=dotted];
m5_148 -> m5_29  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_150  [key=2, style=dotted];
m5_165 -> m5_29  [key=2, style=dotted];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_167  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_147 -> m5_148  [key=0, style=solid];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_163  [key=2, style=dotted];
m5_200 -> m5_201  [key=0, style=solid];
m5_200 -> m5_202  [key=2, style=dotted];
m5_200 -> m5_203  [key=2, style=dotted];
m5_200 -> m5_204  [key=2, style=dotted];
m5_200 -> m5_205  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_199 -> m5_200  [key=0, style=solid];
m5_68 -> m5_66  [color=blue, key=0, style=bold];
m5_64 -> m5_62  [color=blue, key=0, style=bold];
m5_115 -> m5_113  [color=blue, key=0, style=bold];
m5_119 -> m5_117  [color=blue, key=0, style=bold];
m5_123 -> m5_121  [color=blue, key=0, style=bold];
m5_144 -> m5_142  [color=blue, key=0, style=bold];
m5_149 -> m5_147  [color=blue, key=0, style=bold];
m5_164 -> m5_165  [key=0, style=solid];
m5_166 -> m5_164  [color=blue, key=0, style=bold];
m5_140 -> m5_138  [color=blue, key=0, style=bold];
m5_162 -> m5_160  [color=blue, key=0, style=bold];
m5_201 -> m5_199  [color=blue, key=0, style=bold];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_197  [key=2, style=dotted];
m5_195 -> m5_198  [key=2, style=dotted];
m5_196 -> m5_194  [color=blue, key=0, style=bold];
m5_40 -> m5_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_40 -> m5_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_40 -> m5_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_11  [key=2, style=dotted];
m5_49 -> m5_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_49 -> m5_52  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_32  [key=2, style=dotted];
m5_48 -> m5_59  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_60  [key=2, style=dotted];
m5_50 -> m5_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_60  [key=2, style=dotted];
m5_51 -> m5_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_61  [key=2, style=dotted];
m5_43 -> m5_48  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_43 -> m5_50  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_43 -> m5_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_58  [key=2, style=dotted];
m5_43 -> m5_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_43 -> m5_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_43 -> m5_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_59  [key=2, style=dotted];
m5_41 -> m5_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_41 -> m5_51  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_41 -> m5_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_41 -> m5_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_55  [key=2, style=dotted];
m5_41 -> m5_56  [key=2, style=dotted];
m5_41 -> m5_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_53 -> m5_54  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_42 -> m5_57  [key=2, style=dotted];
m5_42 -> m5_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_42 -> m5_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_42 -> m5_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m5_44 -> m5_59  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_59  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_59  [key=2, style=dotted];
m5_54 -> m5_40  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_29  [key=2, style=dotted];
m5_36 -> m5_38  [key=2, style=dotted];
m5_36 -> m5_39  [key=2, style=dotted];
m5_37 -> m5_35  [color=blue, key=0, style=bold];
m5_99 -> m5_100  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_29  [key=2, style=dotted];
m5_100 -> m5_33  [key=2, style=dotted];
m5_101 -> m5_99  [color=blue, key=0, style=bold];
m5_97 -> m5_0  [color=darkorchid, key=3, label="Property variable IRedisClient Redis", style=bold];
m5_124 -> m5_125  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_127  [key=2, style=dotted];
m5_125 -> m5_128  [key=2, style=dotted];
m5_126 -> m5_124  [color=blue, key=0, style=bold];
m5_206 -> m5_26  [color=green, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_25  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_71  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_107  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_125  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_130  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_152  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_169  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_172  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_175  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_206 -> m5_184  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_207 -> m5_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_207 -> m5_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_209 -> m5_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m5_208 -> m5_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m5_210 -> m5_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_210 -> m5_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_210 -> m5_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_211 -> m5_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_212 -> m5_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_212 -> m5_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_212 -> m5_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_213 -> m5_143  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m5_214 -> m5_148  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m5_215 -> m5_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_215 -> m5_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_216 -> m5_200  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_216 -> m5_195  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_217 -> m5_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_13 -> m6_14  [color=red, key=0, style=solid];
m6_13 -> m6_15  [color=red, key=2, style=dotted];
m6_14 -> m6_12  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_7  [color=red, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_3  [color=red, key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [color=red, key=0, style=solid];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_2 -> m6_10  [color=red, key=0, style=solid];
m6_2 -> m6_11  [color=red, key=2, style=dotted];
m6_4 -> m6_10  [key=0, style=solid];
m6_4 -> m6_11  [key=2, style=dotted];
m6_6 -> m6_10  [key=0, style=solid];
m6_6 -> m6_11  [key=2, style=dotted];
m6_10 -> m6_0  [color=blue, key=0, style=bold];
m6_16 -> m6_7  [color=red, key=1, label="HangFire.Redis.RedisProcessingJob", style=dashed];
m6_16 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisProcessingJob", style=dashed];
m6_16 -> m6_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisProcessingJob", style=dashed];
m6_16 -> m6_13  [color=red, key=1, label="HangFire.Redis.RedisProcessingJob", style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_35  [color=darkseagreen4, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_33 -> m7_36  [color=darkorchid, key=3, label="method methodReturn Hangfire.States.IState ChangeState", style=bold];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_40  [key=2, style=dotted];
m7_34 -> m7_37  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_41  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_43  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_42  [key=2, style=dotted];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=appliedState, style=dashed];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_33  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachine", style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_6 -> m7_8  [key=0, style=solid];
m7_6 -> m7_9  [key=2, style=dotted];
m7_8 -> m7_4  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [color=blue, key=0, style=bold];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [color=red, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_10 -> m7_15  [color=red, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_10 -> m7_17  [color=red, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_10 -> m7_22  [color=darkseagreen4, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_10 -> m7_23  [color=darkseagreen4, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_10 -> m7_14  [color=red, key=3, label="method methodReturn Hangfire.States.IState ChangeState", style=bold];
m7_11 -> m7_12  [color=red, key=0, style=solid];
m7_11 -> m7_26  [key=2, style=dotted];
m7_12 -> m7_13  [color=red, key=0, style=solid];
m7_12 -> m7_27  [color=red, key=2, style=dotted];
m7_12 -> m7_15  [color=red, key=1, label=jobData, style=dashed];
m7_12 -> m7_18  [color=red, key=1, label=jobData, style=dashed];
m7_12 -> m7_22  [color=red, key=1, label=jobData, style=dashed];
m7_12 -> m7_23  [color=red, key=1, label=jobData, style=dashed];
m7_15 -> m7_16  [color=red, key=0, style=solid];
m7_15 -> m7_17  [color=red, key=0, style=solid];
m7_15 -> m7_28  [color=red, key=2, style=dotted];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_17 -> m7_20  [color=red, key=1, label=appliedState, style=dashed];
m7_17 -> m7_21  [color=red, key=1, label=appliedState, style=dashed];
m7_17 -> m7_23  [color=red, key=1, label=appliedState, style=dashed];
m7_17 -> m7_33  [color=red, key=3, label="Local variable Hangfire.States.IState appliedState", style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_32  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_33  [key=2, style=dotted];
m7_23 -> m7_23  [color=darkseagreen4, key=1, label=appliedState, style=dashed];
m7_13 -> m7_14  [color=red, key=0, style=solid];
m7_13 -> m7_15  [color=red, key=0, style=solid];
m7_18 -> m7_19  [color=red, key=0, style=solid];
m7_18 -> m7_22  [color=red, key=0, style=solid];
m7_18 -> m7_29  [color=red, key=2, style=dotted];
m7_14 -> m7_25  [color=red, key=0, style=solid];
m7_16 -> m7_25  [color=red, key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_22  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_30  [key=2, style=dotted];
m7_21 -> m7_31  [key=2, style=dotted];
m7_21 -> m7_21  [color=darkseagreen4, key=1, label=appliedState, style=dashed];
m7_21 -> m7_23  [color=darkseagreen4, key=1, label=appliedState, style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_10  [color=blue, key=0, style=bold];
m7_27 -> m7_44  [key=0, style=solid];
m7_27 -> m7_46  [color=darkseagreen4, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_27 -> m7_51  [color=darkseagreen4, key=1, label="Hangfire.States.StateChangeContext", style=dashed];
m7_27 -> m7_10  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.StateChangeContext context", style=bold];
m7_27 -> m7_14  [color=red, key=3, label="method methodReturn Hangfire.Storage.JobData GetJobData", style=bold];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_53  [color=darkseagreen4, key=1, label=firstAttempt, style=dashed];
m7_44 -> m7_44  [color=darkorchid, key=3, label="Local variable bool firstAttempt", style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_56  [key=2, style=dotted];
m7_46 -> m7_49  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m7_46 -> m7_50  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_55  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_58  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_49  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=0, style=solid];
m7_49 -> m7_57  [key=2, style=dotted];
m7_50 -> m7_55  [key=0, style=solid];
m7_48 -> m7_55  [key=0, style=solid];
m7_52 -> m7_55  [key=0, style=solid];
m7_54 -> m7_45  [key=0, style=solid];
m7_55 -> m7_27  [color=blue, key=0, style=bold];
m7_59 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.States.BackgroundJobStateChanger", style=dashed];
m7_59 -> m7_23  [color=darkseagreen4, key=1, label="Hangfire.States.BackgroundJobStateChanger", style=dashed];
m7_59 -> m7_36  [color=darkseagreen4, key=1, label="Hangfire.States.BackgroundJobStateChanger", style=dashed];
m8_601 -> m8_602  [key=0, style=solid];
m8_602 -> m8_45  [key=2, style=dotted];
m8_602 -> m8_603  [key=0, style=solid];
m8_602 -> m8_604  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_603 -> m8_601  [color=blue, key=0, style=bold];
m8_789 -> m8_790  [key=0, style=solid];
m8_791 -> m8_792  [key=0, style=solid];
m8_791 -> m8_104  [key=2, style=dotted];
m8_791 -> m8_793  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_790 -> m8_791  [key=0, style=solid];
m8_790 -> m8_563  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_790 -> m8_794  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_792 -> m8_789  [color=blue, key=0, style=bold];
m8_457 -> m8_458  [key=0, style=solid];
m8_458 -> m8_45  [key=2, style=dotted];
m8_458 -> m8_459  [key=0, style=solid];
m8_458 -> m8_460  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_459 -> m8_457  [color=blue, key=0, style=bold];
m8_343 -> m8_344  [key=0, style=solid];
m8_344 -> m8_45  [key=2, style=dotted];
m8_344 -> m8_345  [key=0, style=solid];
m8_344 -> m8_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_345 -> m8_343  [color=blue, key=0, style=bold];
m8_718 -> m8_719  [key=0, style=solid];
m8_719 -> m8_45  [key=2, style=dotted];
m8_719 -> m8_720  [key=0, style=solid];
m8_719 -> m8_721  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_720 -> m8_718  [color=blue, key=0, style=bold];
m8_646 -> m8_647  [key=0, style=solid];
m8_648 -> m8_649  [key=0, style=solid];
m8_648 -> m8_104  [key=2, style=dotted];
m8_648 -> m8_650  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_647 -> m8_648  [key=0, style=solid];
m8_647 -> m8_647  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_647 -> m8_651  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_649 -> m8_646  [color=blue, key=0, style=bold];
m8_843 -> m8_844  [key=0, style=solid];
m8_845 -> m8_846  [key=0, style=solid];
m8_845 -> m8_104  [key=2, style=dotted];
m8_845 -> m8_847  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_844 -> m8_845  [key=0, style=solid];
m8_844 -> m8_844  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_844 -> m8_848  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_846 -> m8_843  [color=blue, key=0, style=bold];
m8_250 -> m8_251  [key=0, style=solid];
m8_251 -> m8_45  [key=2, style=dotted];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_252 -> m8_250  [color=blue, key=0, style=bold];
m8_322 -> m8_323  [key=0, style=solid];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_104  [key=2, style=dotted];
m8_324 -> m8_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_323 -> m8_327  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_323  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_325 -> m8_322  [color=blue, key=0, style=bold];
m8_283 -> m8_284  [key=0, style=solid];
m8_285 -> m8_286  [key=0, style=solid];
m8_285 -> m8_104  [key=2, style=dotted];
m8_285 -> m8_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_261  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_284 -> m8_288  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_286 -> m8_283  [color=blue, key=0, style=bold];
m8_836 -> m8_837  [key=0, style=solid];
m8_837 -> m8_45  [key=2, style=dotted];
m8_837 -> m8_838  [key=0, style=solid];
m8_837 -> m8_839  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_838 -> m8_836  [color=blue, key=0, style=bold];
m8_188 -> m8_189  [color=green, key=0, style=solid];
m8_189 -> m8_190  [color=green, key=0, style=solid];
m8_189 -> m8_45  [color=green, key=2, style=dotted];
m8_189 -> m8_191  [color=green, key=1, label="lambda expression", style=dashed];
m8_190 -> m8_188  [color=blue, key=0, style=bold];
m8_862 -> m8_863  [key=0, style=solid];
m8_863 -> m8_45  [key=2, style=dotted];
m8_863 -> m8_864  [key=0, style=solid];
m8_863 -> m8_865  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_864 -> m8_862  [color=blue, key=0, style=bold];
m8_698 -> m8_699  [key=0, style=solid];
m8_700 -> m8_701  [key=0, style=solid];
m8_700 -> m8_104  [key=2, style=dotted];
m8_700 -> m8_702  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_699 -> m8_700  [key=0, style=solid];
m8_699 -> m8_699  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_699 -> m8_703  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_701 -> m8_698  [color=blue, key=0, style=bold];
m8_260 -> m8_261  [key=0, style=solid];
m8_262 -> m8_263  [key=0, style=solid];
m8_262 -> m8_104  [key=2, style=dotted];
m8_262 -> m8_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_261 -> m8_262  [key=0, style=solid];
m8_261 -> m8_261  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_261 -> m8_265  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_263 -> m8_260  [color=blue, key=0, style=bold];
m8_332 -> m8_333  [key=0, style=solid];
m8_333 -> m8_45  [key=2, style=dotted];
m8_333 -> m8_334  [key=0, style=solid];
m8_333 -> m8_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_334 -> m8_332  [color=blue, key=0, style=bold];
m8_409 -> m8_410  [key=0, style=solid];
m8_410 -> m8_45  [key=2, style=dotted];
m8_410 -> m8_411  [key=0, style=solid];
m8_410 -> m8_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_411 -> m8_409  [color=blue, key=0, style=bold];
m8_751 -> m8_752  [key=0, style=solid];
m8_753 -> m8_754  [key=0, style=solid];
m8_753 -> m8_104  [key=2, style=dotted];
m8_753 -> m8_755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_752 -> m8_753  [key=0, style=solid];
m8_752 -> m8_752  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_752 -> m8_756  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_754 -> m8_751  [color=blue, key=0, style=bold];
m8_218 -> m8_219  [key=0, style=solid];
m8_220 -> m8_221  [key=0, style=solid];
m8_220 -> m8_104  [key=2, style=dotted];
m8_220 -> m8_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_206  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_219 -> m8_224  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_221 -> m8_218  [color=blue, key=0, style=bold];
m8_637 -> m8_638  [key=0, style=solid];
m8_639 -> m8_640  [key=0, style=solid];
m8_639 -> m8_104  [key=2, style=dotted];
m8_639 -> m8_641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_638 -> m8_639  [key=0, style=solid];
m8_638 -> m8_638  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_638 -> m8_642  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_640 -> m8_637  [color=blue, key=0, style=bold];
m8_826 -> m8_827  [key=0, style=solid];
m8_827 -> m8_45  [key=2, style=dotted];
m8_827 -> m8_828  [key=0, style=solid];
m8_827 -> m8_829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_828 -> m8_826  [color=blue, key=0, style=bold];
m8_6 -> m8_0  [color=blue, key=0, style=bold];
m8_381 -> m8_382  [key=0, style=solid];
m8_382 -> m8_45  [key=2, style=dotted];
m8_382 -> m8_383  [key=0, style=solid];
m8_382 -> m8_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_383 -> m8_381  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_7  [key=2, style=dotted];
m8_1 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_8  [key=2, style=dotted];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=provider, style=dashed];
m8_2 -> m8_7  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_9  [key=2, style=dotted];
m8_3 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_10  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_11  [key=2, style=dotted];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_305 -> m8_306  [key=0, style=solid];
m8_306 -> m8_45  [key=2, style=dotted];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_307 -> m8_305  [color=blue, key=0, style=bold];
m8_229 -> m8_230  [key=0, style=solid];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_104  [key=2, style=dotted];
m8_231 -> m8_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_230 -> m8_231  [key=0, style=solid];
m8_230 -> m8_167  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_230 -> m8_234  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_232 -> m8_229  [color=blue, key=0, style=bold];
m8_869 -> m8_870  [key=0, style=solid];
m8_871 -> m8_872  [key=0, style=solid];
m8_871 -> m8_104  [key=2, style=dotted];
m8_871 -> m8_873  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_870 -> m8_871  [key=0, style=solid];
m8_870 -> m8_870  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_870 -> m8_874  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_872 -> m8_869  [color=blue, key=0, style=bold];
m8_545 -> m8_546  [key=0, style=solid];
m8_546 -> m8_45  [key=2, style=dotted];
m8_546 -> m8_547  [key=0, style=solid];
m8_546 -> m8_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_547 -> m8_545  [color=blue, key=0, style=bold];
m8_490 -> m8_491  [key=0, style=solid];
m8_491 -> m8_45  [key=2, style=dotted];
m8_491 -> m8_492  [key=0, style=solid];
m8_491 -> m8_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_492 -> m8_490  [color=blue, key=0, style=bold];
m8_198 -> m8_199  [color=green, key=0, style=solid];
m8_199 -> m8_200  [color=green, key=0, style=solid];
m8_199 -> m8_45  [color=green, key=2, style=dotted];
m8_199 -> m8_201  [color=green, key=1, label="lambda expression", style=dashed];
m8_200 -> m8_198  [color=blue, key=0, style=bold];
m8_555 -> m8_556  [key=0, style=solid];
m8_556 -> m8_45  [key=2, style=dotted];
m8_556 -> m8_557  [key=0, style=solid];
m8_556 -> m8_558  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_557 -> m8_555  [color=blue, key=0, style=bold];
m8_419 -> m8_420  [key=0, style=solid];
m8_421 -> m8_422  [key=0, style=solid];
m8_421 -> m8_104  [key=2, style=dotted];
m8_421 -> m8_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_420  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_420 -> m8_424  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_422 -> m8_419  [color=blue, key=0, style=bold];
m8_15 -> m8_16  [color=green, key=0, style=solid];
m8_16 -> m8_17  [color=green, key=0, style=solid];
m8_16 -> m8_19  [color=green, key=2, style=dotted];
m8_16 -> m8_21  [color=green, key=1, label="lambda expression", style=dashed];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_20  [key=2, style=dotted];
m8_18 -> m8_15  [color=blue, key=0, style=bold];
m8_562 -> m8_563  [key=0, style=solid];
m8_564 -> m8_565  [key=0, style=solid];
m8_564 -> m8_104  [key=2, style=dotted];
m8_564 -> m8_566  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_563 -> m8_564  [key=0, style=solid];
m8_563 -> m8_563  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_563 -> m8_567  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_565 -> m8_562  [color=blue, key=0, style=bold];
m8_761 -> m8_762  [key=0, style=solid];
m8_762 -> m8_45  [key=2, style=dotted];
m8_762 -> m8_763  [key=0, style=solid];
m8_762 -> m8_764  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_763 -> m8_761  [color=blue, key=0, style=bold];
m8_691 -> m8_692  [key=0, style=solid];
m8_692 -> m8_45  [key=2, style=dotted];
m8_692 -> m8_693  [key=0, style=solid];
m8_692 -> m8_694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_693 -> m8_691  [color=blue, key=0, style=bold];
m8_772 -> m8_773  [key=0, style=solid];
m8_773 -> m8_45  [key=2, style=dotted];
m8_773 -> m8_774  [key=0, style=solid];
m8_773 -> m8_775  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_774 -> m8_772  [color=blue, key=0, style=bold];
m8_391 -> m8_392  [key=0, style=solid];
m8_392 -> m8_393  [key=0, style=solid];
m8_392 -> m8_104  [key=2, style=dotted];
m8_392 -> m8_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_393 -> m8_391  [color=blue, key=0, style=bold];
m8_185 -> m8_186  [key=0, style=solid];
m8_21 -> m8_22  [color=green, key=0, style=solid];
m8_22 -> m8_23  [color=green, key=0, style=solid];
m8_22 -> m8_24  [color=green, key=2, style=dotted];
m8_23 -> m8_21  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_32  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_46 -> m8_50  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_46 -> m8_54  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_46 -> m8_47  [key=0, style=solid];
m8_50 -> m8_51  [color=green, key=0, style=solid];
m8_50 -> m8_19  [color=green, key=2, style=dotted];
m8_50 -> m8_53  [color=green, key=1, label="lambda expression", style=dashed];
m8_47 -> m8_50  [color=green, key=1, label=token, style=dashed];
m8_47 -> m8_54  [color=green, key=1, label=token, style=dashed];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_35  [key=2, style=dotted];
m8_49 -> m8_50  [color=green, key=0, style=solid];
m8_49 -> m8_52  [key=2, style=dotted];
m8_51 -> m8_46  [color=blue, key=0, style=bold];
m8_53 -> m8_54  [color=green, key=0, style=solid];
m8_54 -> m8_55  [color=green, key=0, style=solid];
m8_54 -> m8_36  [color=green, key=2, style=dotted];
m8_55 -> m8_53  [color=blue, key=0, style=bold];
m8_59 -> m8_60  [color=green, key=0, style=solid];
m8_60 -> m8_61  [color=green, key=0, style=solid];
m8_60 -> m8_63  [color=green, key=2, style=dotted];
m8_61 -> m8_62  [color=green, key=0, style=solid];
m8_61 -> m8_64  [color=green, key=2, style=dotted];
m8_62 -> m8_59  [color=blue, key=0, style=bold];
m8_68 -> m8_69  [color=green, key=0, style=solid];
m8_69 -> m8_70  [color=green, key=0, style=solid];
m8_69 -> m8_72  [color=green, key=2, style=dotted];
m8_69 -> m8_73  [color=green, key=2, style=dotted];
m8_70 -> m8_71  [color=green, key=0, style=solid];
m8_70 -> m8_64  [color=green, key=2, style=dotted];
m8_71 -> m8_68  [color=blue, key=0, style=bold];
m8_77 -> m8_78  [color=green, key=0, style=solid];
m8_77 -> m8_82  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_78 -> m8_79  [color=green, key=0, style=solid];
m8_78 -> m8_19  [color=green, key=2, style=dotted];
m8_78 -> m8_81  [color=green, key=1, label="lambda expression", style=dashed];
m8_79 -> m8_80  [color=green, key=0, style=solid];
m8_79 -> m8_20  [color=green, key=2, style=dotted];
m8_81 -> m8_82  [color=green, key=0, style=solid];
m8_82 -> m8_83  [color=green, key=0, style=solid];
m8_82 -> n3  [color=green, key=2, style=dotted];
m8_82 -> m8_85  [color=green, key=2, style=dotted];
m8_83 -> m8_81  [color=blue, key=0, style=bold];
m8_80 -> m8_77  [color=blue, key=0, style=bold];
m8_191 -> m8_192  [color=green, key=0, style=solid];
m8_191 -> m8_195  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_192 -> m8_193  [color=green, key=0, style=solid];
m8_192 -> m8_19  [color=green, key=2, style=dotted];
m8_192 -> m8_194  [color=green, key=1, label="lambda expression", style=dashed];
m8_193 -> m8_191  [color=blue, key=0, style=bold];
m8_194 -> m8_195  [color=green, key=0, style=solid];
m8_195 -> m8_196  [color=green, key=0, style=solid];
m8_195 -> m8_197  [color=green, key=2, style=dotted];
m8_196 -> m8_194  [color=blue, key=0, style=bold];
m8_201 -> m8_202  [key=0, style=solid];
m8_90 -> m8_19  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_152 -> m8_19  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_243 -> m8_19  [key=2, style=dotted];
m8_243 -> m8_244  [key=0, style=solid];
m8_243 -> m8_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_254 -> m8_19  [key=2, style=dotted];
m8_254 -> m8_255  [key=0, style=solid];
m8_254 -> m8_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_298 -> m8_19  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_309 -> m8_19  [key=2, style=dotted];
m8_309 -> m8_310  [key=0, style=solid];
m8_309 -> m8_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_327 -> m8_19  [key=2, style=dotted];
m8_327 -> m8_328  [key=0, style=solid];
m8_327 -> m8_131  [key=2, style=dotted];
m8_336 -> m8_19  [key=2, style=dotted];
m8_336 -> m8_337  [key=0, style=solid];
m8_336 -> m8_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_347 -> m8_19  [key=2, style=dotted];
m8_347 -> m8_348  [key=0, style=solid];
m8_347 -> m8_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_373 -> m8_19  [key=2, style=dotted];
m8_373 -> m8_374  [key=0, style=solid];
m8_373 -> m8_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_385 -> m8_19  [key=2, style=dotted];
m8_385 -> m8_386  [key=0, style=solid];
m8_385 -> m8_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_413 -> m8_19  [key=2, style=dotted];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_434 -> m8_19  [key=2, style=dotted];
m8_434 -> m8_435  [key=0, style=solid];
m8_434 -> m8_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_461 -> m8_19  [key=2, style=dotted];
m8_461 -> m8_462  [key=0, style=solid];
m8_461 -> m8_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_484 -> m8_19  [key=2, style=dotted];
m8_484 -> m8_485  [key=0, style=solid];
m8_484 -> m8_486  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_513 -> m8_19  [key=2, style=dotted];
m8_513 -> m8_514  [key=0, style=solid];
m8_513 -> m8_516  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_524 -> m8_19  [key=2, style=dotted];
m8_524 -> m8_525  [key=0, style=solid];
m8_524 -> m8_527  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_549 -> m8_19  [key=2, style=dotted];
m8_549 -> m8_550  [key=0, style=solid];
m8_549 -> m8_551  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_578 -> m8_19  [key=2, style=dotted];
m8_578 -> m8_579  [key=0, style=solid];
m8_578 -> m8_580  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_605 -> m8_19  [key=2, style=dotted];
m8_605 -> m8_606  [key=0, style=solid];
m8_605 -> m8_607  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_624 -> m8_19  [key=2, style=dotted];
m8_624 -> m8_625  [key=0, style=solid];
m8_624 -> m8_626  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_659 -> m8_19  [key=2, style=dotted];
m8_659 -> m8_660  [key=0, style=solid];
m8_659 -> m8_661  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_685 -> m8_19  [key=2, style=dotted];
m8_685 -> m8_686  [key=0, style=solid];
m8_685 -> m8_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_712 -> m8_19  [key=2, style=dotted];
m8_712 -> m8_713  [key=0, style=solid];
m8_712 -> m8_714  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_738 -> m8_19  [key=2, style=dotted];
m8_738 -> m8_739  [key=0, style=solid];
m8_738 -> m8_740  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_765 -> m8_19  [key=2, style=dotted];
m8_765 -> m8_766  [key=0, style=solid];
m8_765 -> m8_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_776 -> m8_19  [key=2, style=dotted];
m8_776 -> m8_777  [key=0, style=solid];
m8_776 -> m8_779  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_802 -> m8_19  [key=2, style=dotted];
m8_802 -> m8_803  [key=0, style=solid];
m8_802 -> m8_805  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_830 -> m8_19  [key=2, style=dotted];
m8_830 -> m8_831  [key=0, style=solid];
m8_830 -> m8_832  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_856 -> m8_19  [key=2, style=dotted];
m8_856 -> m8_857  [key=0, style=solid];
m8_856 -> m8_858  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_37  [key=2, style=dotted];
m8_33 -> m8_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_34 -> m8_29  [color=blue, key=0, style=bold];
m8_30 -> m8_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_35  [key=2, style=dotted];
m8_30 -> m8_32  [color=darkseagreen4, key=1, label=token, style=dashed];
m8_30 -> m8_39  [color=darkseagreen4, key=1, label=token, style=dashed];
m8_32 -> m8_36  [key=2, style=dotted];
m8_32 -> m8_33  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_7  [key=2, style=dotted];
m8_108 -> m8_64  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_174 -> m8_64  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_175 -> m8_64  [key=2, style=dotted];
m8_175 -> m8_176  [key=0, style=solid];
m8_213 -> m8_64  [key=2, style=dotted];
m8_213 -> m8_214  [key=0, style=solid];
m8_226 -> m8_64  [key=2, style=dotted];
m8_226 -> m8_227  [key=0, style=solid];
m8_236 -> m8_64  [key=2, style=dotted];
m8_236 -> m8_237  [key=0, style=solid];
m8_400 -> m8_64  [key=2, style=dotted];
m8_400 -> m8_401  [key=0, style=solid];
m8_495 -> m8_64  [key=2, style=dotted];
m8_495 -> m8_496  [key=0, style=solid];
m8_569 -> m8_64  [key=2, style=dotted];
m8_569 -> m8_570  [key=0, style=solid];
m8_107 -> n3  [key=2, style=dotted];
m8_107 -> m8_85  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_96  [key=2, style=dotted];
m8_107 -> m8_128  [key=2, style=dotted];
m8_107 -> m8_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_107 -> m8_109  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_107 -> m8_111  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_107 -> m8_123  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_210 -> n3  [key=2, style=dotted];
m8_210 -> m8_211  [key=0, style=solid];
m8_223 -> n3  [key=2, style=dotted];
m8_223 -> m8_224  [key=0, style=solid];
m8_517 -> n3  [key=2, style=dotted];
m8_517 -> m8_518  [key=0, style=solid];
m8_517 -> m8_519  [key=2, style=dotted];
m8_534 -> n3  [key=2, style=dotted];
m8_534 -> m8_535  [key=0, style=solid];
m8_534 -> m8_519  [key=2, style=dotted];
m8_94 -> m8_85  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_96  [key=2, style=dotted];
m8_94 -> m8_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_91 -> m8_20  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_112 -> m8_20  [key=2, style=dotted];
m8_112 -> m8_113  [key=0, style=solid];
m8_111 -> m8_20  [key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_132  [key=2, style=dotted];
m8_113 -> m8_20  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_20  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_118 -> m8_20  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_119 -> m8_20  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_120 -> m8_20  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_124 -> m8_20  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_125 -> m8_20  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_176 -> m8_20  [key=2, style=dotted];
m8_176 -> m8_177  [key=0, style=solid];
m8_177 -> m8_20  [key=2, style=dotted];
m8_177 -> m8_178  [key=0, style=solid];
m8_214 -> m8_20  [key=2, style=dotted];
m8_214 -> m8_215  [key=0, style=solid];
m8_215 -> m8_20  [key=2, style=dotted];
m8_215 -> m8_216  [key=0, style=solid];
m8_216 -> m8_20  [key=2, style=dotted];
m8_216 -> m8_217  [key=0, style=solid];
m8_227 -> m8_20  [key=2, style=dotted];
m8_227 -> m8_228  [key=0, style=solid];
m8_244 -> m8_20  [key=2, style=dotted];
m8_244 -> m8_245  [key=0, style=solid];
m8_255 -> m8_20  [key=2, style=dotted];
m8_255 -> m8_256  [key=0, style=solid];
m8_269 -> m8_20  [key=2, style=dotted];
m8_269 -> m8_270  [key=0, style=solid];
m8_281 -> m8_20  [key=2, style=dotted];
m8_281 -> m8_282  [key=0, style=solid];
m8_292 -> m8_20  [key=2, style=dotted];
m8_292 -> m8_293  [key=0, style=solid];
m8_299 -> m8_20  [key=2, style=dotted];
m8_299 -> m8_300  [key=0, style=solid];
m8_310 -> m8_20  [key=2, style=dotted];
m8_310 -> m8_311  [key=0, style=solid];
m8_329 -> m8_20  [key=2, style=dotted];
m8_329 -> m8_330  [key=0, style=solid];
m8_337 -> m8_20  [key=2, style=dotted];
m8_337 -> m8_338  [key=0, style=solid];
m8_366 -> m8_20  [key=2, style=dotted];
m8_366 -> m8_367  [key=0, style=solid];
m8_374 -> m8_20  [key=2, style=dotted];
m8_374 -> m8_375  [key=0, style=solid];
m8_386 -> m8_20  [key=2, style=dotted];
m8_386 -> m8_387  [key=0, style=solid];
m8_398 -> m8_20  [key=2, style=dotted];
m8_398 -> m8_399  [key=0, style=solid];
m8_404 -> m8_20  [key=2, style=dotted];
m8_404 -> m8_405  [key=0, style=solid];
m8_449 -> m8_20  [key=2, style=dotted];
m8_449 -> m8_450  [key=0, style=solid];
m8_476 -> m8_20  [key=2, style=dotted];
m8_476 -> m8_477  [key=0, style=solid];
m8_496 -> m8_20  [key=2, style=dotted];
m8_496 -> m8_497  [key=0, style=solid];
m8_505 -> m8_20  [key=2, style=dotted];
m8_505 -> m8_506  [key=0, style=solid];
m8_514 -> m8_20  [key=2, style=dotted];
m8_514 -> m8_515  [key=0, style=solid];
m8_525 -> m8_20  [key=2, style=dotted];
m8_525 -> m8_526  [key=0, style=solid];
m8_536 -> m8_20  [key=2, style=dotted];
m8_536 -> m8_537  [key=0, style=solid];
m8_537 -> m8_20  [key=2, style=dotted];
m8_537 -> m8_538  [key=0, style=solid];
m8_570 -> m8_20  [key=2, style=dotted];
m8_570 -> m8_571  [key=0, style=solid];
m8_571 -> m8_20  [key=2, style=dotted];
m8_571 -> m8_572  [key=0, style=solid];
m8_572 -> m8_20  [key=2, style=dotted];
m8_572 -> m8_573  [key=0, style=solid];
m8_589 -> m8_20  [key=2, style=dotted];
m8_589 -> m8_590  [key=0, style=solid];
m8_598 -> m8_20  [key=2, style=dotted];
m8_598 -> m8_599  [key=0, style=solid];
m8_618 -> m8_20  [key=2, style=dotted];
m8_618 -> m8_619  [key=0, style=solid];
m8_635 -> m8_20  [key=2, style=dotted];
m8_635 -> m8_636  [key=0, style=solid];
m8_644 -> m8_20  [key=2, style=dotted];
m8_644 -> m8_645  [key=0, style=solid];
m8_653 -> m8_20  [key=2, style=dotted];
m8_653 -> m8_654  [key=0, style=solid];
m8_670 -> m8_20  [key=2, style=dotted];
m8_670 -> m8_671  [key=0, style=solid];
m8_679 -> m8_20  [key=2, style=dotted];
m8_679 -> m8_680  [key=0, style=solid];
m8_723 -> m8_20  [key=2, style=dotted];
m8_723 -> m8_724  [key=0, style=solid];
m8_732 -> m8_20  [key=2, style=dotted];
m8_732 -> m8_733  [key=0, style=solid];
m8_766 -> m8_20  [key=2, style=dotted];
m8_766 -> m8_767  [key=0, style=solid];
m8_777 -> m8_20  [key=2, style=dotted];
m8_777 -> m8_778  [key=0, style=solid];
m8_796 -> m8_20  [key=2, style=dotted];
m8_796 -> m8_797  [key=0, style=solid];
m8_803 -> m8_20  [key=2, style=dotted];
m8_803 -> m8_804  [key=0, style=solid];
m8_824 -> m8_20  [key=2, style=dotted];
m8_824 -> m8_825  [key=0, style=solid];
m8_850 -> m8_20  [key=2, style=dotted];
m8_850 -> m8_851  [key=0, style=solid];
m8_202 -> m8_197  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_212 -> m8_197  [key=2, style=dotted];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_214  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_212 -> m8_215  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_212 -> m8_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_212 -> m8_184  [key=2, style=dotted];
m8_225 -> m8_197  [key=2, style=dotted];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_227  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_225 -> m8_184  [key=2, style=dotted];
m8_204 -> m8_201  [color=blue, key=0, style=bold];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_93 -> m8_94  [key=0, style=solid];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_155  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_153 -> m8_151  [color=blue, key=0, style=bold];
m8_154 -> m8_155  [key=0, style=solid];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_247  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_246 -> m8_247  [key=0, style=solid];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_258  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_257 -> m8_258  [key=0, style=solid];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_302  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_301 -> m8_302  [key=0, style=solid];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_313  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_312 -> m8_313  [key=0, style=solid];
m8_326 -> m8_327  [key=0, style=solid];
m8_326 -> m8_328  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_132  [key=2, style=dotted];
m8_328 -> m8_331  [key=2, style=dotted];
m8_335 -> m8_336  [key=0, style=solid];
m8_335 -> m8_340  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_339 -> m8_340  [key=0, style=solid];
m8_346 -> m8_347  [key=0, style=solid];
m8_346 -> m8_350  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_348 -> m8_346  [color=blue, key=0, style=bold];
m8_349 -> m8_350  [key=0, style=solid];
m8_372 -> m8_373  [key=0, style=solid];
m8_372 -> m8_377  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_376 -> m8_377  [key=0, style=solid];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_389  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_388 -> m8_389  [key=0, style=solid];
m8_412 -> m8_413  [key=0, style=solid];
m8_412 -> m8_416  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_414 -> m8_412  [color=blue, key=0, style=bold];
m8_415 -> m8_416  [key=0, style=solid];
m8_433 -> m8_434  [key=0, style=solid];
m8_433 -> m8_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_435 -> m8_433  [color=blue, key=0, style=bold];
m8_436 -> m8_437  [key=0, style=solid];
m8_460 -> m8_461  [key=0, style=solid];
m8_460 -> m8_464  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_462 -> m8_460  [color=blue, key=0, style=bold];
m8_463 -> m8_464  [key=0, style=solid];
m8_483 -> m8_484  [key=0, style=solid];
m8_483 -> m8_487  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_485 -> m8_483  [color=blue, key=0, style=bold];
m8_486 -> m8_487  [key=0, style=solid];
m8_512 -> m8_513  [key=0, style=solid];
m8_512 -> m8_517  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_516 -> m8_517  [key=0, style=solid];
m8_523 -> m8_524  [key=0, style=solid];
m8_523 -> m8_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_527 -> m8_528  [key=0, style=solid];
m8_548 -> m8_549  [key=0, style=solid];
m8_548 -> m8_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_550 -> m8_548  [color=blue, key=0, style=bold];
m8_551 -> m8_552  [key=0, style=solid];
m8_577 -> m8_578  [key=0, style=solid];
m8_577 -> m8_581  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_579 -> m8_577  [color=blue, key=0, style=bold];
m8_580 -> m8_581  [key=0, style=solid];
m8_604 -> m8_605  [key=0, style=solid];
m8_604 -> m8_608  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_606 -> m8_604  [color=blue, key=0, style=bold];
m8_607 -> m8_608  [key=0, style=solid];
m8_623 -> m8_624  [key=0, style=solid];
m8_623 -> m8_627  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_625 -> m8_623  [color=blue, key=0, style=bold];
m8_626 -> m8_627  [key=0, style=solid];
m8_658 -> m8_659  [key=0, style=solid];
m8_658 -> m8_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_660 -> m8_658  [color=blue, key=0, style=bold];
m8_661 -> m8_662  [key=0, style=solid];
m8_684 -> m8_685  [key=0, style=solid];
m8_684 -> m8_688  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_686 -> m8_684  [color=blue, key=0, style=bold];
m8_687 -> m8_688  [key=0, style=solid];
m8_711 -> m8_712  [key=0, style=solid];
m8_711 -> m8_715  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_713 -> m8_711  [color=blue, key=0, style=bold];
m8_714 -> m8_715  [key=0, style=solid];
m8_737 -> m8_738  [key=0, style=solid];
m8_737 -> m8_741  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_739 -> m8_737  [color=blue, key=0, style=bold];
m8_740 -> m8_741  [key=0, style=solid];
m8_764 -> m8_765  [key=0, style=solid];
m8_764 -> m8_769  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_768 -> m8_769  [key=0, style=solid];
m8_775 -> m8_776  [key=0, style=solid];
m8_775 -> m8_780  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_779 -> m8_780  [key=0, style=solid];
m8_801 -> m8_802  [key=0, style=solid];
m8_801 -> m8_806  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_805 -> m8_806  [key=0, style=solid];
m8_829 -> m8_830  [key=0, style=solid];
m8_829 -> m8_833  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_831 -> m8_829  [color=blue, key=0, style=bold];
m8_832 -> m8_833  [key=0, style=solid];
m8_855 -> m8_856  [key=0, style=solid];
m8_855 -> m8_859  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_857 -> m8_855  [color=blue, key=0, style=bold];
m8_858 -> m8_859  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_31 -> m8_33  [color=darkseagreen4, key=1, label=queues, style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_39  [color=darkseagreen4, key=1, label=queues, style=dashed];
m8_38 -> m8_39  [key=0, style=solid];
m8_105 -> m8_107  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_110  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_105 -> m8_123  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_161 -> m8_162  [key=0, style=solid];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_172  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_170 -> m8_173  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_212  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_209 -> m8_211  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_225  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_222 -> m8_224  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_235  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_264 -> m8_265  [key=0, style=solid];
m8_264 -> m8_267  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_264 -> m8_268  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_275 -> m8_276  [key=0, style=solid];
m8_275 -> m8_278  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_275 -> m8_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_275 -> m8_280  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_290  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_287 -> m8_291  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_355 -> m8_356  [key=0, style=solid];
m8_363 -> m8_364  [key=0, style=solid];
m8_363 -> m8_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_394 -> m8_395  [key=0, style=solid];
m8_394 -> m8_396  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_394 -> m8_397  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_394 -> m8_402  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_394 -> m8_403  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_423 -> m8_424  [key=0, style=solid];
m8_423 -> m8_425  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_423 -> m8_426  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_444 -> m8_445  [key=0, style=solid];
m8_444 -> m8_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_444 -> m8_447  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_472 -> m8_473  [key=0, style=solid];
m8_472 -> m8_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_472 -> m8_475  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_493 -> m8_494  [key=0, style=solid];
m8_502 -> m8_503  [key=0, style=solid];
m8_502 -> m8_504  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_533 -> m8_534  [key=0, style=solid];
m8_533 -> m8_535  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m8_558 -> m8_559  [key=0, style=solid];
m8_566 -> m8_567  [key=0, style=solid];
m8_566 -> m8_568  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_587 -> m8_588  [key=0, style=solid];
m8_595 -> m8_596  [key=0, style=solid];
m8_595 -> m8_597  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_615 -> m8_616  [key=0, style=solid];
m8_615 -> m8_617  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_633 -> m8_634  [key=0, style=solid];
m8_641 -> m8_642  [key=0, style=solid];
m8_641 -> m8_643  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_650 -> m8_651  [key=0, style=solid];
m8_650 -> m8_652  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_668 -> m8_669  [key=0, style=solid];
m8_676 -> m8_677  [key=0, style=solid];
m8_676 -> m8_678  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_694 -> m8_695  [key=0, style=solid];
m8_702 -> m8_703  [key=0, style=solid];
m8_702 -> m8_704  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_721 -> m8_722  [key=0, style=solid];
m8_729 -> m8_730  [key=0, style=solid];
m8_729 -> m8_731  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_747 -> m8_748  [key=0, style=solid];
m8_755 -> m8_756  [key=0, style=solid];
m8_755 -> m8_757  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_785 -> m8_786  [key=0, style=solid];
m8_793 -> m8_794  [key=0, style=solid];
m8_793 -> m8_795  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_812 -> m8_813  [key=0, style=solid];
m8_821 -> m8_822  [key=0, style=solid];
m8_821 -> m8_823  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_839 -> m8_840  [key=0, style=solid];
m8_847 -> m8_848  [key=0, style=solid];
m8_847 -> m8_849  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_865 -> m8_866  [key=0, style=solid];
m8_873 -> m8_874  [key=0, style=solid];
m8_873 -> m8_875  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_897 -> m8_898  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_41  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_129  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_175  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_173 -> m8_176  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_173 -> m8_177  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_173 -> m8_184  [key=2, style=dotted];
m8_173 -> m8_157  [key=2, style=dotted];
m8_173 -> m8_178  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_173 -> m8_179  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_173 -> m8_180  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_184  [key=2, style=dotted];
m8_235 -> m8_157  [key=2, style=dotted];
m8_237 -> m8_233  [color=blue, key=0, style=bold];
m8_397 -> m8_400  [color=darkseagreen4, key=1, label=server, style=dashed];
m8_397 -> m8_398  [key=0, style=solid];
m8_397 -> m8_131  [key=2, style=dotted];
m8_397 -> m8_130  [key=2, style=dotted];
m8_397 -> m8_399  [color=darkseagreen4, key=1, label=server, style=dashed];
m8_399 -> m8_400  [key=0, style=solid];
m8_399 -> m8_407  [key=2, style=dotted];
m8_399 -> m8_137  [key=2, style=dotted];
m8_401 -> m8_402  [key=0, style=solid];
m8_401 -> m8_379  [key=2, style=dotted];
m8_494 -> m8_495  [key=0, style=solid];
m8_494 -> m8_496  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_494 -> m8_489  [key=2, style=dotted];
m8_568 -> m8_569  [key=0, style=solid];
m8_568 -> m8_570  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_568 -> m8_571  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_568 -> m8_572  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_568 -> m8_554  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_112  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m8_106 -> m8_127  [key=2, style=dotted];
m8_106 -> m8_121  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m8_106 -> m8_122  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m8_139 -> m8_140  [key=0, style=solid];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_125  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m8_123 -> m8_130  [key=2, style=dotted];
m8_123 -> m8_138  [key=2, style=dotted];
m8_123 -> m8_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_123 -> m8_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_211 -> m8_212  [key=0, style=solid];
m8_211 -> m8_131  [key=2, style=dotted];
m8_211 -> m8_183  [key=2, style=dotted];
m8_211 -> m8_130  [key=2, style=dotted];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_131  [key=2, style=dotted];
m8_224 -> m8_183  [key=2, style=dotted];
m8_224 -> m8_130  [key=2, style=dotted];
m8_518 -> m8_516  [color=blue, key=0, style=bold];
m8_535 -> m8_536  [key=0, style=solid];
m8_535 -> m8_537  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_535 -> m8_130  [key=2, style=dotted];
m8_535 -> m8_138  [key=2, style=dotted];
m8_535 -> m8_539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_535 -> m8_542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_95 -> m8_93  [color=blue, key=0, style=bold];
m8_97 -> m8_98  [key=0, style=solid];
m8_92 -> m8_89  [color=blue, key=0, style=bold];
m8_110 -> m8_112  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_113  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_110 -> m8_114  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_110 -> m8_131  [key=2, style=dotted];
m8_110 -> m8_130  [key=2, style=dotted];
m8_110 -> m8_115  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_110 -> m8_116  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_110 -> m8_121  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_110 -> m8_122  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_133  [key=2, style=dotted];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_119  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_117 -> m8_120  [color=darkseagreen4, key=1, label=job, style=dashed];
m8_117 -> m8_134  [key=2, style=dotted];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_135  [key=2, style=dotted];
m8_121 -> m8_136  [key=2, style=dotted];
m8_121 -> m8_137  [key=2, style=dotted];
m8_126 -> m8_105  [color=blue, key=0, style=bold];
m8_178 -> m8_179  [key=0, style=solid];
m8_178 -> m8_165  [key=2, style=dotted];
m8_217 -> m8_209  [color=blue, key=0, style=bold];
m8_228 -> m8_222  [color=blue, key=0, style=bold];
m8_245 -> m8_242  [color=blue, key=0, style=bold];
m8_256 -> m8_253  [color=blue, key=0, style=bold];
m8_268 -> m8_269  [key=0, style=solid];
m8_268 -> m8_131  [key=2, style=dotted];
m8_268 -> m8_130  [key=2, style=dotted];
m8_270 -> m8_264  [color=blue, key=0, style=bold];
m8_280 -> m8_281  [key=0, style=solid];
m8_280 -> m8_131  [key=2, style=dotted];
m8_280 -> m8_130  [key=2, style=dotted];
m8_282 -> m8_275  [color=blue, key=0, style=bold];
m8_291 -> m8_292  [key=0, style=solid];
m8_291 -> m8_131  [key=2, style=dotted];
m8_291 -> m8_130  [key=2, style=dotted];
m8_293 -> m8_287  [color=blue, key=0, style=bold];
m8_300 -> m8_297  [color=blue, key=0, style=bold];
m8_311 -> m8_308  [color=blue, key=0, style=bold];
m8_330 -> m8_326  [color=blue, key=0, style=bold];
m8_338 -> m8_335  [color=blue, key=0, style=bold];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_342  [key=2, style=dotted];
m8_367 -> m8_363  [color=blue, key=0, style=bold];
m8_375 -> m8_372  [color=blue, key=0, style=bold];
m8_387 -> m8_384  [color=blue, key=0, style=bold];
m8_403 -> m8_404  [key=0, style=solid];
m8_403 -> m8_131  [key=2, style=dotted];
m8_403 -> m8_130  [key=2, style=dotted];
m8_403 -> m8_405  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_408  [key=2, style=dotted];
m8_447 -> m8_449  [color=darkseagreen4, key=1, label=servers, style=dashed];
m8_447 -> m8_448  [key=0, style=solid];
m8_447 -> m8_130  [key=2, style=dotted];
m8_447 -> m8_138  [key=2, style=dotted];
m8_447 -> m8_451  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_447 -> m8_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_448 -> m8_449  [key=0, style=solid];
m8_448 -> m8_429  [key=2, style=dotted];
m8_450 -> m8_444  [color=blue, key=0, style=bold];
m8_475 -> m8_476  [key=0, style=solid];
m8_475 -> m8_131  [key=2, style=dotted];
m8_475 -> m8_130  [key=2, style=dotted];
m8_477 -> m8_472  [color=blue, key=0, style=bold];
m8_497 -> m8_493  [color=blue, key=0, style=bold];
m8_504 -> m8_505  [key=0, style=solid];
m8_504 -> m8_489  [key=2, style=dotted];
m8_504 -> m8_506  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_504 -> m8_507  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_506 -> m8_507  [key=0, style=solid];
m8_506 -> m8_408  [key=2, style=dotted];
m8_515 -> m8_512  [color=blue, key=0, style=bold];
m8_526 -> m8_523  [color=blue, key=0, style=bold];
m8_538 -> m8_533  [color=blue, key=0, style=bold];
m8_573 -> m8_566  [color=blue, key=0, style=bold];
m8_588 -> m8_589  [key=0, style=solid];
m8_588 -> m8_583  [key=2, style=dotted];
m8_590 -> m8_587  [color=blue, key=0, style=bold];
m8_597 -> m8_598  [key=0, style=solid];
m8_597 -> m8_583  [key=2, style=dotted];
m8_599 -> m8_595  [color=blue, key=0, style=bold];
m8_617 -> m8_618  [key=0, style=solid];
m8_617 -> m8_610  [key=2, style=dotted];
m8_619 -> m8_615  [color=blue, key=0, style=bold];
m8_634 -> m8_635  [key=0, style=solid];
m8_634 -> m8_629  [key=2, style=dotted];
m8_636 -> m8_633  [color=blue, key=0, style=bold];
m8_643 -> m8_644  [key=0, style=solid];
m8_643 -> m8_629  [key=2, style=dotted];
m8_645 -> m8_641  [color=blue, key=0, style=bold];
m8_652 -> m8_653  [key=0, style=solid];
m8_652 -> m8_629  [key=2, style=dotted];
m8_654 -> m8_650  [color=blue, key=0, style=bold];
m8_669 -> m8_670  [key=0, style=solid];
m8_669 -> m8_664  [key=2, style=dotted];
m8_671 -> m8_668  [color=blue, key=0, style=bold];
m8_678 -> m8_679  [key=0, style=solid];
m8_678 -> m8_664  [key=2, style=dotted];
m8_680 -> m8_676  [color=blue, key=0, style=bold];
m8_722 -> m8_723  [key=0, style=solid];
m8_722 -> m8_717  [key=2, style=dotted];
m8_724 -> m8_721  [color=blue, key=0, style=bold];
m8_731 -> m8_732  [key=0, style=solid];
m8_731 -> m8_717  [key=2, style=dotted];
m8_733 -> m8_729  [color=blue, key=0, style=bold];
m8_767 -> m8_764  [color=blue, key=0, style=bold];
m8_778 -> m8_775  [color=blue, key=0, style=bold];
m8_795 -> m8_796  [key=0, style=solid];
m8_795 -> m8_771  [key=2, style=dotted];
m8_797 -> m8_793  [color=blue, key=0, style=bold];
m8_804 -> m8_801  [color=blue, key=0, style=bold];
m8_823 -> m8_824  [key=0, style=solid];
m8_823 -> m8_808  [key=2, style=dotted];
m8_825 -> m8_821  [color=blue, key=0, style=bold];
m8_849 -> m8_850  [key=0, style=solid];
m8_849 -> m8_835  [key=2, style=dotted];
m8_851 -> m8_847  [color=blue, key=0, style=bold];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_165  [key=2, style=dotted];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_157  [key=2, style=dotted];
m8_156 -> m8_154  [color=blue, key=0, style=bold];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_249  [key=2, style=dotted];
m8_248 -> m8_246  [color=blue, key=0, style=bold];
m8_258 -> m8_259  [key=0, style=solid];
m8_258 -> m8_249  [key=2, style=dotted];
m8_259 -> m8_257  [color=blue, key=0, style=bold];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_304  [key=2, style=dotted];
m8_303 -> m8_301  [color=blue, key=0, style=bold];
m8_313 -> m8_314  [key=0, style=solid];
m8_313 -> m8_304  [key=2, style=dotted];
m8_314 -> m8_312  [color=blue, key=0, style=bold];
m8_172 -> m8_131  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_182  [key=2, style=dotted];
m8_172 -> m8_183  [key=2, style=dotted];
m8_172 -> m8_130  [key=2, style=dotted];
m8_234 -> m8_131  [key=2, style=dotted];
m8_234 -> m8_235  [key=0, style=solid];
m8_234 -> m8_238  [key=2, style=dotted];
m8_234 -> m8_183  [key=2, style=dotted];
m8_234 -> m8_130  [key=2, style=dotted];
m8_265 -> m8_131  [key=2, style=dotted];
m8_265 -> m8_266  [key=0, style=solid];
m8_265 -> m8_130  [key=2, style=dotted];
m8_276 -> m8_131  [key=2, style=dotted];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_130  [key=2, style=dotted];
m8_288 -> m8_131  [key=2, style=dotted];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_130  [key=2, style=dotted];
m8_426 -> m8_131  [key=2, style=dotted];
m8_426 -> m8_427  [key=0, style=solid];
m8_426 -> m8_130  [key=2, style=dotted];
m8_340 -> m8_341  [key=0, style=solid];
m8_340 -> m8_342  [key=2, style=dotted];
m8_341 -> m8_339  [color=blue, key=0, style=bold];
m8_350 -> m8_351  [key=0, style=solid];
m8_350 -> m8_342  [key=2, style=dotted];
m8_351 -> m8_349  [color=blue, key=0, style=bold];
m8_377 -> m8_378  [key=0, style=solid];
m8_377 -> m8_379  [key=2, style=dotted];
m8_377 -> m8_380  [key=2, style=dotted];
m8_378 -> m8_376  [color=blue, key=0, style=bold];
m8_389 -> m8_390  [key=0, style=solid];
m8_389 -> m8_380  [key=2, style=dotted];
m8_390 -> m8_388  [color=blue, key=0, style=bold];
m8_416 -> m8_417  [key=0, style=solid];
m8_416 -> m8_418  [key=2, style=dotted];
m8_417 -> m8_415  [color=blue, key=0, style=bold];
m8_437 -> m8_438  [key=0, style=solid];
m8_437 -> m8_439  [key=2, style=dotted];
m8_438 -> m8_436  [color=blue, key=0, style=bold];
m8_464 -> m8_465  [key=0, style=solid];
m8_464 -> m8_466  [key=2, style=dotted];
m8_464 -> m8_467  [key=2, style=dotted];
m8_465 -> m8_463  [color=blue, key=0, style=bold];
m8_487 -> m8_488  [key=0, style=solid];
m8_487 -> m8_489  [key=2, style=dotted];
m8_488 -> m8_486  [color=blue, key=0, style=bold];
m8_528 -> m8_519  [key=2, style=dotted];
m8_528 -> m8_529  [key=0, style=solid];
m8_529 -> m8_527  [color=blue, key=0, style=bold];
m8_552 -> m8_553  [key=0, style=solid];
m8_552 -> m8_554  [key=2, style=dotted];
m8_553 -> m8_551  [color=blue, key=0, style=bold];
m8_581 -> m8_582  [key=0, style=solid];
m8_581 -> m8_583  [key=2, style=dotted];
m8_582 -> m8_580  [color=blue, key=0, style=bold];
m8_608 -> m8_609  [key=0, style=solid];
m8_608 -> m8_610  [key=2, style=dotted];
m8_609 -> m8_607  [color=blue, key=0, style=bold];
m8_627 -> m8_628  [key=0, style=solid];
m8_627 -> m8_629  [key=2, style=dotted];
m8_628 -> m8_626  [color=blue, key=0, style=bold];
m8_662 -> m8_663  [key=0, style=solid];
m8_662 -> m8_664  [key=2, style=dotted];
m8_663 -> m8_661  [color=blue, key=0, style=bold];
m8_688 -> m8_689  [key=0, style=solid];
m8_688 -> m8_690  [key=2, style=dotted];
m8_689 -> m8_687  [color=blue, key=0, style=bold];
m8_715 -> m8_716  [key=0, style=solid];
m8_715 -> m8_717  [key=2, style=dotted];
m8_716 -> m8_714  [color=blue, key=0, style=bold];
m8_741 -> m8_742  [key=0, style=solid];
m8_741 -> m8_743  [key=2, style=dotted];
m8_742 -> m8_740  [color=blue, key=0, style=bold];
m8_769 -> m8_770  [key=0, style=solid];
m8_769 -> m8_771  [key=2, style=dotted];
m8_770 -> m8_768  [color=blue, key=0, style=bold];
m8_780 -> m8_781  [key=0, style=solid];
m8_780 -> m8_771  [key=2, style=dotted];
m8_781 -> m8_779  [color=blue, key=0, style=bold];
m8_806 -> m8_807  [key=0, style=solid];
m8_806 -> m8_808  [key=2, style=dotted];
m8_807 -> m8_805  [color=blue, key=0, style=bold];
m8_833 -> m8_834  [key=0, style=solid];
m8_833 -> m8_835  [key=2, style=dotted];
m8_834 -> m8_832  [color=blue, key=0, style=bold];
m8_859 -> m8_860  [key=0, style=solid];
m8_859 -> m8_861  [key=2, style=dotted];
m8_860 -> m8_858  [color=blue, key=0, style=bold];
m8_13 -> m8_11  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=2, style=dotted];
m8_40 -> m8_38  [color=blue, key=0, style=bold];
m8_98 -> m8_100  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_140 -> m8_100  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_186 -> m8_100  [key=2, style=dotted];
m8_186 -> m8_187  [key=0, style=solid];
m8_164 -> m8_161  [color=blue, key=0, style=bold];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_157  [key=2, style=dotted];
m8_181 -> m8_170  [color=blue, key=0, style=bold];
m8_171 -> m8_96  [key=2, style=dotted];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_267 -> m8_268  [key=0, style=solid];
m8_267 -> m8_249  [key=2, style=dotted];
m8_278 -> m8_279  [key=0, style=solid];
m8_278 -> m8_249  [key=2, style=dotted];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_249  [key=2, style=dotted];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_249  [key=2, style=dotted];
m8_321 -> m8_318  [color=blue, key=0, style=bold];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_304  [key=2, style=dotted];
m8_358 -> m8_355  [color=blue, key=0, style=bold];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_342  [key=2, style=dotted];
m8_364 -> m8_365  [key=0, style=solid];
m8_364 -> m8_368  [key=2, style=dotted];
m8_406 -> m8_394  [color=blue, key=0, style=bold];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_379  [key=2, style=dotted];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_380  [key=2, style=dotted];
m8_402 -> m8_403  [key=0, style=solid];
m8_402 -> m8_380  [key=2, style=dotted];
m8_424 -> m8_425  [key=0, style=solid];
m8_424 -> m8_368  [key=2, style=dotted];
m8_428 -> m8_423  [color=blue, key=0, style=bold];
m8_425 -> m8_426  [key=0, style=solid];
m8_425 -> m8_418  [key=2, style=dotted];
m8_445 -> m8_446  [key=0, style=solid];
m8_445 -> m8_368  [key=2, style=dotted];
m8_446 -> m8_447  [key=0, style=solid];
m8_446 -> m8_439  [key=2, style=dotted];
m8_473 -> m8_474  [key=0, style=solid];
m8_473 -> m8_135  [key=2, style=dotted];
m8_473 -> m8_478  [key=2, style=dotted];
m8_473 -> m8_368  [key=2, style=dotted];
m8_474 -> m8_475  [key=0, style=solid];
m8_474 -> m8_479  [key=2, style=dotted];
m8_474 -> m8_467  [key=2, style=dotted];
m8_503 -> m8_504  [key=0, style=solid];
m8_503 -> m8_368  [key=2, style=dotted];
m8_508 -> m8_502  [color=blue, key=0, style=bold];
m8_561 -> m8_558  [color=blue, key=0, style=bold];
m8_559 -> m8_560  [key=0, style=solid];
m8_559 -> m8_554  [key=2, style=dotted];
m8_567 -> m8_568  [key=0, style=solid];
m8_567 -> m8_368  [key=2, style=dotted];
m8_596 -> m8_597  [key=0, style=solid];
m8_596 -> m8_600  [key=2, style=dotted];
m8_596 -> m8_368  [key=2, style=dotted];
m8_616 -> m8_617  [key=0, style=solid];
m8_616 -> m8_600  [key=2, style=dotted];
m8_616 -> m8_368  [key=2, style=dotted];
m8_642 -> m8_643  [key=0, style=solid];
m8_642 -> m8_368  [key=2, style=dotted];
m8_651 -> m8_652  [key=0, style=solid];
m8_651 -> m8_368  [key=2, style=dotted];
m8_677 -> m8_678  [key=0, style=solid];
m8_677 -> m8_368  [key=2, style=dotted];
m8_697 -> m8_694  [color=blue, key=0, style=bold];
m8_695 -> m8_696  [key=0, style=solid];
m8_695 -> m8_690  [key=2, style=dotted];
m8_703 -> m8_704  [key=0, style=solid];
m8_703 -> m8_478  [key=2, style=dotted];
m8_703 -> m8_368  [key=2, style=dotted];
m8_707 -> m8_702  [color=blue, key=0, style=bold];
m8_704 -> m8_705  [key=0, style=solid];
m8_704 -> m8_690  [key=2, style=dotted];
m8_704 -> m8_706  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_730 -> m8_731  [key=0, style=solid];
m8_730 -> m8_368  [key=2, style=dotted];
m8_750 -> m8_747  [color=blue, key=0, style=bold];
m8_748 -> m8_749  [key=0, style=solid];
m8_748 -> m8_743  [key=2, style=dotted];
m8_756 -> m8_757  [key=0, style=solid];
m8_756 -> m8_478  [key=2, style=dotted];
m8_756 -> m8_368  [key=2, style=dotted];
m8_760 -> m8_755  [color=blue, key=0, style=bold];
m8_757 -> m8_758  [key=0, style=solid];
m8_757 -> m8_743  [key=2, style=dotted];
m8_757 -> m8_759  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_788 -> m8_785  [color=blue, key=0, style=bold];
m8_786 -> m8_787  [key=0, style=solid];
m8_786 -> m8_771  [key=2, style=dotted];
m8_794 -> m8_795  [key=0, style=solid];
m8_794 -> m8_368  [key=2, style=dotted];
m8_815 -> m8_812  [color=blue, key=0, style=bold];
m8_813 -> m8_814  [key=0, style=solid];
m8_813 -> m8_808  [key=2, style=dotted];
m8_822 -> m8_823  [key=0, style=solid];
m8_822 -> m8_368  [key=2, style=dotted];
m8_842 -> m8_839  [color=blue, key=0, style=bold];
m8_840 -> m8_841  [key=0, style=solid];
m8_840 -> m8_835  [key=2, style=dotted];
m8_848 -> m8_849  [key=0, style=solid];
m8_848 -> m8_368  [key=2, style=dotted];
m8_868 -> m8_865  [color=blue, key=0, style=bold];
m8_866 -> m8_867  [key=0, style=solid];
m8_866 -> m8_861  [key=2, style=dotted];
m8_874 -> m8_875  [key=0, style=solid];
m8_874 -> m8_136  [key=2, style=dotted];
m8_874 -> m8_368  [key=2, style=dotted];
m8_878 -> m8_873  [color=blue, key=0, style=bold];
m8_875 -> m8_876  [key=0, style=solid];
m8_875 -> m8_861  [key=2, style=dotted];
m8_875 -> m8_877  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_899 -> m8_897  [color=blue, key=0, style=bold];
m8_898 -> m8_899  [key=0, style=solid];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_136  [key=2, style=dotted];
m8_179 -> m8_137  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_136  [key=2, style=dotted];
m8_180 -> m8_137  [key=2, style=dotted];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_137  [key=2, style=dotted];
m8_122 -> m8_135  [key=2, style=dotted];
m8_122 -> m8_136  [key=2, style=dotted];
m8_141 -> m8_139  [color=blue, key=0, style=bold];
m8_142 -> m8_143  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_539 -> m8_540  [key=0, style=solid];
m8_542 -> m8_543  [key=0, style=solid];
m8_99 -> m8_97  [color=blue, key=0, style=bold];
m8_116 -> m8_117  [key=0, style=solid];
m8_266 -> m8_132  [key=2, style=dotted];
m8_266 -> m8_268  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_266 -> m8_267  [key=0, style=solid];
m8_277 -> m8_132  [key=2, style=dotted];
m8_277 -> m8_280  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_279  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_289 -> m8_132  [key=2, style=dotted];
m8_289 -> m8_291  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m8_289 -> m8_290  [key=0, style=solid];
m8_451 -> m8_452  [key=0, style=solid];
m8_454 -> m8_455  [key=0, style=solid];
m8_507 -> m8_508  [key=0, style=solid];
m8_507 -> m8_408  [key=2, style=dotted];
m8_427 -> m8_428  [key=0, style=solid];
m8_427 -> m8_429  [key=2, style=dotted];
m8_187 -> m8_185  [color=blue, key=0, style=bold];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_165  [key=2, style=dotted];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_165  [key=2, style=dotted];
m8_357 -> m8_358  [key=0, style=solid];
m8_357 -> m8_165  [key=2, style=dotted];
m8_560 -> m8_561  [key=0, style=solid];
m8_560 -> m8_165  [key=2, style=dotted];
m8_696 -> m8_697  [key=0, style=solid];
m8_696 -> m8_137  [key=2, style=dotted];
m8_706 -> m8_707  [key=0, style=solid];
m8_706 -> m8_137  [key=2, style=dotted];
m8_706 -> m8_466  [key=2, style=dotted];
m8_705 -> m8_137  [key=2, style=dotted];
m8_705 -> m8_466  [key=2, style=dotted];
m8_705 -> m8_706  [key=0, style=solid];
m8_749 -> m8_750  [key=0, style=solid];
m8_749 -> m8_137  [key=2, style=dotted];
m8_759 -> m8_760  [key=0, style=solid];
m8_759 -> m8_137  [key=2, style=dotted];
m8_759 -> m8_466  [key=2, style=dotted];
m8_758 -> m8_137  [key=2, style=dotted];
m8_758 -> m8_466  [key=2, style=dotted];
m8_758 -> m8_759  [key=0, style=solid];
m8_787 -> m8_788  [key=0, style=solid];
m8_787 -> m8_165  [key=2, style=dotted];
m8_814 -> m8_815  [key=0, style=solid];
m8_814 -> m8_816  [key=2, style=dotted];
m8_841 -> m8_842  [key=0, style=solid];
m8_841 -> m8_816  [key=2, style=dotted];
m8_867 -> m8_868  [key=0, style=solid];
m8_867 -> m8_137  [key=2, style=dotted];
m8_877 -> m8_878  [key=0, style=solid];
m8_877 -> m8_137  [key=2, style=dotted];
m8_877 -> m8_466  [key=2, style=dotted];
m8_876 -> m8_137  [key=2, style=dotted];
m8_876 -> m8_466  [key=2, style=dotted];
m8_876 -> m8_877  [key=0, style=solid];
m8_144 -> m8_142  [color=blue, key=0, style=bold];
m8_143 -> m8_144  [key=0, style=solid];
m8_147 -> m8_145  [color=blue, key=0, style=bold];
m8_146 -> m8_147  [key=0, style=solid];
m8_541 -> m8_539  [color=blue, key=0, style=bold];
m8_540 -> m8_541  [key=0, style=solid];
m8_544 -> m8_542  [color=blue, key=0, style=bold];
m8_543 -> m8_544  [key=0, style=solid];
m8_453 -> m8_451  [color=blue, key=0, style=bold];
m8_452 -> m8_453  [key=0, style=solid];
m8_455 -> m8_456  [key=0, style=solid];
m8_456 -> m8_454  [color=blue, key=0, style=bold];
m8_672 -> m8_673  [key=0, style=solid];
m8_674 -> m8_675  [key=0, style=solid];
m8_674 -> m8_104  [key=2, style=dotted];
m8_674 -> m8_676  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_673 -> m8_674  [key=0, style=solid];
m8_673 -> m8_673  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_673 -> m8_677  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_675 -> m8_672  [color=blue, key=0, style=bold];
m8_369 -> m8_370  [key=0, style=solid];
m8_370 -> m8_45  [key=2, style=dotted];
m8_370 -> m8_371  [key=0, style=solid];
m8_370 -> m8_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_371 -> m8_369  [color=blue, key=0, style=bold];
m8_480 -> m8_481  [key=0, style=solid];
m8_481 -> m8_45  [key=2, style=dotted];
m8_481 -> m8_482  [key=0, style=solid];
m8_481 -> m8_483  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_482 -> m8_480  [color=blue, key=0, style=bold];
m8_879 -> m8_883  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m8_879 -> m8_880  [key=0, style=solid];
m8_882 -> m8_24  [key=2, style=dotted];
m8_882 -> m8_883  [key=0, style=solid];
m8_881 -> m8_882  [key=0, style=solid];
m8_881 -> m8_886  [key=2, style=dotted];
m8_883 -> m8_884  [key=0, style=solid];
m8_883 -> m8_887  [key=2, style=dotted];
m8_880 -> m8_881  [key=0, style=solid];
m8_880 -> m8_883  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m8_880 -> m8_885  [key=2, style=dotted];
m8_884 -> m8_879  [color=blue, key=0, style=bold];
m8_239 -> m8_240  [key=0, style=solid];
m8_240 -> m8_45  [key=2, style=dotted];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_241 -> m8_239  [color=blue, key=0, style=bold];
m8_158 -> m8_159  [key=0, style=solid];
m8_159 -> m8_45  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_160 -> m8_158  [color=blue, key=0, style=bold];
m8_56 -> m8_57  [color=green, key=0, style=solid];
m8_57 -> m8_58  [color=green, key=0, style=solid];
m8_57 -> m8_45  [color=green, key=2, style=dotted];
m8_57 -> m8_59  [color=green, key=1, label="lambda expression", style=dashed];
m8_58 -> m8_56  [color=blue, key=0, style=bold];
m8_315 -> m8_316  [key=0, style=solid];
m8_316 -> m8_45  [key=2, style=dotted];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_317 -> m8_315  [color=blue, key=0, style=bold];
m8_708 -> m8_709  [key=0, style=solid];
m8_709 -> m8_45  [key=2, style=dotted];
m8_709 -> m8_710  [key=0, style=solid];
m8_709 -> m8_711  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_710 -> m8_708  [color=blue, key=0, style=bold];
m8_100 -> m8_87  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m8_100 -> m8_102  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m8_100 -> m8_168  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m8_100 -> m8_900  [key=0, style=solid];
m8_900 -> m8_100  [color=blue, key=0, style=bold];
m8_509 -> m8_510  [key=0, style=solid];
m8_510 -> m8_45  [key=2, style=dotted];
m8_510 -> m8_511  [key=0, style=solid];
m8_510 -> m8_512  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_511 -> m8_509  [color=blue, key=0, style=bold];
m8_86 -> m8_87  [key=0, style=solid];
m8_87 -> m8_45  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_88 -> m8_86  [color=blue, key=0, style=bold];
m8_591 -> m8_592  [key=0, style=solid];
m8_593 -> m8_594  [key=0, style=solid];
m8_593 -> m8_104  [key=2, style=dotted];
m8_593 -> m8_595  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_592 -> m8_593  [key=0, style=solid];
m8_592 -> m8_592  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_592 -> m8_596  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_594 -> m8_591  [color=blue, key=0, style=bold];
m8_744 -> m8_745  [key=0, style=solid];
m8_745 -> m8_45  [key=2, style=dotted];
m8_745 -> m8_746  [key=0, style=solid];
m8_745 -> m8_747  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_746 -> m8_744  [color=blue, key=0, style=bold];
m8_468 -> m8_469  [key=0, style=solid];
m8_470 -> m8_471  [key=0, style=solid];
m8_470 -> m8_104  [key=2, style=dotted];
m8_470 -> m8_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_469 -> m8_470  [key=0, style=solid];
m8_469 -> m8_469  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_469 -> m8_473  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_471 -> m8_468  [color=blue, key=0, style=bold];
m8_734 -> m8_735  [key=0, style=solid];
m8_735 -> m8_45  [key=2, style=dotted];
m8_735 -> m8_736  [key=0, style=solid];
m8_735 -> m8_737  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_736 -> m8_734  [color=blue, key=0, style=bold];
m8_205 -> m8_206  [key=0, style=solid];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_104  [key=2, style=dotted];
m8_207 -> m8_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_206  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_206 -> m8_211  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_208 -> m8_205  [color=blue, key=0, style=bold];
m8_782 -> m8_783  [key=0, style=solid];
m8_783 -> m8_45  [key=2, style=dotted];
m8_783 -> m8_784  [key=0, style=solid];
m8_783 -> m8_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_784 -> m8_782  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [color=green, key=0, style=solid];
m8_43 -> m8_44  [color=green, key=0, style=solid];
m8_43 -> m8_45  [color=green, key=2, style=dotted];
m8_43 -> m8_46  [color=green, key=1, label="lambda expression", style=dashed];
m8_44 -> m8_42  [color=blue, key=0, style=bold];
m8_655 -> m8_656  [key=0, style=solid];
m8_656 -> m8_45  [key=2, style=dotted];
m8_656 -> m8_657  [key=0, style=solid];
m8_656 -> m8_658  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_657 -> m8_655  [color=blue, key=0, style=bold];
m8_25 -> m8_26  [color=green, key=0, style=solid];
m8_26 -> m8_27  [color=green, key=0, style=solid];
m8_26 -> m8_28  [color=green, key=2, style=dotted];
m8_26 -> m8_29  [color=green, key=1, label="lambda expression", style=dashed];
m8_27 -> m8_25  [color=blue, key=0, style=bold];
m8_498 -> m8_499  [key=0, style=solid];
m8_500 -> m8_501  [key=0, style=solid];
m8_500 -> m8_104  [key=2, style=dotted];
m8_500 -> m8_502  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_499 -> m8_500  [key=0, style=solid];
m8_499 -> m8_499  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_499 -> m8_503  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_501 -> m8_498  [color=blue, key=0, style=bold];
m8_520 -> m8_521  [key=0, style=solid];
m8_521 -> m8_45  [key=2, style=dotted];
m8_521 -> m8_522  [key=0, style=solid];
m8_521 -> m8_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_522 -> m8_520  [color=blue, key=0, style=bold];
m8_665 -> m8_666  [key=0, style=solid];
m8_666 -> m8_45  [key=2, style=dotted];
m8_666 -> m8_667  [key=0, style=solid];
m8_666 -> m8_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_667 -> m8_665  [color=blue, key=0, style=bold];
m8_681 -> m8_682  [key=0, style=solid];
m8_682 -> m8_45  [key=2, style=dotted];
m8_682 -> m8_683  [key=0, style=solid];
m8_682 -> m8_684  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_683 -> m8_681  [color=blue, key=0, style=bold];
m8_28 -> m8_26  [color=green, key=3, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action", style=bold];
m8_28 -> m8_888  [key=0, style=solid];
m8_28 -> m8_892  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m8_890 -> m8_891  [key=0, style=solid];
m8_890 -> m8_8  [key=2, style=dotted];
m8_890 -> m8_9  [key=2, style=dotted];
m8_890 -> m8_897  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_888 -> m8_889  [key=0, style=solid];
m8_888 -> m8_885  [key=2, style=dotted];
m8_892 -> m8_893  [key=0, style=solid];
m8_892 -> m8_896  [key=2, style=dotted];
m8_889 -> m8_890  [key=0, style=solid];
m8_889 -> m8_894  [key=2, style=dotted];
m8_889 -> m8_891  [color=darkseagreen4, key=1, label=storage, style=dashed];
m8_891 -> m8_892  [key=0, style=solid];
m8_891 -> m8_895  [key=2, style=dotted];
m8_893 -> m8_28  [color=blue, key=0, style=bold];
m8_620 -> m8_621  [key=0, style=solid];
m8_621 -> m8_45  [key=2, style=dotted];
m8_621 -> m8_622  [key=0, style=solid];
m8_621 -> m8_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_622 -> m8_620  [color=blue, key=0, style=bold];
m8_798 -> m8_799  [key=0, style=solid];
m8_799 -> m8_45  [key=2, style=dotted];
m8_799 -> m8_800  [key=0, style=solid];
m8_799 -> m8_801  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_800 -> m8_798  [color=blue, key=0, style=bold];
m8_294 -> m8_295  [key=0, style=solid];
m8_295 -> m8_45  [key=2, style=dotted];
m8_295 -> m8_296  [key=0, style=solid];
m8_295 -> m8_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_296 -> m8_294  [color=blue, key=0, style=bold];
m8_817 -> m8_818  [key=0, style=solid];
m8_819 -> m8_820  [key=0, style=solid];
m8_819 -> m8_104  [key=2, style=dotted];
m8_819 -> m8_821  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_818 -> m8_819  [key=0, style=solid];
m8_818 -> m8_818  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_818 -> m8_822  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_820 -> m8_817  [color=blue, key=0, style=bold];
m8_74 -> m8_75  [color=green, key=0, style=solid];
m8_75 -> m8_76  [color=green, key=0, style=solid];
m8_75 -> m8_45  [color=green, key=2, style=dotted];
m8_75 -> m8_77  [color=green, key=1, label="lambda expression", style=dashed];
m8_76 -> m8_74  [color=blue, key=0, style=bold];
m8_630 -> m8_631  [key=0, style=solid];
m8_631 -> m8_45  [key=2, style=dotted];
m8_631 -> m8_632  [key=0, style=solid];
m8_631 -> m8_633  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_632 -> m8_630  [color=blue, key=0, style=bold];
m8_852 -> m8_853  [key=0, style=solid];
m8_853 -> m8_45  [key=2, style=dotted];
m8_853 -> m8_854  [key=0, style=solid];
m8_853 -> m8_855  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_854 -> m8_852  [color=blue, key=0, style=bold];
m8_65 -> m8_66  [color=green, key=0, style=solid];
m8_66 -> m8_67  [color=green, key=0, style=solid];
m8_66 -> m8_45  [color=green, key=2, style=dotted];
m8_66 -> m8_68  [color=green, key=1, label="lambda expression", style=dashed];
m8_67 -> m8_65  [color=blue, key=0, style=bold];
m8_574 -> m8_575  [key=0, style=solid];
m8_575 -> m8_45  [key=2, style=dotted];
m8_575 -> m8_576  [key=0, style=solid];
m8_575 -> m8_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_576 -> m8_574  [color=blue, key=0, style=bold];
m8_359 -> m8_360  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_104  [key=2, style=dotted];
m8_361 -> m8_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_360 -> m8_361  [key=0, style=solid];
m8_360 -> m8_360  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_360 -> m8_364  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_362 -> m8_359  [color=blue, key=0, style=bold];
m8_611 -> m8_612  [key=0, style=solid];
m8_613 -> m8_614  [key=0, style=solid];
m8_613 -> m8_104  [key=2, style=dotted];
m8_613 -> m8_615  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_612 -> m8_613  [key=0, style=solid];
m8_612 -> m8_612  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_612 -> m8_616  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_614 -> m8_611  [color=blue, key=0, style=bold];
m8_271 -> m8_272  [key=0, style=solid];
m8_273 -> m8_274  [key=0, style=solid];
m8_273 -> m8_104  [key=2, style=dotted];
m8_273 -> m8_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_272 -> m8_273  [key=0, style=solid];
m8_272 -> m8_261  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_272 -> m8_276  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_274 -> m8_271  [color=blue, key=0, style=bold];
m8_440 -> m8_441  [key=0, style=solid];
m8_442 -> m8_443  [key=0, style=solid];
m8_442 -> m8_104  [key=2, style=dotted];
m8_442 -> m8_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_441 -> m8_442  [key=0, style=solid];
m8_441 -> m8_441  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_441 -> m8_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_443 -> m8_440  [color=blue, key=0, style=bold];
m8_809 -> m8_810  [key=0, style=solid];
m8_810 -> m8_45  [key=2, style=dotted];
m8_810 -> m8_811  [key=0, style=solid];
m8_810 -> m8_812  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_811 -> m8_809  [color=blue, key=0, style=bold];
m8_530 -> m8_531  [key=0, style=solid];
m8_531 -> m8_532  [key=0, style=solid];
m8_531 -> m8_104  [key=2, style=dotted];
m8_531 -> m8_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_532 -> m8_530  [color=blue, key=0, style=bold];
m8_166 -> m8_167  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_104  [key=2, style=dotted];
m8_168 -> m8_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_167  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_167 -> m8_172  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_169 -> m8_166  [color=blue, key=0, style=bold];
m8_430 -> m8_431  [key=0, style=solid];
m8_431 -> m8_45  [key=2, style=dotted];
m8_431 -> m8_432  [key=0, style=solid];
m8_431 -> m8_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_432 -> m8_430  [color=blue, key=0, style=bold];
m8_725 -> m8_726  [key=0, style=solid];
m8_727 -> m8_728  [key=0, style=solid];
m8_727 -> m8_104  [key=2, style=dotted];
m8_727 -> m8_729  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_726 -> m8_727  [key=0, style=solid];
m8_726 -> m8_726  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m8_726 -> m8_730  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_728 -> m8_725  [color=blue, key=0, style=bold];
m8_148 -> m8_149  [key=0, style=solid];
m8_149 -> m8_45  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_150 -> m8_148  [color=blue, key=0, style=bold];
m8_101 -> m8_102  [key=0, style=solid];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=2, style=dotted];
m8_102 -> m8_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_103 -> m8_101  [color=blue, key=0, style=bold];
m8_352 -> m8_353  [key=0, style=solid];
m8_353 -> m8_45  [key=2, style=dotted];
m8_353 -> m8_354  [key=0, style=solid];
m8_353 -> m8_355  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_354 -> m8_352  [color=blue, key=0, style=bold];
m8_584 -> m8_585  [key=0, style=solid];
m8_585 -> m8_45  [key=2, style=dotted];
m8_585 -> m8_586  [key=0, style=solid];
m8_585 -> m8_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_586 -> m8_584  [color=blue, key=0, style=bold];
m8_901 -> m8_26  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_43  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_57  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_66  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_75  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_189  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_199  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_49  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_102  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_149  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_159  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_168  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_207  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_231  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_251  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_262  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_273  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_285  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_295  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_324  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_333  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_344  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_353  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_370  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_392  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_421  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_442  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_470  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_481  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_500  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_510  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_546  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_556  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_564  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_575  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_585  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_593  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_613  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_621  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_631  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_639  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_656  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_666  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_674  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_682  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_692  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_700  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_719  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_727  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_735  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_745  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_753  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_773  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_791  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_799  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_810  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_819  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_837  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_845  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_853  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_863  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_871  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_901 -> m8_890  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m8_904 -> m8_54  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_905 -> m8_54  [color=green, key=1, label=token, style=dashed];
m8_906 -> m8_82  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_910 -> m8_195  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_921 -> m8_327  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_935 -> m8_517  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_907 -> m8_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_902 -> m8_39  [color=darkseagreen4, key=1, label=token, style=dashed];
m8_903 -> m8_39  [color=darkseagreen4, key=1, label=queues, style=dashed];
m8_911 -> m8_211  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_912 -> m8_224  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_908 -> m8_155  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_914 -> m8_247  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_915 -> m8_258  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_919 -> m8_302  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_920 -> m8_313  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_909 -> m8_172  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_913 -> m8_234  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_916 -> m8_265  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_917 -> m8_276  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_918 -> m8_288  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_922 -> m8_340  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_923 -> m8_350  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_925 -> m8_377  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_926 -> m8_389  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_927 -> m8_416  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_929 -> m8_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_931 -> m8_464  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_933 -> m8_487  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_936 -> m8_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_937 -> m8_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_939 -> m8_581  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_941 -> m8_608  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_943 -> m8_627  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_946 -> m8_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_948 -> m8_688  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_950 -> m8_715  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_952 -> m8_741  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_954 -> m8_769  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_955 -> m8_780  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_957 -> m8_806  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_959 -> m8_833  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_961 -> m8_859  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m8_924 -> m8_364  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_928 -> m8_424  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_930 -> m8_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_932 -> m8_473  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_934 -> m8_503  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_938 -> m8_567  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_940 -> m8_596  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_942 -> m8_616  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_944 -> m8_642  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_945 -> m8_651  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_947 -> m8_677  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_949 -> m8_703  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_951 -> m8_730  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_953 -> m8_756  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_956 -> m8_794  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_958 -> m8_822  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_960 -> m8_848  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m8_962 -> m8_874  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=2, style=dotted];
m9_24 -> m9_22  [color=blue, key=0, style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_16  [color=darkseagreen4, key=1, label="Hangfire.States.ApplyStateContext", style=dashed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_15  [color=darkseagreen4, key=1, label=scheduledState, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_21  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_20  [key=2, style=dotted];
m9_14 -> m9_17  [key=0, style=solid];
m9_14 -> m9_18  [key=2, style=dotted];
m9_14 -> m9_19  [key=2, style=dotted];
m9_17 -> m9_11  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [color=red, key=0, style=solid];
m9_7 -> m9_8  [color=red, key=0, style=solid];
m9_7 -> n3  [color=red, key=2, style=dotted];
m9_7 -> m9_10  [color=red, key=2, style=dotted];
m9_8 -> m9_6  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [color=red, key=0, style=solid];
m9_3 -> m9_4  [color=red, key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_2  [color=blue, key=0, style=bold];
m9_26 -> m9_3  [color=red, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m9_26 -> m9_4  [color=darkseagreen4, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m9_26 -> m9_7  [color=red, key=1, label="Hangfire.States.ScheduledState", style=dashed];
m10_0 -> m10_1  [color=red, key=0, style=solid];
m10_0 -> m10_3  [color=red, key=1, label=IDbConnection, style=dashed];
m10_0 -> m10_5  [color=red, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m10_0 -> m10_6  [color=red, key=1, label=IDbConnection, style=dashed];
m10_1 -> m10_2  [color=red, key=0, style=solid];
m10_1 -> m10_3  [color=red, key=0, style=solid];
m10_3 -> m10_4  [color=red, key=0, style=solid];
m10_3 -> m10_5  [color=red, key=0, style=solid];
m10_5 -> m10_6  [color=red, key=0, style=solid];
m10_6 -> m10_7  [color=red, key=0, style=solid];
m10_2 -> m10_7  [color=red, key=0, style=solid];
m10_2 -> m10_8  [color=red, key=2, style=dotted];
m10_4 -> m10_7  [color=red, key=0, style=solid];
m10_4 -> m10_8  [color=red, key=2, style=dotted];
m10_7 -> m10_0  [color=blue, key=0, style=bold];
m10_37 -> m10_38  [color=red, key=0, style=solid];
m10_37 -> m10_41  [color=red, key=1, label="System.Collections.Generic.Queue<System.Action<SqlConnection>>", style=dashed];
m10_37 -> m10_45  [color=red, key=1, label=string, style=dashed];
m10_38 -> m10_39  [color=red, key=0, style=solid];
m10_38 -> m10_40  [color=red, key=0, style=solid];
m10_41 -> m10_42  [color=red, key=0, style=solid];
m10_41 -> m10_43  [color=red, key=2, style=dotted];
m10_41 -> m10_44  [color=red, key=1, label="lambda expression", style=dashed];
m10_39 -> m10_42  [color=red, key=0, style=solid];
m10_39 -> m10_8  [color=red, key=2, style=dotted];
m10_40 -> m10_41  [color=red, key=0, style=solid];
m10_40 -> m10_45  [color=red, key=1, label=enqueueJobSql, style=dashed];
m10_40 -> m10_40  [color=red, key=3, label="Local variable string enqueueJobSql", style=bold];
m10_42 -> m10_37  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [color=red, key=0, style=solid];
m10_9 -> m10_12  [color=red, key=1, label="string[]", style=dashed];
m10_9 -> m10_18  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_9 -> m10_19  [color=red, key=1, label="string[]", style=dashed];
m10_10 -> m10_11  [color=red, key=0, style=solid];
m10_10 -> m10_12  [color=red, key=0, style=solid];
m10_12 -> m10_13  [color=red, key=0, style=solid];
m10_12 -> m10_14  [color=red, key=0, style=solid];
m10_18 -> m10_19  [color=red, key=0, style=solid];
m10_18 -> m10_29  [color=red, key=2, style=dotted];
m10_18 -> m10_18  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_18 -> m10_22  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_19 -> m10_20  [color=red, key=0, style=solid];
m10_19 -> m10_30  [color=red, key=2, style=dotted];
m10_19 -> m10_31  [color=red, key=2, style=dotted];
m10_19 -> m10_32  [color=red, key=2, style=dotted];
m10_19 -> m10_33  [color=red, key=2, style=dotted];
m10_19 -> m10_25  [color=red, key=1, label=idAndQueue, style=dashed];
m10_19 -> m10_26  [color=red, key=1, label=idAndQueue, style=dashed];
m10_11 -> m10_27  [color=red, key=0, style=solid];
m10_11 -> m10_8  [color=red, key=2, style=dotted];
m10_13 -> m10_27  [color=red, key=0, style=solid];
m10_13 -> m10_28  [color=red, key=2, style=dotted];
m10_14 -> m10_15  [color=red, key=0, style=solid];
m10_15 -> m10_16  [color=red, key=0, style=solid];
m10_15 -> m10_19  [color=red, key=1, label=fetchJobSqlTemplate, style=dashed];
m10_15 -> m10_15  [color=red, key=3, label="Local variable string fetchJobSqlTemplate", style=bold];
m10_16 -> m10_17  [color=red, key=0, style=solid];
m10_16 -> m10_19  [color=red, key=1, label=fetchConditions, style=dashed];
m10_16 -> m10_21  [color=red, key=1, label=fetchConditions, style=dashed];
m10_16 -> m10_24  [color=red, key=1, label=fetchConditions, style=dashed];
m10_17 -> m10_18  [color=red, key=0, style=solid];
m10_17 -> m10_19  [color=red, key=1, label=currentQueryIndex, style=dashed];
m10_17 -> m10_21  [color=red, key=1, label=currentQueryIndex, style=dashed];
m10_17 -> m10_24  [color=red, key=1, label=currentQueryIndex, style=dashed];
m10_17 -> m10_17  [color=red, key=3, label="Local variable int currentQueryIndex", style=bold];
m10_21 -> m10_22  [color=red, key=0, style=solid];
m10_21 -> m10_24  [color=red, key=0, style=solid];
m10_24 -> m10_25  [color=red, key=0, style=solid];
m10_24 -> m10_24  [color=red, key=1, label=currentQueryIndex, style=dashed];
m10_22 -> m10_23  [color=red, key=0, style=solid];
m10_22 -> m10_34  [color=red, key=2, style=dotted];
m10_22 -> m10_22  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_20 -> m10_21  [color=red, key=0, style=solid];
m10_20 -> m10_24  [color=red, key=0, style=solid];
m10_25 -> m10_17  [color=red, key=0, style=solid];
m10_25 -> m10_26  [color=red, key=0, style=solid];
m10_26 -> m10_27  [color=red, key=0, style=solid];
m10_26 -> m10_35  [color=red, key=2, style=dotted];
m10_26 -> m10_36  [color=red, key=2, style=dotted];
m10_23 -> m10_24  [color=red, key=0, style=solid];
m10_23 -> m10_29  [color=red, key=2, style=dotted];
m10_23 -> m10_23  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m10_27 -> m10_9  [color=blue, key=0, style=bold];
m10_44 -> m10_45  [color=red, key=0, style=solid];
m10_45 -> m10_46  [color=red, key=0, style=solid];
m10_45 -> m10_47  [color=red, key=2, style=dotted];
m10_46 -> m10_44  [color=blue, key=0, style=bold];
m10_48 -> m10_5  [color=red, key=1, label="HangFire.SqlServer.SqlServerJobQueue", style=dashed];
m10_48 -> m10_6  [color=red, key=1, label="HangFire.SqlServer.SqlServerJobQueue", style=dashed];
m10_48 -> m10_19  [color=red, key=1, label="HangFire.SqlServer.SqlServerJobQueue", style=dashed];
m10_48 -> m10_22  [color=red, key=1, label="HangFire.SqlServer.SqlServerJobQueue", style=dashed];
m10_48 -> m10_26  [color=red, key=1, label="HangFire.SqlServer.SqlServerJobQueue", style=dashed];
m10_49 -> m10_45  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_45  [color=red, key=1, label=string, style=dashed];
m10_51 -> m10_45  [color=red, key=1, label=enqueueJobSql, style=dashed];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_3  [color=green, key=2, style=dotted];
m11_1 -> m11_4  [color=green, key=2, style=dotted];
m11_2 -> m11_3  [color=red, key=0, style=solid];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_4 -> m11_1  [color=red, key=1, label="HangFire.Web.StyleSheetHandler", style=dashed];
m11_4 -> m11_2  [color=red, key=1, label="HangFire.Web.StyleSheetHandler", style=dashed];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_5  [key=2, style=dotted];
m12_24 -> m12_6  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_5  [key=2, style=dotted];
m12_25 -> m12_11  [key=2, style=dotted];
m12_26 -> m12_23  [color=blue, key=0, style=bold];
m12_7 -> m12_8  [color=red, key=0, style=solid];
m12_8 -> m12_9  [color=red, key=0, style=solid];
m12_8 -> m12_5  [color=red, key=2, style=dotted];
m12_8 -> m12_6  [color=red, key=2, style=dotted];
m12_9 -> m12_10  [color=red, key=0, style=solid];
m12_9 -> m12_5  [color=red, key=2, style=dotted];
m12_9 -> m12_11  [color=red, key=2, style=dotted];
m12_10 -> m12_7  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_2  [color=blue, key=0, style=bold];
m12_40 -> m12_41  [key=0, style=solid];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_5  [key=2, style=dotted];
m12_41 -> m12_35  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_44  [key=2, style=dotted];
m12_43 -> m12_40  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [color=red, key=0, style=solid];
m12_15 -> m12_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_16 -> m12_17  [color=red, key=0, style=solid];
m12_16 -> m12_6  [color=red, key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_5  [key=2, style=dotted];
m12_17 -> m12_11  [key=2, style=dotted];
m12_18 -> m12_15  [color=blue, key=0, style=bold];
m12_37 -> m12_38  [key=0, style=solid];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_5  [key=2, style=dotted];
m12_38 -> m12_30  [key=2, style=dotted];
m12_39 -> m12_37  [color=blue, key=0, style=bold];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_5  [key=2, style=dotted];
m12_13 -> m12_11  [key=2, style=dotted];
m12_14 -> m12_12  [color=blue, key=0, style=bold];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_5  [key=2, style=dotted];
m12_32 -> m12_35  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_36  [key=2, style=dotted];
m12_34 -> m12_31  [color=blue, key=0, style=bold];
m12_19 -> m12_20  [key=0, style=solid];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_22  [key=2, style=dotted];
m12_20 -> m12_6  [key=2, style=dotted];
m12_21 -> m12_19  [color=blue, key=0, style=bold];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_5  [key=2, style=dotted];
m12_52 -> m12_49  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_50  [key=2, style=dotted];
m12_54 -> m12_51  [color=blue, key=0, style=bold];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_5  [key=2, style=dotted];
m12_28 -> m12_30  [key=2, style=dotted];
m12_29 -> m12_27  [color=blue, key=0, style=bold];
m12_45 -> m12_46  [key=0, style=solid];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_5  [key=2, style=dotted];
m12_46 -> m12_49  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_50  [key=2, style=dotted];
m12_48 -> m12_45  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_6  [key=2, style=dotted];
m13_5 -> m13_3  [color=blue, key=0, style=bold];
m13_25 -> m13_26  [color=red, key=0, style=solid];
m13_25 -> m13_29  [color=red, key=2, style=dotted];
m13_25 -> m13_32  [color=red, key=2, style=dotted];
m13_25 -> m13_33  [color=red, key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_16  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_12 -> m13_17  [color=red, key=1, label="string[]", style=dashed];
m13_12 -> m13_18  [color=red, key=1, label="string[]", style=dashed];
m13_13 -> m13_14  [key=0, style=solid];
m13_16 -> m13_17  [color=red, key=0, style=solid];
m13_16 -> m13_28  [color=red, key=2, style=dotted];
m13_16 -> m13_16  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_17 -> m13_18  [color=red, key=0, style=solid];
m13_17 -> m13_17  [color=red, key=1, label=queueIndex, style=dashed];
m13_17 -> m13_21  [color=red, key=1, label=queueIndex, style=dashed];
m13_18 -> m13_19  [color=red, key=0, style=solid];
m13_18 -> m13_20  [color=red, key=1, label=queueName, style=dashed];
m13_18 -> m13_26  [color=red, key=1, label=queueName, style=dashed];
m13_14 -> m13_15  [key=0, style=solid];
m13_15 -> m13_16  [color=red, key=0, style=solid];
m13_15 -> m13_17  [color=red, key=1, label=queueIndex, style=dashed];
m13_15 -> m13_15  [color=darkorchid, key=3, label="Local variable int queueIndex", style=bold];
m13_21 -> m13_22  [color=red, key=0, style=solid];
m13_21 -> m13_23  [color=red, key=0, style=solid];
m13_19 -> m13_20  [color=red, key=0, style=solid];
m13_19 -> m13_29  [color=red, key=2, style=dotted];
m13_19 -> m13_22  [color=red, key=1, label=queueKey, style=dashed];
m13_19 -> m13_23  [color=red, key=1, label=queueKey, style=dashed];
m13_20 -> m13_21  [color=red, key=0, style=solid];
m13_20 -> m13_29  [color=red, key=2, style=dotted];
m13_20 -> m13_22  [color=red, key=1, label=fetchedKey, style=dashed];
m13_20 -> m13_23  [color=red, key=1, label=fetchedKey, style=dashed];
m13_26 -> m13_27  [color=red, key=0, style=solid];
m13_26 -> m13_34  [color=red, key=2, style=dotted];
m13_22 -> m13_24  [color=red, key=0, style=solid];
m13_22 -> m13_30  [color=red, key=2, style=dotted];
m13_22 -> m13_25  [color=red, key=1, label=jobId, style=dashed];
m13_22 -> m13_26  [color=red, key=1, label=jobId, style=dashed];
m13_23 -> m13_24  [color=red, key=0, style=solid];
m13_23 -> m13_31  [color=red, key=2, style=dotted];
m13_23 -> m13_25  [color=red, key=1, label=jobId, style=dashed];
m13_23 -> m13_26  [color=red, key=1, label=jobId, style=dashed];
m13_24 -> m13_15  [color=red, key=0, style=solid];
m13_24 -> m13_25  [color=red, key=0, style=solid];
m13_27 -> m13_12  [color=blue, key=0, style=bold];
m13_124 -> m13_125  [key=0, style=solid];
m13_125 -> m13_126  [key=0, style=solid];
m13_125 -> m13_127  [key=2, style=dotted];
m13_125 -> m13_128  [key=2, style=dotted];
m13_126 -> m13_124  [color=blue, key=0, style=bold];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_183  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_171 -> m13_180  [color=darkorchid, key=3, label="method methodReturn int RemoveTimedOutServers", style=bold];
m13_172 -> m13_173  [key=0, style=solid];
m13_172 -> m13_188  [key=2, style=dotted];
m13_172 -> m13_176  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m13_183 -> m13_184  [key=0, style=solid];
m13_183 -> m13_181  [key=0, style=solid];
m13_183 -> m13_193  [key=2, style=dotted];
m13_173 -> m13_174  [key=0, style=solid];
m13_173 -> n3  [key=2, style=dotted];
m13_173 -> m13_178  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m13_173 -> m13_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m13_173 -> m13_181  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m13_173 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_176 -> m13_177  [key=0, style=solid];
m13_176 -> m13_179  [key=0, style=solid];
m13_174 -> m13_175  [key=0, style=solid];
m13_174 -> m13_183  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m13_178 -> m13_176  [key=0, style=solid];
m13_178 -> m13_60  [key=2, style=dotted];
m13_178 -> m13_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_178 -> m13_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_181 -> m13_182  [key=0, style=solid];
m13_181 -> m13_186  [key=0, style=solid];
m13_175 -> m13_176  [key=0, style=solid];
m13_175 -> m13_189  [key=2, style=dotted];
m13_175 -> m13_178  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m13_175 -> m13_179  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m13_179 -> m13_180  [key=0, style=solid];
m13_179 -> m13_190  [key=2, style=dotted];
m13_177 -> m13_178  [key=0, style=solid];
m13_177 -> m13_195  [color=darkseagreen4, key=1, label=name, style=dashed];
m13_177 -> m13_200  [color=darkseagreen4, key=1, label=name, style=dashed];
m13_177 -> m13_176  [color=darkorchid, key=3, label="Local variable var name", style=bold];
m13_180 -> m13_181  [key=0, style=solid];
m13_180 -> m13_185  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m13_180 -> m13_186  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m13_180 -> m13_15  [color=darkorchid, key=3, label="Local variable int removedServerCount", style=bold];
m13_185 -> m13_181  [key=0, style=solid];
m13_185 -> m13_185  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m13_185 -> m13_186  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m13_186 -> m13_187  [key=0, style=solid];
m13_182 -> m13_183  [key=0, style=solid];
m13_182 -> m13_191  [key=2, style=dotted];
m13_182 -> m13_192  [key=2, style=dotted];
m13_182 -> m13_182  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m13_182 -> m13_184  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m13_184 -> m13_185  [key=0, style=solid];
m13_184 -> m13_154  [key=2, style=dotted];
m13_184 -> m13_184  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m13_187 -> m13_171  [color=blue, key=0, style=bold];
m13_169 -> m13_170  [key=0, style=solid];
m13_169 -> m13_29  [key=2, style=dotted];
m13_169 -> m13_32  [key=2, style=dotted];
m13_169 -> m13_33  [key=2, style=dotted];
m13_168 -> m13_169  [key=0, style=solid];
m13_170 -> m13_168  [color=blue, key=0, style=bold];
m13_157 -> m13_158  [key=0, style=solid];
m13_157 -> m13_60  [key=2, style=dotted];
m13_157 -> m13_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_154 -> m13_155  [key=0, style=solid];
m13_154 -> m13_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_154 -> m13_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_154 -> m13_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_154 -> m13_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_154 -> m13_97  [color=darkorchid, key=3, label="Parameter variable IRedisClient redis", style=bold];
m13_154 -> m13_151  [color=darkorchid, key=3, label="Parameter variable string serverId", style=bold];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_11  [key=2, style=dotted];
m13_155 -> m13_157  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_155 -> m13_158  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_156 -> m13_157  [key=0, style=solid];
m13_156 -> m13_60  [key=2, style=dotted];
m13_156 -> m13_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_156 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_158 -> m13_159  [key=0, style=solid];
m13_158 -> m13_61  [key=2, style=dotted];
m13_159 -> m13_154  [color=blue, key=0, style=bold];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [key=2, style=dotted];
m13_8 -> m13_11  [key=2, style=dotted];
m13_9 -> m13_7  [color=blue, key=0, style=bold];
m13_102 -> m13_103  [key=0, style=solid];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_29  [key=2, style=dotted];
m13_103 -> m13_105  [key=2, style=dotted];
m13_104 -> m13_102  [color=blue, key=0, style=bold];
m13_129 -> m13_130  [key=0, style=solid];
m13_129 -> m13_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_129 -> m13_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_129 -> m13_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_129 -> m13_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_129 -> m13_133  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m13_129 -> m13_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_129 -> m13_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_130 -> m13_131  [key=0, style=solid];
m13_130 -> m13_11  [key=2, style=dotted];
m13_130 -> m13_132  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_130 -> m13_135  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_130 -> m13_136  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_131 -> m13_132  [key=0, style=solid];
m13_131 -> m13_60  [key=2, style=dotted];
m13_131 -> m13_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_131 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_60  [key=2, style=dotted];
m13_132 -> m13_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_136  [key=0, style=solid];
m13_135 -> m13_133  [key=0, style=solid];
m13_135 -> m13_60  [key=2, style=dotted];
m13_135 -> m13_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_136 -> m13_137  [key=0, style=solid];
m13_136 -> m13_61  [key=2, style=dotted];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_148  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m13_134 -> m13_133  [color=darkorchid, key=3, label="Local variable string queue1", style=bold];
m13_134 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_137 -> m13_129  [color=blue, key=0, style=bold];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_60  [key=2, style=dotted];
m13_110 -> m13_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_110 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_106 -> m13_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_106 -> m13_109  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_106 -> m13_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_106 -> m13_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_106 -> m13_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_11  [key=2, style=dotted];
m13_107 -> m13_109  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_107 -> m13_110  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_107 -> m13_111  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_60  [key=2, style=dotted];
m13_108 -> m13_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_60  [key=2, style=dotted];
m13_109 -> m13_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_61  [key=2, style=dotted];
m13_112 -> m13_106  [color=blue, key=0, style=bold];
m13_151 -> m13_152  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_152 -> m13_154  [key=2, style=dotted];
m13_153 -> m13_151  [color=blue, key=0, style=bold];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_72  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.JobData GetJobData", style=bold];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_29  [key=2, style=dotted];
m13_71 -> m13_94  [key=2, style=dotted];
m13_71 -> m13_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_79  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_85  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_92  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m13_71 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_74  [key=0, style=solid];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_80  [key=0, style=solid];
m13_78 -> m13_95  [key=2, style=dotted];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_88  [color=darkseagreen4, key=1, label=type, style=dashed];
m13_79 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_82  [key=0, style=solid];
m13_80 -> m13_95  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_88  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_84  [key=0, style=solid];
m13_82 -> m13_95  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_88  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_86  [key=0, style=solid];
m13_84 -> m13_95  [key=2, style=dotted];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_88  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_98  [key=2, style=dotted];
m13_92 -> m13_95  [key=2, style=dotted];
m13_73 -> m13_93  [key=0, style=solid];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_88  [color=darkseagreen4, key=1, label=type, style=dashed];
m13_74 -> m13_72  [color=darkorchid, key=3, label="Local variable string type", style=bold];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_88  [color=darkseagreen4, key=1, label=method, style=dashed];
m13_75 -> m13_72  [color=darkorchid, key=3, label="Local variable string method", style=bold];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_96  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_88  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m13_76 -> m13_72  [color=darkorchid, key=3, label="Local variable string parameterTypes", style=bold];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_88  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m13_77 -> m13_72  [color=darkorchid, key=3, label="Local variable string arguments", style=bold];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_72  [color=darkorchid, key=3, label="Local variable HangFire.Common.Job job", style=bold];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_72  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m13_87 -> m13_90  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_92  [key=0, style=solid];
m13_89 -> m13_97  [key=2, style=dotted];
m13_90 -> m13_91  [key=0, style=solid];
m13_91 -> m13_92  [key=0, style=solid];
m13_93 -> m13_70  [color=blue, key=0, style=bold];
m13_199 -> m13_200  [key=0, style=solid];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_29  [key=2, style=dotted];
m13_67 -> m13_69  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_29  [key=2, style=dotted];
m13_63 -> m13_65  [key=2, style=dotted];
m13_62 -> m13_63  [key=0, style=solid];
m13_66 -> m13_67  [key=0, style=solid];
m13_64 -> m13_62  [color=blue, key=0, style=bold];
m13_68 -> m13_66  [color=blue, key=0, style=bold];
m13_114 -> m13_115  [key=0, style=solid];
m13_114 -> m13_29  [key=2, style=dotted];
m13_114 -> m13_116  [key=2, style=dotted];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_29  [key=2, style=dotted];
m13_118 -> m13_120  [key=2, style=dotted];
m13_122 -> m13_123  [key=0, style=solid];
m13_122 -> m13_29  [key=2, style=dotted];
m13_122 -> m13_120  [key=2, style=dotted];
m13_113 -> m13_114  [key=0, style=solid];
m13_117 -> m13_118  [key=0, style=solid];
m13_121 -> m13_122  [key=0, style=solid];
m13_115 -> m13_113  [color=blue, key=0, style=bold];
m13_119 -> m13_117  [color=blue, key=0, style=bold];
m13_123 -> m13_121  [color=blue, key=0, style=bold];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_141  [key=2, style=dotted];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_29  [key=2, style=dotted];
m13_143 -> n3  [key=2, style=dotted];
m13_143 -> m13_146  [key=2, style=dotted];
m13_143 -> m13_32  [key=2, style=dotted];
m13_143 -> m13_65  [key=2, style=dotted];
m13_148 -> m13_149  [key=0, style=solid];
m13_148 -> m13_29  [key=2, style=dotted];
m13_148 -> m13_150  [key=2, style=dotted];
m13_138 -> m13_139  [key=0, style=solid];
m13_142 -> m13_143  [key=0, style=solid];
m13_147 -> m13_148  [key=0, style=solid];
m13_140 -> m13_138  [color=blue, key=0, style=bold];
m13_144 -> m13_142  [color=blue, key=0, style=bold];
m13_149 -> m13_147  [color=blue, key=0, style=bold];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_163  [key=2, style=dotted];
m13_165 -> m13_166  [key=0, style=solid];
m13_165 -> m13_29  [key=2, style=dotted];
m13_165 -> m13_167  [key=2, style=dotted];
m13_160 -> m13_161  [key=0, style=solid];
m13_164 -> m13_165  [key=0, style=solid];
m13_162 -> m13_160  [color=blue, key=0, style=bold];
m13_166 -> m13_164  [color=blue, key=0, style=bold];
m13_200 -> m13_201  [key=0, style=solid];
m13_200 -> m13_202  [key=2, style=dotted];
m13_200 -> m13_203  [key=2, style=dotted];
m13_200 -> m13_204  [key=2, style=dotted];
m13_200 -> m13_205  [key=2, style=dotted];
m13_195 -> m13_196  [key=0, style=solid];
m13_195 -> m13_197  [key=2, style=dotted];
m13_195 -> m13_198  [key=2, style=dotted];
m13_194 -> m13_195  [key=0, style=solid];
m13_196 -> m13_194  [color=blue, key=0, style=bold];
m13_201 -> m13_199  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> m13_3  [color=green, key=2, style=dotted];
m13_1 -> m13_4  [color=green, key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_60  [key=2, style=dotted];
m13_51 -> m13_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_42  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m13_40 -> m13_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m13_40 -> m13_51  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_40 -> m13_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_55  [key=2, style=dotted];
m13_41 -> m13_56  [key=2, style=dotted];
m13_41 -> m13_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_41 -> m13_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_41 -> m13_51  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_41 -> m13_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_41 -> m13_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_57  [key=2, style=dotted];
m13_42 -> m13_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m13_42 -> m13_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m13_42 -> m13_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m13_42 -> m13_47  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_58  [key=2, style=dotted];
m13_43 -> m13_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_43 -> m13_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_43 -> m13_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_43 -> m13_48  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_43 -> m13_50  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_43 -> m13_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_60  [key=2, style=dotted];
m13_50 -> m13_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_53 -> m13_54  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_59  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_59  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_59  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_59  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_32  [key=2, style=dotted];
m13_48 -> m13_59  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_11  [key=2, style=dotted];
m13_49 -> m13_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_49 -> m13_52  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_61  [key=2, style=dotted];
m13_54 -> m13_40  [color=blue, key=0, style=bold];
m13_35 -> m13_36  [color=red, key=0, style=solid];
m13_36 -> m13_37  [color=red, key=0, style=solid];
m13_36 -> m13_29  [color=red, key=2, style=dotted];
m13_36 -> m13_38  [color=red, key=2, style=dotted];
m13_36 -> m13_39  [color=red, key=2, style=dotted];
m13_37 -> m13_35  [color=blue, key=0, style=bold];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_29  [key=2, style=dotted];
m13_100 -> m13_33  [key=2, style=dotted];
m13_100 -> m13_185  [color=darkorchid, key=3, label="Local variable Hangfire.Server.Worker worker", style=bold];
m13_99 -> m13_100  [key=0, style=solid];
m13_101 -> m13_99  [color=blue, key=0, style=bold];
m13_97 -> m13_0  [color=darkorchid, key=3, label="Property variable IRedisClient Redis", style=bold];
m13_206 -> m13_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_22  [color=red, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_23  [color=red, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_25  [color=red, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_26  [color=red, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_36  [color=red, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_49  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_71  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_107  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_125  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_130  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_152  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_169  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_172  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_175  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_206 -> m13_184  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m13_207 -> m13_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_207 -> m13_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_208 -> m13_63  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m13_209 -> m13_67  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_210 -> m13_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_210 -> m13_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_210 -> m13_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_211 -> m13_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_212 -> m13_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_212 -> m13_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_212 -> m13_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_213 -> m13_143  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m13_214 -> m13_148  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m13_215 -> m13_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_215 -> m13_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_216 -> m13_195  [color=darkseagreen4, key=1, label=name, style=dashed];
m13_216 -> m13_200  [color=darkseagreen4, key=1, label=name, style=dashed];
m13_217 -> m13_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_5  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_6  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m15_7 -> m15_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m15_7 -> m15_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m15_7 -> m15_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m16_153 -> m16_154  [key=0, style=solid];
m16_154 -> m16_36  [key=2, style=dotted];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> m16_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_155 -> m16_153  [color=blue, key=0, style=bold];
m16_627 -> m16_628  [key=0, style=solid];
m16_629 -> m16_36  [key=2, style=dotted];
m16_629 -> m16_630  [key=0, style=solid];
m16_629 -> m16_631  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_628 -> m16_629  [key=0, style=solid];
m16_628 -> m16_632  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_630 -> m16_627  [color=blue, key=0, style=bold];
m16_119 -> m16_120  [key=0, style=solid];
m16_121 -> m16_36  [key=2, style=dotted];
m16_121 -> m16_122  [key=0, style=solid];
m16_121 -> m16_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_122 -> m16_119  [color=blue, key=0, style=bold];
m16_393 -> m16_394  [key=0, style=solid];
m16_394 -> m16_36  [key=2, style=dotted];
m16_394 -> m16_395  [key=0, style=solid];
m16_394 -> m16_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_395 -> m16_393  [color=blue, key=0, style=bold];
m16_614 -> m16_615  [key=0, style=solid];
m16_615 -> m16_36  [key=2, style=dotted];
m16_615 -> m16_616  [key=0, style=solid];
m16_615 -> m16_617  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_616 -> m16_614  [color=blue, key=0, style=bold];
m16_419 -> m16_420  [key=0, style=solid];
m16_420 -> m16_36  [key=2, style=dotted];
m16_420 -> m16_421  [key=0, style=solid];
m16_420 -> m16_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_421 -> m16_419  [color=blue, key=0, style=bold];
m16_476 -> m16_477  [key=0, style=solid];
m16_477 -> m16_36  [key=2, style=dotted];
m16_477 -> m16_478  [key=0, style=solid];
m16_477 -> m16_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_478 -> m16_476  [color=blue, key=0, style=bold];
m16_782 -> m16_783  [key=0, style=solid];
m16_783 -> m16_36  [key=2, style=dotted];
m16_783 -> m16_784  [key=0, style=solid];
m16_783 -> m16_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_784 -> m16_782  [color=blue, key=0, style=bold];
m16_319 -> m16_320  [key=0, style=solid];
m16_320 -> m16_36  [key=2, style=dotted];
m16_320 -> m16_321  [key=0, style=solid];
m16_320 -> m16_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_321 -> m16_319  [color=blue, key=0, style=bold];
m16_559 -> m16_560  [key=0, style=solid];
m16_560 -> m16_36  [key=2, style=dotted];
m16_560 -> m16_561  [key=0, style=solid];
m16_560 -> m16_562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_561 -> m16_559  [color=blue, key=0, style=bold];
m16_589 -> m16_590  [key=0, style=solid];
m16_590 -> m16_36  [key=2, style=dotted];
m16_590 -> m16_591  [key=0, style=solid];
m16_590 -> m16_592  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_591 -> m16_589  [color=blue, key=0, style=bold];
m16_407 -> m16_408  [key=0, style=solid];
m16_408 -> m16_36  [key=2, style=dotted];
m16_408 -> m16_409  [key=0, style=solid];
m16_408 -> m16_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_409 -> m16_407  [color=blue, key=0, style=bold];
m16_177 -> m16_178  [key=0, style=solid];
m16_178 -> m16_46  [key=2, style=dotted];
m16_178 -> m16_47  [key=2, style=dotted];
m16_178 -> m16_179  [key=0, style=solid];
m16_179 -> m16_177  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m16_2 -> m16_6  [key=2, style=dotted];
m16_2 -> m16_7  [key=2, style=dotted];
m16_2 -> m16_8  [key=2, style=dotted];
m16_2 -> m16_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_9  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_0  [color=blue, key=0, style=bold];
m16_5 -> m16_2  [color=blue, key=0, style=bold];
m16_816 -> m16_817  [key=0, style=solid];
m16_817 -> m16_36  [key=2, style=dotted];
m16_817 -> m16_818  [key=0, style=solid];
m16_817 -> m16_819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_818 -> m16_816  [color=blue, key=0, style=bold];
m16_267 -> m16_268  [key=0, style=solid];
m16_268 -> m16_36  [key=2, style=dotted];
m16_268 -> m16_269  [key=0, style=solid];
m16_268 -> m16_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_269 -> m16_267  [color=blue, key=0, style=bold];
m16_514 -> m16_515  [key=0, style=solid];
m16_515 -> m16_36  [key=2, style=dotted];
m16_515 -> m16_516  [key=0, style=solid];
m16_515 -> m16_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_516 -> m16_514  [color=blue, key=0, style=bold];
m16_194 -> m16_195  [color=green, key=0, style=solid];
m16_195 -> m16_196  [color=green, key=0, style=solid];
m16_195 -> m16_36  [color=green, key=2, style=dotted];
m16_195 -> m16_197  [color=green, key=1, label="lambda expression", style=dashed];
m16_196 -> m16_194  [color=blue, key=0, style=bold];
m16_293 -> m16_294  [key=0, style=solid];
m16_294 -> m16_36  [key=2, style=dotted];
m16_294 -> m16_295  [key=0, style=solid];
m16_294 -> m16_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_295 -> m16_293  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [color=blue, key=0, style=bold];
m16_1 -> m16_3  [color=darkseagreen4, key=1, label=defaultProvider, style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_5  [key=2, style=dotted];
m16_830 -> m16_831  [key=0, style=solid];
m16_832 -> m16_36  [key=2, style=dotted];
m16_832 -> m16_833  [key=0, style=solid];
m16_832 -> m16_834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_831 -> m16_832  [key=0, style=solid];
m16_831 -> m16_835  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_833 -> m16_830  [color=blue, key=0, style=bold];
m16_692 -> m16_693  [key=0, style=solid];
m16_694 -> m16_36  [key=2, style=dotted];
m16_694 -> m16_695  [key=0, style=solid];
m16_694 -> m16_696  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_693 -> m16_694  [key=0, style=solid];
m16_693 -> m16_697  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_695 -> m16_692  [color=blue, key=0, style=bold];
m16_143 -> m16_144  [key=0, style=solid];
m16_82 -> m16_96  [color=green, key=1, label=SqlConnection, style=dashed];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_84  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_82 -> m16_89  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_82 -> m16_90  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_82 -> m16_93  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_96 -> m16_97  [color=green, key=0, style=solid];
m16_96 -> m16_46  [color=green, key=2, style=dotted];
m16_96 -> m16_47  [color=green, key=2, style=dotted];
m16_96 -> m16_98  [color=green, key=1, label=jobState, style=dashed];
m16_96 -> m16_99  [color=green, key=1, label=jobState, style=dashed];
m16_96 -> m16_100  [color=green, key=1, label=jobState, style=dashed];
m16_96 -> m16_101  [color=green, key=1, label=jobState, style=dashed];
m16_95 -> m16_96  [color=green, key=0, style=solid];
m16_95 -> m16_54  [color=green, key=2, style=dotted];
m16_97 -> m16_98  [color=green, key=0, style=solid];
m16_97 -> m16_48  [color=green, key=2, style=dotted];
m16_97 -> m16_19  [color=green, key=2, style=dotted];
m16_98 -> m16_99  [color=green, key=0, style=solid];
m16_98 -> m16_19  [color=green, key=2, style=dotted];
m16_99 -> m16_100  [color=green, key=0, style=solid];
m16_99 -> m16_19  [color=green, key=2, style=dotted];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_73  [key=2, style=dotted];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_19  [key=2, style=dotted];
m16_83 -> m16_97  [color=green, key=1, label=jobId, style=dashed];
m16_83 -> m16_46  [key=2, style=dotted];
m16_83 -> m16_47  [key=2, style=dotted];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_48  [key=2, style=dotted];
m16_83 -> m16_89  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_83 -> m16_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_83 -> m16_90  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_94 -> m16_95  [color=green, key=0, style=solid];
m16_94 -> m16_54  [color=green, key=2, style=dotted];
m16_93 -> m16_94  [color=green, key=0, style=solid];
m16_93 -> m16_95  [color=green, key=1, label=anotherJob, style=dashed];
m16_93 -> m16_50  [key=2, style=dotted];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_23  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_49  [key=2, style=dotted];
m16_40 -> m16_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_50  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_50  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_49  [key=2, style=dotted];
m16_67 -> m16_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_50  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_50  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_49  [key=2, style=dotted];
m16_89 -> m16_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_50  [key=2, style=dotted];
m16_90 -> m16_92  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_49  [key=2, style=dotted];
m16_129 -> m16_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_50  [key=2, style=dotted];
m16_130 -> m16_132  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_164  [key=2, style=dotted];
m16_161 -> m16_162  [key=0, style=solid];
m16_161 -> m16_49  [key=2, style=dotted];
m16_161 -> m16_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_184 -> m16_185  [key=0, style=solid];
m16_184 -> m16_49  [key=2, style=dotted];
m16_184 -> m16_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_198 -> m16_199  [key=0, style=solid];
m16_198 -> m16_49  [key=2, style=dotted];
m16_198 -> m16_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_216 -> m16_217  [key=0, style=solid];
m16_216 -> m16_49  [key=2, style=dotted];
m16_216 -> m16_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_49  [key=2, style=dotted];
m16_228 -> m16_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_242 -> m16_243  [key=0, style=solid];
m16_242 -> m16_49  [key=2, style=dotted];
m16_242 -> m16_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_259 -> m16_260  [key=0, style=solid];
m16_259 -> m16_49  [key=2, style=dotted];
m16_259 -> m16_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_271 -> m16_272  [key=0, style=solid];
m16_271 -> m16_49  [key=2, style=dotted];
m16_271 -> m16_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_285 -> m16_286  [key=0, style=solid];
m16_285 -> m16_49  [key=2, style=dotted];
m16_285 -> m16_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_297 -> m16_298  [key=0, style=solid];
m16_297 -> m16_49  [key=2, style=dotted];
m16_297 -> m16_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_309 -> m16_310  [key=0, style=solid];
m16_309 -> m16_49  [key=2, style=dotted];
m16_309 -> m16_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_323 -> m16_324  [key=0, style=solid];
m16_323 -> m16_49  [key=2, style=dotted];
m16_323 -> m16_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_335 -> m16_336  [key=0, style=solid];
m16_335 -> m16_49  [key=2, style=dotted];
m16_335 -> m16_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_348 -> m16_349  [key=0, style=solid];
m16_348 -> m16_49  [key=2, style=dotted];
m16_348 -> m16_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_360 -> m16_361  [key=0, style=solid];
m16_360 -> m16_49  [key=2, style=dotted];
m16_360 -> m16_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_372 -> m16_373  [key=0, style=solid];
m16_372 -> m16_49  [key=2, style=dotted];
m16_372 -> m16_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_385 -> m16_386  [key=0, style=solid];
m16_385 -> m16_49  [key=2, style=dotted];
m16_385 -> m16_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_397 -> m16_398  [key=0, style=solid];
m16_397 -> m16_49  [key=2, style=dotted];
m16_397 -> m16_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_411 -> m16_412  [key=0, style=solid];
m16_411 -> m16_49  [key=2, style=dotted];
m16_411 -> m16_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_423 -> m16_424  [key=0, style=solid];
m16_423 -> m16_49  [key=2, style=dotted];
m16_423 -> m16_427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_435 -> m16_436  [key=0, style=solid];
m16_435 -> m16_49  [key=2, style=dotted];
m16_435 -> m16_442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_454 -> m16_455  [key=0, style=solid];
m16_454 -> m16_49  [key=2, style=dotted];
m16_454 -> m16_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_468 -> m16_469  [key=0, style=solid];
m16_468 -> m16_49  [key=2, style=dotted];
m16_468 -> m16_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_480 -> m16_481  [key=0, style=solid];
m16_480 -> m16_49  [key=2, style=dotted];
m16_480 -> m16_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_492 -> m16_493  [key=0, style=solid];
m16_492 -> m16_49  [key=2, style=dotted];
m16_492 -> m16_496  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_504 -> m16_505  [key=0, style=solid];
m16_504 -> m16_13  [key=2, style=dotted];
m16_504 -> m16_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_508 -> m16_509  [key=0, style=solid];
m16_508 -> m16_49  [key=2, style=dotted];
m16_508 -> m16_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_518 -> m16_519  [key=0, style=solid];
m16_518 -> m16_13  [key=2, style=dotted];
m16_518 -> m16_521  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_522 -> m16_523  [key=0, style=solid];
m16_522 -> m16_49  [key=2, style=dotted];
m16_522 -> m16_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_531 -> m16_532  [key=0, style=solid];
m16_531 -> m16_49  [key=2, style=dotted];
m16_531 -> m16_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_550 -> m16_551  [key=0, style=solid];
m16_550 -> m16_13  [key=2, style=dotted];
m16_550 -> m16_552  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_553 -> m16_554  [key=0, style=solid];
m16_553 -> m16_49  [key=2, style=dotted];
m16_553 -> m16_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_563 -> m16_564  [key=0, style=solid];
m16_563 -> m16_49  [key=2, style=dotted];
m16_563 -> m16_568  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_564 -> m16_565  [key=0, style=solid];
m16_564 -> m16_49  [key=2, style=dotted];
m16_564 -> m16_571  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_578 -> m16_579  [key=0, style=solid];
m16_578 -> m16_13  [key=2, style=dotted];
m16_578 -> m16_581  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_582 -> m16_583  [key=0, style=solid];
m16_582 -> m16_49  [key=2, style=dotted];
m16_582 -> m16_584  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_593 -> m16_594  [key=0, style=solid];
m16_593 -> m16_13  [key=2, style=dotted];
m16_593 -> m16_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_597 -> m16_598  [key=0, style=solid];
m16_597 -> m16_49  [key=2, style=dotted];
m16_597 -> m16_599  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_607 -> m16_608  [key=0, style=solid];
m16_607 -> m16_49  [key=2, style=dotted];
m16_607 -> m16_611  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_618 -> m16_619  [key=0, style=solid];
m16_618 -> m16_13  [key=2, style=dotted];
m16_618 -> m16_620  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_621 -> m16_622  [key=0, style=solid];
m16_621 -> m16_49  [key=2, style=dotted];
m16_621 -> m16_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_633 -> m16_634  [key=0, style=solid];
m16_633 -> m16_49  [key=2, style=dotted];
m16_633 -> m16_638  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_645 -> m16_646  [key=0, style=solid];
m16_645 -> m16_13  [key=2, style=dotted];
m16_645 -> m16_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_649 -> m16_650  [key=0, style=solid];
m16_649 -> m16_49  [key=2, style=dotted];
m16_649 -> m16_651  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_662 -> m16_663  [key=0, style=solid];
m16_662 -> m16_49  [key=2, style=dotted];
m16_662 -> m16_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_681 -> m16_682  [key=0, style=solid];
m16_681 -> m16_13  [key=2, style=dotted];
m16_681 -> m16_684  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_685 -> m16_686  [key=0, style=solid];
m16_685 -> m16_49  [key=2, style=dotted];
m16_685 -> m16_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_698 -> m16_699  [key=0, style=solid];
m16_698 -> m16_49  [key=2, style=dotted];
m16_698 -> m16_704  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_717 -> m16_718  [key=0, style=solid];
m16_717 -> m16_13  [key=2, style=dotted];
m16_717 -> m16_720  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_721 -> m16_722  [key=0, style=solid];
m16_721 -> m16_49  [key=2, style=dotted];
m16_721 -> m16_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_733 -> m16_734  [key=0, style=solid];
m16_733 -> m16_49  [key=2, style=dotted];
m16_733 -> m16_739  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_752 -> m16_753  [key=0, style=solid];
m16_752 -> m16_13  [key=2, style=dotted];
m16_752 -> m16_755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_756 -> m16_757  [key=0, style=solid];
m16_756 -> m16_49  [key=2, style=dotted];
m16_756 -> m16_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_768 -> m16_769  [key=0, style=solid];
m16_768 -> m16_49  [key=2, style=dotted];
m16_768 -> m16_773  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_786 -> m16_787  [key=0, style=solid];
m16_786 -> m16_13  [key=2, style=dotted];
m16_786 -> m16_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_790 -> m16_791  [key=0, style=solid];
m16_790 -> m16_49  [key=2, style=dotted];
m16_790 -> m16_792  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_802 -> m16_803  [key=0, style=solid];
m16_802 -> m16_49  [key=2, style=dotted];
m16_802 -> m16_807  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_820 -> m16_821  [key=0, style=solid];
m16_820 -> m16_13  [key=2, style=dotted];
m16_820 -> m16_823  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_824 -> m16_825  [key=0, style=solid];
m16_824 -> m16_49  [key=2, style=dotted];
m16_824 -> m16_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_836 -> m16_837  [key=0, style=solid];
m16_836 -> m16_49  [key=2, style=dotted];
m16_836 -> m16_841  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_84 -> m16_46  [key=2, style=dotted];
m16_84 -> m16_47  [key=2, style=dotted];
m16_84 -> m16_48  [key=2, style=dotted];
m16_84 -> m16_93  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m16_84 -> m16_85  [key=0, style=solid];
m16_102 -> m16_82  [color=blue, key=0, style=bold];
m16_38 -> m16_46  [key=2, style=dotted];
m16_38 -> m16_47  [key=2, style=dotted];
m16_38 -> m16_48  [key=2, style=dotted];
m16_38 -> m16_40  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_38 -> m16_41  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_39 -> m16_46  [key=2, style=dotted];
m16_39 -> m16_47  [key=2, style=dotted];
m16_39 -> m16_48  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_43  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m16_65 -> m16_46  [key=2, style=dotted];
m16_65 -> m16_47  [key=2, style=dotted];
m16_65 -> m16_48  [key=2, style=dotted];
m16_65 -> m16_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_65 -> m16_68  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_66 -> m16_46  [key=2, style=dotted];
m16_66 -> m16_47  [key=2, style=dotted];
m16_66 -> m16_48  [key=2, style=dotted];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_70  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m16_124 -> m16_46  [key=2, style=dotted];
m16_124 -> m16_47  [key=2, style=dotted];
m16_124 -> m16_48  [key=2, style=dotted];
m16_124 -> m16_129  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_124 -> m16_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_124 -> m16_134  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_133 -> m16_46  [key=2, style=dotted];
m16_133 -> m16_47  [key=2, style=dotted];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_135  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m16_133 -> m16_136  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m16_133 -> m16_137  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m16_133 -> m16_138  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m16_185 -> m16_46  [key=2, style=dotted];
m16_185 -> m16_47  [key=2, style=dotted];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_187  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_185 -> m16_188  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_199 -> m16_46  [key=2, style=dotted];
m16_199 -> m16_47  [key=2, style=dotted];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> m16_201  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_199 -> m16_202  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_199 -> m16_203  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_229 -> m16_46  [key=2, style=dotted];
m16_229 -> m16_47  [key=2, style=dotted];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_231  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_229 -> m16_232  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_243 -> m16_46  [key=2, style=dotted];
m16_243 -> m16_47  [key=2, style=dotted];
m16_243 -> m16_244  [key=0, style=solid];
m16_243 -> m16_245  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_243 -> m16_246  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_243 -> m16_247  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_272 -> m16_46  [key=2, style=dotted];
m16_272 -> m16_47  [key=2, style=dotted];
m16_272 -> m16_273  [key=0, style=solid];
m16_272 -> m16_274  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_272 -> m16_275  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_310 -> m16_46  [key=2, style=dotted];
m16_310 -> m16_47  [key=2, style=dotted];
m16_310 -> m16_311  [key=0, style=solid];
m16_310 -> m16_312  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_310 -> m16_313  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_324 -> m16_46  [key=2, style=dotted];
m16_324 -> m16_47  [key=2, style=dotted];
m16_324 -> m16_325  [key=0, style=solid];
m16_373 -> m16_46  [key=2, style=dotted];
m16_373 -> m16_47  [key=2, style=dotted];
m16_373 -> m16_374  [key=0, style=solid];
m16_373 -> m16_375  [color=darkseagreen4, key=1, label=record, style=dashed];
m16_436 -> m16_46  [key=2, style=dotted];
m16_436 -> m16_437  [key=0, style=solid];
m16_436 -> m16_441  [key=2, style=dotted];
m16_436 -> m16_438  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_436 -> m16_439  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_532 -> m16_46  [key=2, style=dotted];
m16_532 -> m16_533  [key=0, style=solid];
m16_532 -> m16_536  [key=2, style=dotted];
m16_532 -> m16_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_532 -> m16_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_532 -> m16_534  [color=darkseagreen4, key=1, label=result, style=dashed];
m16_634 -> m16_46  [key=2, style=dotted];
m16_634 -> m16_47  [key=2, style=dotted];
m16_634 -> m16_635  [key=0, style=solid];
m16_663 -> m16_46  [key=2, style=dotted];
m16_663 -> m16_664  [key=0, style=solid];
m16_663 -> m16_536  [key=2, style=dotted];
m16_663 -> m16_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_663 -> m16_674  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_663 -> m16_665  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_663 -> m16_666  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_699 -> m16_46  [key=2, style=dotted];
m16_699 -> m16_700  [key=0, style=solid];
m16_699 -> m16_536  [key=2, style=dotted];
m16_699 -> m16_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_699 -> m16_710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_699 -> m16_701  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_699 -> m16_702  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_734 -> m16_46  [key=2, style=dotted];
m16_734 -> m16_735  [key=0, style=solid];
m16_734 -> m16_536  [key=2, style=dotted];
m16_734 -> m16_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_734 -> m16_745  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_734 -> m16_736  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_734 -> m16_737  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_769 -> m16_46  [key=2, style=dotted];
m16_769 -> m16_770  [key=0, style=solid];
m16_769 -> m16_536  [key=2, style=dotted];
m16_769 -> m16_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_769 -> m16_779  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_769 -> m16_771  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_803 -> m16_46  [key=2, style=dotted];
m16_803 -> m16_804  [key=0, style=solid];
m16_803 -> m16_536  [key=2, style=dotted];
m16_803 -> m16_810  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_803 -> m16_813  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_803 -> m16_805  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_837 -> m16_46  [key=2, style=dotted];
m16_837 -> m16_838  [key=0, style=solid];
m16_837 -> m16_536  [key=2, style=dotted];
m16_837 -> m16_844  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_837 -> m16_847  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_837 -> m16_839  [color=darkseagreen4, key=1, label=records, style=dashed];
m16_217 -> m16_47  [key=2, style=dotted];
m16_217 -> m16_218  [key=0, style=solid];
m16_217 -> m16_13  [key=2, style=dotted];
m16_260 -> m16_47  [key=2, style=dotted];
m16_260 -> m16_261  [key=0, style=solid];
m16_260 -> m16_13  [key=2, style=dotted];
m16_286 -> m16_47  [key=2, style=dotted];
m16_286 -> m16_287  [key=0, style=solid];
m16_286 -> m16_13  [key=2, style=dotted];
m16_298 -> m16_47  [key=2, style=dotted];
m16_298 -> m16_299  [key=0, style=solid];
m16_298 -> m16_13  [key=2, style=dotted];
m16_336 -> m16_47  [key=2, style=dotted];
m16_336 -> m16_337  [key=0, style=solid];
m16_336 -> m16_13  [key=2, style=dotted];
m16_349 -> m16_47  [key=2, style=dotted];
m16_349 -> m16_350  [key=0, style=solid];
m16_349 -> m16_13  [key=2, style=dotted];
m16_361 -> m16_47  [key=2, style=dotted];
m16_361 -> m16_362  [key=0, style=solid];
m16_361 -> m16_13  [key=2, style=dotted];
m16_386 -> m16_47  [key=2, style=dotted];
m16_386 -> m16_387  [key=0, style=solid];
m16_386 -> m16_13  [key=2, style=dotted];
m16_398 -> m16_47  [key=2, style=dotted];
m16_398 -> m16_399  [key=0, style=solid];
m16_398 -> m16_13  [key=2, style=dotted];
m16_412 -> m16_47  [key=2, style=dotted];
m16_412 -> m16_413  [key=0, style=solid];
m16_412 -> m16_13  [key=2, style=dotted];
m16_424 -> m16_47  [key=2, style=dotted];
m16_424 -> m16_425  [key=0, style=solid];
m16_424 -> m16_13  [key=2, style=dotted];
m16_455 -> m16_47  [key=2, style=dotted];
m16_455 -> m16_456  [key=0, style=solid];
m16_455 -> m16_13  [key=2, style=dotted];
m16_469 -> m16_47  [key=2, style=dotted];
m16_469 -> m16_470  [key=0, style=solid];
m16_469 -> m16_13  [key=2, style=dotted];
m16_481 -> m16_47  [key=2, style=dotted];
m16_481 -> m16_482  [key=0, style=solid];
m16_481 -> m16_13  [key=2, style=dotted];
m16_493 -> m16_47  [key=2, style=dotted];
m16_493 -> m16_494  [key=0, style=solid];
m16_493 -> m16_13  [key=2, style=dotted];
m16_565 -> m16_47  [key=2, style=dotted];
m16_565 -> m16_566  [key=0, style=solid];
m16_565 -> m16_13  [key=2, style=dotted];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_118  [key=2, style=dotted];
m16_134 -> m16_48  [key=2, style=dotted];
m16_134 -> m16_19  [key=2, style=dotted];
m16_134 -> m16_135  [key=0, style=solid];
m16_91 -> m16_19  [key=2, style=dotted];
m16_91 -> m16_92  [key=0, style=solid];
m16_135 -> m16_19  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_136 -> m16_19  [key=2, style=dotted];
m16_136 -> m16_137  [key=0, style=solid];
m16_138 -> m16_19  [key=2, style=dotted];
m16_138 -> m16_139  [key=0, style=solid];
m16_186 -> m16_19  [key=2, style=dotted];
m16_186 -> m16_187  [key=0, style=solid];
m16_187 -> m16_19  [key=2, style=dotted];
m16_187 -> m16_188  [key=0, style=solid];
m16_188 -> m16_19  [key=2, style=dotted];
m16_188 -> m16_189  [key=0, style=solid];
m16_200 -> m16_19  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_201 -> m16_19  [key=2, style=dotted];
m16_201 -> m16_202  [key=0, style=solid];
m16_218 -> m16_19  [key=2, style=dotted];
m16_218 -> m16_219  [key=0, style=solid];
m16_230 -> m16_19  [key=2, style=dotted];
m16_230 -> m16_231  [key=0, style=solid];
m16_231 -> m16_19  [key=2, style=dotted];
m16_231 -> m16_232  [key=0, style=solid];
m16_232 -> m16_19  [key=2, style=dotted];
m16_232 -> m16_233  [key=0, style=solid];
m16_244 -> m16_19  [key=2, style=dotted];
m16_244 -> m16_245  [key=0, style=solid];
m16_245 -> m16_19  [key=2, style=dotted];
m16_245 -> m16_246  [key=0, style=solid];
m16_261 -> m16_19  [key=2, style=dotted];
m16_261 -> m16_262  [key=0, style=solid];
m16_273 -> m16_19  [key=2, style=dotted];
m16_273 -> m16_274  [key=0, style=solid];
m16_274 -> m16_19  [key=2, style=dotted];
m16_274 -> m16_275  [key=0, style=solid];
m16_275 -> m16_19  [key=2, style=dotted];
m16_275 -> m16_276  [key=0, style=solid];
m16_287 -> m16_19  [key=2, style=dotted];
m16_287 -> m16_288  [key=0, style=solid];
m16_299 -> m16_19  [key=2, style=dotted];
m16_299 -> m16_300  [key=0, style=solid];
m16_311 -> m16_19  [key=2, style=dotted];
m16_311 -> m16_312  [key=0, style=solid];
m16_312 -> m16_19  [key=2, style=dotted];
m16_312 -> m16_313  [key=0, style=solid];
m16_313 -> m16_19  [key=2, style=dotted];
m16_313 -> m16_314  [key=0, style=solid];
m16_325 -> m16_19  [key=2, style=dotted];
m16_325 -> m16_326  [key=0, style=solid];
m16_337 -> m16_19  [key=2, style=dotted];
m16_337 -> m16_338  [key=0, style=solid];
m16_350 -> m16_19  [key=2, style=dotted];
m16_350 -> m16_351  [key=0, style=solid];
m16_362 -> m16_19  [key=2, style=dotted];
m16_362 -> m16_363  [key=0, style=solid];
m16_374 -> m16_19  [key=2, style=dotted];
m16_374 -> m16_375  [key=0, style=solid];
m16_375 -> m16_19  [key=2, style=dotted];
m16_375 -> m16_376  [key=0, style=solid];
m16_387 -> m16_19  [key=2, style=dotted];
m16_387 -> m16_388  [key=0, style=solid];
m16_399 -> m16_19  [key=2, style=dotted];
m16_399 -> m16_400  [key=0, style=solid];
m16_413 -> m16_19  [key=2, style=dotted];
m16_413 -> m16_414  [key=0, style=solid];
m16_425 -> m16_19  [key=2, style=dotted];
m16_425 -> m16_426  [key=0, style=solid];
m16_437 -> m16_19  [key=2, style=dotted];
m16_437 -> m16_438  [key=0, style=solid];
m16_438 -> m16_19  [key=2, style=dotted];
m16_438 -> m16_439  [key=0, style=solid];
m16_439 -> m16_19  [key=2, style=dotted];
m16_439 -> m16_440  [key=0, style=solid];
m16_456 -> m16_19  [key=2, style=dotted];
m16_456 -> m16_457  [key=0, style=solid];
m16_470 -> m16_19  [key=2, style=dotted];
m16_470 -> m16_471  [key=0, style=solid];
m16_482 -> m16_19  [key=2, style=dotted];
m16_482 -> m16_483  [key=0, style=solid];
m16_494 -> m16_19  [key=2, style=dotted];
m16_494 -> m16_495  [key=0, style=solid];
m16_505 -> m16_19  [key=2, style=dotted];
m16_505 -> m16_506  [key=0, style=solid];
m16_519 -> m16_19  [key=2, style=dotted];
m16_519 -> m16_520  [key=0, style=solid];
m16_533 -> m16_19  [key=2, style=dotted];
m16_533 -> m16_534  [key=0, style=solid];
m16_534 -> m16_19  [key=2, style=dotted];
m16_534 -> m16_535  [key=0, style=solid];
m16_566 -> m16_19  [key=2, style=dotted];
m16_566 -> m16_567  [key=0, style=solid];
m16_579 -> m16_19  [key=2, style=dotted];
m16_579 -> m16_580  [key=0, style=solid];
m16_594 -> m16_19  [key=2, style=dotted];
m16_594 -> m16_595  [key=0, style=solid];
m16_609 -> m16_19  [key=2, style=dotted];
m16_609 -> m16_610  [key=0, style=solid];
m16_635 -> m16_19  [key=2, style=dotted];
m16_635 -> m16_636  [key=0, style=solid];
m16_646 -> m16_19  [key=2, style=dotted];
m16_646 -> m16_647  [key=0, style=solid];
m16_682 -> m16_19  [key=2, style=dotted];
m16_682 -> m16_683  [key=0, style=solid];
m16_718 -> m16_19  [key=2, style=dotted];
m16_718 -> m16_719  [key=0, style=solid];
m16_753 -> m16_19  [key=2, style=dotted];
m16_753 -> m16_754  [key=0, style=solid];
m16_787 -> m16_19  [key=2, style=dotted];
m16_787 -> m16_788  [key=0, style=solid];
m16_821 -> m16_19  [key=2, style=dotted];
m16_821 -> m16_822  [key=0, style=solid];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_73  [key=2, style=dotted];
m16_44 -> m16_54  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_69 -> m16_54  [key=2, style=dotted];
m16_69 -> m16_70  [key=0, style=solid];
m16_131 -> m16_54  [key=2, style=dotted];
m16_131 -> m16_132  [key=0, style=solid];
m16_132 -> m16_54  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_666 -> m16_54  [key=2, style=dotted];
m16_666 -> m16_667  [key=0, style=solid];
m16_702 -> m16_54  [key=2, style=dotted];
m16_702 -> m16_703  [key=0, style=solid];
m16_737 -> m16_54  [key=2, style=dotted];
m16_737 -> m16_738  [key=0, style=solid];
m16_770 -> m16_54  [key=2, style=dotted];
m16_770 -> m16_771  [key=0, style=solid];
m16_804 -> m16_54  [key=2, style=dotted];
m16_804 -> m16_805  [key=0, style=solid];
m16_838 -> m16_54  [key=2, style=dotted];
m16_838 -> m16_839  [key=0, style=solid];
m16_206 -> m16_197  [color=blue, key=0, style=bold];
m16_20 -> m16_21  [key=0, style=solid];
m16_22 -> m16_20  [color=blue, key=0, style=bold];
m16_37 -> m16_40  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_37 -> m16_41  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_37 -> m16_43  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_39  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_55 -> m16_56  [key=0, style=solid];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_51  [key=2, style=dotted];
m16_42 -> m16_52  [key=2, style=dotted];
m16_42 -> m16_53  [key=2, style=dotted];
m16_64 -> m16_67  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_64 -> m16_68  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_64 -> m16_70  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_66  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_74 -> m16_75  [key=0, style=solid];
m16_71 -> m16_73  [key=2, style=dotted];
m16_71 -> m16_72  [key=0, style=solid];
m16_85 -> m16_89  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_85 -> m16_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_103  [key=2, style=dotted];
m16_85 -> m16_87  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_85 -> m16_88  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_6  [key=2, style=dotted];
m16_88 -> n3  [key=2, style=dotted];
m16_88 -> m16_8  [key=2, style=dotted];
m16_88 -> m16_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_115 -> m16_116  [key=0, style=solid];
m16_123 -> m16_129  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_123 -> m16_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_133  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_125 -> m16_129  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_125 -> m16_126  [key=0, style=solid];
m16_125 -> m16_103  [key=2, style=dotted];
m16_125 -> m16_127  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_125 -> m16_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_125 -> m16_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_6  [key=2, style=dotted];
m16_128 -> n3  [key=2, style=dotted];
m16_128 -> m16_8  [key=2, style=dotted];
m16_128 -> m16_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_149 -> m16_150  [key=0, style=solid];
m16_156 -> m16_161  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_156 -> m16_157  [key=0, style=solid];
m16_158 -> m16_160  [color=darkseagreen4, key=1, label=correctProvider, style=dashed];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_5  [key=2, style=dotted];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_6  [key=2, style=dotted];
m16_159 -> m16_8  [key=2, style=dotted];
m16_159 -> m16_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_162 -> m16_163  [key=0, style=solid];
m16_162 -> m16_165  [key=2, style=dotted];
m16_162 -> m16_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_169 -> m16_170  [key=0, style=solid];
m16_183 -> m16_184  [key=0, style=solid];
m16_183 -> m16_185  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_190 -> m16_191  [key=0, style=solid];
m16_208 -> m16_209  [key=0, style=solid];
m16_215 -> m16_216  [key=0, style=solid];
m16_215 -> m16_217  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_220 -> m16_221  [key=0, style=solid];
m16_220 -> m16_222  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_227 -> m16_228  [key=0, style=solid];
m16_227 -> m16_229  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_234 -> m16_235  [key=0, style=solid];
m16_241 -> m16_242  [key=0, style=solid];
m16_241 -> m16_243  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_251 -> m16_252  [key=0, style=solid];
m16_258 -> m16_259  [key=0, style=solid];
m16_258 -> m16_260  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_263 -> m16_264  [key=0, style=solid];
m16_263 -> m16_265  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_270 -> m16_271  [key=0, style=solid];
m16_270 -> m16_272  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_277 -> m16_278  [key=0, style=solid];
m16_284 -> m16_285  [key=0, style=solid];
m16_284 -> m16_286  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_289 -> m16_290  [key=0, style=solid];
m16_289 -> m16_291  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_296 -> m16_297  [key=0, style=solid];
m16_296 -> m16_298  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_301 -> m16_302  [key=0, style=solid];
m16_301 -> m16_303  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_308 -> m16_309  [key=0, style=solid];
m16_308 -> m16_310  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_315 -> m16_316  [key=0, style=solid];
m16_322 -> m16_323  [key=0, style=solid];
m16_322 -> m16_324  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_327 -> m16_328  [key=0, style=solid];
m16_327 -> m16_329  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_334 -> m16_335  [key=0, style=solid];
m16_334 -> m16_336  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_339 -> m16_340  [key=0, style=solid];
m16_339 -> m16_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_347 -> m16_348  [key=0, style=solid];
m16_347 -> m16_349  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_352 -> m16_353  [key=0, style=solid];
m16_352 -> m16_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_359 -> m16_360  [key=0, style=solid];
m16_359 -> m16_361  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_364 -> m16_365  [key=0, style=solid];
m16_364 -> m16_366  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_371 -> m16_372  [key=0, style=solid];
m16_371 -> m16_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_377 -> m16_378  [key=0, style=solid];
m16_384 -> m16_385  [key=0, style=solid];
m16_384 -> m16_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_389 -> m16_390  [key=0, style=solid];
m16_389 -> m16_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_396 -> m16_397  [key=0, style=solid];
m16_396 -> m16_398  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_401 -> m16_402  [key=0, style=solid];
m16_401 -> m16_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_401 -> m16_404  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_410 -> m16_411  [key=0, style=solid];
m16_410 -> m16_412  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_415 -> m16_416  [key=0, style=solid];
m16_415 -> m16_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_422 -> m16_423  [key=0, style=solid];
m16_422 -> m16_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_427 -> m16_428  [key=0, style=solid];
m16_427 -> m16_429  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_434 -> m16_435  [key=0, style=solid];
m16_434 -> m16_436  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_442 -> m16_443  [key=0, style=solid];
m16_442 -> m16_444  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_442 -> m16_445  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_442 -> m16_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_442 -> m16_447  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_453 -> m16_454  [key=0, style=solid];
m16_453 -> m16_455  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_458 -> m16_459  [key=0, style=solid];
m16_458 -> m16_460  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_458 -> m16_461  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_458 -> m16_462  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_467 -> m16_468  [key=0, style=solid];
m16_467 -> m16_469  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_472 -> m16_473  [key=0, style=solid];
m16_472 -> m16_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_479 -> m16_480  [key=0, style=solid];
m16_479 -> m16_481  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_484 -> m16_485  [key=0, style=solid];
m16_484 -> m16_486  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_491 -> m16_492  [key=0, style=solid];
m16_491 -> m16_493  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_496 -> m16_497  [key=0, style=solid];
m16_496 -> m16_498  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m16_503 -> m16_504  [key=0, style=solid];
m16_503 -> m16_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_507 -> m16_508  [key=0, style=solid];
m16_509 -> m16_507  [color=blue, key=0, style=bold];
m16_510 -> m16_511  [key=0, style=solid];
m16_517 -> m16_518  [key=0, style=solid];
m16_517 -> m16_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_521 -> m16_522  [key=0, style=solid];
m16_523 -> m16_521  [color=blue, key=0, style=bold];
m16_524 -> m16_525  [key=0, style=solid];
m16_530 -> m16_531  [key=0, style=solid];
m16_530 -> m16_532  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_537 -> m16_538  [key=0, style=solid];
m16_549 -> m16_550  [key=0, style=solid];
m16_549 -> m16_553  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_551 -> m16_549  [color=blue, key=0, style=bold];
m16_552 -> m16_553  [key=0, style=solid];
m16_554 -> m16_552  [color=blue, key=0, style=bold];
m16_555 -> m16_556  [key=0, style=solid];
m16_562 -> m16_563  [key=0, style=solid];
m16_562 -> m16_564  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_562 -> m16_565  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_568 -> m16_569  [key=0, style=solid];
m16_571 -> m16_572  [key=0, style=solid];
m16_577 -> m16_578  [key=0, style=solid];
m16_577 -> m16_582  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_581 -> m16_582  [key=0, style=solid];
m16_583 -> m16_581  [color=blue, key=0, style=bold];
m16_584 -> m16_585  [key=0, style=solid];
m16_592 -> m16_593  [key=0, style=solid];
m16_592 -> m16_597  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_596 -> m16_597  [key=0, style=solid];
m16_598 -> m16_596  [color=blue, key=0, style=bold];
m16_599 -> m16_600  [key=0, style=solid];
m16_605 -> m16_607  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_605 -> m16_606  [key=0, style=solid];
m16_605 -> m16_608  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_606 -> m16_607  [key=0, style=solid];
m16_606 -> m16_609  [color=darkseagreen4, key=1, label=items, style=dashed];
m16_606 -> m16_587  [key=2, style=dotted];
m16_606 -> m16_612  [color=darkseagreen4, key=1, label=items, style=dashed];
m16_608 -> m16_609  [key=0, style=solid];
m16_608 -> m16_13  [key=2, style=dotted];
m16_611 -> m16_612  [key=0, style=solid];
m16_617 -> m16_618  [key=0, style=solid];
m16_617 -> m16_621  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_619 -> m16_617  [color=blue, key=0, style=bold];
m16_620 -> m16_621  [key=0, style=solid];
m16_622 -> m16_620  [color=blue, key=0, style=bold];
m16_623 -> m16_624  [key=0, style=solid];
m16_631 -> m16_633  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_631 -> m16_634  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_631 -> m16_632  [key=0, style=solid];
m16_632 -> m16_633  [key=0, style=solid];
m16_632 -> m16_637  [key=2, style=dotted];
m16_638 -> m16_639  [key=0, style=solid];
m16_644 -> m16_645  [key=0, style=solid];
m16_644 -> m16_649  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_648 -> m16_649  [key=0, style=solid];
m16_650 -> m16_648  [color=blue, key=0, style=bold];
m16_651 -> m16_652  [key=0, style=solid];
m16_660 -> m16_662  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_660 -> m16_663  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_660 -> m16_661  [key=0, style=solid];
m16_661 -> m16_662  [key=0, style=solid];
m16_661 -> m16_637  [key=2, style=dotted];
m16_668 -> m16_669  [key=0, style=solid];
m16_680 -> m16_681  [key=0, style=solid];
m16_680 -> m16_685  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_684 -> m16_685  [key=0, style=solid];
m16_686 -> m16_684  [color=blue, key=0, style=bold];
m16_687 -> m16_688  [key=0, style=solid];
m16_696 -> m16_698  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_696 -> m16_699  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_696 -> m16_697  [key=0, style=solid];
m16_697 -> m16_698  [key=0, style=solid];
m16_697 -> m16_637  [key=2, style=dotted];
m16_704 -> m16_705  [key=0, style=solid];
m16_716 -> m16_717  [key=0, style=solid];
m16_716 -> m16_721  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_720 -> m16_721  [key=0, style=solid];
m16_722 -> m16_720  [color=blue, key=0, style=bold];
m16_723 -> m16_724  [key=0, style=solid];
m16_731 -> m16_733  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_731 -> m16_734  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_731 -> m16_732  [key=0, style=solid];
m16_732 -> m16_733  [key=0, style=solid];
m16_732 -> m16_637  [key=2, style=dotted];
m16_739 -> m16_740  [key=0, style=solid];
m16_751 -> m16_752  [key=0, style=solid];
m16_751 -> m16_756  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_755 -> m16_756  [key=0, style=solid];
m16_757 -> m16_755  [color=blue, key=0, style=bold];
m16_758 -> m16_759  [key=0, style=solid];
m16_766 -> m16_768  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_766 -> m16_769  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_766 -> m16_767  [key=0, style=solid];
m16_767 -> m16_768  [key=0, style=solid];
m16_767 -> m16_52  [key=2, style=dotted];
m16_767 -> m16_637  [key=2, style=dotted];
m16_773 -> m16_774  [key=0, style=solid];
m16_785 -> m16_786  [key=0, style=solid];
m16_785 -> m16_790  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_789 -> m16_790  [key=0, style=solid];
m16_791 -> m16_789  [color=blue, key=0, style=bold];
m16_792 -> m16_793  [key=0, style=solid];
m16_800 -> m16_802  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_800 -> m16_803  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_800 -> m16_801  [key=0, style=solid];
m16_801 -> m16_802  [key=0, style=solid];
m16_801 -> m16_52  [key=2, style=dotted];
m16_801 -> m16_637  [key=2, style=dotted];
m16_807 -> m16_808  [key=0, style=solid];
m16_819 -> m16_820  [key=0, style=solid];
m16_819 -> m16_824  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_823 -> m16_824  [key=0, style=solid];
m16_825 -> m16_823  [color=blue, key=0, style=bold];
m16_826 -> m16_827  [key=0, style=solid];
m16_834 -> m16_836  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_834 -> m16_837  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_834 -> m16_835  [key=0, style=solid];
m16_835 -> m16_836  [key=0, style=solid];
m16_835 -> m16_52  [key=2, style=dotted];
m16_835 -> m16_637  [key=2, style=dotted];
m16_841 -> m16_842  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_58  [key=2, style=dotted];
m16_56 -> m16_59  [key=2, style=dotted];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_77  [key=2, style=dotted];
m16_150 -> m16_151  [key=0, style=solid];
m16_150 -> m16_152  [key=2, style=dotted];
m16_137 -> m16_73  [key=2, style=dotted];
m16_137 -> m16_138  [key=0, style=solid];
m16_202 -> m16_73  [key=2, style=dotted];
m16_202 -> m16_203  [key=0, style=solid];
m16_203 -> m16_204  [key=0, style=solid];
m16_203 -> m16_205  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m16_246 -> m16_73  [key=2, style=dotted];
m16_246 -> m16_247  [key=0, style=solid];
m16_247 -> m16_248  [key=0, style=solid];
m16_247 -> m16_249  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m16_540 -> m16_541  [key=0, style=solid];
m16_543 -> m16_544  [key=0, style=solid];
m16_664 -> m16_665  [key=0, style=solid];
m16_664 -> m16_51  [key=2, style=dotted];
m16_664 -> m16_53  [key=2, style=dotted];
m16_671 -> m16_672  [key=0, style=solid];
m16_674 -> m16_675  [key=0, style=solid];
m16_665 -> m16_666  [key=0, style=solid];
m16_665 -> m16_51  [key=2, style=dotted];
m16_665 -> m16_53  [key=2, style=dotted];
m16_700 -> m16_701  [key=0, style=solid];
m16_700 -> m16_51  [key=2, style=dotted];
m16_700 -> m16_53  [key=2, style=dotted];
m16_707 -> m16_708  [key=0, style=solid];
m16_710 -> m16_711  [key=0, style=solid];
m16_701 -> m16_702  [key=0, style=solid];
m16_701 -> m16_51  [key=2, style=dotted];
m16_701 -> m16_53  [key=2, style=dotted];
m16_735 -> m16_736  [key=0, style=solid];
m16_735 -> m16_51  [key=2, style=dotted];
m16_735 -> m16_53  [key=2, style=dotted];
m16_742 -> m16_743  [key=0, style=solid];
m16_745 -> m16_746  [key=0, style=solid];
m16_736 -> m16_737  [key=0, style=solid];
m16_736 -> m16_51  [key=2, style=dotted];
m16_736 -> m16_53  [key=2, style=dotted];
m16_776 -> m16_777  [key=0, style=solid];
m16_779 -> m16_780  [key=0, style=solid];
m16_771 -> m16_73  [key=2, style=dotted];
m16_771 -> m16_772  [key=0, style=solid];
m16_810 -> m16_811  [key=0, style=solid];
m16_813 -> m16_814  [key=0, style=solid];
m16_805 -> m16_73  [key=2, style=dotted];
m16_805 -> m16_806  [key=0, style=solid];
m16_844 -> m16_845  [key=0, style=solid];
m16_847 -> m16_848  [key=0, style=solid];
m16_839 -> m16_73  [key=2, style=dotted];
m16_839 -> m16_840  [key=0, style=solid];
m16_117 -> m16_115  [color=blue, key=0, style=bold];
m16_139 -> m16_123  [color=blue, key=0, style=bold];
m16_189 -> m16_183  [color=blue, key=0, style=bold];
m16_219 -> m16_215  [color=blue, key=0, style=bold];
m16_233 -> m16_227  [color=blue, key=0, style=bold];
m16_262 -> m16_258  [color=blue, key=0, style=bold];
m16_276 -> m16_270  [color=blue, key=0, style=bold];
m16_288 -> m16_284  [color=blue, key=0, style=bold];
m16_300 -> m16_296  [color=blue, key=0, style=bold];
m16_314 -> m16_308  [color=blue, key=0, style=bold];
m16_326 -> m16_322  [color=blue, key=0, style=bold];
m16_338 -> m16_334  [color=blue, key=0, style=bold];
m16_351 -> m16_347  [color=blue, key=0, style=bold];
m16_363 -> m16_359  [color=blue, key=0, style=bold];
m16_376 -> m16_371  [color=blue, key=0, style=bold];
m16_388 -> m16_384  [color=blue, key=0, style=bold];
m16_400 -> m16_396  [color=blue, key=0, style=bold];
m16_414 -> m16_410  [color=blue, key=0, style=bold];
m16_426 -> m16_422  [color=blue, key=0, style=bold];
m16_440 -> m16_434  [color=blue, key=0, style=bold];
m16_457 -> m16_453  [color=blue, key=0, style=bold];
m16_471 -> m16_467  [color=blue, key=0, style=bold];
m16_483 -> m16_479  [color=blue, key=0, style=bold];
m16_495 -> m16_491  [color=blue, key=0, style=bold];
m16_506 -> m16_503  [color=blue, key=0, style=bold];
m16_520 -> m16_517  [color=blue, key=0, style=bold];
m16_535 -> m16_530  [color=blue, key=0, style=bold];
m16_567 -> m16_562  [color=blue, key=0, style=bold];
m16_580 -> m16_577  [color=blue, key=0, style=bold];
m16_595 -> m16_592  [color=blue, key=0, style=bold];
m16_610 -> m16_605  [color=blue, key=0, style=bold];
m16_636 -> m16_631  [color=blue, key=0, style=bold];
m16_647 -> m16_644  [color=blue, key=0, style=bold];
m16_683 -> m16_680  [color=blue, key=0, style=bold];
m16_719 -> m16_716  [color=blue, key=0, style=bold];
m16_754 -> m16_751  [color=blue, key=0, style=bold];
m16_788 -> m16_785  [color=blue, key=0, style=bold];
m16_822 -> m16_819  [color=blue, key=0, style=bold];
m16_45 -> m16_37  [color=blue, key=0, style=bold];
m16_667 -> m16_660  [color=blue, key=0, style=bold];
m16_703 -> m16_696  [color=blue, key=0, style=bold];
m16_738 -> m16_731  [color=blue, key=0, style=bold];
m16_205 -> m16_206  [key=0, style=solid];
m16_205 -> m16_207  [key=2, style=dotted];
m16_205 -> m16_53  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_13  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_14  [key=2, style=dotted];
m16_167 -> m16_13  [key=2, style=dotted];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_14  [key=2, style=dotted];
m16_29 -> m16_23  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_31  [key=2, style=dotted];
m16_57 -> m16_55  [color=blue, key=0, style=bold];
m16_72 -> m16_64  [color=blue, key=0, style=bold];
m16_76 -> m16_74  [color=blue, key=0, style=bold];
m16_86 -> m16_6  [key=2, style=dotted];
m16_86 -> m16_8  [key=2, style=dotted];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_6  [key=2, style=dotted];
m16_87 -> m16_8  [key=2, style=dotted];
m16_87 -> m16_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_111 -> m16_112  [key=0, style=solid];
m16_126 -> m16_6  [key=2, style=dotted];
m16_126 -> m16_8  [key=2, style=dotted];
m16_126 -> m16_127  [key=0, style=solid];
m16_126 -> m16_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_6  [key=2, style=dotted];
m16_127 -> m16_8  [key=2, style=dotted];
m16_127 -> m16_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_146 -> m16_147  [key=0, style=solid];
m16_151 -> m16_149  [color=blue, key=0, style=bold];
m16_163 -> m16_156  [color=blue, key=0, style=bold];
m16_157 -> m16_158  [key=0, style=solid];
m16_157 -> m16_159  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m16_157 -> m16_162  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m16_157 -> m16_7  [key=2, style=dotted];
m16_166 -> m16_167  [key=0, style=solid];
m16_173 -> m16_174  [key=0, style=solid];
m16_171 -> m16_169  [color=blue, key=0, style=bold];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> m16_172  [key=2, style=dotted];
m16_192 -> m16_190  [color=blue, key=0, style=bold];
m16_191 -> m16_192  [key=0, style=solid];
m16_191 -> m16_193  [key=2, style=dotted];
m16_210 -> m16_208  [color=blue, key=0, style=bold];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_58  [key=2, style=dotted];
m16_209 -> m16_211  [key=2, style=dotted];
m16_223 -> m16_220  [color=blue, key=0, style=bold];
m16_221 -> m16_222  [key=0, style=solid];
m16_221 -> m16_193  [key=2, style=dotted];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_193  [key=2, style=dotted];
m16_236 -> m16_234  [color=blue, key=0, style=bold];
m16_235 -> m16_236  [key=0, style=solid];
m16_235 -> m16_237  [key=2, style=dotted];
m16_250 -> m16_241  [color=blue, key=0, style=bold];
m16_253 -> m16_251  [color=blue, key=0, style=bold];
m16_252 -> m16_253  [key=0, style=solid];
m16_252 -> m16_58  [key=2, style=dotted];
m16_252 -> m16_254  [key=2, style=dotted];
m16_266 -> m16_263  [color=blue, key=0, style=bold];
m16_264 -> m16_265  [key=0, style=solid];
m16_264 -> m16_237  [key=2, style=dotted];
m16_265 -> m16_266  [key=0, style=solid];
m16_265 -> m16_237  [key=2, style=dotted];
m16_279 -> m16_277  [color=blue, key=0, style=bold];
m16_278 -> m16_279  [key=0, style=solid];
m16_278 -> m16_280  [key=2, style=dotted];
m16_292 -> m16_289  [color=blue, key=0, style=bold];
m16_290 -> m16_291  [key=0, style=solid];
m16_290 -> m16_280  [key=2, style=dotted];
m16_291 -> m16_292  [key=0, style=solid];
m16_291 -> m16_280  [key=2, style=dotted];
m16_304 -> m16_301  [color=blue, key=0, style=bold];
m16_302 -> m16_303  [key=0, style=solid];
m16_302 -> m16_280  [key=2, style=dotted];
m16_303 -> m16_304  [key=0, style=solid];
m16_303 -> m16_280  [key=2, style=dotted];
m16_317 -> m16_315  [color=blue, key=0, style=bold];
m16_316 -> m16_317  [key=0, style=solid];
m16_316 -> m16_318  [key=2, style=dotted];
m16_330 -> m16_327  [color=blue, key=0, style=bold];
m16_328 -> m16_329  [key=0, style=solid];
m16_328 -> m16_280  [key=2, style=dotted];
m16_329 -> m16_330  [key=0, style=solid];
m16_329 -> m16_318  [key=2, style=dotted];
m16_342 -> m16_339  [color=blue, key=0, style=bold];
m16_340 -> m16_341  [key=0, style=solid];
m16_340 -> m16_280  [key=2, style=dotted];
m16_341 -> m16_342  [key=0, style=solid];
m16_341 -> m16_343  [key=2, style=dotted];
m16_355 -> m16_352  [color=blue, key=0, style=bold];
m16_353 -> m16_354  [key=0, style=solid];
m16_353 -> m16_280  [key=2, style=dotted];
m16_354 -> m16_355  [key=0, style=solid];
m16_354 -> m16_343  [key=2, style=dotted];
m16_367 -> m16_364  [color=blue, key=0, style=bold];
m16_365 -> m16_366  [key=0, style=solid];
m16_365 -> m16_280  [key=2, style=dotted];
m16_366 -> m16_367  [key=0, style=solid];
m16_366 -> m16_343  [key=2, style=dotted];
m16_379 -> m16_377  [color=blue, key=0, style=bold];
m16_378 -> m16_379  [key=0, style=solid];
m16_378 -> m16_380  [key=2, style=dotted];
m16_392 -> m16_389  [color=blue, key=0, style=bold];
m16_390 -> m16_391  [key=0, style=solid];
m16_390 -> m16_380  [key=2, style=dotted];
m16_391 -> m16_392  [key=0, style=solid];
m16_391 -> m16_380  [key=2, style=dotted];
m16_405 -> m16_401  [color=blue, key=0, style=bold];
m16_402 -> m16_403  [key=0, style=solid];
m16_402 -> m16_380  [key=2, style=dotted];
m16_403 -> m16_404  [key=0, style=solid];
m16_403 -> m16_380  [key=2, style=dotted];
m16_404 -> m16_405  [key=0, style=solid];
m16_404 -> m16_406  [key=2, style=dotted];
m16_418 -> m16_415  [color=blue, key=0, style=bold];
m16_416 -> m16_417  [key=0, style=solid];
m16_416 -> m16_380  [key=2, style=dotted];
m16_417 -> m16_418  [key=0, style=solid];
m16_417 -> m16_406  [key=2, style=dotted];
m16_430 -> m16_427  [color=blue, key=0, style=bold];
m16_428 -> m16_429  [key=0, style=solid];
m16_428 -> m16_380  [key=2, style=dotted];
m16_429 -> m16_430  [key=0, style=solid];
m16_429 -> m16_406  [key=2, style=dotted];
m16_448 -> m16_442  [color=blue, key=0, style=bold];
m16_443 -> m16_444  [key=0, style=solid];
m16_443 -> m16_380  [key=2, style=dotted];
m16_444 -> m16_445  [key=0, style=solid];
m16_444 -> m16_380  [key=2, style=dotted];
m16_445 -> m16_446  [key=0, style=solid];
m16_445 -> m16_380  [key=2, style=dotted];
m16_446 -> m16_447  [key=0, style=solid];
m16_446 -> m16_380  [key=2, style=dotted];
m16_447 -> m16_448  [key=0, style=solid];
m16_447 -> m16_449  [key=2, style=dotted];
m16_463 -> m16_458  [color=blue, key=0, style=bold];
m16_459 -> m16_460  [key=0, style=solid];
m16_459 -> m16_380  [key=2, style=dotted];
m16_460 -> m16_461  [key=0, style=solid];
m16_460 -> m16_380  [key=2, style=dotted];
m16_461 -> m16_462  [key=0, style=solid];
m16_461 -> m16_380  [key=2, style=dotted];
m16_462 -> m16_463  [key=0, style=solid];
m16_462 -> m16_449  [key=2, style=dotted];
m16_475 -> m16_472  [color=blue, key=0, style=bold];
m16_473 -> m16_474  [key=0, style=solid];
m16_473 -> m16_380  [key=2, style=dotted];
m16_474 -> m16_475  [key=0, style=solid];
m16_474 -> m16_449  [key=2, style=dotted];
m16_487 -> m16_484  [color=blue, key=0, style=bold];
m16_485 -> m16_486  [key=0, style=solid];
m16_485 -> m16_380  [key=2, style=dotted];
m16_486 -> m16_487  [key=0, style=solid];
m16_486 -> m16_449  [key=2, style=dotted];
m16_499 -> m16_496  [color=blue, key=0, style=bold];
m16_497 -> m16_498  [key=0, style=solid];
m16_497 -> m16_380  [key=2, style=dotted];
m16_498 -> m16_499  [key=0, style=solid];
m16_498 -> m16_449  [key=2, style=dotted];
m16_512 -> m16_510  [color=blue, key=0, style=bold];
m16_511 -> n3  [key=2, style=dotted];
m16_511 -> m16_512  [key=0, style=solid];
m16_511 -> m16_513  [key=2, style=dotted];
m16_526 -> m16_524  [color=blue, key=0, style=bold];
m16_525 -> m16_526  [key=0, style=solid];
m16_525 -> m16_513  [key=2, style=dotted];
m16_539 -> m16_537  [color=blue, key=0, style=bold];
m16_538 -> n3  [key=2, style=dotted];
m16_538 -> m16_539  [key=0, style=solid];
m16_538 -> m16_513  [key=2, style=dotted];
m16_557 -> m16_555  [color=blue, key=0, style=bold];
m16_556 -> m16_557  [key=0, style=solid];
m16_556 -> m16_558  [key=2, style=dotted];
m16_570 -> m16_568  [color=blue, key=0, style=bold];
m16_569 -> n3  [key=2, style=dotted];
m16_569 -> m16_570  [key=0, style=solid];
m16_569 -> m16_513  [key=2, style=dotted];
m16_573 -> m16_571  [color=blue, key=0, style=bold];
m16_572 -> m16_573  [key=0, style=solid];
m16_572 -> m16_558  [key=2, style=dotted];
m16_586 -> m16_584  [color=blue, key=0, style=bold];
m16_585 -> m16_586  [key=0, style=solid];
m16_585 -> m16_587  [key=2, style=dotted];
m16_585 -> m16_588  [key=2, style=dotted];
m16_601 -> m16_599  [color=blue, key=0, style=bold];
m16_600 -> m16_601  [key=0, style=solid];
m16_600 -> m16_588  [key=2, style=dotted];
m16_612 -> m16_613  [key=0, style=solid];
m16_612 -> m16_588  [key=2, style=dotted];
m16_613 -> m16_611  [color=blue, key=0, style=bold];
m16_625 -> m16_623  [color=blue, key=0, style=bold];
m16_624 -> m16_625  [key=0, style=solid];
m16_624 -> m16_626  [key=2, style=dotted];
m16_640 -> m16_638  [color=blue, key=0, style=bold];
m16_639 -> m16_640  [key=0, style=solid];
m16_639 -> m16_626  [key=2, style=dotted];
m16_653 -> m16_651  [color=blue, key=0, style=bold];
m16_652 -> m16_653  [key=0, style=solid];
m16_652 -> m16_654  [key=2, style=dotted];
m16_652 -> m16_655  [key=2, style=dotted];
m16_670 -> m16_668  [color=blue, key=0, style=bold];
m16_669 -> m16_670  [key=0, style=solid];
m16_669 -> m16_654  [key=2, style=dotted];
m16_669 -> m16_655  [key=2, style=dotted];
m16_689 -> m16_687  [color=blue, key=0, style=bold];
m16_688 -> m16_689  [key=0, style=solid];
m16_688 -> m16_690  [key=2, style=dotted];
m16_688 -> m16_691  [key=2, style=dotted];
m16_706 -> m16_704  [color=blue, key=0, style=bold];
m16_705 -> m16_706  [key=0, style=solid];
m16_705 -> m16_654  [key=2, style=dotted];
m16_705 -> m16_691  [key=2, style=dotted];
m16_725 -> m16_723  [color=blue, key=0, style=bold];
m16_724 -> m16_725  [key=0, style=solid];
m16_724 -> m16_690  [key=2, style=dotted];
m16_724 -> m16_726  [key=2, style=dotted];
m16_741 -> m16_739  [color=blue, key=0, style=bold];
m16_740 -> m16_741  [key=0, style=solid];
m16_740 -> m16_654  [key=2, style=dotted];
m16_740 -> m16_726  [key=2, style=dotted];
m16_760 -> m16_758  [color=blue, key=0, style=bold];
m16_759 -> m16_760  [key=0, style=solid];
m16_759 -> m16_761  [key=2, style=dotted];
m16_772 -> m16_766  [color=blue, key=0, style=bold];
m16_775 -> m16_773  [color=blue, key=0, style=bold];
m16_774 -> m16_775  [key=0, style=solid];
m16_774 -> m16_761  [key=2, style=dotted];
m16_794 -> m16_792  [color=blue, key=0, style=bold];
m16_793 -> m16_794  [key=0, style=solid];
m16_793 -> m16_795  [key=2, style=dotted];
m16_806 -> m16_800  [color=blue, key=0, style=bold];
m16_809 -> m16_807  [color=blue, key=0, style=bold];
m16_808 -> m16_809  [key=0, style=solid];
m16_808 -> m16_795  [key=2, style=dotted];
m16_828 -> m16_826  [color=blue, key=0, style=bold];
m16_827 -> m16_828  [key=0, style=solid];
m16_827 -> m16_829  [key=2, style=dotted];
m16_840 -> m16_834  [color=blue, key=0, style=bold];
m16_843 -> m16_841  [color=blue, key=0, style=bold];
m16_842 -> m16_843  [key=0, style=solid];
m16_842 -> m16_829  [key=2, style=dotted];
m16_204 -> m16_205  [key=0, style=solid];
m16_204 -> m16_53  [key=2, style=dotted];
m16_204 -> m16_207  [key=2, style=dotted];
m16_248 -> m16_53  [key=2, style=dotted];
m16_248 -> m16_249  [key=0, style=solid];
m16_248 -> m16_207  [key=2, style=dotted];
m16_249 -> m16_53  [key=2, style=dotted];
m16_249 -> m16_250  [key=0, style=solid];
m16_249 -> m16_207  [key=2, style=dotted];
m16_542 -> m16_540  [color=blue, key=0, style=bold];
m16_541 -> m16_542  [key=0, style=solid];
m16_545 -> m16_543  [color=blue, key=0, style=bold];
m16_544 -> m16_545  [key=0, style=solid];
m16_673 -> m16_671  [color=blue, key=0, style=bold];
m16_672 -> m16_673  [key=0, style=solid];
m16_676 -> m16_674  [color=blue, key=0, style=bold];
m16_675 -> m16_676  [key=0, style=solid];
m16_709 -> m16_707  [color=blue, key=0, style=bold];
m16_708 -> m16_709  [key=0, style=solid];
m16_712 -> m16_710  [color=blue, key=0, style=bold];
m16_711 -> m16_712  [key=0, style=solid];
m16_744 -> m16_742  [color=blue, key=0, style=bold];
m16_743 -> m16_744  [key=0, style=solid];
m16_747 -> m16_745  [color=blue, key=0, style=bold];
m16_746 -> m16_747  [key=0, style=solid];
m16_778 -> m16_776  [color=blue, key=0, style=bold];
m16_777 -> m16_778  [key=0, style=solid];
m16_781 -> m16_779  [color=blue, key=0, style=bold];
m16_780 -> m16_781  [key=0, style=solid];
m16_812 -> m16_810  [color=blue, key=0, style=bold];
m16_811 -> m16_812  [key=0, style=solid];
m16_815 -> m16_813  [color=blue, key=0, style=bold];
m16_814 -> m16_815  [key=0, style=solid];
m16_846 -> m16_844  [color=blue, key=0, style=bold];
m16_845 -> m16_846  [key=0, style=solid];
m16_849 -> m16_847  [color=blue, key=0, style=bold];
m16_848 -> m16_849  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_12 -> m16_10  [color=blue, key=0, style=bold];
m16_168 -> m16_166  [color=blue, key=0, style=bold];
m16_30 -> m16_28  [color=blue, key=0, style=bold];
m16_105 -> m16_106  [key=0, style=solid];
m16_108 -> m16_109  [key=0, style=solid];
m16_113 -> m16_111  [color=blue, key=0, style=bold];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_114  [key=2, style=dotted];
m16_140 -> m16_141  [key=0, style=solid];
m16_148 -> m16_146  [color=blue, key=0, style=bold];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_114  [key=2, style=dotted];
m16_175 -> m16_173  [color=blue, key=0, style=bold];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_176  [key=2, style=dotted];
m16_107 -> m16_105  [color=blue, key=0, style=bold];
m16_106 -> m16_107  [key=0, style=solid];
m16_110 -> m16_108  [color=blue, key=0, style=bold];
m16_109 -> m16_110  [key=0, style=solid];
m16_142 -> m16_140  [color=blue, key=0, style=bold];
m16_141 -> m16_142  [key=0, style=solid];
m16_144 -> m16_145  [key=0, style=solid];
m16_145 -> m16_143  [color=blue, key=0, style=bold];
m16_381 -> m16_382  [key=0, style=solid];
m16_382 -> m16_36  [key=2, style=dotted];
m16_382 -> m16_383  [key=0, style=solid];
m16_382 -> m16_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_383 -> m16_381  [color=blue, key=0, style=bold];
m16_368 -> m16_369  [key=0, style=solid];
m16_369 -> m16_36  [key=2, style=dotted];
m16_369 -> m16_370  [key=0, style=solid];
m16_369 -> m16_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_370 -> m16_368  [color=blue, key=0, style=bold];
m16_602 -> m16_603  [key=0, style=solid];
m16_603 -> m16_36  [key=2, style=dotted];
m16_603 -> m16_604  [key=0, style=solid];
m16_603 -> m16_605  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_604 -> m16_602  [color=blue, key=0, style=bold];
m16_796 -> m16_797  [key=0, style=solid];
m16_798 -> m16_36  [key=2, style=dotted];
m16_798 -> m16_799  [key=0, style=solid];
m16_798 -> m16_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_797 -> m16_798  [key=0, style=solid];
m16_797 -> m16_801  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_799 -> m16_796  [color=blue, key=0, style=bold];
m16_356 -> m16_357  [key=0, style=solid];
m16_357 -> m16_36  [key=2, style=dotted];
m16_357 -> m16_358  [key=0, style=solid];
m16_357 -> m16_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_358 -> m16_356  [color=blue, key=0, style=bold];
m16_713 -> m16_714  [key=0, style=solid];
m16_714 -> m16_36  [key=2, style=dotted];
m16_714 -> m16_715  [key=0, style=solid];
m16_714 -> m16_716  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_715 -> m16_713  [color=blue, key=0, style=bold];
m16_224 -> m16_225  [key=0, style=solid];
m16_225 -> m16_36  [key=2, style=dotted];
m16_225 -> m16_226  [key=0, style=solid];
m16_225 -> m16_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_226 -> m16_224  [color=blue, key=0, style=bold];
m16_488 -> m16_489  [key=0, style=solid];
m16_489 -> m16_36  [key=2, style=dotted];
m16_489 -> m16_490  [key=0, style=solid];
m16_489 -> m16_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_490 -> m16_488  [color=blue, key=0, style=bold];
m16_24 -> m16_25  [key=0, style=solid];
m16_26 -> m16_19  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_13  [key=2, style=dotted];
m16_25 -> m16_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_27 -> m16_24  [color=blue, key=0, style=bold];
m16_331 -> m16_332  [key=0, style=solid];
m16_332 -> m16_36  [key=2, style=dotted];
m16_332 -> m16_333  [key=0, style=solid];
m16_332 -> m16_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_333 -> m16_331  [color=blue, key=0, style=bold];
m16_15 -> m16_16  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_13  [key=2, style=dotted];
m16_16 -> m16_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_17 -> m16_19  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_18 -> m16_15  [color=blue, key=0, style=bold];
m16_305 -> m16_306  [key=0, style=solid];
m16_306 -> m16_36  [key=2, style=dotted];
m16_306 -> m16_307  [key=0, style=solid];
m16_306 -> m16_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_307 -> m16_305  [color=blue, key=0, style=bold];
m16_238 -> m16_239  [key=0, style=solid];
m16_239 -> m16_36  [key=2, style=dotted];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_240 -> m16_238  [color=blue, key=0, style=bold];
m16_500 -> m16_501  [key=0, style=solid];
m16_501 -> m16_36  [key=2, style=dotted];
m16_501 -> m16_502  [key=0, style=solid];
m16_501 -> m16_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_502 -> m16_500  [color=blue, key=0, style=bold];
m16_727 -> m16_728  [key=0, style=solid];
m16_729 -> m16_36  [key=2, style=dotted];
m16_729 -> m16_730  [key=0, style=solid];
m16_729 -> m16_731  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_728 -> m16_729  [key=0, style=solid];
m16_728 -> m16_732  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_730 -> m16_727  [color=blue, key=0, style=bold];
m16_32 -> m16_33  [key=0, style=solid];
m16_34 -> m16_36  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_33 -> m16_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_35 -> m16_32  [color=blue, key=0, style=bold];
m16_762 -> m16_763  [key=0, style=solid];
m16_764 -> m16_36  [key=2, style=dotted];
m16_764 -> m16_765  [key=0, style=solid];
m16_764 -> m16_766  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_763 -> m16_764  [key=0, style=solid];
m16_763 -> m16_767  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_765 -> m16_762  [color=blue, key=0, style=bold];
m16_180 -> m16_181  [key=0, style=solid];
m16_181 -> m16_36  [key=2, style=dotted];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_182 -> m16_180  [color=blue, key=0, style=bold];
m16_49 -> m16_855  [key=0, style=solid];
m16_49 -> m16_856  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m16_855 -> m16_856  [key=0, style=solid];
m16_855 -> m16_23  [key=2, style=dotted];
m16_855 -> m16_857  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_856 -> m16_857  [key=0, style=solid];
m16_856 -> m16_854  [key=2, style=dotted];
m16_857 -> m16_858  [key=0, style=solid];
m16_857 -> m16_859  [key=2, style=dotted];
m16_858 -> m16_49  [color=blue, key=0, style=bold];
m16_6 -> m16_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m16_6 -> m16_4  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateContext", style=dashed];
m16_850 -> m16_852  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m16_850 -> m16_851  [key=0, style=solid];
m16_852 -> m16_854  [key=2, style=dotted];
m16_852 -> m16_853  [key=0, style=solid];
m16_851 -> m16_31  [key=2, style=dotted];
m16_851 -> m16_852  [key=0, style=solid];
m16_853 -> m16_850  [color=blue, key=0, style=bold];
m16_656 -> m16_657  [key=0, style=solid];
m16_658 -> m16_36  [key=2, style=dotted];
m16_658 -> m16_659  [key=0, style=solid];
m16_658 -> m16_660  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_657 -> m16_658  [key=0, style=solid];
m16_657 -> m16_661  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_659 -> m16_656  [color=blue, key=0, style=bold];
m16_464 -> m16_465  [key=0, style=solid];
m16_465 -> m16_36  [key=2, style=dotted];
m16_465 -> m16_466  [key=0, style=solid];
m16_465 -> m16_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_466 -> m16_464  [color=blue, key=0, style=bold];
m16_212 -> m16_213  [key=0, style=solid];
m16_213 -> m16_36  [key=2, style=dotted];
m16_213 -> m16_214  [key=0, style=solid];
m16_213 -> m16_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_214 -> m16_212  [color=blue, key=0, style=bold];
m16_748 -> m16_749  [key=0, style=solid];
m16_749 -> m16_36  [key=2, style=dotted];
m16_749 -> m16_750  [key=0, style=solid];
m16_749 -> m16_751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_750 -> m16_748  [color=blue, key=0, style=bold];
m16_450 -> m16_451  [key=0, style=solid];
m16_451 -> m16_36  [key=2, style=dotted];
m16_451 -> m16_452  [key=0, style=solid];
m16_451 -> m16_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_452 -> m16_450  [color=blue, key=0, style=bold];
m16_431 -> m16_432  [key=0, style=solid];
m16_432 -> m16_36  [key=2, style=dotted];
m16_432 -> m16_433  [key=0, style=solid];
m16_432 -> m16_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_433 -> m16_431  [color=blue, key=0, style=bold];
m16_255 -> m16_256  [key=0, style=solid];
m16_256 -> m16_36  [key=2, style=dotted];
m16_256 -> m16_257  [key=0, style=solid];
m16_256 -> m16_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_257 -> m16_255  [color=blue, key=0, style=bold];
m16_281 -> m16_282  [key=0, style=solid];
m16_282 -> m16_36  [key=2, style=dotted];
m16_282 -> m16_283  [key=0, style=solid];
m16_282 -> m16_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_283 -> m16_281  [color=blue, key=0, style=bold];
m16_78 -> m16_79  [key=0, style=solid];
m16_80 -> m16_81  [color=green, key=0, style=solid];
m16_80 -> m16_36  [color=green, key=2, style=dotted];
m16_80 -> m16_82  [color=green, key=1, label="lambda expression", style=dashed];
m16_79 -> m16_80  [color=green, key=0, style=solid];
m16_79 -> m16_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_79 -> m16_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_81 -> m16_78  [color=blue, key=0, style=bold];
m16_60 -> m16_61  [key=0, style=solid];
m16_62 -> m16_36  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_61 -> m16_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_63 -> m16_60  [color=blue, key=0, style=bold];
m16_527 -> m16_528  [key=0, style=solid];
m16_528 -> m16_36  [key=2, style=dotted];
m16_528 -> m16_529  [key=0, style=solid];
m16_528 -> m16_530  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_529 -> m16_527  [color=blue, key=0, style=bold];
m16_574 -> m16_575  [key=0, style=solid];
m16_575 -> m16_36  [key=2, style=dotted];
m16_575 -> m16_576  [key=0, style=solid];
m16_575 -> m16_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_576 -> m16_574  [color=blue, key=0, style=bold];
m16_344 -> m16_345  [key=0, style=solid];
m16_345 -> m16_36  [key=2, style=dotted];
m16_345 -> m16_346  [key=0, style=solid];
m16_345 -> m16_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_346 -> m16_344  [color=blue, key=0, style=bold];
m16_641 -> m16_642  [key=0, style=solid];
m16_642 -> m16_36  [key=2, style=dotted];
m16_642 -> m16_643  [key=0, style=solid];
m16_642 -> m16_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_643 -> m16_641  [color=blue, key=0, style=bold];
m16_677 -> m16_678  [key=0, style=solid];
m16_678 -> m16_36  [key=2, style=dotted];
m16_678 -> m16_679  [key=0, style=solid];
m16_678 -> m16_680  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_679 -> m16_677  [color=blue, key=0, style=bold];
m16_546 -> m16_547  [key=0, style=solid];
m16_547 -> m16_36  [key=2, style=dotted];
m16_547 -> m16_548  [key=0, style=solid];
m16_547 -> m16_549  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_548 -> m16_546  [color=blue, key=0, style=bold];
m16_860 -> m16_80  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_195  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_34  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_62  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_67  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_68  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_89  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_90  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_93  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_121  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_129  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_130  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_160  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_161  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_181  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_184  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_198  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_213  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_225  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_242  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_259  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_271  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_282  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_285  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_297  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_309  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_320  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_332  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_335  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_348  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_357  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_360  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_369  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_372  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_385  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_394  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_397  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_408  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_411  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_420  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_432  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_435  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_451  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_454  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_465  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_468  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_477  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_480  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_489  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_492  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_501  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_504  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_515  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_518  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_522  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_547  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_550  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_553  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_560  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_563  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_564  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_575  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_578  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_582  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_590  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_593  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_597  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_603  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_607  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_615  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_621  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_633  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_645  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_649  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_658  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_678  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_681  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_685  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_694  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_698  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_714  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_717  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_729  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_733  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_749  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_764  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_768  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_786  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_798  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_802  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_817  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_824  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_832  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_836  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_860 -> m16_855  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m16_865 -> m16_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_865 -> m16_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_871 -> m16_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_872 -> m16_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_873 -> m16_553  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_874 -> m16_582  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_875 -> m16_597  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_877 -> m16_621  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_879 -> m16_649  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_881 -> m16_685  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_883 -> m16_721  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_885 -> m16_756  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_887 -> m16_790  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_889 -> m16_824  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m16_861 -> m16_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_861 -> m16_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_863 -> m16_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_863 -> m16_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_868 -> m16_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_866 -> m16_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_867 -> m16_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_878 -> m16_632  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_880 -> m16_661  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_882 -> m16_697  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_884 -> m16_732  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_886 -> m16_767  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_888 -> m16_801  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_890 -> m16_835  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m16_862 -> m16_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_864 -> m16_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_869 -> m16_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m16_870 -> m16_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m16_876 -> m16_612  [color=darkseagreen4, key=1, label=items, style=dashed];
m17_90 -> m17_91  [key=0, style=solid];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_66  [key=2, style=dotted];
m17_91 -> m17_67  [key=2, style=dotted];
m17_91 -> m17_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_16  [key=2, style=dotted];
m17_93 -> m17_94  [key=0, style=solid];
m17_93 -> m17_34  [key=2, style=dotted];
m17_94 -> m17_95  [key=0, style=solid];
m17_94 -> m17_21  [key=2, style=dotted];
m17_95 -> m17_90  [color=blue, key=0, style=bold];
m17_44 -> m17_99  [key=0, style=solid];
m17_44 -> m17_25  [color=green, key=3, label="Local variable string arrangeSql", style=bold];
m17_99 -> m17_100  [key=0, style=solid];
m17_99 -> m17_16  [key=2, style=dotted];
m17_100 -> m17_44  [color=blue, key=0, style=bold];
m17_36 -> m17_37  [key=0, style=solid];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_44  [key=2, style=dotted];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_34  [key=2, style=dotted];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_21  [key=2, style=dotted];
m17_40 -> m17_41  [key=0, style=solid];
m17_40 -> m17_45  [key=2, style=dotted];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_46  [key=2, style=dotted];
m17_41 -> m17_41  [color=green, key=3, label="Local variable string arrangeSql", style=bold];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_47  [key=2, style=dotted];
m17_42 -> m17_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_43 -> m17_36  [color=blue, key=0, style=bold];
m17_52 -> m17_53  [key=0, style=solid];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_44  [key=2, style=dotted];
m17_53 -> m17_56  [color=darkseagreen4, key=1, label=filter, style=dashed];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_59  [key=2, style=dotted];
m17_54 -> m17_57  [color=darkseagreen4, key=1, label=state, style=dashed];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_34  [key=2, style=dotted];
m17_55 -> m17_56  [key=0, style=solid];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_35  [key=2, style=dotted];
m17_58 -> m17_52  [color=blue, key=0, style=bold];
m17_60 -> m17_61  [key=0, style=solid];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_66  [key=2, style=dotted];
m17_61 -> m17_67  [key=2, style=dotted];
m17_61 -> m17_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_44  [key=2, style=dotted];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_34  [key=2, style=dotted];
m17_63 -> m17_25  [color=green, key=3, label="Local variable string arrangeSql", style=bold];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_35  [key=2, style=dotted];
m17_65 -> m17_60  [color=blue, key=0, style=bold];
m17_12 -> m17_13  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_16  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_17  [key=2, style=dotted];
m17_15 -> m17_12  [color=blue, key=0, style=bold];
m17_29 -> m17_30  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_16  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_34  [key=2, style=dotted];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_35  [key=2, style=dotted];
m17_33 -> m17_29  [color=blue, key=0, style=bold];
m17_96 -> m17_97  [key=0, style=solid];
m17_22 -> m17_23  [key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_16  [key=2, style=dotted];
m17_24 -> m17_22  [color=blue, key=0, style=bold];
m17_48 -> m17_49  [key=0, style=solid];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_51  [key=2, style=dotted];
m17_50 -> m17_48  [color=blue, key=0, style=bold];
m17_68 -> m17_69  [key=0, style=solid];
m17_69 -> m17_70  [key=0, style=solid];
m17_69 -> m17_71  [key=2, style=dotted];
m17_70 -> m17_68  [color=blue, key=0, style=bold];
m17_78 -> m17_79  [key=0, style=solid];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_71  [key=2, style=dotted];
m17_80 -> m17_78  [color=blue, key=0, style=bold];
m17_87 -> m17_88  [key=0, style=solid];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_71  [key=2, style=dotted];
m17_89 -> m17_87  [color=blue, key=0, style=bold];
m17_97 -> m17_98  [key=0, style=solid];
m17_97 -> m17_71  [key=2, style=dotted];
m17_98 -> m17_96  [color=blue, key=0, style=bold];
m17_81 -> m17_82  [key=0, style=solid];
m17_82 -> m17_83  [key=0, style=solid];
m17_82 -> m17_66  [key=2, style=dotted];
m17_82 -> m17_67  [key=2, style=dotted];
m17_82 -> m17_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_83 -> m17_84  [key=0, style=solid];
m17_83 -> m17_16  [key=2, style=dotted];
m17_84 -> m17_85  [key=0, style=solid];
m17_84 -> m17_34  [key=2, style=dotted];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_21  [key=2, style=dotted];
m17_86 -> m17_81  [color=blue, key=0, style=bold];
m17_72 -> m17_73  [key=0, style=solid];
m17_73 -> m17_74  [key=0, style=solid];
m17_73 -> m17_66  [key=2, style=dotted];
m17_73 -> m17_67  [key=2, style=dotted];
m17_73 -> m17_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_16  [key=2, style=dotted];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_34  [key=2, style=dotted];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_21  [key=2, style=dotted];
m17_77 -> m17_72  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [color=green, key=0, style=solid];
m17_1 -> m17_2  [color=green, key=0, style=solid];
m17_1 -> m17_8  [color=green, key=2, style=dotted];
m17_1 -> m17_9  [color=green, key=2, style=dotted];
m17_2 -> m17_3  [color=red, key=0, style=solid];
m17_2 -> m17_10  [color=red, key=2, style=dotted];
m17_3 -> m17_4  [color=red, key=0, style=solid];
m17_3 -> m17_11  [color=red, key=2, style=dotted];
m17_4 -> m17_5  [color=red, key=0, style=solid];
m17_5 -> m17_6  [color=red, key=0, style=solid];
m17_6 -> m17_7  [color=red, key=0, style=solid];
m17_7 -> m17_0  [color=blue, key=0, style=bold];
m17_18 -> m17_19  [key=0, style=solid];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=2, style=dotted];
m17_19 -> m17_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_20 -> m17_18  [color=blue, key=0, style=bold];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_25  [color=green, key=3, label="Local variable string arrangeSql", style=bold];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_16  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_17  [key=2, style=dotted];
m17_28 -> m17_25  [color=blue, key=0, style=bold];
m17_101 -> m17_1  [color=green, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_61  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_76  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_93  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m17_101 -> m17_94  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.RetryAttributeFacts", style=dashed];
m18_14 -> m18_15  [color=green, key=0, style=solid];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_16 -> m18_14  [color=blue, key=0, style=bold];
m18_13 -> m18_17  [key=0, style=solid];
m18_13 -> m18_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_13 -> m18_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_13 -> m18_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_13 -> m18_25  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m18_13 -> m18_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_33  [key=2, style=dotted];
m18_17 -> m18_19  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m18_17 -> m18_31  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_21  [key=0, style=solid];
m18_19 -> m18_35  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_36  [key=2, style=dotted];
m18_22 -> m18_24  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m18_22 -> m18_25  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_38  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_39  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_35  [key=2, style=dotted];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_34  [key=2, style=dotted];
m18_20 -> m18_32  [key=0, style=solid];
m18_21 -> m18_22  [key=0, style=solid];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_37  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_29  [key=0, style=solid];
m18_26 -> m18_31  [key=0, style=solid];
m18_26 -> m18_40  [key=2, style=dotted];
m18_27 -> m18_28  [key=0, style=solid];
m18_29 -> m18_30  [key=0, style=solid];
m18_28 -> m18_31  [key=0, style=solid];
m18_28 -> m18_41  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_41  [key=2, style=dotted];
m18_32 -> m18_13  [color=blue, key=0, style=bold];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m18_7 -> m18_8  [color=red, key=0, style=solid];
m18_7 -> m18_11  [key=2, style=dotted];
m18_7 -> m18_9  [color=darkseagreen4, key=1, label=connection, style=dashed];
m18_8 -> m18_9  [color=red, key=0, style=solid];
m18_8 -> m18_12  [color=red, key=2, style=dotted];
m18_9 -> m18_10  [color=red, key=0, style=solid];
m18_9 -> m18_13  [color=red, key=2, style=dotted];
m18_10 -> m18_6  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_2 -> m18_4  [key=0, style=solid];
m18_2 -> m18_5  [key=2, style=dotted];
m18_4 -> m18_0  [color=blue, key=0, style=bold];
m18_42 -> m18_3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_7  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_8  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_9  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_15  [color=green, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_18  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m18_42 -> m18_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m19_20 -> m19_21  [key=0, style=solid];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=2, style=dotted];
m19_22 -> m19_20  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label=SqlTransaction, style=dashed];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_9  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_0 -> m19_10  [color=darkseagreen4, key=1, label=SqlTransaction, style=dashed];
m19_0 -> m19_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_11 -> m19_12  [key=0, style=solid];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_2 -> m19_14  [key=0, style=solid];
m19_2 -> m19_15  [key=2, style=dotted];
m19_4 -> m19_14  [key=0, style=solid];
m19_4 -> m19_15  [key=2, style=dotted];
m19_6 -> m19_14  [key=0, style=solid];
m19_6 -> m19_15  [key=2, style=dotted];
m19_8 -> m19_14  [key=0, style=solid];
m19_8 -> m19_15  [key=2, style=dotted];
m19_14 -> m19_0  [color=blue, key=0, style=bold];
m19_24 -> m19_25  [key=0, style=solid];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_28  [key=2, style=dotted];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_28  [key=2, style=dotted];
m19_27 -> m19_24  [color=blue, key=0, style=bold];
m19_16 -> m19_17  [key=0, style=solid];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_19  [key=2, style=dotted];
m19_18 -> m19_16  [color=blue, key=0, style=bold];
m19_29 -> m19_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m19_29 -> m19_26  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
}
