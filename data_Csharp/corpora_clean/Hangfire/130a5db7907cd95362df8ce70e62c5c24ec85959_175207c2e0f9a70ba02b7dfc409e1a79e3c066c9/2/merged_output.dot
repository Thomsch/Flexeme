digraph  {
n36 [label="Hangfire.SqlServer.CountersAggregator", span=""];
n0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39"];
n1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="storage == null", span="41-41"];
n2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="throw new ArgumentNullException(nameof(storage));", span="41-41"];
n3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="_storage = storage", span="43-43"];
n4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="_interval = interval", span="44-44"];
n5 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39"];
n6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n7 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n8 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="47-47"];
n9 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="Logger.Debug(''Aggregating records in 'Counter' table...'')", span="49-49"];
n13 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="65-65"];
n17 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="cancellationToken.WaitHandle.WaitOne(_interval)", span="73-73"];
n10 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="int removedCount = 0", span="51-51"];
n19 [cluster="Hangfire.Logging.ILog.Debug(string)", label="Entry Hangfire.Logging.ILog.Debug(string)", span="116-116"];
n11 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0);\r\n                })", span="55-61"];
n12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="removedCount >= NumberOfRecordsInSinglePass", span="63-63"];
n20 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171"];
n24 [cluster="lambda expression", label="Entry lambda expression", span="55-61"];
n15 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="removedCount >= NumberOfRecordsInSinglePass", span="69-69"];
n14 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="cancellationToken.ThrowIfCancellationRequested()", span="66-66"];
n21 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
n22 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
n16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="Logger.Trace(''Records from the 'Counter' table aggregated.'')", span="71-71"];
n23 [cluster="Hangfire.Logging.ILog.Trace(string)", label="Entry Hangfire.Logging.ILog.Trace(string)", span="234-234"];
n18 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="47-47"];
n25 [cluster="lambda expression", label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0)", span="57-60"];
n26 [cluster="lambda expression", label="Exit lambda expression", span="55-61"];
n27 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="81-81"];
n28 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
n29 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="76-76"];
n30 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", label="return GetType().ToString();", span="78-78"];
n31 [cluster="Hangfire.SqlServer.CountersAggregator.ToString()", label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="76-76"];
n32 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n33 [cluster="System.Type.ToString()", label="Entry System.Type.ToString()", span="0-0"];
n34 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", label="return \r\n$@''DECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) C\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\nFROM [{storage.SchemaName}].[Counter] C WITH (READPAST, XLOCK, INDEX(0))\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{storage.SchemaName}].[AggregatedCounter] WITH (HOLDLOCK) AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="83-110"];
n35 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="81-81"];
d34 [cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, label="0: return \r\n$@''DECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) C\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\nFROM [{storage.SchemaName}].[Counter] C WITH (READPAST, XLOCK, INDEX(0))\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{storage.SchemaName}].[AggregatedCounter] WITH (HOLDLOCK) AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="83-110"];
m0_3 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", file="DashboardMetrics.cs", label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", span="14-14"];
m0_4 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", file="DashboardMetrics.cs", label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", span="14-14"];
m0_44 [cluster="Hangfire.JobStorage.GetConnection()", file="DashboardMetrics.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m0_52 [cluster="string.Format(string, object)", file="DashboardMetrics.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_30 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="DashboardMetrics.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m0_31 [cluster="long.ToString(string)", file="DashboardMetrics.cs", label="Entry long.ToString(string)", span="0-0"];
m0_71 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="177-194"];
m0_28 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: new Metric(page.Statistics.Servers.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Servers == 0 ? MetricStyle.Warning : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Servers == 0,\r\n                Title = page.Statistics.Servers == 0\r\n                    ? ''No active servers found. Jobs will not be processed.''\r\n                    : null\r\n            }", span="66-73"];
m0_27 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="66-73"];
m0_29 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="66-73"];
m0_33 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: new Metric(page.Statistics.Recurring.ToString(''N0''))", span="78-78"];
m0_32 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="78-78"];
m0_34 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="78-78"];
m0_42 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: return new Metric(retryCount.ToString(''N0''))\r\n                {\r\n                    Style = retryCount > 0 ? MetricStyle.Warning : MetricStyle.Default\r\n                };", span="97-100"];
m0_41 [cluster="lambda expression", file="DashboardMetrics.cs", label="retryCount = storageConnection.GetSetCount(''retries'')", span="94-94"];
m0_43 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="83-101"];
m0_47 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: page.Statistics.Enqueued > 0 || page.Statistics.Failed == 0\r\n                ? new Metric(page.Statistics.Enqueued.ToString(''N0''))\r\n                {\r\n                    Style = page.Statistics.Enqueued > 0 ? MetricStyle.Info : MetricStyle.Default,\r\n                    Highlighted = page.Statistics.Enqueued > 0 && page.Statistics.Failed == 0\r\n                }\r\n                : null", span="106-112"];
m0_46 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="106-112"];
m0_48 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="106-112"];
m0_50 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: page.Statistics.Failed > 0\r\n                ? new Metric(page.Statistics.Failed.ToString(''N0''))\r\n                {\r\n                    Style = MetricStyle.Danger,\r\n                    Highlighted = true,\r\n                    Title = string.Format(Strings.Metrics_FailedCountOrNull, page.Statistics.Failed)\r\n                }\r\n                : null", span="117-124"];
m0_49 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="117-124"];
m0_51 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="117-124"];
m0_54 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="0: new Metric($''{page.Statistics.Enqueued:N0} / {page.Statistics.Queues:N0}'')\r\n            {\r\n                Style = page.Statistics.Enqueued > 0 ? MetricStyle.Info : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Enqueued > 0\r\n            }", span="129-133"];
m0_53 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="129-133"];
m0_55 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="129-133"];
m0_57 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: new Metric(page.Statistics.Scheduled.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Scheduled > 0 ? MetricStyle.Info : MetricStyle.Default\r\n            }", span="138-141"];
m0_56 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="138-141"];
m0_58 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="138-141"];
m0_60 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: new Metric(page.Statistics.Processing.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Processing > 0 ? MetricStyle.Warning : MetricStyle.Default\r\n            }", span="146-149"];
m0_59 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="146-149"];
m0_61 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="146-149"];
m0_63 [cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs", label="1: new Metric(page.Statistics.Succeeded.ToString(''N0''))\r\n            {\r\n                IntValue = page.Statistics.Succeeded\r\n            }", span="154-157"];
m0_62 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="154-157"];
m0_64 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="154-157"];
m0_66 [cluster="lambda expression", file="DashboardMetrics.cs", label="new Metric(page.Statistics.Failed.ToString(''N0''))\r\n            {\r\n                IntValue = page.Statistics.Failed,\r\n                Style = page.Statistics.Failed > 0 ? MetricStyle.Danger : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Failed > 0\r\n            }", span="162-167"];
m0_69 [cluster="lambda expression", file="DashboardMetrics.cs", label="new Metric(page.Statistics.Deleted.ToString(''N0''))", span="172-172"];
m0_77 [cluster="lambda expression", file="DashboardMetrics.cs", label="return new Metric(awaitingCount.ToString(''N0''))\r\n                {\r\n                    Style = awaitingCount > 0 ? MetricStyle.Info : MetricStyle.Default\r\n                };", span="190-193"];
m0_38 [cluster="lambda expression", file="DashboardMetrics.cs", label="var storageConnection = connection as JobStorageConnection", span="88-88"];
m0_39 [cluster="lambda expression", file="DashboardMetrics.cs", label="storageConnection == null", span="89-89"];
m0_40 [cluster="lambda expression", file="DashboardMetrics.cs", label="return null;", span="91-91"];
m0_35 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="83-101"];
m0_65 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="162-167"];
m0_67 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="162-167"];
m0_68 [cluster="lambda expression", file="DashboardMetrics.cs", label="Entry lambda expression", span="172-172"];
m0_70 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="172-172"];
m0_72 [cluster="lambda expression", file="DashboardMetrics.cs", label="long awaitingCount = -1", span="179-179"];
m0_75 [cluster="lambda expression", file="DashboardMetrics.cs", label="storageConnection != null", span="184-184"];
m0_76 [cluster="lambda expression", file="DashboardMetrics.cs", label="awaitingCount = storageConnection.GetSetCount(''awaiting'')", span="186-186"];
m0_37 [cluster="lambda expression", file="DashboardMetrics.cs", label="var connection = page.Storage.GetConnection()", span="86-86"];
m0_36 [cluster="lambda expression", file="DashboardMetrics.cs", label="long retryCount", span="85-85"];
m0_73 [cluster="lambda expression", file="DashboardMetrics.cs", label="var connection = page.Storage.GetConnection()", span="181-181"];
m0_74 [cluster="lambda expression", file="DashboardMetrics.cs", label="var storageConnection = connection as JobStorageConnection", span="183-183"];
m0_78 [cluster="lambda expression", file="DashboardMetrics.cs", label="Exit lambda expression", span="177-194"];
m0_0 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DashboardMetrics.cs", label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9"];
m0_1 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DashboardMetrics.cs", label="AutomaticMigrationsEnabled = false", span="11-11"];
m0_2 [cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DashboardMetrics.cs", label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9"];
m0_45 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="DashboardMetrics.cs", label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m1_64 [cluster="HangFire.Web.RazorPage.Write(object)", file="HtmlHelper.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m1_41 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="279-279"];
m1_0 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="34-34"];
m1_1 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''\r\n'')", span="38-38"];
m1_2 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="0: Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="47-47"];
m1_3 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: int from, perPage", span="49-49"];
m1_4 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: int.TryParse(Request.QueryString[''from''], out from)", span="51-51"];
m1_5 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: int.TryParse(Request.QueryString[''count''], out perPage)", span="52-52"];
m1_6 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: var pager = new Pager(from, perPage, JobStorage.FailedCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/failed'')\r\n    }", span="54-57"];
m1_7 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: var failedJobs = JobStorage.FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="59-59"];
m1_9 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="pager.TotalPageCount == 0", span="70-70"];
m1_11 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="HtmlHelper.cs", label="1: Write(RenderPartial(new PerPageSelector(pager)))", span="91-91"];
m1_28 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(job.Value.ExceptionMessage)", span="203-203"];
m1_8 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''\r\n'')", span="65-65"];
m1_13 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="var index = 0", span="120-120"];
m1_10 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''    <div class=\''alert alert-success\''>\r\n        You have no failed jobs at the mom'' +\r\n''ent.\r\n    </div>\r\n'')", span="76-77"];
m1_12 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(@''    <table class=''''table failed-table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Failed</th>\r\n                <th>Queue</th>\r\n                <th>Job type</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="104-115"];
m1_14 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label=failedJobs, span="128-128"];
m1_27 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''\r\n                        </div>\r\n                        <div style=\''color: #888'' +\r\n'';\''>\r\n                            '')", span="197-198"];
m1_15 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: WriteLiteral(''                <tr>\r\n                    <td rowspan=\''2\''>\r\n                     '' +\r\n''   <a href=\'''')", span="134-135"];
m1_16 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: Write(Request.LinkTo(''/job/'' + job.Key))", span="140-140"];
m1_17 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="HtmlHelper.cs", label="1: WriteLiteral(''\''>\r\n                            '')", span="145-145"];
m1_18 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(HtmlHelper.JobId(job.Key))", span="150-150"];
m1_19 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d data-moment=\'''')", span="155-156"];
m1_20 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="161-161"];
m1_21 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''\''>'')", span="166-166"];
m1_22 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(job.Value.FailedAt)", span="171-171"];
m1_23 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="176-176"];
m1_24 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(HtmlHelper.QueueLabel(job.Value.Queue))", span="181-181"];
m1_25 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''</td>\r\n                    <td class=\''expander\''>\r\n                        <div>\r\n'' +\r\n''                            '')", span="186-187"];
m1_26 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(HtmlHelper.JobType(job.Value.Type))", span="192-192"];
m1_29 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral('' <span class=\''caret\''></span>\r\n                        </div>\r\n                   '' +\r\n'' </td>\r\n                    <td>\r\n                        <div class=\''pull-right'' +\r\n''\''>\r\n                            <button class=\''btn btn-primary btn-sm\'' data-ajax'' +\r\n''=\'''')", span="208-211"];
m1_70 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="54-54"];
m1_36 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''</h4>\r\n                        <p>\r\n                            '')", span="253-253"];
m1_52 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(RenderPartial(new Paginator(pager)))", span="369-369"];
m1_30 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m1_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="HtmlHelper.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m1_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HtmlHelper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_33 [cluster="HttpRequestBase.LinkTo(string)", file="HtmlHelper.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m1_34 [cluster="Unk.TryParse", file="HtmlHelper.cs", label="Entry Unk.TryParse", span=""];
m1_35 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="HtmlHelper.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="13-13"];
m1_37 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="HtmlHelper.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="237-237"];
m1_38 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="HtmlHelper.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m1_40 [cluster="Unk.Write", file="HtmlHelper.cs", label="Entry Unk.Write", span=""];
m1_42 [cluster="HangFire.Web.HtmlHelper.JobId(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17"];
m1_43 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22"];
m1_45 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="HtmlHelper.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m1_46 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="HtmlHelper.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m1_47 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m1_48 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Write(arg.Value)", span="331-331"];
m1_49 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''\''</pre></td>\r\n                                    </tr>\r\n'')", span="336-336"];
m1_50 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n         '' +\r\n''               </div>\r\n                    </td>\r\n                </tr>\r\n'')", span="346-347"];
m1_51 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="357-357"];
m1_39 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="HtmlHelper.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="53-53"];
m1_44 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="34-34"];
m1_53 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="34-34"];
m1_66 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="HtmlHelper.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m1_54 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m1_67 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="39-39"];
m1_69 [cluster="string.IsNullOrEmpty(string)", file="HtmlHelper.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_60 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="HtmlHelper.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="146-146"];
m1_59 [cluster="HttpRequestBase.LinkTo(string)", file="HtmlHelper.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m1_58 [cluster="HangFire.Web.JobStorage.FailedCount()", file="HtmlHelper.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="28-28"];
m1_72 [file="HtmlHelper.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m3_0 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Metric.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m3_1 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Metric.cs", label="Value = value", span="22-22"];
m3_2 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Metric.cs", label="Exit Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m3_3 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="Entry Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43"];
m3_4 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label=style, span="45-45"];
m3_5 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="MetricStyle.Default", span="47-47"];
m3_7 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="MetricStyle.Info", span="48-48"];
m3_9 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="MetricStyle.Success", span="49-49"];
m3_11 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="MetricStyle.Warning", span="50-50"];
m3_13 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="MetricStyle.Danger", span="51-51"];
m3_15 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="return ''metric-null'';", span="52-52"];
m3_6 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="return ''metric-default'';", span="47-47"];
m3_8 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="return ''metric-info'';", span="48-48"];
m3_10 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="return ''metric-success'';", span="49-49"];
m3_12 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="return ''metric-warning'';", span="50-50"];
m3_14 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="return ''metric-danger'';", span="51-51"];
m3_16 [cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs", label="Exit Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43"];
m3_17 [file="Metric.cs", label="Hangfire.Dashboard.Metric", span=""];
m5_24 [cluster="Unk.BasicNack", file="SqlCommandBatch.cs", label="Entry Unk.BasicNack", span=""];
m5_26 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
m5_27 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs", label="!_completed && !_disposed", span="45-45"];
m5_28 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs", label="Requeue()", span="47-47"];
m5_29 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs", label="_disposed = true", span="50-50"];
m5_30 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43"];
m5_15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlCommandBatch.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_17 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
m5_18 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label=_completed, span="36-36"];
m5_19 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label="throw new InvalidOperationException(''Job already completed'');", span="36-36"];
m5_20 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label="_channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37"];
m5_21 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label="_channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38"];
m5_22 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label="_completed = true", span="40-40"];
m5_23 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34"];
m5_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27"];
m5_10 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs", label=_completed, span="29-29"];
m5_11 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs", label="throw new InvalidOperationException(''Job already completed'');", span="29-29"];
m5_12 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs", label="_channel.BasicAck(_message.DeliveryTag, false)", span="30-30"];
m5_13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs", label="_completed = true", span="31-31"];
m5_14 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27"];
m5_8 [cluster="Unk.GetString", file="SqlCommandBatch.cs", label="Entry Unk.GetString", span=""];
m5_16 [cluster="Unk.BasicAck", file="SqlCommandBatch.cs", label="Entry Unk.BasicAck", span=""];
m5_25 [cluster="Unk.Close", file="SqlCommandBatch.cs", label="Entry Unk.Close", span=""];
m5_0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
m5_1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="message == null", span="17-17"];
m5_3 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="_message = message", span="19-19"];
m5_4 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="_channel = channel", span="20-20"];
m5_2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="throw new ArgumentNullException(''message'');", span="17-17"];
m5_5 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="JobId = Encoding.UTF8.GetString(_message.Body)", span="22-22"];
m5_6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15"];
m5_31 [file="SqlCommandBatch.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", span=""];
m6_151 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m6_152 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="key == null", span="257-257"];
m6_153 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="257-257"];
m6_154 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="toScore < fromScore", span="258-258"];
m6_156 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout));", span="260-263"];
m6_155 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="258-258"];
m6_157 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m6_102 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m6_100 [cluster="long.Parse(string)", file="SqlServerConnection.cs", label="Entry long.Parse(string)", span="0-0"];
m6_197 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="315-315"];
m6_198 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="serverId == null", span="317-317"];
m6_199 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(serverId));", span="317-317"];
m6_200 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="context == null", span="318-318"];
m6_201 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(context));", span="318-318"];
m6_202 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="320-325"];
m6_203 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="327-337"];
m6_204 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="315-315"];
m6_27 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="65-65"];
m6_28 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="queues == null || queues.Length == 0", span="67-67"];
m6_29 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(queues));", span="67-67"];
m6_30 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var providers = queues\r\n                .Select(queue => _storage.QueueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="69-72"];
m6_32 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new InvalidOperationException(\r\n                    $''Multiple provider instances registered for queues: {String.Join('', '', queues)}. You should choose only one type of persistent queues per server instance.'');", span="76-77"];
m6_34 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="81-81"];
m6_31 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="providers.Length != 1", span="74-74"];
m6_33 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var persistentQueue = providers[0].GetJobQueue()", span="80-80"];
m6_35 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="65-65"];
m6_217 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="353-353"];
m6_218 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="serverId == null", span="355-355"];
m6_219 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(serverId));", span="355-355"];
m6_220 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="357-363"];
m6_221 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="353-353"];
m6_118 [cluster="Hangfire.Storage.StateData.StateData()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="23-23"];
m6_205 [cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m6_181 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="299-299"];
m6_182 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="key == null", span="301-301"];
m6_183 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="301-301"];
m6_184 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="303-312"];
m6_185 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="299-299"];
m6_74 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m6_330 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="502-502"];
m6_331 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="key == null", span="504-504"];
m6_332 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="504-504"];
m6_334 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="513-515"];
m6_333 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from [{_storage.SchemaName}].List with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="506-511"];
m6_335 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="502-502"];
m6_26 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", span="532-532"];
m6_348 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="_dedicatedConnection == null", span="534-534"];
m6_351 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="!_lockedResources.ContainsKey(resource)", span="541-541"];
m6_352 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="SqlServerDistributedLock.Acquire(_dedicatedConnection, resource, timeout)", span="545-545"];
m6_354 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="ReleaseLock(resource, lockId, true)", span="549-549"];
m6_356 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="_lockedResources.Add(resource, new HashSet<Guid>())", span="553-553"];
m6_357 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="_lockedResources[resource].Add(lockId)", span="556-556"];
m6_358 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="return new DisposableLock(this, resource, lockId);", span="557-557"];
m6_349 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="_dedicatedConnection = _storage.CreateAndOpenConnection()", span="536-536"];
m6_350 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="var lockId = Guid.NewGuid()", span="539-539"];
m6_353 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label=Exception, span="547-547"];
m6_355 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="throw;", span="550-550"];
m6_359 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", span="532-532"];
m6_298 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="460-460"];
m6_299 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="key == null", span="462-462"];
m6_300 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="462-462"];
m6_301 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="name == null", span="463-463"];
m6_302 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(name));", span="463-463"];
m6_304 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout));", span="469-470"];
m6_303 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].Hash with (readcommittedlock)\r\nwhere [Key] = @key and [Field] = @field''", span="465-467"];
m6_305 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="460-460"];
m6_103 [cluster="Hangfire.Storage.JobData.JobData()", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m6_361 [cluster="System.Guid.NewGuid()", file="SqlServerConnection.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m6_130 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m6_150 [cluster="HashSet<string>.cstr", file="SqlServerConnection.cs", label="Entry HashSet<string>.cstr", span=""];
m6_225 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="366-366"];
m6_226 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="timeOut.Duration() != timeOut", span="368-368"];
m6_227 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', nameof(timeOut));", span="370-370"];
m6_228 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout));", span="373-376"];
m6_229 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="366-366"];
m6_368 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", span="603-603"];
m6_385 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs", label="_connection = connection", span="605-605"];
m6_386 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs", label="_resource = resource", span="606-606"];
m6_387 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs", label="_lockId = lockId", span="607-607"];
m6_388 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", span="603-603"];
m6_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_318 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="485-485"];
m6_319 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="key == null", span="487-487"];
m6_320 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="487-487"];
m6_322 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="493-499"];
m6_321 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="string query = \r\n$@''select min([ExpireAt]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="489-491"];
m6_323 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="485-485"];
m6_7 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="45-45"];
m6_8 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_dedicatedConnection != null", span="47-47"];
m6_9 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_dedicatedConnection.Dispose()", span="49-49"];
m6_10 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_dedicatedConnection = null", span="50-50"];
m6_11 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Dispose()", span="45-45"];
m6_277 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="435-435"];
m6_278 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="key == null", span="437-437"];
m6_279 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="437-437"];
m6_281 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="441-442"];
m6_280 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="string query = $@''select count([Id]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="439-439"];
m6_282 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="435-435"];
m6_362 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_363 [cluster="Unk.Acquire", file="SqlServerConnection.cs", label="Entry Unk.Acquire", span=""];
m6_56 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnection.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70"];
m6_170 [cluster="Unk.UseTransaction", file="SqlServerConnection.cs", label="Entry Unk.UseTransaction", span=""];
m6_268 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="420-420"];
m6_269 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="key == null", span="422-422"];
m6_270 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="422-422"];
m6_272 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0);", span="431-432"];
m6_271 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="string query = \r\n$@''select sum(s.[Value]) from (select sum([Value]) as [Value] from [{_storage.SchemaName}].Counter with (readcommittedlock)\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from [{_storage.SchemaName}].AggregatedCounter with (readcommittedlock)\r\nwhere [Key] = @key) as s''", span="424-429"];
m6_273 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="420-420"];
m6_38 [cluster="Unk.ToArray", file="SqlServerConnection.cs", label="Entry Unk.ToArray", span=""];
m6_209 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="340-340"];
m6_210 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="serverId == null", span="342-342"];
m6_211 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(serverId));", span="342-342"];
m6_212 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="344-350"];
m6_213 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="340-340"];
m6_117 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m6_12 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m6_230 [cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m6_42 [cluster="Unk.Dequeue", file="SqlServerConnection.cs", label="Entry Unk.Dequeue", span=""];
m6_345 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="527-527"];
m6_17 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="56-56"];
m6_18 [cluster="lambda expression", file="SqlServerConnection.cs", label=_dedicatedConnection, span="56-56"];
m6_19 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="56-56"];
m6_43 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="70-70"];
m6_44 [cluster="lambda expression", file="SqlServerConnection.cs", label="_storage.QueueProviders.GetProvider(queue)", span="70-70"];
m6_45 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="70-70"];
m6_59 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString()", span="102-111"];
m6_60 [cluster="lambda expression", file="SqlServerConnection.cs", label="parameters.Count > 0", span="113-113"];
m6_63 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: parameters", span="121-121"];
m6_58 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="100-137"];
m6_65 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: commandBatch.Connection = connection", span="129-129"];
m6_64 [cluster="lambda expression", color=red, community=1, file="SqlServerConnection.cs", label="1: commandBatch.Append(insertParameterSql,\r\n                            new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                            new SqlParameter(''@name'', parameter.Key),\r\n                            new SqlParameter(''@value'', (object)parameter.Value ?? DBNull.Value))", span="123-126"];
m6_69 [cluster="lambda expression", file="SqlServerConnection.cs", label="return jobId;", span="136-136"];
m6_61 [cluster="lambda expression", file="SqlServerConnection.cs", label="string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="115-117"];
m6_62 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="119-119"];
m6_66 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: commandBatch.CommandTimeout = _storage.CommandTimeout", span="130-130"];
m6_67 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="131-131"];
m6_68 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: commandBatch.ExecuteNonQuery()", span="133-133"];
m6_70 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="100-137"];
m6_88 [cluster="lambda expression", file="SqlServerConnection.cs", label="var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault()", span="149-150"];
m6_87 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="147-177"];
m6_89 [cluster="lambda expression", file="SqlServerConnection.cs", label="jobData == null", span="152-152"];
m6_91 [cluster="lambda expression", file="SqlServerConnection.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="155-155"];
m6_92 [cluster="lambda expression", file="SqlServerConnection.cs", label="invocationData.Arguments = jobData.Arguments", span="156-156"];
m6_98 [cluster="lambda expression", file="SqlServerConnection.cs", label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="170-176"];
m6_90 [cluster="lambda expression", file="SqlServerConnection.cs", label="return null;", span="152-152"];
m6_95 [cluster="lambda expression", file="SqlServerConnection.cs", label="job = invocationData.Deserialize()", span="163-163"];
m6_93 [cluster="lambda expression", file="SqlServerConnection.cs", label="Job job = null", span="158-158"];
m6_94 [cluster="lambda expression", file="SqlServerConnection.cs", label="JobLoadException loadException = null", span="159-159"];
m6_96 [cluster="lambda expression", file="SqlServerConnection.cs", label=JobLoadException, span="165-165"];
m6_97 [cluster="lambda expression", file="SqlServerConnection.cs", label="loadException = ex", span="167-167"];
m6_99 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="147-177"];
m6_111 [cluster="lambda expression", file="SqlServerConnection.cs", label="var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault()", span="192-192"];
m6_110 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="190-208"];
m6_112 [cluster="lambda expression", file="SqlServerConnection.cs", label="sqlState == null", span="193-193"];
m6_114 [cluster="lambda expression", file="SqlServerConnection.cs", label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="198-200"];
m6_115 [cluster="lambda expression", file="SqlServerConnection.cs", label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="202-207"];
m6_113 [cluster="lambda expression", file="SqlServerConnection.cs", label="return null;", span="195-195"];
m6_116 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="190-208"];
m6_128 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout)", span="218-225"];
m6_127 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="216-226"];
m6_129 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="216-226"];
m6_139 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout)", span="234-237"];
m6_138 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="234-237"];
m6_140 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="234-237"];
m6_147 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)", span="246-249"];
m6_146 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="244-252"];
m6_148 [cluster="lambda expression", file="SqlServerConnection.cs", label="return new HashSet<string>(result);", span="251-251"];
m6_149 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="244-252"];
m6_160 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout)", span="260-263"];
m6_159 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="260-263"];
m6_161 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="260-263"];
m6_173 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: keyValuePairs", span="282-282"];
m6_174 [cluster="lambda expression", color=red, community=1, file="SqlServerConnection.cs", label="1: commandBatch.Append(sql,\r\n                        new SqlParameter(''@key'', key),\r\n                        new SqlParameter(''@field'', keyValuePair.Key),\r\n                        new SqlParameter(''@value'', (object)keyValuePair.Value ?? DBNull.Value))", span="284-287"];
m6_171 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="278-296"];
m6_172 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="280-280"];
m6_175 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: commandBatch.Connection = connection", span="290-290"];
m6_176 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="0: commandBatch.Transaction = transaction", span="291-291"];
m6_177 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: commandBatch.CommandTimeout = _storage.CommandTimeout", span="292-292"];
m6_178 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="293-293"];
m6_179 [cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs", label="1: commandBatch.ExecuteNonQuery()", span="295-295"];
m6_180 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="278-296"];
m6_187 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="305-309"];
m6_186 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="303-312"];
m6_188 [cluster="lambda expression", file="SqlServerConnection.cs", label="return result.Count != 0 ? result : null;", span="311-311"];
m6_191 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="309-309"];
m6_194 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="309-309"];
m6_189 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="303-312"];
m6_192 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Field", span="309-309"];
m6_193 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="309-309"];
m6_195 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Value", span="309-309"];
m6_196 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="309-309"];
m6_207 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout)", span="329-336"];
m6_206 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="327-337"];
m6_208 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="327-337"];
m6_215 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="346-349"];
m6_214 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="344-350"];
m6_216 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="344-350"];
m6_223 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="359-362"];
m6_222 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="357-363"];
m6_224 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="357-363"];
m6_232 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="373-376"];
m6_233 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout)", span="373-376"];
m6_234 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="373-376"];
m6_242 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First()", span="383-386"];
m6_241 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="383-386"];
m6_243 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="383-386"];
m6_252 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="400-402"];
m6_251 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="400-402"];
m6_253 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="400-402"];
m6_262 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="413-413"];
m6_261 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="411-417"];
m6_263 [cluster="lambda expression", file="SqlServerConnection.cs", label="!result.HasValue", span="414-414"];
m6_265 [cluster="lambda expression", file="SqlServerConnection.cs", label="return result.Value - DateTime.UtcNow;", span="416-416"];
m6_264 [cluster="lambda expression", file="SqlServerConnection.cs", label="return TimeSpan.FromSeconds(-1);", span="414-414"];
m6_266 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="411-417"];
m6_275 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0", span="432-432"];
m6_274 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="431-432"];
m6_276 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="431-432"];
m6_284 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="442-442"];
m6_283 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="441-442"];
m6_285 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="441-442"];
m6_293 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="453-453"];
m6_292 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="451-457"];
m6_294 [cluster="lambda expression", file="SqlServerConnection.cs", label="!result.HasValue", span="454-454"];
m6_296 [cluster="lambda expression", file="SqlServerConnection.cs", label="return result.Value - DateTime.UtcNow;", span="456-456"];
m6_295 [cluster="lambda expression", file="SqlServerConnection.cs", label="return TimeSpan.FromSeconds(-1);", span="454-454"];
m6_297 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="451-457"];
m6_307 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout)", span="469-470"];
m6_306 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="469-470"];
m6_308 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="469-470"];
m6_316 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="482-482"];
m6_315 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="481-482"];
m6_317 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="481-482"];
m6_325 [cluster="lambda expression", file="SqlServerConnection.cs", label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="495-495"];
m6_324 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="493-499"];
m6_326 [cluster="lambda expression", file="SqlServerConnection.cs", label="!result.HasValue", span="496-496"];
m6_328 [cluster="lambda expression", file="SqlServerConnection.cs", label="return result.Value - DateTime.UtcNow;", span="498-498"];
m6_327 [cluster="lambda expression", file="SqlServerConnection.cs", label="return TimeSpan.FromSeconds(-1);", span="496-496"];
m6_329 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="493-499"];
m6_337 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="513-515"];
m6_336 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="513-515"];
m6_338 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="513-515"];
m6_346 [cluster="lambda expression", file="SqlServerConnection.cs", label="connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList()", span="527-527"];
m6_347 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="527-527"];
m6_162 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m6_163 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="key == null", span="268-268"];
m6_164 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="268-268"];
m6_165 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="keyValuePairs == null", span="269-269"];
m6_166 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(keyValuePairs));", span="269-269"];
m6_168 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SqlServerConnection.cs", label="1: _storage.UseTransaction(_dedicatedConnection, (connection, transaction) =>\r\n            {\r\n                var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    commandBatch.Append(sql,\r\n                        new SqlParameter(''@key'', key),\r\n                        new SqlParameter(''@field'', keyValuePair.Key),\r\n                        new SqlParameter(''@value'', (object)keyValuePair.Value ?? DBNull.Value));\r\n                }\r\n\r\n                commandBatch.Connection = connection;\r\n                commandBatch.Transaction = transaction;\r\n                commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                commandBatch.ExecuteNonQuery();\r\n            })", span="278-296"];
m6_167 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SqlServerConnection.cs", label="1: string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="271-276"];
m6_169 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m6_13 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54"];
m6_14 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="return new SqlServerWriteOnlyTransaction(_storage, () => _dedicatedConnection);", span="56-56"];
m6_15 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54"];
m6_0 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39"];
m6_1 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", label="storage == null", span="41-41"];
m6_2 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(storage));", span="41-41"];
m6_3 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", label="_storage = storage", span="42-42"];
m6_4 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39"];
m6_254 [cluster="Unk.ToList", file="SqlServerConnection.cs", label="Entry Unk.ToList", span=""];
m6_286 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="445-445"];
m6_287 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="key == null", span="447-447"];
m6_288 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="447-447"];
m6_290 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="451-457"];
m6_289 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="449-449"];
m6_291 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="445-445"];
m6_57 [cluster="Unk.UseConnection", file="SqlServerConnection.cs", label="Entry Unk.UseConnection", span=""];
m6_25 [cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerConnection.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m6_245 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="389-389"];
m6_246 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="key == null", span="391-391"];
m6_247 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="391-391"];
m6_249 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="400-402"];
m6_248 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num\r\n	from [{_storage.SchemaName}].[Set] with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="393-398"];
m6_250 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="389-389"];
m6_80 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="140-140"];
m6_81 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="id == null", span="142-142"];
m6_82 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(id));", span="142-142"];
m6_84 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="147-177"];
m6_83 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="string sql =\r\n$@''select InvocationData, StateName, Arguments, CreatedAt from [{_storage.SchemaName}].Job with (readcommittedlock) where Id = @id''", span="144-145"];
m6_85 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="140-140"];
m6_20 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59"];
m6_21 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="String.IsNullOrWhiteSpace(resource)", span="61-61"];
m6_22 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(resource));", span="61-61"];
m6_23 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="return AcquireLock($''{_storage.SchemaName}:{resource}'', timeout);", span="62-62"];
m6_24 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59"];
m6_235 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m6_381 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m6_40 [cluster="string.Join(string, params string[])", file="SqlServerConnection.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m6_384 [cluster="Unk.ReleaseConnection", file="SqlServerConnection.cs", label="Entry Unk.ReleaseConnection", span=""];
m6_6 [cluster="Unk.nameof", file="SqlServerConnection.cs", label="Entry Unk.nameof", span=""];
m6_77 [cluster="Unk.Parse", file="SqlServerConnection.cs", label="Entry Unk.Parse", span=""];
m6_39 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnection.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m6_86 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180"];
m6_389 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", span="610-610"];
m6_390 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="SqlServerConnection.cs", label="_connection.ReleaseLock(_resource, _lockId, true)", span="612-612"];
m6_391 [cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", span="610-610"];
m6_47 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m6_48 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="job == null", span="90-90"];
m6_49 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(job));", span="90-90"];
m6_50 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters == null", span="91-91"];
m6_51 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(parameters));", span="91-91"];
m6_53 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="98-98"];
m6_54 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=red, community=0, file="SqlServerConnection.cs", label="1: return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString();\r\n\r\n                if (parameters.Count > 0)\r\n                {\r\n                    string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)'';\r\n\r\n                    var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                    foreach (var parameter in parameters)\r\n                    {\r\n                        commandBatch.Append(insertParameterSql,\r\n                            new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                            new SqlParameter(''@name'', parameter.Key),\r\n                            new SqlParameter(''@value'', (object)parameter.Value ?? DBNull.Value));\r\n                    }\r\n\r\n                    commandBatch.Connection = connection;\r\n                    commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                    commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                    commandBatch.ExecuteNonQuery();\r\n                }\r\n\r\n                return jobId;\r\n            });", span="100-137"];
m6_52 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql =\r\n$@''insert into [{_storage.SchemaName}].Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\noutput inserted.Id\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt)''", span="93-96"];
m6_55 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m6_71 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m6_244 [cluster="Unk.First", file="SqlServerConnection.cs", label="Entry Unk.First", span=""];
m6_16 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45"];
m6_231 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_41 [cluster="Unk.GetJobQueue", file="SqlServerConnection.cs", label="Entry Unk.GetJobQueue", span=""];
m6_382 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m6_141 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="240-240"];
m6_142 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="key == null", span="242-242"];
m6_143 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="242-242"];
m6_144 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="244-252"];
m6_145 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="240-240"];
m6_367 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m6_366 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_360 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239"];
m6_46 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m6_190 [cluster="Unk.ToDictionary", file="SqlServerConnection.cs", label="Entry Unk.ToDictionary", span=""];
m6_339 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="518-518"];
m6_340 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="key == null", span="520-520"];
m6_341 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="520-520"];
m6_343 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList());", span="527-527"];
m6_342 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="522-525"];
m6_344 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="518-518"];
m6_73 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m6_76 [cluster="SqlParameter.cstr", file="SqlServerConnection.cs", label="Entry SqlParameter.cstr", span=""];
m6_119 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="211-211"];
m6_120 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="id == null", span="213-213"];
m6_121 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(id));", span="213-213"];
m6_122 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="name == null", span="214-214"];
m6_123 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(name));", span="214-214"];
m6_124 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="216-226"];
m6_125 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="211-211"];
m6_158 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m6_267 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_383 [cluster="Unk.Release", file="SqlServerConnection.cs", label="Entry Unk.Release", span=""];
m6_75 [cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29"];
m6_78 [cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51"];
m6_255 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="405-405"];
m6_256 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="key == null", span="407-407"];
m6_257 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="407-407"];
m6_259 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="411-417"];
m6_258 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key''", span="409-409"];
m6_260 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="405-405"];
m6_131 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="229-229"];
m6_132 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="id == null", span="231-231"];
m6_133 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(id));", span="231-231"];
m6_134 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="name == null", span="232-232"];
m6_135 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(name));", span="232-232"];
m6_136 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout));", span="234-237"];
m6_137 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="229-229"];
m6_364 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", span="560-560"];
m6_369 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="_lockedResources.ContainsKey(resource)", span="564-564"];
m6_370 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="_lockedResources[resource].Contains(lockId)", span="566-566"];
m6_371 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="_lockedResources[resource].Remove(lockId) &&\r\n                            _lockedResources[resource].Count == 0 &&\r\n                            _lockedResources.Remove(resource) &&\r\n                            _dedicatedConnection.State == ConnectionState.Open", span="568-571"];
m6_372 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="SqlServerDistributedLock.Release(_dedicatedConnection, resource)", span="577-577"];
m6_377 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="!onDisposing", span="590-590"];
m6_373 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="_lockedResources.Count == 0", span="582-582"];
m6_374 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="_storage.ReleaseConnection(_dedicatedConnection)", span="584-584"];
m6_376 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label=Exception, span="588-588"];
m6_375 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="_dedicatedConnection = null", span="585-585"];
m6_378 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="throw;", span="592-592"];
m6_379 [cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", span="560-560"];
m6_79 [cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75"];
m6_72 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m6_104 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="180-180"];
m6_105 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="jobId == null", span="182-182"];
m6_106 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(jobId));", span="182-182"];
m6_108 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="190-208"];
m6_107 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="string sql = \r\n$@''select s.Name, s.Reason, s.Data\r\nfrom [{_storage.SchemaName}].State s with (readcommittedlock)\r\ninner join [{_storage.SchemaName}].Job j with (readcommittedlock) on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="184-188"];
m6_109 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="180-180"];
m6_37 [cluster="Unk.Distinct", file="SqlServerConnection.cs", label="Entry Unk.Distinct", span=""];
m6_36 [cluster="Unk.Select", file="SqlServerConnection.cs", label="Entry Unk.Select", span=""];
m6_236 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="379-379"];
m6_237 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="key == null", span="381-381"];
m6_238 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="381-381"];
m6_239 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First());", span="383-386"];
m6_240 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="379-379"];
m6_309 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="473-473"];
m6_310 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="key == null", span="475-475"];
m6_311 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(nameof(key));", span="475-475"];
m6_313 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="481-482"];
m6_312 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="string query = \r\n$@''select count([Id]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="477-479"];
m6_314 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="473-473"];
m6_101 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m6_380 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m6_365 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SqlServerConnection.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m6_392 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m6_393 [file="SqlServerConnection.cs", label="System.DateTime", span=""];
m6_394 [file="SqlServerConnection.cs", label="System.TimeSpan", span=""];
m6_395 [file="SqlServerConnection.cs", label=createJobSql, span=""];
m6_396 [file="SqlServerConnection.cs", label=invocationData, span=""];
m6_397 [file="SqlServerConnection.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m6_398 [file="SqlServerConnection.cs", label=string, span=""];
m6_399 [file="SqlServerConnection.cs", label=sql, span=""];
m6_400 [file="SqlServerConnection.cs", label=string, span=""];
m6_401 [file="SqlServerConnection.cs", label=sql, span=""];
m6_402 [file="SqlServerConnection.cs", label=string, span=""];
m6_403 [file="SqlServerConnection.cs", label=string, span=""];
m6_404 [file="SqlServerConnection.cs", label=string, span=""];
m6_405 [file="SqlServerConnection.cs", label=string, span=""];
m6_406 [file="SqlServerConnection.cs", label=string, span=""];
m6_407 [file="SqlServerConnection.cs", label=string, span=""];
m6_408 [file="SqlServerConnection.cs", label=string, span=""];
m6_409 [file="SqlServerConnection.cs", label=double, span=""];
m6_410 [file="SqlServerConnection.cs", label=double, span=""];
m6_411 [file="SqlServerConnection.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span=""];
m6_412 [file="SqlServerConnection.cs", label=string, span=""];
m6_413 [file="SqlServerConnection.cs", label=sql, span=""];
m6_414 [file="SqlServerConnection.cs", label=string, span=""];
m6_415 [file="SqlServerConnection.cs", label=string, span=""];
m6_416 [file="SqlServerConnection.cs", label=data, span=""];
m6_417 [file="SqlServerConnection.cs", label=string, span=""];
m6_418 [file="SqlServerConnection.cs", label=string, span=""];
m6_419 [file="SqlServerConnection.cs", label="System.TimeSpan", span=""];
m6_420 [file="SqlServerConnection.cs", label=string, span=""];
m6_421 [file="SqlServerConnection.cs", label=string, span=""];
m6_422 [file="SqlServerConnection.cs", label=int, span=""];
m6_423 [file="SqlServerConnection.cs", label=int, span=""];
m6_424 [file="SqlServerConnection.cs", label=query, span=""];
m6_425 [file="SqlServerConnection.cs", label=string, span=""];
m6_426 [file="SqlServerConnection.cs", label=query, span=""];
m6_427 [file="SqlServerConnection.cs", label=string, span=""];
m6_428 [file="SqlServerConnection.cs", label=query, span=""];
m6_429 [file="SqlServerConnection.cs", label=string, span=""];
m6_430 [file="SqlServerConnection.cs", label=query, span=""];
m6_431 [file="SqlServerConnection.cs", label=string, span=""];
m6_432 [file="SqlServerConnection.cs", label=query, span=""];
m6_433 [file="SqlServerConnection.cs", label=string, span=""];
m6_434 [file="SqlServerConnection.cs", label=string, span=""];
m6_435 [file="SqlServerConnection.cs", label=query, span=""];
m6_436 [file="SqlServerConnection.cs", label=string, span=""];
m6_437 [file="SqlServerConnection.cs", label=query, span=""];
m6_438 [file="SqlServerConnection.cs", label=string, span=""];
m6_439 [file="SqlServerConnection.cs", label=query, span=""];
m6_440 [file="SqlServerConnection.cs", label=string, span=""];
m6_441 [file="SqlServerConnection.cs", label=int, span=""];
m6_442 [file="SqlServerConnection.cs", label=int, span=""];
m6_443 [file="SqlServerConnection.cs", label=query, span=""];
m6_444 [file="SqlServerConnection.cs", label=string, span=""];
m6_445 [file="SqlServerConnection.cs", label=query, span=""];
m6_446 [file="SqlServerConnection.cs", label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", span=""];
m7_0 [cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7"];
m7_1 [cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7"];
m8_8 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46"];
m8_9 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51"];
m8_14 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", span="37-37"];
m8_15 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyTransaction.cs", label="return Equals(obj as ExpressionFingerprint);", span="39-39"];
m8_16 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", span="37-37"];
m8_10 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m8_11 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyTransaction.cs", label="return (other != null)\r\n                   && (this.NodeType == other.NodeType)\r\n                   && Equals(this.Type, other.Type);", span="32-34"];
m8_12 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30"];
m8_4 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m8_5 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs", label="combiner.AddInt32((int)NodeType)", span="26-26"];
m8_6 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs", label="combiner.AddObject(Type)", span="27-27"];
m8_7 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24"];
m8_0 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="12-12"];
m8_1 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs", label="NodeType = nodeType", span="14-14"];
m8_2 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs", label="Type = type", span="15-15"];
m8_3 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="12-12"];
m8_13 [cluster="object.Equals(object, object)", file="SqlServerWriteOnlyTransaction.cs", label="Entry object.Equals(object, object)", span="0-0"];
m8_17 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", span="42-42"];
m8_18 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs", label="HashCodeCombiner combiner = new HashCodeCombiner()", span="44-44"];
m8_19 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs", label="AddToHashCodeCombiner(combiner)", span="45-45"];
m8_20 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs", label="return combiner.CombinedHash;", span="46-46"];
m8_21 [cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", span="42-42"];
m8_22 [cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", span="7-7"];
m8_23 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", span=""];
n36 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
n36 -> n4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
n36 -> n11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
n36 -> n25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
n36 -> n17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
n36 -> n30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n2 -> n5  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n0  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n8 -> n17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n19  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n21  [key=2, style=dotted];
n13 -> n13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n21  [key=2, style=dotted];
n17 -> n17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n10 -> n11  [key=0, style=solid];
n10 -> n10  [color=darkorchid, key=3, label="Local variable int removedCount", style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n20  [key=2, style=dotted];
n11 -> n24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n11 -> n15  [color=darkseagreen4, key=1, label=removedCount, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n15 -> n10  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n14 -> n14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n14 -> n17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n16 -> n17  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n18 -> n8  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=2, style=dotted];
n25 -> n28  [key=2, style=dotted];
n26 -> n24  [color=blue, key=0, style=bold];
n27 -> n34  [key=0, style=solid];
n27 -> d34  [color=green, key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n30 -> n33  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n34 -> n35  [key=0, style=solid];
n35 -> n27  [color=blue, key=0, style=bold];
d34 -> n35  [color=green, key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_3  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_71  [color=darkorchid, key=3, label="Local variable long awaitingCount", style=bold];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_30  [color=green, key=2, style=dotted];
m0_28 -> m0_31  [color=green, key=2, style=dotted];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_29 -> m0_27  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_33 -> m0_30  [color=green, key=2, style=dotted];
m0_33 -> m0_31  [color=green, key=2, style=dotted];
m0_32 -> m0_33  [color=green, key=0, style=solid];
m0_34 -> m0_32  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_42 -> m0_30  [color=green, key=2, style=dotted];
m0_42 -> m0_31  [color=green, key=2, style=dotted];
m0_41 -> m0_42  [color=green, key=0, style=solid];
m0_41 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_35  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [color=green, key=0, style=solid];
m0_47 -> m0_30  [color=green, key=2, style=dotted];
m0_47 -> m0_31  [color=green, key=2, style=dotted];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_48 -> m0_46  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [color=green, key=0, style=solid];
m0_50 -> m0_30  [color=green, key=2, style=dotted];
m0_50 -> m0_31  [color=green, key=2, style=dotted];
m0_50 -> m0_52  [color=green, key=2, style=dotted];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_51 -> m0_49  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [color=green, key=0, style=solid];
m0_54 -> m0_30  [color=green, key=2, style=dotted];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_55 -> m0_53  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [color=green, key=0, style=solid];
m0_57 -> m0_30  [color=green, key=2, style=dotted];
m0_57 -> m0_31  [color=green, key=2, style=dotted];
m0_56 -> m0_57  [color=green, key=0, style=solid];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_60 -> m0_61  [color=green, key=0, style=solid];
m0_60 -> m0_30  [color=green, key=2, style=dotted];
m0_60 -> m0_31  [color=green, key=2, style=dotted];
m0_59 -> m0_60  [color=green, key=0, style=solid];
m0_61 -> m0_59  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [color=green, key=0, style=solid];
m0_63 -> m0_30  [color=green, key=2, style=dotted];
m0_63 -> m0_31  [color=green, key=2, style=dotted];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_64 -> m0_62  [color=blue, key=0, style=bold];
m0_66 -> m0_30  [key=2, style=dotted];
m0_66 -> m0_31  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_69 -> m0_30  [key=2, style=dotted];
m0_69 -> m0_31  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_77 -> m0_30  [key=2, style=dotted];
m0_77 -> m0_31  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_41  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_43  [key=0, style=solid];
m0_35 -> m0_35  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.Metric ", style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_65  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_72 -> m0_77  [color=darkseagreen4, key=1, label=awaitingCount, style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_45  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_44  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_44  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=storageConnection, style=dashed];
m0_78 -> m0_71  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m1_41 -> m1_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_70  [key=2, style=dotted];
m1_41 -> m1_40  [key=2, style=dotted];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_30  [key=2, style=dotted];
m1_1 -> m1_54  [key=2, style=dotted];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_31  [color=green, key=2, style=dotted];
m1_2 -> m1_32  [key=2, style=dotted];
m1_2 -> m1_33  [key=2, style=dotted];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_34  [color=green, key=2, style=dotted];
m1_4 -> m1_6  [color=green, key=1, label=from, style=dashed];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_34  [color=green, key=2, style=dotted];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_35  [color=green, key=2, style=dotted];
m1_6 -> m1_36  [key=2, style=dotted];
m1_6 -> m1_33  [key=2, style=dotted];
m1_6 -> m1_9  [color=green, key=1, label=pager, style=dashed];
m1_6 -> m1_11  [color=green, key=1, label=pager, style=dashed];
m1_6 -> m1_28  [color=darkseagreen4, key=1, label=pager, style=dashed];
m1_6 -> m1_58  [color=green, key=2, style=dotted];
m1_6 -> m1_59  [color=green, key=2, style=dotted];
m1_6 -> m1_52  [color=green, key=1, label=pager, style=dashed];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_37  [key=2, style=dotted];
m1_7 -> m1_13  [color=darkseagreen4, key=1, label=enqueuedJobs, style=dashed];
m1_7 -> m1_60  [color=green, key=2, style=dotted];
m1_7 -> m1_14  [color=green, key=1, label=failedJobs, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [color=red, key=0, style=solid];
m1_11 -> m1_12  [color=red, key=0, style=solid];
m1_11 -> m1_38  [color=red, key=2, style=dotted];
m1_11 -> m1_39  [color=red, key=2, style=dotted];
m1_11 -> m1_40  [color=red, key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_46  [key=2, style=dotted];
m1_28 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_40  [key=2, style=dotted];
m1_28 -> m1_64  [key=2, style=dotted];
m1_28 -> m1_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_28 -> m1_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_30  [key=2, style=dotted];
m1_8 -> m1_54  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_27  [key=0, style=solid];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_13 -> m1_33  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_10 -> m1_29  [key=0, style=solid];
m1_10 -> m1_30  [key=2, style=dotted];
m1_10 -> m1_54  [key=2, style=dotted];
m1_10 -> m1_53  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_30  [key=2, style=dotted];
m1_12 -> m1_54  [key=2, style=dotted];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_14 -> m1_30  [key=2, style=dotted];
m1_14 -> m1_16  [color=green, key=1, label=job, style=dashed];
m1_14 -> m1_51  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_54  [key=2, style=dotted];
m1_15 -> m1_16  [color=green, key=0, style=solid];
m1_15 -> m1_33  [key=2, style=dotted];
m1_15 -> m1_41  [key=2, style=dotted];
m1_15 -> m1_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_15 -> m1_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_15 -> m1_54  [color=green, key=2, style=dotted];
m1_16 -> m1_17  [color=green, key=0, style=solid];
m1_16 -> m1_30  [key=2, style=dotted];
m1_16 -> m1_16  [color=green, key=1, label=job, style=dashed];
m1_16 -> m1_59  [color=green, key=2, style=dotted];
m1_16 -> m1_64  [color=green, key=2, style=dotted];
m1_16 -> m1_18  [color=green, key=1, label=job, style=dashed];
m1_17 -> m1_18  [color=green, key=0, style=solid];
m1_17 -> m1_42  [key=2, style=dotted];
m1_17 -> m1_40  [key=2, style=dotted];
m1_17 -> m1_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_17 -> m1_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_17 -> m1_54  [color=green, key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_30  [key=2, style=dotted];
m1_18 -> m1_18  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_18 -> m1_42  [key=2, style=dotted];
m1_18 -> m1_40  [key=2, style=dotted];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_43  [key=2, style=dotted];
m1_19 -> m1_41  [key=2, style=dotted];
m1_19 -> m1_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_19 -> m1_54  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_30  [key=2, style=dotted];
m1_20 -> m1_64  [key=2, style=dotted];
m1_20 -> m1_20  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_20 -> m1_66  [key=2, style=dotted];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_44  [key=2, style=dotted];
m1_21 -> m1_41  [key=2, style=dotted];
m1_21 -> m1_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_21 -> m1_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_21 -> m1_54  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_30  [key=2, style=dotted];
m1_22 -> m1_64  [key=2, style=dotted];
m1_22 -> m1_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_22 -> m1_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_45  [key=2, style=dotted];
m1_23 -> m1_41  [key=2, style=dotted];
m1_23 -> m1_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_23 -> m1_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_23 -> m1_54  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_24 -> m1_67  [key=2, style=dotted];
m1_24 -> m1_40  [key=2, style=dotted];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_41  [key=2, style=dotted];
m1_25 -> m1_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_25 -> m1_54  [key=2, style=dotted];
m1_26 -> m1_13  [key=0, style=solid];
m1_26 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_64  [key=2, style=dotted];
m1_26 -> m1_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_43  [key=2, style=dotted];
m1_26 -> m1_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_29 -> m1_0  [color=blue, key=0, style=bold];
m1_29 -> m1_54  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_36 -> m1_54  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_46  [key=2, style=dotted];
m1_52 -> m1_39  [key=2, style=dotted];
m1_52 -> m1_40  [key=2, style=dotted];
m1_30 -> m1_59  [key=2, style=dotted];
m1_30 -> m1_64  [key=2, style=dotted];
m1_30 -> m1_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_31 -> m1_54  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_54  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_64  [key=2, style=dotted];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label=index, style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_54  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_64  [key=2, style=dotted];
m1_35 -> m1_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_37 -> m1_64  [key=2, style=dotted];
m1_37 -> m1_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_38 -> m1_54  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_40 -> m1_54  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_42 -> m1_54  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_54  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_45 -> m1_54  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_64  [key=2, style=dotted];
m1_46 -> m1_46  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_47 -> m1_54  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_11  [color=red, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_47 -> m1_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m1_48 -> m1_64  [key=2, style=dotted];
m1_48 -> m1_48  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_49 -> m1_44  [key=0, style=solid];
m1_50 -> m1_14  [key=0, style=solid];
m1_50 -> m1_54  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_39 -> m1_43  [key=0, style=solid];
m1_39 -> m1_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_39 -> m1_69  [key=2, style=dotted];
m1_39 -> m1_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_44 -> m1_50  [key=0, style=solid];
m1_44 -> m1_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_53 -> m1_0  [color=blue, key=0, style=bold];
m1_72 -> m1_2  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_4  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_5  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_6  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_15  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_16  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_17  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m1_72 -> m1_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [color=darkorchid, key=3, label="method methodReturn string ToClassName", style=bold];
m3_3 -> m3_7  [color=darkorchid, key=3, label="method methodReturn string ToClassName", style=bold];
m3_3 -> m3_9  [color=darkorchid, key=3, label="method methodReturn string ToClassName", style=bold];
m3_3 -> m3_11  [color=darkorchid, key=3, label="method methodReturn string ToClassName", style=bold];
m3_3 -> m3_13  [color=darkorchid, key=3, label="method methodReturn string ToClassName", style=bold];
m3_3 -> m3_15  [color=darkorchid, key=3, label="method methodReturn string ToClassName", style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> m3_9  [key=0, style=solid];
m3_4 -> m3_11  [key=0, style=solid];
m3_4 -> m3_13  [key=0, style=solid];
m3_4 -> m3_15  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_6 -> m3_16  [key=0, style=solid];
m3_8 -> m3_16  [key=0, style=solid];
m3_10 -> m3_16  [key=0, style=solid];
m3_12 -> m3_16  [key=0, style=solid];
m3_14 -> m3_16  [key=0, style=solid];
m3_16 -> m3_3  [color=blue, key=0, style=bold];
m3_17 -> m3_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Metric", style=dashed];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_17  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_26  [color=blue, key=0, style=bold];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=0, style=solid];
m5_19 -> m5_23  [key=0, style=solid];
m5_19 -> m5_15  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_24  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_25  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_17  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=0, style=solid];
m5_11 -> m5_14  [key=0, style=solid];
m5_11 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_16  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_9  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=BasicDeliverEventArgs, style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="ref IModel", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_2 -> m5_6  [key=0, style=solid];
m5_2 -> n6  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_0  [color=blue, key=0, style=bold];
m5_31 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_20  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_27  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_28  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m5_31 -> m5_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", style=dashed];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_151 -> m6_154  [color=darkseagreen4, key=1, label=double, style=dashed];
m6_151 -> m6_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_151 -> m6_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_154  [key=0, style=solid];
m6_153 -> m6_157  [key=0, style=solid];
m6_153 -> m6_5  [key=2, style=dotted];
m6_153 -> m6_6  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_156  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_86  [key=2, style=dotted];
m6_156 -> m6_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_155 -> m6_157  [key=0, style=solid];
m6_155 -> m6_158  [key=2, style=dotted];
m6_157 -> m6_151  [color=blue, key=0, style=bold];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_197 -> m6_200  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m6_197 -> m6_201  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m6_197 -> m6_202  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m6_197 -> m6_203  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_197 -> m6_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_200  [key=0, style=solid];
m6_199 -> m6_204  [key=0, style=solid];
m6_199 -> m6_5  [key=2, style=dotted];
m6_199 -> m6_6  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_202  [key=0, style=solid];
m6_201 -> m6_204  [key=0, style=solid];
m6_201 -> m6_5  [key=2, style=dotted];
m6_201 -> m6_6  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_205  [key=2, style=dotted];
m6_202 -> m6_207  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> n20  [key=2, style=dotted];
m6_203 -> m6_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_204 -> m6_197  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_27 -> m6_30  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_27 -> m6_32  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_27 -> m6_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_29 -> m6_35  [key=0, style=solid];
m6_29 -> m6_5  [key=2, style=dotted];
m6_29 -> m6_6  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_36  [key=2, style=dotted];
m6_30 -> m6_37  [key=2, style=dotted];
m6_30 -> m6_38  [key=2, style=dotted];
m6_30 -> m6_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_30 -> m6_33  [color=darkseagreen4, key=1, label=providers, style=dashed];
m6_32 -> m6_35  [key=0, style=solid];
m6_32 -> m6_39  [key=2, style=dotted];
m6_32 -> m6_40  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_42  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_41  [key=2, style=dotted];
m6_35 -> m6_27  [color=blue, key=0, style=bold];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_219  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_217 -> m6_220  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_217 -> m6_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [key=0, style=solid];
m6_219 -> m6_221  [key=0, style=solid];
m6_219 -> m6_5  [key=2, style=dotted];
m6_219 -> m6_6  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> n20  [key=2, style=dotted];
m6_220 -> m6_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_221 -> m6_217  [color=blue, key=0, style=bold];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_181 -> m6_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_181 -> m6_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=0, style=solid];
m6_183 -> m6_5  [key=2, style=dotted];
m6_183 -> m6_6  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_57  [key=2, style=dotted];
m6_184 -> m6_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_185 -> m6_181  [color=blue, key=0, style=bold];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_332  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_330 -> m6_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_330 -> m6_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_333  [key=0, style=solid];
m6_332 -> m6_335  [key=0, style=solid];
m6_332 -> m6_5  [key=2, style=dotted];
m6_332 -> m6_6  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_86  [key=2, style=dotted];
m6_334 -> m6_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_337  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_335 -> m6_330  [color=blue, key=0, style=bold];
m6_26 -> m6_348  [key=0, style=solid];
m6_26 -> m6_351  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_354  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_356  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_357  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_26 -> m6_20  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timeout", style=bold];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_350  [key=0, style=solid];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_357  [key=0, style=solid];
m6_351 -> m6_362  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_356  [key=0, style=solid];
m6_352 -> m6_363  [key=2, style=dotted];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_364  [key=2, style=dotted];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_365  [key=2, style=dotted];
m6_356 -> m6_366  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_367  [key=2, style=dotted];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_368  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_360  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_361  [key=2, style=dotted];
m6_350 -> m6_354  [color=darkseagreen4, key=1, label=lockId, style=dashed];
m6_350 -> m6_357  [color=darkseagreen4, key=1, label=lockId, style=dashed];
m6_350 -> m6_358  [color=darkseagreen4, key=1, label=lockId, style=dashed];
m6_353 -> m6_354  [key=0, style=solid];
m6_355 -> m6_359  [key=0, style=solid];
m6_359 -> m6_26  [color=blue, key=0, style=bold];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_300  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_298 -> m6_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_298 -> m6_302  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_298 -> m6_304  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_298 -> m6_307  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_301  [key=0, style=solid];
m6_300 -> m6_305  [key=0, style=solid];
m6_300 -> m6_5  [key=2, style=dotted];
m6_300 -> m6_6  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_303  [key=0, style=solid];
m6_302 -> m6_305  [key=0, style=solid];
m6_302 -> m6_5  [key=2, style=dotted];
m6_302 -> m6_6  [key=2, style=dotted];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_86  [key=2, style=dotted];
m6_304 -> m6_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_307  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_305 -> m6_298  [color=blue, key=0, style=bold];
m6_225 -> m6_226  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_228  [key=0, style=solid];
m6_226 -> m6_230  [key=2, style=dotted];
m6_226 -> m6_226  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_227 -> m6_229  [key=0, style=solid];
m6_227 -> m6_231  [key=2, style=dotted];
m6_227 -> m6_6  [key=2, style=dotted];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> n20  [key=2, style=dotted];
m6_228 -> m6_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_228 -> m6_233  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_229 -> m6_225  [color=blue, key=0, style=bold];
m6_368 -> m6_385  [key=0, style=solid];
m6_368 -> m6_386  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_368 -> m6_387  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m6_385 -> m6_386  [key=0, style=solid];
m6_386 -> m6_387  [key=0, style=solid];
m6_387 -> m6_388  [key=0, style=solid];
m6_388 -> m6_368  [color=blue, key=0, style=bold];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_320  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_318 -> m6_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_318 -> m6_325  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_321  [key=0, style=solid];
m6_320 -> m6_323  [key=0, style=solid];
m6_320 -> m6_5  [key=2, style=dotted];
m6_320 -> m6_6  [key=2, style=dotted];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_86  [key=2, style=dotted];
m6_322 -> m6_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_325  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_323 -> m6_318  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_7  [color=blue, key=0, style=bold];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_279  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_277 -> m6_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_277 -> m6_284  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_280  [key=0, style=solid];
m6_279 -> m6_282  [key=0, style=solid];
m6_279 -> m6_5  [key=2, style=dotted];
m6_279 -> m6_6  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_86  [key=2, style=dotted];
m6_281 -> m6_283  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_284  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_282 -> m6_277  [color=blue, key=0, style=bold];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_270  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_268 -> m6_272  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_268 -> m6_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_271  [key=0, style=solid];
m6_270 -> m6_273  [key=0, style=solid];
m6_270 -> m6_5  [key=2, style=dotted];
m6_270 -> m6_6  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_86  [key=2, style=dotted];
m6_272 -> m6_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_275  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_273 -> m6_268  [color=blue, key=0, style=bold];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_211  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_209 -> m6_212  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_209 -> m6_215  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_212  [key=0, style=solid];
m6_211 -> m6_213  [key=0, style=solid];
m6_211 -> m6_5  [key=2, style=dotted];
m6_211 -> m6_6  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> n20  [key=2, style=dotted];
m6_212 -> m6_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_213 -> m6_209  [color=blue, key=0, style=bold];
m6_345 -> m6_346  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_17  [color=blue, key=0, style=bold];
m6_43 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_45 -> m6_43  [color=blue, key=0, style=bold];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_71  [key=2, style=dotted];
m6_59 -> m6_72  [key=2, style=dotted];
m6_59 -> m6_73  [key=2, style=dotted];
m6_59 -> m6_74  [key=2, style=dotted];
m6_59 -> m6_64  [color=red, key=1, label=jobId, style=dashed];
m6_59 -> m6_69  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_69  [key=0, style=solid];
m6_63 -> m6_64  [color=red, key=0, style=solid];
m6_63 -> m6_65  [color=red, key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_65  [color=red, key=1, label=DbConnection, style=dashed];
m6_65 -> m6_66  [color=red, key=0, style=solid];
m6_64 -> m6_63  [color=red, key=0, style=solid];
m6_64 -> m6_76  [color=red, key=2, style=dotted];
m6_64 -> m6_77  [color=red, key=2, style=dotted];
m6_64 -> m6_78  [color=red, key=2, style=dotted];
m6_64 -> m6_64  [color=red, key=1, label=parameter, style=dashed];
m6_69 -> m6_70  [key=0, style=solid];
m6_61 -> m6_62  [color=red, key=0, style=solid];
m6_61 -> m6_64  [color=red, key=1, label=insertParameterSql, style=dashed];
m6_62 -> m6_63  [color=red, key=0, style=solid];
m6_62 -> m6_75  [color=red, key=2, style=dotted];
m6_62 -> m6_64  [color=red, key=1, label=commandBatch, style=dashed];
m6_62 -> m6_65  [color=red, key=1, label=commandBatch, style=dashed];
m6_62 -> m6_66  [color=red, key=1, label=commandBatch, style=dashed];
m6_62 -> m6_67  [color=red, key=1, label=commandBatch, style=dashed];
m6_62 -> m6_68  [color=red, key=1, label=commandBatch, style=dashed];
m6_66 -> m6_67  [color=red, key=0, style=solid];
m6_67 -> m6_68  [color=red, key=0, style=solid];
m6_68 -> m6_69  [color=red, key=0, style=solid];
m6_68 -> m6_79  [color=red, key=2, style=dotted];
m6_70 -> m6_58  [color=blue, key=0, style=bold];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_100  [key=2, style=dotted];
m6_88 -> m6_73  [key=2, style=dotted];
m6_88 -> m6_101  [key=2, style=dotted];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m6_88 -> m6_98  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m6_87 -> m6_88  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_91  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_73  [key=2, style=dotted];
m6_91 -> m6_95  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m6_92 -> m6_93  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_103  [key=2, style=dotted];
m6_90 -> m6_99  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_98  [key=0, style=solid];
m6_95 -> m6_102  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_94 -> m6_95  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_99 -> m6_87  [color=blue, key=0, style=bold];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_100  [key=2, style=dotted];
m6_111 -> m6_73  [key=2, style=dotted];
m6_111 -> m6_101  [key=2, style=dotted];
m6_111 -> m6_114  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m6_111 -> m6_115  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m6_110 -> m6_111  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_114  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_117  [key=2, style=dotted];
m6_114 -> m6_73  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_118  [key=2, style=dotted];
m6_113 -> m6_116  [key=0, style=solid];
m6_116 -> m6_110  [color=blue, key=0, style=bold];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_100  [key=2, style=dotted];
m6_128 -> m6_130  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_129 -> m6_127  [color=blue, key=0, style=bold];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_100  [key=2, style=dotted];
m6_139 -> m6_73  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_140 -> m6_138  [color=blue, key=0, style=bold];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_73  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_150  [key=2, style=dotted];
m6_149 -> m6_146  [color=blue, key=0, style=bold];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_73  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_161 -> m6_159  [color=blue, key=0, style=bold];
m6_173 -> m6_174  [color=red, key=0, style=solid];
m6_173 -> m6_175  [color=red, key=0, style=solid];
m6_174 -> m6_173  [color=red, key=0, style=solid];
m6_174 -> m6_76  [color=red, key=2, style=dotted];
m6_174 -> m6_78  [color=red, key=2, style=dotted];
m6_174 -> m6_174  [color=red, key=1, label=keyValuePair, style=dashed];
m6_171 -> m6_172  [color=red, key=0, style=solid];
m6_171 -> m6_175  [color=red, key=1, label=DbConnection, style=dashed];
m6_171 -> m6_176  [color=red, key=1, label=DbTransaction, style=dashed];
m6_172 -> m6_173  [color=red, key=0, style=solid];
m6_172 -> m6_75  [color=red, key=2, style=dotted];
m6_172 -> m6_174  [color=red, key=1, label=commandBatch, style=dashed];
m6_172 -> m6_175  [color=red, key=1, label=commandBatch, style=dashed];
m6_172 -> m6_176  [color=red, key=1, label=commandBatch, style=dashed];
m6_172 -> m6_177  [color=red, key=1, label=commandBatch, style=dashed];
m6_172 -> m6_178  [color=red, key=1, label=commandBatch, style=dashed];
m6_172 -> m6_179  [color=red, key=1, label=commandBatch, style=dashed];
m6_175 -> m6_176  [color=red, key=0, style=solid];
m6_176 -> m6_177  [color=red, key=0, style=solid];
m6_177 -> m6_178  [color=red, key=0, style=solid];
m6_178 -> m6_179  [color=red, key=0, style=solid];
m6_179 -> m6_180  [color=red, key=0, style=solid];
m6_179 -> m6_79  [color=red, key=2, style=dotted];
m6_180 -> m6_171  [color=blue, key=0, style=bold];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_73  [key=2, style=dotted];
m6_187 -> m6_190  [key=2, style=dotted];
m6_187 -> m6_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_187 -> m6_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_186 -> m6_187  [key=0, style=solid];
m6_188 -> m6_189  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_194 -> m6_195  [key=0, style=solid];
m6_189 -> m6_186  [color=blue, key=0, style=bold];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_191  [color=blue, key=0, style=bold];
m6_195 -> m6_196  [key=0, style=solid];
m6_196 -> m6_194  [color=blue, key=0, style=bold];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_71  [key=2, style=dotted];
m6_207 -> m6_130  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_208 -> m6_206  [color=blue, key=0, style=bold];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_130  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_216 -> m6_214  [color=blue, key=0, style=bold];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_130  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_224 -> m6_222  [color=blue, key=0, style=bold];
m6_232 -> m6_233  [key=0, style=solid];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_235  [key=2, style=dotted];
m6_233 -> m6_72  [key=2, style=dotted];
m6_233 -> m6_130  [key=2, style=dotted];
m6_233 -> m6_233  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_234 -> m6_232  [color=blue, key=0, style=bold];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_73  [key=2, style=dotted];
m6_242 -> m6_244  [key=2, style=dotted];
m6_241 -> m6_242  [key=0, style=solid];
m6_243 -> m6_241  [color=blue, key=0, style=bold];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_73  [key=2, style=dotted];
m6_252 -> m6_254  [key=2, style=dotted];
m6_251 -> m6_252  [key=0, style=solid];
m6_253 -> m6_251  [color=blue, key=0, style=bold];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_73  [key=2, style=dotted];
m6_262 -> m6_265  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_261 -> m6_262  [key=0, style=solid];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_265  [key=0, style=solid];
m6_265 -> m6_266  [key=0, style=solid];
m6_264 -> m6_266  [key=0, style=solid];
m6_264 -> m6_267  [key=2, style=dotted];
m6_266 -> m6_261  [color=blue, key=0, style=bold];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_73  [key=2, style=dotted];
m6_274 -> m6_275  [key=0, style=solid];
m6_276 -> m6_274  [color=blue, key=0, style=bold];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_73  [key=2, style=dotted];
m6_283 -> m6_284  [key=0, style=solid];
m6_285 -> m6_283  [color=blue, key=0, style=bold];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_73  [key=2, style=dotted];
m6_293 -> m6_296  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_292 -> m6_293  [key=0, style=solid];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_296  [key=0, style=solid];
m6_296 -> m6_297  [key=0, style=solid];
m6_295 -> m6_297  [key=0, style=solid];
m6_295 -> m6_267  [key=2, style=dotted];
m6_297 -> m6_292  [color=blue, key=0, style=bold];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_73  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_308 -> m6_306  [color=blue, key=0, style=bold];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_73  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_317 -> m6_315  [color=blue, key=0, style=bold];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_73  [key=2, style=dotted];
m6_325 -> m6_328  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_324 -> m6_325  [key=0, style=solid];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_328  [key=0, style=solid];
m6_328 -> m6_329  [key=0, style=solid];
m6_327 -> m6_329  [key=0, style=solid];
m6_327 -> m6_267  [key=2, style=dotted];
m6_329 -> m6_324  [color=blue, key=0, style=bold];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_73  [key=2, style=dotted];
m6_337 -> m6_254  [key=2, style=dotted];
m6_336 -> m6_337  [key=0, style=solid];
m6_338 -> m6_336  [color=blue, key=0, style=bold];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_73  [key=2, style=dotted];
m6_346 -> m6_254  [key=2, style=dotted];
m6_347 -> m6_345  [color=blue, key=0, style=bold];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_162 -> m6_165  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m6_162 -> m6_166  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m6_162 -> m6_168  [color=red, key=1, label=string, style=dashed];
m6_162 -> m6_173  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m6_162 -> m6_174  [color=red, key=1, label=string, style=dashed];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_165  [key=0, style=solid];
m6_164 -> m6_169  [key=0, style=solid];
m6_164 -> m6_5  [key=2, style=dotted];
m6_164 -> m6_6  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_167  [color=red, key=0, style=solid];
m6_166 -> m6_169  [key=0, style=solid];
m6_166 -> m6_5  [key=2, style=dotted];
m6_166 -> m6_6  [key=2, style=dotted];
m6_168 -> m6_169  [color=red, key=0, style=solid];
m6_168 -> m6_170  [color=red, key=2, style=dotted];
m6_168 -> m6_171  [color=red, key=1, label="lambda expression", style=dashed];
m6_167 -> m6_168  [color=red, key=0, style=solid];
m6_167 -> m6_174  [color=red, key=1, label=sql, style=dashed];
m6_169 -> m6_162  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=2, style=dotted];
m6_15 -> m6_13  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_286 -> m6_290  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_286 -> m6_293  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_289  [key=0, style=solid];
m6_288 -> m6_291  [key=0, style=solid];
m6_288 -> m6_5  [key=2, style=dotted];
m6_288 -> m6_6  [key=2, style=dotted];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_86  [key=2, style=dotted];
m6_290 -> m6_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_293  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_291 -> m6_286  [color=blue, key=0, style=bold];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_245 -> m6_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_245 -> m6_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_248  [key=0, style=solid];
m6_247 -> m6_250  [key=0, style=solid];
m6_247 -> m6_5  [key=2, style=dotted];
m6_247 -> m6_6  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_86  [key=2, style=dotted];
m6_249 -> m6_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_252  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_250 -> m6_245  [color=blue, key=0, style=bold];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_80 -> m6_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_80 -> m6_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_83  [key=0, style=solid];
m6_82 -> m6_85  [key=0, style=solid];
m6_82 -> m6_5  [key=2, style=dotted];
m6_82 -> m6_6  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=2, style=dotted];
m6_84 -> m6_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_84 -> m6_84  [color=darkorchid, key=3, label="Local variable Hangfire.Common.JobLoadException loadException", style=bold];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_88  [color=darkseagreen4, key=1, label=sql, style=dashed];
m6_85 -> m6_80  [color=blue, key=0, style=bold];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_20 -> m6_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_20 -> m6_26  [color=darkorchid, key=3, label="method methodReturn System.IDisposable AcquireDistributedLock", style=bold];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=0, style=solid];
m6_21 -> m6_25  [key=2, style=dotted];
m6_22 -> m6_24  [key=0, style=solid];
m6_22 -> m6_5  [key=2, style=dotted];
m6_22 -> m6_6  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_20  [color=blue, key=0, style=bold];
m6_389 -> m6_390  [key=0, style=solid];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_364  [key=2, style=dotted];
m6_391 -> m6_389  [color=blue, key=0, style=bold];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m6_47 -> m6_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_47 -> m6_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_47 -> m6_53  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m6_47 -> m6_54  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_47 -> m6_59  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_47 -> m6_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_47 -> m6_63  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_50  [key=0, style=solid];
m6_49 -> m6_55  [key=0, style=solid];
m6_49 -> m6_5  [key=2, style=dotted];
m6_49 -> m6_6  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=0, style=solid];
m6_51 -> m6_55  [key=0, style=solid];
m6_51 -> m6_5  [key=2, style=dotted];
m6_51 -> m6_6  [key=2, style=dotted];
m6_53 -> m6_54  [color=red, key=0, style=solid];
m6_53 -> m6_56  [key=2, style=dotted];
m6_53 -> m6_59  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m6_54 -> m6_55  [color=red, key=0, style=solid];
m6_54 -> m6_57  [color=red, key=2, style=dotted];
m6_54 -> m6_58  [color=red, key=1, label="lambda expression", style=dashed];
m6_54 -> m6_54  [color=red, key=3, label="method methodReturn ? ", style=bold];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_54  [color=red, key=1, label=createJobSql, style=dashed];
m6_52 -> m6_59  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m6_55 -> m6_47  [color=blue, key=0, style=bold];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_141 -> m6_144  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_141 -> m6_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_144  [key=0, style=solid];
m6_143 -> m6_145  [key=0, style=solid];
m6_143 -> m6_5  [key=2, style=dotted];
m6_143 -> m6_6  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_86  [key=2, style=dotted];
m6_144 -> m6_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_145 -> m6_141  [color=blue, key=0, style=bold];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_341  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_339 -> m6_343  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_339 -> m6_346  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_342  [key=0, style=solid];
m6_341 -> m6_344  [key=0, style=solid];
m6_341 -> m6_5  [key=2, style=dotted];
m6_341 -> m6_6  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_86  [key=2, style=dotted];
m6_343 -> m6_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_346  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_344 -> m6_339  [color=blue, key=0, style=bold];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_119 -> m6_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_119 -> m6_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_119 -> m6_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_119 -> m6_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=0, style=solid];
m6_121 -> m6_125  [key=0, style=solid];
m6_121 -> m6_5  [key=2, style=dotted];
m6_121 -> m6_6  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_123 -> m6_125  [key=0, style=solid];
m6_123 -> m6_5  [key=2, style=dotted];
m6_123 -> m6_6  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> n20  [key=2, style=dotted];
m6_124 -> m6_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_125 -> m6_119  [color=blue, key=0, style=bold];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_257  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_255 -> m6_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_255 -> m6_262  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_258  [key=0, style=solid];
m6_257 -> m6_260  [key=0, style=solid];
m6_257 -> m6_5  [key=2, style=dotted];
m6_257 -> m6_6  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_86  [key=2, style=dotted];
m6_259 -> m6_261  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_262  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_260 -> m6_255  [color=blue, key=0, style=bold];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_131 -> m6_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_131 -> m6_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_131 -> m6_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_131 -> m6_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_134  [key=0, style=solid];
m6_133 -> m6_137  [key=0, style=solid];
m6_133 -> m6_5  [key=2, style=dotted];
m6_133 -> m6_6  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_135 -> m6_137  [key=0, style=solid];
m6_135 -> m6_5  [key=2, style=dotted];
m6_135 -> m6_6  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_86  [key=2, style=dotted];
m6_136 -> m6_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_137 -> m6_131  [color=blue, key=0, style=bold];
m6_364 -> m6_369  [key=0, style=solid];
m6_364 -> m6_370  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_364 -> m6_371  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_364 -> m6_372  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_364 -> m6_377  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_364 -> m6_26  [color=darkorchid, key=3, label="Parameter variable string resource", style=bold];
m6_364 -> m6_350  [color=darkorchid, key=3, label="Parameter variable System.Guid lockId", style=bold];
m6_364 -> m6_354  [color=darkorchid, key=3, label="Parameter variable bool onDisposing", style=bold];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_373  [key=0, style=solid];
m6_369 -> m6_362  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_373  [key=0, style=solid];
m6_370 -> m6_380  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_373  [key=0, style=solid];
m6_371 -> m6_381  [key=2, style=dotted];
m6_371 -> m6_382  [key=2, style=dotted];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_383  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_379  [key=0, style=solid];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_376  [key=0, style=solid];
m6_373 -> m6_379  [key=0, style=solid];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_384  [key=2, style=dotted];
m6_376 -> m6_377  [key=0, style=solid];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_379  [key=0, style=solid];
m6_378 -> m6_379  [key=0, style=solid];
m6_379 -> m6_364  [color=blue, key=0, style=bold];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_104 -> m6_108  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_104 -> m6_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_107  [key=0, style=solid];
m6_106 -> m6_109  [key=0, style=solid];
m6_106 -> m6_5  [key=2, style=dotted];
m6_106 -> m6_6  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_86  [key=2, style=dotted];
m6_108 -> m6_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_84  [color=darkorchid, key=3, label="method methodReturn Hangfire.Storage.StateData ", style=bold];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_111  [color=darkseagreen4, key=1, label=sql, style=dashed];
m6_109 -> m6_104  [color=blue, key=0, style=bold];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_236 -> m6_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_236 -> m6_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_239  [key=0, style=solid];
m6_238 -> m6_240  [key=0, style=solid];
m6_238 -> m6_5  [key=2, style=dotted];
m6_238 -> m6_6  [key=2, style=dotted];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_86  [key=2, style=dotted];
m6_239 -> m6_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_240 -> m6_236  [color=blue, key=0, style=bold];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_311  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_309 -> m6_313  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_309 -> m6_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_312  [key=0, style=solid];
m6_311 -> m6_314  [key=0, style=solid];
m6_311 -> m6_5  [key=2, style=dotted];
m6_311 -> m6_6  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_86  [key=2, style=dotted];
m6_313 -> m6_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_316  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_314 -> m6_309  [color=blue, key=0, style=bold];
m6_392 -> m6_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_18  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_52  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_54  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_59  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_62  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_66  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_67  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_83  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_84  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_88  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_107  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_108  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_111  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_124  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_136  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_144  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_147  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_156  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_160  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_167  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_168  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_172  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_177  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_178  [color=red, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_184  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_187  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_203  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_207  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_212  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_215  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_223  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_242  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_248  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_249  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_258  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_259  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_262  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_271  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_272  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_275  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_280  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_281  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_284  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_289  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_290  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_293  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_303  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_304  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_307  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_312  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_313  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_321  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_322  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_325  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_333  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_337  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_342  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_343  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_346  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_348  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_349  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_351  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_352  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_356  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_357  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_358  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_369  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_370  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_372  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_373  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_392 -> m6_375  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m6_393 -> m6_59  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_394 -> m6_59  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_395 -> m6_59  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m6_396 -> m6_59  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m6_397 -> m6_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_397 -> m6_63  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_398 -> m6_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_399 -> m6_88  [color=darkseagreen4, key=1, label=sql, style=dashed];
m6_400 -> m6_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_401 -> m6_111  [color=darkseagreen4, key=1, label=sql, style=dashed];
m6_402 -> m6_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_403 -> m6_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_404 -> m6_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_405 -> m6_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_406 -> m6_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_407 -> m6_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_408 -> m6_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_409 -> m6_160  [color=darkseagreen4, key=1, label=double, style=dashed];
m6_410 -> m6_160  [color=darkseagreen4, key=1, label=double, style=dashed];
m6_411 -> m6_173  [color=red, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m6_412 -> m6_174  [color=red, key=1, label=string, style=dashed];
m6_413 -> m6_174  [color=red, key=1, label=sql, style=dashed];
m6_414 -> m6_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_415 -> m6_207  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_416 -> m6_207  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_417 -> m6_215  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_418 -> m6_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_419 -> m6_233  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m6_420 -> m6_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_421 -> m6_252  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_422 -> m6_252  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_423 -> m6_252  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_424 -> m6_252  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_425 -> m6_262  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_426 -> m6_262  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_427 -> m6_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_428 -> m6_275  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_429 -> m6_284  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_430 -> m6_284  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_431 -> m6_293  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_432 -> m6_293  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_433 -> m6_307  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_434 -> m6_307  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_435 -> m6_307  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_436 -> m6_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_437 -> m6_316  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_438 -> m6_325  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_439 -> m6_325  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_440 -> m6_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_441 -> m6_337  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_442 -> m6_337  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_443 -> m6_337  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_444 -> m6_346  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_445 -> m6_346  [color=darkseagreen4, key=1, label=query, style=dashed];
m6_446 -> m6_385  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", style=dashed];
m6_446 -> m6_386  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", style=dashed];
m6_446 -> m6_387  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", style=dashed];
m6_446 -> m6_390  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_10  [key=2, style=dotted];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=2, style=dotted];
m8_12 -> m8_10  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.HashCodeCombiner", style=dashed];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [key=2, style=dotted];
m8_7 -> m8_4  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_0  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_22  [key=2, style=dotted];
m8_18 -> m8_20  [color=darkseagreen4, key=1, label=combiner, style=dashed];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_4  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_17  [color=blue, key=0, style=bold];
m8_23 -> m8_1  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m8_23 -> m8_2  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m8_23 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m8_23 -> m8_6  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m8_23 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m8_23 -> m8_15  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
m8_23 -> m8_19  [color=darkseagreen4, key=1, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", style=dashed];
}
