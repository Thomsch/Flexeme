digraph  {
m0_8 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22"];
m0_9 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServerOptions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object))", span="24-25"];
m0_10 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServerOptions.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="27-27"];
m0_11 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22"];
m0_65 [cluster="Hangfire.Server.PerformContext.SetJobParameter(string, object)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Server.PerformContext.SetJobParameter(string, object)", span="76-76"];
m0_25 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40"];
m0_26 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="BackgroundJobServerOptions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, _backgroundJob.Object, null))", span="42-43"];
m0_27 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="BackgroundJobServerOptions.cs", label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="45-45"];
m0_28 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40"];
m0_41 [cluster="Unk.Same", file="BackgroundJobServerOptions.cs", label="Entry Unk.Same", span=""];
m0_13 [cluster="Unk.Equal", file="BackgroundJobServerOptions.cs", label="Entry Unk.Equal", span=""];
m0_76 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100"];
m0_77 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="var context = CreateContext()", span="102-102"];
m0_78 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<string>(null))", span="104-105"];
m0_79 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100"];
m0_57 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79"];
m0_58 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="var context = CreateContext()", span="81-81"];
m0_59 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="83-84"];
m0_60 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="Assert.Equal(''name'', exception.ParamName)", span="86-86"];
m0_61 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79"];
m0_12 [cluster="Unk.>", file="BackgroundJobServerOptions.cs", label="Entry Unk.>", span=""];
m0_100 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Method()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Method()", span="124-124"];
m0_101 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Method()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Method()", span="124-124"];
m0_39 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118"];
m0_98 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="BackgroundJobServerOptions.cs", label="return new PerformContext(\r\n                _connection.Object, _backgroundJob.Object, _cancellationToken.Object);", span="120-121"];
m0_99 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118"];
m0_6 [cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9"];
m0_49 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67"];
m0_50 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="var context = CreateContext()", span="69-69"];
m0_51 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="var contextCopy = new PerformContext(context)", span="70-70"];
m0_52 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="Assert.Same(context.Items, contextCopy.Items)", span="72-72"];
m0_53 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="Assert.Same(context.Connection, contextCopy.Connection)", span="73-73"];
m0_54 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="Assert.Same(context.BackgroundJob, contextCopy.BackgroundJob)", span="74-74"];
m0_55 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="Assert.Same(context.CancellationToken, contextCopy.CancellationToken)", span="75-75"];
m0_56 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67"];
m0_40 [cluster="Unk.NotNull", file="BackgroundJobServerOptions.cs", label="Entry Unk.NotNull", span=""];
m0_83 [cluster="Hangfire.Server.PerformContext.GetJobParameter<T>(string)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Server.PerformContext.GetJobParameter<T>(string)", span="83-83"];
m0_94 [cluster="Unk.GetJobParameter", file="BackgroundJobServerOptions.cs", label="Entry Unk.GetJobParameter", span=""];
m0_42 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60"];
m0_43 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobServerOptions.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new PerformContext(null))", span="62-63"];
m0_44 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60"];
m0_89 [cluster="Unk.Setup", file="BackgroundJobServerOptions.cs", label="Entry Unk.Setup", span=""];
m0_48 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", span="30-30"];
m0_95 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="115-115"];
m0_14 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="25-25"];
m0_15 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object)", span="25-25"];
m0_16 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="25-25"];
m0_22 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="34-34"];
m0_23 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="new PerformContext(_connection.Object, null, _cancellationToken.Object)", span="34-34"];
m0_24 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="34-34"];
m0_29 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="43-43"];
m0_30 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="new PerformContext(_connection.Object, _backgroundJob.Object, null)", span="43-43"];
m0_31 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="43-43"];
m0_45 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="63-63"];
m0_46 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="new PerformContext(null)", span="63-63"];
m0_47 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="63-63"];
m0_63 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="context.SetJobParameter(null, null)", span="84-84"];
m0_62 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="84-84"];
m0_64 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="84-84"];
m0_72 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="96-96"];
m0_73 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\'''')", span="96-96"];
m0_74 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="96-96"];
m0_81 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="context.GetJobParameter<string>(null)", span="105-105"];
m0_80 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="105-105"];
m0_82 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="105-105"];
m0_91 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="111-111"];
m0_96 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="context.GetJobParameter<int>(''name'')", span="115-115"];
m0_92 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="x.GetJobParameter(_backgroundJob.Id, ''name'')", span="111-111"];
m0_93 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="111-111"];
m0_97 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="115-115"];
m0_71 [cluster="Unk.Verify", file="BackgroundJobServerOptions.cs", label="Entry Unk.Verify", span=""];
m0_7 [cluster="Mock<IJobCancellationToken>.cstr", file="BackgroundJobServerOptions.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m0_32 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49"];
m0_33 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="var context = CreateContext()", span="51-51"];
m0_34 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="Assert.Equal(_backgroundJob.Object, context.BackgroundJob)", span="53-53"];
m0_35 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="Assert.NotNull(context.Items)", span="54-54"];
m0_36 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="Assert.Same(_connection.Object, context.Connection)", span="55-55"];
m0_37 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="Assert.Same(_cancellationToken.Object, context.CancellationToken)", span="56-56"];
m0_38 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49"];
m0_66 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90"];
m0_67 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="BackgroundJobServerOptions.cs", label="var context = CreateContext()", span="92-92"];
m0_68 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="BackgroundJobServerOptions.cs", label="context.SetJobParameter(''name'', ''value'')", span="94-94"];
m0_69 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="BackgroundJobServerOptions.cs", label="_connection.Verify(x => x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\''''))", span="96-96"];
m0_70 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90"];
m0_0 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14"];
m0_1 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="BackgroundJobServerOptions.cs", label="_connection = new Mock<IStorageConnection>()", span="16-16"];
m0_2 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="BackgroundJobServerOptions.cs", label="_backgroundJob = new BackgroundJobMock()", span="17-17"];
m0_3 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="BackgroundJobServerOptions.cs", label="_cancellationToken = new Mock<IJobCancellationToken>()", span="18-18"];
m0_4 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14"];
m0_90 [cluster="Unk.Returns", file="BackgroundJobServerOptions.cs", label="Entry Unk.Returns", span=""];
m0_84 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109"];
m0_85 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServerOptions.cs", label="_connection.Setup(x => x.GetJobParameter(_backgroundJob.Id, ''name'')).Returns(''value'')", span="111-111"];
m0_86 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServerOptions.cs", label="var context = CreateContext()", span="112-112"];
m0_87 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServerOptions.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="114-115"];
m0_88 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109"];
m0_5 [cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobServerOptions.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_75 [cluster="Unk.SetJobParameter", file="BackgroundJobServerOptions.cs", label="Entry Unk.SetJobParameter", span=""];
m0_18 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31"];
m0_19 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="BackgroundJobServerOptions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, null, _cancellationToken.Object))", span="33-34"];
m0_20 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="BackgroundJobServerOptions.cs", label="Assert.Equal(''backgroundJob'', exception.ParamName)", span="36-36"];
m0_21 [cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31"];
m0_17 [cluster="PerformContext.cstr", file="BackgroundJobServerOptions.cs", label="Entry PerformContext.cstr", span=""];
m0_102 [file="BackgroundJobServerOptions.cs", label="Hangfire.Core.Tests.Server.PerformContextFacts", span=""];
m0_103 [file="BackgroundJobServerOptions.cs", label=context, span=""];
m0_104 [file="BackgroundJobServerOptions.cs", label=context, span=""];
m0_105 [file="BackgroundJobServerOptions.cs", label=context, span=""];
m2_28 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m2_40 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="ServerComponentRunnerCollection.cs", label="var random = new Random()", span="134-134"];
m2_41 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="ServerComponentRunnerCollection.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="135-136"];
m2_42 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="ServerComponentRunnerCollection.cs", label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m2_32 [cluster="string.Format(string, object, object)", file="ServerComponentRunnerCollection.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_33 [cluster="string.Format(string, params object[])", file="ServerComponentRunnerCollection.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m2_43 [cluster="System.Random.Random()", file="ServerComponentRunnerCollection.cs", label="Entry System.Random.Random()", span="0-0"];
m2_20 [cluster="string.Format(string, object)", file="ServerComponentRunnerCollection.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_19 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m2_35 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="context.CandidateState = new DeletedState\r\n            {\r\n                Reason = String.Format(''Automatic deletion after retry count exceeded {0}'', Attempts)\r\n            }", span="115-118"];
m2_36 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label=LogEvents, span="120-120"];
m2_37 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {1}.'',\r\n                        context.JobId,\r\n                        Attempts),\r\n                    failedState.Exception)", span="122-127"];
m2_38 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="Exit Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m2_30 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
m2_44 [cluster="System.Math.Pow(double, double)", file="ServerComponentRunnerCollection.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m2_34 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285"];
m2_17 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m2_29 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerCollection.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_8 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ServerComponentRunnerCollection.cs", label="return;", span="50-50"];
m2_9 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ServerComponentRunnerCollection.cs", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="53-53"];
m2_10 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ServerComponentRunnerCollection.cs", label="retryAttempt <= Attempts", span="55-55"];
m2_11 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ServerComponentRunnerCollection.cs", label="ScheduleAgainLater(context, retryAttempt, failedState)", span="57-57"];
m2_12 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, file="ServerComponentRunnerCollection.cs", label="retryAttempt > Attempts && OnAttemptsExceeded == AttemptsExceededAction.Delete", prediction=0, span="59-59"];
m2_0 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10"];
m2_1 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="ServerComponentRunnerCollection.cs", label="var provider = CreateProvider()", span="12-12"];
m2_2 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="ServerComponentRunnerCollection.cs", label="var jobQueue = provider.GetJobQueue(null)", span="14-14"];
m2_3 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="ServerComponentRunnerCollection.cs", label="Assert.NotNull(jobQueue)", span="16-16"];
m2_4 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="ServerComponentRunnerCollection.cs", label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10"];
m2_39 [cluster="Hangfire.States.DeletedState.DeletedState()", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m2_7 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ServerComponentRunnerCollection.cs", label="failedState == null", span="47-47"];
m2_6 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="ServerComponentRunnerCollection.cs", label="var failedState = context.CandidateState as FailedState", span="46-46"];
m2_5 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29"];
m2_13 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m2_14 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="ServerComponentRunnerCollection.cs", label="return new MsmqJobQueueProvider(\r\n                CleanMsmqQueueAttribute.PathPattern,\r\n                Queues);", span="31-33"];
m2_15 [cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="ServerComponentRunnerCollection.cs", label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29"];
m2_16 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", span="26-26"];
m2_31 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m2_45 [cluster="System.Random.Next(int)", file="ServerComponentRunnerCollection.cs", label="Entry System.Random.Next(int)", span="0-0"];
m2_46 [cluster="System.Math.Round(double)", file="ServerComponentRunnerCollection.cs", label="Entry System.Math.Round(double)", span="0-0"];
m2_18 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m2_24 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="context.CandidateState = new ScheduledState(delay)\r\n            {\r\n                Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n            }", span="90-93"];
m2_25 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label=LogEvents, span="95-95"];
m2_26 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay),\r\n                    failedState.Exception)", span="97-104"];
m2_22 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="84-84"];
m2_23 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="86-86"];
m2_27 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="ServerComponentRunnerCollection.cs", label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m2_21 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="ServerComponentRunnerCollection.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="166-166"];
m2_47 [file="ServerComponentRunnerCollection.cs", label="Hangfire.AutomaticRetryAttribute", span=""];
m3_0 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m3_1 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="MaxRetryAttempts = 10", span="26-26"];
m3_2 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ServerComponentRunnerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(5)", span="27-27"];
m3_3 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", color=green, community=0, file="ServerComponentRunnerOptions.cs", label="Exit HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", prediction=1, span="24-24"];
m3_4 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerComponentRunnerOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_5 [file="ServerComponentRunnerOptions.cs", label="HangFire.Server.ServerComponentRunnerOptions", span=""];
m4_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerManager.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_27 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m4_15 [cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m4_24 [cluster="HangFire.Server.WorkerManager.Stop()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Stop()", span="51-51"];
m4_26 [cluster="HangFire.Server.WorkerManager.Stop()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Stop()", span="51-51"];
m4_16 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m4_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_14 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="WorkerManager.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m4_23 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m4_28 [cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Dispose()", span="56-56"];
m4_29 [cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs", label="_workerRunners.Dispose()", span="58-58"];
m4_30 [cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Dispose()", span="56-56"];
m4_17 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="61-61"];
m4_33 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="61-61"];
m4_31 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m4_0 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28"];
m4_1 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="sharedContext == null", span="30-30"];
m4_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="workerCount <= 0", span="32-32"];
m4_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="34-34"];
m4_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="i <= workerCount", span="35-35"];
m4_8 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="var workerContext = new WorkerContext(sharedContext, i)", span="37-37"];
m4_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="throw new ArgumentNullException(''sharedContext'');", span="30-30"];
m4_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="32-32"];
m4_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="var i = 1", span="35-35"];
m4_9 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="40-40"];
m4_11 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="43-43"];
m4_10 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="i++", span="35-35"];
m4_12 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28"];
m4_34 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m4_35 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m4_20 [cluster="HangFire.Server.WorkerManager.Start()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Start()", span="46-46"];
m4_22 [cluster="HangFire.Server.WorkerManager.Start()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Start()", span="46-46"];
m4_19 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m4_36 [file="WorkerManager.cs", label="HangFire.Server.WorkerManager", span=""];
m5_47 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", span="69-69"];
m5_49 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Start())", span="73-73"];
m5_50 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Start())", span="74-74"];
m5_51 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", span="69-69"];
m5_10 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m5_34 [cluster="Unk.Equal", file="WorkerManagerFacts.cs", label="Entry Unk.Equal", span=""];
m5_60 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", span="78-78"];
m5_62 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Stop())", span="82-82"];
m5_63 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Stop())", span="83-83"];
m5_64 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", span="78-78"];
m5_65 [cluster="Unk.Stop", file="WorkerManagerFacts.cs", label="Entry Unk.Stop", span=""];
m5_72 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="87-87"];
m5_73 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Dispose()", span="89-89"];
m5_74 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Dispose())", span="91-91"];
m5_75 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Dispose())", span="92-92"];
m5_76 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="87-87"];
m5_11 [cluster="Mock<IServerComponentRunner>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m5_12 [cluster="Mock<WorkerManager>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<WorkerManager>.cstr", span=""];
m5_0 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="17-17"];
m5_1 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_sharedContext = new SharedWorkerContext(\r\n                ''server'',\r\n                new[] { ''default'' },\r\n                new Mock<JobStorage>().Object,\r\n                new Mock<IJobPerformanceProcess>().Object,\r\n                new Mock<JobActivator>().Object,\r\n                new Mock<IStateMachineFactory>().Object)", span="19-25"];
m5_2 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_workerRunners = new[]\r\n            {\r\n                new Mock<IServerComponentRunner>(), \r\n                new Mock<IServerComponentRunner>()\r\n            }", span="27-31"];
m5_3 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_manager = new Mock<WorkerManager>(\r\n                _sharedContext, WorkerCount)", span="33-34"];
m5_4 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_manager.Setup(x => x.CreateWorkerRunner(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerRunners[context.WorkerNumber - 1].Object)", span="36-37"];
m5_5 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="17-17"];
m5_18 [cluster="Unk.>", file="WorkerManagerFacts.cs", label="Entry Unk.>", span=""];
m5_23 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="41-41"];
m5_24 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(null, WorkerCount))", span="43-44"];
m5_25 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenSharedContextIsNull()", span="41-41"];
m5_30 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="48-48"];
m5_31 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="50-52"];
m5_32 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Assert.Equal(''workerCount'', exception.ParamName)", span="54-54"];
m5_33 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="48-48"];
m5_46 [cluster="Unk.NotNull", file="WorkerManagerFacts.cs", label="Entry Unk.NotNull", span=""];
m5_44 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m5_13 [cluster="Unk.Setup", file="WorkerManagerFacts.cs", label="Entry Unk.Setup", span=""];
m5_77 [cluster="Unk.Dispose", file="WorkerManagerFacts.cs", label="Entry Unk.Dispose", span=""];
m5_45 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="61-61"];
m5_8 [cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m5_81 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="92-92"];
m5_15 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="36-36"];
m5_20 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="37-37"];
m5_16 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.CreateWorkerRunner(It.IsNotNull<WorkerContext>())", span="36-36"];
m5_17 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="36-36"];
m5_21 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="_workerRunners[context.WorkerNumber - 1].Object", span="37-37"];
m5_22 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="37-37"];
m5_26 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="44-44"];
m5_27 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="new WorkerManager(null, WorkerCount)", span="44-44"];
m5_28 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="44-44"];
m5_35 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="51-52"];
m5_36 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="new WorkerManager(\r\n                    _sharedContext, 0)", span="51-52"];
m5_37 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="51-52"];
m5_54 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="73-73"];
m5_57 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="74-74"];
m5_55 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Start()", span="73-73"];
m5_56 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="73-73"];
m5_58 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Start()", span="74-74"];
m5_59 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="74-74"];
m5_66 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="82-82"];
m5_69 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="83-83"];
m5_67 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Stop()", span="82-82"];
m5_68 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="82-82"];
m5_70 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Stop()", span="83-83"];
m5_71 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="83-83"];
m5_78 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="91-91"];
m5_79 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Dispose()", span="91-91"];
m5_80 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="91-91"];
m5_82 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Dispose()", span="92-92"];
m5_83 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="92-92"];
m5_52 [cluster="Unk.Start", file="WorkerManagerFacts.cs", label="Entry Unk.Start", span=""];
m5_9 [cluster="Mock<JobActivator>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m5_19 [cluster="Unk.CreateWorkerRunner", file="WorkerManagerFacts.cs", label="Entry Unk.CreateWorkerRunner", span=""];
m5_6 [cluster="SharedWorkerContext.cstr", file="WorkerManagerFacts.cs", label="Entry SharedWorkerContext.cstr", span=""];
m5_14 [cluster="Unk.Returns", file="WorkerManagerFacts.cs", label="Entry Unk.Returns", span=""];
m5_29 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28"];
m5_53 [cluster="Unk.Verify", file="WorkerManagerFacts.cs", label="Entry Unk.Verify", span=""];
m5_7 [cluster="Mock<JobStorage>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m5_38 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="58-58"];
m5_39 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="60-60"];
m5_40 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var context = new WorkerContext(_sharedContext, 1)", span="61-61"];
m5_41 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var worker = manager.CreateWorkerRunner(context)", span="63-63"];
m5_42 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Assert.NotNull(worker)", span="65-65"];
m5_43 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="58-58"];
m5_84 [file="WorkerManagerFacts.cs", label="HangFire.Core.Tests.Server.WorkerManagerFacts", span=""];
m0_9 -> m0_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_77 -> m0_81  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_58 -> m0_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_59 -> m0_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_50 -> m0_54  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_50 -> m0_55  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m0_51 -> m0_54  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m0_51 -> m0_55  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_33 -> m0_36  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_33 -> m0_37  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_69 -> m0_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_85 -> m0_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_96  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_87 -> m0_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_102 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_30  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_92  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_102 -> m0_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.PerformContextFacts", style=dashed];
m0_103 -> m0_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_104 -> m0_81  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_105 -> m0_96  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_28 -> m2_41  [color=darkseagreen4, key=1, label=long, style=dashed];
m2_19 -> m2_37  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_9 -> m2_12  [color=green, key=1, label=retryAttempt, style=dashed];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m2_6 -> m2_13  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m2_6 -> m2_11  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m2_6 -> m2_15  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m2_5 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_5 -> m2_15  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_18 -> m2_26  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_18 -> m2_23  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label=delay, style=dashed];
m2_47 -> m2_12  [color=green, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_10  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_11  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_14  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_25  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_26  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_36  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_47 -> m2_37  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m3_5 -> m3_3  [color=green, key=1, label="HangFire.Server.ServerComponentRunnerOptions", style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m4_6 -> m4_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_10 -> m4_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_36 -> m4_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m4_36 -> m4_29  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m5_49 -> m5_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_50 -> m5_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_62 -> m5_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_63 -> m5_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_74 -> m5_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_75 -> m5_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4 -> m5_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_4 -> m5_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_24 -> m5_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_84 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_74  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m5_84 -> m5_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
}
