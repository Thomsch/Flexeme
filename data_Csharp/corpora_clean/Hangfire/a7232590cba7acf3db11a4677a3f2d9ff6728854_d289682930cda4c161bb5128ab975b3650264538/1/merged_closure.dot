digraph  {
m0_23 [cluster="Unk.Returns", file="WorkerManager.cs", label="Entry Unk.Returns", span=""];
m0_31 [cluster="Unk.>", color=green, community=0, file="WorkerManager.cs", label="Entry Unk.>", prediction=0, span=""];
m0_32 [cluster="Unk.GetFilters", file="WorkerManager.cs", label="Entry Unk.GetFilters", span=""];
m0_8 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="WorkerManager.cs", label="_filters = new List<object>()", span="33-33"];
m0_45 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", file="WorkerManager.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="34-34"];
m0_19 [cluster="Hangfire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="cancellationToken.WaitHandle.WaitOne()", span="50-50"];
m0_446 [cluster="Mock<T>.cstr", file="WorkerManager.cs", label="Entry Mock<T>.cstr", span=""];
m0_12 [cluster="Hangfire.Server.WorkerManager.Execute(System.Threading.CancellationToken)", file="WorkerManager.cs", label="var i = 1", span="39-39"];
m0_93 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="102-102"];
m0_94 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="105-105"];
m0_95 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="var process = CreateProcess()", span="106-106"];
m0_96 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="108-110"];
m0_97 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="var result = process.Run(_context, _performer.Object)", span="113-113"];
m0_98 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="Assert.Equal(''Returned value'', result)", span="116-116"];
m0_99 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ReturnsValueReturnedByJob()", span="102-102"];
m0_37 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="WorkerManager.cs", label="Hangfire.Server.WorkerManager", span=""];
m0_38 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="WorkerManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new DefaultJobPerformanceProcess(null))", span="42-43"];
m0_39 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="WorkerManager.cs", label="Assert.Equal(''activator'', exception.ParamName)", span="45-45"];
m0_40 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Ctor_ThrowsAnException_WhenActivator_IsNull()", span="40-40"];
m0_41 [cluster="Unk.Equal", file="WorkerManager.cs", label="Entry Unk.Equal", span=""];
m0_51 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="483-483"];
m0_439 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="WorkerManager.cs", label="return new DefaultJobPerformanceProcess(_activator.Object, _filterProvider.Object);", span="485-485"];
m0_440 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateProcess()", span="483-483"];
m0_161 [cluster="Unk.DoesNotThrow", file="WorkerManager.cs", label="Entry Unk.DoesNotThrow", span=""];
m0_55 [cluster="Unk.Run", file="WorkerManager.cs", label="Entry Unk.Run", span=""];
m0_89 [cluster="Unk.OnPerformed", file="WorkerManager.cs", label="Entry Unk.OnPerformed", span=""];
m0_398 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="429-429"];
m0_399 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<OperationCanceledException>()", span="432-434"];
m0_400 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="436-436"];
m0_401 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="var process = CreateProcess()", span="437-437"];
m0_403 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="filter.Verify(\r\n                x => x.OnServerException(It.IsAny<ServerExceptionContext>()),\r\n                Times.Never)", span="444-446"];
m0_402 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="440-441"];
m0_404 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ServerFiltersAreNotInvoked_OnOperationCanceledException()", span="429-429"];
m0_283 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerManager.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_56 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="60-60"];
m0_58 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="WorkerManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(_context, null))", span="64-65"];
m0_59 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="WorkerManager.cs", label="Assert.Equal(''performer'', exception.ParamName)", span="67-67"];
m0_60 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenPerformPerformerIsNull()", span="60-60"];
m0_10 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="WorkerManager.cs", label="_filterProvider.Setup(x => x.GetFilters(It.IsNotNull<Job>())).Returns(\r\n                _filters.Select(f => new JobFilter(f, JobFilterScope.Type, null)))", span="35-36"];
m0_15 [cluster="PerformContext.cstr", file="WorkerManager.cs", label="Entry PerformContext.cstr", span=""];
m0_14 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m0_11 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.DefaultJobPerformanceProcessFacts()", span="20-20"];
m0_16 [cluster="Mock<IJobCancellationToken>.cstr", file="WorkerManager.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m0_13 [cluster="Mock<IStorageConnection>.cstr", file="WorkerManager.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m0_17 [cluster="Mock<IJobPerformer>.cstr", file="WorkerManager.cs", label="Entry Mock<IJobPerformer>.cstr", span=""];
m0_18 [cluster="Mock<JobActivator>.cstr", file="WorkerManager.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m0_20 [cluster="Mock<IJobFilterProvider>.cstr", file="WorkerManager.cs", label="Entry Mock<IJobFilterProvider>.cstr", span=""];
m0_192 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="219-219"];
m0_193 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="222-222"];
m0_194 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="223-223"];
m0_195 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="outerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="225-225"];
m0_198 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="outerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="228-228"];
m0_196 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>())).InSequence()", span="226-226"];
m0_197 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>())).InSequence()", span="227-227"];
m0_199 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="var process = CreateProcess()", span="230-230"];
m0_200 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="233-233"];
m0_201 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="219-219"];
m0_0 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27"];
m0_1 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="sharedContext == null", span="29-29"];
m0_2 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="throw new ArgumentNullException(''sharedContext'');", span="29-29"];
m0_5 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="_sharedContext = sharedContext", span="32-32"];
m0_3 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="workerCount <= 0", span="30-30"];
m0_4 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="30-30"];
m0_6 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="_workerCount = workerCount", span="33-33"];
m0_7 [cluster="Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Exit Hangfire.Server.WorkerManager.WorkerManager(Hangfire.Server.SharedWorkerContext, int)", span="27-27"];
m0_9 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="WorkerManager.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m0_131 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="155-155"];
m0_132 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="var filter1 = CreateFilter<IServerExceptionFilter>()", span="158-158"];
m0_133 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="var filter2 = CreateFilter<IServerExceptionFilter>()", span="159-159"];
m0_135 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="filter1.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="162-162"];
m0_134 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="filter2.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>())).InSequence()", span="161-161"];
m0_136 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="164-166"];
m0_137 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="var process = CreateProcess()", span="168-168"];
m0_138 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="171-172"];
m0_139 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="155-155"];
m0_318 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="348-348"];
m0_319 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="351-351"];
m0_320 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="var exception = new InvalidOperationException()", span="353-353"];
m0_322 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="358-359"];
m0_321 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="354-356"];
m0_323 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="var process = CreateProcess()", span="361-361"];
m0_324 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="364-364"];
m0_325 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotThrow_HandledExceptions()", span="348-348"];
m0_414 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="450-450"];
m0_415 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="453-453"];
m0_416 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<OperationCanceledException>()", span="454-455"];
m0_417 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="WorkerManager.cs", label="var process = CreateProcess()", span="457-457"];
m0_418 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="WorkerManager.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="460-461"];
m0_419 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPreFilterMethods()", span="450-450"];
m0_82 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="488-488"];
m0_442 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="WorkerManager.cs", label="var filter = new Mock<T>()", span="491-491"];
m0_443 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="WorkerManager.cs", label="_filters.Add(filter.Object)", span="492-492"];
m0_444 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="WorkerManager.cs", label="return filter;", span="494-494"];
m0_445 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.CreateFilter<T>()", span="488-488"];
m0_426 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="465-465"];
m0_427 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="468-468"];
m0_428 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<OperationCanceledException>()", span="469-470"];
m0_429 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="WorkerManager.cs", label="var process = CreateProcess()", span="472-472"];
m0_430 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="WorkerManager.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context, _performer.Object))", span="475-476"];
m0_431 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsOperationCanceledException_OccurredInPostFilterMethods()", span="465-465"];
m0_65 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="71-71"];
m0_66 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="WorkerManager.cs", label="var process = CreateProcess()", span="73-73"];
m0_67 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="75-75"];
m0_68 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="WorkerManager.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()), \r\n                Times.Once)", span="77-79"];
m0_69 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsPerformStrategy()", span="71-71"];
m0_114 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="135-135"];
m0_115 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="138-138"];
m0_116 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="140-142"];
m0_119 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="filter.Verify(x => x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>()))", span="150-151"];
m0_117 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="var process = CreateProcess()", span="144-144"];
m0_118 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="147-148"];
m0_120 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsExceptionFilter_OnException()", span="135-135"];
m0_33 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="36-36"];
m0_174 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="196-196"];
m0_175 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="199-199"];
m0_176 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerforming(It.IsNotNull<PerformingContext>()))\r\n                .InSequence()", span="201-202"];
m0_178 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerformed(It.IsNotNull<PerformedContext>()))\r\n                .InSequence()", span="207-208"];
m0_177 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="_performer.Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .InSequence()", span="204-205"];
m0_179 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="var process = CreateProcess()", span="210-210"];
m0_180 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="213-213"];
m0_181 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_CallsServerFilters_BeforeAndAfterTheCreationOfAJob()", span="196-196"];
m0_275 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="305-305"];
m0_276 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="308-308"];
m0_277 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="var exception = new InvalidOperationException()", span="310-310"];
m0_281 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="filter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception)))", span="322-323"];
m0_278 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="311-313"];
m0_279 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="var process = CreateProcess()", span="315-315"];
m0_280 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="318-319"];
m0_282 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringThePerformanceOfAJob()", span="305-305"];
m0_130 [cluster="Unk.OnServerException", file="WorkerManager.cs", label="Entry Unk.OnServerException", span=""];
m0_153 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="178-178"];
m0_154 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="181-183"];
m0_155 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerExceptionFilter>()", span="185-185"];
m0_156 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="filter.Setup(x => x.OnServerException(It.IsAny<ServerExceptionContext>()))\r\n                .Callback((ServerExceptionContext x) => x.ExceptionHandled = true)", span="186-187"];
m0_157 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="var process = CreateProcess()", span="189-189"];
m0_158 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="192-192"];
m0_159 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_EatsException_WhenItWasHandlerByFilter()", span="178-178"];
m0_441 [cluster="DefaultJobPerformanceProcess.cstr", file="WorkerManager.cs", label="Entry DefaultJobPerformanceProcess.cstr", span=""];
m0_103 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="120-120"];
m0_104 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="123-125"];
m0_105 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="WorkerManager.cs", label="var process = CreateProcess()", span="127-127"];
m0_106 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="WorkerManager.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="130-131"];
m0_107 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCatchExceptions()", span="120-120"];
m0_75 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="83-83"];
m0_76 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="86-86"];
m0_77 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="var process = CreateProcess()", span="87-87"];
m0_80 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="filter.Verify(\r\n                x => x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value'')))", span="97-98"];
m0_78 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>()))\r\n                .Returns(''Returned value'')", span="89-91"];
m0_79 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="94-94"];
m0_81 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_StoresJobReturnValueInPerformedContext()", span="83-83"];
m0_185 [cluster="Unk.OnPerforming", file="WorkerManager.cs", label="Entry Unk.OnPerforming", span=""];
m0_341 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="368-368"];
m0_342 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="371-371"];
m0_343 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="372-372"];
m0_348 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null)))", span="387-387"];
m0_344 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="374-376"];
m0_345 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="innerFilter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Callback((PerformedContext x) => x.ExceptionHandled = true)", span="378-379"];
m0_346 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="var process = CreateProcess()", span="381-381"];
m0_347 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="Assert.DoesNotThrow(() => process.Run(_context, _performer.Object))", span="384-384"];
m0_349 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="368-368"];
m0_34 [cluster="lambda expression", file="WorkerManager.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="36-36"];
m0_36 [cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="WorkerManager.cs", label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38"];
m0_140 [cluster="Unk.InSequence", file="WorkerManager.cs", label="Entry Unk.InSequence", span=""];
m0_447 [cluster="Unk.Add", file="WorkerManager.cs", label="Entry Unk.Add", span=""];
m0_25 [cluster="lambda expression", file="WorkerManager.cs", label="Method()", span="26-26"];
m0_234 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="261-261"];
m0_235 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="264-264"];
m0_236 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="265-265"];
m0_240 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled)))", span="276-276"];
m0_237 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="innerFilter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext context) => context.Canceled = true)", span="267-268"];
m0_238 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="var process = CreateProcess()", span="270-270"];
m0_239 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="273-273"];
m0_241 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="261-261"];
m0_21 [cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m0_27 [cluster="System.Threading.WaitHandle.WaitOne()", file="WorkerManager.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m0_438 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Method()", span="479-479"];
m0_284 [cluster="Unk.Throws", file="WorkerManager.cs", label="Entry Unk.Throws", span=""];
m0_74 [cluster="Unk.Perform", file="WorkerManager.cs", label="Entry Unk.Perform", span=""];
m0_46 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="49-49"];
m0_47 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="WorkerManager.cs", label="var process = CreateProcess()", span="51-51"];
m0_48 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="WorkerManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null, _performer.Object))", span="53-54"];
m0_49 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="WorkerManager.cs", label="Assert.Equal(''context'', exception.ParamName)", span="56-56"];
m0_50 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="49-49"];
m0_26 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="26-26"];
m0_214 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="239-239"];
m0_215 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="242-242"];
m0_216 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Callback((PerformingContext x) => x.Canceled = true)", span="244-245"];
m0_220 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="257-257"];
m0_217 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="var process = CreateProcess()", span="247-247"];
m0_218 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="250-250"];
m0_219 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="253-255"];
m0_221 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCallBoth_Perform_And_OnPerforming_WhenFilterCancelsThis()", span="239-239"];
m0_435 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="476-476"];
m0_24 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_28 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="35-35"];
m0_29 [cluster="lambda expression", file="WorkerManager.cs", label="x.GetFilters(It.IsNotNull<Job>())", span="35-35"];
m0_30 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="35-35"];
m0_35 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28"];
m0_42 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="43-43"];
m0_43 [cluster="lambda expression", file="WorkerManager.cs", label="new DefaultJobPerformanceProcess(null)", span="43-43"];
m0_44 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="43-43"];
m0_53 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(null, _performer.Object)", span="54-54"];
m0_52 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="54-54"];
m0_54 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="54-54"];
m0_62 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, null)", span="65-65"];
m0_61 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="65-65"];
m0_63 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="65-65"];
m0_71 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="78-78"];
m0_72 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="78-78"];
m0_73 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="78-78"];
m0_83 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="90-90"];
m0_86 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="98-98"];
m0_84 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="90-90"];
m0_85 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="90-90"];
m0_87 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => (string)context.Result == ''Returned value''))", span="98-98"];
m0_88 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="98-98"];
m0_90 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="98-98"];
m0_91 [cluster="lambda expression", file="WorkerManager.cs", label="(string)context.Result == ''Returned value''", span="98-98"];
m0_92 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="98-98"];
m0_100 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="109-109"];
m0_101 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsNotNull<IJobCancellationToken>())", span="109-109"];
m0_102 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="109-109"];
m0_108 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="124-124"];
m0_112 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="131-131"];
m0_111 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="131-131"];
m0_109 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="124-124"];
m0_110 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="124-124"];
m0_113 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="131-131"];
m0_121 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="141-141"];
m0_125 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="148-148"];
m0_124 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="148-148"];
m0_127 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="150-151"];
m0_122 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="141-141"];
m0_123 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="141-141"];
m0_126 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="148-148"];
m0_128 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnServerException(\r\n                It.IsNotNull<ServerExceptionContext>())", span="150-151"];
m0_129 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="150-151"];
m0_141 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="161-161"];
m0_144 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="162-162"];
m0_147 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="165-165"];
m0_151 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="172-172"];
m0_150 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="172-172"];
m0_142 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="161-161"];
m0_143 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="161-161"];
m0_145 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="162-162"];
m0_146 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="162-162"];
m0_148 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="165-165"];
m0_149 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="165-165"];
m0_152 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="172-172"];
m0_162 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="182-182"];
m0_165 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="186-186"];
m0_168 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="187-187"];
m0_172 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="192-192"];
m0_171 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="192-192"];
m0_163 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="182-182"];
m0_164 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="182-182"];
m0_166 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="186-186"];
m0_167 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="186-186"];
m0_169 [cluster="lambda expression", file="WorkerManager.cs", label="x.ExceptionHandled = true", span="187-187"];
m0_170 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="187-187"];
m0_173 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="192-192"];
m0_182 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="201-201"];
m0_186 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="204-204"];
m0_189 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="207-207"];
m0_183 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsNotNull<PerformingContext>())", span="201-201"];
m0_184 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="201-201"];
m0_187 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="204-204"];
m0_188 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="204-204"];
m0_190 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsNotNull<PerformedContext>())", span="207-207"];
m0_191 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="207-207"];
m0_202 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="225-225"];
m0_205 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="226-226"];
m0_208 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="227-227"];
m0_211 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="228-228"];
m0_203 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="225-225"];
m0_204 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="225-225"];
m0_206 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="226-226"];
m0_207 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="226-226"];
m0_209 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="227-227"];
m0_210 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="227-227"];
m0_212 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="228-228"];
m0_213 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="228-228"];
m0_222 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="244-244"];
m0_225 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="245-245"];
m0_228 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="254-254"];
m0_231 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="257-257"];
m0_223 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="244-244"];
m0_224 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="244-244"];
m0_226 [cluster="lambda expression", file="WorkerManager.cs", label="x.Canceled = true", span="245-245"];
m0_227 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="245-245"];
m0_229 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="254-254"];
m0_230 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="254-254"];
m0_232 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="257-257"];
m0_233 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="257-257"];
m0_242 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="267-267"];
m0_245 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="268-268"];
m0_248 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="276-276"];
m0_243 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="267-267"];
m0_244 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="267-267"];
m0_246 [cluster="lambda expression", file="WorkerManager.cs", label="context.Canceled = true", span="268-268"];
m0_247 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="268-268"];
m0_249 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Canceled))", span="276-276"];
m0_250 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="276-276"];
m0_251 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="276-276"];
m0_252 [cluster="lambda expression", file="WorkerManager.cs", label="context.Canceled", span="276-276"];
m0_253 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="276-276"];
m0_263 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="285-285"];
m0_267 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="292-292"];
m0_266 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="292-292"];
m0_269 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="298-298"];
m0_272 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="301-301"];
m0_264 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="285-285"];
m0_265 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="285-285"];
m0_268 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="292-292"];
m0_270 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="298-298"];
m0_271 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="298-298"];
m0_273 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="301-301"];
m0_274 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="301-301"];
m0_292 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.Is<PerformedContext>(\r\n                context => context.Exception == exception))", span="322-323"];
m0_295 [cluster="lambda expression", file="WorkerManager.cs", label="context.Exception == exception", span="323-323"];
m0_285 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="312-312"];
m0_289 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="319-319"];
m0_288 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="319-319"];
m0_291 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="322-323"];
m0_286 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="312-312"];
m0_287 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="312-312"];
m0_290 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="319-319"];
m0_293 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="322-323"];
m0_294 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="323-323"];
m0_296 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="323-323"];
m0_313 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="344-344"];
m0_316 [cluster="lambda expression", file="WorkerManager.cs", label="context.Exception == exception", span="344-344"];
m0_306 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="335-335"];
m0_310 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="342-342"];
m0_309 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="342-342"];
m0_312 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="344-344"];
m0_307 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="335-335"];
m0_308 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="335-335"];
m0_311 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="342-342"];
m0_314 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="344-344"];
m0_315 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="344-344"];
m0_317 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="344-344"];
m0_330 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception))", span="358-358"];
m0_333 [cluster="lambda expression", file="WorkerManager.cs", label="context.Exception == exception", span="358-358"];
m0_326 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="355-355"];
m0_329 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="358-358"];
m0_335 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="359-359"];
m0_339 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="364-364"];
m0_338 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="364-364"];
m0_327 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="355-355"];
m0_328 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="355-355"];
m0_331 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="358-358"];
m0_332 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="358-358"];
m0_334 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="358-358"];
m0_336 [cluster="lambda expression", file="WorkerManager.cs", label="x.ExceptionHandled = true", span="359-359"];
m0_337 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="359-359"];
m0_340 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="364-364"];
m0_350 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="375-375"];
m0_353 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="378-378"];
m0_356 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="379-379"];
m0_360 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="384-384"];
m0_359 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="384-384"];
m0_362 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="387-387"];
m0_351 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="375-375"];
m0_352 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="375-375"];
m0_354 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="378-378"];
m0_355 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="378-378"];
m0_357 [cluster="lambda expression", file="WorkerManager.cs", label="x.ExceptionHandled = true", span="379-379"];
m0_358 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="379-379"];
m0_361 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="384-384"];
m0_363 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.Is<PerformedContext>(context => context.Exception != null))", span="387-387"];
m0_364 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="387-387"];
m0_365 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="387-387"];
m0_366 [cluster="lambda expression", file="WorkerManager.cs", label="context.Exception != null", span="387-387"];
m0_367 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="387-387"];
m0_375 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="395-395"];
m0_379 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="402-402"];
m0_378 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="401-402"];
m0_376 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="395-395"];
m0_377 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="395-395"];
m0_380 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="401-402"];
m0_389 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="412-412"];
m0_392 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="416-416"];
m0_396 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="423-423"];
m0_395 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="422-423"];
m0_390 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="412-412"];
m0_391 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="412-412"];
m0_393 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="416-416"];
m0_394 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="416-416"];
m0_397 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="422-423"];
m0_405 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="433-433"];
m0_409 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="441-441"];
m0_408 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="441-441"];
m0_411 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="445-445"];
m0_406 [cluster="lambda expression", file="WorkerManager.cs", label="x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>())", span="433-433"];
m0_407 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="433-433"];
m0_410 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="441-441"];
m0_412 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnServerException(It.IsAny<ServerExceptionContext>())", span="445-445"];
m0_413 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="445-445"];
m0_420 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="454-454"];
m0_424 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="461-461"];
m0_423 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="461-461"];
m0_421 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerforming(It.IsAny<PerformingContext>())", span="454-454"];
m0_422 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="454-454"];
m0_425 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="461-461"];
m0_432 [cluster="lambda expression", file="WorkerManager.cs", label="Entry lambda expression", span="469-469"];
m0_436 [cluster="lambda expression", file="WorkerManager.cs", label="process.Run(_context, _performer.Object)", span="476-476"];
m0_433 [cluster="lambda expression", file="WorkerManager.cs", label="x.OnPerformed(It.IsAny<PerformedContext>())", span="469-469"];
m0_434 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="469-469"];
m0_437 [cluster="lambda expression", file="WorkerManager.cs", label="Exit lambda expression", span="476-476"];
m0_22 [cluster="Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.SharedWorkerContext, int)", span="27-27"];
m0_70 [cluster="Unk.Verify", file="WorkerManager.cs", label="Entry Unk.Verify", span=""];
m0_368 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="391-391"];
m0_369 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="394-394"];
m0_370 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="395-396"];
m0_371 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="var process = CreateProcess()", span="398-398"];
m0_372 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="var exception = Assert.Throws<JobPerformanceException>(() => \r\n                process.Run(_context, _performer.Object))", span="401-402"];
m0_373 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="404-404"];
m0_374 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_IntoJobPerformanceException()", span="391-391"];
m0_381 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="408-408"];
m0_382 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="411-411"];
m0_383 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerformed(It.IsAny<PerformedContext>()))\r\n                .Throws<InvalidOperationException>()", span="412-413"];
m0_384 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws<ArgumentNullException>()", span="415-417"];
m0_385 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="var process = CreateProcess()", span="419-419"];
m0_386 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="var exception = Assert.Throws<JobPerformanceException>(() =>\r\n                process.Run(_context, _performer.Object))", span="422-423"];
m0_387 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="425-425"];
m0_388 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_WrapsOnPerformedException_OccuredAfterAnotherException_IntoJobPerformanceException()", span="408-408"];
m0_160 [cluster="Unk.Callback", file="WorkerManager.cs", label="Entry Unk.Callback", span=""];
m0_254 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="280-280"];
m0_255 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="var filter = CreateFilter<IServerFilter>()", span="283-283"];
m0_256 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="filter.Setup(x => x.OnPerforming(It.IsAny<PerformingContext>()))\r\n                .Throws<InvalidOperationException>()", span="285-286"];
m0_261 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="filter.Verify(x => x.OnPerformed(It.IsAny<PerformedContext>()), Times.Never)", span="301-301"];
m0_257 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="var process = CreateProcess()", span="288-288"];
m0_258 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context, _performer.Object))", span="291-292"];
m0_259 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="295-295"];
m0_260 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="_performer.Verify(\r\n                x => x.Perform(It.IsAny<JobActivator>(), It.IsAny<IJobCancellationToken>()), \r\n                Times.Never)", span="297-299"];
m0_262 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_DoesNotCall_Perform_And_OnPerformed_WhenExceptionOccured_DuringPerformingPhase()", span="280-280"];
m0_297 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="Entry Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="327-327"];
m0_298 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="var outerFilter = CreateFilter<IServerFilter>()", span="330-330"];
m0_299 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="var innerFilter = CreateFilter<IServerFilter>()", span="331-331"];
m0_304 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="outerFilter.Verify(x => x.OnPerformed(It.Is<PerformedContext>(context => context.Exception == exception)))", span="344-344"];
m0_300 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="var exception = new InvalidOperationException()", span="333-333"];
m0_301 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="_performer\r\n                .Setup(x => x.Perform(It.IsNotNull<JobActivator>(), It.IsAny<IJobCancellationToken>()))\r\n                .Throws(exception)", span="334-336"];
m0_302 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="var process = CreateProcess()", span="338-338"];
m0_303 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context, _performer.Object))", span="341-342"];
m0_305 [cluster="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="WorkerManager.cs", label="Exit Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="327-327"];
m0_64 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="WorkerManager.cs", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="50-50"];
m0_448 [file="WorkerManager.cs", label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", span=""];
m0_449 [file="WorkerManager.cs", label=process, span=""];
m0_450 [file="WorkerManager.cs", label=process, span=""];
m0_451 [file="WorkerManager.cs", label=process, span=""];
m0_452 [file="WorkerManager.cs", label=process, span=""];
m0_453 [file="WorkerManager.cs", label=process, span=""];
m0_454 [file="WorkerManager.cs", label=process, span=""];
m0_455 [file="WorkerManager.cs", label=process, span=""];
m0_456 [file="WorkerManager.cs", label=process, span=""];
m0_457 [file="WorkerManager.cs", label=exception, span=""];
m0_458 [file="WorkerManager.cs", label=process, span=""];
m0_459 [file="WorkerManager.cs", label=exception, span=""];
m0_460 [file="WorkerManager.cs", label=exception, span=""];
m0_461 [file="WorkerManager.cs", label=process, span=""];
m0_462 [file="WorkerManager.cs", label=process, span=""];
m0_463 [file="WorkerManager.cs", label=process, span=""];
m0_464 [file="WorkerManager.cs", label=process, span=""];
m0_465 [file="WorkerManager.cs", label=process, span=""];
m0_466 [file="WorkerManager.cs", label=process, span=""];
m0_467 [file="WorkerManager.cs", label=process, span=""];
m0_19 -> m0_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_12 -> m0_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_12 -> m0_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_96 -> m0_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerManager", style=dashed];
m0_37 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerManager", style=dashed];
m0_37 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerManager", style=dashed];
m0_37 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerManager", style=dashed];
m0_38 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_399 -> m0_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_400 -> m0_403  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_401 -> m0_409  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_403 -> m0_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_402 -> m0_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_58 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_10 -> m0_19  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_10 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_10 -> m0_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_11 -> m0_15  [color=darkseagreen4, key=1, label=workerSupervisors, style=dashed];
m0_11 -> m0_17  [color=darkseagreen4, key=1, label=workerSupervisors, style=dashed];
m0_16 -> m0_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_193 -> m0_195  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m0_193 -> m0_198  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m0_194 -> m0_196  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m0_194 -> m0_197  [color=darkseagreen4, key=1, label=innerFilter, style=dashed];
m0_195 -> m0_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_198 -> m0_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_196 -> m0_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_197 -> m0_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_4 -> m0_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_132 -> m0_135  [color=darkseagreen4, key=1, label=filter1, style=dashed];
m0_135 -> m0_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_134 -> m0_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_136 -> m0_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_137 -> m0_151  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_138 -> m0_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_320 -> m0_330  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_320 -> m0_333  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_322 -> m0_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_322 -> m0_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_321 -> m0_326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_323 -> m0_339  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_324 -> m0_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_416 -> m0_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_417 -> m0_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_418 -> m0_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_442 -> m0_444  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_428 -> m0_432  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_429 -> m0_436  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_430 -> m0_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_68 -> m0_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_115 -> m0_119  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_116 -> m0_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_119 -> m0_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_117 -> m0_125  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_118 -> m0_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_175 -> m0_178  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_176 -> m0_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_178 -> m0_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_177 -> m0_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_276 -> m0_281  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_277 -> m0_281  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_277 -> m0_292  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_277 -> m0_295  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_281 -> m0_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_278 -> m0_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_279 -> m0_289  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_280 -> m0_288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_154 -> m0_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_156 -> m0_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_156 -> m0_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_157 -> m0_172  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_158 -> m0_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_104 -> m0_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_105 -> m0_112  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_106 -> m0_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_76 -> m0_80  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_77 -> m0_79  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_80 -> m0_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_78 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_342 -> m0_348  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m0_348 -> m0_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_344 -> m0_350  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_345 -> m0_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_345 -> m0_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_346 -> m0_360  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_347 -> m0_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_235 -> m0_240  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m0_240 -> m0_248  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_237 -> m0_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_237 -> m0_245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_47 -> m0_53  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_48 -> m0_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_215 -> m0_220  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_216 -> m0_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_216 -> m0_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_220 -> m0_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_219 -> m0_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_87 -> m0_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_249 -> m0_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_292 -> m0_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_313 -> m0_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_330 -> m0_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_363 -> m0_365  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_370 -> m0_375  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_371 -> m0_379  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_372 -> m0_378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_383 -> m0_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_384 -> m0_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_385 -> m0_396  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_386 -> m0_395  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_255 -> m0_261  [color=darkseagreen4, key=1, label=filter, style=dashed];
m0_256 -> m0_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_261 -> m0_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_257 -> m0_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_258 -> m0_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_260 -> m0_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_298 -> m0_304  [color=darkseagreen4, key=1, label=outerFilter, style=dashed];
m0_304 -> m0_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_300 -> m0_304  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_300 -> m0_313  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_300 -> m0_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_301 -> m0_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_302 -> m0_310  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_303 -> m0_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_448 -> m0_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_151  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_172  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_180  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_218  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_219  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_239  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_260  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_278  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_280  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_289  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_301  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_303  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_310  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_321  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_324  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_339  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_344  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_347  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_360  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_379  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_384  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_396  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_399  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_402  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_409  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_418  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_424  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_430  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_436  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_439  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_448 -> m0_443  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.DefaultJobPerformanceProcessFacts", style=dashed];
m0_449 -> m0_53  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_450 -> m0_62  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_451 -> m0_112  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_452 -> m0_125  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_453 -> m0_151  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_454 -> m0_172  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_455 -> m0_267  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_456 -> m0_289  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_457 -> m0_292  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_457 -> m0_295  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_458 -> m0_310  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_459 -> m0_313  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_459 -> m0_316  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_460 -> m0_330  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_460 -> m0_333  [color=darkseagreen4, key=1, label=exception, style=dashed];
m0_461 -> m0_339  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_462 -> m0_360  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_463 -> m0_379  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_464 -> m0_396  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_465 -> m0_409  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_466 -> m0_424  [color=darkseagreen4, key=1, label=process, style=dashed];
m0_467 -> m0_436  [color=darkseagreen4, key=1, label=process, style=dashed];
}
