digraph  {
n70 [label="Hangfire.SqlServer.ExpirationManager", span=""];
n71 [label="System.Threading.CancellationToken", span=""];
n72 [label=table, span=""];
n73 [label="System.Action<DbConnection>", span=""];
n0 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="55-55"];
n1 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="storage == null", span="57-57"];
n2 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="throw new ArgumentNullException(nameof(storage));", span="57-57"];
n3 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="_storage = storage", span="59-59"];
n4 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="_checkInterval = checkInterval", span="60-60"];
n5 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="55-55"];
n6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n7 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n8 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="63-63"];
n9 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label=ProcessedTables, span="65-65"];
n11 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label="UseConnectionDistributedLock(_storage, connection =>\r\n                {\r\n                    int affected;\r\n\r\n                    do\r\n                    {\r\n                        affected = ExecuteNonQuery(\r\n                            connection,\r\n                            GetQuery(_storage.SchemaName, table),\r\n                            cancellationToken,\r\n                            new SqlParameter(''@count'', NumberOfRecordsInSinglePass),\r\n                            new SqlParameter(''@now'', DateTime.UtcNow));\r\n\r\n                    } while (affected == NumberOfRecordsInSinglePass);\r\n                })", span="69-83"];
n21 [cluster="lambda expression", label="affected = ExecuteNonQuery(\r\n                            connection,\r\n                            GetQuery(_storage.SchemaName, table),\r\n                            cancellationToken,\r\n                            new SqlParameter(''@count'', NumberOfRecordsInSinglePass),\r\n                            new SqlParameter(''@now'', DateTime.UtcNow))", span="75-80"];
n13 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label="cancellationToken.Wait(_checkInterval)", span="88-88"];
n10 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label="Logger.Debug($''Removing outdated records from the '{table}' table...'')", span="67-67"];
n12 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label="Logger.Trace($''Outdated records removed from the '{table}' table.'')", span="85-85"];
n15 [cluster="Hangfire.Logging.ILog.Debug(string)", label="Entry Hangfire.Logging.ILog.Debug(string)", span="116-116"];
n16 [cluster="Unk.UseConnectionDistributedLock", label="Entry Unk.UseConnectionDistributedLock", span=""];
n19 [cluster="lambda expression", label="Entry lambda expression", span="69-83"];
n17 [cluster="Hangfire.Logging.ILog.Trace(string)", label="Entry Hangfire.Logging.ILog.Trace(string)", span="234-234"];
n14 [cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="63-63"];
n18 [cluster="System.Threading.CancellationToken.Wait(System.TimeSpan)", label="Entry System.Threading.CancellationToken.Wait(System.TimeSpan)", span="40-40"];
n20 [cluster="lambda expression", label="int affected", span="71-71"];
n22 [cluster="lambda expression", label="affected == NumberOfRecordsInSinglePass", span="82-82"];
n24 [cluster="Hangfire.SqlServer.ExpirationManager.GetQuery(string, string)", label="Entry Hangfire.SqlServer.ExpirationManager.GetQuery(string, string)", span="126-126"];
n25 [cluster="SqlParameter.cstr", label="Entry SqlParameter.cstr", span=""];
n26 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="Entry Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", span="157-157"];
n23 [cluster="lambda expression", label="Exit lambda expression", span="69-83"];
n27 [cluster="Hangfire.SqlServer.ExpirationManager.ToString()", label="Entry Hangfire.SqlServer.ExpirationManager.ToString()", span="91-91"];
n28 [cluster="Hangfire.SqlServer.ExpirationManager.ToString()", label="return GetType().ToString();", span="93-93"];
n29 [cluster="Hangfire.SqlServer.ExpirationManager.ToString()", label="Exit Hangfire.SqlServer.ExpirationManager.ToString()", span="91-91"];
n30 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n31 [cluster="System.Type.ToString()", label="Entry System.Type.ToString()", span="0-0"];
n32 [cluster="Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", label="Entry Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", span="96-96"];
n33 [cluster="Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", label="storage.UseConnection(null, connection =>\r\n                {\r\n                    SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout);\r\n\r\n                    try\r\n                    {\r\n                        action(connection);\r\n                    }\r\n                    finally\r\n                    {\r\n                        SqlServerDistributedLock.Release(connection, DistributedLockKey);\r\n                    }\r\n                })", span="100-112"];
n42 [cluster="lambda expression", label="action(connection)", span="106-106"];
n34 [cluster="Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", label=DistributedLockTimeoutException, span="114-114"];
n37 [cluster="Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", label="Exit Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", span="96-96"];
n38 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171"];
n46 [cluster="Unk.Release", label="Entry Unk.Release", span=""];
n40 [cluster="lambda expression", label="Entry lambda expression", span="100-112"];
n35 [cluster="Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", label="e.Resource == DistributedLockKey", span="114-114"];
n36 [cluster="Hangfire.SqlServer.ExpirationManager.UseConnectionDistributedLock(Hangfire.SqlServer.SqlServerStorage, System.Action<DbConnection>)", label="Logger.Log(\r\n                    LogLevel.Debug,\r\n                    () => $@''An exception was thrown during acquiring distributed lock on the {DistributedLockKey} resource within {DefaultLockTimeout.TotalSeconds} seconds. Outdated records were not removed.\r\nIt will be retried in {_checkInterval.TotalSeconds} seconds.'',\r\n                    e)", span="118-122"];
n39 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="56-56"];
n47 [cluster="lambda expression", label="Entry lambda expression", span="120-121"];
n41 [cluster="lambda expression", label="SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout)", span="102-102"];
n44 [cluster="Unk.Acquire", label="Entry Unk.Acquire", span=""];
n43 [cluster="lambda expression", label="Exit lambda expression", span="100-112"];
n45 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
n48 [cluster="lambda expression", label="$@''An exception was thrown during acquiring distributed lock on the {DistributedLockKey} resource within {DefaultLockTimeout.TotalSeconds} seconds. Outdated records were not removed.\r\nIt will be retried in {_checkInterval.TotalSeconds} seconds.''", span="120-121"];
n49 [cluster="lambda expression", label="Exit lambda expression", span="120-121"];
n50 [cluster="Hangfire.SqlServer.ExpirationManager.GetQuery(string, string)", label="return\r\n$@''set transaction isolation level read committed;\r\ndelete top (@count) from [{schemaName}].[{table}] with (readpast) \r\nwhere ExpireAt < @now\r\noption (loop join, optimize for (@count = 20000));'';", span="150-154"];
n51 [cluster="Hangfire.SqlServer.ExpirationManager.GetQuery(string, string)", label="Exit Hangfire.SqlServer.ExpirationManager.GetQuery(string, string)", span="126-126"];
n52 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="var command = connection.CreateCommand()", span="163-163"];
n53 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="command.CommandText = commandText", span="165-165"];
n54 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="command.Parameters.AddRange(parameters)", span="166-166"];
n56 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="cancellationToken.Register(state => ((SqlCommand)state).Cancel(), command)", span="169-169"];
n62 [cluster="Unk.CreateCommand", label="Entry Unk.CreateCommand", span=""];
n55 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="command.CommandTimeout = 0", span="167-167"];
n63 [cluster="Unk.AddRange", label="Entry Unk.AddRange", span=""];
n57 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="return command.ExecuteNonQuery();", span="173-173"];
n64 [cluster="Unk.Register", label="Entry Unk.Register", span=""];
n66 [cluster="lambda expression", label="Entry lambda expression", span="169-169"];
n59 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="cancellationToken.IsCancellationRequested", span="175-175"];
n58 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label=SqlException, span="175-175"];
n60 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="return 0;", span="178-178"];
n61 [cluster="Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", label="Exit Hangfire.SqlServer.ExpirationManager.ExecuteNonQuery(DbConnection, string, System.Threading.CancellationToken, params SqlParameter[])", span="157-157"];
n65 [cluster="Unk.ExecuteNonQuery", label="Entry Unk.ExecuteNonQuery", span=""];
n67 [cluster="lambda expression", label="((SqlCommand)state).Cancel()", span="169-169"];
n68 [cluster="lambda expression", label="Exit lambda expression", span="169-169"];
n69 [cluster="Unk.Cancel", label="Entry Unk.Cancel", span=""];
d8 [cluster="HangFire.Web.Pages.LayoutPage.Execute()", color=green, community=0, label="2: WriteLiteral(@''''''>HangFire Monitor</a>\r\n                    </div>\r\n                    <div class=''''collapse navbar-collapse''''>\r\n                        <ul class=''''nav navbar-nav navbar-right''''>\r\n                            <li>\r\n                                <a href=''''/''''>\r\n                                    <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                    Back to site\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <!--/.nav-collapse -->\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n\r\n            <div class=''''container''''>\r\n                <div class=''''col-md-3''''>\r\n'')", span="95-115"];
m0_16 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m0_17 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="_transaction.Dispose()", span="47-47"];
m0_18 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m0_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m0_27 [cluster="string.Format(string, object)", file="CleanDatabaseAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_30 [cluster="Unk.Execute", file="CleanDatabaseAttribute.cs", label="Entry Unk.Execute", span=""];
m0_19 [cluster="Unk.Dispose", file="CleanDatabaseAttribute.cs", label="Entry Unk.Dispose", span=""];
m0_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m0_0 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", span="18-18"];
m0_1 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", span="18-18"];
m0_28 [cluster="SqlConnection.cstr", file="CleanDatabaseAttribute.cs", label="Entry SqlConnection.cstr", span=""];
m0_29 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", span="21-21"];
m0_15 [cluster="TransactionOptions.cstr", file="CleanDatabaseAttribute.cs", label="Entry TransactionOptions.cstr", span=""];
m0_26 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", span="16-16"];
m0_14 [cluster="TransactionScope.cstr", file="CleanDatabaseAttribute.cs", label="Entry TransactionScope.cstr", span=""];
m0_5 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="28-28"];
m0_6 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Monitor.Enter(GlobalLock)", span="30-30"];
m0_7 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="!_sqlObjectInstalled", span="32-32"];
m0_8 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="RecreateDatabaseAndInstallObjects()", span="34-34"];
m0_10 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = _isolationLevel })", span="38-40"];
m0_9 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="_sqlObjectInstalled = true", span="35-35"];
m0_11 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="28-28"];
m0_2 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="23-23"];
m0_3 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="_isolationLevel = isolationLevel", span="25-25"];
m0_4 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="23-23"];
m0_13 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m0_20 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", color=green, community=0, file="CleanDatabaseAttribute.cs", label="2: var recreateDatabaseSql = String.Format(\r\n                @''if db_id('{0}') is null create database [{0}]'',\r\n                ConnectionUtils.GetDatabaseName())", span="58-60"];
m0_21 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetMasterConnectionString())", span="62-63"];
m0_22 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="connection.Execute(recreateDatabaseSql)", span="65-65"];
m0_23 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetConnectionString())", span="68-69"];
m0_24 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="SqlServerObjectsInstaller.Install(connection)", span="71-71"];
m0_25 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m0_12 [cluster="System.Threading.Monitor.Enter(object)", file="CleanDatabaseAttribute.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m0_33 [file="CleanDatabaseAttribute.cs", label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", span=""];
m1_4 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="_interval = interval", span="39-39"];
m1_12 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="removedCount >= NumberOfRecordsInSinglePass", span="57-57"];
m1_13 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59"];
m1_14 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m1_51 [cluster="System.Text.StringBuilder.Append(string)", file="CountersAggregator.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_44 [cluster="Hangfire.Storage.IMonitoringApi.GetStatistics()", file="CountersAggregator.cs", label="Entry Hangfire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
m1_43 [cluster="Hangfire.JobStorage.GetMonitoringApi()", file="CountersAggregator.cs", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
m1_20 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="Storage = parentPage.Storage", span="80-80"];
m1_27 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", color=green, community=0, file="CountersAggregator.cs", label="2: Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", span="89-89"];
m1_28 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Context = context", span="91-91"];
m1_19 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="Response = parentPage.Response", span="79-79"];
m1_38 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="CountersAggregator.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m1_75 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="CountersAggregator.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m1_45 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="108-108"];
m1_46 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="CountersAggregator.cs", label="string.IsNullOrEmpty(textToAppend)", span="110-110"];
m1_48 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="CountersAggregator.cs", label="_content.Append(textToAppend)", span="112-112"];
m1_47 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="CountersAggregator.cs", label="return;", span="111-111"];
m1_49 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="108-108"];
m1_72 [cluster="System.Text.StringBuilder.ToString()", file="CountersAggregator.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_29 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Hangfire.SqlServer.CountersAggregator", span=""];
m1_30 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Response = context.Response", span="93-93"];
m1_31 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Storage = context.Storage", span="95-95"];
m1_32 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="AppPath = context.Options.AppPath", span="96-96"];
m1_33 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="DashboardOptions = context.Options", span="97-97"];
m1_34 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Url = new UrlHelper(context)", span="98-98"];
m1_35 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="_statisticsLazy = new Lazy<StatisticsDto>(() =>\r\n            {\r\n                var monitoring = Storage.GetMonitoringApi();\r\n                return monitoring.GetStatistics();\r\n            })", span="100-104"];
m1_36 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", span="89-89"];
m1_7 [cluster="Hangfire.Dashboard.RazorPage.Execute()", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.Execute()", span="62-62"];
m1_11 [cluster="Hangfire.Dashboard.DashboardRequest.GetQuery(string)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.DashboardRequest.GetQuery(string)", span="30-30"];
m1_10 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.Query(string)", span="64-64"];
m1_15 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.TransformText(string)", span="129-129"];
m1_9 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="CountersAggregator.cs", label="return Request.GetQuery(key);", span="66-66"];
m1_16 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75"];
m1_8 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="64-64"];
m1_17 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="Context = parentPage.Context", span="77-77"];
m1_5 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m1_23 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="Url = parentPage.Url", span="83-83"];
m1_6 [cluster="Hangfire.Dashboard.RazorPage.Execute()", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.Execute()", span="62-62"];
m1_0 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m1_1 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="storage == null", span="36-36"];
m1_2 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="throw new ArgumentNullException(''storage'');", span="36-36"];
m1_3 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs", label="_storage = storage", span="38-38"];
m1_60 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.Encode(string)", span="144-144"];
m1_73 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="CountersAggregator.cs", label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : WebUtility.HtmlEncode(text);", span="146-148"];
m1_74 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.Encode(string)", span="144-144"];
m1_37 [cluster="Hangfire.Dashboard.UrlHelper.UrlHelper(Hangfire.Dashboard.DashboardContext)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.UrlHelper.UrlHelper(Hangfire.Dashboard.DashboardContext)", span="37-37"];
m1_50 [cluster="string.IsNullOrEmpty(string)", file="CountersAggregator.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_58 [cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27"];
m1_52 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="116-116"];
m1_53 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="CountersAggregator.cs", label="value == null", span="118-118"];
m1_55 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="CountersAggregator.cs", label="var html = value as NonEscapedString", span="120-120"];
m1_56 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="CountersAggregator.cs", label="WriteLiteral(html?.ToString() ?? Encode(value.ToString()))", span="121-121"];
m1_54 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="CountersAggregator.cs", label="return;", span="119-119"];
m1_57 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.Write(object)", span="116-116"];
m1_39 [cluster="lambda expression", file="CountersAggregator.cs", label="Entry lambda expression", span="100-104"];
m1_40 [cluster="lambda expression", file="CountersAggregator.cs", label="var monitoring = Storage.GetMonitoringApi()", span="102-102"];
m1_41 [cluster="lambda expression", file="CountersAggregator.cs", label="return monitoring.GetStatistics();", span="103-103"];
m1_42 [cluster="lambda expression", file="CountersAggregator.cs", label="Exit lambda expression", span="100-104"];
m1_64 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m1_61 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="CountersAggregator.cs", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="124-124"];
m1_62 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="CountersAggregator.cs", label="return new NonEscapedString(_body);", span="126-126"];
m1_63 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.RenderBody()", span="124-124"];
m1_22 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="DashboardOptions = parentPage.DashboardOptions", span="82-82"];
m1_18 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="CountersAggregator.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="121-121"];
m1_21 [cluster="Unk.Execute", file="CountersAggregator.cs", label="Entry Unk.Execute", span=""];
m1_24 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", color=red, community=0, file="CountersAggregator.cs", label="0: GenerationTime = parentPage.GenerationTime", span="85-85"];
m1_25 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="_statisticsLazy = parentPage._statisticsLazy", span="86-86"];
m1_26 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75"];
m1_59 [cluster="object.ToString()", file="CountersAggregator.cs", label="Entry object.ToString()", span="0-0"];
m1_65 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="_body = body", span="131-131"];
m1_66 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="Execute()", span="133-133"];
m1_67 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="Layout != null", span="135-135"];
m1_68 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="Layout.Assign(this)", span="137-137"];
m1_70 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="return _content.ToString();", span="141-141"];
m1_69 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="return Layout.TransformText(_content.ToString());", span="138-138"];
m1_71 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="CountersAggregator.cs", label="Exit Hangfire.Dashboard.RazorPage.TransformText(string)", span="129-129"];
m1_76 [file="CountersAggregator.cs", label="Hangfire.Dashboard.RazorPage", span=""];
m2_17 [cluster="Unk.>", file="CountersAggregatorFacts.cs", label="Entry Unk.>", span=""];
m2_27 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m2_13 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40"];
m2_23 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: var storage = new SqlServerStorage(connection)", span="42-42"];
m2_24 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: return new CountersAggregator(storage, TimeSpan.Zero);", span="43-43"];
m2_25 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", file="CountersAggregatorFacts.cs", label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40"];
m2_18 [cluster="Unk.Single", file="CountersAggregatorFacts.cs", label="Entry Unk.Single", span=""];
m2_26 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="93-93"];
m2_12 [cluster="Unk.Execute", file="CountersAggregatorFacts.cs", label="Entry Unk.Execute", span=""];
m2_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m2_19 [cluster="Unk.Equal", file="CountersAggregatorFacts.cs", label="Entry Unk.Equal", span=""];
m2_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="CountersAggregatorFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m2_0 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12"];
m2_1 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=1, file="CountersAggregatorFacts.cs", label="2: string createSql = @''\r\ninsert into HangFire.Counter ([Key], [Value], ExpireAt) \r\nvalues ('key', 1, @expireAt)''", span="14-16"];
m2_2 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: var connection = CreateConnection()", span="18-18"];
m2_3 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddHours(1) })", span="21-21"];
m2_4 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: var aggregator = CreateAggregator(connection)", span="23-23"];
m2_8 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: Assert.Equal(1, connection.Query<int>(@''select count(*) from HangFire.AggregatedCounter'').Single())", span="31-31"];
m2_5 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: var cts = new CancellationTokenSource()", span="24-24"];
m2_7 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: aggregator.Execute(cts.Token)", span="28-28"];
m2_6 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="2: cts.Cancel()", span="25-25"];
m2_9 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", file="CountersAggregatorFacts.cs", label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12"];
m2_10 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35"];
m2_20 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: return ConnectionUtils.CreateConnection();", span="37-37"];
m2_21 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", file="CountersAggregatorFacts.cs", label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35"];
m2_15 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="CountersAggregatorFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_22 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m2_11 [cluster="System.DateTime.AddHours(double)", file="CountersAggregatorFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m3_40 [cluster="System.DateTime.AddMinutes(double)", file="DashboardMiddleware.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m3_0 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="10-10"];
m3_1 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", color=green, community=0, file="DashboardMiddleware.cs", label="0: DateTime time", span="12-12"];
m3_2 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", color=green, community=0, file="DashboardMiddleware.cs", label="0: timeAgo.Equals(''millisecond'')", span="13-13"];
m3_3 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="13-13"];
m3_5 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="14-14"];
m3_7 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="17-20"];
m3_8 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="10-10"];
m3_9 [cluster="string.Equals(string)", file="DashboardMiddleware.cs", label="Entry string.Equals(string)", span="0-0"];
m3_10 [cluster="System.DateTime.AddMilliseconds(double)", file="DashboardMiddleware.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m3_4 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="timeAgo.Equals(''day'')", span="14-14"];
m3_6 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DashboardMiddleware.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="15-15"];
m3_11 [cluster="System.DateTime.AddDays(double)", file="DashboardMiddleware.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m3_41 [cluster="Unk.IsTrue", file="DashboardMiddleware.cs", label="Entry Unk.IsTrue", span=""];
m3_39 [cluster="Unk.FromStringTimestamp", file="DashboardMiddleware.cs", label="Entry Unk.FromStringTimestamp", span=""];
m3_15 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="dispatcher == null", span="54-54"];
m3_23 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", color=red, community=0, file="DashboardMiddleware.cs", label="1: Exit Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m3_16 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="return Next.Invoke(context);", span="56-56"];
m3_17 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label=_authorizationFilters, span="59-59"];
m3_18 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="!filter.Authorize(context.Environment)", span="61-61"];
m3_20 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="return Task.FromResult(false);", span="64-64"];
m3_22 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="return dispatcher.Item1.Dispatch(dispatcherContext);", span="74-74"];
m3_19 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="context.Response.StatusCode = (int) HttpStatusCode.Unauthorized", span="63-63"];
m3_21 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="var dispatcherContext = new RequestDispatcherContext(\r\n                _appPath,\r\n                _storage,\r\n                context.Environment,\r\n                dispatcher.Item2)", span="68-72"];
m3_24 [cluster="Unk.FindDispatcher", file="DashboardMiddleware.cs", label="Entry Unk.FindDispatcher", span=""];
m3_13 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="Entry Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m3_14 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="DashboardMiddleware.cs", label="var dispatcher = _routes.FindDispatcher(context.Request.Path.Value)", span="52-52"];
m3_28 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="38-38"];
m3_30 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DashboardMiddleware.cs", label="Hangfire.Dashboard.DashboardMiddleware", span=""];
m3_50 [cluster="Unk.IsNull", file="DashboardMiddleware.cs", label="Entry Unk.IsNull", span=""];
m3_29 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="DashboardMiddleware.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8"];
m3_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DashboardMiddleware.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_25 [cluster="Unk.Invoke", file="DashboardMiddleware.cs", label="Entry Unk.Invoke", span=""];
m3_26 [cluster="Unk.Authorize", file="DashboardMiddleware.cs", label="Entry Unk.Authorize", span=""];
m3_27 [cluster="System.Threading.Tasks.Task.FromResult<TResult>(TResult)", file="DashboardMiddleware.cs", label="Entry System.Threading.Tasks.Task.FromResult<TResult>(TResult)", span="0-0"];
m3_51 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80"];
m3_52 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="82-83"];
m3_53 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="Assert.IsNotNull(fetchedTimestamp)", span="85-85"];
m3_54 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="80-80"];
m3_55 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89"];
m3_56 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="91-92"];
m3_57 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="Assert.IsNull(fetchedTimestamp)", span="94-94"];
m3_58 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="89-89"];
m3_38 [cluster="Unk.IsNotNull", file="DashboardMiddleware.cs", label="Entry Unk.IsNotNull", span=""];
m3_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70"];
m3_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="72-74"];
m3_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="Assert.IsNull(checkedTimestamp)", span="76-76"];
m3_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="70-70"];
m3_37 [cluster="Unk.GetValueFromHash", file="DashboardMiddleware.cs", label="Entry Unk.GetValueFromHash", span=""];
m3_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DashboardMiddleware.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47"];
m3_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DashboardMiddleware.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="49-51"];
m3_33 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DashboardMiddleware.cs", label="Assert.IsNotNull(checkedTimestamp)", span="53-53"];
m3_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DashboardMiddleware.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="54-54"];
m3_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DashboardMiddleware.cs", label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="56-56"];
m3_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="47-47"];
m3_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="60-60"];
m3_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="62-64"];
m3_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="Assert.IsNotNull(checkedTimestamp)", span="66-66"];
m3_45 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DashboardMiddleware.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="60-60"];
m4_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="DashboardOptions.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22"];
m4_0 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m4_1 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="AppPath = ''/''", span="25-25"];
m4_2 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="AuthorizationFilters = new[] { new LocalRequestsOnlyAuthorizationFilter() }", span="26-26"];
m4_3 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m4_5 [file="DashboardOptions.cs", label="Hangfire.DashboardOptions", span=""];
m5_0 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m5_1 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43"];
m5_2 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m5_24 [cluster="Unk.>", file="DashboardOwinExtensions.cs", label="Entry Unk.>", span=""];
m5_7 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m5_10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94"];
m5_11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m5_20 [cluster="Unk.Map", file="DashboardOwinExtensions.cs", label="Entry Unk.Map", span=""];
m5_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m5_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app == null", span="115-115"];
m5_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="SignatureConversions.AddConversions(app)", span="117-117"];
m5_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123"];
m5_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="throw new ArgumentNullException(''app'');", span="115-115"];
m5_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m5_4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m5_5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58"];
m5_6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m5_3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m5_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75"];
m5_9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m5_19 [cluster="Unk.AddConversions", file="DashboardOwinExtensions.cs", label="Entry Unk.AddConversions", span=""];
m5_21 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="119-123"];
m5_22 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123"];
m5_23 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="119-123"];
m5_25 [file="DashboardOwinExtensions.cs", label=string, span=""];
m5_26 [file="DashboardOwinExtensions.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m5_27 [file="DashboardOwinExtensions.cs", label="Hangfire.JobStorage", span=""];
m6_121 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m6_53 [cluster="Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="117-117"];
m6_54 [cluster="Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return null;", span="119-119"];
m6_55 [cluster="Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.NullRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="117-117"];
m6_122 [cluster="string.Format(string, object, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_46 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", span="105-105"];
m6_47 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="return Renderers.ContainsKey(state);", span="107-107"];
m6_48 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.Exists(string)", span="105-105"];
m6_78 [cluster="System.Text.StringBuilder.Append(string)", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_80 [cluster="System.TimeSpan.FromMilliseconds(double)", file="JobHistoryRenderer.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m6_83 [cluster="string.IsNullOrWhiteSpace(string)", file="JobHistoryRenderer.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m6_37 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m6_38 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="stateName == null || !ForegroundStateColors.ContainsKey(stateName)", span="85-85"];
m6_40 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="return ForegroundStateColors[stateName];", span="90-90"];
m6_39 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="return ''inherit'';", span="87-87"];
m6_41 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.GetForegroundStateColor(string)", span="83-83"];
m6_115 [cluster="string.Format(string, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_137 [cluster="JsonSerializerSettings.cstr", file="JobHistoryRenderer.cs", label="Entry JsonSerializerSettings.cstr", span=""];
m6_25 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", span="63-63"];
m6_26 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(stateName, color)", span="65-65"];
m6_27 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.AddBackgroundStateColor(string, string)", span="63-63"];
m6_0 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", span="36-36"];
m6_1 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(SucceededState.StateName, SucceededRenderer)", span="38-38"];
m6_2 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(FailedState.StateName, FailedRenderer)", span="39-39"];
m6_3 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(ProcessingState.StateName, ProcessingRenderer)", span="40-40"];
m6_4 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(EnqueuedState.StateName, EnqueuedRenderer)", span="41-41"];
m6_5 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(ScheduledState.StateName, ScheduledRenderer)", span="42-42"];
m6_6 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(DeletedState.StateName, NullRenderer)", span="43-43"];
m6_7 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Register(AwaitingState.StateName, AwaitingRenderer)", span="44-44"];
m6_8 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(EnqueuedState.StateName, ''#F5F5F5'')", span="46-46"];
m6_9 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(SucceededState.StateName, ''#EDF7ED'')", span="47-47"];
m6_10 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(FailedState.StateName, ''#FAEBEA'')", span="48-48"];
m6_11 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(ProcessingState.StateName, ''#FCEFDC'')", span="49-49"];
m6_12 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(ScheduledState.StateName, ''#E0F3F8'')", span="50-50"];
m6_13 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(DeletedState.StateName, ''#ddd'')", span="51-51"];
m6_14 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="BackgroundStateColors.Add(AwaitingState.StateName, ''#F5F5F5'')", span="52-52"];
m6_15 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(EnqueuedState.StateName, ''#999'')", span="54-54"];
m6_16 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(SucceededState.StateName, ''#5cb85c'')", span="55-55"];
m6_17 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(FailedState.StateName, ''#d9534f'')", span="56-56"];
m6_18 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(ProcessingState.StateName, ''#f0ad4e'')", span="57-57"];
m6_19 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(ScheduledState.StateName, ''#5bc0de'')", span="58-58"];
m6_20 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(DeletedState.StateName, ''#777'')", span="59-59"];
m6_21 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(AwaitingState.StateName, ''#999'')", span="60-60"];
m6_22 [cluster="Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.JobHistoryRenderer()", span="36-36"];
m6_138 [cluster="Unk.>", file="JobHistoryRenderer.cs", label="Entry Unk.>", span=""];
m6_77 [cluster="System.Text.StringBuilder.StringBuilder()", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_91 [cluster="Hangfire.Dashboard.HtmlHelper.StackTrace(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.StackTrace(string)", span="240-240"];
m6_111 [cluster="string.ToUpperInvariant()", file="JobHistoryRenderer.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m6_84 [cluster="System.Net.WebUtility.HtmlEncode(string)", file="JobHistoryRenderer.cs", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
m6_79 [cluster="int.Parse(string)", file="JobHistoryRenderer.cs", label="Entry int.Parse(string)", span="0-0"];
m6_86 [cluster="System.Text.StringBuilder.ToString()", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_140 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlEncode(string)", span="391-391"];
m6_82 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="JobHistoryRenderer.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m6_93 [cluster="string.Format(string, object, object, object)", file="JobHistoryRenderer.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m6_81 [cluster="Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.ToHumanDuration(System.TimeSpan?, bool)", span="162-162"];
m6_123 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="223-223"];
m6_124 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="225-225"];
m6_126 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ParentId'')", span="229-229"];
m6_127 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dt>Parent</dt><dd>{0}</dd>'',\r\n                    helper.JobIdLink(stateData[''ParentId'']))", span="231-233"];
m6_128 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''NextState'')", span="236-236"];
m6_129 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var nextState = JsonConvert.DeserializeObject<IState>(\r\n                    stateData[''NextState''],\r\n                    new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="238-240"];
m6_130 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dt>Next State</dt><dd>{0}</dd>'',\r\n                    helper.StateLabel(nextState.Name))", span="242-244"];
m6_131 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Options'')", span="247-247"];
m6_132 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dt>Options</dt><dd><code>{0}</code></dd>'',\r\n                    helper.HtmlEncode(stateData[''Options'']))", span="249-251"];
m6_125 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="227-227"];
m6_133 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="254-254"];
m6_134 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(builder.ToString());", span="256-256"];
m6_135 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.AwaitingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="223-223"];
m6_120 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m6_139 [cluster="Unk.StateLabel", file="JobHistoryRenderer.cs", label="Entry Unk.StateLabel", span=""];
m6_92 [cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27"];
m6_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_116 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m6_117 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var enqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt''])", span="215-215"];
m6_118 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(String.Format(\r\n                ''<dl class=\''dl-horizontal\''><dt>Enqueue at:</dt><dd data-moment=\''{0}\''>{1}</dd></dl>'',\r\n                JobHelper.ToTimestamp(enqueueAt),\r\n                enqueueAt));", span="217-220"];
m6_119 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.ScheduledRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="213-213"];
m6_85 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
m6_56 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="122-122"];
m6_57 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="124-124"];
m6_60 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Latency'')", span="129-129"];
m6_61 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="JobHistoryRenderer.cs", label="2: var latency = TimeSpan.FromMilliseconds(int.Parse(stateData[''Latency'']))", span="131-131"];
m6_62 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Latency:</dt><dd>{0}</dd>'', html.ToHumanDuration(latency, false))", span="132-132"];
m6_64 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''PerformanceDuration'')", span="137-137"];
m6_65 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var duration = TimeSpan.FromMilliseconds(int.Parse(stateData[''PerformanceDuration'']))", span="139-139"];
m6_66 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Duration:</dt><dd>{0}</dd>'', html.ToHumanDuration(duration, false))", span="140-140"];
m6_68 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''Result'') && !String.IsNullOrWhiteSpace(stateData[''Result''])", span="146-146"];
m6_69 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var result = stateData[''Result'']", span="148-148"];
m6_58 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="125-125"];
m6_70 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dt>Result:</dt><dd>{0}</dd>'', System.Net.WebUtility.HtmlEncode(result))", span="149-149"];
m6_72 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="154-154"];
m6_75 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(builder.ToString());", span="158-158"];
m6_59 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var itemsAdded = false", span="127-127"];
m6_73 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="!itemsAdded", span="156-156"];
m6_63 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="134-134"];
m6_67 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="142-142"];
m6_71 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="itemsAdded = true", span="151-151"];
m6_74 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return null;", span="156-156"];
m6_76 [cluster="Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.SucceededRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="122-122"];
m6_34 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", span="78-78"];
m6_35 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="ForegroundStateColors.Add(stateName, color)", span="80-80"];
m6_36 [cluster="Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.AddForegroundStateColor(string, string)", span="78-78"];
m6_136 [cluster="Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobIdLink(string)", span="139-139"];
m6_94 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="171-171"];
m6_95 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var builder = new StringBuilder()", span="173-173"];
m6_98 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ServerId'')", span="178-178"];
m6_99 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId = stateData[''ServerId'']", span="180-180"];
m6_100 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''ServerName'')", span="182-182"];
m6_101 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId = stateData[''ServerName'']", span="184-184"];
m6_105 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="stateData.ContainsKey(''WorkerNumber'')", span="195-195"];
m6_107 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(''<dd>#{0}</dd>'', stateData[''WorkerNumber''])", span="198-198"];
m6_96 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dl class=\''dl-horizontal\''>'')", span="174-174"];
m6_103 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dt>Server:</dt>'')", span="189-189"];
m6_104 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.AppendFormat(\r\n                    ''<dd><span class=\''label label-default\''>{0}</span></dd>'',\r\n                    serverId.ToUpperInvariant())", span="190-192"];
m6_106 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''<dt>Worker:</dt>'')", span="197-197"];
m6_108 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="builder.Append(''</dl>'')", span="201-201"];
m6_109 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(builder.ToString());", span="203-203"];
m6_97 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="string serverId = null", span="176-176"];
m6_102 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="serverId != null", span="187-187"];
m6_110 [cluster="Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.ProcessingRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="171-171"];
m6_49 [cluster="Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", span="110-110"];
m6_50 [cluster="Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return Renderers[state](helper, properties);", span="114-114"];
m6_51 [cluster="Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.RenderHistory(Hangfire.Dashboard.HtmlHelper, string, System.Collections.Generic.IDictionary<string, string>)", span="110-110"];
m6_112 [cluster="Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="206-206"];
m6_113 [cluster="Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(String.Format(\r\n                ''<dl class=\''dl-horizontal\''><dt>Queue:</dt><dd><span class=\''label label-queue label-primary\''>{0}</span></dd></dl>'',\r\n                stateData[''Queue'']));", span="208-210"];
m6_114 [cluster="Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.EnqueuedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="206-206"];
m6_24 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobHistoryRenderer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_52 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="JobHistoryRenderer.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m6_28 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", span="68-68"];
m6_29 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="stateName == null || !BackgroundStateColors.ContainsKey(stateName)", span="70-70"];
m6_31 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="return BackgroundStateColors[stateName];", span="75-75"];
m6_30 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="return ''inherit'';", span="72-72"];
m6_32 [cluster="Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.GetBackgroundStateColor(string)", span="68-68"];
m6_23 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", span="93-93"];
m6_42 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="!Renderers.ContainsKey(state)", span="95-95"];
m6_43 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Renderers.Add(state, renderer)", span="97-97"];
m6_44 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Renderers[state] = renderer", span="101-101"];
m6_45 [cluster="Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.Register(string, System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString>)", span="93-93"];
m6_87 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Entry Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="161-161"];
m6_88 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="var stackTrace = html.StackTrace(stateData[''ExceptionDetails'']).ToString()", span="163-163"];
m6_89 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="return new NonEscapedString(String.Format(\r\n                ''<h4 class=\''exception-type\''>{0}</h4><p>{1}</p>{2}'',\r\n                stateData[''ExceptionType''],\r\n                stateData[''ExceptionMessage''],\r\n                stackTrace != null ? ''<pre class=\''stack-trace\''>'' + stackTrace + ''</pre>'' : null));", span="164-168"];
m6_90 [cluster="Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", file="JobHistoryRenderer.cs", label="Exit Hangfire.Dashboard.JobHistoryRenderer.FailedRenderer(Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>)", span="161-161"];
m7_49 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m7_45 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m7_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="39-39"];
m7_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m7_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="53-53"];
m7_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="var queues = JobStorage.Queues()", span="54-54"];
m7_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\r\n'')", span="60-60"];
m7_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="queues.Count == 0", span="65-65"];
m7_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label=queues, span="99-99"];
m7_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="71-72"];
m7_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="84-94"];
m7_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a href=\'''' +\r\n'''')", span="105-106"];
m7_43 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="332-332"];
m7_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="111-111"];
m7_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(queue.Name)", span="121-121"];
m7_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(queue.Length)", span="132-132"];
m7_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(queue.Dequeued)", span="142-142"];
m7_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="queue.FirstJobs.Count == 0", span="157-157"];
m7_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="queue.FirstJobs", span="189-189"];
m7_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\''>\r\n                            '')", span="116-116"];
m7_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="126-127"];
m7_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="137-137"];
m7_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="150-150"];
m7_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="163-163"];
m7_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(@''                        <table class=''''table table-condensed table-bordered table-inner''''>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Job type</th>\r\n                                    <th>Enqueued</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n'')", span="175-184"];
m7_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                                    <tr class=\'''')", span="195-195"];
m7_41 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="312-312"];
m7_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="200-200"];
m7_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <a href=\'''')", span="205-206"];
m7_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="211-211"];
m7_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\''>'')", span="216-216"];
m7_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(HtmlHelper.JobId(job.Key))", span="221-221"];
m7_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''</a>\r\n'')", span="226-226"];
m7_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="!job.Value.InEnqueuedState", span="231-231"];
m7_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="237-239"];
m7_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="249-250"];
m7_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(HtmlHelper.JobType(job.Value.Type))", span="255-255"];
m7_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="260-260"];
m7_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="job.Value.EnqueuedAt.HasValue", span="265-265"];
m7_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                                                <span data-moment=\'''')", span="271-271"];
m7_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="301-302"];
m7_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="276-276"];
m7_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="281-281"];
m7_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Write(job.Value.EnqueuedAt)", span="286-286"];
m7_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="291-291"];
m7_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="322-322"];
m7_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobMethodCallRenderer.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="39-39"];
m7_46 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m7_47 [cluster="HangFire.Web.JobStorage.Queues()", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="207-207"];
m7_48 [cluster="HttpRequestBase.LinkTo(string)", file="JobMethodCallRenderer.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m7_50 [cluster="HangFire.Web.HtmlHelper.JobId(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17"];
m7_52 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="JobMethodCallRenderer.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22"];
m7_53 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobMethodCallRenderer.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m7_51 [cluster="Unk.Write", file="JobMethodCallRenderer.cs", label="Entry Unk.Write", span=""];
m7_54 [file="JobMethodCallRenderer.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m8_0 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m8_1 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="type == null", span="15-15"];
m8_2 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="throw new ArgumentNullException(''type'');", span="15-15"];
m8_3 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="method == null", span="16-16"];
m8_4 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="throw new ArgumentNullException(''method'');", span="16-16"];
m8_5 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="arguments == null", span="17-17"];
m8_6 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="LayoutPage.generated.cs", label="2: throw new ArgumentNullException(''arguments'');", span="17-17"];
m8_7 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="Validate(type, ''type'', method, ''method'', arguments.Length, ''arguments'')", span="19-19"];
m8_8 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="Type = type", span="21-21"];
m8_9 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="LayoutPage.generated.cs", label="Method = method", span="22-22"];
m8_10 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="LayoutPage.generated.cs", label="2: Args = InvocationData.DeserializeArguments(method, arguments)", span="23-23"];
m8_11 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", color=red, community=0, file="LayoutPage.generated.cs", label="2: Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m8_12 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=red, community=1, file="LayoutPage.generated.cs", label="2: WriteLiteral(''                            <ul class=\''nav navbar-nav navbar-right\''>\r\n           '' +\r\n''                     <li>\r\n                                    <a href=\'''')", span="118-119"];
m8_15 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=red, community=1, file="LayoutPage.generated.cs", label="0: Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="35-35"];
m8_13 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", color=red, community=0, file="LayoutPage.generated.cs", label="0: Entry Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="247-247"];
m8_14 [cluster="Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", color=red, community=0, file="LayoutPage.generated.cs", label="2: Entry Hangfire.Storage.InvocationData.DeserializeArguments(System.Reflection.MethodInfo, string[])", span="110-110"];
m8_16 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="activator == null", span="37-37"];
m8_17 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="throw new ArgumentNullException(''activator'');", span="37-37"];
m8_18 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="cancellationToken == null", span="38-38"];
m8_19 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="throw new ArgumentNullException(''cancellationToken'');", span="38-38"];
m8_20 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="object instance = null", span="40-40"];
m8_21 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="object result", span="42-42"];
m8_22 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="!Method.IsStatic", span="45-45"];
m8_23 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="instance = Activate(activator)", span="47-47"];
m8_24 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="50-50"];
m8_25 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="result = InvokeMethod(instance, deserializedArguments)", span="51-51"];
m8_26 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="return result;", span="58-58"];
m8_27 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="35-35"];
m8_28 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="62-62"];
m8_29 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="85-85"];
m8_30 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="141-141"];
m8_31 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="LayoutPage.generated.cs", label="var instance = activator.ActivateJob(Type)", span="66-66"];
m8_32 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="LayoutPage.generated.cs", label="instance == null", span="68-68"];
m8_57 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: result.Add(value)", span="127-127"];
m8_50 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="value = cancellationToken", span="101-101"];
m8_43 [cluster="double.ToString(string)", file="LayoutPage.generated.cs", label="Entry double.ToString(string)", span="0-0"];
m8_51 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: value = argument != null\r\n                                ? JobHelper.FromJson(argument, parameter.ParameterType)\r\n                                : null", span="107-109"];
m8_54 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="value = argument", span="117-117"];
m8_56 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: value = converter.ConvertFromInvariantString(argument)", span="122-122"];
m8_58 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="i++", span="92-92"];
m8_59 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: return result.ToArray();", span="130-130"];
m8_45 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="i < parameters.Length", span="92-92"];
m8_46 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="var parameter = parameters[i]", span="94-94"];
m8_47 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="var argument = Arguments[i]", span="95-95"];
m8_49 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="typeof(IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="99-99"];
m8_52 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label=Exception, span="111-111"];
m8_53 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: parameter.ParameterType == typeof(object)", span="113-113"];
m8_55 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="121-121"];
m8_60 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: Exception", span="132-132"];
m8_61 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", color=green, community=0, file="LayoutPage.generated.cs", label="2: throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="134-136"];
m8_42 [cluster="string.Format(string, object, object, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m8_44 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m8_48 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="object value", span="97-97"];
m8_62 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="LayoutPage.generated.cs", label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="85-85"];
m8_65 [cluster="System.Type.IsAssignableFrom(System.Type)", file="LayoutPage.generated.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m8_40 [cluster="string.Format(string, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_36 [cluster="Hangfire.Dashboard.UrlHelper.Home()", color=green, community=0, file="LayoutPage.generated.cs", label="2: Entry Hangfire.Dashboard.UrlHelper.Home()", span="38-38"];
m8_35 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m8_34 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m8_33 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m8_37 [cluster="Hangfire.Dashboard.Pages.Navigation.Navigation()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.Navigation.Navigation()", span="25-25"];
m8_39 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119"];
m8_75 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="157-159"];
m8_73 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label="ex.InnerException is OperationCanceledException", span="149-149"];
m8_71 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label="return Method.Invoke(instance, deserializedArguments);", span="145-145"];
m8_72 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label=TargetInvocationException, span="147-147"];
m8_74 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label="throw ex.InnerException;", span="154-154"];
m8_76 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="LayoutPage.generated.cs", label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="141-141"];
m8_67 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="LayoutPage.generated.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m8_77 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="LayoutPage.generated.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m8_70 [cluster="System.Collections.Generic.List<T>.ToArray()", file="LayoutPage.generated.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m8_38 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="82-82"];
m8_41 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="LayoutPage.generated.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m8_64 [cluster="System.Collections.Generic.List<T>.List(int)", file="LayoutPage.generated.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m8_66 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m8_69 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LayoutPage.generated.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_78 [cluster="Hangfire.Common.Job.Dispose(object)", file="LayoutPage.generated.cs", label="Entry Hangfire.Common.Job.Dispose(object)", span="164-164"];
m8_83 [cluster="Hangfire.Common.Job.Dispose(object)", color=green, community=0, file="LayoutPage.generated.cs", label="2: throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="176-178"];
m8_82 [cluster="Hangfire.Common.Job.Dispose(object)", file="LayoutPage.generated.cs", label=Exception, span="174-174"];
m8_80 [cluster="Hangfire.Common.Job.Dispose(object)", file="LayoutPage.generated.cs", label="disposable != null", span="169-169"];
m8_81 [cluster="Hangfire.Common.Job.Dispose(object)", file="LayoutPage.generated.cs", label="disposable.Dispose()", span="171-171"];
m8_79 [cluster="Hangfire.Common.Job.Dispose(object)", file="LayoutPage.generated.cs", label="var disposable = instance as IDisposable", span="168-168"];
m8_84 [cluster="Hangfire.Common.Job.Dispose(object)", file="LayoutPage.generated.cs", label="Exit Hangfire.Common.Job.Dispose(object)", span="164-164"];
m8_68 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="LayoutPage.generated.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m8_63 [cluster="System.Reflection.MethodBase.GetParameters()", file="LayoutPage.generated.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m8_85 [cluster="System.IDisposable.Dispose()", file="LayoutPage.generated.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m8_86 [file="LayoutPage.generated.cs", label="Hangfire.Common.Job", span=""];
m9_22 [cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m9_23 [cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RequestDispatcherContext.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m9_24 [cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m9_26 [cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66"];
m9_27 [cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="RequestDispatcherContext.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m9_28 [cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66"];
m9_25 [cluster="Unk.OnScenarioStart", file="RequestDispatcherContext.cs", label="Entry Unk.OnScenarioStart", span=""];
m9_29 [cluster="Unk.CollectScenarioErrors", file="RequestDispatcherContext.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m9_101 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", span="233-233"];
m9_102 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the state should be changed to the Failed state when it could not find its type'', ((string[])(null)))", span="235-235"];
m9_103 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="237-237"];
m9_104 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="239-239"];
m9_105 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="241-241"];
m9_106 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="243-243"];
m9_107 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the job should be moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="245-245"];
m9_108 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="247-247"];
m9_109 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateShouldBeChangedToTheFailedStateWhenItCouldNotFindItsType()", span="233-233"];
m9_110 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", span="255-255"];
m9_111 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the state should not be changed if allowed current states array does not contain '' +\r\n                    ''the current state'', ((string[])(null)))", span="257-258"];
m9_112 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="260-260"];
m9_113 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="262-262"];
m9_114 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="264-264"];
m9_115 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="266-267"];
m9_116 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the job should be in the Old state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="269-269"];
m9_117 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.And(''the old state should not be unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="271-271"];
m9_118 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.And(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="273-273"];
m9_119 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="275-275"];
m9_120 [cluster="HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateShouldNotBeChangedIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", span="255-255"];
m9_121 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="282-282"];
m9_122 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State changing filters should be executed in the order they were defined'', ((string[])(null)))", span="284-284"];
m9_123 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="286-286"];
m9_124 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="288-288"];
m9_125 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="290-290"];
m9_126 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="292-292"];
m9_127 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="294-294"];
m9_128 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="296-296"];
m9_129 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="298-299"];
m9_130 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="table4.AddRow(new string[] {\r\n                        ''first''})", span="300-301"];
m9_131 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="table4.AddRow(new string[] {\r\n                        ''second''})", span="302-303"];
m9_132 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.Then(''changing filters should be executed in the following order:'', ((string)(null)), table4, ''Then '')", span="305-305"];
m9_133 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="307-307"];
m9_134 [cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.StateChangingFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="282-282"];
m9_21 [cluster="Unk.OnScenarioEnd", file="RequestDispatcherContext.cs", label="Entry Unk.OnScenarioEnd", span=""];
m9_165 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="384-384"];
m9_166 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the unexisting job should not be changed'', ((string[])(null)))", span="386-386"];
m9_167 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="388-388"];
m9_168 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="390-390"];
m9_169 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="392-392"];
m9_170 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="394-394"];
m9_171 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="396-396"];
m9_172 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="384-384"];
m9_208 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", span="486-486"];
m9_209 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''OnStateUnapplied method should not be called when the state is empty'', ((string[])(null)))", span="488-488"];
m9_210 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="490-490"];
m9_211 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="492-492"];
m9_212 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job with empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="494-494"];
m9_213 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="496-496"];
m9_214 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="498-498"];
m9_215 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="500-501"];
m9_216 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="table8.AddRow(new string[] {\r\n                        ''first::OnStateApplied''})", span="502-503"];
m9_217 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="testRunner.Then(''state applied filter methods should be executed in the following order:'', ((string)(null)), table8, ''Then '')", span="505-505"];
m9_218 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="507-507"];
m9_219 [cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodShouldNotBeCalledWhenTheStateIsEmpty()", span="486-486"];
m9_0 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="Entry Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m9_1 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="RequestDispatcherContext.cs", label="2: jobStorage == null", span="31-31"];
m9_2 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="RequestDispatcherContext.cs", label="2: throw new ArgumentNullException(''jobStorage'');", span="31-31"];
m9_3 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="owinEnvironment == null", span="32-32"];
m9_4 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="throw new ArgumentNullException(''owinEnvironment'');", span="32-32"];
m9_41 [cluster="Unk.And", file="RequestDispatcherContext.cs", label="Entry Unk.And", span=""];
m9_192 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="450-450"];
m9_193 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State applied filters should be executed in the order they were defined'', ((string[])(null)))", span="452-452"];
m9_194 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="454-454"];
m9_195 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="456-456"];
m9_196 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="458-458"];
m9_197 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="460-460"];
m9_198 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state applied filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462"];
m9_199 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="464-464"];
m9_200 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="466-467"];
m9_201 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="table7.AddRow(new string[] {\r\n                        ''first::OnStateUnapplied''})", span="468-469"];
m9_202 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="table7.AddRow(new string[] {\r\n                        ''second::OnStateUnapplied''})", span="470-471"];
m9_203 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="table7.AddRow(new string[] {\r\n                        ''first::OnStateApplied''})", span="472-473"];
m9_204 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="table7.AddRow(new string[] {\r\n                        ''second::OnStateApplied''})", span="474-475"];
m9_205 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="testRunner.Then(''state applied filter methods should be executed in the following order:'', ((string)(null)), table7, ''Then '')", span="477-477"];
m9_206 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="479-479"];
m9_207 [cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.StateAppliedFiltersShouldBeExecutedInTheOrderTheyWereDefined()", span="450-450"];
m9_5 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="uriMatch == null", span="33-33"];
m9_173 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", span="403-403"];
m9_174 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Changing filters are should not be executed for unexisting job'', ((string[])(null)))", span="405-405"];
m9_175 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="407-407"];
m9_176 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="409-409"];
m9_177 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="411-411"];
m9_178 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="413-413"];
m9_179 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="testRunner.Then(''changing filters should not be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="415-415"];
m9_180 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="417-417"];
m9_181 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersAreShouldNotBeExecutedForUnexistingJob()", span="403-403"];
m9_135 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", span="314-314"];
m9_136 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state changing filters should be able to modify the state'', ((string[])(null)))", span="316-316"];
m9_137 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="318-318"];
m9_138 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="320-320"];
m9_139 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="322-322"];
m9_140 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'first\' that changes the state to the \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="324-324"];
m9_141 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="326-326"];
m9_142 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the job state should be changed to \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="328-328"];
m9_143 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.And(''the \'Test\' state should not be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="330-330"];
m9_144 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.And(''the \'AnotherTest\' state should be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="332-332"];
m9_145 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="334-336"];
m9_146 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="table5.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''AnotherTest''})", span="337-339"];
m9_147 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="testRunner.And(''the job\'s state entry should contain the following items:'', ((string)(null)), table5, ''And '')", span="341-341"];
m9_148 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="343-343"];
m9_149 [cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateChangingFiltersShouldBeAbleToModifyTheState()", span="314-314"];
m9_14 [cluster="HangFire.Tests.StateMachineFeature.TestInitialize()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TestInitialize()", span="46-46"];
m9_15 [cluster="HangFire.Tests.StateMachineFeature.TestInitialize()", file="RequestDispatcherContext.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''State machine''))", span="48-49"];
m9_16 [cluster="HangFire.Tests.StateMachineFeature.TestInitialize()", file="RequestDispatcherContext.cs", label="HangFire.Tests.StateMachineFeature.FeatureSetup(null)", span="51-51"];
m9_17 [cluster="HangFire.Tests.StateMachineFeature.TestInitialize()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TestInitialize()", span="46-46"];
m9_13 [cluster="Unk.OnFeatureEnd", file="RequestDispatcherContext.cs", label="Hangfire.Dashboard.RequestDispatcherContext", span=""];
m9_7 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="AppPath = appPath", span="35-35"];
m9_44 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", span="96-96"];
m9_45 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The new state should be applied'', ((string[])(null)))", span="98-98"];
m9_46 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m9_47 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m9_48 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m9_49 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m9_50 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the \'Test\' state should be applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m9_51 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="110-110"];
m9_52 [cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", span="96-96"];
m9_42 [cluster="Unk.When", file="RequestDispatcherContext.cs", label="Entry Unk.When", span=""];
m9_8 [cluster="Unk.OnFeatureStart", file="RequestDispatcherContext.cs", label="Entry Unk.OnFeatureStart", span=""];
m9_9 [cluster="HangFire.Tests.StateMachineFeature.FeatureTearDown()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.FeatureTearDown()", span="39-39"];
m9_10 [cluster="HangFire.Tests.StateMachineFeature.FeatureTearDown()", file="RequestDispatcherContext.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m9_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="RequestDispatcherContext.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m9_11 [cluster="HangFire.Tests.StateMachineFeature.FeatureTearDown()", file="RequestDispatcherContext.cs", label="testRunner = null", span="42-42"];
m9_12 [cluster="HangFire.Tests.StateMachineFeature.FeatureTearDown()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.FeatureTearDown()", span="39-39"];
m9_75 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166"];
m9_76 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job history should be appended'', ((string[])(null)))", span="168-168"];
m9_77 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="170-170"];
m9_78 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172"];
m9_79 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174"];
m9_80 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176"];
m9_81 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="178-180"];
m9_82 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="table2.AddRow(new string[] {\r\n                        ''CreatedAt'',\r\n                        ''<UtcNow timestamp>''})", span="181-183"];
m9_83 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="table2.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="184-186"];
m9_84 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="table2.AddRow(new string[] {\r\n                        ''Reason'',\r\n                        ''SomeReason''})", span="187-189"];
m9_85 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the last history entry should contain the following items:'', ((string)(null)), table2, ''Then '')", span="191-191"];
m9_86 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="193-193"];
m9_87 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166"];
m9_74 [cluster="Unk.AddRow", file="RequestDispatcherContext.cs", label="Entry Unk.AddRow", span=""];
m9_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="RequestDispatcherContext.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m9_150 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="350-350"];
m9_151 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job history should contain every changed state'', ((string[])(null)))", span="352-352"];
m9_152 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="354-354"];
m9_153 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="356-356"];
m9_154 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="358-358"];
m9_155 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'first\' that changes the state to the \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="360-360"];
m9_156 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'second\' that changes the state to the \'YetAnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="362-362"];
m9_157 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="364-364"];
m9_158 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''State''})", span="366-367"];
m9_159 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="table6.AddRow(new string[] {\r\n                        ''YetAnotherTest''})", span="368-369"];
m9_160 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="table6.AddRow(new string[] {\r\n                        ''AnotherTest''})", span="370-371"];
m9_161 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="table6.AddRow(new string[] {\r\n                        ''Test''})", span="372-373"];
m9_162 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the history for the following states should be added:'', ((string)(null)), table6, ''Then '')", span="375-375"];
m9_163 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="377-377"];
m9_164 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="350-350"];
m9_43 [cluster="Unk.Then", file="RequestDispatcherContext.cs", label="Entry Unk.Then", span=""];
m9_40 [cluster="Unk.Given", file="RequestDispatcherContext.cs", label="Entry Unk.Given", span=""];
m9_100 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="200-200"];
m9_88 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="200-200"];
m9_89 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the job history record and the state entry should contain the state properties'', ((string[])(null)))", span="202-202"];
m9_90 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="204-204"];
m9_91 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="206-208"];
m9_92 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="table3.AddRow(new string[] {\r\n                        ''Server'',\r\n                        ''TestServer''})", span="209-211"];
m9_93 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="table3.AddRow(new string[] {\r\n                        ''Worker'',\r\n                        ''#3''})", span="212-214"];
m9_94 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state with the following properties:'', ((string)(null)), table3, ''Given '')", span="216-216"];
m9_95 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="218-218"];
m9_96 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="220-220"];
m9_97 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the last history entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="222-222"];
m9_98 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="testRunner.And(''the state entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="224-224"];
m9_99 [cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="226-226"];
m9_73 [cluster="TechTalk.SpecFlow.Table.cstr", file="RequestDispatcherContext.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m9_18 [cluster="HangFire.Tests.StateMachineFeature.ScenarioTearDown()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.ScenarioTearDown()", span="56-56"];
m9_19 [cluster="HangFire.Tests.StateMachineFeature.ScenarioTearDown()", file="RequestDispatcherContext.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m9_20 [cluster="HangFire.Tests.StateMachineFeature.ScenarioTearDown()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.ScenarioTearDown()", span="56-56"];
m9_72 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", span="138-138"];
m9_62 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", span="138-138"];
m9_63 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state entry should contain the state name'', ((string[])(null)))", span="140-140"];
m9_64 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="142-142"];
m9_65 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="144-144"];
m9_66 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="146-146"];
m9_67 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="148-148"];
m9_68 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="150-152"];
m9_69 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="table1.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="153-155"];
m9_70 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the job\'s state entry should contain the following items:'', ((string)(null)), table1, ''Then '')", span="157-157"];
m9_71 [cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="159-159"];
m9_182 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", span="425-425"];
m9_183 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Changing filters should not be executed if the transition is not allowed for the '' +\r\n                    ''current state'', ((string[])(null)))", span="427-428"];
m9_184 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="430-430"];
m9_185 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="432-432"];
m9_186 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="434-434"];
m9_187 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="436-436"];
m9_188 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="438-439"];
m9_189 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="testRunner.Then(''changing filters should not be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="441-441"];
m9_190 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="443-443"];
m9_191 [cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersShouldNotBeExecutedIfTheTransitionIsNotAllowedForTheCurrentState()", span="425-425"];
m9_30 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75"];
m9_31 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the job should be changed'', ((string[])(null)))", span="77-77"];
m9_32 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m9_33 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m9_34 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m9_35 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m9_36 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the job state should be changed to \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m9_37 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="89-89"];
m9_38 [cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75"];
m9_53 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="Entry HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117"];
m9_54 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''An old state should be unapplied'', ((string[])(null)))", span="119-119"];
m9_55 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="this.ScenarioSetup(scenarioInfo)", span="121-121"];
m9_56 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="123-123"];
m9_57 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="125-125"];
m9_58 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="127-127"];
m9_59 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="testRunner.Then(''the old state should be unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="129-129"];
m9_60 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="this.ScenarioCleanup()", span="131-131"];
m9_61 [cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="RequestDispatcherContext.cs", label="Exit HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117"];
m9_220 [file="RequestDispatcherContext.cs", label="HangFire.Tests.StateMachineFeature", span=""];
m11_0 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="SqlServerConnection.cs", label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35"];
m11_1 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="SqlServerConnection.cs", label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="35-35"];
m12_13 [cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="205-205"];
m12_11 [cluster="Hangfire.JobStorage.GetConnection()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m12_15 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.ToString()", span="51-51"];
m12_16 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="SqlServerConnectionFacts.cs", label="return GetType().Name;", span="53-53"];
m12_17 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.Server.ServerWatchdog.ToString()", span="51-51"];
m12_4 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m12_5 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="var connection = context.Storage.GetConnection()", span="39-39"];
m12_9 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="context.Wait(_checkInterval)", span="48-48"];
m12_6 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", span="41-41"];
m12_7 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="serversRemoved != 0", span="42-42"];
m12_8 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="Logger.Info($''{serversRemoved} servers were removed due to timeout'')", span="44-44"];
m12_10 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m12_14 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="55-55"];
m12_12 [cluster="Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m12_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m12_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="_checkInterval = checkInterval", span="33-33"];
m12_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="_serverTimeout = serverTimeout", span="34-34"];
m12_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m12_19 [file="SqlServerConnectionFacts.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m14_587 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_153 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="162-162"];
m14_154 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var correctJobQueue = new Mock<IPersistentJobQueue>();\r\n                var correctProvider = new Mock<IPersistentJobQueueProvider>();\r\n                correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object);\r\n\r\n                _queueProviders.Add(correctProvider.Object, new [] { ''default'' });\r\n\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''));\r\n            })", span="164-176"];
m14_155 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="162-162"];
m14_726 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297"];
m14_627 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="722-722"];
m14_628 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score]) values (@key, @value, 0.0)''", span="724-725"];
m14_629 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                Commit(sql, x => x.RemoveSet(''set-1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n                Assert.Equal(''set-2'', record.Key);\r\n            })", span="727-739"];
m14_630 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_RemovesASet_WithAGivenKey()", span="722-722"];
m14_119 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="129-129"];
m14_120 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="131-134"];
m14_121 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="136-158"];
m14_122 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="129-129"];
m14_393 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="454-454"];
m14_394 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="456-468"];
m14_395 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="454-454"];
m14_614 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="712-712"];
m14_615 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)));\r\n            })", span="714-718"];
m14_616 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveSet_ThrowsAnException_WhenKeyIsNull()", span="712-712"];
m14_211 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142"];
m14_419 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="489-489"];
m14_420 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="491-502"];
m14_421 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="489-489"];
m14_318 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168"];
m14_48 [cluster="Unk.ToString", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.ToString", span=""];
m14_152 [cluster="Unk.AddJobState", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.AddJobState", span=""];
m14_476 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="564-564"];
m14_477 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="566-577"];
m14_478 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="564-564"];
m14_782 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="897-897"];
m14_783 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="899-905"];
m14_784 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ThrowsAnException_WhenKeyIsNull()", span="897-897"];
m14_655 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275"];
m14_319 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="355-355"];
m14_320 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="357-368"];
m14_321 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="355-355"];
m14_559 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="653-653"];
m14_560 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                // Act\r\n                Commit(sql, x => x.RemoveHash(''some-hash''));\r\n\r\n                // Assert\r\n                var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single();\r\n                Assert.Equal(0, count);\r\n            })", span="655-670"];
m14_561 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_RemovesAllHashRecords()", span="653-653"];
m14_589 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="686-686"];
m14_590 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)));\r\n\r\n                Assert.Equal(''items'', exception.ParamName);\r\n            })", span="688-694"];
m14_591 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenItemsValueIsNull()", span="686-686"];
m14_637 [cluster="Unk.Execute", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Execute", span=""];
m14_407 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="472-472"];
m14_408 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="474-485"];
m14_409 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="472-472"];
m14_177 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="179-179"];
m14_178 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", color=red, community=0, file="SqlServerWriteOnlyTransactionFacts.cs", label="2: return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="181-183"];
m14_179 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="179-179"];
m14_761 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308"];
m14_343 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183"];
m14_50 [cluster="Unk.GetTestJob", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.GetTestJob", span=""];
m14_7 [cluster="Mock<IPersistentJobQueue>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m14_816 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="935-935"];
m14_817 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="937-943"];
m14_818 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ThrowsAnException_WhenKeyIsNull()", span="935-935"];
m14_267 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="291-291"];
m14_268 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="293-302"];
m14_269 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="291-291"];
m14_829 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330"];
m14_193 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135"];
m14_795 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319"];
m14_514 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="610-610"];
m14_515 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="612-618"];
m14_516 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="610-610"];
m14_691 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286"];
m14_280 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163"];
m14_194 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="202-202"];
m14_195 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="204-218"];
m14_196 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="202-202"];
m14_293 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="323-323"];
m14_294 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="325-336"];
m14_295 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="323-323"];
m14_513 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224"];
m14_441 [cluster="Unk.ToArray", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.ToArray", span=""];
m14_52 [cluster="System.DateTime.AddDays(double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m14_677 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="782-782"];
m14_678 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="784-790"];
m14_679 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_ThrowsAnException_WhenKeyIsNull()", span="782-782"];
m14_5 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m14_0 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="17-17"];
m14_1 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="19-19"];
m14_2 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="defaultProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="20-21"];
m14_3 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="23-23"];
m14_4 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="17-17"];
m14_830 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="947-947"];
m14_831 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="949-951"];
m14_832 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistList(''list-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''list-1'']);\r\n                Assert.NotNull(records[''list-2'']);\r\n            })", span="953-969"];
m14_833 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistList_ClearsExpirationTime_OnAGivenHash()", span="947-947"];
m14_692 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="794-794"];
m14_693 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="796-798"];
m14_694 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1'']);\r\n                Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''set-2'']);\r\n            })", span="800-817"];
m14_695 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireSet_SetsExpirationTime_OnASet_WithGivenKey()", span="794-794"];
m14_847 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="966-966"];
m14_10 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="20-20"];
m14_11 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="20-20"];
m14_12 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="20-20"];
m14_20 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="30-30"];
m14_21 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new SqlServerWriteOnlyTransaction(null, null, _queueProviders)", span="30-30"];
m14_22 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="30-30"];
m14_28 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="39-39"];
m14_29 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null, null)", span="39-39"];
m14_30 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="39-39"];
m14_38 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m14_39 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m14_37 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="52-64"];
m14_40 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="57-57"];
m14_41 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m14_43 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m14_56 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="57-57"];
m14_55 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="57-57"];
m14_42 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="60-60"];
m14_44 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(anotherJob.ExpireAt)", span="63-63"];
m14_45 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="52-64"];
m14_57 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="57-57"];
m14_65 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m14_66 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m14_64 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="75-87"];
m14_67 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="80-80"];
m14_68 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="82-82"];
m14_70 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="85-85"];
m14_75 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistJob(jobId)", span="80-80"];
m14_74 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="80-80"];
m14_69 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(job.ExpireAt)", span="83-83"];
m14_71 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="86-86"];
m14_72 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="75-87"];
m14_76 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="80-80"];
m14_83 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="100-100"];
m14_84 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="101-101"];
m14_82 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="98-125"];
m14_89 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="109-109"];
m14_90 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="111-111"];
m14_93 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="115-115"];
m14_96 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="119-119"];
m14_116 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SetJobState(jobId, state.Object)", span="109-109"];
m14_97 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="120-120"];
m14_85 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var state = new Mock<IState>()", span="103-103"];
m14_86 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="104-104"];
m14_87 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="105-105"];
m14_88 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="106-107"];
m14_105 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="104-104"];
m14_108 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="105-105"];
m14_111 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="106-106"];
m14_115 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="109-109"];
m14_91 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''State'', job.StateName)", span="112-112"];
m14_92 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(job.StateId)", span="113-113"];
m14_94 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(anotherJob.StateName)", span="116-116"];
m14_95 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(anotherJob.StateId)", span="117-117"];
m14_98 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''State'', jobState.Name)", span="121-121"];
m14_99 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="122-122"];
m14_100 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(jobState.CreatedAt)", span="123-123"];
m14_101 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="124-124"];
m14_102 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="98-125"];
m14_106 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Name", span="104-104"];
m14_107 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="104-104"];
m14_109 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Reason", span="105-105"];
m14_110 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="105-105"];
m14_112 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SerializeData()", span="106-106"];
m14_113 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="106-106"];
m14_117 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="109-109"];
m14_124 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="138-138"];
m14_123 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="136-158"];
m14_129 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="146-146"];
m14_130 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var job = GetTestJob(sql, jobId)", span="148-148"];
m14_133 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="152-152"];
m14_125 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var state = new Mock<IState>()", span="140-140"];
m14_150 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddJobState(jobId, state.Object)", span="146-146"];
m14_134 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="153-153"];
m14_126 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="141-141"];
m14_127 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="state.Setup(x => x.Reason).Returns(''Reason'')", span="142-142"];
m14_128 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="143-144"];
m14_140 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="141-141"];
m14_143 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="142-142"];
m14_146 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="143-143"];
m14_149 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="146-146"];
m14_131 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(job.StateName)", span="149-149"];
m14_132 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(job.StateId)", span="150-150"];
m14_135 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''State'', jobState.Name)", span="154-154"];
m14_136 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="155-155"];
m14_137 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(jobState.CreatedAt)", span="156-156"];
m14_138 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="157-157"];
m14_139 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="136-158"];
m14_141 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Name", span="141-141"];
m14_142 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="141-141"];
m14_144 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Reason", span="142-142"];
m14_145 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="142-142"];
m14_147 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SerializeData()", span="143-143"];
m14_148 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="143-143"];
m14_151 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="146-146"];
m14_156 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="164-176"];
m14_157 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="166-166"];
m14_161 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="173-173"];
m14_158 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="167-167"];
m14_159 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object)", span="168-169"];
m14_162 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''))", span="175-175"];
m14_160 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="_queueProviders.Add(correctProvider.Object, new [] { ''default'' })", span="171-171"];
m14_166 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="168-168"];
m14_169 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="173-173"];
m14_163 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="164-176"];
m14_173 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="175-175"];
m14_167 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="168-168"];
m14_168 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="168-168"];
m14_170 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToQueue(''default'', ''1'')", span="173-173"];
m14_171 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="173-173"];
m14_174 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.Enqueue(''default'', ''1'')", span="175-175"];
m14_175 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="175-175"];
m14_183 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="189-198"];
m14_184 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="191-191"];
m14_185 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="193-193"];
m14_190 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="191-191"];
m14_186 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="195-195"];
m14_187 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, record.Value)", span="196-196"];
m14_188 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="197-197"];
m14_189 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="189-198"];
m14_191 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.IncrementCounter(''my-key'')", span="191-191"];
m14_192 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="191-191"];
m14_197 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="204-218"];
m14_198 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="206-206"];
m14_199 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="208-208"];
m14_208 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="206-206"];
m14_200 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="210-210"];
m14_201 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, record.Value)", span="211-211"];
m14_202 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(record.ExpireAt)", span="212-212"];
m14_203 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var expireAt = (DateTime) record.ExpireAt", span="214-214"];
m14_204 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="216-216"];
m14_205 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="217-217"];
m14_206 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="204-218"];
m14_209 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="206-206"];
m14_210 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="206-206"];
m14_215 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="224-235"];
m14_216 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="226-230"];
m14_217 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="232-232"];
m14_220 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="226-230"];
m14_218 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(2, recordCount)", span="234-234"];
m14_219 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="224-235"];
m14_221 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.IncrementCounter(''my-key'')", span="228-228"];
m14_222 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.IncrementCounter(''my-key'')", span="229-229"];
m14_223 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="226-230"];
m14_227 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="241-250"];
m14_228 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="243-243"];
m14_229 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="245-245"];
m14_234 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="243-243"];
m14_230 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="247-247"];
m14_231 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(-1, record.Value)", span="248-248"];
m14_232 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="249-249"];
m14_233 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="241-250"];
m14_235 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.DecrementCounter(''my-key'')", span="243-243"];
m14_236 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="243-243"];
m14_241 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="256-270"];
m14_242 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="258-258"];
m14_243 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="260-260"];
m14_251 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="258-258"];
m14_244 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="262-262"];
m14_245 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(-1, record.Value)", span="263-263"];
m14_246 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(record.ExpireAt)", span="264-264"];
m14_247 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var expireAt = (DateTime)record.ExpireAt", span="266-266"];
m14_248 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="268-268"];
m14_249 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="269-269"];
m14_250 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="256-270"];
m14_252 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="258-258"];
m14_253 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="258-258"];
m14_258 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="276-287"];
m14_259 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="278-282"];
m14_260 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="284-284"];
m14_263 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="278-282"];
m14_261 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(2, recordCount)", span="286-286"];
m14_262 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="276-287"];
m14_264 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.DecrementCounter(''my-key'')", span="280-280"];
m14_265 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.DecrementCounter(''my-key'')", span="281-281"];
m14_266 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="278-282"];
m14_270 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="293-302"];
m14_271 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="295-295"];
m14_272 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="297-297"];
m14_277 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="295-295"];
m14_273 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="299-299"];
m14_274 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-value'', record.Value)", span="300-300"];
m14_275 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(0.0, record.Score, 2)", span="301-301"];
m14_276 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="293-302"];
m14_278 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="295-295"];
m14_279 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="295-295"];
m14_284 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="308-319"];
m14_285 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="310-314"];
m14_286 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="316-316"];
m14_289 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="310-314"];
m14_287 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(2, recordCount)", span="318-318"];
m14_288 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="308-319"];
m14_290 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="312-312"];
m14_291 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="313-313"];
m14_292 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="310-314"];
m14_296 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="325-336"];
m14_297 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="327-331"];
m14_298 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="333-333"];
m14_301 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="327-331"];
m14_299 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, recordCount)", span="335-335"];
m14_300 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="325-336"];
m14_302 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="329-329"];
m14_303 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="330-330"];
m14_304 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="327-331"];
m14_308 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="342-351"];
m14_309 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="344-344"];
m14_310 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="346-346"];
m14_315 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="344-344"];
m14_311 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="348-348"];
m14_312 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-value'', record.Value)", span="349-349"];
m14_313 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(3.2, record.Score, 3)", span="350-350"];
m14_314 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="342-351"];
m14_316 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="344-344"];
m14_317 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="344-344"];
m14_322 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="357-368"];
m14_323 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="359-363"];
m14_324 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="365-365"];
m14_327 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="359-363"];
m14_325 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(3.2, record.Score, 3)", span="367-367"];
m14_326 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="357-368"];
m14_328 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="361-361"];
m14_329 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="362-362"];
m14_330 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="359-363"];
m14_334 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="374-385"];
m14_335 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="376-380"];
m14_336 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="382-382"];
m14_339 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="376-380"];
m14_337 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(0, recordCount)", span="384-384"];
m14_338 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="374-385"];
m14_340 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="378-378"];
m14_341 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="379-379"];
m14_342 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="376-380"];
m14_347 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="391-402"];
m14_348 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="393-397"];
m14_349 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="399-399"];
m14_352 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="393-397"];
m14_350 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, recordCount)", span="401-401"];
m14_351 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="391-402"];
m14_353 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="395-395"];
m14_354 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="396-396"];
m14_355 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="393-397"];
m14_359 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="408-419"];
m14_360 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="410-414"];
m14_361 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="416-416"];
m14_364 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="410-414"];
m14_362 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, recordCount)", span="418-418"];
m14_363 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="408-419"];
m14_365 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="412-412"];
m14_366 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="413-413"];
m14_367 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="410-414"];
m14_371 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="425-433"];
m14_372 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="427-427"];
m14_373 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.List'').Single()", span="429-429"];
m14_377 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="427-427"];
m14_374 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-key'', record.Key)", span="431-431"];
m14_375 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''my-value'', record.Value)", span="432-432"];
m14_376 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="425-433"];
m14_378 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="427-427"];
m14_379 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="427-427"];
m14_384 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="439-450"];
m14_385 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="441-445"];
m14_386 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="447-447"];
m14_389 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="441-445"];
m14_387 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(2, recordCount)", span="449-449"];
m14_388 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="439-450"];
m14_390 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="443-443"];
m14_391 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="444-444"];
m14_392 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="441-445"];
m14_396 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="456-468"];
m14_397 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="458-463"];
m14_398 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="465-465"];
m14_401 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="458-463"];
m14_399 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(0, recordCount)", span="467-467"];
m14_400 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="456-468"];
m14_402 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="460-460"];
m14_403 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="461-461"];
m14_404 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveFromList(''my-key'', ''my-value'')", span="462-462"];
m14_405 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="458-463"];
m14_410 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="474-485"];
m14_411 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="476-480"];
m14_412 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="482-482"];
m14_415 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="476-480"];
m14_413 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, recordCount)", span="484-484"];
m14_414 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="474-485"];
m14_416 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="478-478"];
m14_417 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveFromList(''my-key'', ''different-value'')", span="479-479"];
m14_418 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="476-480"];
m14_422 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="491-502"];
m14_423 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="493-497"];
m14_424 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="499-499"];
m14_427 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="493-497"];
m14_425 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, recordCount)", span="501-501"];
m14_426 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="491-502"];
m14_428 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''my-value'')", span="495-495"];
m14_429 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveFromList(''different-key'', ''my-value'')", span="496-496"];
m14_430 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="493-497"];
m14_434 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="508-524"];
m14_435 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="510-517"];
m14_436 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="519-519"];
m14_442 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="510-517"];
m14_437 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(2, records.Length)", span="521-521"];
m14_438 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''1'', records[0].Value)", span="522-522"];
m14_439 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''2'', records[1].Value)", span="523-523"];
m14_440 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="508-524"];
m14_443 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="512-512"];
m14_444 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''1'')", span="513-513"];
m14_445 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''2'')", span="514-514"];
m14_446 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''3'')", span="515-515"];
m14_447 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.TrimList(''my-key'', 1, 2)", span="516-516"];
m14_448 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="510-517"];
m14_453 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="530-543"];
m14_454 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="532-538"];
m14_455 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="540-540"];
m14_458 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="532-538"];
m14_456 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(2, recordCount)", span="542-542"];
m14_457 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="530-543"];
m14_459 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="534-534"];
m14_460 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''1'')", span="535-535"];
m14_461 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''2'')", span="536-536"];
m14_462 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.TrimList(''my-key'', 1, 100)", span="537-537"];
m14_463 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="532-538"];
m14_467 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="549-560"];
m14_468 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="551-555"];
m14_469 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="557-557"];
m14_472 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="551-555"];
m14_470 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(0, recordCount)", span="559-559"];
m14_471 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="549-560"];
m14_473 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="553-553"];
m14_474 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.TrimList(''my-key'', 1, 100)", span="554-554"];
m14_475 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="551-555"];
m14_479 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="566-577"];
m14_480 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="568-572"];
m14_481 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="574-574"];
m14_484 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="568-572"];
m14_482 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(0, recordCount)", span="576-576"];
m14_483 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="566-577"];
m14_485 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="570-570"];
m14_486 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.TrimList(''my-key'', 1, 0)", span="571-571"];
m14_487 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="568-572"];
m14_491 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="583-594"];
m14_492 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="585-589"];
m14_493 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="591-591"];
m14_496 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="585-589"];
m14_494 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(1, recordCount)", span="593-593"];
m14_495 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="583-594"];
m14_497 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.InsertToList(''my-key'', ''0'')", span="587-587"];
m14_498 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.TrimList(''another-key'', 1, 0)", span="588-588"];
m14_499 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="585-589"];
m14_503 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="600-606"];
m14_504 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="602-603"];
m14_508 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="603-603"];
m14_505 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="605-605"];
m14_507 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="603-603"];
m14_506 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="600-606"];
m14_509 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="603-603"];
m14_510 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="603-603"];
m14_511 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="603-603"];
m14_512 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="603-603"];
m14_517 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="612-618"];
m14_518 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)))", span="614-615"];
m14_522 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null))", span="615-615"];
m14_519 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="617-617"];
m14_521 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="615-615"];
m14_520 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="612-618"];
m14_523 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="615-615"];
m14_524 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="615-615"];
m14_525 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SetRangeInHash(''some-hash'', null)", span="615-615"];
m14_526 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="615-615"];
m14_530 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="624-639"];
m14_531 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="626-630"];
m14_532 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="632-635"];
m14_537 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="626-630"];
m14_533 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="637-637"];
m14_540 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="635-635"];
m14_543 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="635-635"];
m14_534 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="638-638"];
m14_535 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="624-639"];
m14_538 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="626-630"];
m14_539 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="626-630"];
m14_541 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Field", span="635-635"];
m14_542 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="635-635"];
m14_544 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Value", span="635-635"];
m14_545 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="635-635"];
m14_549 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="645-649"];
m14_550 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)))", span="647-648"];
m14_553 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.RemoveHash(null))", span="648-648"];
m14_551 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="645-649"];
m14_552 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="648-648"];
m14_554 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="648-648"];
m14_555 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="648-648"];
m14_556 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveHash(null)", span="648-648"];
m14_557 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="648-648"];
m14_562 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="655-670"];
m14_563 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="658-662"];
m14_564 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.RemoveHash(''some-hash''))", span="665-665"];
m14_565 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var count = sql.Query<int>(''select count(*) from HangFire.Hash'').Single()", span="668-668"];
m14_568 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="658-662"];
m14_571 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="665-665"];
m14_566 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(0, count)", span="669-669"];
m14_567 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="655-670"];
m14_569 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="658-662"];
m14_570 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="658-662"];
m14_572 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveHash(''some-hash'')", span="665-665"];
m14_573 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="665-665"];
m14_577 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="676-682"];
m14_578 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())))", span="678-679"];
m14_582 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddRangeToSet(null, new List<string>()))", span="679-679"];
m14_579 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="681-681"];
m14_581 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="679-679"];
m14_580 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="676-682"];
m14_583 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="679-679"];
m14_584 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="679-679"];
m14_585 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddRangeToSet(null, new List<string>())", span="679-679"];
m14_586 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="679-679"];
m14_592 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="688-694"];
m14_593 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(''my-set'', null)))", span="690-691"];
m14_597 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', null))", span="691-691"];
m14_594 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''items'', exception.ParamName)", span="693-693"];
m14_596 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="691-691"];
m14_595 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="688-694"];
m14_598 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="691-691"];
m14_599 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="691-691"];
m14_600 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddRangeToSet(''my-set'', null)", span="691-691"];
m14_601 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="691-691"];
m14_605 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="700-708"];
m14_606 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var items = new List<string> { ''1'', ''2'', ''3'' }", span="702-702"];
m14_607 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.AddRangeToSet(''my-set'', items))", span="704-704"];
m14_608 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''')", span="706-706"];
m14_612 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.AddRangeToSet(''my-set'', items)", span="704-704"];
m14_609 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(items, records)", span="707-707"];
m14_611 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="704-704"];
m14_610 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="700-708"];
m14_613 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="704-704"];
m14_617 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="714-718"];
m14_618 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveSet(null)))", span="716-717"];
m14_621 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.RemoveSet(null))", span="717-717"];
m14_619 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="714-718"];
m14_620 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="717-717"];
m14_622 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="717-717"];
m14_623 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="717-717"];
m14_624 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveSet(null)", span="717-717"];
m14_625 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="717-717"];
m14_632 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new []\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="729-733"];
m14_631 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="727-739"];
m14_633 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.RemoveSet(''set-1''))", span="735-735"];
m14_634 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="737-737"];
m14_638 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="735-735"];
m14_635 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''set-2'', record.Key)", span="738-738"];
m14_636 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="727-739"];
m14_639 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.RemoveSet(''set-1'')", span="735-735"];
m14_640 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="735-735"];
m14_644 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="745-751"];
m14_645 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))))", span="747-748"];
m14_649 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5)))", span="748-748"];
m14_646 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="750-750"];
m14_648 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="748-748"];
m14_647 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="745-751"];
m14_650 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="748-748"];
m14_651 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="748-748"];
m14_652 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireHash(null, TimeSpan.FromMinutes(5))", span="748-748"];
m14_653 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="748-748"];
m14_661 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                })", span="764-768"];
m14_660 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="761-778"];
m14_662 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)))", span="771-771"];
m14_663 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="774-774"];
m14_668 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="771-771"];
m14_664 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1''])", span="775-775"];
m14_671 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="774-774"];
m14_674 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="774-774"];
m14_665 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61))", span="776-776"];
m14_666 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(records[''hash-2''])", span="777-777"];
m14_667 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="761-778"];
m14_669 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60))", span="771-771"];
m14_670 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="771-771"];
m14_672 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Key", span="774-774"];
m14_673 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="774-774"];
m14_675 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(DateTime?)x.ExpireAt", span="774-774"];
m14_676 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="774-774"];
m14_680 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="784-790"];
m14_681 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45))))", span="786-787"];
m14_685 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireSet(null, TimeSpan.FromSeconds(45)))", span="787-787"];
m14_682 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="789-789"];
m14_684 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="787-787"];
m14_683 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="784-790"];
m14_686 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="787-787"];
m14_687 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="787-787"];
m14_688 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireSet(null, TimeSpan.FromSeconds(45))", span="787-787"];
m14_689 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="787-787"];
m14_697 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'' },\r\n                    new { key = ''set-2'', value = ''1'' }\r\n                })", span="803-807"];
m14_696 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="800-817"];
m14_698 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60)))", span="810-810"];
m14_699 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="813-813"];
m14_704 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="810-810"];
m14_700 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''set-1''])", span="814-814"];
m14_707 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="813-813"];
m14_710 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="813-813"];
m14_701 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(records[''set-1''] < DateTime.UtcNow.AddMinutes(61))", span="815-815"];
m14_702 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(records[''set-2''])", span="816-816"];
m14_703 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="800-817"];
m14_705 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireSet(''set-1'', TimeSpan.FromMinutes(60))", span="810-810"];
m14_706 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="810-810"];
m14_708 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Key", span="813-813"];
m14_709 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="813-813"];
m14_711 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(DateTime?)x.ExpireAt", span="813-813"];
m14_712 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="813-813"];
m14_716 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="823-829"];
m14_717 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))))", span="825-826"];
m14_721 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45)))", span="826-826"];
m14_718 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="828-828"];
m14_720 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="826-826"];
m14_719 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="823-829"];
m14_722 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="826-826"];
m14_723 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="826-826"];
m14_724 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireList(null, TimeSpan.FromSeconds(45))", span="826-826"];
m14_725 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="826-826"];
m14_732 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                })", span="841-845"];
m14_731 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="838-855"];
m14_733 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)))", span="848-848"];
m14_734 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="851-851"];
m14_739 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="848-848"];
m14_735 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1''])", span="852-852"];
m14_742 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="851-851"];
m14_745 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="851-851"];
m14_736 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61))", span="853-853"];
m14_737 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(records[''list-2''])", span="854-854"];
m14_738 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="838-855"];
m14_740 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.ExpireList(''list-1'', TimeSpan.FromMinutes(60))", span="848-848"];
m14_741 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="848-848"];
m14_743 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Key", span="851-851"];
m14_744 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="851-851"];
m14_746 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(DateTime?)x.ExpireAt", span="851-851"];
m14_747 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="851-851"];
m14_751 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="861-867"];
m14_752 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)))", span="863-864"];
m14_756 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistHash(null))", span="864-864"];
m14_753 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="866-866"];
m14_755 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="864-864"];
m14_754 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="861-867"];
m14_757 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="864-864"];
m14_758 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="864-864"];
m14_759 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistHash(null)", span="864-864"];
m14_760 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="864-864"];
m14_767 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="880-884"];
m14_766 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="877-893"];
m14_768 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistHash(''hash-1''))", span="887-887"];
m14_769 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="890-890"];
m14_773 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="887-887"];
m14_770 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(records[''hash-1''])", span="891-891"];
m14_776 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="890-890"];
m14_779 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="890-890"];
m14_771 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(records[''hash-2''])", span="892-892"];
m14_772 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="877-893"];
m14_774 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistHash(''hash-1'')", span="887-887"];
m14_775 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="887-887"];
m14_777 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Key", span="890-890"];
m14_778 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="890-890"];
m14_780 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(DateTime?)x.ExpireAt", span="890-890"];
m14_781 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="890-890"];
m14_785 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="899-905"];
m14_786 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistSet(null)))", span="901-902"];
m14_790 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistSet(null))", span="902-902"];
m14_787 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="904-904"];
m14_789 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="902-902"];
m14_788 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="899-905"];
m14_791 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="902-902"];
m14_792 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="902-902"];
m14_793 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistSet(null)", span="902-902"];
m14_794 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="902-902"];
m14_801 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="918-922"];
m14_800 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="915-931"];
m14_802 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistSet(''set-1''))", span="925-925"];
m14_803 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="928-928"];
m14_807 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="925-925"];
m14_804 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(records[''set-1''])", span="929-929"];
m14_810 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="928-928"];
m14_813 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="928-928"];
m14_805 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(records[''set-2''])", span="930-930"];
m14_806 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="915-931"];
m14_808 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistSet(''set-1'')", span="925-925"];
m14_809 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="925-925"];
m14_811 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Key", span="928-928"];
m14_812 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="928-928"];
m14_814 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(DateTime?)x.ExpireAt", span="928-928"];
m14_815 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="928-928"];
m14_819 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="937-943"];
m14_820 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistList(null)))", span="939-940"];
m14_824 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistList(null))", span="940-940"];
m14_821 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="942-942"];
m14_823 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="940-940"];
m14_822 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="937-943"];
m14_825 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="940-940"];
m14_826 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="940-940"];
m14_827 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistList(null)", span="940-940"];
m14_828 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="940-940"];
m14_835 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''list-2'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                })", span="956-960"];
m14_834 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="953-969"];
m14_836 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Commit(sql, x => x.PersistList(''list-1''))", span="963-963"];
m14_837 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt)", span="966-966"];
m14_841 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="963-963"];
m14_838 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Null(records[''list-1''])", span="967-967"];
m14_844 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry lambda expression", span="966-966"];
m14_839 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.NotNull(records[''list-2''])", span="968-968"];
m14_840 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="953-969"];
m14_842 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="x.PersistList(''list-1'')", span="963-963"];
m14_843 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="963-963"];
m14_845 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(string)x.Key", span="966-966"];
m14_846 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="966-966"];
m14_848 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="(DateTime?)x.ExpireAt", span="966-966"];
m14_849 [cluster="lambda expression", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit lambda expression", span="966-966"];
m14_588 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252"];
m14_381 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="437-437"];
m14_382 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="439-450"];
m14_383 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="437-437"];
m14_368 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="423-423"];
m14_369 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="425-433"];
m14_370 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="423-423"];
m14_602 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="698-698"];
m14_603 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var items = new List<string> { ''1'', ''2'', ''3'' };\r\n\r\n                Commit(sql, x => x.AddRangeToSet(''my-set'', items));\r\n\r\n                var records = sql.Query<string>(@''select [Value] from HangFire.[Set] where [Key] = N'my-set''');\r\n                Assert.Equal(items, records);\r\n            })", span="700-708"];
m14_604 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_AddsAllItems_ToAGivenSet()", span="698-698"];
m14_406 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201"];
m14_8 [cluster="Unk.Returns", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Returns", span=""];
m14_796 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="909-909"];
m14_797 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="911-913"];
m14_798 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''set-2'', value = ''1'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistSet(''set-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[Set]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''set-1'']);\r\n                Assert.NotNull(records[''set-2'']);\r\n            })", span="915-931"];
m14_799 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistSet_ClearsExpirationTime_OnAGivenHash()", span="909-909"];
m14_356 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="406-406"];
m14_357 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="408-419"];
m14_358 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="406-406"];
m14_713 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="821-821"];
m14_714 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireList(null, TimeSpan.FromSeconds(45))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="823-829"];
m14_715 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_ThrowsAnException_WhenKeyIsNull()", span="821-821"];
m14_103 [cluster="Mock<IState>.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m14_51 [cluster="System.DateTime.AddMinutes(double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m14_224 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="239-239"];
m14_225 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="241-250"];
m14_226 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="239-239"];
m14_859 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52"];
m14_36 [cluster="Unk.UseConnection", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.UseConnection", span=""];
m14_19 [cluster="Unk.Equal", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Equal", span=""];
m14_237 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149"];
m14_118 [cluster="Unk.SetJobState", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.SetJobState", span=""];
m14_488 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="581-581"];
m14_489 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="583-594"];
m14_490 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="581-581"];
m14_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m14_24 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="36-36"];
m14_25 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null, null))", span="38-39"];
m14_26 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''queueProviders'', exception.ParamName)", span="41-41"];
m14_27 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="36-36"];
m14_59 [cluster="Unk.ExpireJob", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.ExpireJob", span=""];
m14_331 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="372-372"];
m14_332 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="374-385"];
m14_333 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="372-372"];
m14_15 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="27-27"];
m14_16 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, null, _queueProviders))", span="29-30"];
m14_17 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="32-32"];
m14_18 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="27-27"];
m14_305 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="340-340"];
m14_306 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="342-351"];
m14_307 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="340-340"];
m14_46 [cluster="Unk.Query", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Query", span=""];
m14_558 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242"];
m14_238 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="254-254"];
m14_239 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="256-270"];
m14_240 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="254-254"];
m14_500 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="598-598"];
m14_501 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="600-606"];
m14_502 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="598-598"];
m14_164 [cluster="Unk.Add", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Add", span=""];
m14_727 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="833-833"];
m14_728 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[List] ([Key]) values (@key)''", span="835-836"];
m14_729 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''1'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireList(''list-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.[List]'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''list-1'']);\r\n                Assert.True(records[''list-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''list-2'']);\r\n            })", span="838-855"];
m14_730 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireList_SetsExpirationTime_OnAList_WithGivenKey()", span="833-833"];
m14_73 [cluster="Unk.NotNull", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.NotNull", span=""];
m14_762 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="871-871"];
m14_763 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="873-875"];
m14_764 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = DateTime.UtcNow.AddDays(1) }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.PersistHash(''hash-1''));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.Null(records[''hash-1'']);\r\n                Assert.NotNull(records[''hash-2'']);\r\n            })", span="877-893"];
m14_765 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ClearsExpirationTime_OnAGivenHash()", span="871-871"];
m14_49 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="980-980"];
m14_855 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection, null, _queueProviders)", span="984-984"];
m14_856 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="action(transaction)", span="986-986"];
m14_857 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="transaction.Commit()", span="987-987"];
m14_858 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>)", span="980-980"];
m14_180 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="187-187"];
m14_181 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="189-198"];
m14_182 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="187-187"];
m14_6 [cluster="Unk.Setup", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Setup", span=""];
m14_54 [cluster="Unk.Null", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Null", span=""];
m14_9 [cluster="PersistentJobQueueProviderCollection.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m14_850 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="972-972"];
m14_851 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="var connection = ConnectionUtils.CreateConnection()", span="974-974"];
m14_852 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="action(connection)", span="976-976"];
m14_853 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="972-972"];
m14_656 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="755-755"];
m14_657 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="757-759"];
m14_658 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'' },\r\n                    new { key = ''hash-2'', field = ''field'' }\r\n                });\r\n\r\n                // Act\r\n                Commit(sql, x => x.ExpireHash(''hash-1'', TimeSpan.FromMinutes(60)));\r\n\r\n                // Assert\r\n                var records = sql.Query(''select * from HangFire.Hash'').ToDictionary(x => (string)x.Key, x => (DateTime?)x.ExpireAt);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(59) < records[''hash-1'']);\r\n                Assert.True(records[''hash-1''] < DateTime.UtcNow.AddMinutes(61));\r\n                Assert.Null(records[''hash-2'']);\r\n            })", span="761-778"];
m14_659 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_SetsExpirationTimeOnAHash_WithGivenKey()", span="755-755"];
m14_464 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="547-547"];
m14_465 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="549-560"];
m14_466 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="547-547"];
m14_207 [cluster="System.DateTime.AddHours(double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m14_212 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="222-222"];
m14_213 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="224-235"];
m14_214 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="222-222"];
m14_748 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="859-859"];
m14_749 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.PersistHash(null)));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="861-867"];
m14_750 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistHash_ThrowsAnException_WhenKeyIsNull()", span="859-859"];
m14_14 [cluster="Unk.GetJobQueue", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.GetJobQueue", span=""];
m14_450 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="528-528"];
m14_451 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="530-543"];
m14_452 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="528-528"];
m14_431 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="506-506"];
m14_432 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="508-524"];
m14_433 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="506-506"];
m14_165 [cluster="Unk.Verify", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Verify", span=""];
m14_255 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="274-274"];
m14_256 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="276-287"];
m14_257 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="274-274"];
m14_449 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209"];
m14_654 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m14_536 [cluster="Unk.ToDictionary", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.ToDictionary", span=""];
m14_281 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="306-306"];
m14_282 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="308-319"];
m14_283 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="306-306"];
m14_23 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39"];
m14_78 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="91-91"];
m14_79 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="93-96"];
m14_80 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="98-125"];
m14_81 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="91-91"];
m14_60 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="68-68"];
m14_61 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m14_62 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="75-87"];
m14_63 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="68-68"];
m14_254 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156"];
m14_626 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265"];
m14_13 [cluster="Unk.>", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.>", span=""];
m14_690 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m14_172 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127"];
m14_58 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m14_176 [cluster="Unk.Enqueue", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Enqueue", span=""];
m14_527 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="622-622"];
m14_528 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="624-639"];
m14_529 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="622-622"];
m14_104 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_574 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="674-674"];
m14_575 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.AddRangeToSet(null, new List<string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="676-682"];
m14_576 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddRangeToSet_ThrowsAnException_WhenKeyIsNull()", span="674-674"];
m14_114 [cluster="Unk.SerializeData", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.SerializeData", span=""];
m14_344 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="389-389"];
m14_345 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="391-402"];
m14_346 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="389-389"];
m14_641 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="743-743"];
m14_642 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.ExpireHash(null, TimeSpan.FromMinutes(5))));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="745-751"];
m14_643 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireHash_ThrowsAnException_WhenKeyIsNull()", span="743-743"];
m14_47 [cluster="Unk.Single", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.Single", span=""];
m14_53 [cluster="Unk.True", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.True", span=""];
m14_77 [cluster="Unk.PersistJob", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.PersistJob", span=""];
m14_32 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="45-45"];
m14_33 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m14_34 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m14_35 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="45-45"];
m14_380 [cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193"];
m14_546 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="643-643"];
m14_547 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="UseConnection(sql =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.RemoveHash(null)));\r\n            })", span="645-649"];
m14_548 [cluster="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveHash_ThrowsAnException_WhenKeyIsNull()", span="643-643"];
m14_860 [file="SqlServerWriteOnlyTransactionFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span=""];
m14_861 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_862 [file="SqlServerWriteOnlyTransactionFacts.cs", label=jobId, span=""];
m14_863 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_864 [file="SqlServerWriteOnlyTransactionFacts.cs", label=jobId, span=""];
m14_865 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_866 [file="SqlServerWriteOnlyTransactionFacts.cs", label=jobId, span=""];
m14_867 [file="SqlServerWriteOnlyTransactionFacts.cs", label=state, span=""];
m14_868 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_869 [file="SqlServerWriteOnlyTransactionFacts.cs", label=jobId, span=""];
m14_870 [file="SqlServerWriteOnlyTransactionFacts.cs", label=state, span=""];
m14_871 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_872 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_873 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_874 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_875 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_876 [file="SqlServerWriteOnlyTransactionFacts.cs", label=items, span=""];
m14_877 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_878 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_879 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_880 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_881 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_882 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_883 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_884 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_885 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_886 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_887 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_888 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
m14_889 [file="SqlServerWriteOnlyTransactionFacts.cs", label=SqlConnection, span=""];
m14_890 [file="SqlServerWriteOnlyTransactionFacts.cs", label=arrangeSql, span=""];
n70 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n28  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n70 -> n48  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.ExpirationManager", style=dashed];
n71 -> n21  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n72 -> n21  [color=darkseagreen4, key=1, label=table, style=dashed];
n73 -> n42  [color=darkseagreen4, key=1, label="System.Action<DbConnection>", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n2 -> n5  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n0  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n8 -> n21  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n8 -> n13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=0, style=solid];
n9 -> n11  [color=darkseagreen4, key=1, label=table, style=dashed];
n9 -> n21  [color=darkseagreen4, key=1, label=table, style=dashed];
n9 -> n12  [color=darkseagreen4, key=1, label=table, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n16  [key=2, style=dotted];
n11 -> n19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n24  [key=2, style=dotted];
n21 -> n25  [key=2, style=dotted];
n21 -> n26  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n18  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n15  [key=2, style=dotted];
n12 -> n9  [key=0, style=solid];
n12 -> n17  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
n14 -> n8  [color=blue, key=0, style=bold];
n20 -> n21  [key=0, style=solid];
n22 -> n20  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n24 -> n50  [key=0, style=solid];
n26 -> n52  [key=0, style=solid];
n26 -> n53  [color=darkseagreen4, key=1, label=string, style=dashed];
n26 -> n54  [color=darkseagreen4, key=1, label="params SqlParameter[]", style=dashed];
n26 -> n56  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n23 -> n19  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=2, style=dotted];
n28 -> n31  [key=2, style=dotted];
n29 -> n27  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n32 -> n42  [color=darkseagreen4, key=1, label="System.Action<DbConnection>", style=dashed];
n33 -> n34  [key=0, style=solid];
n33 -> n37  [key=0, style=solid];
n33 -> n38  [key=2, style=dotted];
n33 -> n46  [key=2, style=dotted];
n33 -> n40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n45  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n37 -> n32  [color=blue, key=0, style=bold];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
n40 -> n33  [color=darkseagreen4, key=1, label=DbConnection, style=dashed];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n39  [key=2, style=dotted];
n36 -> n47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n47 -> n48  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=2, style=dotted];
n43 -> n40  [color=blue, key=0, style=bold];
n48 -> n49  [key=0, style=solid];
n49 -> n47  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n51 -> n24  [color=blue, key=0, style=bold];
n52 -> n53  [key=0, style=solid];
n52 -> n62  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n53  [color=darkseagreen4, key=1, label=command, style=dashed];
n53 -> n55  [color=darkseagreen4, key=1, label=command, style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n63  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n64  [key=2, style=dotted];
n56 -> n56  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n56 -> n66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n56 -> n59  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n55  [color=darkseagreen4, key=1, label=command, style=dashed];
n55 -> n57  [color=darkseagreen4, key=1, label=command, style=dashed];
n57 -> n61  [key=0, style=solid];
n57 -> n65  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n59  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n58 -> n59  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n61 -> n26  [color=blue, key=0, style=bold];
n67 -> n68  [key=0, style=solid];
n67 -> n69  [key=2, style=dotted];
n68 -> n66  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_16  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_12  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_14  [key=2, style=dotted];
m0_10 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_11 -> m0_5  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_13 -> m0_20  [color=green, key=0, style=solid];
m0_20 -> m0_21  [color=green, key=0, style=solid];
m0_20 -> m0_26  [color=green, key=2, style=dotted];
m0_20 -> m0_27  [color=green, key=2, style=dotted];
m0_20 -> m0_22  [color=green, key=1, label=recreateDatabaseSql, style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_28  [key=2, style=dotted];
m0_23 -> m0_31  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_13  [color=blue, key=0, style=bold];
m0_33 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m0_33 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m0_33 -> m0_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=2, style=dotted];
m1_13 -> m1_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_13 -> m1_22  [key=2, style=dotted];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_14 -> m1_23  [key=2, style=dotted];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_20 -> m1_27  [color=green, key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_27 -> m1_28  [color=green, key=0, style=solid];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m1_27 -> m1_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m1_27 -> m1_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m1_28 -> m1_20  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_46 -> m1_50  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_51  [key=2, style=dotted];
m1_47 -> m1_49  [key=0, style=solid];
m1_49 -> m1_45  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m1_29 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m1_29 -> m1_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m1_29 -> m1_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.CountersAggregator", style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_38  [key=2, style=dotted];
m1_36 -> m1_27  [color=blue, key=0, style=bold];
m1_7 -> m1_13  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_7 -> m1_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_6  [color=blue, key=0, style=bold];
m1_11 -> m1_20  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_21  [key=2, style=dotted];
m1_11 -> m1_15  [color=darkseagreen4, key=1, label=removedCount, style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_19  [key=2, style=dotted];
m1_10 -> m1_8  [color=blue, key=0, style=bold];
m1_15 -> m1_9  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_65  [key=0, style=solid];
m1_15 -> m1_13  [color=darkorchid, key=3, label="Parameter variable string body", style=bold];
m1_15 -> m1_15  [color=darkorchid, key=3, label="method methodReturn string TransformText", style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=2, style=dotted];
m1_16 -> m1_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_22  [key=2, style=dotted];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_16 -> m1_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_16 -> m1_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_16 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_16 -> m1_24  [color=red, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_16 -> m1_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_18  [key=2, style=dotted];
m1_17 -> m1_7  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [color=red, key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_2 -> n6  [key=2, style=dotted];
m1_3 -> m1_0  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_60 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_50  [key=2, style=dotted];
m1_73 -> m1_75  [key=2, style=dotted];
m1_74 -> m1_60  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=2, style=dotted];
m1_56 -> m1_59  [key=2, style=dotted];
m1_56 -> m1_60  [key=2, style=dotted];
m1_56 -> m1_45  [key=2, style=dotted];
m1_54 -> m1_57  [key=0, style=solid];
m1_57 -> m1_52  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_43  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_44  [key=2, style=dotted];
m1_42 -> m1_39  [color=blue, key=0, style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=2, style=dotted];
m1_63 -> m1_61  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_24 -> m1_25  [color=red, key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_16  [color=blue, key=0, style=bold];
m1_65 -> m1_66  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_6  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_70  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_16  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_71  [key=0, style=solid];
m1_69 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_15  [key=2, style=dotted];
m1_71 -> m1_15  [color=blue, key=0, style=bold];
m1_76 -> m1_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_24  [color=red, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m1_76 -> m1_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
m2_13 -> m2_2  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m2_13 -> m2_23  [color=green, key=0, style=solid];
m2_23 -> m2_24  [color=green, key=0, style=solid];
m2_23 -> m2_26  [color=green, key=2, style=dotted];
m2_24 -> m2_25  [color=green, key=0, style=solid];
m2_24 -> m2_27  [color=green, key=2, style=dotted];
m2_25 -> m2_13  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_1  [color=green, key=3, label="Local variable string createSql", style=bold];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=1, label=createSql, style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_10  [color=green, key=2, style=dotted];
m2_2 -> m2_4  [color=green, key=1, label=connection, style=dashed];
m2_2 -> m2_8  [color=green, key=1, label=connection, style=dashed];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_11  [color=green, key=2, style=dotted];
m2_3 -> m2_12  [color=green, key=2, style=dotted];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_13  [color=green, key=2, style=dotted];
m2_4 -> m2_7  [color=green, key=1, label=aggregator, style=dashed];
m2_8 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_17  [color=green, key=2, style=dotted];
m2_8 -> m2_18  [color=green, key=2, style=dotted];
m2_8 -> m2_19  [color=green, key=2, style=dotted];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_5 -> m2_14  [color=green, key=2, style=dotted];
m2_5 -> m2_7  [color=green, key=1, label=cts, style=dashed];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_16  [color=green, key=2, style=dotted];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_15  [color=green, key=2, style=dotted];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_10 -> m2_20  [color=green, key=0, style=solid];
m2_20 -> m2_21  [color=green, key=0, style=solid];
m2_20 -> m2_22  [color=green, key=2, style=dotted];
m2_21 -> m2_10  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m3_0 -> m3_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m3_0 -> m3_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=0, style=solid];
m3_1 -> m3_7  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_2 -> m3_11  [color=green, key=0, style=solid];
m3_2 -> n6  [color=green, key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=0, style=solid];
m3_2 -> m3_9  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_3 -> m3_7  [key=0, style=solid];
m3_3 -> m3_10  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_5 -> m3_11  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_13  [key=2, style=dotted];
m3_7 -> m3_14  [key=2, style=dotted];
m3_7 -> m3_15  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_0  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_4 -> m3_11  [key=0, style=solid];
m3_4 -> n6  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=0, style=solid];
m3_4 -> m3_9  [key=2, style=dotted];
m3_6 -> m3_11  [key=0, style=solid];
m3_6 -> n6  [key=2, style=dotted];
m3_6 -> m3_8  [key=0, style=solid];
m3_6 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_0  [color=blue, key=0, style=bold];
m3_15 -> m3_17  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_23 -> m3_24  [color=red, key=0, style=solid];
m3_23 -> m3_13  [color=red, key=2, style=dotted];
m3_23 -> m3_14  [color=red, key=2, style=dotted];
m3_23 -> m3_15  [color=red, key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_16 -> m3_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_16 -> m3_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_16 -> m3_23  [key=0, style=solid];
m3_16 -> m3_25  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_23  [color=red, key=1, label=time, style=dashed];
m3_17 -> m3_21  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=0, style=solid];
m3_18 -> m3_9  [key=2, style=dotted];
m3_18 -> m3_23  [color=red, key=3, label="Field variable string _appPath", style=bold];
m3_18 -> m3_17  [key=0, style=solid];
m3_18 -> m3_26  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=0, style=solid];
m3_20 -> m3_9  [key=2, style=dotted];
m3_20 -> m3_23  [key=0, style=solid];
m3_20 -> m3_27  [key=2, style=dotted];
m3_22 -> m3_24  [key=0, style=solid];
m3_22 -> m3_12  [key=2, style=dotted];
m3_22 -> m3_13  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_29  [key=2, style=dotted];
m3_19 -> m3_23  [color=red, key=0, style=solid];
m3_19 -> m3_10  [key=2, style=dotted];
m3_19 -> m3_21  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_19 -> m3_19  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_21 -> m3_23  [color=red, key=0, style=solid];
m3_21 -> m3_11  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_28  [key=2, style=dotted];
m3_24 -> m3_16  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_21  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_13 -> m3_19  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_24  [key=2, style=dotted];
m3_14 -> m3_21  [color=darkseagreen4, key=1, label=dispatcher, style=dashed];
m3_14 -> m3_22  [color=darkseagreen4, key=1, label=dispatcher, style=dashed];
m3_28 -> m3_25  [color=blue, key=0, style=bold];
m3_30 -> m3_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_30 -> m3_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_30  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_13  [key=2, style=dotted];
m3_52 -> m3_37  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_38  [key=2, style=dotted];
m3_54 -> m3_51  [color=blue, key=0, style=bold];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_13  [key=2, style=dotted];
m3_56 -> m3_37  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_50  [key=2, style=dotted];
m3_58 -> m3_55  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_13  [key=2, style=dotted];
m3_47 -> m3_37  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=2, style=dotted];
m3_49 -> m3_46  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_13  [key=2, style=dotted];
m3_32 -> m3_37  [key=2, style=dotted];
m3_32 -> m3_34  [color=darkseagreen4, key=1, label=checkedTimestamp, style=dashed];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_38  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_39  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_40  [key=2, style=dotted];
m3_35 -> m3_41  [key=2, style=dotted];
m3_36 -> m3_31  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_13  [key=2, style=dotted];
m3_43 -> m3_37  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_38  [key=2, style=dotted];
m3_45 -> m3_42  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_5 -> m4_1  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m4_5 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_7 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_7  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m5_12 -> m5_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_19  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_20  [key=2, style=dotted];
m5_16 -> m5_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_14 -> m5_17  [key=0, style=solid];
m5_14 -> n6  [key=2, style=dotted];
m5_17 -> m5_12  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_3 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_7  [key=2, style=dotted];
m5_9 -> m5_3  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=2, style=dotted];
m5_23 -> m5_21  [color=blue, key=0, style=bold];
m5_25 -> m5_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_26 -> m5_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m5_27 -> m5_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_53 -> m6_54  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid];
m6_55 -> m6_53  [color=blue, key=0, style=bold];
m6_46 -> m6_47  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_33  [key=2, style=dotted];
m6_48 -> m6_46  [color=blue, key=0, style=bold];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_30  [color=darkorchid, key=3, label="method methodReturn string GetForegroundStateColor", style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_40  [key=0, style=solid];
m6_38 -> m6_33  [key=2, style=dotted];
m6_40 -> m6_41  [key=0, style=solid];
m6_39 -> m6_41  [key=0, style=solid];
m6_41 -> m6_37  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_24  [key=2, style=dotted];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_23  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_23  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_23  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_23  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_23  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_23  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_23  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_24  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_24  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_24  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_24  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_24  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_24  [key=2, style=dotted];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_24  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_24  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_24  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_24  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_24  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_24  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_24  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_24  [key=2, style=dotted];
m6_22 -> m6_0  [color=blue, key=0, style=bold];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_123 -> m6_127  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m6_123 -> m6_128  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_123 -> m6_129  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_123 -> m6_130  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m6_123 -> m6_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_123 -> m6_132  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_77  [key=2, style=dotted];
m6_124 -> m6_127  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_124 -> m6_130  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_124 -> m6_132  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_124 -> m6_133  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_124 -> m6_134  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_128  [key=0, style=solid];
m6_126 -> m6_33  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_136  [key=2, style=dotted];
m6_127 -> m6_82  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_131  [key=0, style=solid];
m6_128 -> m6_33  [key=2, style=dotted];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_137  [key=2, style=dotted];
m6_129 -> m6_138  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_139  [key=2, style=dotted];
m6_130 -> m6_82  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_133  [key=0, style=solid];
m6_131 -> m6_33  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_140  [key=2, style=dotted];
m6_132 -> m6_82  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_78  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_78  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_85  [key=2, style=dotted];
m6_134 -> m6_86  [key=2, style=dotted];
m6_135 -> m6_123  [color=blue, key=0, style=bold];
m6_116 -> m6_117  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_120  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_85  [key=2, style=dotted];
m6_118 -> m6_121  [key=2, style=dotted];
m6_118 -> m6_122  [key=2, style=dotted];
m6_119 -> m6_116  [color=blue, key=0, style=bold];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_56 -> m6_61  [color=red, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_56 -> m6_62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m6_56 -> m6_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_56 -> m6_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_56 -> m6_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.HtmlHelper", style=dashed];
m6_56 -> m6_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_56 -> m6_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_56 -> m6_54  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.NonEscapedString SucceededRenderer", style=bold];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_77  [key=2, style=dotted];
m6_57 -> m6_62  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_57 -> m6_66  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_57 -> m6_70  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_57 -> m6_72  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_57 -> m6_75  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_60 -> m6_61  [color=red, key=0, style=solid];
m6_60 -> m6_64  [key=0, style=solid];
m6_60 -> m6_33  [key=2, style=dotted];
m6_61 -> m6_62  [color=red, key=0, style=solid];
m6_61 -> m6_79  [color=red, key=2, style=dotted];
m6_61 -> m6_80  [color=red, key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_81  [key=2, style=dotted];
m6_62 -> m6_82  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_68  [key=0, style=solid];
m6_64 -> m6_33  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_79  [key=2, style=dotted];
m6_65 -> m6_80  [key=2, style=dotted];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_81  [key=2, style=dotted];
m6_66 -> m6_82  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_72  [key=0, style=solid];
m6_68 -> m6_33  [key=2, style=dotted];
m6_68 -> m6_83  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_78  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_84  [key=2, style=dotted];
m6_70 -> m6_82  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_78  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_85  [key=2, style=dotted];
m6_75 -> m6_86  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m6_59 -> m6_59  [color=darkorchid, key=3, label="Local variable bool itemsAdded", style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_75  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_73  [color=darkseagreen4, key=1, label=itemsAdded, style=dashed];
m6_74 -> m6_76  [key=0, style=solid];
m6_76 -> m6_56  [color=blue, key=0, style=bold];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_24  [key=2, style=dotted];
m6_36 -> m6_34  [color=blue, key=0, style=bold];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_94 -> m6_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_94 -> m6_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_94 -> m6_101  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_94 -> m6_105  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_94 -> m6_107  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_77  [key=2, style=dotted];
m6_95 -> m6_103  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_95 -> m6_104  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_95 -> m6_106  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_95 -> m6_107  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_95 -> m6_108  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_95 -> m6_109  [color=darkseagreen4, key=1, label=builder, style=dashed];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_100  [key=0, style=solid];
m6_98 -> m6_33  [key=2, style=dotted];
m6_99 -> m6_102  [key=0, style=solid];
m6_99 -> m6_104  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_102  [key=0, style=solid];
m6_100 -> m6_33  [key=2, style=dotted];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_104  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_108  [key=0, style=solid];
m6_105 -> m6_33  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_82  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_78  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_78  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_111  [key=2, style=dotted];
m6_104 -> m6_82  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_78  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_78  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_85  [key=2, style=dotted];
m6_109 -> m6_86  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_102  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m6_97 -> m6_104  [color=darkseagreen4, key=1, label=serverId, style=dashed];
m6_97 -> m6_54  [color=darkorchid, key=3, label="Local variable string serverId", style=bold];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_105  [key=0, style=solid];
m6_110 -> m6_94  [color=blue, key=0, style=bold];
m6_49 -> m6_50  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=2, style=dotted];
m6_51 -> m6_49  [color=blue, key=0, style=bold];
m6_112 -> m6_113  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_85  [key=2, style=dotted];
m6_113 -> m6_115  [key=2, style=dotted];
m6_114 -> m6_112  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_28 -> m6_30  [color=darkorchid, key=3, label="method methodReturn string GetBackgroundStateColor", style=bold];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_31  [key=0, style=solid];
m6_29 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_30 -> m6_32  [key=0, style=solid];
m6_32 -> m6_28  [color=blue, key=0, style=bold];
m6_23 -> m6_42  [key=0, style=solid];
m6_23 -> m6_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_23 -> m6_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_23 -> m6_56  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_23 -> m6_87  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_23 -> m6_94  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_23 -> m6_112  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_23 -> m6_116  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_23 -> m6_53  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_23 -> m6_123  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.Dashboard.HtmlHelper, System.Collections.Generic.IDictionary<string, string>, Hangfire.Dashboard.NonEscapedString> renderer", style=bold];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_44  [key=0, style=solid];
m6_42 -> m6_33  [key=2, style=dotted];
m6_43 -> m6_45  [key=0, style=solid];
m6_43 -> m6_24  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_45 -> m6_23  [color=blue, key=0, style=bold];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_89  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_91  [key=2, style=dotted];
m6_88 -> m6_92  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_85  [key=2, style=dotted];
m6_89 -> m6_93  [key=2, style=dotted];
m6_90 -> m6_87  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_45  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_46  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_47  [key=2, style=dotted];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=queues, style=dashed];
m7_3 -> m7_8  [color=darkseagreen4, key=1, label=queues, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_45  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_43  [key=0, style=solid];
m7_8 -> m7_10  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_8 -> m7_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_8 -> m7_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_8 -> m7_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_8 -> m7_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_8 -> m7_21  [color=darkseagreen4, key=1, label=queue, style=dashed];
m7_8 -> m7_8  [color=darkorchid, key=3, label="Local variable bool isJson", style=bold];
m7_6 -> m7_44  [key=0, style=solid];
m7_6 -> m7_45  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_45  [key=2, style=dotted];
m7_7 -> m7_7  [color=darkorchid, key=3, label="Local variable int splitStringMinLength", style=bold];
m7_7 -> m7_22  [color=darkorchid, key=3, label="Local variable string renderedArgument", style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_45  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_48  [key=2, style=dotted];
m7_10 -> m7_49  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_49  [key=2, style=dotted];
m7_12 -> m7_38  [color=darkorchid, key=3, label="Local variable Hangfire.Dashboard.JobMethodCallRenderer.ArgumentRenderer argumentRenderer", style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_49  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_49  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_41  [key=0, style=solid];
m7_21 -> m7_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_45  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_45  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_45  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_45  [key=2, style=dotted];
m7_19 -> m7_42  [key=0, style=solid];
m7_19 -> m7_45  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_45  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_45  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_45  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_49  [key=2, style=dotted];
m7_23 -> m7_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_23 -> m7_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_45  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_48  [key=2, style=dotted];
m7_25 -> m7_49  [key=2, style=dotted];
m7_25 -> m7_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_25 -> m7_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_45  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_50  [key=2, style=dotted];
m7_27 -> m7_51  [key=2, style=dotted];
m7_27 -> m7_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_27 -> m7_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_45  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=0, style=solid];
m7_29 -> m7_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_29 -> m7_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_45  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_45  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_52  [key=2, style=dotted];
m7_32 -> m7_49  [key=2, style=dotted];
m7_32 -> m7_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_32 -> m7_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_45  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_40  [key=0, style=solid];
m7_34 -> m7_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_34 -> m7_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_45  [key=2, style=dotted];
m7_40 -> m7_21  [key=0, style=solid];
m7_40 -> m7_45  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_53  [key=2, style=dotted];
m7_36 -> m7_49  [key=2, style=dotted];
m7_36 -> m7_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_45  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_49  [key=2, style=dotted];
m7_38 -> m7_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_45  [key=2, style=dotted];
m7_42 -> m7_8  [key=0, style=solid];
m7_42 -> m7_45  [key=2, style=dotted];
m7_44 -> m7_0  [color=blue, key=0, style=bold];
m7_54 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m7_54 -> m7_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_0 -> m8_9  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m8_0 -> m8_10  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_33  [key=2, style=dotted];
m8_1 -> m8_3  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_33  [key=2, style=dotted];
m8_2 -> m8_11  [key=0, style=solid];
m8_2 -> n6  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_34  [key=2, style=dotted];
m8_3 -> m8_5  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_33  [key=2, style=dotted];
m8_4 -> m8_11  [key=0, style=solid];
m8_4 -> n6  [key=2, style=dotted];
m8_5 -> m8_6  [color=red, key=0, style=solid];
m8_5 -> m8_35  [key=2, style=dotted];
m8_5 -> m8_34  [key=2, style=dotted];
m8_5 -> m8_7  [key=0, style=solid];
m8_6 -> m8_7  [color=red, key=0, style=solid];
m8_6 -> m8_33  [color=red, key=2, style=dotted];
m8_6 -> m8_11  [key=0, style=solid];
m8_6 -> n6  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_36  [key=2, style=dotted];
m8_7 -> m8_34  [key=2, style=dotted];
m8_7 -> m8_13  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_33  [key=2, style=dotted];
m8_9 -> m8_10  [color=red, key=0, style=solid];
m8_9 -> m8_37  [key=2, style=dotted];
m8_9 -> m8_38  [key=2, style=dotted];
m8_9 -> m8_34  [key=2, style=dotted];
m8_10 -> m8_11  [color=red, key=0, style=solid];
m8_10 -> m8_33  [color=red, key=2, style=dotted];
m8_10 -> m8_14  [key=2, style=dotted];
m8_11 -> m8_12  [color=red, key=0, style=solid];
m8_11 -> m8_15  [color=red, key=0, style=solid];
m8_11 -> m8_0  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [color=red, key=0, style=solid];
m8_12 -> m8_33  [color=red, key=2, style=dotted];
m8_15 -> m8_16  [color=red, key=0, style=solid];
m8_15 -> m8_33  [color=red, key=2, style=dotted];
m8_15 -> m8_23  [color=darkseagreen4, key=1, label="Hangfire.JobActivator", style=dashed];
m8_15 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m8_15 -> m8_18  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m8_13 -> m8_14  [color=red, key=0, style=solid];
m8_13 -> m8_34  [color=red, key=2, style=dotted];
m8_14 -> m8_15  [color=red, key=0, style=solid];
m8_14 -> m8_33  [color=red, key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_39  [key=2, style=dotted];
m8_16 -> m8_34  [key=2, style=dotted];
m8_16 -> m8_18  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_33  [key=2, style=dotted];
m8_17 -> m8_27  [key=0, style=solid];
m8_17 -> n6  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_40  [key=2, style=dotted];
m8_18 -> m8_41  [key=2, style=dotted];
m8_18 -> m8_20  [color=darkseagreen4, key=1, label=version, style=dashed];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_33  [key=2, style=dotted];
m8_19 -> m8_27  [key=0, style=solid];
m8_19 -> n6  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_42  [key=2, style=dotted];
m8_20 -> m8_34  [key=2, style=dotted];
m8_20 -> m8_25  [color=darkseagreen4, key=1, label=instance, style=dashed];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_33  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_34  [key=2, style=dotted];
m8_22 -> m8_24  [key=0, style=solid];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_33  [key=2, style=dotted];
m8_23 -> m8_28  [key=2, style=dotted];
m8_23 -> m8_25  [color=darkseagreen4, key=1, label=instance, style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_34  [key=2, style=dotted];
m8_24 -> m8_29  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_33  [key=2, style=dotted];
m8_25 -> m8_30  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_43  [key=2, style=dotted];
m8_26 -> m8_34  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_33  [key=2, style=dotted];
m8_27 -> m8_15  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_35  [key=2, style=dotted];
m8_28 -> m8_34  [key=2, style=dotted];
m8_28 -> m8_31  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_33  [key=2, style=dotted];
m8_29 -> m8_50  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m8_29 -> m8_42  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_35  [key=2, style=dotted];
m8_30 -> m8_34  [key=2, style=dotted];
m8_30 -> m8_71  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=2, style=dotted];
m8_31 -> m8_34  [color=darkseagreen4, key=1, label=instance, style=dashed];
m8_31 -> m8_38  [key=2, style=dotted];
m8_32 -> m8_0  [color=blue, key=0, style=bold];
m8_32 -> m8_34  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_57 -> m8_58  [color=green, key=0, style=solid];
m8_57 -> m8_69  [color=green, key=2, style=dotted];
m8_50 -> m8_57  [color=green, key=0, style=solid];
m8_43 -> m8_57  [color=green, key=1, label=result, style=dashed];
m8_43 -> m8_59  [color=green, key=1, label=result, style=dashed];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_64  [key=2, style=dotted];
m8_51 -> m8_57  [color=green, key=0, style=solid];
m8_51 -> m8_52  [color=green, key=0, style=solid];
m8_51 -> m8_66  [color=green, key=2, style=dotted];
m8_54 -> m8_57  [color=green, key=0, style=solid];
m8_56 -> m8_57  [color=green, key=0, style=solid];
m8_56 -> m8_68  [color=green, key=2, style=dotted];
m8_58 -> m8_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_58 -> m8_45  [key=0, style=solid];
m8_59 -> m8_62  [color=green, key=0, style=solid];
m8_59 -> m8_70  [color=green, key=2, style=dotted];
m8_45 -> m8_59  [color=green, key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_51  [color=green, key=1, label=parameter, style=dashed];
m8_46 -> m8_53  [color=green, key=1, label=parameter, style=dashed];
m8_46 -> m8_55  [color=green, key=1, label=parameter, style=dashed];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_49  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m8_47 -> m8_51  [color=green, key=1, label=argument, style=dashed];
m8_47 -> m8_56  [color=green, key=1, label=argument, style=dashed];
m8_47 -> m8_54  [color=darkseagreen4, key=1, label=argument, style=dashed];
m8_47 -> m8_48  [key=0, style=solid];
m8_49 -> m8_51  [color=green, key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_65  [key=2, style=dotted];
m8_52 -> m8_53  [color=green, key=0, style=solid];
m8_53 -> m8_54  [color=green, key=0, style=solid];
m8_53 -> m8_55  [color=green, key=0, style=solid];
m8_55 -> m8_56  [color=green, key=0, style=solid];
m8_55 -> m8_67  [color=green, key=2, style=dotted];
m8_60 -> m8_61  [color=green, key=0, style=solid];
m8_61 -> m8_62  [color=green, key=0, style=solid];
m8_61 -> m8_41  [color=green, key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_45  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m8_42 -> m8_46  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m8_42 -> m8_63  [key=2, style=dotted];
m8_44 -> m8_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_44 -> m8_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_6  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_10  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_11  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_12  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_13  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_14  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_15  [color=red, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_27  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_44 -> m8_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_48 -> m8_49  [key=0, style=solid];
m8_62 -> m8_29  [color=blue, key=0, style=bold];
m8_36 -> m8_37  [color=green, key=0, style=solid];
m8_36 -> m8_41  [color=green, key=2, style=dotted];
m8_35 -> m8_36  [color=green, key=0, style=solid];
m8_34 -> m8_37  [key=0, style=solid];
m8_33 -> m8_37  [key=0, style=solid];
m8_33 -> m8_39  [key=2, style=dotted];
m8_33 -> m8_40  [key=2, style=dotted];
m8_37 -> m8_28  [color=blue, key=0, style=bold];
m8_75 -> m8_41  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_73 -> m8_75  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_71 -> m8_76  [key=0, style=solid];
m8_71 -> m8_77  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_74 -> m8_76  [key=0, style=solid];
m8_76 -> m8_30  [color=blue, key=0, style=bold];
m8_78 -> m8_79  [key=0, style=solid];
m8_83 -> m8_84  [color=green, key=0, style=solid];
m8_83 -> m8_41  [color=green, key=2, style=dotted];
m8_82 -> m8_83  [color=green, key=0, style=solid];
m8_80 -> m8_82  [key=0, style=solid];
m8_80 -> m8_84  [key=0, style=solid];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_84  [key=0, style=solid];
m8_81 -> m8_85  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_81  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m8_84 -> m8_78  [color=blue, key=0, style=bold];
m8_86 -> m8_43  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_47  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_33  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_10  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_22  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_23  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_24  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_25  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_31  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_42  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m8_86 -> m8_71  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=2, style=dotted];
m9_24 -> m9_22  [color=blue, key=0, style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=2, style=dotted];
m9_28 -> m9_26  [color=blue, key=0, style=bold];
m9_101 -> m9_102  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_39  [key=2, style=dotted];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_22  [key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_40  [key=2, style=dotted];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_41  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_42  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_43  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_26  [key=2, style=dotted];
m9_109 -> m9_101  [color=blue, key=0, style=bold];
m9_110 -> m9_111  [key=0, style=solid];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_39  [key=2, style=dotted];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_22  [key=2, style=dotted];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_40  [key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_41  [key=2, style=dotted];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_42  [key=2, style=dotted];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_43  [key=2, style=dotted];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_41  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_41  [key=2, style=dotted];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_26  [key=2, style=dotted];
m9_120 -> m9_110  [color=blue, key=0, style=bold];
m9_121 -> m9_122  [key=0, style=solid];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_39  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_22  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_40  [key=2, style=dotted];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_41  [key=2, style=dotted];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_41  [key=2, style=dotted];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_41  [key=2, style=dotted];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_42  [key=2, style=dotted];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_73  [key=2, style=dotted];
m9_129 -> m9_131  [color=darkseagreen4, key=1, label=table4, style=dashed];
m9_129 -> m9_132  [color=darkseagreen4, key=1, label=table4, style=dashed];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_74  [key=2, style=dotted];
m9_131 -> m9_132  [key=0, style=solid];
m9_131 -> m9_74  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_43  [key=2, style=dotted];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_26  [key=2, style=dotted];
m9_134 -> m9_121  [color=blue, key=0, style=bold];
m9_165 -> m9_166  [key=0, style=solid];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_39  [key=2, style=dotted];
m9_167 -> m9_168  [key=0, style=solid];
m9_167 -> m9_22  [key=2, style=dotted];
m9_168 -> m9_169  [key=0, style=solid];
m9_168 -> m9_40  [key=2, style=dotted];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_42  [key=2, style=dotted];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_43  [key=2, style=dotted];
m9_171 -> m9_172  [key=0, style=solid];
m9_171 -> m9_26  [key=2, style=dotted];
m9_172 -> m9_165  [color=blue, key=0, style=bold];
m9_208 -> m9_209  [key=0, style=solid];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_39  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_22  [key=2, style=dotted];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_40  [key=2, style=dotted];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_41  [key=2, style=dotted];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_41  [key=2, style=dotted];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_42  [key=2, style=dotted];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_73  [key=2, style=dotted];
m9_215 -> m9_217  [color=darkseagreen4, key=1, label=table8, style=dashed];
m9_216 -> m9_217  [key=0, style=solid];
m9_216 -> m9_74  [key=2, style=dotted];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_43  [key=2, style=dotted];
m9_218 -> m9_219  [key=0, style=solid];
m9_218 -> m9_26  [key=2, style=dotted];
m9_219 -> m9_208  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [color=green, key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m9_0 -> m9_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m9_0 -> m9_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m9_0 -> m9_10  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_5  [key=2, style=dotted];
m9_1 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_11  [color=green, key=0, style=solid];
m9_2 -> n6  [color=green, key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_8  [key=2, style=dotted];
m9_3 -> m9_5  [key=0, style=solid];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_11  [key=0, style=solid];
m9_4 -> n6  [key=2, style=dotted];
m9_192 -> m9_193  [key=0, style=solid];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_39  [key=2, style=dotted];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_22  [key=2, style=dotted];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_40  [key=2, style=dotted];
m9_196 -> m9_197  [key=0, style=solid];
m9_196 -> m9_41  [key=2, style=dotted];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_41  [key=2, style=dotted];
m9_198 -> m9_199  [key=0, style=solid];
m9_198 -> m9_41  [key=2, style=dotted];
m9_199 -> m9_200  [key=0, style=solid];
m9_199 -> m9_42  [key=2, style=dotted];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_73  [key=2, style=dotted];
m9_200 -> m9_202  [color=darkseagreen4, key=1, label=table7, style=dashed];
m9_200 -> m9_203  [color=darkseagreen4, key=1, label=table7, style=dashed];
m9_200 -> m9_204  [color=darkseagreen4, key=1, label=table7, style=dashed];
m9_200 -> m9_205  [color=darkseagreen4, key=1, label=table7, style=dashed];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_74  [key=2, style=dotted];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_74  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_74  [key=2, style=dotted];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_74  [key=2, style=dotted];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_43  [key=2, style=dotted];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_26  [key=2, style=dotted];
m9_207 -> m9_192  [color=blue, key=0, style=bold];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_173 -> m9_174  [key=0, style=solid];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_39  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_175 -> m9_22  [key=2, style=dotted];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_40  [key=2, style=dotted];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_41  [key=2, style=dotted];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_42  [key=2, style=dotted];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_43  [key=2, style=dotted];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_26  [key=2, style=dotted];
m9_181 -> m9_173  [color=blue, key=0, style=bold];
m9_135 -> m9_136  [key=0, style=solid];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_39  [key=2, style=dotted];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_22  [key=2, style=dotted];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_40  [key=2, style=dotted];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_41  [key=2, style=dotted];
m9_140 -> m9_141  [key=0, style=solid];
m9_140 -> m9_41  [key=2, style=dotted];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_42  [key=2, style=dotted];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_43  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_41  [key=2, style=dotted];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_41  [key=2, style=dotted];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_73  [key=2, style=dotted];
m9_145 -> m9_147  [color=darkseagreen4, key=1, label=table5, style=dashed];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_74  [key=2, style=dotted];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_41  [key=2, style=dotted];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_26  [key=2, style=dotted];
m9_149 -> m9_135  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_0  [key=2, style=dotted];
m9_17 -> m9_14  [color=blue, key=0, style=bold];
m9_13 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m9_13 -> m9_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m9_13 -> m9_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m9_13 -> m9_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m9_7 -> m9_8  [key=0, style=solid];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_39  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_22  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_40  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_41  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_42  [key=2, style=dotted];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_43  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_26  [key=2, style=dotted];
m9_52 -> m9_44  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_11  [key=0, style=solid];
m9_6 -> n6  [key=2, style=dotted];
m9_11 -> m9_0  [color=blue, key=0, style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_9  [color=blue, key=0, style=bold];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_39  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_22  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_40  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_41  [key=2, style=dotted];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_42  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_73  [key=2, style=dotted];
m9_81 -> m9_83  [color=darkseagreen4, key=1, label=table2, style=dashed];
m9_81 -> m9_84  [color=darkseagreen4, key=1, label=table2, style=dashed];
m9_81 -> m9_85  [color=darkseagreen4, key=1, label=table2, style=dashed];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_74  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_74  [key=2, style=dotted];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_74  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_43  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_26  [key=2, style=dotted];
m9_87 -> m9_75  [color=blue, key=0, style=bold];
m9_150 -> m9_151  [key=0, style=solid];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_39  [key=2, style=dotted];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_22  [key=2, style=dotted];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_40  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_41  [key=2, style=dotted];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_41  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_41  [key=2, style=dotted];
m9_157 -> m9_158  [key=0, style=solid];
m9_157 -> m9_42  [key=2, style=dotted];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_73  [key=2, style=dotted];
m9_158 -> m9_160  [color=darkseagreen4, key=1, label=table6, style=dashed];
m9_158 -> m9_161  [color=darkseagreen4, key=1, label=table6, style=dashed];
m9_158 -> m9_162  [color=darkseagreen4, key=1, label=table6, style=dashed];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_74  [key=2, style=dotted];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_74  [key=2, style=dotted];
m9_161 -> m9_162  [key=0, style=solid];
m9_161 -> m9_74  [key=2, style=dotted];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_43  [key=2, style=dotted];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_26  [key=2, style=dotted];
m9_164 -> m9_150  [color=blue, key=0, style=bold];
m9_100 -> m9_88  [color=blue, key=0, style=bold];
m9_88 -> m9_89  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_39  [key=2, style=dotted];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_22  [key=2, style=dotted];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_73  [key=2, style=dotted];
m9_91 -> m9_93  [color=darkseagreen4, key=1, label=table3, style=dashed];
m9_91 -> m9_94  [color=darkseagreen4, key=1, label=table3, style=dashed];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_74  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_74  [key=2, style=dotted];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_40  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_41  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_42  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_43  [key=2, style=dotted];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_41  [key=2, style=dotted];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_26  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=2, style=dotted];
m9_20 -> m9_18  [color=blue, key=0, style=bold];
m9_72 -> m9_62  [color=blue, key=0, style=bold];
m9_62 -> m9_63  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_39  [key=2, style=dotted];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_22  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_40  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_41  [key=2, style=dotted];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_42  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_73  [key=2, style=dotted];
m9_68 -> m9_70  [color=darkseagreen4, key=1, label=table1, style=dashed];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_74  [key=2, style=dotted];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_43  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_26  [key=2, style=dotted];
m9_182 -> m9_183  [key=0, style=solid];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_39  [key=2, style=dotted];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_22  [key=2, style=dotted];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_40  [key=2, style=dotted];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_41  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_41  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_42  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_43  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_190 -> m9_26  [key=2, style=dotted];
m9_191 -> m9_182  [color=blue, key=0, style=bold];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_39  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_22  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_40  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_41  [key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_42  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_43  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_26  [key=2, style=dotted];
m9_38 -> m9_30  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_39  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_22  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_40  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_41  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_42  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_43  [key=2, style=dotted];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_26  [key=2, style=dotted];
m9_61 -> m9_53  [color=blue, key=0, style=bold];
m9_220 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_37  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_46  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_51  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_55  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_64  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_71  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_77  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_86  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_90  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_99  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_103  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_108  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_112  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_119  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_123  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_133  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_137  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_148  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_152  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_163  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_167  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_171  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_175  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_180  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_184  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_190  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_194  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_206  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_210  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m9_220 -> m9_218  [color=darkseagreen4, key=1, label="HangFire.Tests.StateMachineFeature", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> n30  [key=2, style=dotted];
m12_17 -> m12_15  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_11  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_14  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_12  [key=2, style=dotted];
m12_6 -> m12_8  [color=darkseagreen4, key=1, label=serversRemoved, style=dashed];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_13  [key=2, style=dotted];
m12_10 -> m12_4  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_0  [color=blue, key=0, style=bold];
m12_19 -> m12_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m12_19 -> m12_2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m12_19 -> m12_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m12_19 -> m12_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m12_19 -> m12_16  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m14_153 -> m14_154  [key=0, style=solid];
m14_154 -> m14_155  [key=0, style=solid];
m14_154 -> m14_36  [key=2, style=dotted];
m14_154 -> m14_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_155 -> m14_153  [color=blue, key=0, style=bold];
m14_627 -> m14_628  [key=0, style=solid];
m14_628 -> m14_629  [key=0, style=solid];
m14_628 -> m14_632  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_628 -> m14_628  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_629 -> m14_630  [key=0, style=solid];
m14_629 -> m14_36  [key=2, style=dotted];
m14_629 -> m14_631  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_630 -> m14_627  [color=blue, key=0, style=bold];
m14_119 -> m14_120  [key=0, style=solid];
m14_120 -> m14_121  [key=0, style=solid];
m14_120 -> m14_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_120 -> m14_33  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_36  [key=2, style=dotted];
m14_121 -> m14_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_122 -> m14_119  [color=blue, key=0, style=bold];
m14_393 -> m14_394  [key=0, style=solid];
m14_394 -> m14_395  [key=0, style=solid];
m14_394 -> m14_36  [key=2, style=dotted];
m14_394 -> m14_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_395 -> m14_393  [color=blue, key=0, style=bold];
m14_614 -> m14_615  [key=0, style=solid];
m14_615 -> m14_616  [key=0, style=solid];
m14_615 -> m14_36  [key=2, style=dotted];
m14_615 -> m14_617  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_616 -> m14_614  [color=blue, key=0, style=bold];
m14_419 -> m14_420  [key=0, style=solid];
m14_420 -> m14_421  [key=0, style=solid];
m14_420 -> m14_36  [key=2, style=dotted];
m14_420 -> m14_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_421 -> m14_419  [color=blue, key=0, style=bold];
m14_476 -> m14_477  [key=0, style=solid];
m14_477 -> m14_478  [key=0, style=solid];
m14_477 -> m14_36  [key=2, style=dotted];
m14_477 -> m14_479  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_478 -> m14_476  [color=blue, key=0, style=bold];
m14_782 -> m14_783  [key=0, style=solid];
m14_783 -> m14_784  [key=0, style=solid];
m14_783 -> m14_36  [key=2, style=dotted];
m14_783 -> m14_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_784 -> m14_782  [color=blue, key=0, style=bold];
m14_319 -> m14_320  [key=0, style=solid];
m14_320 -> m14_321  [key=0, style=solid];
m14_320 -> m14_36  [key=2, style=dotted];
m14_320 -> m14_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_321 -> m14_319  [color=blue, key=0, style=bold];
m14_559 -> m14_560  [key=0, style=solid];
m14_560 -> m14_561  [key=0, style=solid];
m14_560 -> m14_36  [key=2, style=dotted];
m14_560 -> m14_562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_561 -> m14_559  [color=blue, key=0, style=bold];
m14_589 -> m14_590  [key=0, style=solid];
m14_590 -> m14_591  [key=0, style=solid];
m14_590 -> m14_36  [key=2, style=dotted];
m14_590 -> m14_592  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_591 -> m14_589  [color=blue, key=0, style=bold];
m14_407 -> m14_408  [key=0, style=solid];
m14_408 -> m14_409  [key=0, style=solid];
m14_408 -> m14_36  [key=2, style=dotted];
m14_408 -> m14_410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_409 -> m14_407  [color=blue, key=0, style=bold];
m14_177 -> m14_178  [color=red, key=0, style=solid];
m14_178 -> m14_179  [color=red, key=0, style=solid];
m14_178 -> m14_46  [color=red, key=2, style=dotted];
m14_178 -> m14_47  [color=red, key=2, style=dotted];
m14_179 -> m14_177  [color=blue, key=0, style=bold];
m14_816 -> m14_817  [key=0, style=solid];
m14_817 -> m14_818  [key=0, style=solid];
m14_817 -> m14_36  [key=2, style=dotted];
m14_817 -> m14_819  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_818 -> m14_816  [color=blue, key=0, style=bold];
m14_267 -> m14_268  [key=0, style=solid];
m14_268 -> m14_269  [key=0, style=solid];
m14_268 -> m14_36  [key=2, style=dotted];
m14_268 -> m14_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_269 -> m14_267  [color=blue, key=0, style=bold];
m14_514 -> m14_515  [key=0, style=solid];
m14_515 -> m14_516  [key=0, style=solid];
m14_515 -> m14_36  [key=2, style=dotted];
m14_515 -> m14_517  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_516 -> m14_514  [color=blue, key=0, style=bold];
m14_194 -> m14_195  [key=0, style=solid];
m14_195 -> m14_196  [key=0, style=solid];
m14_195 -> m14_36  [key=2, style=dotted];
m14_195 -> m14_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_196 -> m14_194  [color=blue, key=0, style=bold];
m14_293 -> m14_294  [key=0, style=solid];
m14_294 -> m14_295  [key=0, style=solid];
m14_294 -> m14_36  [key=2, style=dotted];
m14_294 -> m14_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_295 -> m14_293  [color=blue, key=0, style=bold];
m14_677 -> m14_678  [key=0, style=solid];
m14_678 -> m14_679  [key=0, style=solid];
m14_678 -> m14_36  [key=2, style=dotted];
m14_678 -> m14_680  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_679 -> m14_677  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [key=2, style=dotted];
m14_1 -> m14_3  [color=darkseagreen4, key=1, label=defaultProvider, style=dashed];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_6  [key=2, style=dotted];
m14_2 -> m14_7  [key=2, style=dotted];
m14_2 -> m14_8  [key=2, style=dotted];
m14_2 -> m14_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_9  [key=2, style=dotted];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_830 -> m14_831  [key=0, style=solid];
m14_831 -> m14_832  [key=0, style=solid];
m14_831 -> m14_835  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_831 -> m14_831  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_832 -> m14_833  [key=0, style=solid];
m14_832 -> m14_36  [key=2, style=dotted];
m14_832 -> m14_834  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_833 -> m14_830  [color=blue, key=0, style=bold];
m14_692 -> m14_693  [key=0, style=solid];
m14_693 -> m14_694  [key=0, style=solid];
m14_693 -> m14_697  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_693 -> m14_693  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_694 -> m14_695  [key=0, style=solid];
m14_694 -> m14_36  [key=2, style=dotted];
m14_694 -> m14_696  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_695 -> m14_692  [color=blue, key=0, style=bold];
m14_847 -> m14_848  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_14  [key=2, style=dotted];
m14_12 -> m14_10  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=2, style=dotted];
m14_22 -> m14_20  [color=blue, key=0, style=bold];
m14_28 -> m14_29  [key=0, style=solid];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_23  [key=2, style=dotted];
m14_29 -> m14_31  [key=2, style=dotted];
m14_30 -> m14_28  [color=blue, key=0, style=bold];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_46  [key=2, style=dotted];
m14_38 -> m14_47  [key=2, style=dotted];
m14_38 -> m14_48  [key=2, style=dotted];
m14_38 -> m14_40  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_38 -> m14_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_38 -> m14_41  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_46  [key=2, style=dotted];
m14_39 -> m14_47  [key=2, style=dotted];
m14_39 -> m14_48  [key=2, style=dotted];
m14_39 -> m14_43  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_39  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_37 -> m14_40  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_37 -> m14_41  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_37 -> m14_43  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_49  [key=2, style=dotted];
m14_40 -> m14_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_50  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_50  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_58  [key=2, style=dotted];
m14_56 -> m14_59  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_51  [key=2, style=dotted];
m14_42 -> m14_52  [key=2, style=dotted];
m14_42 -> m14_53  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_54  [key=2, style=dotted];
m14_45 -> m14_37  [color=blue, key=0, style=bold];
m14_57 -> m14_55  [color=blue, key=0, style=bold];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_46  [key=2, style=dotted];
m14_65 -> m14_47  [key=2, style=dotted];
m14_65 -> m14_48  [key=2, style=dotted];
m14_65 -> m14_67  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_65 -> m14_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_65 -> m14_68  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_46  [key=2, style=dotted];
m14_66 -> m14_47  [key=2, style=dotted];
m14_66 -> m14_48  [key=2, style=dotted];
m14_66 -> m14_70  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_66  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_64 -> m14_67  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_64 -> m14_68  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_64 -> m14_70  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_49  [key=2, style=dotted];
m14_67 -> m14_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_50  [key=2, style=dotted];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_50  [key=2, style=dotted];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_77  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_54  [key=2, style=dotted];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_73  [key=2, style=dotted];
m14_72 -> m14_64  [color=blue, key=0, style=bold];
m14_76 -> m14_74  [color=blue, key=0, style=bold];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_46  [key=2, style=dotted];
m14_83 -> m14_47  [key=2, style=dotted];
m14_83 -> m14_48  [key=2, style=dotted];
m14_83 -> m14_89  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_83 -> m14_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_83 -> m14_90  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_83 -> m14_97  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_46  [key=2, style=dotted];
m14_84 -> m14_47  [key=2, style=dotted];
m14_84 -> m14_48  [key=2, style=dotted];
m14_84 -> m14_93  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_84  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_82 -> m14_89  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_82 -> m14_90  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_82 -> m14_93  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_82 -> m14_96  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_49  [key=2, style=dotted];
m14_89 -> m14_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_50  [key=2, style=dotted];
m14_90 -> m14_92  [color=darkseagreen4, key=1, label=job, style=dashed];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_50  [key=2, style=dotted];
m14_93 -> m14_95  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_46  [key=2, style=dotted];
m14_96 -> m14_47  [key=2, style=dotted];
m14_96 -> m14_98  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_96 -> m14_99  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_96 -> m14_100  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_96 -> m14_101  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_118  [key=2, style=dotted];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_48  [key=2, style=dotted];
m14_97 -> m14_19  [key=2, style=dotted];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_103  [key=2, style=dotted];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_85 -> m14_88  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_85 -> m14_89  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_85 -> m14_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_6  [key=2, style=dotted];
m14_86 -> m14_8  [key=2, style=dotted];
m14_86 -> m14_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_6  [key=2, style=dotted];
m14_87 -> m14_8  [key=2, style=dotted];
m14_87 -> m14_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_6  [key=2, style=dotted];
m14_88 -> m14_104  [key=2, style=dotted];
m14_88 -> m14_8  [key=2, style=dotted];
m14_88 -> m14_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_105 -> m14_106  [key=0, style=solid];
m14_108 -> m14_109  [key=0, style=solid];
m14_111 -> m14_112  [key=0, style=solid];
m14_115 -> m14_116  [key=0, style=solid];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_19  [key=2, style=dotted];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_73  [key=2, style=dotted];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_54  [key=2, style=dotted];
m14_95 -> m14_96  [key=0, style=solid];
m14_95 -> m14_54  [key=2, style=dotted];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_19  [key=2, style=dotted];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_19  [key=2, style=dotted];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_73  [key=2, style=dotted];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_19  [key=2, style=dotted];
m14_102 -> m14_82  [color=blue, key=0, style=bold];
m14_106 -> m14_107  [key=0, style=solid];
m14_107 -> m14_105  [color=blue, key=0, style=bold];
m14_109 -> m14_110  [key=0, style=solid];
m14_110 -> m14_108  [color=blue, key=0, style=bold];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_114  [key=2, style=dotted];
m14_113 -> m14_111  [color=blue, key=0, style=bold];
m14_117 -> m14_115  [color=blue, key=0, style=bold];
m14_124 -> m14_125  [key=0, style=solid];
m14_124 -> m14_46  [key=2, style=dotted];
m14_124 -> m14_47  [key=2, style=dotted];
m14_124 -> m14_48  [key=2, style=dotted];
m14_124 -> m14_129  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_124 -> m14_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_124 -> m14_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_124 -> m14_134  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_123 -> m14_124  [key=0, style=solid];
m14_123 -> m14_129  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_123 -> m14_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_123 -> m14_133  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_129 -> m14_130  [key=0, style=solid];
m14_129 -> m14_49  [key=2, style=dotted];
m14_129 -> m14_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_130 -> m14_131  [key=0, style=solid];
m14_130 -> m14_50  [key=2, style=dotted];
m14_130 -> m14_132  [color=darkseagreen4, key=1, label=job, style=dashed];
m14_133 -> m14_134  [key=0, style=solid];
m14_133 -> m14_46  [key=2, style=dotted];
m14_133 -> m14_47  [key=2, style=dotted];
m14_133 -> m14_135  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_133 -> m14_136  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_133 -> m14_137  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_133 -> m14_138  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_103  [key=2, style=dotted];
m14_125 -> m14_127  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_125 -> m14_128  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_125 -> m14_129  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_125 -> m14_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_150 -> m14_151  [key=0, style=solid];
m14_150 -> m14_152  [key=2, style=dotted];
m14_134 -> m14_135  [key=0, style=solid];
m14_134 -> m14_48  [key=2, style=dotted];
m14_134 -> m14_19  [key=2, style=dotted];
m14_126 -> m14_127  [key=0, style=solid];
m14_126 -> m14_6  [key=2, style=dotted];
m14_126 -> m14_8  [key=2, style=dotted];
m14_126 -> m14_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_127 -> m14_128  [key=0, style=solid];
m14_127 -> m14_6  [key=2, style=dotted];
m14_127 -> m14_8  [key=2, style=dotted];
m14_127 -> m14_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_128 -> m14_129  [key=0, style=solid];
m14_128 -> m14_6  [key=2, style=dotted];
m14_128 -> m14_104  [key=2, style=dotted];
m14_128 -> m14_8  [key=2, style=dotted];
m14_128 -> m14_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_140 -> m14_141  [key=0, style=solid];
m14_143 -> m14_144  [key=0, style=solid];
m14_146 -> m14_147  [key=0, style=solid];
m14_149 -> m14_150  [key=0, style=solid];
m14_131 -> m14_132  [key=0, style=solid];
m14_131 -> m14_54  [key=2, style=dotted];
m14_132 -> m14_133  [key=0, style=solid];
m14_132 -> m14_54  [key=2, style=dotted];
m14_135 -> m14_136  [key=0, style=solid];
m14_135 -> m14_19  [key=2, style=dotted];
m14_136 -> m14_137  [key=0, style=solid];
m14_136 -> m14_19  [key=2, style=dotted];
m14_137 -> m14_138  [key=0, style=solid];
m14_137 -> m14_73  [key=2, style=dotted];
m14_138 -> m14_139  [key=0, style=solid];
m14_138 -> m14_19  [key=2, style=dotted];
m14_139 -> m14_123  [color=blue, key=0, style=bold];
m14_141 -> m14_142  [key=0, style=solid];
m14_142 -> m14_140  [color=blue, key=0, style=bold];
m14_144 -> m14_145  [key=0, style=solid];
m14_145 -> m14_143  [color=blue, key=0, style=bold];
m14_147 -> m14_148  [key=0, style=solid];
m14_147 -> m14_114  [key=2, style=dotted];
m14_148 -> m14_146  [color=blue, key=0, style=bold];
m14_151 -> m14_149  [color=blue, key=0, style=bold];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_161  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_157 -> m14_158  [key=0, style=solid];
m14_157 -> m14_7  [key=2, style=dotted];
m14_157 -> m14_159  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m14_157 -> m14_162  [color=darkseagreen4, key=1, label=correctJobQueue, style=dashed];
m14_161 -> m14_162  [key=0, style=solid];
m14_161 -> m14_49  [key=2, style=dotted];
m14_161 -> m14_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_158 -> m14_159  [key=0, style=solid];
m14_158 -> m14_5  [key=2, style=dotted];
m14_158 -> m14_160  [color=darkseagreen4, key=1, label=correctProvider, style=dashed];
m14_159 -> m14_160  [key=0, style=solid];
m14_159 -> m14_6  [key=2, style=dotted];
m14_159 -> m14_8  [key=2, style=dotted];
m14_159 -> m14_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_162 -> m14_163  [key=0, style=solid];
m14_162 -> m14_165  [key=2, style=dotted];
m14_162 -> m14_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_160 -> m14_161  [key=0, style=solid];
m14_160 -> m14_164  [key=2, style=dotted];
m14_166 -> m14_167  [key=0, style=solid];
m14_169 -> m14_170  [key=0, style=solid];
m14_163 -> m14_156  [color=blue, key=0, style=bold];
m14_173 -> m14_174  [key=0, style=solid];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_13  [key=2, style=dotted];
m14_167 -> m14_14  [key=2, style=dotted];
m14_168 -> m14_166  [color=blue, key=0, style=bold];
m14_170 -> m14_171  [key=0, style=solid];
m14_170 -> m14_172  [key=2, style=dotted];
m14_171 -> m14_169  [color=blue, key=0, style=bold];
m14_174 -> m14_175  [key=0, style=solid];
m14_174 -> m14_176  [key=2, style=dotted];
m14_175 -> m14_173  [color=blue, key=0, style=bold];
m14_183 -> m14_184  [key=0, style=solid];
m14_183 -> m14_185  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_184 -> m14_185  [key=0, style=solid];
m14_184 -> m14_49  [key=2, style=dotted];
m14_184 -> m14_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_185 -> m14_186  [key=0, style=solid];
m14_185 -> m14_46  [key=2, style=dotted];
m14_185 -> m14_47  [key=2, style=dotted];
m14_185 -> m14_187  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_185 -> m14_188  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_190 -> m14_191  [key=0, style=solid];
m14_186 -> m14_187  [key=0, style=solid];
m14_186 -> m14_19  [key=2, style=dotted];
m14_187 -> m14_188  [key=0, style=solid];
m14_187 -> m14_19  [key=2, style=dotted];
m14_188 -> m14_189  [key=0, style=solid];
m14_188 -> m14_19  [key=2, style=dotted];
m14_189 -> m14_183  [color=blue, key=0, style=bold];
m14_191 -> m14_192  [key=0, style=solid];
m14_191 -> m14_193  [key=2, style=dotted];
m14_192 -> m14_190  [color=blue, key=0, style=bold];
m14_197 -> m14_198  [key=0, style=solid];
m14_197 -> m14_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_198 -> m14_199  [key=0, style=solid];
m14_198 -> m14_49  [key=2, style=dotted];
m14_198 -> m14_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_199 -> m14_200  [key=0, style=solid];
m14_199 -> m14_46  [key=2, style=dotted];
m14_199 -> m14_47  [key=2, style=dotted];
m14_199 -> m14_201  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_199 -> m14_202  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_199 -> m14_203  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_208 -> m14_209  [key=0, style=solid];
m14_200 -> m14_201  [key=0, style=solid];
m14_200 -> m14_19  [key=2, style=dotted];
m14_201 -> m14_202  [key=0, style=solid];
m14_201 -> m14_19  [key=2, style=dotted];
m14_202 -> m14_203  [key=0, style=solid];
m14_202 -> m14_73  [key=2, style=dotted];
m14_203 -> m14_204  [key=0, style=solid];
m14_203 -> m14_205  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m14_204 -> m14_205  [key=0, style=solid];
m14_204 -> m14_207  [key=2, style=dotted];
m14_204 -> m14_53  [key=2, style=dotted];
m14_205 -> m14_206  [key=0, style=solid];
m14_205 -> m14_207  [key=2, style=dotted];
m14_205 -> m14_53  [key=2, style=dotted];
m14_206 -> m14_197  [color=blue, key=0, style=bold];
m14_209 -> m14_210  [key=0, style=solid];
m14_209 -> m14_58  [key=2, style=dotted];
m14_209 -> m14_211  [key=2, style=dotted];
m14_210 -> m14_208  [color=blue, key=0, style=bold];
m14_215 -> m14_216  [key=0, style=solid];
m14_215 -> m14_217  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_49  [key=2, style=dotted];
m14_216 -> m14_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_217 -> m14_218  [key=0, style=solid];
m14_217 -> m14_13  [key=2, style=dotted];
m14_217 -> m14_47  [key=2, style=dotted];
m14_220 -> m14_221  [key=0, style=solid];
m14_220 -> m14_222  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_218 -> m14_219  [key=0, style=solid];
m14_218 -> m14_19  [key=2, style=dotted];
m14_219 -> m14_215  [color=blue, key=0, style=bold];
m14_221 -> m14_222  [key=0, style=solid];
m14_221 -> m14_193  [key=2, style=dotted];
m14_222 -> m14_223  [key=0, style=solid];
m14_222 -> m14_193  [key=2, style=dotted];
m14_223 -> m14_220  [color=blue, key=0, style=bold];
m14_227 -> m14_228  [key=0, style=solid];
m14_227 -> m14_229  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_228 -> m14_229  [key=0, style=solid];
m14_228 -> m14_49  [key=2, style=dotted];
m14_228 -> m14_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_229 -> m14_230  [key=0, style=solid];
m14_229 -> m14_46  [key=2, style=dotted];
m14_229 -> m14_47  [key=2, style=dotted];
m14_229 -> m14_231  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_229 -> m14_232  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_234 -> m14_235  [key=0, style=solid];
m14_230 -> m14_231  [key=0, style=solid];
m14_230 -> m14_19  [key=2, style=dotted];
m14_231 -> m14_232  [key=0, style=solid];
m14_231 -> m14_19  [key=2, style=dotted];
m14_232 -> m14_233  [key=0, style=solid];
m14_232 -> m14_19  [key=2, style=dotted];
m14_233 -> m14_227  [color=blue, key=0, style=bold];
m14_235 -> m14_236  [key=0, style=solid];
m14_235 -> m14_237  [key=2, style=dotted];
m14_236 -> m14_234  [color=blue, key=0, style=bold];
m14_241 -> m14_242  [key=0, style=solid];
m14_241 -> m14_243  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_242 -> m14_243  [key=0, style=solid];
m14_242 -> m14_49  [key=2, style=dotted];
m14_242 -> m14_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_243 -> m14_244  [key=0, style=solid];
m14_243 -> m14_46  [key=2, style=dotted];
m14_243 -> m14_47  [key=2, style=dotted];
m14_243 -> m14_245  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_243 -> m14_246  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_243 -> m14_247  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_251 -> m14_252  [key=0, style=solid];
m14_244 -> m14_245  [key=0, style=solid];
m14_244 -> m14_19  [key=2, style=dotted];
m14_245 -> m14_246  [key=0, style=solid];
m14_245 -> m14_19  [key=2, style=dotted];
m14_246 -> m14_247  [key=0, style=solid];
m14_246 -> m14_73  [key=2, style=dotted];
m14_247 -> m14_248  [key=0, style=solid];
m14_247 -> m14_249  [color=darkseagreen4, key=1, label=expireAt, style=dashed];
m14_248 -> m14_249  [key=0, style=solid];
m14_248 -> m14_207  [key=2, style=dotted];
m14_248 -> m14_53  [key=2, style=dotted];
m14_249 -> m14_250  [key=0, style=solid];
m14_249 -> m14_207  [key=2, style=dotted];
m14_249 -> m14_53  [key=2, style=dotted];
m14_250 -> m14_241  [color=blue, key=0, style=bold];
m14_252 -> m14_253  [key=0, style=solid];
m14_252 -> m14_58  [key=2, style=dotted];
m14_252 -> m14_254  [key=2, style=dotted];
m14_253 -> m14_251  [color=blue, key=0, style=bold];
m14_258 -> m14_259  [key=0, style=solid];
m14_258 -> m14_260  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_259 -> m14_260  [key=0, style=solid];
m14_259 -> m14_49  [key=2, style=dotted];
m14_259 -> m14_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_260 -> m14_261  [key=0, style=solid];
m14_260 -> m14_13  [key=2, style=dotted];
m14_260 -> m14_47  [key=2, style=dotted];
m14_263 -> m14_264  [key=0, style=solid];
m14_263 -> m14_265  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_261 -> m14_262  [key=0, style=solid];
m14_261 -> m14_19  [key=2, style=dotted];
m14_262 -> m14_258  [color=blue, key=0, style=bold];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_237  [key=2, style=dotted];
m14_265 -> m14_266  [key=0, style=solid];
m14_265 -> m14_237  [key=2, style=dotted];
m14_266 -> m14_263  [color=blue, key=0, style=bold];
m14_270 -> m14_271  [key=0, style=solid];
m14_270 -> m14_272  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_271 -> m14_272  [key=0, style=solid];
m14_271 -> m14_49  [key=2, style=dotted];
m14_271 -> m14_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_272 -> m14_273  [key=0, style=solid];
m14_272 -> m14_46  [key=2, style=dotted];
m14_272 -> m14_47  [key=2, style=dotted];
m14_272 -> m14_274  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_272 -> m14_275  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_277 -> m14_278  [key=0, style=solid];
m14_273 -> m14_274  [key=0, style=solid];
m14_273 -> m14_19  [key=2, style=dotted];
m14_274 -> m14_275  [key=0, style=solid];
m14_274 -> m14_19  [key=2, style=dotted];
m14_275 -> m14_276  [key=0, style=solid];
m14_275 -> m14_19  [key=2, style=dotted];
m14_276 -> m14_270  [color=blue, key=0, style=bold];
m14_278 -> m14_279  [key=0, style=solid];
m14_278 -> m14_280  [key=2, style=dotted];
m14_279 -> m14_277  [color=blue, key=0, style=bold];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_286  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_285 -> m14_286  [key=0, style=solid];
m14_285 -> m14_49  [key=2, style=dotted];
m14_285 -> m14_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_286 -> m14_287  [key=0, style=solid];
m14_286 -> m14_13  [key=2, style=dotted];
m14_286 -> m14_47  [key=2, style=dotted];
m14_289 -> m14_290  [key=0, style=solid];
m14_289 -> m14_291  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_287 -> m14_288  [key=0, style=solid];
m14_287 -> m14_19  [key=2, style=dotted];
m14_288 -> m14_284  [color=blue, key=0, style=bold];
m14_290 -> m14_291  [key=0, style=solid];
m14_290 -> m14_280  [key=2, style=dotted];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_280  [key=2, style=dotted];
m14_292 -> m14_289  [color=blue, key=0, style=bold];
m14_296 -> m14_297  [key=0, style=solid];
m14_296 -> m14_298  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_297 -> m14_298  [key=0, style=solid];
m14_297 -> m14_49  [key=2, style=dotted];
m14_297 -> m14_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_298 -> m14_299  [key=0, style=solid];
m14_298 -> m14_13  [key=2, style=dotted];
m14_298 -> m14_47  [key=2, style=dotted];
m14_301 -> m14_302  [key=0, style=solid];
m14_301 -> m14_303  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_19  [key=2, style=dotted];
m14_300 -> m14_296  [color=blue, key=0, style=bold];
m14_302 -> m14_303  [key=0, style=solid];
m14_302 -> m14_280  [key=2, style=dotted];
m14_303 -> m14_304  [key=0, style=solid];
m14_303 -> m14_280  [key=2, style=dotted];
m14_304 -> m14_301  [color=blue, key=0, style=bold];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_310  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_309 -> m14_310  [key=0, style=solid];
m14_309 -> m14_49  [key=2, style=dotted];
m14_309 -> m14_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_310 -> m14_311  [key=0, style=solid];
m14_310 -> m14_46  [key=2, style=dotted];
m14_310 -> m14_47  [key=2, style=dotted];
m14_310 -> m14_312  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_310 -> m14_313  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_315 -> m14_316  [key=0, style=solid];
m14_311 -> m14_312  [key=0, style=solid];
m14_311 -> m14_19  [key=2, style=dotted];
m14_312 -> m14_313  [key=0, style=solid];
m14_312 -> m14_19  [key=2, style=dotted];
m14_313 -> m14_314  [key=0, style=solid];
m14_313 -> m14_19  [key=2, style=dotted];
m14_314 -> m14_308  [color=blue, key=0, style=bold];
m14_316 -> m14_317  [key=0, style=solid];
m14_316 -> m14_318  [key=2, style=dotted];
m14_317 -> m14_315  [color=blue, key=0, style=bold];
m14_322 -> m14_323  [key=0, style=solid];
m14_322 -> m14_324  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_323 -> m14_324  [key=0, style=solid];
m14_323 -> m14_49  [key=2, style=dotted];
m14_323 -> m14_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_46  [key=2, style=dotted];
m14_324 -> m14_47  [key=2, style=dotted];
m14_327 -> m14_328  [key=0, style=solid];
m14_327 -> m14_329  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_325 -> m14_326  [key=0, style=solid];
m14_325 -> m14_19  [key=2, style=dotted];
m14_326 -> m14_322  [color=blue, key=0, style=bold];
m14_328 -> m14_329  [key=0, style=solid];
m14_328 -> m14_280  [key=2, style=dotted];
m14_329 -> m14_330  [key=0, style=solid];
m14_329 -> m14_318  [key=2, style=dotted];
m14_330 -> m14_327  [color=blue, key=0, style=bold];
m14_334 -> m14_335  [key=0, style=solid];
m14_334 -> m14_336  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_335 -> m14_336  [key=0, style=solid];
m14_335 -> m14_49  [key=2, style=dotted];
m14_335 -> m14_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_336 -> m14_337  [key=0, style=solid];
m14_336 -> m14_13  [key=2, style=dotted];
m14_336 -> m14_47  [key=2, style=dotted];
m14_339 -> m14_340  [key=0, style=solid];
m14_339 -> m14_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_337 -> m14_338  [key=0, style=solid];
m14_337 -> m14_19  [key=2, style=dotted];
m14_338 -> m14_334  [color=blue, key=0, style=bold];
m14_340 -> m14_341  [key=0, style=solid];
m14_340 -> m14_280  [key=2, style=dotted];
m14_341 -> m14_342  [key=0, style=solid];
m14_341 -> m14_343  [key=2, style=dotted];
m14_342 -> m14_339  [color=blue, key=0, style=bold];
m14_347 -> m14_348  [key=0, style=solid];
m14_347 -> m14_349  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_348 -> m14_349  [key=0, style=solid];
m14_348 -> m14_49  [key=2, style=dotted];
m14_348 -> m14_352  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_349 -> m14_350  [key=0, style=solid];
m14_349 -> m14_13  [key=2, style=dotted];
m14_349 -> m14_47  [key=2, style=dotted];
m14_352 -> m14_353  [key=0, style=solid];
m14_352 -> m14_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_350 -> m14_351  [key=0, style=solid];
m14_350 -> m14_19  [key=2, style=dotted];
m14_351 -> m14_347  [color=blue, key=0, style=bold];
m14_353 -> m14_354  [key=0, style=solid];
m14_353 -> m14_280  [key=2, style=dotted];
m14_354 -> m14_355  [key=0, style=solid];
m14_354 -> m14_343  [key=2, style=dotted];
m14_355 -> m14_352  [color=blue, key=0, style=bold];
m14_359 -> m14_360  [key=0, style=solid];
m14_359 -> m14_361  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_360 -> m14_361  [key=0, style=solid];
m14_360 -> m14_49  [key=2, style=dotted];
m14_360 -> m14_364  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_361 -> m14_362  [key=0, style=solid];
m14_361 -> m14_13  [key=2, style=dotted];
m14_361 -> m14_47  [key=2, style=dotted];
m14_364 -> m14_365  [key=0, style=solid];
m14_364 -> m14_366  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_362 -> m14_363  [key=0, style=solid];
m14_362 -> m14_19  [key=2, style=dotted];
m14_363 -> m14_359  [color=blue, key=0, style=bold];
m14_365 -> m14_366  [key=0, style=solid];
m14_365 -> m14_280  [key=2, style=dotted];
m14_366 -> m14_367  [key=0, style=solid];
m14_366 -> m14_343  [key=2, style=dotted];
m14_367 -> m14_364  [color=blue, key=0, style=bold];
m14_371 -> m14_372  [key=0, style=solid];
m14_371 -> m14_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_372 -> m14_373  [key=0, style=solid];
m14_372 -> m14_49  [key=2, style=dotted];
m14_372 -> m14_377  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_373 -> m14_374  [key=0, style=solid];
m14_373 -> m14_46  [key=2, style=dotted];
m14_373 -> m14_47  [key=2, style=dotted];
m14_373 -> m14_375  [color=darkseagreen4, key=1, label=record, style=dashed];
m14_377 -> m14_378  [key=0, style=solid];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_19  [key=2, style=dotted];
m14_375 -> m14_376  [key=0, style=solid];
m14_375 -> m14_19  [key=2, style=dotted];
m14_376 -> m14_371  [color=blue, key=0, style=bold];
m14_378 -> m14_379  [key=0, style=solid];
m14_378 -> m14_380  [key=2, style=dotted];
m14_379 -> m14_377  [color=blue, key=0, style=bold];
m14_384 -> m14_385  [key=0, style=solid];
m14_384 -> m14_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_385 -> m14_386  [key=0, style=solid];
m14_385 -> m14_49  [key=2, style=dotted];
m14_385 -> m14_389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_386 -> m14_387  [key=0, style=solid];
m14_386 -> m14_13  [key=2, style=dotted];
m14_386 -> m14_47  [key=2, style=dotted];
m14_389 -> m14_390  [key=0, style=solid];
m14_389 -> m14_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_387 -> m14_388  [key=0, style=solid];
m14_387 -> m14_19  [key=2, style=dotted];
m14_388 -> m14_384  [color=blue, key=0, style=bold];
m14_390 -> m14_391  [key=0, style=solid];
m14_390 -> m14_380  [key=2, style=dotted];
m14_391 -> m14_392  [key=0, style=solid];
m14_391 -> m14_380  [key=2, style=dotted];
m14_392 -> m14_389  [color=blue, key=0, style=bold];
m14_396 -> m14_397  [key=0, style=solid];
m14_396 -> m14_398  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_397 -> m14_398  [key=0, style=solid];
m14_397 -> m14_49  [key=2, style=dotted];
m14_397 -> m14_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_398 -> m14_399  [key=0, style=solid];
m14_398 -> m14_13  [key=2, style=dotted];
m14_398 -> m14_47  [key=2, style=dotted];
m14_401 -> m14_402  [key=0, style=solid];
m14_401 -> m14_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_401 -> m14_404  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_399 -> m14_400  [key=0, style=solid];
m14_399 -> m14_19  [key=2, style=dotted];
m14_400 -> m14_396  [color=blue, key=0, style=bold];
m14_402 -> m14_403  [key=0, style=solid];
m14_402 -> m14_380  [key=2, style=dotted];
m14_403 -> m14_404  [key=0, style=solid];
m14_403 -> m14_380  [key=2, style=dotted];
m14_404 -> m14_405  [key=0, style=solid];
m14_404 -> m14_406  [key=2, style=dotted];
m14_405 -> m14_401  [color=blue, key=0, style=bold];
m14_410 -> m14_411  [key=0, style=solid];
m14_410 -> m14_412  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_411 -> m14_412  [key=0, style=solid];
m14_411 -> m14_49  [key=2, style=dotted];
m14_411 -> m14_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_412 -> m14_413  [key=0, style=solid];
m14_412 -> m14_13  [key=2, style=dotted];
m14_412 -> m14_47  [key=2, style=dotted];
m14_415 -> m14_416  [key=0, style=solid];
m14_415 -> m14_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_413 -> m14_414  [key=0, style=solid];
m14_413 -> m14_19  [key=2, style=dotted];
m14_414 -> m14_410  [color=blue, key=0, style=bold];
m14_416 -> m14_417  [key=0, style=solid];
m14_416 -> m14_380  [key=2, style=dotted];
m14_417 -> m14_418  [key=0, style=solid];
m14_417 -> m14_406  [key=2, style=dotted];
m14_418 -> m14_415  [color=blue, key=0, style=bold];
m14_422 -> m14_423  [key=0, style=solid];
m14_422 -> m14_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_423 -> m14_424  [key=0, style=solid];
m14_423 -> m14_49  [key=2, style=dotted];
m14_423 -> m14_427  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_424 -> m14_425  [key=0, style=solid];
m14_424 -> m14_13  [key=2, style=dotted];
m14_424 -> m14_47  [key=2, style=dotted];
m14_427 -> m14_428  [key=0, style=solid];
m14_427 -> m14_429  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_425 -> m14_426  [key=0, style=solid];
m14_425 -> m14_19  [key=2, style=dotted];
m14_426 -> m14_422  [color=blue, key=0, style=bold];
m14_428 -> m14_429  [key=0, style=solid];
m14_428 -> m14_380  [key=2, style=dotted];
m14_429 -> m14_430  [key=0, style=solid];
m14_429 -> m14_406  [key=2, style=dotted];
m14_430 -> m14_427  [color=blue, key=0, style=bold];
m14_434 -> m14_435  [key=0, style=solid];
m14_434 -> m14_436  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_435 -> m14_436  [key=0, style=solid];
m14_435 -> m14_49  [key=2, style=dotted];
m14_435 -> m14_442  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_436 -> m14_437  [key=0, style=solid];
m14_436 -> m14_46  [key=2, style=dotted];
m14_436 -> m14_441  [key=2, style=dotted];
m14_436 -> m14_438  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_436 -> m14_439  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_442 -> m14_443  [key=0, style=solid];
m14_442 -> m14_444  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_442 -> m14_445  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_442 -> m14_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_442 -> m14_447  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_437 -> m14_438  [key=0, style=solid];
m14_437 -> m14_19  [key=2, style=dotted];
m14_438 -> m14_439  [key=0, style=solid];
m14_438 -> m14_19  [key=2, style=dotted];
m14_439 -> m14_440  [key=0, style=solid];
m14_439 -> m14_19  [key=2, style=dotted];
m14_440 -> m14_434  [color=blue, key=0, style=bold];
m14_443 -> m14_444  [key=0, style=solid];
m14_443 -> m14_380  [key=2, style=dotted];
m14_444 -> m14_445  [key=0, style=solid];
m14_444 -> m14_380  [key=2, style=dotted];
m14_445 -> m14_446  [key=0, style=solid];
m14_445 -> m14_380  [key=2, style=dotted];
m14_446 -> m14_447  [key=0, style=solid];
m14_446 -> m14_380  [key=2, style=dotted];
m14_447 -> m14_448  [key=0, style=solid];
m14_447 -> m14_449  [key=2, style=dotted];
m14_448 -> m14_442  [color=blue, key=0, style=bold];
m14_453 -> m14_454  [key=0, style=solid];
m14_453 -> m14_455  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_454 -> m14_455  [key=0, style=solid];
m14_454 -> m14_49  [key=2, style=dotted];
m14_454 -> m14_458  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_455 -> m14_456  [key=0, style=solid];
m14_455 -> m14_13  [key=2, style=dotted];
m14_455 -> m14_47  [key=2, style=dotted];
m14_458 -> m14_459  [key=0, style=solid];
m14_458 -> m14_460  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_458 -> m14_461  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_458 -> m14_462  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_456 -> m14_457  [key=0, style=solid];
m14_456 -> m14_19  [key=2, style=dotted];
m14_457 -> m14_453  [color=blue, key=0, style=bold];
m14_459 -> m14_460  [key=0, style=solid];
m14_459 -> m14_380  [key=2, style=dotted];
m14_460 -> m14_461  [key=0, style=solid];
m14_460 -> m14_380  [key=2, style=dotted];
m14_461 -> m14_462  [key=0, style=solid];
m14_461 -> m14_380  [key=2, style=dotted];
m14_462 -> m14_463  [key=0, style=solid];
m14_462 -> m14_449  [key=2, style=dotted];
m14_463 -> m14_458  [color=blue, key=0, style=bold];
m14_467 -> m14_468  [key=0, style=solid];
m14_467 -> m14_469  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_468 -> m14_469  [key=0, style=solid];
m14_468 -> m14_49  [key=2, style=dotted];
m14_468 -> m14_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_469 -> m14_470  [key=0, style=solid];
m14_469 -> m14_13  [key=2, style=dotted];
m14_469 -> m14_47  [key=2, style=dotted];
m14_472 -> m14_473  [key=0, style=solid];
m14_472 -> m14_474  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_470 -> m14_471  [key=0, style=solid];
m14_470 -> m14_19  [key=2, style=dotted];
m14_471 -> m14_467  [color=blue, key=0, style=bold];
m14_473 -> m14_474  [key=0, style=solid];
m14_473 -> m14_380  [key=2, style=dotted];
m14_474 -> m14_475  [key=0, style=solid];
m14_474 -> m14_449  [key=2, style=dotted];
m14_475 -> m14_472  [color=blue, key=0, style=bold];
m14_479 -> m14_480  [key=0, style=solid];
m14_479 -> m14_481  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_480 -> m14_481  [key=0, style=solid];
m14_480 -> m14_49  [key=2, style=dotted];
m14_480 -> m14_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_481 -> m14_482  [key=0, style=solid];
m14_481 -> m14_13  [key=2, style=dotted];
m14_481 -> m14_47  [key=2, style=dotted];
m14_484 -> m14_485  [key=0, style=solid];
m14_484 -> m14_486  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_482 -> m14_483  [key=0, style=solid];
m14_482 -> m14_19  [key=2, style=dotted];
m14_483 -> m14_479  [color=blue, key=0, style=bold];
m14_485 -> m14_486  [key=0, style=solid];
m14_485 -> m14_380  [key=2, style=dotted];
m14_486 -> m14_487  [key=0, style=solid];
m14_486 -> m14_449  [key=2, style=dotted];
m14_487 -> m14_484  [color=blue, key=0, style=bold];
m14_491 -> m14_492  [key=0, style=solid];
m14_491 -> m14_493  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_492 -> m14_493  [key=0, style=solid];
m14_492 -> m14_49  [key=2, style=dotted];
m14_492 -> m14_496  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_493 -> m14_494  [key=0, style=solid];
m14_493 -> m14_13  [key=2, style=dotted];
m14_493 -> m14_47  [key=2, style=dotted];
m14_496 -> m14_497  [key=0, style=solid];
m14_496 -> m14_498  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m14_494 -> m14_495  [key=0, style=solid];
m14_494 -> m14_19  [key=2, style=dotted];
m14_495 -> m14_491  [color=blue, key=0, style=bold];
m14_497 -> m14_498  [key=0, style=solid];
m14_497 -> m14_380  [key=2, style=dotted];
m14_498 -> m14_499  [key=0, style=solid];
m14_498 -> m14_449  [key=2, style=dotted];
m14_499 -> m14_496  [color=blue, key=0, style=bold];
m14_503 -> m14_504  [key=0, style=solid];
m14_503 -> m14_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_504 -> m14_505  [key=0, style=solid];
m14_504 -> m14_13  [key=2, style=dotted];
m14_504 -> m14_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_508 -> m14_509  [key=0, style=solid];
m14_508 -> m14_49  [key=2, style=dotted];
m14_508 -> m14_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_505 -> m14_506  [key=0, style=solid];
m14_505 -> m14_19  [key=2, style=dotted];
m14_507 -> m14_508  [key=0, style=solid];
m14_506 -> m14_503  [color=blue, key=0, style=bold];
m14_509 -> m14_507  [color=blue, key=0, style=bold];
m14_510 -> m14_511  [key=0, style=solid];
m14_511 -> m14_512  [key=0, style=solid];
m14_511 -> m14_104  [key=2, style=dotted];
m14_511 -> m14_513  [key=2, style=dotted];
m14_512 -> m14_510  [color=blue, key=0, style=bold];
m14_517 -> m14_518  [key=0, style=solid];
m14_517 -> m14_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_518 -> m14_519  [key=0, style=solid];
m14_518 -> m14_13  [key=2, style=dotted];
m14_518 -> m14_521  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_522 -> m14_523  [key=0, style=solid];
m14_522 -> m14_49  [key=2, style=dotted];
m14_522 -> m14_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_519 -> m14_520  [key=0, style=solid];
m14_519 -> m14_19  [key=2, style=dotted];
m14_521 -> m14_522  [key=0, style=solid];
m14_520 -> m14_517  [color=blue, key=0, style=bold];
m14_523 -> m14_521  [color=blue, key=0, style=bold];
m14_524 -> m14_525  [key=0, style=solid];
m14_525 -> m14_526  [key=0, style=solid];
m14_525 -> m14_513  [key=2, style=dotted];
m14_526 -> m14_524  [color=blue, key=0, style=bold];
m14_530 -> m14_531  [key=0, style=solid];
m14_530 -> m14_532  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_531 -> m14_532  [key=0, style=solid];
m14_531 -> m14_49  [key=2, style=dotted];
m14_531 -> m14_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_532 -> m14_533  [key=0, style=solid];
m14_532 -> m14_46  [key=2, style=dotted];
m14_532 -> m14_536  [key=2, style=dotted];
m14_532 -> m14_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_532 -> m14_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_532 -> m14_534  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_537 -> m14_538  [key=0, style=solid];
m14_533 -> m14_534  [key=0, style=solid];
m14_533 -> m14_19  [key=2, style=dotted];
m14_540 -> m14_541  [key=0, style=solid];
m14_543 -> m14_544  [key=0, style=solid];
m14_534 -> m14_535  [key=0, style=solid];
m14_534 -> m14_19  [key=2, style=dotted];
m14_535 -> m14_530  [color=blue, key=0, style=bold];
m14_538 -> m14_539  [key=0, style=solid];
m14_538 -> m14_104  [key=2, style=dotted];
m14_538 -> m14_513  [key=2, style=dotted];
m14_539 -> m14_537  [color=blue, key=0, style=bold];
m14_541 -> m14_542  [key=0, style=solid];
m14_542 -> m14_540  [color=blue, key=0, style=bold];
m14_544 -> m14_545  [key=0, style=solid];
m14_545 -> m14_543  [color=blue, key=0, style=bold];
m14_549 -> m14_550  [key=0, style=solid];
m14_549 -> m14_553  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_550 -> m14_551  [key=0, style=solid];
m14_550 -> m14_13  [key=2, style=dotted];
m14_550 -> m14_552  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_553 -> m14_554  [key=0, style=solid];
m14_553 -> m14_49  [key=2, style=dotted];
m14_553 -> m14_555  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_551 -> m14_549  [color=blue, key=0, style=bold];
m14_552 -> m14_553  [key=0, style=solid];
m14_554 -> m14_552  [color=blue, key=0, style=bold];
m14_555 -> m14_556  [key=0, style=solid];
m14_556 -> m14_557  [key=0, style=solid];
m14_556 -> m14_558  [key=2, style=dotted];
m14_557 -> m14_555  [color=blue, key=0, style=bold];
m14_562 -> m14_563  [key=0, style=solid];
m14_562 -> m14_564  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_562 -> m14_565  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_563 -> m14_564  [key=0, style=solid];
m14_563 -> m14_49  [key=2, style=dotted];
m14_563 -> m14_568  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_564 -> m14_565  [key=0, style=solid];
m14_564 -> m14_49  [key=2, style=dotted];
m14_564 -> m14_571  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_565 -> m14_566  [key=0, style=solid];
m14_565 -> m14_13  [key=2, style=dotted];
m14_565 -> m14_47  [key=2, style=dotted];
m14_568 -> m14_569  [key=0, style=solid];
m14_571 -> m14_572  [key=0, style=solid];
m14_566 -> m14_567  [key=0, style=solid];
m14_566 -> m14_19  [key=2, style=dotted];
m14_567 -> m14_562  [color=blue, key=0, style=bold];
m14_569 -> m14_570  [key=0, style=solid];
m14_569 -> m14_104  [key=2, style=dotted];
m14_569 -> m14_513  [key=2, style=dotted];
m14_570 -> m14_568  [color=blue, key=0, style=bold];
m14_572 -> m14_573  [key=0, style=solid];
m14_572 -> m14_558  [key=2, style=dotted];
m14_573 -> m14_571  [color=blue, key=0, style=bold];
m14_577 -> m14_578  [key=0, style=solid];
m14_577 -> m14_582  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_578 -> m14_579  [key=0, style=solid];
m14_578 -> m14_13  [key=2, style=dotted];
m14_578 -> m14_581  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_582 -> m14_583  [key=0, style=solid];
m14_582 -> m14_49  [key=2, style=dotted];
m14_582 -> m14_584  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_579 -> m14_580  [key=0, style=solid];
m14_579 -> m14_19  [key=2, style=dotted];
m14_581 -> m14_582  [key=0, style=solid];
m14_580 -> m14_577  [color=blue, key=0, style=bold];
m14_583 -> m14_581  [color=blue, key=0, style=bold];
m14_584 -> m14_585  [key=0, style=solid];
m14_585 -> m14_586  [key=0, style=solid];
m14_585 -> m14_587  [key=2, style=dotted];
m14_585 -> m14_588  [key=2, style=dotted];
m14_586 -> m14_584  [color=blue, key=0, style=bold];
m14_592 -> m14_593  [key=0, style=solid];
m14_592 -> m14_597  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_593 -> m14_594  [key=0, style=solid];
m14_593 -> m14_13  [key=2, style=dotted];
m14_593 -> m14_596  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_597 -> m14_598  [key=0, style=solid];
m14_597 -> m14_49  [key=2, style=dotted];
m14_597 -> m14_599  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_594 -> m14_595  [key=0, style=solid];
m14_594 -> m14_19  [key=2, style=dotted];
m14_596 -> m14_597  [key=0, style=solid];
m14_595 -> m14_592  [color=blue, key=0, style=bold];
m14_598 -> m14_596  [color=blue, key=0, style=bold];
m14_599 -> m14_600  [key=0, style=solid];
m14_600 -> m14_601  [key=0, style=solid];
m14_600 -> m14_588  [key=2, style=dotted];
m14_601 -> m14_599  [color=blue, key=0, style=bold];
m14_605 -> m14_606  [key=0, style=solid];
m14_605 -> m14_607  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_605 -> m14_608  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_606 -> m14_607  [key=0, style=solid];
m14_606 -> m14_587  [key=2, style=dotted];
m14_606 -> m14_612  [color=darkseagreen4, key=1, label=items, style=dashed];
m14_606 -> m14_609  [color=darkseagreen4, key=1, label=items, style=dashed];
m14_607 -> m14_608  [key=0, style=solid];
m14_607 -> m14_49  [key=2, style=dotted];
m14_607 -> m14_611  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_608 -> m14_609  [key=0, style=solid];
m14_608 -> m14_13  [key=2, style=dotted];
m14_612 -> m14_613  [key=0, style=solid];
m14_612 -> m14_588  [key=2, style=dotted];
m14_609 -> m14_610  [key=0, style=solid];
m14_609 -> m14_19  [key=2, style=dotted];
m14_611 -> m14_612  [key=0, style=solid];
m14_610 -> m14_605  [color=blue, key=0, style=bold];
m14_613 -> m14_611  [color=blue, key=0, style=bold];
m14_617 -> m14_618  [key=0, style=solid];
m14_617 -> m14_621  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_618 -> m14_619  [key=0, style=solid];
m14_618 -> m14_13  [key=2, style=dotted];
m14_618 -> m14_620  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_621 -> m14_622  [key=0, style=solid];
m14_621 -> m14_49  [key=2, style=dotted];
m14_621 -> m14_623  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_619 -> m14_617  [color=blue, key=0, style=bold];
m14_620 -> m14_621  [key=0, style=solid];
m14_622 -> m14_620  [color=blue, key=0, style=bold];
m14_623 -> m14_624  [key=0, style=solid];
m14_624 -> m14_625  [key=0, style=solid];
m14_624 -> m14_626  [key=2, style=dotted];
m14_625 -> m14_623  [color=blue, key=0, style=bold];
m14_632 -> m14_633  [key=0, style=solid];
m14_632 -> m14_637  [key=2, style=dotted];
m14_631 -> m14_632  [key=0, style=solid];
m14_631 -> m14_633  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_631 -> m14_634  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_633 -> m14_634  [key=0, style=solid];
m14_633 -> m14_49  [key=2, style=dotted];
m14_633 -> m14_638  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_634 -> m14_635  [key=0, style=solid];
m14_634 -> m14_46  [key=2, style=dotted];
m14_634 -> m14_47  [key=2, style=dotted];
m14_638 -> m14_639  [key=0, style=solid];
m14_635 -> m14_636  [key=0, style=solid];
m14_635 -> m14_19  [key=2, style=dotted];
m14_636 -> m14_631  [color=blue, key=0, style=bold];
m14_639 -> m14_640  [key=0, style=solid];
m14_639 -> m14_626  [key=2, style=dotted];
m14_640 -> m14_638  [color=blue, key=0, style=bold];
m14_644 -> m14_645  [key=0, style=solid];
m14_644 -> m14_649  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_645 -> m14_646  [key=0, style=solid];
m14_645 -> m14_13  [key=2, style=dotted];
m14_645 -> m14_648  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_649 -> m14_650  [key=0, style=solid];
m14_649 -> m14_49  [key=2, style=dotted];
m14_649 -> m14_651  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_646 -> m14_647  [key=0, style=solid];
m14_646 -> m14_19  [key=2, style=dotted];
m14_648 -> m14_649  [key=0, style=solid];
m14_647 -> m14_644  [color=blue, key=0, style=bold];
m14_650 -> m14_648  [color=blue, key=0, style=bold];
m14_651 -> m14_652  [key=0, style=solid];
m14_652 -> m14_653  [key=0, style=solid];
m14_652 -> m14_654  [key=2, style=dotted];
m14_652 -> m14_655  [key=2, style=dotted];
m14_653 -> m14_651  [color=blue, key=0, style=bold];
m14_661 -> m14_662  [key=0, style=solid];
m14_661 -> m14_637  [key=2, style=dotted];
m14_660 -> m14_661  [key=0, style=solid];
m14_660 -> m14_662  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_660 -> m14_663  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_662 -> m14_663  [key=0, style=solid];
m14_662 -> m14_49  [key=2, style=dotted];
m14_662 -> m14_668  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_663 -> m14_664  [key=0, style=solid];
m14_663 -> m14_46  [key=2, style=dotted];
m14_663 -> m14_536  [key=2, style=dotted];
m14_663 -> m14_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_663 -> m14_674  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_663 -> m14_665  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_663 -> m14_666  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_668 -> m14_669  [key=0, style=solid];
m14_664 -> m14_665  [key=0, style=solid];
m14_664 -> m14_51  [key=2, style=dotted];
m14_664 -> m14_53  [key=2, style=dotted];
m14_671 -> m14_672  [key=0, style=solid];
m14_674 -> m14_675  [key=0, style=solid];
m14_665 -> m14_666  [key=0, style=solid];
m14_665 -> m14_51  [key=2, style=dotted];
m14_665 -> m14_53  [key=2, style=dotted];
m14_666 -> m14_667  [key=0, style=solid];
m14_666 -> m14_54  [key=2, style=dotted];
m14_667 -> m14_660  [color=blue, key=0, style=bold];
m14_669 -> m14_670  [key=0, style=solid];
m14_669 -> m14_654  [key=2, style=dotted];
m14_669 -> m14_655  [key=2, style=dotted];
m14_670 -> m14_668  [color=blue, key=0, style=bold];
m14_672 -> m14_673  [key=0, style=solid];
m14_673 -> m14_671  [color=blue, key=0, style=bold];
m14_675 -> m14_676  [key=0, style=solid];
m14_676 -> m14_674  [color=blue, key=0, style=bold];
m14_680 -> m14_681  [key=0, style=solid];
m14_680 -> m14_685  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_681 -> m14_682  [key=0, style=solid];
m14_681 -> m14_13  [key=2, style=dotted];
m14_681 -> m14_684  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_685 -> m14_686  [key=0, style=solid];
m14_685 -> m14_49  [key=2, style=dotted];
m14_685 -> m14_687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_682 -> m14_683  [key=0, style=solid];
m14_682 -> m14_19  [key=2, style=dotted];
m14_684 -> m14_685  [key=0, style=solid];
m14_683 -> m14_680  [color=blue, key=0, style=bold];
m14_686 -> m14_684  [color=blue, key=0, style=bold];
m14_687 -> m14_688  [key=0, style=solid];
m14_688 -> m14_689  [key=0, style=solid];
m14_688 -> m14_690  [key=2, style=dotted];
m14_688 -> m14_691  [key=2, style=dotted];
m14_689 -> m14_687  [color=blue, key=0, style=bold];
m14_697 -> m14_698  [key=0, style=solid];
m14_697 -> m14_637  [key=2, style=dotted];
m14_696 -> m14_697  [key=0, style=solid];
m14_696 -> m14_698  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_696 -> m14_699  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_698 -> m14_699  [key=0, style=solid];
m14_698 -> m14_49  [key=2, style=dotted];
m14_698 -> m14_704  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_699 -> m14_700  [key=0, style=solid];
m14_699 -> m14_46  [key=2, style=dotted];
m14_699 -> m14_536  [key=2, style=dotted];
m14_699 -> m14_707  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_699 -> m14_710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_699 -> m14_701  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_699 -> m14_702  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_704 -> m14_705  [key=0, style=solid];
m14_700 -> m14_701  [key=0, style=solid];
m14_700 -> m14_51  [key=2, style=dotted];
m14_700 -> m14_53  [key=2, style=dotted];
m14_707 -> m14_708  [key=0, style=solid];
m14_710 -> m14_711  [key=0, style=solid];
m14_701 -> m14_702  [key=0, style=solid];
m14_701 -> m14_51  [key=2, style=dotted];
m14_701 -> m14_53  [key=2, style=dotted];
m14_702 -> m14_703  [key=0, style=solid];
m14_702 -> m14_54  [key=2, style=dotted];
m14_703 -> m14_696  [color=blue, key=0, style=bold];
m14_705 -> m14_706  [key=0, style=solid];
m14_705 -> m14_654  [key=2, style=dotted];
m14_705 -> m14_691  [key=2, style=dotted];
m14_706 -> m14_704  [color=blue, key=0, style=bold];
m14_708 -> m14_709  [key=0, style=solid];
m14_709 -> m14_707  [color=blue, key=0, style=bold];
m14_711 -> m14_712  [key=0, style=solid];
m14_712 -> m14_710  [color=blue, key=0, style=bold];
m14_716 -> m14_717  [key=0, style=solid];
m14_716 -> m14_721  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_717 -> m14_718  [key=0, style=solid];
m14_717 -> m14_13  [key=2, style=dotted];
m14_717 -> m14_720  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_721 -> m14_722  [key=0, style=solid];
m14_721 -> m14_49  [key=2, style=dotted];
m14_721 -> m14_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_718 -> m14_719  [key=0, style=solid];
m14_718 -> m14_19  [key=2, style=dotted];
m14_720 -> m14_721  [key=0, style=solid];
m14_719 -> m14_716  [color=blue, key=0, style=bold];
m14_722 -> m14_720  [color=blue, key=0, style=bold];
m14_723 -> m14_724  [key=0, style=solid];
m14_724 -> m14_725  [key=0, style=solid];
m14_724 -> m14_690  [key=2, style=dotted];
m14_724 -> m14_726  [key=2, style=dotted];
m14_725 -> m14_723  [color=blue, key=0, style=bold];
m14_732 -> m14_733  [key=0, style=solid];
m14_732 -> m14_637  [key=2, style=dotted];
m14_731 -> m14_732  [key=0, style=solid];
m14_731 -> m14_733  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_731 -> m14_734  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_733 -> m14_734  [key=0, style=solid];
m14_733 -> m14_49  [key=2, style=dotted];
m14_733 -> m14_739  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_734 -> m14_735  [key=0, style=solid];
m14_734 -> m14_46  [key=2, style=dotted];
m14_734 -> m14_536  [key=2, style=dotted];
m14_734 -> m14_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_734 -> m14_745  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_734 -> m14_736  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_734 -> m14_737  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_739 -> m14_740  [key=0, style=solid];
m14_735 -> m14_736  [key=0, style=solid];
m14_735 -> m14_51  [key=2, style=dotted];
m14_735 -> m14_53  [key=2, style=dotted];
m14_742 -> m14_743  [key=0, style=solid];
m14_745 -> m14_746  [key=0, style=solid];
m14_736 -> m14_737  [key=0, style=solid];
m14_736 -> m14_51  [key=2, style=dotted];
m14_736 -> m14_53  [key=2, style=dotted];
m14_737 -> m14_738  [key=0, style=solid];
m14_737 -> m14_54  [key=2, style=dotted];
m14_738 -> m14_731  [color=blue, key=0, style=bold];
m14_740 -> m14_741  [key=0, style=solid];
m14_740 -> m14_654  [key=2, style=dotted];
m14_740 -> m14_726  [key=2, style=dotted];
m14_741 -> m14_739  [color=blue, key=0, style=bold];
m14_743 -> m14_744  [key=0, style=solid];
m14_744 -> m14_742  [color=blue, key=0, style=bold];
m14_746 -> m14_747  [key=0, style=solid];
m14_747 -> m14_745  [color=blue, key=0, style=bold];
m14_751 -> m14_752  [key=0, style=solid];
m14_751 -> m14_756  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_752 -> m14_753  [key=0, style=solid];
m14_752 -> m14_13  [key=2, style=dotted];
m14_752 -> m14_755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_756 -> m14_757  [key=0, style=solid];
m14_756 -> m14_49  [key=2, style=dotted];
m14_756 -> m14_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_753 -> m14_754  [key=0, style=solid];
m14_753 -> m14_19  [key=2, style=dotted];
m14_755 -> m14_756  [key=0, style=solid];
m14_754 -> m14_751  [color=blue, key=0, style=bold];
m14_757 -> m14_755  [color=blue, key=0, style=bold];
m14_758 -> m14_759  [key=0, style=solid];
m14_759 -> m14_760  [key=0, style=solid];
m14_759 -> m14_761  [key=2, style=dotted];
m14_760 -> m14_758  [color=blue, key=0, style=bold];
m14_767 -> m14_768  [key=0, style=solid];
m14_767 -> m14_52  [key=2, style=dotted];
m14_767 -> m14_637  [key=2, style=dotted];
m14_766 -> m14_767  [key=0, style=solid];
m14_766 -> m14_768  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_766 -> m14_769  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_768 -> m14_769  [key=0, style=solid];
m14_768 -> m14_49  [key=2, style=dotted];
m14_768 -> m14_773  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_769 -> m14_770  [key=0, style=solid];
m14_769 -> m14_46  [key=2, style=dotted];
m14_769 -> m14_536  [key=2, style=dotted];
m14_769 -> m14_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_769 -> m14_779  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_769 -> m14_771  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_773 -> m14_774  [key=0, style=solid];
m14_770 -> m14_771  [key=0, style=solid];
m14_770 -> m14_54  [key=2, style=dotted];
m14_776 -> m14_777  [key=0, style=solid];
m14_779 -> m14_780  [key=0, style=solid];
m14_771 -> m14_772  [key=0, style=solid];
m14_771 -> m14_73  [key=2, style=dotted];
m14_772 -> m14_766  [color=blue, key=0, style=bold];
m14_774 -> m14_775  [key=0, style=solid];
m14_774 -> m14_761  [key=2, style=dotted];
m14_775 -> m14_773  [color=blue, key=0, style=bold];
m14_777 -> m14_778  [key=0, style=solid];
m14_778 -> m14_776  [color=blue, key=0, style=bold];
m14_780 -> m14_781  [key=0, style=solid];
m14_781 -> m14_779  [color=blue, key=0, style=bold];
m14_785 -> m14_786  [key=0, style=solid];
m14_785 -> m14_790  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_786 -> m14_787  [key=0, style=solid];
m14_786 -> m14_13  [key=2, style=dotted];
m14_786 -> m14_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_790 -> m14_791  [key=0, style=solid];
m14_790 -> m14_49  [key=2, style=dotted];
m14_790 -> m14_792  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_787 -> m14_788  [key=0, style=solid];
m14_787 -> m14_19  [key=2, style=dotted];
m14_789 -> m14_790  [key=0, style=solid];
m14_788 -> m14_785  [color=blue, key=0, style=bold];
m14_791 -> m14_789  [color=blue, key=0, style=bold];
m14_792 -> m14_793  [key=0, style=solid];
m14_793 -> m14_794  [key=0, style=solid];
m14_793 -> m14_795  [key=2, style=dotted];
m14_794 -> m14_792  [color=blue, key=0, style=bold];
m14_801 -> m14_802  [key=0, style=solid];
m14_801 -> m14_52  [key=2, style=dotted];
m14_801 -> m14_637  [key=2, style=dotted];
m14_800 -> m14_801  [key=0, style=solid];
m14_800 -> m14_802  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_800 -> m14_803  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_802 -> m14_803  [key=0, style=solid];
m14_802 -> m14_49  [key=2, style=dotted];
m14_802 -> m14_807  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_803 -> m14_804  [key=0, style=solid];
m14_803 -> m14_46  [key=2, style=dotted];
m14_803 -> m14_536  [key=2, style=dotted];
m14_803 -> m14_810  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_803 -> m14_813  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_803 -> m14_805  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_807 -> m14_808  [key=0, style=solid];
m14_804 -> m14_805  [key=0, style=solid];
m14_804 -> m14_54  [key=2, style=dotted];
m14_810 -> m14_811  [key=0, style=solid];
m14_813 -> m14_814  [key=0, style=solid];
m14_805 -> m14_806  [key=0, style=solid];
m14_805 -> m14_73  [key=2, style=dotted];
m14_806 -> m14_800  [color=blue, key=0, style=bold];
m14_808 -> m14_809  [key=0, style=solid];
m14_808 -> m14_795  [key=2, style=dotted];
m14_809 -> m14_807  [color=blue, key=0, style=bold];
m14_811 -> m14_812  [key=0, style=solid];
m14_812 -> m14_810  [color=blue, key=0, style=bold];
m14_814 -> m14_815  [key=0, style=solid];
m14_815 -> m14_813  [color=blue, key=0, style=bold];
m14_819 -> m14_820  [key=0, style=solid];
m14_819 -> m14_824  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_820 -> m14_821  [key=0, style=solid];
m14_820 -> m14_13  [key=2, style=dotted];
m14_820 -> m14_823  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_824 -> m14_825  [key=0, style=solid];
m14_824 -> m14_49  [key=2, style=dotted];
m14_824 -> m14_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_821 -> m14_822  [key=0, style=solid];
m14_821 -> m14_19  [key=2, style=dotted];
m14_823 -> m14_824  [key=0, style=solid];
m14_822 -> m14_819  [color=blue, key=0, style=bold];
m14_825 -> m14_823  [color=blue, key=0, style=bold];
m14_826 -> m14_827  [key=0, style=solid];
m14_827 -> m14_828  [key=0, style=solid];
m14_827 -> m14_829  [key=2, style=dotted];
m14_828 -> m14_826  [color=blue, key=0, style=bold];
m14_835 -> m14_836  [key=0, style=solid];
m14_835 -> m14_52  [key=2, style=dotted];
m14_835 -> m14_637  [key=2, style=dotted];
m14_834 -> m14_835  [key=0, style=solid];
m14_834 -> m14_836  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_834 -> m14_837  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_836 -> m14_837  [key=0, style=solid];
m14_836 -> m14_49  [key=2, style=dotted];
m14_836 -> m14_841  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_837 -> m14_838  [key=0, style=solid];
m14_837 -> m14_46  [key=2, style=dotted];
m14_837 -> m14_536  [key=2, style=dotted];
m14_837 -> m14_844  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_837 -> m14_847  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_837 -> m14_839  [color=darkseagreen4, key=1, label=records, style=dashed];
m14_841 -> m14_842  [key=0, style=solid];
m14_838 -> m14_839  [key=0, style=solid];
m14_838 -> m14_54  [key=2, style=dotted];
m14_844 -> m14_845  [key=0, style=solid];
m14_839 -> m14_840  [key=0, style=solid];
m14_839 -> m14_73  [key=2, style=dotted];
m14_840 -> m14_834  [color=blue, key=0, style=bold];
m14_842 -> m14_843  [key=0, style=solid];
m14_842 -> m14_829  [key=2, style=dotted];
m14_843 -> m14_841  [color=blue, key=0, style=bold];
m14_845 -> m14_846  [key=0, style=solid];
m14_846 -> m14_844  [color=blue, key=0, style=bold];
m14_848 -> m14_849  [key=0, style=solid];
m14_849 -> m14_847  [color=blue, key=0, style=bold];
m14_381 -> m14_382  [key=0, style=solid];
m14_382 -> m14_383  [key=0, style=solid];
m14_382 -> m14_36  [key=2, style=dotted];
m14_382 -> m14_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_383 -> m14_381  [color=blue, key=0, style=bold];
m14_368 -> m14_369  [key=0, style=solid];
m14_369 -> m14_370  [key=0, style=solid];
m14_369 -> m14_36  [key=2, style=dotted];
m14_369 -> m14_371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_370 -> m14_368  [color=blue, key=0, style=bold];
m14_602 -> m14_603  [key=0, style=solid];
m14_603 -> m14_604  [key=0, style=solid];
m14_603 -> m14_36  [key=2, style=dotted];
m14_603 -> m14_605  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_604 -> m14_602  [color=blue, key=0, style=bold];
m14_796 -> m14_797  [key=0, style=solid];
m14_797 -> m14_798  [key=0, style=solid];
m14_797 -> m14_801  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_797 -> m14_797  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_798 -> m14_799  [key=0, style=solid];
m14_798 -> m14_36  [key=2, style=dotted];
m14_798 -> m14_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_799 -> m14_796  [color=blue, key=0, style=bold];
m14_356 -> m14_357  [key=0, style=solid];
m14_357 -> m14_358  [key=0, style=solid];
m14_357 -> m14_36  [key=2, style=dotted];
m14_357 -> m14_359  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_358 -> m14_356  [color=blue, key=0, style=bold];
m14_713 -> m14_714  [key=0, style=solid];
m14_714 -> m14_715  [key=0, style=solid];
m14_714 -> m14_36  [key=2, style=dotted];
m14_714 -> m14_716  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_715 -> m14_713  [color=blue, key=0, style=bold];
m14_224 -> m14_225  [key=0, style=solid];
m14_225 -> m14_226  [key=0, style=solid];
m14_225 -> m14_36  [key=2, style=dotted];
m14_225 -> m14_227  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_226 -> m14_224  [color=blue, key=0, style=bold];
m14_488 -> m14_489  [key=0, style=solid];
m14_489 -> m14_490  [key=0, style=solid];
m14_489 -> m14_36  [key=2, style=dotted];
m14_489 -> m14_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_490 -> m14_488  [color=blue, key=0, style=bold];
m14_24 -> m14_25  [key=0, style=solid];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_13  [key=2, style=dotted];
m14_25 -> m14_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_19  [key=2, style=dotted];
m14_27 -> m14_24  [color=blue, key=0, style=bold];
m14_331 -> m14_332  [key=0, style=solid];
m14_332 -> m14_333  [key=0, style=solid];
m14_332 -> m14_36  [key=2, style=dotted];
m14_332 -> m14_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_333 -> m14_331  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_13  [key=2, style=dotted];
m14_16 -> m14_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=2, style=dotted];
m14_18 -> m14_15  [color=blue, key=0, style=bold];
m14_305 -> m14_306  [key=0, style=solid];
m14_306 -> m14_307  [key=0, style=solid];
m14_306 -> m14_36  [key=2, style=dotted];
m14_306 -> m14_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_307 -> m14_305  [color=blue, key=0, style=bold];
m14_238 -> m14_239  [key=0, style=solid];
m14_239 -> m14_240  [key=0, style=solid];
m14_239 -> m14_36  [key=2, style=dotted];
m14_239 -> m14_241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_240 -> m14_238  [color=blue, key=0, style=bold];
m14_500 -> m14_501  [key=0, style=solid];
m14_501 -> m14_502  [key=0, style=solid];
m14_501 -> m14_36  [key=2, style=dotted];
m14_501 -> m14_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_502 -> m14_500  [color=blue, key=0, style=bold];
m14_727 -> m14_728  [key=0, style=solid];
m14_728 -> m14_729  [key=0, style=solid];
m14_728 -> m14_732  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_728 -> m14_728  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_729 -> m14_730  [key=0, style=solid];
m14_729 -> m14_36  [key=2, style=dotted];
m14_729 -> m14_731  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_730 -> m14_727  [color=blue, key=0, style=bold];
m14_762 -> m14_763  [key=0, style=solid];
m14_763 -> m14_764  [key=0, style=solid];
m14_763 -> m14_767  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_763 -> m14_763  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_764 -> m14_765  [key=0, style=solid];
m14_764 -> m14_36  [key=2, style=dotted];
m14_764 -> m14_766  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_765 -> m14_762  [color=blue, key=0, style=bold];
m14_49 -> m14_855  [key=0, style=solid];
m14_49 -> m14_856  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m14_855 -> m14_856  [key=0, style=solid];
m14_855 -> m14_23  [key=2, style=dotted];
m14_855 -> m14_857  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m14_856 -> m14_857  [key=0, style=solid];
m14_856 -> n45  [key=2, style=dotted];
m14_857 -> m14_858  [key=0, style=solid];
m14_857 -> m14_859  [key=2, style=dotted];
m14_858 -> m14_49  [color=blue, key=0, style=bold];
m14_180 -> m14_181  [key=0, style=solid];
m14_181 -> m14_182  [key=0, style=solid];
m14_181 -> m14_36  [key=2, style=dotted];
m14_181 -> m14_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_182 -> m14_180  [color=blue, key=0, style=bold];
m14_850 -> m14_851  [key=0, style=solid];
m14_850 -> m14_852  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m14_851 -> m14_852  [key=0, style=solid];
m14_851 -> m14_31  [key=2, style=dotted];
m14_852 -> m14_853  [key=0, style=solid];
m14_852 -> n45  [key=2, style=dotted];
m14_853 -> m14_850  [color=blue, key=0, style=bold];
m14_656 -> m14_657  [key=0, style=solid];
m14_657 -> m14_658  [key=0, style=solid];
m14_657 -> m14_661  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_657 -> m14_657  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_658 -> m14_659  [key=0, style=solid];
m14_658 -> m14_36  [key=2, style=dotted];
m14_658 -> m14_660  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_659 -> m14_656  [color=blue, key=0, style=bold];
m14_464 -> m14_465  [key=0, style=solid];
m14_465 -> m14_466  [key=0, style=solid];
m14_465 -> m14_36  [key=2, style=dotted];
m14_465 -> m14_467  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_466 -> m14_464  [color=blue, key=0, style=bold];
m14_212 -> m14_213  [key=0, style=solid];
m14_213 -> m14_214  [key=0, style=solid];
m14_213 -> m14_36  [key=2, style=dotted];
m14_213 -> m14_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_214 -> m14_212  [color=blue, key=0, style=bold];
m14_748 -> m14_749  [key=0, style=solid];
m14_749 -> m14_750  [key=0, style=solid];
m14_749 -> m14_36  [key=2, style=dotted];
m14_749 -> m14_751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_750 -> m14_748  [color=blue, key=0, style=bold];
m14_450 -> m14_451  [key=0, style=solid];
m14_451 -> m14_452  [key=0, style=solid];
m14_451 -> m14_36  [key=2, style=dotted];
m14_451 -> m14_453  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_452 -> m14_450  [color=blue, key=0, style=bold];
m14_431 -> m14_432  [key=0, style=solid];
m14_432 -> m14_433  [key=0, style=solid];
m14_432 -> m14_36  [key=2, style=dotted];
m14_432 -> m14_434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_433 -> m14_431  [color=blue, key=0, style=bold];
m14_255 -> m14_256  [key=0, style=solid];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_36  [key=2, style=dotted];
m14_256 -> m14_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_257 -> m14_255  [color=blue, key=0, style=bold];
m14_281 -> m14_282  [key=0, style=solid];
m14_282 -> m14_283  [key=0, style=solid];
m14_282 -> m14_36  [key=2, style=dotted];
m14_282 -> m14_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_283 -> m14_281  [color=blue, key=0, style=bold];
m14_78 -> m14_79  [key=0, style=solid];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_79 -> m14_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_79 -> m14_33  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_36  [key=2, style=dotted];
m14_80 -> m14_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_81 -> m14_78  [color=blue, key=0, style=bold];
m14_60 -> m14_61  [key=0, style=solid];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_61 -> m14_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_61 -> m14_61  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_36  [key=2, style=dotted];
m14_62 -> m14_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_63 -> m14_60  [color=blue, key=0, style=bold];
m14_527 -> m14_528  [key=0, style=solid];
m14_528 -> m14_529  [key=0, style=solid];
m14_528 -> m14_36  [key=2, style=dotted];
m14_528 -> m14_530  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_529 -> m14_527  [color=blue, key=0, style=bold];
m14_574 -> m14_575  [key=0, style=solid];
m14_575 -> m14_576  [key=0, style=solid];
m14_575 -> m14_36  [key=2, style=dotted];
m14_575 -> m14_577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_576 -> m14_574  [color=blue, key=0, style=bold];
m14_344 -> m14_345  [key=0, style=solid];
m14_345 -> m14_346  [key=0, style=solid];
m14_345 -> m14_36  [key=2, style=dotted];
m14_345 -> m14_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_346 -> m14_344  [color=blue, key=0, style=bold];
m14_641 -> m14_642  [key=0, style=solid];
m14_642 -> m14_643  [key=0, style=solid];
m14_642 -> m14_36  [key=2, style=dotted];
m14_642 -> m14_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_643 -> m14_641  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_33 -> m14_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_33 -> m14_33  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_36  [key=2, style=dotted];
m14_34 -> m14_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_35 -> m14_32  [color=blue, key=0, style=bold];
m14_546 -> m14_547  [key=0, style=solid];
m14_547 -> m14_548  [key=0, style=solid];
m14_547 -> m14_36  [key=2, style=dotted];
m14_547 -> m14_549  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_548 -> m14_546  [color=blue, key=0, style=bold];
m14_860 -> m14_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_34  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_40  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_41  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_62  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_67  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_68  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_80  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_89  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_90  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_93  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_121  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_129  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_130  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_154  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_160  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_161  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_181  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_184  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_198  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_213  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_225  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_239  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_242  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_259  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_271  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_282  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_285  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_297  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_309  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_320  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_332  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_335  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_348  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_357  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_360  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_369  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_372  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_385  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_394  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_397  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_408  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_411  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_420  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_432  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_435  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_451  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_454  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_465  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_468  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_477  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_480  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_489  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_492  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_501  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_504  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_515  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_518  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_522  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_528  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_547  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_550  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_553  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_560  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_563  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_564  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_575  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_578  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_582  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_590  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_593  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_597  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_603  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_607  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_615  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_621  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_633  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_645  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_649  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_658  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_662  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_678  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_681  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_685  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_694  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_698  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_714  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_717  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_729  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_733  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_749  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_764  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_768  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_786  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_798  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_802  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_817  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_824  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_832  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_836  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_860 -> m14_855  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", style=dashed];
m14_861 -> m14_38  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_861 -> m14_39  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_862 -> m14_56  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_863 -> m14_65  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_863 -> m14_66  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_864 -> m14_75  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_865 -> m14_83  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_865 -> m14_84  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_866 -> m14_116  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_867 -> m14_116  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_868 -> m14_124  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_869 -> m14_150  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m14_870 -> m14_150  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_871 -> m14_508  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_872 -> m14_522  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_873 -> m14_553  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_874 -> m14_582  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_875 -> m14_597  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_876 -> m14_612  [color=darkseagreen4, key=1, label=items, style=dashed];
m14_877 -> m14_621  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_878 -> m14_632  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_879 -> m14_649  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_880 -> m14_661  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_881 -> m14_685  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_882 -> m14_697  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_883 -> m14_721  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_884 -> m14_732  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_885 -> m14_756  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_886 -> m14_767  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_887 -> m14_790  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_888 -> m14_801  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_889 -> m14_824  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_890 -> m14_835  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
}
