digraph  {
n52 [label="HangFire.Core.Tests.Common.JobHelperFacts", span=""];
n0 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12"];
n1 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", label="var result = JobHelper.ToJson(null)", span="14-14"];
n2 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", label="Assert.Null(result)", span="15-15"];
n4 [cluster="HangFire.Common.JobHelper.ToJson(object)", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
n3 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesNullValueAsNull()", span="12-12"];
n5 [cluster="Unk.Null", label="Entry Unk.Null", span=""];
n6 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
n7 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", label="var result = JobHelper.ToJson(''hello'')", span="21-21"];
n8 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", label="Assert.Equal(''\''hello\'''', result)", span="22-22"];
n9 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToJson_EncodesGivenValue_ToJsonString()", span="19-19"];
n10 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n11 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
n12 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", color=red, community=0, label="1: var stringResult = JobHelper.FromJson<string>(null)", span="28-28"];
n13 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", label="var intResult = JobHelper.FromJson<int>(null)", span="29-29"];
n17 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
n14 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", color=red, community=0, label="1: Assert.Null(stringResult)", span="31-31"];
n15 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", label="Assert.Equal(0, intResult)", span="32-32"];
n16 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesNullAsDefaultValue()", span="26-26"];
n18 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
n19 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", label="var result = JobHelper.FromJson<string>(''\''hello\'''')", span="38-38"];
n20 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", label="Assert.Equal(''hello'', result)", span="39-39"];
n21 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromJson_DecodesFromJsonString()", span="36-36"];
n22 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43"];
n23 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", color=red, community=0, label="1: var result = JobHelper.ToTimestamp(\r\n                _wellKnownDateTime)", span="45-46"];
n24 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", label="Assert.Equal(_wellKnownTimestamp, result)", span="48-48"];
n26 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
n25 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsUnixTimestamp_OfTheGivenDateTime()", span="43-43"];
n27 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
n28 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", color=red, community=0, label="1: var result = JobHelper.FromTimestamp(_wellKnownTimestamp)", span="54-54"];
n29 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", color=red, community=0, label="1: Assert.Equal(_wellKnownDateTime, result)", span="56-56"];
n31 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
n30 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToTimestamp_ReturnsDateTime_ForGivenTimestamp()", span="52-52"];
n32 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60"];
n33 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", label="var result = JobHelper.ToStringTimestamp(_wellKnownDateTime)", span="62-62"];
n34 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", label="Assert.Equal(_wellKnownTimestamp.ToString(), result)", span="64-64"];
n36 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
n35 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.ToStringTimestamp_ReturnsCorrectValue()", span="60-60"];
n37 [cluster="int.ToString()", label="Entry int.ToString()", span="0-0"];
n38 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68"];
n39 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", label="var result = JobHelper.FromStringTimestamp(_wellKnownTimestamp.ToString())", span="70-70"];
n40 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", label="Assert.Equal(_wellKnownDateTime, result)", span="72-72"];
n42 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
n41 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromStringTimestamp_ReturnsCorrectValue()", span="68-68"];
n43 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76"];
n44 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", label="Assert.Null(JobHelper.FromNullableStringTimestamp(''''))", span="78-78"];
n45 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", label="Assert.Null(JobHelper.FromNullableStringTimestamp(null))", span="79-79"];
n47 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
n46 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsNull_IfNullOrEmptyStringGiven()", span="76-76"];
n48 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", label="Entry HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
n49 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", label="var result = JobHelper.FromNullableStringTimestamp(_wellKnownTimestamp.ToString())", span="85-85"];
n50 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", label="Assert.Equal(_wellKnownDateTime, result)", span="86-86"];
n51 [cluster="HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", label="Exit HangFire.Core.Tests.Common.JobHelperFacts.FromNullableStringTimestamp_ReturnsCorrectValue_OnNonNullString()", span="83-83"];
d6 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=green, community=0, label="0: var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''Hangfire.SqlServer.Install.sql'')", span="46-48"];
d4 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="!IsSqlEditionSupported(connection)", span="41-41"];
d22 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81"];
d7 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 5;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="50-50"];
d31 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", color=green, community=0, label="2: var stream = assembly.GetManifestResourceStream(resourceName)", span="83-83"];
d32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="stream == null", span="85-85"];
d37 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
d34 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="var reader = new StreamReader(stream)", span="93-93"];
d0 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
d3 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Log.Info(''Start installing Hangfire SQL objects...'')", span="39-39"];
d5 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="43-43"];
d20 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="75-75"];
d36 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="81-81"];
d33 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="87-90"];
d8 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="var i = 0", span="52-52"];
d23 [cluster="string.Replace(string, string)", label="Entry string.Replace(string, string)", span="0-0"];
d10 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="connection.Execute(script)", span="56-56"];
d35 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", label="return reader.ReadToEnd();", span="95-95"];
d40 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
d17 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
d1 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="connection == null", span="37-37"];
d19 [cluster="Hangfire.Logging.ILog.Info(string)", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
d21 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
d28 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="Exit Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="75-75"];
d26 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="77-77"];
d38 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d39 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d9 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="i < RetryAttempts", span="52-52"];
d15 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="i++", span="52-52"];
d16 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Log.Info(''Hangfire SQL objects installed.'')", span="72-72"];
d24 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
d41 [cluster="System.IO.StreamReader.ReadToEnd()", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
d11 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label=SqlException, span="59-59"];
d2 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="throw new ArgumentNullException(''connection'');", span="37-37"];
d14 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="throw;", span="67-67"];
d27 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.SqlAzure;", span="78-78"];
d29 [cluster="Unk.>", label="Entry Unk.>", span=""];
d30 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
d13 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="Log.WarnException(''Deadlock occurred during automatic migration execution. Retrying...'', ex)", span="63-63"];
d12 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", label="ex.ErrorCode == 1205", span="61-61"];
d18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d25 [cluster="Unk.WarnException", label="Entry Unk.WarnException", span=""];
m0_87 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m0_88 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<OperationCanceledException>()", span="92-92"];
m0_89 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="93-93"];
m0_90 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="95-95"];
m0_91 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="97-97"];
m0_92 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m0_22 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="65-65"];
m0_7 [cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="WriteResponse()", span="45-45"];
m0_8 [cluster="HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", color=red, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="1: Exit HangFire.Web.EmbeddedResourceHandler.ProcessRequest()", span="30-30"];
m0_9 [cluster="Unk.SetCacheability", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.SetCacheability", span=""];
m0_10 [cluster="Unk.SetExpires", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.SetExpires", span=""];
m0_0 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m0_4 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="1: Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m0_3 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_cts = new CancellationTokenSource()", span="19-19"];
m0_5 [cluster="Mock<IServerComponent>.cstr", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m0_1 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component = new Mock<IServerComponent>()", span="17-17"];
m0_2 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_maxRetryAttempts = 3", span="18-18"];
m0_6 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m0_30 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="47-47"];
m0_12 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResponse()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit HangFire.Web.EmbeddedResourceHandler.WriteResponse()", span="48-48"];
m0_13 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="27-27"];
m0_24 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="43-43"];
m0_21 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m0_23 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41"];
m0_25 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", span="45-45"];
m0_18 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="35-35"];
m0_19 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", color=red, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="2: Assert.Same(_component.Object, wrapper.InnerComponent)", span="37-37"];
m0_16 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="31-31"];
m0_20 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m0_15 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="27-27"];
m0_17 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m0_14 [cluster="lambda expression", color=red, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="1: new AutomaticRetryServerComponentWrapper(null)", span="27-27"];
m0_26 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(It.Is<CancellationToken>(y => y == _cts.Token)))", span="47-47"];
m0_77 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m0_11 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResponse()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResponse()", span="48-48"];
m0_29 [cluster="Unk.Verify", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Verify", span=""];
m0_28 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m0_113 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_27 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41"];
m0_54 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m0_55 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="66-66"];
m0_56 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_maxRetryAttempts = 0", span="67-67"];
m0_57 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="68-68"];
m0_58 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="70-70"];
m0_59 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="72-74"];
m0_60 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m0_43 [cluster="Unk.Setup", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Setup", span=""];
m0_32 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="47-47"];
m0_44 [cluster="Unk.Exactly", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m0_105 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="105-105"];
m0_31 [cluster="System.Math.Min(long, long)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m0_34 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="HangFire.Web.EmbeddedResourceHandler", span=""];
m0_35 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="y == _cts.Token", span="47-47"];
m0_36 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="47-47"];
m0_45 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="53-53"];
m0_49 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", span="56-56"];
m0_48 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="56-56"];
m0_51 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="58-59"];
m0_46 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="53-53"];
m0_47 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="53-53"];
m0_50 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="56-56"];
m0_52 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="58-59"];
m0_53 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="58-59"];
m0_61 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="66-66"];
m0_65 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", span="70-70"];
m0_64 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="70-70"];
m0_67 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="72-73"];
m0_62 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="66-66"];
m0_63 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="66-66"];
m0_66 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="70-70"];
m0_68 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="72-73"];
m0_69 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="72-73"];
m0_82 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", span="84-84"];
m0_78 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="81-81"];
m0_81 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="84-84"];
m0_84 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="86-86"];
m0_79 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="81-81"];
m0_80 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="81-81"];
m0_83 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="84-84"];
m0_85 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="86-86"];
m0_86 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="86-86"];
m0_93 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="92-92"];
m0_97 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", span="95-95"];
m0_96 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="95-95"];
m0_99 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="97-97"];
m0_94 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="92-92"];
m0_95 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="92-92"];
m0_98 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="95-95"];
m0_100 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="97-97"];
m0_101 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="97-97"];
m0_106 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="TimeSpan.Zero", span="105-105"];
m0_107 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="105-105"];
m0_37 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m0_38 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="53-53"];
m0_39 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="54-54"];
m0_40 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", span="56-56"];
m0_41 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Exactly(_maxRetryAttempts))", span="58-60"];
m0_42 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m0_33 [cluster="Unk.Execute", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Execute", span=""];
m0_104 [cluster="AutomaticRetryServerComponentWrapper.cstr", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry AutomaticRetryServerComponentWrapper.cstr", span=""];
m0_70 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m0_71 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="80-80"];
m0_72 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="81-81"];
m0_74 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", span="84-84"];
m0_73 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_cts.Cancel()", span="82-82"];
m0_75 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="86-86"];
m0_76 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m0_112 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m0_102 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", color=red, community=2, file="AutomaticRetryServerComponentWrapperFacts.cs", label="1: return new AutomaticRetryServerComponentWrapper(_component.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", span="102-106"];
m0_103 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m0_108 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112"];
m0_109 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="token.WaitHandle.WaitOne(Timeout.Infinite)", span="114-114"];
m0_110 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="token.ThrowIfCancellationRequested()", span="115-115"];
m0_111 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.WaitingComponent.Execute(System.Threading.CancellationToken)", span="112-112"];
m0_114 [file="AutomaticRetryServerComponentWrapperFacts.cs", label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", span=""];
m0_115 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m0_116 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m0_117 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m0_118 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m1_11 [cluster="Unk.Setup", file="BackgroundJobServer.cs", label="Entry Unk.Setup", span=""];
m1_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_37 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m1_10 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", span="13-13"];
m1_314 [cluster="Unk.Any", file="BackgroundJobServer.cs", label="Entry Unk.Any", span=""];
m1_350 [cluster="Mock<StateMachine>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<StateMachine>.cstr", span=""];
m1_12 [cluster="Unk.Returns", file="BackgroundJobServer.cs", label="Entry Unk.Returns", span=""];
m1_342 [cluster="Unk.Apply", file="BackgroundJobServer.cs", label="Entry Unk.Apply", span=""];
m1_153 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m1_154 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181"];
m1_155 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="183-183"];
m1_156 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186"];
m1_159 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194"];
m1_157 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="Assert.False(result)", span="189-189"];
m1_158 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190"];
m1_160 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m1_270 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m1_271 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="317-317"];
m1_272 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318"];
m1_274 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324"];
m1_275 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326"];
m1_276 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329"];
m1_273 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="var electedState = new Mock<IState>()", span="319-319"];
m1_277 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m1_16 [cluster="System.Console.WriteLine(string)", file="BackgroundJobServer.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_284 [cluster="Unk.ElectState", file="BackgroundJobServer.cs", label="Entry Unk.ElectState", span=""];
m1_99 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m1_348 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="BackgroundJobServer.cs", label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400"];
m1_349 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m1_242 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="BackgroundJobServer.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m1_27 [cluster="Unk.>", file="BackgroundJobServer.cs", label="Entry Unk.>", span=""];
m1_210 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m1_211 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254"];
m1_212 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="256-256"];
m1_213 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259"];
m1_214 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263"];
m1_215 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269"];
m1_216 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="Assert.True(result)", span="271-271"];
m1_217 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m1_28 [cluster="Unk.CreateExpiredJob", file="BackgroundJobServer.cs", label="Entry Unk.CreateExpiredJob", span=""];
m1_262 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m1_38 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m1_39 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="BackgroundJobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56"];
m1_40 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58"];
m1_41 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m1_45 [cluster="StateMachine.cstr", file="BackgroundJobServer.cs", label="Entry StateMachine.cstr", span=""];
m1_129 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m1_130 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachine()", span="155-155"];
m1_131 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158"];
m1_132 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: Assert.Equal(''fromStates'', exception.ParamName)", span="160-160"];
m1_133 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m1_161 [cluster="Unk.False", file="BackgroundJobServer.cs", label="Entry Unk.False", span=""];
m1_18 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="2: x.Name", span="33-33"];
m1_19 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="33-33"];
m1_20 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="35-35"];
m1_21 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.CreateWriteTransaction()", span="35-35"];
m1_111 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m1_112 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var stateMachine = CreateStateMachine()", span="133-133"];
m1_113 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136"];
m1_114 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: Assert.Equal(''jobId'', exception.ParamName)", span="138-138"];
m1_115 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m1_288 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m1_289 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="335-335"];
m1_290 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336"];
m1_292 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341"];
m1_293 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344"];
m1_294 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350"];
m1_291 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="var exception = new NotSupportedException()", span="337-337"];
m1_295 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="Assert.False(result)", span="351-351"];
m1_296 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m1_17 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="33-33"];
m1_255 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m1_256 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="303-303"];
m1_257 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304"];
m1_258 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307"];
m1_259 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310"];
m1_260 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="Assert.True(result)", span="311-311"];
m1_261 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m1_315 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m1_316 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="var handler1 = new Mock<IStateHandler>()", span="358-358"];
m1_317 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359"];
m1_320 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="_handlers.Add(handler1.Object)", span="364-364"];
m1_325 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381"];
m1_318 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="var handler2 = new Mock<IStateHandler>()", span="361-361"];
m1_319 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362"];
m1_321 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="_handlers.Add(handler2.Object)", span="365-365"];
m1_322 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachine()", span="367-367"];
m1_323 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368"];
m1_324 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372"];
m1_326 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m1_13 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="30-30"];
m1_14 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="1: Console.WriteLine(''Hello'')", span="30-30"];
m1_15 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="30-30"];
m1_186 [cluster="System.Console.WriteLine()", file="BackgroundJobServer.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m1_235 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m1_236 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284"];
m1_237 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="286-286"];
m1_238 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289"];
m1_239 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295"];
m1_240 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="Assert.False(result)", span="297-297"];
m1_241 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m1_103 [cluster="Unk.ChangeState", file="BackgroundJobServer.cs", label="Entry Unk.ChangeState", span=""];
m1_297 [cluster="System.NotSupportedException.NotSupportedException()", file="BackgroundJobServer.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m1_94 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m1_95 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=red, community=0, file="BackgroundJobServer.cs", label="2: var stateMachine = CreateStateMachineMock()", span="113-113"];
m1_96 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=red, community=0, file="BackgroundJobServer.cs", label="1: stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115"];
m1_97 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=red, community=0, file="BackgroundJobServer.cs", label="1: stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120"];
m1_98 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m1_329 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BackgroundJobServer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_328 [cluster="Unk.Add", file="BackgroundJobServer.cs", label="Entry Unk.Add", span=""];
m1_269 [cluster="Unk.ApplyState", file="BackgroundJobServer.cs", label="Entry Unk.ApplyState", span=""];
m1_9 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="BackgroundJobServer.cs", label="_exception = ex", span="27-27"];
m1_137 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m1_138 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="var disposableMock = new Mock<IDisposable>()", span="166-166"];
m1_139 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.AcquireJobLock(''1'')).Returns(disposableMock.Object)", span="167-167"];
m1_142 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="disposableMock.Verify(x => x.Dispose())", span="173-173"];
m1_140 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachine()", span="169-169"];
m1_141 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="171-171"];
m1_143 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m1_120 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m1_121 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var stateMachine = CreateStateMachine()", span="144-144"];
m1_122 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' }))", span="146-147"];
m1_123 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: Assert.Equal(''toState'', exception.ParamName)", span="149-149"];
m1_124 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m1_190 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m1_191 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230"];
m1_192 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="232-232"];
m1_193 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234"];
m1_194 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237"];
m1_195 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="240-240"];
m1_196 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="Assert.False(result)", span="241-241"];
m1_197 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m1_51 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m1_346 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="BackgroundJobServer.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389"];
m1_347 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m1_0 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", span="13-13"];
m1_1 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=red, community=0, file="BackgroundJobServer.cs", label="2: Type jobType = null", span="17-17"];
m1_2 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=green, community=0, file="BackgroundJobServer.cs", label="2: type == ''TestJob''", span="19-19"];
m1_3 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=green, community=0, file="BackgroundJobServer.cs", label="2: jobType = typeof (TestJob)", span="19-19"];
m1_4 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=red, community=0, file="BackgroundJobServer.cs", label="1: type == ''CustomConstructorJob''", span="20-20"];
m1_5 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="BackgroundJobServer.cs", label="jobType = typeof (CustomConstructorJob)", span="20-20"];
m1_6 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=green, community=0, file="BackgroundJobServer.cs", label="2: var activator = new JobActivator()", span="22-22"];
m1_7 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=green, community=0, file="BackgroundJobServer.cs", label="2: _jobInstance = activator.ActivateJob(jobType)", span="23-23"];
m1_152 [cluster="Unk.Dispose", file="BackgroundJobServer.cs", label="Entry Unk.Dispose", span=""];
m1_298 [cluster="Unk.Throws", file="BackgroundJobServer.cs", label="Entry Unk.Throws", span=""];
m1_24 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="37-40"];
m1_107 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m1_108 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var stateMachine = CreateStateMachine()", span="126-126"];
m1_109 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", color=red, community=0, file="BackgroundJobServer.cs", label="1: Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127"];
m1_110 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m1_73 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m1_74 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="BackgroundJobServer.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97"];
m1_75 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="BackgroundJobServer.cs", label="_parameters.Add(''Name'', ''Value'')", span="98-98"];
m1_77 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="BackgroundJobServer.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102"];
m1_76 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m1_78 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=red, community=0, file="BackgroundJobServer.cs", label="1: _connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107"];
m1_79 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m1_148 [cluster="Unk.AcquireJobLock", file="BackgroundJobServer.cs", label="Entry Unk.AcquireJobLock", span=""];
m1_23 [cluster="Unk.CreateWriteTransaction", file="BackgroundJobServer.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m1_119 [cluster="Unk.TryToChangeState", file="BackgroundJobServer.cs", label="Entry Unk.TryToChangeState", span=""];
m1_55 [cluster="Unk.CreateInState", file="BackgroundJobServer.cs", label="Entry Unk.CreateInState", span=""];
m1_144 [cluster="Mock<IDisposable>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m1_343 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="376-380"];
m1_22 [cluster="Unk.IsNotNull", file="BackgroundJobServer.cs", label="Entry Unk.IsNotNull", span=""];
m1_25 [cluster="lambda expression", file="BackgroundJobServer.cs", label="HangFire.Tests.JobActivatorSteps", span=""];
m1_26 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="37-40"];
m1_34 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="47-47"];
m1_35 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new StateMachine(null, _handlers, _filters)", span="47-47"];
m1_36 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="47-47"];
m1_42 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="56-56"];
m1_43 [cluster="lambda expression", file="BackgroundJobServer.cs", label="new StateMachine(_connection.Object, null, _filters)", span="56-56"];
m1_44 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="56-56"];
m1_53 [cluster="lambda expression", file="BackgroundJobServer.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67"];
m1_52 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="67-67"];
m1_54 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="67-67"];
m1_62 [cluster="lambda expression", file="BackgroundJobServer.cs", label="stateMachine.CreateInState(_job, null, _state.Object)", span="78-78"];
m1_61 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="78-78"];
m1_63 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="78-78"];
m1_70 [cluster="lambda expression", file="BackgroundJobServer.cs", label="stateMachine.CreateInState(_job, _parameters, null)", span="89-89"];
m1_69 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="89-89"];
m1_71 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="89-89"];
m1_82 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="97-97"];
m1_85 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="104-107"];
m1_83 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine(''SomeString'')", span="97-97"];
m1_84 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="97-97"];
m1_86 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="1: x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107"];
m1_87 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="104-107"];
m1_88 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="105-105"];
m1_91 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="106-106"];
m1_89 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="2: j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105"];
m1_90 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="105-105"];
m1_92 [cluster="lambda expression", file="BackgroundJobServer.cs", label="d[''Name''] == ''Value''", span="106-106"];
m1_93 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="106-106"];
m1_100 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="117-120"];
m1_101 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="1: x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120"];
m1_102 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="117-120"];
m1_104 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="118-118"];
m1_105 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="2: sc.JobId == JobId && sc.Job == _job", span="118-118"];
m1_106 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="118-118"];
m1_117 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="1: stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136"];
m1_116 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="136-136"];
m1_118 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="136-136"];
m1_126 [cluster="lambda expression", file="BackgroundJobServer.cs", label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147"];
m1_125 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="147-147"];
m1_127 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="147-147"];
m1_135 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServer.cs", label="1: stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158"];
m1_134 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="158-158"];
m1_136 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="158-158"];
m1_145 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="167-167"];
m1_149 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="173-173"];
m1_146 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.AcquireJobLock(''1'')", span="167-167"];
m1_147 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="167-167"];
m1_150 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.Dispose()", span="173-173"];
m1_151 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="173-173"];
m1_162 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="180-180"];
m1_166 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="190-190"];
m1_169 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="193-193"];
m1_163 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetJobData(It.IsAny<string>())", span="180-180"];
m1_164 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="180-180"];
m1_167 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetJobData(''1'')", span="190-190"];
m1_168 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="190-190"];
m1_170 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="193-193"];
m1_171 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="193-193"];
m1_180 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="201-201"];
m1_183 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="205-205"];
m1_187 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="217-217"];
m1_181 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetJobData(''1'')", span="201-201"];
m1_182 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="201-201"];
m1_184 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="205-205"];
m1_185 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="205-205"];
m1_188 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="217-217"];
m1_189 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="217-217"];
m1_198 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="225-225"];
m1_201 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="229-229"];
m1_204 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="233-233"];
m1_207 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="240-240"];
m1_199 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetJobData(''1'')", span="225-225"];
m1_200 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="225-225"];
m1_202 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="229-229"];
m1_203 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="229-229"];
m1_205 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="233-233"];
m1_206 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="233-233"];
m1_208 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="240-240"];
m1_209 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="240-240"];
m1_219 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="249-249"];
m1_222 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="253-253"];
m1_225 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="258-258"];
m1_228 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="266-269"];
m1_220 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetJobData(''1'')", span="249-249"];
m1_221 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="249-249"];
m1_223 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="253-253"];
m1_224 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="253-253"];
m1_226 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="258-258"];
m1_227 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="258-258"];
m1_229 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269"];
m1_230 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="266-269"];
m1_231 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="267-267"];
m1_232 [cluster="lambda expression", file="BackgroundJobServer.cs", label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267"];
m1_233 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="267-267"];
m1_243 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="278-278"];
m1_246 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="292-295"];
m1_244 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.GetJobData(''1'')", span="278-278"];
m1_245 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="278-278"];
m1_247 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295"];
m1_248 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="292-295"];
m1_249 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="293-293"];
m1_252 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="294-294"];
m1_250 [cluster="lambda expression", file="BackgroundJobServer.cs", label="sc.JobId == ''1'' && sc.Job == null", span="293-293"];
m1_251 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="293-293"];
m1_253 [cluster="lambda expression", file="BackgroundJobServer.cs", label="s.Exception != null", span="294-294"];
m1_254 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="294-294"];
m1_263 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="304-304"];
m1_267 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310"];
m1_266 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="309-310"];
m1_264 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="304-304"];
m1_265 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="304-304"];
m1_268 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="309-310"];
m1_278 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="318-318"];
m1_282 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323"];
m1_286 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329"];
m1_281 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="322-323"];
m1_285 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="328-329"];
m1_279 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="318-318"];
m1_280 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="318-318"];
m1_283 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="322-323"];
m1_287 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="328-329"];
m1_299 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="336-336"];
m1_303 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340"];
m1_306 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350"];
m1_309 [cluster="lambda expression", file="BackgroundJobServer.cs", label="s.Exception == exception", span="348-348"];
m1_302 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="339-340"];
m1_305 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="346-350"];
m1_300 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="336-336"];
m1_301 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="336-336"];
m1_304 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="339-340"];
m1_307 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="346-350"];
m1_308 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="348-348"];
m1_311 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="350-350"];
m1_310 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="348-348"];
m1_312 [cluster="lambda expression", file="BackgroundJobServer.cs", label="!f.Any()", span="350-350"];
m1_313 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="350-350"];
m1_330 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="359-359"];
m1_333 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="362-362"];
m1_336 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="368-368"];
m1_340 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381"];
m1_344 [cluster="lambda expression", file="BackgroundJobServer.cs", label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380"];
m1_339 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Entry lambda expression", span="375-381"];
m1_331 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.StateName", span="359-359"];
m1_332 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="359-359"];
m1_334 [cluster="lambda expression", file="BackgroundJobServer.cs", label="x.StateName", span="362-362"];
m1_335 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="362-362"];
m1_337 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Console.WriteLine()", span="368-368"];
m1_338 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="368-368"];
m1_341 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="375-381"];
m1_345 [cluster="lambda expression", file="BackgroundJobServer.cs", label="Exit lambda expression", span="376-380"];
m1_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobServer.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m1_56 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m1_57 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachine()", span="75-75"];
m1_58 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="77-78"];
m1_59 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="80-80"];
m1_60 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m1_46 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m1_47 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachine()", span="64-64"];
m1_48 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="66-67"];
m1_49 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''job'', exception.ParamName)", span="69-69"];
m1_50 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m1_172 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m1_173 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206"];
m1_174 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="var stateMachine = CreateStateMachineMock()", span="208-208"];
m1_175 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212"];
m1_177 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218"];
m1_176 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="Assert.False(result)", span="215-215"];
m1_178 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m1_179 [cluster="HangFire.Storage.JobData.JobData()", file="BackgroundJobServer.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m1_218 [cluster="Unk.True", file="BackgroundJobServer.cs", label="Entry Unk.True", span=""];
m1_29 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m1_30 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47"];
m1_31 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="49-49"];
m1_32 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m1_72 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52"];
m1_81 [cluster="Unk.Verify", file="BackgroundJobServer.cs", label="Entry Unk.Verify", span=""];
m1_165 [cluster="Unk.GetJobData", file="BackgroundJobServer.cs", label="Entry Unk.GetJobData", span=""];
m1_327 [cluster="Mock<IStateHandler>.cstr", file="BackgroundJobServer.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m1_234 [cluster="Unk.Equals", file="BackgroundJobServer.cs", label="Entry Unk.Equals", span=""];
m1_64 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m1_65 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var stateMachine = CreateStateMachine()", span="86-86"];
m1_66 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="BackgroundJobServer.cs", label="1: var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="88-89"];
m1_67 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs", label="Assert.Equal(''state'', exception.ParamName)", span="91-91"];
m1_68 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobServer.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m1_128 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72"];
m1_351 [file="BackgroundJobServer.cs", label="HangFire.Core.Tests.States.StateMachineFacts", span=""];
m1_352 [file="BackgroundJobServer.cs", label=stateMachine, span=""];
m1_353 [file="BackgroundJobServer.cs", label=stateMachine, span=""];
m1_354 [file="BackgroundJobServer.cs", label=stateMachine, span=""];
m1_355 [file="BackgroundJobServer.cs", label=stateMachine, span=""];
m1_356 [file="BackgroundJobServer.cs", label=stateMachine, span=""];
m1_357 [file="BackgroundJobServer.cs", label=stateMachine, span=""];
m1_358 [file="BackgroundJobServer.cs", label=context, span=""];
m1_359 [file="BackgroundJobServer.cs", label=context, span=""];
m1_360 [file="BackgroundJobServer.cs", label=electedState, span=""];
m1_361 [file="BackgroundJobServer.cs", label=context, span=""];
m1_362 [file="BackgroundJobServer.cs", label=exception, span=""];
m1_363 [file="BackgroundJobServer.cs", label=context, span=""];
m2_0 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m2_1 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m2_2 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_options = new BackgroundJobServerOptions()", span="18-18"];
m2_3 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_supervisor = new Mock<IServerSupervisor>()", span="20-20"];
m2_4 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24"];
m2_5 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", color=red, community=0, file="BackgroundJobServerFacts.cs", label="1: _serverMock.Setup(x => x.GetBootstrapSupervisor()).Returns(_supervisor.Object)", span="25-25"];
m2_6 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m2_27 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m2_28 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m2_29 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m2_30 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m2_57 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValues_ForAllParameters()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValues_ForAllParameters()", span="62-62"];
m2_58 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValues_ForAllParameters()", file="BackgroundJobServerFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="64-64"];
m2_59 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValues_ForAllParameters()", file="BackgroundJobServerFacts.cs", label="Assert.DoesNotThrow(() => StartServer(\r\n                () => new BackgroundJobServer()))", span="65-66"];
m2_60 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValues_ForAllParameters()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValues_ForAllParameters()", span="62-62"];
m2_47 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="60-60"];
m2_67 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="40-40"];
m2_96 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", span="103-103"];
m2_97 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var server = CreateServer()", span="106-106"];
m2_98 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var supervisors = server.GetSupervisors()", span="109-109"];
m2_99 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var componentTypes = supervisors.OfType<ServerSupervisor>()\r\n                .Select(x => x.Component)\r\n                .Cast<AutomaticRetryServerComponentWrapper>()\r\n                .Select(x => x.InnerComponent)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="112-117"];
m2_100 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(Worker), componentTypes)", span="119-119"];
m2_101 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="120-120"];
m2_102 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="121-121"];
m2_103 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(typeof(SchedulePoller), componentTypes)", span="122-122"];
m2_104 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsDefaultComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", span="103-103"];
m2_35 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m2_36 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m2_37 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="Assert.DoesNotThrow(() => StartServer(\r\n                () => new BackgroundJobServer(_options)))", span="50-51"];
m2_38 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m2_48 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="55-55"];
m2_49 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="Assert.DoesNotThrow(() => StartServer(\r\n                () => new BackgroundJobServer(_storage.Object)))", span="57-58"];
m2_50 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="55-55"];
m2_39 [cluster="Unk.DoesNotThrow", file="BackgroundJobServerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m2_9 [cluster="Mock<IServerSupervisor>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<IServerSupervisor>.cstr", span=""];
m2_17 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m2_18 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m2_19 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m2_20 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m2_21 [cluster="Unk.>", file="BackgroundJobServerFacts.cs", label="Entry Unk.>", span=""];
m2_43 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.StartServer(System.Func<Hangfire.BackgroundJobServer>)", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.StartServer(System.Func<Hangfire.BackgroundJobServer>)", span="152-152"];
m2_141 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.StartServer(System.Func<Hangfire.BackgroundJobServer>)", file="BackgroundJobServerFacts.cs", label="createFunc()", span="154-154"];
m2_142 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.StartServer(System.Func<Hangfire.BackgroundJobServer>)", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.StartServer(System.Func<Hangfire.BackgroundJobServer>)", span="152-152"];
m2_132 [cluster="Unk.GetComponents", file="BackgroundJobServerFacts.cs", label="Entry Unk.GetComponents", span=""];
m2_77 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesBootstrapSupervisor()", span="77-77"];
m2_78 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="_serverMock.Object.Dispose()", span="79-79"];
m2_79 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="_supervisor.Verify(x => x.Dispose())", span="81-81"];
m2_80 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesBootstrapSupervisor()", span="77-77"];
m2_108 [cluster="Unk.ToArray", file="BackgroundJobServerFacts.cs", label="Entry Unk.ToArray", span=""];
m2_95 [cluster="Unk.NotNull", file="BackgroundJobServerFacts.cs", label="Entry Unk.NotNull", span=""];
m2_94 [cluster="Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.BackgroundJobServer.GetBootstrapSupervisor()", span="109-109"];
m2_16 [cluster="Unk.GetBootstrapSupervisor", file="BackgroundJobServerFacts.cs", label="Entry Unk.GetBootstrapSupervisor", span=""];
m2_11 [cluster="Unk.Setup", file="BackgroundJobServerFacts.cs", label="Entry Unk.Setup", span=""];
m2_81 [cluster="Unk.Dispose", file="BackgroundJobServerFacts.cs", label="Entry Unk.Dispose", span=""];
m2_68 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_StartsTheBootstrapSupervisor()", span="70-70"];
m2_69 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="var instance = _serverMock.Object", span="72-72"];
m2_70 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="_supervisor.Verify(x => x.Start())", span="73-73"];
m2_71 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_StartsTheBootstrapSupervisor()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.Ctor_StartsTheBootstrapSupervisor()", span="70-70"];
m2_10 [cluster="Mock<BackgroundJobServer>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<BackgroundJobServer>.cstr", span=""];
m2_8 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m2_128 [cluster="Mock<IServerComponent>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m2_106 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="BackgroundJobServerFacts.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m2_136 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="141-141"];
m2_13 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="25-25"];
m2_14 [cluster="lambda expression", color=red, community=0, file="BackgroundJobServerFacts.cs", label="1: x.GetBootstrapSupervisor()", span="25-25"];
m2_15 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="25-25"];
m2_23 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="32-32"];
m2_24 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(null, _storage.Object)", span="32-32"];
m2_25 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="32-32"];
m2_31 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="41-41"];
m2_32 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(_options, null)", span="41-41"];
m2_33 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="41-41"];
m2_40 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="50-51"];
m2_41 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="StartServer(\r\n                () => new BackgroundJobServer(_options))", span="50-51"];
m2_42 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="50-51"];
m2_44 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="51-51"];
m2_45 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(_options)", span="51-51"];
m2_46 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="51-51"];
m2_51 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="57-58"];
m2_52 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="StartServer(\r\n                () => new BackgroundJobServer(_storage.Object))", span="57-58"];
m2_53 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="57-58"];
m2_54 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="58-58"];
m2_55 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer(_storage.Object)", span="58-58"];
m2_56 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="58-58"];
m2_61 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="65-66"];
m2_62 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="StartServer(\r\n                () => new BackgroundJobServer())", span="65-66"];
m2_63 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="65-66"];
m2_64 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="66-66"];
m2_65 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="new BackgroundJobServer()", span="66-66"];
m2_66 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="66-66"];
m2_73 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="73-73"];
m2_74 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.Start()", span="73-73"];
m2_75 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="73-73"];
m2_82 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="81-81"];
m2_83 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.Dispose()", span="81-81"];
m2_84 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="81-81"];
m2_110 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="113-113"];
m2_113 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="115-115"];
m2_116 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="116-116"];
m2_111 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.Component", span="113-113"];
m2_112 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="113-113"];
m2_114 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.InnerComponent", span="115-115"];
m2_115 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="115-115"];
m2_117 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.GetType()", span="116-116"];
m2_118 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="116-116"];
m2_129 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="130-130"];
m2_133 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Entry lambda expression", span="139-139"];
m2_130 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.GetComponents()", span="130-130"];
m2_131 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="130-130"];
m2_134 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.Component", span="139-139"];
m2_135 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="139-139"];
m2_137 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="x.InnerComponent", span="141-141"];
m2_138 [cluster="lambda expression", file="BackgroundJobServerFacts.cs", label="Exit lambda expression", span="141-141"];
m2_109 [cluster="Unk.Contains", file="BackgroundJobServerFacts.cs", label="Entry Unk.Contains", span=""];
m2_76 [cluster="Unk.Start", file="BackgroundJobServerFacts.cs", label="Entry Unk.Start", span=""];
m2_107 [cluster="Unk.Select", file="BackgroundJobServerFacts.cs", label="Entry Unk.Select", span=""];
m2_120 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", span="126-126"];
m2_121 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var storageComponent = new Mock<IServerComponent>()", span="129-129"];
m2_122 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="_storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="130-130"];
m2_126 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Assert.Contains(storageComponent.Object, components)", span="144-144"];
m2_123 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var server = CreateServer()", span="132-132"];
m2_124 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var supervisors = server.GetSupervisors()", span="135-135"];
m2_125 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="var components = supervisors.OfType<ServerSupervisor>()\r\n                .Select(x => x.Component)\r\n                .Cast<AutomaticRetryServerComponentWrapper>()\r\n                .Select(x => x.InnerComponent)\r\n                .ToArray()", span="138-142"];
m2_127 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.GetSupervisors_ContainsStorageComponents_WrappedTo_AutomaticRetryServerComponentWrapper()", span="126-126"];
m2_119 [cluster="Unk.GetType", file="BackgroundJobServerFacts.cs", label="Entry Unk.GetType", span=""];
m2_93 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="147-147"];
m2_139 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs", label="return new BackgroundJobServer(_options, _storage.Object);", span="149-149"];
m2_140 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="147-147"];
m2_85 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", span="85-85"];
m2_86 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="var server = CreateServer()", span="88-88"];
m2_87 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", color=red, community=0, file="BackgroundJobServerFacts.cs", label="2: var supervisor = server.GetBootstrapSupervisor()", span="91-91"];
m2_88 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="Assert.NotNull(supervisor)", span="94-94"];
m2_89 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="var wrapper = ((ServerSupervisor) supervisor).Component", span="96-96"];
m2_90 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="Assert.IsType<AutomaticRetryServerComponentWrapper>(wrapper)", span="98-98"];
m2_91 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="Assert.IsType<ServerBootstrapper>(((AutomaticRetryServerComponentWrapper)wrapper).InnerComponent)", span="99-99"];
m2_92 [cluster="Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", file="BackgroundJobServerFacts.cs", label="Exit Hangfire.Core.Tests.BackgroundJobServerFacts.GetBootstrapSupervisor_ReturnsBootstrapper_WrappedWithAutomaticRetry()", span="85-85"];
m2_105 [cluster="Hangfire.BackgroundJobServer.GetSupervisors()", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.BackgroundJobServer.GetSupervisors()", span="131-131"];
m2_12 [cluster="Unk.Returns", file="BackgroundJobServerFacts.cs", label="Entry Unk.Returns", span=""];
m2_34 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServerFacts.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="71-71"];
m2_26 [cluster="BackgroundJobServer.cstr", file="BackgroundJobServerFacts.cs", label="Entry BackgroundJobServer.cstr", span=""];
m2_72 [cluster="Unk.Verify", file="BackgroundJobServerFacts.cs", label="Entry Unk.Verify", span=""];
m2_7 [cluster="Mock<JobStorage>.cstr", file="BackgroundJobServerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m2_143 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJobServerFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_144 [file="BackgroundJobServerFacts.cs", label="Hangfire.Core.Tests.BackgroundJobServerFacts", span=""];
m5_86 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_190 [cluster="long.Parse(string)", file="DefaultJobPerformanceProcess.cs", label="Entry long.Parse(string)", span="0-0"];
m5_247 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343"];
m5_248 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="346-365"];
m5_249 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="343-343"];
m5_311 [cluster="Dictionary<string, string>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m5_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457"];
m5_327 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var endDate = DateTime.UtcNow", span="460-460"];
m5_334 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="468-468"];
m5_335 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="469-469"];
m5_328 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var dates = new List<DateTime>()", span="461-461"];
m5_331 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="dates.Add(endDate)", span="464-464"];
m5_332 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="endDate = endDate.AddHours(-1)", span="465-465"];
m5_329 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="462-462"];
m5_338 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i < dates.Count", span="472-472"];
m5_342 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="result.Add(dates[i], value)", span="480-480"];
m5_330 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i < 24", span="462-462"];
m5_333 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="462-462"];
m5_336 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var result = new Dictionary<DateTime, long>()", span="471-471"];
m5_340 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="475-475"];
m5_337 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="472-472"];
m5_344 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="483-483"];
m5_343 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="472-472"];
m5_339 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="long value", span="474-474"];
m5_341 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="value = 0", span="477-477"];
m5_345 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="457-457"];
m5_122 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486"];
m5_356 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var endDate = DateTime.UtcNow.Date", span="489-489"];
m5_363 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="500-500"];
m5_364 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="502-502"];
m5_357 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var startDate = endDate.AddDays(-7)", span="490-490"];
m5_359 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="startDate <= endDate", span="493-493"];
m5_360 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="dates.Add(endDate)", span="495-495"];
m5_361 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="endDate = endDate.AddDays(-1)", span="496-496"];
m5_358 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var dates = new List<DateTime>()", span="491-491"];
m5_362 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="499-499"];
m5_371 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="result.Add(dates[i], value)", span="512-512"];
m5_367 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i < stringDates.Count", span="505-505"];
m5_365 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var result = new Dictionary<DateTime, long>()", span="504-504"];
m5_369 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="508-508"];
m5_366 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="var i = 0", span="505-505"];
m5_373 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="return result;", span="515-515"];
m5_372 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="i++", span="505-505"];
m5_368 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="long value", span="507-507"];
m5_370 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="value = 0", span="510-510"];
m5_374 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="486-486"];
m5_257 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368"];
m5_258 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });\r\n            });", span="371-388"];
m5_259 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedJobs(string, int, int)", span="368-368"];
m5_349 [cluster="Unk.TryParse", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.TryParse", span=""];
m5_61 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m5_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m5_62 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m5_164 [cluster="int.Parse(string)", file="DefaultJobPerformanceProcess.cs", label="Entry int.Parse(string)", span="0-0"];
m5_275 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396"];
m5_276 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''failed''));", span="398-398"];
m5_277 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="396-396"];
m5_515 [cluster="Unk.GetClient", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetClient", span=""];
m5_433 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580"];
m5_434 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x);\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''));\r\n\r\n                    pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x);\r\n\r\n                    foreach (var queue in queues)\r\n                    {\r\n                        var queueName = queue;\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x);\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return stats;\r\n            });", span="582-634"];
m5_435 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="580-580"];
m5_22 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m5_23 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)));", span="53-54"];
m5_24 [cluster="HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FetchedCount(string)", span="51-51"];
m5_55 [cluster="Unk.GetJobsWithProperties", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m5_57 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m5_421 [cluster="KeyValuePair<string, T>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m5_91 [cluster="JobList<ScheduledJobDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry JobList<ScheduledJobDto>.cstr", span=""];
m5_88 [cluster="Unk.CreatePipeline", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.CreatePipeline", span=""];
m5_522 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m5_516 [cluster="Unk.action", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.action", span=""];
m5_402 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_281 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401"];
m5_282 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId));\r\n                if (job.Count == 0) return null;\r\n\r\n                var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' };\r\n\r\n                var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId));\r\n\r\n                var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList();\r\n\r\n                var stateHistory = new List<StateHistoryDto>(history.Count);\r\n                foreach (var entry in history)\r\n                {\r\n                    var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    };\r\n\r\n                    // Each history item contains all of the information,\r\n                    // but other code should not know this. We'll remove\r\n                    // unwanted keys.\r\n                    var stateData = new Dictionary<string, string>(entry);\r\n                    stateData.Remove(''State'');\r\n                    stateData.Remove(''Reason'');\r\n                    stateData.Remove(''CreatedAt'');\r\n\r\n                    dto.Data = stateData;\r\n                    stateHistory.Add(dto);\r\n                }\r\n\r\n                // For compatibility\r\n                if (!job.ContainsKey(''Method'')) job.Add(''Method'', null);\r\n                if (!job.ContainsKey(''ParameterTypes'')) job.Add(''ParameterTypes'', null);\r\n\r\n                return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };\r\n            });", span="403-454"];
m5_283 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="401-401"];
m5_309 [cluster="Unk.ContainsKey", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ContainsKey", span=""];
m5_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultJobPerformanceProcess.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_113 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m5_423 [cluster="Unk.selector", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.selector", span=""];
m5_427 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575"];
m5_428 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:succeeded''));", span="577-577"];
m5_429 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="575-575"];
m5_407 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_454 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m5_85 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m5_163 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m5_307 [cluster="List<StateHistoryDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry List<StateHistoryDto>.cstr", span=""];
m5_315 [cluster="Unk.Where", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Where", span=""];
m5_191 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263"];
m5_192 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="265-283"];
m5_193 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedJobs(int, int)", span="263-263"];
m5_375 [cluster="System.DateTime.AddDays(double)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m5_222 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518"];
m5_382 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="jobIds.Count == 0", span="525-525"];
m5_384 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="527-527"];
m5_385 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="528-528"];
m5_386 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="properties = properties ?? new string[0]", span="530-530"];
m5_387 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var pipeline = redis.CreatePipeline()", span="532-532"];
m5_388 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label=jobIds, span="534-534"];
m5_391 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="stateProperties != null", span="544-544"];
m5_392 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="546-548"];
m5_394 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="555-572"];
m5_383 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="525-525"];
m5_390 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="538-542"];
m5_393 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="552-552"];
m5_389 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="var id = jobId", span="536-536"];
m5_395 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="518-518"];
m5_422 [cluster="Unk.TrueForAll", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.TrueForAll", span=""];
m5_9 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m5_512 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="DefaultJobPerformanceProcess.cs", label="var redis = _connectionPool.GetClient()", span="639-639"];
m5_513 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="DefaultJobPerformanceProcess.cs", label="return action(redis);", span="641-641"];
m5_514 [cluster="HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.UseConnection<T>(System.Func<IRedisClient, T>)", span="637-637"];
m5_313 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m5_112 [cluster="KeyValuePair<string, ScheduledJobDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry KeyValuePair<string, ScheduledJobDto>.cstr", span=""];
m5_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32"];
m5_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="DefaultJobPerformanceProcess.cs", label="connectionPool == null", span="34-34"];
m5_3 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="DefaultJobPerformanceProcess.cs", label="_connectionPool = connectionPool", span="36-36"];
m5_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="DefaultJobPerformanceProcess.cs", label="throw new ArgumentNullException(''connectionPool'');", span="34-34"];
m5_4 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(PooledRedisClientManager)", span="32-32"];
m5_201 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m5_509 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="627-627"];
m5_10 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="41-42"];
m5_11 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetSortedSetCount(''hangfire:schedule'')", span="42-42"];
m5_12 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="41-42"];
m5_18 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="48-48"];
m5_17 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="47-48"];
m5_19 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="47-48"];
m5_26 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="54-54"];
m5_25 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="53-54"];
m5_27 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="53-54"];
m5_31 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="59-59"];
m5_32 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetSortedSetCount(''hangfire:failed'')", span="59-59"];
m5_33 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="59-59"];
m5_37 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="64-64"];
m5_38 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetSortedSetCount(''hangfire:processing'')", span="64-64"];
m5_39 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="64-64"];
m5_43 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="69-69"];
m5_44 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetListCount(''hangfire:deleted'')", span="69-69"];
m5_45 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="69-69"];
m5_50 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="77-80"];
m5_49 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="75-94"];
m5_51 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());", span="82-93"];
m5_52 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="75-94"];
m5_58 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="86-93"];
m5_64 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="93-93"];
m5_59 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }", span="86-93"];
m5_60 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="86-93"];
m5_65 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Value.StartedAt", span="93-93"];
m5_66 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="93-93"];
m5_72 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="101-104"];
m5_71 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="99-151"];
m5_77 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var pipeline = redis.CreatePipeline()", span="114-114"];
m5_73 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="scheduledJobs.Count == 0", span="106-106"];
m5_78 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label=scheduledJobs, span="116-116"];
m5_83 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());", span="136-150"];
m5_74 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());", span="108-108"];
m5_75 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var jobs = new Dictionary<string, List<string>>()", span="111-111"];
m5_76 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var states = new Dictionary<string, List<String>>()", span="112-112"];
m5_80 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x))", span="120-124"];
m5_100 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="jobs.Add(job.Key, x)", span="124-124"];
m5_110 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="137-149"];
m5_81 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x))", span="126-130"];
m5_107 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="states.Add(job.Key, x)", span="130-130"];
m5_82 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="133-133"];
m5_79 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var job = scheduledJob", span="118-118"];
m5_95 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' })", span="121-123"];
m5_104 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' })", span="127-129"];
m5_94 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="121-123"];
m5_99 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="124-124"];
m5_103 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="127-129"];
m5_106 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="130-130"];
m5_84 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="99-151"];
m5_109 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="137-149"];
m5_96 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="121-123"];
m5_101 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="124-124"];
m5_105 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="127-129"];
m5_108 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="130-130"];
m5_111 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="137-149"];
m5_119 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="156-156"];
m5_120 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="GetTimelineStats(redis, ''succeeded'')", span="156-156"];
m5_121 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="156-156"];
m5_126 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="161-161"];
m5_127 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="GetTimelineStats(redis, ''failed'')", span="161-161"];
m5_128 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="161-161"];
m5_132 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="166-207"];
m5_133 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'')", span="168-168"];
m5_138 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var pipeline = redis.CreatePipeline()", span="178-178"];
m5_134 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="serverNames.Count == 0", span="170-170"];
m5_139 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label=serverNames, span="180-180"];
m5_144 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="199-206"];
m5_135 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return new List<ServerDto>();", span="172-172"];
m5_136 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var servers = new Dictionary<string, List<string>>()", span="175-175"];
m5_137 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var queues = new Dictionary<string, List<string>>()", span="176-176"];
m5_141 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="184-188"];
m5_151 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="servers.Add(name, x)", span="188-188"];
m5_161 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="199-206"];
m5_142 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="190-193"];
m5_158 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="queues.Add(name, x)", span="193-193"];
m5_143 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="196-196"];
m5_140 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var name = serverName", span="182-182"];
m5_148 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="185-187"];
m5_154 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="191-192"];
m5_147 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="185-187"];
m5_150 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="188-188"];
m5_153 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="191-192"];
m5_157 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="193-193"];
m5_145 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="166-207"];
m5_160 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="199-206"];
m5_149 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="185-187"];
m5_152 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="188-188"];
m5_155 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="191-192"];
m5_159 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="193-193"];
m5_162 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="199-206"];
m5_170 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="214-217"];
m5_169 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="212-234"];
m5_171 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="219-233"];
m5_172 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="212-234"];
m5_174 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="224-233"];
m5_175 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="224-233"];
m5_176 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="224-233"];
m5_182 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="241-244"];
m5_181 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="239-260"];
m5_183 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="246-259"];
m5_184 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="239-260"];
m5_186 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="251-259"];
m5_187 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="251-259"];
m5_188 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="251-259"];
m5_195 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var deletedJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:deleted'',\r\n                    from,\r\n                    from + count - 1)", span="267-270"];
m5_194 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="265-283"];
m5_196 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    deletedJobIds,\r\n                    null,\r\n                    new[] { ''DeletedAt'', ''State'' },\r\n                    (job, jobData, state) => new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="272-282"];
m5_197 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="265-283"];
m5_198 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="277-282"];
m5_199 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new DeletedJobDto\r\n                    {\r\n                        Job = job,\r\n                        DeletedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InDeletedState = DeletedState.StateName.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="277-282"];
m5_200 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="277-282"];
m5_205 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="288-340"];
m5_206 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="290-290"];
m5_212 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var pipeline = redis.CreatePipeline()", span="299-299"];
m5_217 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="317-328"];
m5_207 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="291-291"];
m5_208 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label=queues, span="293-293"];
m5_218 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    })", span="330-336"];
m5_219 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return result;", span="339-339"];
m5_209 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="IList<string> firstJobIds = null", span="295-295"];
m5_213 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="301-304"];
m5_226 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="302-303"];
m5_214 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="306-308"];
m5_232 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="307-307"];
m5_215 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x)", span="310-312"];
m5_238 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="311-311"];
m5_210 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="long length = 0", span="296-296"];
m5_211 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="long fetched = 0", span="297-297"];
m5_216 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="314-314"];
m5_225 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="302-303"];
m5_228 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="304-304"];
m5_231 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="307-307"];
m5_234 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="308-308"];
m5_237 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="311-311"];
m5_240 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="312-312"];
m5_243 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="322-328"];
m5_220 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="288-340"];
m5_227 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="302-303"];
m5_229 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="firstJobIds = x", span="304-304"];
m5_230 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="304-304"];
m5_233 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="307-307"];
m5_235 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="length = x", span="308-308"];
m5_236 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="308-308"];
m5_239 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="311-311"];
m5_241 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="fetched = x", span="312-312"];
m5_242 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="312-312"];
m5_244 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="322-328"];
m5_245 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="322-328"];
m5_251 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="348-351"];
m5_250 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="346-365"];
m5_252 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, jobData, state) => new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="353-364"];
m5_253 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="346-365"];
m5_254 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="358-364"];
m5_255 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="358-364"];
m5_256 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="358-364"];
m5_261 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var jobIds = redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="373-375"];
m5_260 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="371-388"];
m5_262 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return GetJobsWithProperties(\r\n                    redis,\r\n                    jobIds,\r\n                    new[] { ''State'', ''Fetched'' },\r\n                    null,\r\n                    (job, jobData, state) => new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    });", span="377-387"];
m5_263 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="371-388"];
m5_264 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="382-387"];
m5_265 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new FetchedJobDto\r\n                    {\r\n                        Job = job,\r\n                        State = jobData[0],\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(jobData[1])\r\n                    }", span="382-387"];
m5_266 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="382-387"];
m5_271 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="393-393"];
m5_272 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="GetHourlyTimelineStats(redis, ''succeeded'')", span="393-393"];
m5_273 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="393-393"];
m5_278 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="398-398"];
m5_279 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="GetHourlyTimelineStats(redis, ''failed'')", span="398-398"];
m5_280 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="398-398"];
m5_285 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var job = redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="405-405"];
m5_289 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var historyList = redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="410-411"];
m5_284 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="403-454"];
m5_286 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="job.Count == 0", span="406-406"];
m5_300 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!job.ContainsKey(''Method'')", span="440-440"];
m5_301 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="job.Add(''Method'', null)", span="440-440"];
m5_302 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!job.ContainsKey(''ParameterTypes'')", span="441-441"];
m5_303 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="job.Add(''ParameterTypes'', null)", span="441-441"];
m5_304 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return new JobDetailsDto\r\n                {\r\n                    Job = TryToGetJob(job[''Type''], job[''Method''], job[''ParameterTypes''], job[''Arguments'']),\r\n                    CreatedAt =\r\n                        job.ContainsKey(''CreatedAt'')\r\n                            ? JobHelper.FromStringTimestamp(job[''CreatedAt''])\r\n                            : (DateTime?) null,\r\n                    Properties =\r\n                        job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = stateHistory\r\n                };", span="443-453"];
m5_287 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return null;", span="406-406"];
m5_288 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var hiddenProperties = new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''State'', ''CreatedAt'' }", span="408-408"];
m5_318 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!hiddenProperties.Contains(x.Key)", span="451-451"];
m5_290 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="413-415"];
m5_291 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var stateHistory = new List<StateHistoryDto>(history.Count)", span="417-417"];
m5_292 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label=history, span="418-418"];
m5_299 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stateHistory.Add(dto)", span="436-436"];
m5_293 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var dto = new StateHistoryDto\r\n                    {\r\n                        StateName = entry[''State''],\r\n                        Reason = entry.ContainsKey(''Reason'') ? entry[''Reason''] : null,\r\n                        CreatedAt = JobHelper.FromStringTimestamp(entry[''CreatedAt'']),\r\n                    }", span="420-425"];
m5_294 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var stateData = new Dictionary<string, string>(entry)", span="430-430"];
m5_298 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="dto.Data = stateData", span="435-435"];
m5_295 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stateData.Remove(''State'')", span="431-431"];
m5_296 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stateData.Remove(''Reason'')", span="432-432"];
m5_297 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stateData.Remove(''CreatedAt'')", span="433-433"];
m5_305 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="403-454"];
m5_317 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="451-451"];
m5_321 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="451-451"];
m5_324 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="451-451"];
m5_319 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="451-451"];
m5_322 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Key", span="451-451"];
m5_323 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="451-451"];
m5_325 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.Value", span="451-451"];
m5_326 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="451-451"];
m5_352 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="468-468"];
m5_351 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="468-468"];
m5_353 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="468-468"];
m5_380 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="500-500"];
m5_376 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="499-499"];
m5_379 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="500-500"];
m5_377 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.ToString(''yyyy-MM-dd'')", span="499-499"];
m5_378 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="499-499"];
m5_381 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="500-500"];
m5_409 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="547-547"];
m5_419 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null)\r\n                        ? default(T)\r\n                        : selector(x.Method, x.Job, x.State))", span="567-571"];
m5_404 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!jobs.ContainsKey(id)", span="542-542"];
m5_405 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="jobs.Add(id, x)", span="542-542"];
m5_416 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetJob(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2],\r\n                        jobs[x][properties.Length + 3]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="556-566"];
m5_412 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="!states.ContainsKey(id)", span="548-548"];
m5_413 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="states.Add(id, x)", span="548-548"];
m5_399 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id),\r\n                            properties.Union(new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }).ToArray())", span="539-541"];
m5_398 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="539-541"];
m5_403 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="542-542"];
m5_408 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="547-547"];
m5_411 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="548-548"];
m5_415 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="556-566"];
m5_418 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="567-571"];
m5_400 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="539-541"];
m5_406 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="542-542"];
m5_410 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="547-547"];
m5_414 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="548-548"];
m5_417 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="556-566"];
m5_420 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="567-571"];
m5_424 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="569-569"];
m5_425 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="y == null", span="569-569"];
m5_426 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="569-569"];
m5_430 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="577-577"];
m5_431 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="redis.GetListCount(''hangfire:succeeded'')", span="577-577"];
m5_432 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="577-577"];
m5_436 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="582-634"];
m5_437 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var stats = new StatisticsDto()", span="584-584"];
m5_438 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="586-586"];
m5_439 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var pipeline = redis.CreatePipeline()", span="588-588"];
m5_440 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="590-592"];
m5_460 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Servers = x", span="592-592"];
m5_441 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="594-596"];
m5_466 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Queues = x", span="596-596"];
m5_442 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="598-600"];
m5_472 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Scheduled = x", span="600-600"];
m5_443 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="602-604"];
m5_478 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Processing = x", span="604-604"];
m5_444 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="606-608"];
m5_485 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="608-608"];
m5_445 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="610-612"];
m5_492 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Failed = x", span="612-612"];
m5_446 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:deleted''),\r\n                        x => stats.Deleted = long.Parse(x ?? ''0''))", span="614-616"];
m5_498 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Deleted = long.Parse(x ?? ''0'')", span="616-616"];
m5_447 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:recurring-jobs''),\r\n                        x => stats.Recurring = x)", span="618-620"];
m5_504 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Recurring = x", span="620-620"];
m5_450 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="625-627"];
m5_510 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="stats.Enqueued += x", span="627-627"];
m5_452 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="return stats;", span="633-633"];
m5_448 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label=queues, span="622-622"];
m5_451 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="pipeline.Flush()", span="630-630"];
m5_455 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="591-591"];
m5_459 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="592-592"];
m5_462 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="595-595"];
m5_465 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="596-596"];
m5_468 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="599-599"];
m5_471 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="600-600"];
m5_474 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="603-603"];
m5_477 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="604-604"];
m5_480 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="607-607"];
m5_484 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="608-608"];
m5_488 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="611-611"];
m5_491 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="612-612"];
m5_494 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="615-615"];
m5_497 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="616-616"];
m5_500 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="619-619"];
m5_503 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="620-620"];
m5_449 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="var queueName = queue", span="624-624"];
m5_507 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="626-626"];
m5_506 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Entry lambda expression", span="626-626"];
m5_453 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="582-634"];
m5_456 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSetCount(''hangfire:servers'')", span="591-591"];
m5_457 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="591-591"];
m5_461 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="592-592"];
m5_463 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSetCount(''hangfire:queues'')", span="595-595"];
m5_464 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="595-595"];
m5_467 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="596-596"];
m5_469 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="599-599"];
m5_470 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="599-599"];
m5_473 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="600-600"];
m5_475 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="603-603"];
m5_476 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="603-603"];
m5_479 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="604-604"];
m5_481 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="607-607"];
m5_482 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="607-607"];
m5_486 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="608-608"];
m5_489 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="611-611"];
m5_490 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="611-611"];
m5_493 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="612-612"];
m5_495 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetValue(''hangfire:stats:deleted'')", span="615-615"];
m5_496 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="615-615"];
m5_499 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="616-616"];
m5_501 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="x.GetSortedSetCount(''hangfire:recurring-jobs'')", span="619-619"];
m5_502 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="619-619"];
m5_505 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="620-620"];
m5_508 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="626-626"];
m5_511 [cluster="lambda expression", file="DefaultJobPerformanceProcess.cs", label="Exit lambda expression", span="627-627"];
m5_53 [cluster="Unk.GetRangeFromSortedSet", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m5_223 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m5_224 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_93 [cluster="Unk.ToList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToList", span=""];
m5_97 [cluster="Unk.Format", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Format", span=""];
m5_89 [cluster="Unk.QueueCommand", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.QueueCommand", span=""];
m5_115 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m5_517 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="DefaultJobPerformanceProcess.cs", label="return new InvocationData(\r\n                    type,\r\n                    method,\r\n                    parameterTypes,\r\n                    arguments).Deserialize();", span="650-654"];
m5_518 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="DefaultJobPerformanceProcess.cs", label=Exception, span="656-656"];
m5_519 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="DefaultJobPerformanceProcess.cs", label="return null;", span="658-658"];
m5_520 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetJob(string, string, string, string)", span="645-645"];
m5_166 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210"];
m5_167 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var failedJobIds = redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    failedJobIds,\r\n                    null,\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'', ''Reason'' },\r\n                    (job, jobData, state) => new FailedJobDto\r\n                    {\r\n                        Job = job,\r\n                        Reason = state[5],\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.StateName.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="212-234"];
m5_168 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="210-210"];
m5_267 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m5_354 [cluster="System.DateTime.ToString(string)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m5_70 [cluster="Unk.UseConnection", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.UseConnection", span=""];
m5_221 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m5_348 [cluster="Unk.ElementAt", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ElementAt", span=""];
m5_129 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m5_130 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var serverNames = redis.GetAllItemsFromSet(''hangfire:servers'');\r\n\r\n                if (serverNames.Count == 0)\r\n                {\r\n                    return new List<ServerDto>();\r\n                }\r\n\r\n                var servers = new Dictionary<string, List<string>>();\r\n                var queues = new Dictionary<string, List<string>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var serverName in serverNames)\r\n                    {\r\n                        var name = serverName;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();\r\n            });", span="166-207"];
m5_131 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="164-164"];
m5_40 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m5_41 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => redis.GetListCount(''hangfire:deleted''));", span="69-69"];
m5_42 [cluster="HangFire.Redis.RedisMonitoringApi.DeletedListCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DeletedListCount()", span="67-67"];
m5_185 [cluster="Unk.GetRangeFromList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeFromList", span=""];
m5_178 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m5_179 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var succeededJobIds = redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return GetJobsWithProperties(\r\n                    redis,\r\n                    succeededJobIds,\r\n                    null,\r\n                    new[] { ''SucceededAt'', ''PerformanceDuration'', ''Latency'', ''State'' },\r\n                    (job, jobData, state) => new SucceededJobDto\r\n                    {\r\n                        Job = job,\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        TotalDuration = state[1] != null && state[2] != null\r\n                            ? (long?) long.Parse(state[1]) + (long?) long.Parse(state[2])\r\n                            : null,\r\n                        InSucceededState = SucceededState.StateName.Equals(state[3], StringComparison.OrdinalIgnoreCase)\r\n                    });\r\n            });", span="239-260"];
m5_180 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="237-237"];
m5_116 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m5_117 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''succeeded''));", span="156-156"];
m5_118 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="154-154"];
m5_90 [cluster="Unk.Flush", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Flush", span=""];
m5_487 [cluster="Unk.Parse", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Parse", span=""];
m5_102 [cluster="Unk.Add", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Add", span=""];
m5_63 [cluster="string.Equals(string, System.StringComparison)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m5_28 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m5_29 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:failed''));", span="59-59"];
m5_30 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="57-57"];
m5_346 [cluster="System.DateTime.AddHours(double)", file="DefaultJobPerformanceProcess.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m5_46 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m5_47 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var jobIds = redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                return new JobList<ProcessingJobDto>(GetJobsWithProperties(redis,\r\n                    jobIds,\r\n                    null,\r\n                    new[] { ''StartedAt'', ''ServerName'', ''ServerId'', ''State'' },\r\n                    (job, jobData, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerId = state[2] ?? state[1],\r\n                        Job = job,\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.StateName.Equals(\r\n                            state[3], StringComparison.OrdinalIgnoreCase),\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList());\r\n            });", span="75-94"];
m5_48 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="72-72"];
m5_13 [cluster="Unk.GetSortedSetCount", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetSortedSetCount", span=""];
m5_189 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m5_34 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m5_35 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => redis.GetSortedSetCount(''hangfire:processing''));", span="64-64"];
m5_36 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="62-62"];
m5_401 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m5_312 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m5_397 [cluster="JobList<T>.cstr", file="DefaultJobPerformanceProcess.cs", label="Entry JobList<T>.cstr", span=""];
m5_350 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_521 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m5_268 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m5_269 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => GetHourlyTimelineStats(redis, ''succeeded''));", span="393-393"];
m5_270 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="391-391"];
m5_355 [cluster="string.Format(string, object, object)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_306 [cluster="Unk.GetAllEntriesFromHash", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m5_316 [cluster="Unk.ToDictionary", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.ToDictionary", span=""];
m5_310 [cluster="Unk.FromStringTimestamp", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.FromStringTimestamp", span=""];
m5_396 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m5_458 [cluster="Unk.GetSetCount", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetSetCount", span=""];
m5_114 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m5_20 [cluster="string.Format(string, object)", file="DefaultJobPerformanceProcess.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_123 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159"];
m5_124 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => GetTimelineStats(redis, ''failed''));", span="161-161"];
m5_125 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="159-159"];
m5_246 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m5_177 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m5_202 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286"];
m5_203 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var queues = redis.GetAllItemsFromSet(''hangfire:queues'');\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count);\r\n\r\n                foreach (var queue in queues)\r\n                {\r\n                    IList<string> firstJobIds = null;\r\n                    long length = 0;\r\n                    long fetched = 0;\r\n\r\n                    using (var pipeline = redis.CreatePipeline())\r\n                    {\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x);\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => fetched = x);\r\n\r\n                        pipeline.Flush();\r\n                    }\r\n\r\n                    var jobs = GetJobsWithProperties(\r\n                        redis,\r\n                        firstJobIds,\r\n                        new[] { ''State'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, jobData, state) => new EnqueuedJobDto\r\n                        {\r\n                            Job = job,\r\n                            State = jobData[0],\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = jobData[0].Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        });\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Fetched = fetched\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="288-340"];
m5_204 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="286-286"];
m5_314 [cluster="Unk.TryToGetJob", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.TryToGetJob", span=""];
m5_21 [cluster="Unk.GetListCount", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetListCount", span=""];
m5_67 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m5_68 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis =>\r\n            {\r\n                var scheduledJobs = redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1);\r\n\r\n                if (scheduledJobs.Count == 0)\r\n                {\r\n                    return new JobList<ScheduledJobDto>(new List<KeyValuePair<string, ScheduledJobDto>>());\r\n                }\r\n\r\n                var jobs = new Dictionary<string, List<string>>();\r\n                var states = new Dictionary<string, List<String>>();\r\n\r\n                using (var pipeline = redis.CreatePipeline())\r\n                {\r\n                    foreach (var scheduledJob in scheduledJobs)\r\n                    {\r\n                        var job = scheduledJob;\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'' }),\r\n                            x => jobs.Add(job.Key, x));\r\n\r\n                        pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                new[] { ''State'', ''ScheduledAt'' }),\r\n                            x => states.Add(job.Key, x));\r\n                    }\r\n\r\n                    pipeline.Flush();\r\n                }\r\n\r\n                return new JobList<ScheduledJobDto>(scheduledJobs\r\n                    .Select(job => new KeyValuePair<string, ScheduledJobDto>(\r\n                        job.Key,\r\n                        new ScheduledJobDto\r\n                        {\r\n                            EnqueueAt = JobHelper.FromTimestamp((long) job.Value),\r\n                            Job = TryToGetJob(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2], jobs[job.Key][3]),\r\n                            ScheduledAt =\r\n                                states[job.Key].Count > 1\r\n                                    ? JobHelper.FromNullableStringTimestamp(states[job.Key][1])\r\n                                    : null,\r\n                            InScheduledState =\r\n                                ScheduledState.StateName.Equals(states[job.Key][0], StringComparison.OrdinalIgnoreCase)\r\n                        }))\r\n                    .ToList());\r\n            });", span="99-151"];
m5_69 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m5_87 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultJobPerformanceProcess.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_54 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m5_14 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m5_15 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => \r\n                redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue)));", span="47-48"];
m5_16 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="45-45"];
m5_347 [cluster="Unk.GetValuesMap", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValuesMap", span=""];
m5_6 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m5_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="return UseConnection(redis => \r\n                redis.GetSortedSetCount(''hangfire:schedule''));", span="41-42"];
m5_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="DefaultJobPerformanceProcess.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="39-39"];
m5_156 [cluster="Unk.GetAllItemsFromList", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m5_320 [cluster="Unk.Contains", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Contains", span=""];
m5_92 [cluster="Unk.Select", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.Select", span=""];
m5_308 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="DefaultJobPerformanceProcess.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m5_146 [cluster="Unk.GetAllItemsFromSet", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m5_173 [cluster="Unk.GetRangeFromSortedSetDesc", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m5_483 [cluster="Unk.GetValue", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValue", span=""];
m5_98 [cluster="Unk.GetValuesFromHash", file="DefaultJobPerformanceProcess.cs", label="Entry Unk.GetValuesFromHash", span=""];
m5_523 [file="DefaultJobPerformanceProcess.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m5_524 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_525 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_526 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_527 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_528 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_529 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_530 [file="DefaultJobPerformanceProcess.cs", label=job, span=""];
m5_531 [file="DefaultJobPerformanceProcess.cs", label=jobs, span=""];
m5_532 [file="DefaultJobPerformanceProcess.cs", label=states, span=""];
m5_533 [file="DefaultJobPerformanceProcess.cs", label=name, span=""];
m5_534 [file="DefaultJobPerformanceProcess.cs", label=servers, span=""];
m5_535 [file="DefaultJobPerformanceProcess.cs", label=queues, span=""];
m5_536 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_537 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_538 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_539 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_540 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_541 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_542 [file="DefaultJobPerformanceProcess.cs", label=queue, span=""];
m5_543 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_544 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_545 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_546 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_547 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_548 [file="DefaultJobPerformanceProcess.cs", label=int, span=""];
m5_549 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_550 [file="DefaultJobPerformanceProcess.cs", label=hiddenProperties, span=""];
m5_551 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_552 [file="DefaultJobPerformanceProcess.cs", label=string, span=""];
m5_553 [file="DefaultJobPerformanceProcess.cs", label="string[]", span=""];
m5_554 [file="DefaultJobPerformanceProcess.cs", label=id, span=""];
m5_555 [file="DefaultJobPerformanceProcess.cs", label=jobs, span=""];
m5_556 [file="DefaultJobPerformanceProcess.cs", label="string[]", span=""];
m5_557 [file="DefaultJobPerformanceProcess.cs", label=states, span=""];
m5_558 [file="DefaultJobPerformanceProcess.cs", label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m5_559 [file="DefaultJobPerformanceProcess.cs", label=stats, span=""];
m5_560 [file="DefaultJobPerformanceProcess.cs", label=queueName, span=""];
m6_12 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponent.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m6_6 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponent.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="16-16"];
m6_7 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=red, community=0, file="InfiniteLoopComponent.cs", label="0: true", span="18-18"];
m6_8 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=red, community=0, file="InfiniteLoopComponent.cs", label="1: cancellationToken.ThrowIfCancellationRequested()", span="20-20"];
m6_9 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", color=red, community=0, file="InfiniteLoopComponent.cs", label="1: InnerComponent.Execute(cancellationToken)", span="21-21"];
m6_10 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="InfiniteLoopComponent.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="16-16"];
m6_13 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="InfiniteLoopComponent.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="25-25"];
m6_14 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", color=red, community=0, file="InfiniteLoopComponent.cs", label="1: return InnerComponent.ToString();", span="27-27"];
m6_15 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="InfiniteLoopComponent.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.ToString()", span="25-25"];
m6_0 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="InfiniteLoopComponent.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="8-8"];
m6_1 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=red, community=0, file="InfiniteLoopComponent.cs", label="1: innerComponent == null", span="10-10"];
m6_3 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=red, community=0, file="InfiniteLoopComponent.cs", label="2: InnerComponent = innerComponent", span="11-11"];
m6_2 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", color=red, community=0, file="InfiniteLoopComponent.cs", label="1: throw new ArgumentNullException(''innerComponent'');", span="10-10"];
m6_4 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="InfiniteLoopComponent.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="8-8"];
m6_16 [cluster="object.ToString()", file="InfiniteLoopComponent.cs", label="Entry object.ToString()", span="0-0"];
m6_11 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="InfiniteLoopComponent.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m6_17 [file="InfiniteLoopComponent.cs", label="Hangfire.Server.InfiniteLoopComponent", span=""];
m7_23 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="InfiniteLoopComponentFacts.cs", label=_items, span="71-71"];
m7_19 [cluster="System.Threading.Monitor.Pulse(object)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.Monitor.Pulse(object)", span="0-0"];
m7_20 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65"];
m7_21 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="InfiniteLoopComponentFacts.cs", label="_cts != null", span="67-67"];
m7_22 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="InfiniteLoopComponentFacts.cs", label="_cts.Cancel()", span="69-69"];
m7_33 [cluster="System.Diagnostics.Process.Process()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Diagnostics.Process.Process()", span="0-0"];
m7_18 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m7_8 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", span="71-71"];
m7_17 [cluster="Hangfire.States.SucceededState.SerializeData()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158"];
m7_37 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="InfiniteLoopComponentFacts.cs", label="Assert.True(state.IsFinal)", span="61-61"];
m7_6 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="InfiniteLoopComponentFacts.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", span="20-20"];
m7_44 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88"];
m7_45 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m7_7 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m7_26 [cluster="Unk.False", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="1: Entry Unk.False", span=""];
m7_25 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m7_27 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="1: Entry Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47"];
m7_28 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="InfiniteLoopComponentFacts.cs", label="var process = new Process()", span="49-49"];
m7_24 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m7_29 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="InfiniteLoopComponentFacts.cs", label="var state = new SucceededState(process, 0, 0)", span="50-50"];
m7_30 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="InfiniteLoopComponentFacts.cs", label="var data = state.SerializeData()", span="52-52"];
m7_31 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="InfiniteLoopComponentFacts.cs", label="Assert.Contains(''Can not serialize'', data[''Result''])", span="54-54"];
m7_32 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47"];
m7_63 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m7_65 [cluster="System.Threading.ManualResetEventSlim.Set()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m7_0 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11"];
m7_1 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="InfiniteLoopComponentFacts.cs", label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="13-13"];
m7_2 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11"];
m7_3 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="InfiniteLoopComponentFacts.cs", label="_prefetchThread = new Thread(Prefetch)\r\n                {\r\n                    Name = String.Format(''HangFire.Prefetch.{0}'', ''queue''),\r\n                    IsBackground = true\r\n                }", span="30-34"];
m7_4 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m7_5 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="InfiniteLoopComponentFacts.cs", label="var state = CreateState()", span="19-19"];
m7_9 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m7_10 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="var payload = _items.Take(cancellationToken)", span="50-50"];
m7_11 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label=_items, span="52-52"];
m7_13 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="_jobIsReady.Reset()", span="56-56"];
m7_12 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="_items.Count == 0", span="54-54"];
m7_14 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Monitor.Pulse(_items)", span="59-59"];
m7_15 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="return payload;", span="62-62"];
m7_16 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m7_40 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="InfiniteLoopComponentFacts.cs", label="JobState.Apply(_innerFetcher.Redis, payload.Id, enqueuedState)", span="96-96"];
m7_41 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="InfiniteLoopComponentFacts.cs", label="JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="97-97"];
m7_42 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="InfiniteLoopComponentFacts.cs", label=Exception, span="100-100"];
m7_43 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="InfiniteLoopComponentFacts.cs", label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="102-102"];
m7_34 [cluster="Unk.Contains", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Contains", span=""];
m7_38 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58"];
m7_39 [cluster="Unk.True", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.True", span=""];
m7_49 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106"];
m7_51 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label=_items, span="112-112"];
m7_52 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="114-114"];
m7_53 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="Monitor.Wait(_items)", span="116-116"];
m7_54 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="120-120"];
m7_55 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label=_items, span="122-122"];
m7_56 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="_items.Add(payload)", span="124-124"];
m7_57 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="_jobIsReady.Set()", span="126-126"];
m7_60 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="_logger.Fatal(''Unexpected exception caught. Jobs will not be fetched.'', ex)", span="135-135"];
m7_50 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label=true, span="110-110"];
m7_59 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label=Exception, span="133-133"];
m7_58 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label=OperationCanceledException, span="130-130"];
m7_61 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106"];
m7_47 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m7_64 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m7_66 [cluster="Unk.Fatal", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Fatal", span=""];
m7_35 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58"];
m7_46 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m7_62 [cluster="System.Threading.Monitor.Wait(object)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.Monitor.Wait(object)", span="0-0"];
m7_36 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m7_48 [cluster="Unk.Error", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Error", span=""];
m7_67 [file="InfiniteLoopComponentFacts.cs", label="HangFire.Server.PrefetchJobFetcher", span=""];
m9_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m9_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m10_2 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IServerSupervisor.cs", label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m10_3 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="IServerSupervisor.cs", label="Exit Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m10_0 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="IServerSupervisor.cs", label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m10_1 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="IServerSupervisor.cs", label="Exit Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m11_84 [cluster="Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", file="Program.cs", label="Entry Hangfire.IGlobalConfiguration.UseSqlServerStorage(string)", span="25-25"];
m11_127 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m11_150 [cluster="System.Collections.Generic.List<T>.List()", file="Program.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_91 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="Program.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="69-69"];
m11_26 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="64-64"];
m11_27 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="66-66"];
m11_0 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m11_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", color=green, community=0, file="Program.cs", label="1: Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m11_7 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27"];
m11_9 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m11_6 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27"];
m11_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m11_58 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var number = count++", span="133-133"];
m11_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m11_78 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''continuations'', StringComparison.OrdinalIgnoreCase)", span="182-182"];
m11_79 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="WriteString(''Hello, Hangfire continuations!'')", span="184-184"];
m11_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m11_80 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Press Enter to exit...'')", span="189-189"];
m11_57 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var seconds = int.Parse(command.Substring(2))", span="132-132"];
m11_59 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="134-134"];
m11_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m11_76 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''generic'', StringComparison.OrdinalIgnoreCase)", span="177-177"];
m11_77 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<GenericServices<string>>(x => x.Method(''hello'', 1))", span="179-179"];
m11_12 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34"];
m11_13 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34"];
m11_14 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m11_23 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m11_24 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m11_32 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="76-76"];
m11_33 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(6))", span="78-78"];
m11_38 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="85-85"];
m11_39 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="87-87"];
m11_44 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''custom'', StringComparison.OrdinalIgnoreCase)", span="94-94"];
m11_45 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(7))", span="96-96"];
m11_50 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''fullargs'', StringComparison.OrdinalIgnoreCase)", span="108-108"];
m11_51 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(9))", span="110-110"];
m11_56 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="130-130"];
m11_60 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="137-137"];
m11_61 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var iterations = int.Parse(command.Substring(11))", span="139-139"];
m11_63 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="143-143"];
m11_64 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(7))", span="145-145"];
m11_70 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="153-153"];
m11_71 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var workCount = int.Parse(command.Substring(5))", span="157-157"];
m11_81 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.ReadLine()", span="190-190"];
m11_3 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m11_73 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(''Jobs enqueued.'')", span="169-169"];
m11_75 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Console.WriteLine(ex.Message)", span="173-173"];
m11_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m11_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m11_20 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m11_22 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m11_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m11_29 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m11_31 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m11_34 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="79-79"];
m11_35 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="79-79"];
m11_40 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="88-88"];
m11_41 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="88-88"];
m11_46 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="97-97"];
m11_47 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="97-97"];
m11_52 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="111-111"];
m11_53 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="111-111"];
m11_62 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="140-140"];
m11_65 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var i = 0", span="146-146"];
m11_66 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i < workCount", span="146-146"];
m11_72 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="158-168"];
m11_2 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
m11_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m11_36 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="81-81"];
m11_42 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="90-90"];
m11_48 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                ))", span="99-104"];
m11_54 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' }))", span="113-126"];
m11_67 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="148-148"];
m11_74 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label=Exception, span="171-171"];
m11_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m11_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m11_21 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40"];
m11_28 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m11_30 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="Program.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m11_37 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="79-79"];
m11_43 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="88-88"];
m11_49 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="97-97"];
m11_55 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="111-111"];
m11_69 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="i++", span="146-146"];
m11_1 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="Program.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
m11_68 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="BackgroundJob.Delete(jobId)", span="149-149"];
m11_82 [cluster="ConsoleSample.Program.Main()", file="Program.cs", label="Exit ConsoleSample.Program.Main()", span="9-9"];
m11_190 [cluster="ConsoleSample.Services.Write(char)", file="Program.cs", label="Entry ConsoleSample.Services.Write(char)", span="99-99"];
m11_141 [cluster="System.Random.Random()", file="Program.cs", label="Entry System.Random.Random()", span="0-0"];
m11_197 [cluster="ConsoleSample.Services.WriteBlankLine()", file="Program.cs", label="Entry ConsoleSample.Services.WriteBlankLine()", span="104-104"];
m11_143 [cluster="ConsoleSample.Services.CustomObject.CustomObject()", file="Program.cs", label="Entry ConsoleSample.Services.CustomObject.CustomObject()", span="93-93"];
m11_151 [cluster="ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", file="Program.cs", label="Entry ConsoleSample.Services.FullArgs(bool, int, char, System.DayOfWeek, string, System.TimeSpan, System.DateTime, ConsoleSample.Services.CustomObject, string[], int[], long[], object[], System.Collections.Generic.List<string>)", span="76-76"];
m11_171 [cluster="ConsoleSample.Services.EmptyCritical()", file="Program.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="18-18"];
m11_149 [cluster="System.DateTime.DateTime(int, int, int)", file="Program.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m11_102 [cluster="Hangfire.BackgroundJob.Delete(string)", file="Program.cs", label="Entry Hangfire.BackgroundJob.Delete(string)", span="149-149"];
m11_131 [cluster="ConsoleSample.Services.Error()", file="Program.cs", label="Entry ConsoleSample.Services.Error()", span="23-23"];
m11_88 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="Program.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m11_96 [cluster="int.Parse(string)", file="Program.cs", label="Entry int.Parse(string)", span="0-0"];
m11_86 [cluster="Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", file="Program.cs", label="Entry Hangfire.RecurringJob.AddOrUpdate(System.Linq.Expressions.Expression<System.Action>, System.Func<string>)", span="52-52"];
m11_100 [cluster="System.TimeSpan.FromSeconds(double)", file="Program.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_123 [cluster="ConsoleSample.Services.Random(int)", file="Program.cs", label="Entry ConsoleSample.Services.Random(int)", span="30-30"];
m11_136 [cluster="System.Guid.ToString()", file="Program.cs", label="Entry System.Guid.ToString()", span="0-0"];
m11_95 [cluster="string.Substring(int)", file="Program.cs", label="Entry string.Substring(int)", span="0-0"];
m11_94 [cluster="string.StartsWith(string, System.StringComparison)", file="Program.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m11_144 [cluster="ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", file="Program.cs", label="Entry ConsoleSample.Services.Custom(int, string[], ConsoleSample.Services.CustomObject, System.DayOfWeek)", span="72-72"];
m11_137 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="Program.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="67-67"];
m11_87 [cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", file="Program.cs", label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string)", span="27-27"];
m11_92 [cluster="System.Console.ReadLine()", file="Program.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m11_158 [cluster="ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", file="Program.cs", label="Entry ConsoleSample.Services.Cancelable(int, Hangfire.IJobCancellationToken)", span="47-47"];
m11_104 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="Entry ConsoleSample.Program.WriteString(string)", span="193-193"];
m11_181 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="i < value.Length", span="197-197"];
m11_180 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="var i = 1", span="197-197"];
m11_183 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="i++", span="197-197"];
m11_182 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="lastId = BackgroundJob.ContinueWith<Services>(lastId, x => x.Write(value[i]))", span="199-199"];
m11_184 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="BackgroundJob.ContinueWith<Services>(lastId, x => x.WriteBlankLine())", span="202-202"];
m11_179 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="var lastId = BackgroundJob.Enqueue<Services>(x => x.Write(value[0]))", span="195-195"];
m11_185 [cluster="ConsoleSample.Program.WriteString(string)", file="Program.cs", label="Exit ConsoleSample.Program.WriteString(string)", span="193-193"];
m11_148 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="Program.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m11_90 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="Program.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="33-33"];
m11_89 [cluster="Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", file="Program.cs", label="Entry Hangfire.RecurringJob.AddOrUpdate(string, System.Linq.Expressions.Expression<System.Action>, string, System.TimeZoneInfo)", span="96-96"];
m11_124 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="66-66"];
m11_117 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="21-21"];
m11_153 [cluster="lambda expression", file="Program.cs", label="x.Random(number)", span="134-134"];
m11_114 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="20-20"];
m11_119 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="21-21"];
m11_118 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Russian'')", span="21-21"];
m11_188 [cluster="lambda expression", file="Program.cs", label="x.Write(value[0])", span="195-195"];
m11_192 [cluster="lambda expression", file="Program.cs", label="x.Write(value[i])", span="199-199"];
m11_191 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="199-199"];
m11_194 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="202-202"];
m11_152 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="134-134"];
m11_154 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="134-134"];
m11_111 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="19-19"];
m11_116 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="20-20"];
m11_115 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''UTC'')", span="20-20"];
m11_187 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="195-195"];
m11_189 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="195-195"];
m11_193 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="199-199"];
m11_196 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="202-202"];
m11_195 [cluster="lambda expression", file="Program.cs", label="x.WriteBlankLine()", span="202-202"];
m11_175 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="179-179"];
m11_156 [cluster="lambda expression", file="Program.cs", label="x.Cancelable(iterations, JobCancellationToken.Null)", span="140-140"];
m11_106 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Hello, world!'')", span="16-16"];
m11_109 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Hello'')", span="17-17"];
m11_112 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Hawaiian'')", span="19-19"];
m11_121 [cluster="lambda expression", file="Program.cs", label="x.Random(number)", span="49-49"];
m11_108 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="17-17"];
m11_113 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="19-19"];
m11_165 [cluster="lambda expression", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="162-162"];
m11_166 [cluster="lambda expression", file="Program.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="166-166"];
m11_177 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="179-179"];
m11_176 [cluster="lambda expression", file="Program.cs", label="x.Method(''hello'', 1)", span="179-179"];
m11_155 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="140-140"];
m11_157 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="140-140"];
m11_163 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="158-168"];
m11_105 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="16-16"];
m11_107 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="16-16"];
m11_110 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="17-17"];
m11_120 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="49-49"];
m11_122 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="49-49"];
m11_128 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="81-81"];
m11_132 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="90-90"];
m11_138 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="99-104"];
m11_145 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="113-126"];
m11_159 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="148-148"];
m11_164 [cluster="lambda expression", file="Program.cs", label="i % 2 == 0", span="160-160"];
m11_167 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="158-168"];
m11_168 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="162-162"];
m11_172 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="166-166"];
m11_130 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="81-81"];
m11_129 [cluster="lambda expression", file="Program.cs", label="x.Error()", span="81-81"];
m11_134 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="90-90"];
m11_133 [cluster="lambda expression", file="Program.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="90-90"];
m11_140 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="99-104"];
m11_139 [cluster="lambda expression", file="Program.cs", label="x.Custom(\r\n                                new Random().Next(),\r\n                                new []{ ''Hello'', ''world!'' },\r\n                                new Services.CustomObject { Id = 123 },\r\n                                DayOfWeek.Friday\r\n                                )", span="99-104"];
m11_147 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="113-126"];
m11_146 [cluster="lambda expression", file="Program.cs", label="x.FullArgs(\r\n                                false,\r\n                                123,\r\n                                'c',\r\n                                DayOfWeek.Monday,\r\n                                ''hello'',\r\n                                new TimeSpan(12, 13, 14),\r\n                                new DateTime(2012, 11, 10),\r\n                                new Services.CustomObject { Id = 123 },\r\n                                new[] { ''1'', ''2'', ''3'' },\r\n                                new[] { 4, 5, 6 },\r\n                                new long[0],\r\n                                null,\r\n                                new List<string> { ''7'', ''8'', ''9'' })", span="113-126"];
m11_161 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="148-148"];
m11_160 [cluster="lambda expression", file="Program.cs", label="x.EmptyDefault()", span="148-148"];
m11_170 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="162-162"];
m11_169 [cluster="lambda expression", file="Program.cs", label="x.EmptyCritical()", span="162-162"];
m11_174 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="166-166"];
m11_173 [cluster="lambda expression", file="Program.cs", label="x.EmptyDefault()", span="166-166"];
m11_125 [cluster="lambda expression", file="Program.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="66-66"];
m11_126 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="66-66"];
m11_93 [cluster="string.Equals(string, System.StringComparison)", file="Program.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m11_178 [cluster="ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", file="Program.cs", label="Entry ConsoleSample.GenericServices<TType>.Method<TMethod>(TType, TMethod)", span="6-6"];
m11_103 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="Program.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m11_135 [cluster="System.Guid.NewGuid()", file="Program.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_99 [cluster="Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="Program.cs", label="Entry Hangfire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="61-61"];
m11_186 [cluster="Hangfire.BackgroundJob.ContinueWith<T>(string, System.Linq.Expressions.Expression<System.Action<T>>)", file="Program.cs", label="Entry Hangfire.BackgroundJob.ContinueWith<T>(string, System.Linq.Expressions.Expression<System.Action<T>>)", span="206-206"];
m11_85 [cluster="Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", file="Program.cs", label="Entry Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage>.UseMsmqQueues(string, params string[])", span="25-25"];
m11_142 [cluster="System.Random.Next()", file="Program.cs", label="Entry System.Random.Next()", span="0-0"];
m11_101 [cluster="Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="Program.cs", label="Entry Hangfire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="120-120"];
m11_97 [cluster="Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Program.cs", label="Entry Hangfire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m11_83 [cluster="Hangfire.IGlobalConfiguration.UseColouredConsoleLogProvider()", file="Program.cs", label="Entry Hangfire.IGlobalConfiguration.UseColouredConsoleLogProvider()", span="71-71"];
m11_98 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_162 [cluster="ConsoleSample.Services.EmptyDefault()", file="Program.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="13-13"];
m11_199 [file="Program.cs", label=number, span=""];
m11_201 [file="Program.cs", label=string, span=""];
m11_202 [file="Program.cs", label=i, span=""];
m11_200 [file="Program.cs", label=iterations, span=""];
m11_198 [file="Program.cs", label=number, span=""];
m12_10 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="43-43"];
m12_11 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="0: var owinContext = new OwinContext(context.OwinEnvironment)", span="45-45"];
m12_12 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="RecurringJobScheduler.cs", label="owinContext.Response.ContentType = _contentType", span="47-47"];
m12_13 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="RecurringJobScheduler.cs", label="owinContext.Response.Expires = DateTime.Now.AddYears(1)", span="48-48"];
m12_14 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", color=green, community=0, file="RecurringJobScheduler.cs", label="1: WriteResponse(owinContext.Response)", span="50-50"];
m12_15 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="RecurringJobScheduler.cs", label="return Task.FromResult(true);", span="52-52"];
m12_16 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="43-43"];
m12_20 [cluster="System.Threading.Tasks.Task.FromResult<TResult>(TResult)", file="RecurringJobScheduler.cs", label="Entry System.Threading.Tasks.Task.FromResult<TResult>(TResult)", span="0-0"];
m12_35 [cluster="System.ArgumentException.ArgumentException(string)", file="RecurringJobScheduler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m12_19 [cluster="Unk.WriteResponse", file="RecurringJobScheduler.cs", label="Entry Unk.WriteResponse", span=""];
m12_37 [cluster="System.Math.Min(long, long)", file="RecurringJobScheduler.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m12_36 [cluster="string.Format(string, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_18 [cluster="System.DateTime.AddYears(int)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.AddYears(int)", span="0-0"];
m12_24 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="60-60"];
m12_25 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="var inputStream = assembly.GetManifestResourceStream(resourceName)", span="62-62"];
m12_27 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="throw new ArgumentException(string.Format(\r\n                        @''Resource with name {0} not found in assembly {1}.'',\r\n                        resourceName, assembly));", span="66-68"];
m12_31 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="response.Write(buffer, 0, readLength)", span="75-75"];
m12_26 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="inputStream == null", span="64-64"];
m12_28 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="var buffer = new byte[Math.Min(inputStream.Length, 4096)]", span="71-71"];
m12_29 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="var readLength = inputStream.Read(buffer, 0, buffer.Length)", span="72-72"];
m12_32 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="readLength = inputStream.Read(buffer, 0, buffer.Length)", span="76-76"];
m12_30 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="readLength > 0", span="73-73"];
m12_33 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="60-60"];
m12_38 [cluster="System.IO.Stream.Read(byte[], int, int)", file="RecurringJobScheduler.cs", label="Entry System.IO.Stream.Read(byte[], int, int)", span="0-0"];
m12_0 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="30-30"];
m12_1 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="RecurringJobScheduler.cs", label="1: contentType == null", span="35-35"];
m12_3 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="assembly == null", span="36-36"];
m12_5 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="_assembly = assembly", span="38-38"];
m12_6 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="RecurringJobScheduler.cs", label="2: _resourceName = resourceName", span="39-39"];
m12_7 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="RecurringJobScheduler.cs", label="2: _contentType = contentType", span="40-40"];
m12_2 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", color=green, community=0, file="RecurringJobScheduler.cs", label="1: throw new ArgumentNullException(''contentType'');", span="35-35"];
m12_4 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''assembly'');", span="36-36"];
m12_8 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.EmbeddedResourceDispatcher(string, System.Reflection.Assembly, string)", span="30-30"];
m12_17 [cluster="OwinContext.cstr", file="RecurringJobScheduler.cs", label="Entry OwinContext.cstr", span=""];
m12_34 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="RecurringJobScheduler.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m12_39 [cluster="Unk.Write", file="RecurringJobScheduler.cs", label="Entry Unk.Write", span=""];
m12_21 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="55-55"];
m12_22 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="RecurringJobScheduler.cs", label="WriteResource(response, _assembly, _resourceName)", span="57-57"];
m12_23 [cluster="Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Dashboard.EmbeddedResourceDispatcher.WriteResponse(IOwinResponse)", span="55-55"];
m12_40 [file="RecurringJobScheduler.cs", label="Hangfire.Dashboard.EmbeddedResourceDispatcher", span=""];
m13_35 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m13_5 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", color=red, community=0, file="SchedulePoller.cs", label="2: _storage = storage", span="42-42"];
m13_0 [cluster="HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SchedulePoller.cs", label="Entry HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m13_1 [cluster="HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SchedulePoller.cs", label="2: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m13_3 [cluster="HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SchedulePoller.cs", label="2: testRunner.OnFeatureStart(featureInfo)", span="34-34"];
m13_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SchedulePoller.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m13_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SchedulePoller.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m13_2 [cluster="HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SchedulePoller.cs", label="2: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobActivator'', '''', ProgrammingLanguage.CSharp, ((string[])(null)))", span="33-33"];
m13_4 [cluster="HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SchedulePoller.cs", label="Exit HangFire.Tests.JobActivatorFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m13_8 [cluster="Unk.OnFeatureStart", file="SchedulePoller.cs", label="Entry Unk.OnFeatureStart", span=""];
m13_34 [cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m13_20 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m13_21 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.ToString()", span="66-66"];
m13_22 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs", label="return ''Schedule Poller'';", span="68-68"];
m13_23 [cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.ToString()", span="66-66"];
m13_37 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_36 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m13_39 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SchedulePoller.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m13_19 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SchedulePoller.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m13_18 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71"];
m13_24 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", color=red, community=0, file="SchedulePoller.cs", label="2: var connection = _storage.GetConnection()", span="73-73"];
m13_25 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="75-75"];
m13_26 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="78-79"];
m13_29 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", color=red, community=0, file="SchedulePoller.cs", label="2: var stateMachine = _stateMachineFactory.Create(connection)", span="86-86"];
m13_27 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="81-81"];
m13_31 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="92-92"];
m13_28 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return false;", span="83-83"];
m13_30 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="87-90"];
m13_32 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return true;", span="94-94"];
m13_33 [cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71"];
m13_14 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_enqueuedCount = 0", span="54-54"];
m13_15 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", color=red, community=0, file="SchedulePoller.cs", label="2: cancellationToken.WaitHandle.WaitOne(_pollInterval)", span="57-57"];
m13_16 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_enqueuedCount++", span="62-62"];
m13_17 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Exit Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m13_40 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m13_10 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m13_11 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", color=red, community=0, file="SchedulePoller.cs", label="1: !EnqueueNextScheduledJob()", span="49-49"];
m13_12 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="_enqueuedCount != 0", span="51-51"];
m13_13 [cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="53-53"];
m13_38 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m13_41 [file="SchedulePoller.cs", label="Hangfire.Server.SchedulePoller", span=""];
m15_12 [cluster="System.Collections.Generic.List<T>.List()", file="ServerBootstrapperFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m15_36 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m15_37 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, null, _components))", span="52-53"];
m15_38 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="55-55"];
m15_39 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="50-50"];
m15_63 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m15_64 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="80-80"];
m15_65 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="82-82"];
m15_66 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="84-84"];
m15_67 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="85-85"];
m15_68 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="78-78"];
m15_19 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m15_20 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null, _context, _storage.Object, _components))", span="34-35"];
m15_21 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="37-37"];
m15_22 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="32-32"];
m15_10 [cluster="Mock<IStorageConnection>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m15_0 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m15_4 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: _cts = new CancellationTokenSource()", span="25-25"];
m15_3 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="24-24"];
m15_5 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: _components = new List<IServerComponent>()", span="26-26"];
m15_6 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="28-28"];
m15_1 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_context = new ServerContext()", span="22-22"];
m15_2 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="_storage = new Mock<JobStorage>()", span="23-23"];
m15_7 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="20-20"];
m15_94 [cluster="System.Threading.Thread.Sleep(int)", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m15_77 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m15_78 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var component1 = CreateComponentMock()", span="92-92"];
m15_79 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="93-93"];
m15_83 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="2: component1.Verify(x => x.Execute(_cts.Token))", span="102-102"];
m15_80 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var component2 = CreateComponentMock()", span="95-95"];
m15_82 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="99-99"];
m15_84 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: component2.Verify(x => x.Execute(_cts.Token))", span="103-103"];
m15_81 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="96-96"];
m15_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="89-89"];
m15_23 [cluster="Unk.>", file="ServerBootstrapperFacts.cs", label="Entry Unk.>", span=""];
m15_56 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m15_110 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: return new ServerBootstrapper(ServerId, _context, _storage.Object, _components);", span="118-118"];
m15_111 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="116-116"];
m15_86 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m15_112 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="2: var mock = new Mock<IServerComponent>()", span="123-123"];
m15_113 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: _components.Add(mock.Object)", span="124-124"];
m15_114 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="2: return mock;", span="126-126"];
m15_115 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateComponentMock()", span="121-121"];
m15_18 [cluster="Unk.GetConnection", file="ServerBootstrapperFacts.cs", label="Entry Unk.GetConnection", span=""];
m15_117 [cluster="Unk.Add", file="ServerBootstrapperFacts.cs", label="Entry Unk.Add", span=""];
m15_8 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m15_101 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m15_102 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="109-109"];
m15_103 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="111-111"];
m15_104 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.RemoveServer(ServerId))", span="113-113"];
m15_105 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="107-107"];
m15_29 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m15_30 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, null, _storage.Object, _components))", span="43-44"];
m15_31 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="46-46"];
m15_32 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="41-41"];
m15_13 [cluster="Unk.Setup", file="ServerBootstrapperFacts.cs", label="Entry Unk.Setup", span=""];
m15_76 [cluster="Unk.Dispose", file="ServerBootstrapperFacts.cs", label="Entry Unk.Dispose", span=""];
m15_51 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m15_52 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="var server = CreateServer()", span="70-70"];
m15_53 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="server.Execute(_cts.Token)", span="72-72"];
m15_54 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="_connection.Verify(x => x.AnnounceServer(ServerId, _context))", span="74-74"];
m15_55 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="68-68"];
m15_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m15_28 [cluster="ServerBootstrapper.cstr", file="ServerBootstrapperFacts.cs", label="Entry ServerBootstrapper.cstr", span=""];
m15_116 [cluster="Mock<IServerComponent>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m15_44 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m15_46 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Assert.Equal(''components'', exception.ParamName)", span="64-64"];
m15_45 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(ServerId, _context, _storage.Object, null))", span="61-62"];
m15_47 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenComponentsCollection_IsNull()", span="59-59"];
m15_106 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="113-113"];
m15_25 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="35-35"];
m15_26 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(null, _context, _storage.Object, _components)", span="35-35"];
m15_27 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="35-35"];
m15_33 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="44-44"];
m15_34 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(ServerId, null, _storage.Object, _components)", span="44-44"];
m15_35 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="44-44"];
m15_40 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="53-53"];
m15_41 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: new ServerBootstrapper(ServerId, _context, null, _components)", span="53-53"];
m15_42 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="53-53"];
m15_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="93-93"];
m15_91 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="93-93"];
m15_95 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="102-102"];
m15_98 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="103-103"];
m15_89 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: x.Execute(It.IsAny<CancellationToken>())", span="93-93"];
m15_90 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="93-93"];
m15_92 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: Thread.Sleep(100)", span="93-93"];
m15_93 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="93-93"];
m15_96 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="1: x.Execute(_cts.Token)", span="102-102"];
m15_97 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="102-102"];
m15_99 [cluster="lambda expression", color=green, community=1, file="ServerBootstrapperFacts.cs", label="1: x.Execute(_cts.Token)", span="103-103"];
m15_100 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="103-103"];
m15_49 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ServerBootstrapper(ServerId, _context, _storage.Object, null)", span="62-62"];
m15_60 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.AnnounceServer(ServerId, _context)", span="74-74"];
m15_15 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="28-28"];
m15_48 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="62-62"];
m15_50 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="62-62"];
m15_59 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="74-74"];
m15_61 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="74-74"];
m15_70 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="84-84"];
m15_73 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="85-85"];
m15_17 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="28-28"];
m15_16 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="28-28"];
m15_72 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="84-84"];
m15_71 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.GetConnection()", span="84-84"];
m15_75 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="85-85"];
m15_74 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.Dispose()", span="85-85"];
m15_107 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="x.RemoveServer(ServerId)", span="113-113"];
m15_108 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="113-113"];
m15_62 [cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.AnnounceServer", span=""];
m15_69 [cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m15_43 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(string, Hangfire.Server.ServerContext, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerComponent>)", span="29-29"];
m15_109 [cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.RemoveServer", span=""];
m15_57 [cluster="Unk.Execute", file="ServerBootstrapperFacts.cs", label="Entry Unk.Execute", span=""];
m15_87 [cluster="Unk.Callback", file="ServerBootstrapperFacts.cs", label="Entry Unk.Callback", span=""];
m15_14 [cluster="Unk.Returns", file="ServerBootstrapperFacts.cs", label="Entry Unk.Returns", span=""];
m15_58 [cluster="Unk.Verify", file="ServerBootstrapperFacts.cs", label="Entry Unk.Verify", span=""];
m15_9 [cluster="Mock<JobStorage>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m15_118 [file="ServerBootstrapperFacts.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
m16_65 [cluster="HangFire.Web.RazorPage.Write(object)", file="ServerComponentExtensions.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m16_60 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerComponentExtensions.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m16_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m16_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=red, community=0, file="ServerComponentExtensions.cs", label="1: WriteLiteral(''\r\n'')", span="61-61"];
m16_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74"];
m16_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="IList<QueueWithTopEnqueuedJobsDto> queues", span="76-76"];
m16_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="78-78"];
m16_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="queues = monitor.Queues()", span="80-80"];
m16_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\r\n'')", span="87-87"];
m16_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="queues.Count == 0", span="92-92"];
m16_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label=queues, span="126-126"];
m16_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        No queued jobs found. Try to enque'' +\r\n''ue a job.\r\n    </div>\r\n'')", span="98-99"];
m16_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Fetched</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="111-121"];
m16_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a class='' +\r\n''\''label-queue\'' href=\'''')", span="132-133"];
m16_58 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="445-445"];
m16_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="138-138"];
m16_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(queue.Name)", span="148-148"];
m16_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(queue.Length)", span="159-159"];
m16_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="queue.Fetched.HasValue", span="169-169"];
m16_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(Request.LinkTo(''/queues/fetched/'' + queue.Name))", span="180-180"];
m16_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(queue.Fetched)", span="190-190"];
m16_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="queue.FirstJobs.Count == 0", span="222-222"];
m16_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="queue.FirstJobs", span="255-255"];
m16_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>\r\n                            '')", span="143-143"];
m16_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="153-154"];
m16_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''</td>\r\n                    <td>\r\n'')", span="164-164"];
m16_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                            <a href=\'''')", span="175-175"];
m16_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                            <em>N/A</em>\r\n'')", span="207-207"];
m16_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>\r\n                                '')", span="185-185"];
m16_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="195-195"];
m16_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="217-217"];
m16_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                            <em>No jobs queued.</em>\r\n'')", span="228-228"];
m16_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(@''                            <table class=''''table table-condensed table-bordered table-inner''''>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=''''min-width''''>Id</th>\r\n                                        <th class=''''min-width''''>State</th>\r\n                                        <th>Job</th>\r\n                                        <th class=''''align-right min-width''''>Enqueued</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n'')", span="240-250"];
m16_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                        <tr class=\'''')", span="261-261"];
m16_56 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                </tbody>\r\n                            </table>\r\n'')", span="425-425"];
m16_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="266-266"];
m16_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>\r\n                                            <td class=\''min-width\''>\r\n         '' +\r\n''                                       <a href=\'''')", span="271-272"];
m16_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="277-277"];
m16_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>'')", span="282-282"];
m16_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(HtmlHelper.JobId(job.Key))", span="287-287"];
m16_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''</a>\r\n'')", span="292-292"];
m16_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="!job.Value.InEnqueuedState", span="297-297"];
m16_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                                    <span title=\''Job\'s state has '' +\r\n''been changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></s'' +\r\n''pan>\r\n'')", span="303-305"];
m16_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''              <td class=\''min-width\''>\r\n                                          '' +\r\n''      <span class=\''label label-default\'' style=\'''')", span="315-317"];
m16_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="322-322"];
m16_41 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="327-327"];
m16_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(job.Value.State)", span="332-332"];
m16_43 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\r\n                                                </span>\r\n                      '' +\r\n''                      </td>\r\n                                            <td>\r\n '' +\r\n''                                               <a class=\''job-method\'' href=\'''')", span="337-339"];
m16_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="344-344"];
m16_45 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="349-349"];
m16_46 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="354-354"];
m16_47 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\r\n                                                </a>\r\n                         '' +\r\n''                   </td>\r\n                                            <td class='' +\r\n''\''align-right min-width\''>\r\n'')", span="359-361"];
m16_48 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="job.Value.EnqueuedAt.HasValue", span="366-366"];
m16_49 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                                    <span data-moment=\'''')", span="372-372"];
m16_54 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                                    <em>n/a</em>\r\n'')", span="404-404"];
m16_50 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="377-377"];
m16_51 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\''>\r\n                                                        '')", span="382-382"];
m16_52 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Write(job.Value.EnqueuedAt)", span="387-387"];
m16_53 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''\r\n                                                    </span>\r\n'')", span="392-392"];
m16_55 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                                            </td>\r\n                              '' +\r\n''          </tr>\r\n'')", span="414-415"];
m16_57 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="WriteLiteral(''                </td>\r\n            </tr>\r\n'')", span="435-435"];
m16_59 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerComponentExtensions.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m16_62 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerComponentExtensions.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m16_61 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerComponentExtensions.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m16_63 [cluster="HangFire.Storage.IMonitoringApi.Queues()", file="ServerComponentExtensions.cs", label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24"];
m16_64 [cluster="HttpRequestBase.LinkTo(string)", file="ServerComponentExtensions.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m16_70 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerComponentExtensions.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m16_68 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerComponentExtensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_69 [cluster="string.Format(string, object)", file="ServerComponentExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_67 [cluster="Unk.Write", file="ServerComponentExtensions.cs", label="Entry Unk.Write", span=""];
m16_66 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerComponentExtensions.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m16_72 [file="ServerComponentExtensions.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m17_5 [cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="ServerComponentExtensionsFacts.cs", label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11"];
m17_10 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="ServerComponentExtensionsFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m17_6 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ServerComponentExtensionsFacts.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m17_0 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerComponentExtensionsFacts.cs", label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m17_1 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerComponentExtensionsFacts.cs", label="SharedContext = new SharedWorkerContextMock()", span="11-11"];
m17_2 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerComponentExtensionsFacts.cs", label="WorkerNumber = 1", span="12-12"];
m17_3 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerComponentExtensionsFacts.cs", label="_context = new Lazy<WorkerContext>(\r\n                () => new WorkerContext(SharedContext.Object, WorkerNumber))", span="14-15"];
m17_4 [cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerComponentExtensionsFacts.cs", label="Exit HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m17_7 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Entry lambda expression", span="15-15"];
m17_8 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="new WorkerContext(SharedContext.Object, WorkerNumber)", span="15-15"];
m17_9 [cluster="lambda expression", file="ServerComponentExtensionsFacts.cs", label="Exit lambda expression", span="15-15"];
m17_11 [file="ServerComponentExtensionsFacts.cs", label="HangFire.Core.Tests.WorkerContextMock", span=""];
m19_39 [cluster="Mock<IState>.cstr", file="ServerHeartbeat.cs", label="Entry Mock<IState>.cstr", span=""];
m19_14 [cluster="lambda expression", color=red, community=0, file="ServerHeartbeat.cs", label="1: Console.WriteLine()", span="21-21"];
m19_8 [cluster="Mock<IWriteOnlyTransaction>.cstr", file="ServerHeartbeat.cs", label="Entry Mock<IWriteOnlyTransaction>.cstr", span=""];
m19_28 [cluster="Unk.Apply", file="ServerHeartbeat.cs", label="Entry Unk.Apply", span=""];
m19_22 [cluster="Unk.Equal", file="ServerHeartbeat.cs", label="Entry Unk.Equal", span=""];
m19_17 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="ServerHeartbeat.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35"];
m19_18 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", color=red, community=0, file="ServerHeartbeat.cs", label="1: var handler = new EnqueuedState.Handler()", span="37-37"];
m19_19 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="ServerHeartbeat.cs", label="Assert.Equal(EnqueuedState.StateName, handler.StateName)", span="38-38"];
m19_48 [cluster="Unk.DoesNotThrow", file="ServerHeartbeat.cs", label="Entry Unk.DoesNotThrow", span=""];
m19_0 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="ServerHeartbeat.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19"];
m19_3 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", color=green, community=0, file="ServerHeartbeat.cs", label="2: _connection = new Mock<IStorageConnection>()", span="24-24"];
m19_1 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", color=red, community=0, file="ServerHeartbeat.cs", label="2: var job = Job.FromExpression(() => Console.WriteLine())", span="21-21"];
m19_4 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", color=red, community=0, file="ServerHeartbeat.cs", label="1: _stateContext = new StateContext(JobId, job)", span="25-25"];
m19_5 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", color=red, community=0, file="ServerHeartbeat.cs", label="0: _context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new EnqueuedState { Queue = Queue }, \r\n                null)", span="27-31"];
m19_6 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="ServerHeartbeat.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19"];
m19_2 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="ServerHeartbeat.cs", label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23"];
m19_7 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerHeartbeat.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m19_40 [cluster="Unk.>", file="ServerHeartbeat.cs", label="Entry Unk.>", span=""];
m19_10 [cluster="Hangfire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs", label="var connection = _storage.GetConnection()", span="39-39"];
m19_12 [cluster="Hangfire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs", label="cancellationToken.WaitHandle.WaitOne(HeartbeatInterval)", span="44-44"];
m19_11 [cluster="Hangfire.Server.ServerHeartbeat.Execute(System.Threading.CancellationToken)", file="ServerHeartbeat.cs", label="connection.Heartbeat(_serverId)", span="41-41"];
m19_52 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ServerHeartbeat.cs", label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="94-94"];
m19_9 [cluster="Mock<IStorageConnection>.cstr", file="ServerHeartbeat.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m19_13 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Entry lambda expression", span="21-21"];
m19_33 [cluster="Unk.AddToQueue", file="ServerHeartbeat.cs", label="Entry Unk.AddToQueue", span=""];
m19_49 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Entry lambda expression", span="67-67"];
m19_15 [cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="ServerHeartbeat.cs", label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m19_30 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Entry lambda expression", span="48-48"];
m19_31 [cluster="lambda expression", file="ServerHeartbeat.cs", label="x.AddToQueue(Queue, JobId)", span="48-48"];
m19_32 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Exit lambda expression", span="48-48"];
m19_42 [cluster="lambda expression", file="ServerHeartbeat.cs", label="handler.Apply(context, _transaction.Object)", span="59-59"];
m19_41 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Entry lambda expression", span="59-59"];
m19_43 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Exit lambda expression", span="59-59"];
m19_50 [cluster="lambda expression", file="ServerHeartbeat.cs", label="handler.Unapply(null, null)", span="67-67"];
m19_51 [cluster="lambda expression", file="ServerHeartbeat.cs", label="Exit lambda expression", span="67-67"];
m19_29 [cluster="Unk.Verify", file="ServerHeartbeat.cs", label="Entry Unk.Verify", span=""];
m19_21 [cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="ServerHeartbeat.cs", label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="79-79"];
m19_20 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="ServerHeartbeat.cs", label="Hangfire.Server.ServerHeartbeat", span=""];
m19_16 [cluster="System.Console.WriteLine()", file="ServerHeartbeat.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m19_34 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="ServerHeartbeat.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52"];
m19_35 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="ServerHeartbeat.cs", label="var handler = new EnqueuedState.Handler()", span="54-54"];
m19_36 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="ServerHeartbeat.cs", label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<IState>().Object, null)", span="55-56"];
m19_37 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="ServerHeartbeat.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="58-59"];
m19_38 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="ServerHeartbeat.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52"];
m19_23 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="ServerHeartbeat.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42"];
m19_24 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", color=red, community=0, file="ServerHeartbeat.cs", label="1: var handler = new EnqueuedState.Handler()", span="44-44"];
m19_25 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="ServerHeartbeat.cs", label="handler.Apply(_context, _transaction.Object)", span="46-46"];
m19_26 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="ServerHeartbeat.cs", label="_transaction.Verify(x => x.AddToQueue(Queue, JobId))", span="48-48"];
m19_27 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="ServerHeartbeat.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42"];
m19_44 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="ServerHeartbeat.cs", label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", span="63-63"];
m19_45 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="ServerHeartbeat.cs", label="var handler = new EnqueuedState.Handler()", span="65-65"];
m19_46 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="ServerHeartbeat.cs", label="Assert.DoesNotThrow(() => handler.Unapply(null, null))", span="67-67"];
m19_47 [cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", file="ServerHeartbeat.cs", label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Unapply_DoesNotDoAnything()", span="63-63"];
m19_53 [file="ServerHeartbeat.cs", label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", span=""];
m19_54 [file="ServerHeartbeat.cs", label=handler, span=""];
m19_55 [file="ServerHeartbeat.cs", label=context, span=""];
m19_56 [file="ServerHeartbeat.cs", label=handler, span=""];
m20_19 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="63-63"];
m20_21 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="var state = _connection.GetStateData(_jobId)", span="65-65"];
m20_22 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="state == null", span="67-67"];
m20_24 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="!state.Name.Equals(ProcessingState.StateName, StringComparison.OrdinalIgnoreCase)", span="72-72"];
m20_26 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", color=red, community=0, file="ServerJobCancellationToken.cs", label="1: !state.Data[''ServerId''].Equals(_workerContext.ServerId)", span="77-77"];
m20_28 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="state.Data[''WorkerNumber''] != _workerContext.WorkerNumber.ToString(CultureInfo.InvariantCulture)", span="82-82"];
m20_23 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="return true;", span="69-69"];
m20_25 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="return true;", span="74-74"];
m20_27 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="return true;", span="79-79"];
m20_29 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="return true;", span="84-84"];
m20_30 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="return false;", span="87-87"];
m20_31 [cluster="Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", file="ServerJobCancellationToken.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.IsJobAborted()", span="63-63"];
m20_0 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32"];
m20_1 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="jobId == null", span="38-38"];
m20_3 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="connection == null", span="39-39"];
m20_5 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="workerContext == null", span="40-40"];
m20_7 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="_jobId = jobId", span="42-42"];
m20_8 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", color=red, community=0, file="ServerJobCancellationToken.cs", label="2: _shutdownToken = shutdownToken", span="43-43"];
m20_9 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="_connection = connection", span="44-44"];
m20_10 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="_workerContext = workerContext", span="45-45"];
m20_2 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="throw new ArgumentNullException(''jobId'');", span="38-38"];
m20_4 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m20_6 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="throw new ArgumentNullException(''workerContext'');", span="40-40"];
m20_11 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="ServerJobCancellationToken.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32"];
m20_13 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="53-53"];
m20_14 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", color=red, community=0, file="ServerJobCancellationToken.cs", label="1: _shutdownToken.ThrowIfCancellationRequested()", span="55-55"];
m20_15 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationToken.cs", label="IsJobAborted()", span="57-57"];
m20_16 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationToken.cs", label="throw new JobAbortedException();", span="59-59"];
m20_17 [cluster="Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationToken.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ThrowIfCancellationRequested()", span="53-53"];
m20_32 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m20_34 [cluster="string.Equals(string)", file="ServerJobCancellationToken.cs", label="Entry string.Equals(string)", span="0-0"];
m20_35 [cluster="int.ToString(System.IFormatProvider)", file="ServerJobCancellationToken.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m20_20 [cluster="Hangfire.Server.JobAbortedException.JobAbortedException()", file="ServerJobCancellationToken.cs", label="Entry Hangfire.Server.JobAbortedException.JobAbortedException()", span="20-20"];
m20_33 [cluster="string.Equals(string, System.StringComparison)", file="ServerJobCancellationToken.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m20_18 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationToken.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m20_36 [file="ServerJobCancellationToken.cs", label="Hangfire.Server.ServerJobCancellationToken", span=""];
m22_31 [cluster="Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", span="72-72"];
m22_32 [cluster="Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors.Add(item)", span="74-74"];
m22_33 [cluster="Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Add(Hangfire.Server.IServerSupervisor)", span="72-72"];
m22_26 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m22_6 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m22_47 [cluster="Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", span="92-92"];
m22_48 [cluster="Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: return _supervisors.Remove(item);", span="94-94"];
m22_49 [cluster="Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Remove(Hangfire.Server.IServerSupervisor)", span="92-92"];
m22_50 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m22_43 [cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87"];
m22_44 [cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors.CopyTo(array, arrayIndex)", span="89-89"];
m22_45 [cluster="Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.CopyTo(Hangfire.Server.IServerSupervisor[], int)", span="87-87"];
m22_30 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="ServerSupervisorCollection.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m22_23 [cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", span="62-62"];
m22_24 [cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: return _supervisors.GetEnumerator();", span="64-64"];
m22_25 [cluster="Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.GetEnumerator()", span="62-62"];
m22_42 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m22_12 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44"];
m22_13 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors", span="46-46"];
m22_14 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: supervisor.Stop()", span="48-48"];
m22_15 [cluster="Hangfire.Server.ServerSupervisorCollection.Stop()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Stop()", span="44-44"];
m22_0 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26"];
m22_1 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: supervisors == null", span="28-28"];
m22_3 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors = new List<IServerSupervisor>(supervisors)", span="30-30"];
m22_2 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: throw new ArgumentNullException(''supervisors'');", span="28-28"];
m22_4 [cluster="Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.ServerSupervisorCollection(System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>)", span="26-26"];
m22_17 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52"];
m22_18 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: Stop()", span="54-54"];
m22_19 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors", span="56-56"];
m22_20 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: supervisor.Dispose()", span="58-58"];
m22_21 [cluster="Hangfire.Server.ServerSupervisorCollection.Dispose()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Dispose()", span="52-52"];
m22_7 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36"];
m22_8 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors", span="38-38"];
m22_9 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: supervisor.Start()", span="40-40"];
m22_10 [cluster="Hangfire.Server.ServerSupervisorCollection.Start()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Start()", span="36-36"];
m22_27 [cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67"];
m22_28 [cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: return ((IEnumerable) _supervisors).GetEnumerator();", span="69-69"];
m22_29 [cluster="Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.System.Collections.IEnumerable.GetEnumerator()", span="67-67"];
m22_11 [cluster="Hangfire.Server.IServerSupervisor.Start()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.IServerSupervisor.Start()", span="22-22"];
m22_34 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m22_39 [cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", span="82-82"];
m22_40 [cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: return _supervisors.Contains(item);", span="84-84"];
m22_41 [cluster="Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Contains(Hangfire.Server.IServerSupervisor)", span="82-82"];
m22_16 [cluster="Hangfire.Server.IServerSupervisor.Stop()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.IServerSupervisor.Stop()", span="23-23"];
m22_22 [cluster="System.IDisposable.Dispose()", file="ServerSupervisorCollection.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m22_46 [cluster="System.Collections.Generic.List<T>.CopyTo(T[], int)", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.CopyTo(T[], int)", span="0-0"];
m22_38 [cluster="System.Collections.Generic.List<T>.Clear()", file="ServerSupervisorCollection.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m22_35 [cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="ServerSupervisorCollection.cs", label="Entry Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77"];
m22_36 [cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", color=red, community=0, file="ServerSupervisorCollection.cs", label="1: _supervisors.Clear()", span="79-79"];
m22_37 [cluster="Hangfire.Server.ServerSupervisorCollection.Clear()", file="ServerSupervisorCollection.cs", label="Exit Hangfire.Server.ServerSupervisorCollection.Clear()", span="77-77"];
m22_51 [file="ServerSupervisorCollection.cs", label="Hangfire.Server.ServerSupervisorCollection", span=""];
m23_4 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", span="21-21"];
m23_5 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: GivenAServerThatWasStarted(ServerSteps.DefaultServerName, startedAt)", span="23-23"];
m23_6 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", span="21-21"];
m23_0 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", span="15-15"];
m23_1 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _watchdog = new ServerWatchdog(Redis.Storage)", span="17-17"];
m23_2 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", span="15-15"];
m23_23 [cluster="System.TimeSpan.FromMinutes(double)", file="ServerSupervisorCollectionFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m23_33 [cluster="Unk.IsTrue", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.IsTrue", span=""];
m23_18 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenThereAreNoAnyHeartbeats()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenThereAreNoAnyHeartbeats()", span="46-46"];
m23_19 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenThereAreNoAnyHeartbeats()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenThereAreNoAnyHeartbeats()", span="46-46"];
m23_14 [cluster="Unk.SetEntryInHash", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m23_11 [cluster="Unk.AddItemToSet", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m23_12 [cluster="string.Format(string, object)", file="ServerSupervisorCollectionFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_3 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m23_38 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="77-77"];
m23_39 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="2: Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="79-79"];
m23_40 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Assert.IsFalse(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="80-81"];
m23_41 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="77-77"];
m23_42 [cluster="Unk.IsFalse", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.IsFalse", span=""];
m23_20 [cluster="HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", span="51-51"];
m23_21 [cluster="HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: _watchdog.RemoveTimedOutServers(TimeSpan.FromMinutes(1))", span="53-53"];
m23_22 [cluster="HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", span="51-51"];
m23_16 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', ServerSteps.DefaultServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(lastHeartbeat))", span="39-42"];
m23_15 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", span="37-37"];
m23_17 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", span="37-37"];
m23_35 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="71-71"];
m23_36 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: ThenTheServerShouldBeRemoved(ServerSteps.DefaultServerName)", span="73-73"];
m23_37 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="71-71"];
m23_28 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", span="63-63"];
m23_29 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="2: Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="65-65"];
m23_30 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Assert.IsTrue(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="66-67"];
m23_31 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", span="63-63"];
m23_32 [cluster="Unk.SetContainsItem", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.SetContainsItem", span=""];
m23_24 [cluster="HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Server.Components.ServerWatchdog.RemoveTimedOutServers(System.TimeSpan)", span="38-38"];
m23_9 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', name),\r\n                ''StartedAt'',\r\n                JobHelper.ToStringTimestamp(startedAt))", span="30-33"];
m23_7 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="27-27"];
m23_8 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: Redis.Client.AddItemToSet(''hangfire:servers'', name)", span="29-29"];
m23_10 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="27-27"];
m23_25 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="ServerSupervisorCollectionFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="57-57"];
m23_26 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", color=red, community=0, file="ServerSupervisorCollectionFacts.cs", label="1: ThenTheServerShouldNotBeRemoved(ServerSteps.DefaultServerName)", span="59-59"];
m23_27 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="ServerSupervisorCollectionFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="57-57"];
m23_34 [cluster="Unk.ContainsKey", file="ServerSupervisorCollectionFacts.cs", label="Entry Unk.ContainsKey", span=""];
m23_43 [file="ServerSupervisorCollectionFacts.cs", label="HangFire.Tests.ServerWatchdogSteps", span=""];
m24_83 [cluster="Hangfire.Server.ServerSupervisor.Stop()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Server.ServerSupervisor.Stop()", span="70-70"];
m24_152 [cluster="Unk.Same", file="ServerSupervisorFacts.cs", label="Entry Unk.Same", span=""];
m24_137 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m24_138 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: var component = new DisposableComponent()", span="176-176"];
m24_139 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: var supervisor = new ServerSupervisor(component, _options)", span="177-177"];
m24_144 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.True(component.Disposed)", span="187-187"];
m24_140 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="179-179"];
m24_142 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Dispose()", span="183-183"];
m24_141 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(100)", span="180-180"];
m24_143 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(100)", span="184-184"];
m24_145 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m24_166 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Dispose()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Dispose()", span="214-214"];
m24_167 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Dispose()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: Disposed = true", span="216-216"];
m24_168 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Dispose()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Dispose()", span="214-214"];
m24_146 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.DisposableComponent()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.DisposableComponent()", span="205-205"];
m24_38 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerSupervisorFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m24_70 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m24_71 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: int timesExecuted = 0", span="92-92"];
m24_72 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="94-94"];
m24_73 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: _component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Sleep(50); })", span="95-96"];
m24_74 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="98-98"];
m24_75 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Stop()", span="101-101"];
m24_76 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="102-102"];
m24_77 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: timesExecuted = 0", span="103-103"];
m24_78 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="105-105"];
m24_79 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.Equal(0, timesExecuted)", span="108-108"];
m24_80 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m24_40 [cluster="Hangfire.Server.ServerSupervisor.Dispose()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Server.ServerSupervisor.Dispose()", span="84-84"];
m24_24 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m24_25 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.DoesNotThrow(() => new ServerSupervisor(_component.Object))", span="43-43"];
m24_26 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m24_27 [cluster="Unk.DoesNotThrow", file="ServerSupervisorFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m24_91 [cluster="System.Threading.Thread.Sleep(int)", file="ServerSupervisorFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m24_10 [cluster="Unk.>", file="ServerSupervisorFacts.cs", label="Entry Unk.>", span=""];
m24_147 [cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent, Hangfire.Server.ServerSupervisorOptions)", span="41-41"];
m24_126 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m24_127 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="156-156"];
m24_128 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="157-157"];
m24_129 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.DoesNotThrow(supervisor.Dispose)", span="159-159"];
m24_130 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m24_37 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.CreateSupervisor()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.CreateSupervisor()", span="198-198"];
m24_153 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.CreateSupervisor()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: _component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => Thread.Sleep(50))", span="200-201"];
m24_154 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.CreateSupervisor()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: return new ServerSupervisor(_component.Object, _options);", span="202-202"];
m24_155 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.CreateSupervisor()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.CreateSupervisor()", span="198-198"];
m24_100 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m24_101 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="0: int timesExecuted = 0", span="124-124"];
m24_102 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="126-126"];
m24_103 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: _component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Sleep(50); })", span="127-128"];
m24_104 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="130-130"];
m24_105 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Stop()", span="131-131"];
m24_108 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="136-136"];
m24_106 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="132-132"];
m24_107 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: timesExecuted = 0", span="133-133"];
m24_110 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.True(timesExecuted > 0)", span="140-140"];
m24_109 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="137-137"];
m24_111 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m24_148 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Component_ReturnsUnderlyingComponent()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Component_ReturnsUnderlyingComponent()", span="191-191"];
m24_149 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Component_ReturnsUnderlyingComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: var supervisor = CreateSupervisor()", span="193-193"];
m24_150 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Component_ReturnsUnderlyingComponent()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.Same(_component.Object, supervisor.Component)", span="195-195"];
m24_151 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Component_ReturnsUnderlyingComponent()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Component_ReturnsUnderlyingComponent()", span="191-191"];
m24_31 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", span="47-47"];
m24_32 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="49-49"];
m24_33 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="50-50"];
m24_34 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Dispose()", span="52-52"];
m24_35 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: _component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="54-54"];
m24_36 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_OnJustCreatedSupervisor_DoNotLeadToComponentExecution()", span="47-47"];
m24_39 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="ServerSupervisorFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m24_15 [cluster="Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Server.ServerSupervisor.ServerSupervisor(Hangfire.Server.IServerComponent)", span="36-36"];
m24_46 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m24_47 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="60-60"];
m24_48 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Dispose()", span="61-61"];
m24_49 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.DoesNotThrow(supervisor.Dispose)", span="63-63"];
m24_50 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m24_5 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m24_23 [cluster="ServerSupervisor.cstr", file="ServerSupervisorFacts.cs", label="Entry ServerSupervisor.cstr", span=""];
m24_57 [cluster="Hangfire.Server.ServerSupervisor.Start()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Server.ServerSupervisor.Start()", span="61-61"];
m24_62 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m24_63 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="82-82"];
m24_64 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Dispose()", span="83-83"];
m24_65 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.Throws<ObjectDisposedException>(() => supervisor.Start())", span="85-85"];
m24_66 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m24_162 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="209-209"];
m24_163 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Yield()", span="211-211"];
m24_164 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="209-209"];
m24_81 [cluster="Unk.Setup", file="ServerSupervisorFacts.cs", label="Entry Unk.Setup", span=""];
m24_0 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.ServerSupervisorFacts()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.ServerSupervisorFacts()", span="13-13"];
m24_1 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.ServerSupervisorFacts()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: _component = new Mock<IServerComponent>()", span="15-15"];
m24_2 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.ServerSupervisorFacts()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: _options = new ServerSupervisorOptions\r\n            {\r\n                ShutdownTimeout = Timeout.InfiniteTimeSpan // Letting tests to timeout\r\n            }", span="16-19"];
m24_3 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.ServerSupervisorFacts()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.ServerSupervisorFacts()", span="13-13"];
m24_4 [cluster="Mock<IServerComponent>.cstr", file="ServerSupervisorFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m24_165 [cluster="System.Threading.Thread.Yield()", file="ServerSupervisorFacts.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m24_159 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="201-201"];
m24_12 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="26-26"];
m24_13 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: new ServerSupervisor(null)", span="26-26"];
m24_14 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="26-26"];
m24_20 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="35-35"];
m24_21 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: new ServerSupervisor(_component.Object, null)", span="35-35"];
m24_22 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="35-35"];
m24_28 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="43-43"];
m24_29 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: new ServerSupervisor(_component.Object)", span="43-43"];
m24_30 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="43-43"];
m24_42 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="54-54"];
m24_43 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: x.Execute(It.IsAny<CancellationToken>())", span="54-54"];
m24_44 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="54-54"];
m24_59 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="75-75"];
m24_60 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: x.Execute(It.IsNotNull<CancellationToken>())", span="75-75"];
m24_61 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="75-75"];
m24_68 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="85-85"];
m24_67 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="85-85"];
m24_69 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="85-85"];
m24_84 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="95-95"];
m24_87 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="96-96"];
m24_88 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: timesExecuted++", span="96-96"];
m24_85 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: x.Execute(It.IsAny<CancellationToken>())", span="95-95"];
m24_86 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="95-95"];
m24_89 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(50)", span="96-96"];
m24_90 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="96-96"];
m24_98 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Stop()", span="117-117"];
m24_97 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="117-117"];
m24_99 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="117-117"];
m24_113 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="127-127"];
m24_116 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="128-128"];
m24_117 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: timesExecuted++", span="128-128"];
m24_114 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: x.Execute(It.IsAny<CancellationToken>())", span="127-127"];
m24_115 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="127-127"];
m24_118 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(50)", span="128-128"];
m24_119 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="128-128"];
m24_156 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Entry lambda expression", span="200-200"];
m24_157 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: x.Execute(It.IsAny<CancellationToken>())", span="200-200"];
m24_158 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="200-200"];
m24_160 [cluster="lambda expression", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(50)", span="201-201"];
m24_161 [cluster="lambda expression", file="ServerSupervisorFacts.cs", label="Exit lambda expression", span="201-201"];
m24_16 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m24_17 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerSupervisor(_component.Object, null))", span="34-35"];
m24_18 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.Equal(''options'', exception.ParamName)", span="37-37"];
m24_19 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m24_58 [cluster="Unk.AtLeast", file="ServerSupervisorFacts.cs", label="Entry Unk.AtLeast", span=""];
m24_131 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m24_132 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="165-165"];
m24_133 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="166-166"];
m24_134 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Stop()", span="167-167"];
m24_135 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.DoesNotThrow(supervisor.Dispose)", span="169-169"];
m24_136 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m24_112 [cluster="Unk.True", file="ServerSupervisorFacts.cs", label="Entry Unk.True", span=""];
m24_45 [cluster="Unk.Execute", file="ServerSupervisorFacts.cs", label="Entry Unk.Execute", span=""];
m24_82 [cluster="Unk.Callback", file="ServerSupervisorFacts.cs", label="Entry Unk.Callback", span=""];
m24_51 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m24_52 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: var supervisor = CreateSupervisor()", span="69-69"];
m24_53 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="71-71"];
m24_54 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Thread.Sleep(TimeSpan.FromMilliseconds(150))", span="72-72"];
m24_55 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: _component.Verify(\r\n                x => x.Execute(It.IsNotNull<CancellationToken>()),\r\n                Times.AtLeast(2))", span="74-76"];
m24_56 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Start_LeadsToLoopedComponentExecution()", span="67-67"];
m24_120 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m24_121 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="146-146"];
m24_122 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Start()", span="147-147"];
m24_123 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Stop()", span="148-148"];
m24_124 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.DoesNotThrow(supervisor.Stop)", span="150-150"];
m24_125 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m24_41 [cluster="Unk.Verify", file="ServerSupervisorFacts.cs", label="Entry Unk.Verify", span=""];
m24_6 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m24_7 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", color=red, community=1, file="ServerSupervisorFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerSupervisor(null))", span="25-26"];
m24_8 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.Equal(''component'', exception.ParamName)", span="28-28"];
m24_9 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m24_92 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", file="ServerSupervisorFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m24_93 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", color=red, community=0, file="ServerSupervisorFacts.cs", label="2: var supervisor = CreateSupervisor()", span="114-114"];
m24_94 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: supervisor.Dispose()", span="115-115"];
m24_95 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", color=red, community=0, file="ServerSupervisorFacts.cs", label="1: Assert.Throws<ObjectDisposedException>(() => supervisor.Stop())", span="117-117"];
m24_96 [cluster="Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", file="ServerSupervisorFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerSupervisorFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m24_169 [file="ServerSupervisorFacts.cs", label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", span=""];
m24_170 [file="ServerSupervisorFacts.cs", label=supervisor, span=""];
m24_171 [file="ServerSupervisorFacts.cs", label=timesExecuted, span=""];
m24_172 [file="ServerSupervisorFacts.cs", label=supervisor, span=""];
m24_173 [file="ServerSupervisorFacts.cs", label=timesExecuted, span=""];
m24_174 [file="ServerSupervisorFacts.cs", label="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent", span=""];
m25_0 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorOptions.cs", label="Entry Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m25_1 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", color=red, community=0, file="ServerSupervisorOptions.cs", label="1: ShutdownTimeout = TimeSpan.FromMilliseconds(Timeout.Infinite)", span="25-25"];
m25_2 [cluster="Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", file="ServerSupervisorOptions.cs", label="Exit Hangfire.Server.ServerSupervisorOptions.ServerSupervisorOptions()", span="23-23"];
m25_3 [cluster="System.TimeSpan.FromMilliseconds(double)", file="ServerSupervisorOptions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m25_4 [file="ServerSupervisorOptions.cs", label="Hangfire.Server.ServerSupervisorOptions", span=""];
m26_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerWatchdog.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m26_18 [cluster="Hangfire.JobStorage.GetConnection()", file="ServerWatchdog.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m26_22 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m26_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34"];
m26_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", color=red, community=0, file="ServerWatchdog.cs", label="1: storage == null", span="36-36"];
m26_5 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="options == null", span="37-37"];
m26_7 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", color=red, community=0, file="ServerWatchdog.cs", label="2: _storage = storage", span="39-39"];
m26_8 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="_options = options", span="40-40"];
m26_4 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", color=red, community=0, file="ServerWatchdog.cs", label="1: throw new ArgumentNullException(''storage'');", span="36-36"];
m26_6 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="throw new ArgumentNullException(''options'');", span="37-37"];
m26_9 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage, Hangfire.Server.ServerWatchdogOptions)", span="34-34"];
m26_23 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.ToString()", span="59-59"];
m26_24 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="return ''Server Watchdog'';", span="61-61"];
m26_25 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.ToString()", span="59-59"];
m26_19 [cluster="Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdog.cs", label="Entry Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m26_11 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43"];
m26_12 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ServerWatchdog.cs", label="1: var connection = _storage.GetConnection()", span="45-45"];
m26_16 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", color=red, community=0, file="ServerWatchdog.cs", label="1: cancellationToken.WaitHandle.WaitOne(_options.CheckInterval)", span="56-56"];
m26_13 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_options.ServerTimeout)", span="47-47"];
m26_14 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="serversRemoved != 0", span="48-48"];
m26_15 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="50-52"];
m26_17 [cluster="Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(System.Threading.CancellationToken)", span="43-43"];
m26_20 [cluster="string.Format(string, object)", file="ServerWatchdog.cs", label="Entry string.Format(string, object)", span="0-0"];
m26_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", file="ServerWatchdog.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", span="29-29"];
m26_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", file="ServerWatchdog.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.JobStorage)", span="29-29"];
m26_26 [file="ServerWatchdog.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m27_2 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachineFactory.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m27_3 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachineFactory.cs", label="Exit HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m27_0 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachineFactory.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m27_1 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachineFactory.cs", label="Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m28_0 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", span="30-30"];
m28_1 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="innerProcess == null", span="32-32"];
m28_3 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="_innerProcess = innerProcess", span="34-34"];
m28_2 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="throw new ArgumentNullException(''innerProcess'');", span="32-32"];
m28_4 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="_logger = LogProvider.GetLogger(_innerProcess.GetProcessType())", span="35-35"];
m28_5 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="37-37"];
m28_6 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", color=red, community=0, file="Worker.cs", label="2: MaxAttemptDelay = DefaultMaxAttemptDelay", span="38-38"];
m28_7 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="DelayCallback = GetBackOffMultiplier", span="39-39"];
m28_8 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", file="Worker.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.IServerProcess)", span="30-30"];
m28_30 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="88-88"];
m28_37 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label=i, span="90-90"];
m28_38 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label=0, span="92-92"];
m28_40 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label=1, span="94-94"];
m28_42 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label=2, span="96-96"];
m28_39 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", color=red, community=0, file="Worker.cs", label="2: return LogLevel.Debug;", span="93-93"];
m28_41 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label="return LogLevel.Info;", span="95-95"];
m28_43 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label="return LogLevel.Warn;", span="97-97"];
m28_45 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label="return LogLevel.Error;", span="100-100"];
m28_44 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Worker.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="88-88"];
m28_59 [cluster="System.Random.Next(int, int)", file="Worker.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m28_55 [cluster="System.Random.Random(int)", file="Worker.cs", label="Entry System.Random.Random(int)", span="0-0"];
m28_36 [cluster="string.Format(string, params object[])", file="Worker.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m28_10 [cluster="Hangfire.Server.IServerProcess.GetProcessType()", file="Worker.cs", label="Entry Hangfire.Server.IServerProcess.GetProcessType()", span="62-62"];
m28_28 [cluster="Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.IServerProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m28_58 [cluster="System.Math.Pow(double, double)", file="Worker.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m28_29 [cluster="System.Func<T, TResult>.Invoke(T)", file="Worker.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m28_32 [cluster="Hangfire.Server.BackgroundProcessContext.SleepOrThrow(System.TimeSpan)", file="Worker.cs", label="Entry Hangfire.Server.BackgroundProcessContext.SleepOrThrow(System.TimeSpan)", span="29-29"];
m28_12 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m28_13 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="2: var i = 0", span="53-53"];
m28_15 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="_innerProcess.Execute(context)", span="57-57"];
m28_25 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="context.SleepOrThrow(nextTry)", span="83-83"];
m28_14 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="1: i <= MaxRetryAttempts", span="53-53"];
m28_20 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="i >= MaxRetryAttempts - 1", span="67-67"];
m28_22 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="2: var nextTry = DelayCallback(i)", span="69-69"];
m28_23 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="var logLevel = GetLogLevel(i)", span="70-70"];
m28_24 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="1: _logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' process. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80"];
m28_26 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="1: i++", span="53-53"];
m28_16 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="2: return;", span="58-58"];
m28_17 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=OperationCanceledException, span="60-60"];
m28_18 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Worker.cs", label="2: throw;", span="62-62"];
m28_19 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label=Exception, span="64-64"];
m28_21 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="throw;", span="67-67"];
m28_27 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m28_61 [cluster="System.TimeSpan.FromSeconds(double)", file="Worker.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m28_31 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="Worker.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m28_46 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Worker.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="103-103"];
m28_47 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Worker.cs", label="return _innerProcess.ToString();", span="105-105"];
m28_48 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Worker.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="103-103"];
m28_60 [cluster="System.Math.Min(double, double)", file="Worker.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m28_33 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="74-79"];
m28_34 [cluster="lambda expression", color=red, community=0, file="Worker.cs", label="1: String.Format(\r\n                            ''Error occurred during execution of '{0}' process. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79"];
m28_35 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="74-79"];
m28_56 [cluster="System.Guid.NewGuid()", file="Worker.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m28_11 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="Worker.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m28_57 [cluster="System.Guid.GetHashCode()", file="Worker.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m28_50 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Worker.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="108-108"];
m28_51 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Worker.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="111-111"];
m28_52 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Worker.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="112-113"];
m28_53 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Worker.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="115-115"];
m28_54 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Worker.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="108-108"];
m28_49 [cluster="object.ToString()", file="Worker.cs", label="Entry object.ToString()", span="0-0"];
m28_62 [file="Worker.cs", label="Hangfire.Server.AutomaticRetryProcess", span=""];
m28_63 [file="Worker.cs", label=i, span=""];
m28_64 [file="Worker.cs", label=nextTry, span=""];
m29_15 [cluster="System.DateTime.Add(System.TimeSpan)", file="WorkerContext.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m29_51 [cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18"];
m29_6 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
m29_7 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="string sqlQuery = @''select distinct(Queue) from HangFire.JobQueue''", span="44-44"];
m29_8 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label=_cacheLock, span="46-46"];
m29_10 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="var result = UseTransaction(connection =>\r\n                    {\r\n                        return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();\r\n                    })", span="50-53"];
m29_9 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="_queuesCache.Count == 0 || _cacheUpdated.Add(QueuesCacheTimeout) < DateTime.UtcNow", span="48-48"];
m29_13 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="return _queuesCache.ToList();", span="59-59"];
m29_11 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="_queuesCache = result", span="55-55"];
m29_12 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="_cacheUpdated = DateTime.UtcNow", span="56-56"];
m29_14 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
m29_0 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
m29_1 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="WorkerContext.cs", label="storage == null", span="38-38"];
m29_3 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="WorkerContext.cs", label="_storage = storage", span="39-39"];
m29_2 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="WorkerContext.cs", label="throw new ArgumentNullException(''storage'');", span="38-38"];
m29_4 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
m29_34 [cluster="Unk.>", file="WorkerContext.cs", label="Entry Unk.>", span=""];
m29_50 [cluster="Unk.Single", file="WorkerContext.cs", label="Entry Unk.Single", span=""];
m29_38 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84"];
m29_39 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="WorkerContext.cs", label="return Enumerable.Empty<int>();", span="86-86"];
m29_40 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="84-84"];
m29_23 [cluster="Unk.ToList", file="WorkerContext.cs", label="Entry Unk.ToList", span=""];
m29_27 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
m29_28 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="WorkerContext.cs", label="string sqlQuery = @''\r\nselect r.Id from (\r\n  select jq.Id, row_number() over (order by jq.Id) as row_num \r\n  from HangFire.JobQueue jq\r\n  where jq.Queue = @queue\r\n) as r\r\nwhere r.row_num between @start and @end''", span="65-71"];
m29_29 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="WorkerContext.cs", label="return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="73-81"];
m29_30 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
m29_42 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="89-89"];
m29_43 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="WorkerContext.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.JobQueue where [Queue] = @queue''", span="91-92"];
m29_44 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="WorkerContext.cs", label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query<int>(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result,\r\n                };\r\n            });", span="94-102"];
m29_45 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="89-89"];
m29_16 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="105-105"];
m29_52 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="WorkerContext.cs", label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="107-107"];
m29_53 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="105-105"];
m29_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="WorkerContext.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m29_21 [cluster="Unk.Query", file="WorkerContext.cs", label="Entry Unk.Query", span=""];
m29_54 [cluster="Unk.UseTransaction", file="WorkerContext.cs", label="Entry Unk.UseTransaction", span=""];
m29_46 [cluster="lambda expression", file="WorkerContext.cs", label="Entry lambda expression", span="94-102"];
m29_19 [cluster="lambda expression", file="WorkerContext.cs", label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52"];
m29_18 [cluster="lambda expression", file="WorkerContext.cs", label="Entry lambda expression", span="50-53"];
m29_20 [cluster="lambda expression", file="WorkerContext.cs", label="Exit lambda expression", span="50-53"];
m29_24 [cluster="lambda expression", file="WorkerContext.cs", label="Entry lambda expression", span="52-52"];
m29_25 [cluster="lambda expression", file="WorkerContext.cs", label="(string) x.Queue", span="52-52"];
m29_26 [cluster="lambda expression", file="WorkerContext.cs", label="Exit lambda expression", span="52-52"];
m29_32 [cluster="lambda expression", file="WorkerContext.cs", label="return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80"];
m29_31 [cluster="lambda expression", file="WorkerContext.cs", label="Entry lambda expression", span="73-81"];
m29_33 [cluster="lambda expression", file="WorkerContext.cs", label="Exit lambda expression", span="73-81"];
m29_35 [cluster="lambda expression", file="WorkerContext.cs", label="Entry lambda expression", span="79-79"];
m29_36 [cluster="lambda expression", file="WorkerContext.cs", label="x.Id", span="79-79"];
m29_37 [cluster="lambda expression", file="WorkerContext.cs", label="Exit lambda expression", span="79-79"];
m29_47 [cluster="lambda expression", file="WorkerContext.cs", label="var result = connection.Query<int>(sqlQuery, new { queue = queue }).Single()", span="96-96"];
m29_48 [cluster="lambda expression", file="WorkerContext.cs", label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result,\r\n                };", span="98-101"];
m29_49 [cluster="lambda expression", file="WorkerContext.cs", label="Exit lambda expression", span="94-102"];
m29_41 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="WorkerContext.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m29_22 [cluster="Unk.Select", file="WorkerContext.cs", label="Entry Unk.Select", span=""];
m29_55 [file="WorkerContext.cs", label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span=""];
m29_56 [file="WorkerContext.cs", label=sqlQuery, span=""];
m29_57 [file="WorkerContext.cs", label=string, span=""];
m29_58 [file="WorkerContext.cs", label=int, span=""];
m29_59 [file="WorkerContext.cs", label=int, span=""];
m29_60 [file="WorkerContext.cs", label=sqlQuery, span=""];
m29_61 [file="WorkerContext.cs", label=string, span=""];
m29_62 [file="WorkerContext.cs", label=sqlQuery, span=""];
n52 -> n23  [color=red, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n28  [color=red, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n29  [color=red, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n52 -> n50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Common.JobHelperFacts", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n4  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=2, style=dotted];
n9 -> n6  [color=blue, key=0, style=bold];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n11  [color=darkorchid, key=3, label="Field variable int DefaultMaxRetryAttempts", style=bold];
n12 -> n13  [color=red, key=0, style=solid];
n12 -> n17  [color=red, key=2, style=dotted];
n12 -> n14  [color=red, key=1, label=stringResult, style=dashed];
n13 -> n14  [color=red, key=0, style=solid];
n13 -> n17  [key=2, style=dotted];
n13 -> n15  [color=darkseagreen4, key=1, label=intResult, style=dashed];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n5  [color=red, key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n10  [key=2, style=dotted];
n16 -> n11  [color=blue, key=0, style=bold];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n17  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n10  [key=2, style=dotted];
n21 -> n18  [color=blue, key=0, style=bold];
n22 -> n23  [color=red, key=0, style=solid];
n22 -> n11  [color=darkorchid, key=3, label="Property variable int MaxRetryAttempts", style=bold];
n23 -> n24  [color=red, key=0, style=solid];
n23 -> n26  [color=red, key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n10  [key=2, style=dotted];
n25 -> n22  [color=blue, key=0, style=bold];
n27 -> n28  [color=red, key=0, style=solid];
n28 -> n29  [color=red, key=0, style=solid];
n28 -> n31  [color=red, key=2, style=dotted];
n29 -> n30  [color=red, key=0, style=solid];
n29 -> n10  [color=red, key=2, style=dotted];
n30 -> n27  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n36  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=2, style=dotted];
n34 -> n10  [key=2, style=dotted];
n35 -> n32  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n37  [key=2, style=dotted];
n39 -> n42  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n10  [key=2, style=dotted];
n41 -> n38  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [key=2, style=dotted];
n44 -> n5  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [key=2, style=dotted];
n45 -> n5  [key=2, style=dotted];
n46 -> n43  [color=blue, key=0, style=bold];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n37  [key=2, style=dotted];
n49 -> n47  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n10  [key=2, style=dotted];
n51 -> n48  [color=blue, key=0, style=bold];
d6 -> d7  [color=green, key=0, style=solid];
d6 -> d22  [color=green, key=2, style=dotted];
d4 -> d6  [color=green, key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d4 -> d20  [key=2, style=dotted];
d22 -> d6  [color=green, key=3, label="Parameter variable string resourceName", style=bold];
d22 -> d31  [color=green, key=0, style=solid];
d22 -> d33  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
d7 -> d7  [color=darkseagreen4, key=1, label=script, style=dashed];
d7 -> d8  [key=0, style=solid];
d7 -> d23  [key=2, style=dotted];
d7 -> d10  [color=darkseagreen4, key=1, label=script, style=dashed];
d31 -> d32  [color=green, key=0, style=solid];
d31 -> d37  [color=green, key=2, style=dotted];
d31 -> d34  [color=green, key=1, label=stream, style=dashed];
d32 -> d33  [key=0, style=solid];
d32 -> d34  [key=0, style=solid];
d34 -> d35  [key=0, style=solid];
d34 -> d40  [key=2, style=dotted];
d0 -> d4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
d0 -> d1  [key=0, style=solid];
d0 -> d10  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
d3 -> d4  [key=0, style=solid];
d3 -> d19  [key=2, style=dotted];
d5 -> d17  [key=0, style=solid];
d5 -> d21  [key=2, style=dotted];
d20 -> d0  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
d20 -> d26  [key=0, style=solid];
d36 -> d22  [color=blue, key=0, style=bold];
d33 -> d36  [key=0, style=solid];
d33 -> d38  [key=2, style=dotted];
d33 -> d39  [key=2, style=dotted];
d8 -> d8  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d8 -> d9  [key=0, style=solid];
d8 -> d15  [color=darkseagreen4, key=1, label=i, style=dashed];
d10 -> d16  [key=0, style=solid];
d10 -> d24  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d41  [key=2, style=dotted];
d35 -> d11  [color=darkorchid, key=3, label="Parameter variable int i", style=bold];
d17 -> d0  [color=blue, key=0, style=bold];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d28 -> d20  [color=blue, key=0, style=bold];
d26 -> d27  [key=0, style=solid];
d26 -> d29  [key=2, style=dotted];
d26 -> d30  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d16  [key=0, style=solid];
d15 -> d9  [key=0, style=solid];
d15 -> d15  [color=darkseagreen4, key=1, label=i, style=dashed];
d16 -> d17  [key=0, style=solid];
d16 -> d19  [key=2, style=dotted];
d11 -> d11  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d11 -> d12  [key=0, style=solid];
d2 -> d17  [key=0, style=solid];
d2 -> d18  [key=2, style=dotted];
d14 -> d17  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d13 -> d15  [key=0, style=solid];
d13 -> d25  [key=2, style=dotted];
d12 -> d14  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_43  [key=2, style=dotted];
m0_88 -> m0_11  [key=2, style=dotted];
m0_88 -> m0_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_21  [key=2, style=dotted];
m0_89 -> m0_97  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_11  [key=2, style=dotted];
m0_90 -> m0_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_29  [key=2, style=dotted];
m0_91 -> m0_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_92 -> m0_87  [color=blue, key=0, style=bold];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=readLength, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_32  [key=2, style=dotted];
m0_7 -> m0_8  [color=red, key=0, style=solid];
m0_7 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_9  [color=red, key=0, style=solid];
m0_8 -> m0_11  [color=red, key=2, style=dotted];
m0_8 -> m0_13  [color=red, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_7  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_10  [color=green, key=2, style=dotted];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_12 -> m0_11  [color=blue, key=0, style=bold];
m0_13 -> m0_18  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m0_13 -> m0_14  [color=red, key=0, style=solid];
m0_13 -> m0_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_13 -> m0_20  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_33  [key=2, style=dotted];
m0_24 -> m0_21  [key=2, style=dotted];
m0_21 -> m0_24  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_31  [key=2, style=dotted];
m0_21 -> m0_25  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m0_21 -> m0_102  [color=red, key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=0, style=solid];
m0_25 -> m0_23  [key=0, style=solid];
m0_25 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_28  [key=2, style=dotted];
m0_18 -> m0_21  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m0_18 -> m0_22  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m0_18 -> m0_25  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m0_18 -> m0_19  [color=red, key=0, style=solid];
m0_18 -> m0_28  [key=2, style=dotted];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_20  [color=red, key=0, style=solid];
m0_19 -> m0_22  [color=red, key=2, style=dotted];
m0_16 -> m0_18  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_20 -> m0_26  [key=0, style=solid];
m0_20 -> m0_29  [key=2, style=dotted];
m0_20 -> m0_30  [key=2, style=dotted];
m0_20 -> m0_17  [color=blue, key=0, style=bold];
m0_15 -> m0_26  [key=0, style=solid];
m0_15 -> d18  [key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_17 -> m0_26  [key=0, style=solid];
m0_17 -> d18  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_14 -> m0_15  [color=red, key=0, style=solid];
m0_26 -> m0_13  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_27 -> m0_23  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_43  [key=2, style=dotted];
m0_55 -> m0_11  [key=2, style=dotted];
m0_55 -> m0_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_21  [key=2, style=dotted];
m0_57 -> m0_65  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_11  [key=2, style=dotted];
m0_58 -> m0_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_29  [key=2, style=dotted];
m0_59 -> m0_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_60 -> m0_54  [color=blue, key=0, style=bold];
m0_32 -> m0_30  [color=blue, key=0, style=bold];
m0_105 -> m0_106  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_11  [key=2, style=dotted];
m0_31 -> m0_33  [key=2, style=dotted];
m0_31 -> m0_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_4  [color=green, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_5  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_7  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_34 -> m0_24  [color=darkseagreen4, key=1, label="HangFire.Web.EmbeddedResourceHandler", style=dashed];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_28  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_11  [key=2, style=dotted];
m0_46 -> m0_33  [key=2, style=dotted];
m0_47 -> m0_45  [color=blue, key=0, style=bold];
m0_50 -> m0_48  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_11  [key=2, style=dotted];
m0_52 -> m0_33  [key=2, style=dotted];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_28  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_11  [key=2, style=dotted];
m0_62 -> m0_33  [key=2, style=dotted];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_66 -> m0_64  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_11  [key=2, style=dotted];
m0_68 -> m0_33  [key=2, style=dotted];
m0_69 -> m0_67  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_28  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_11  [key=2, style=dotted];
m0_79 -> m0_33  [key=2, style=dotted];
m0_80 -> m0_78  [color=blue, key=0, style=bold];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_11  [key=2, style=dotted];
m0_85 -> m0_33  [key=2, style=dotted];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_28  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_11  [key=2, style=dotted];
m0_94 -> m0_33  [key=2, style=dotted];
m0_95 -> m0_93  [color=blue, key=0, style=bold];
m0_98 -> m0_96  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_11  [key=2, style=dotted];
m0_100 -> m0_33  [key=2, style=dotted];
m0_101 -> m0_99  [color=blue, key=0, style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_105  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_43  [key=2, style=dotted];
m0_38 -> m0_11  [key=2, style=dotted];
m0_38 -> m0_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_21  [key=2, style=dotted];
m0_39 -> m0_49  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_11  [key=2, style=dotted];
m0_40 -> m0_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_44  [key=2, style=dotted];
m0_41 -> m0_29  [key=2, style=dotted];
m0_41 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_42 -> m0_37  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_21  [key=2, style=dotted];
m0_71 -> m0_74  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_71 -> m0_82  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_43  [key=2, style=dotted];
m0_72 -> m0_11  [key=2, style=dotted];
m0_72 -> m0_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_11  [key=2, style=dotted];
m0_74 -> m0_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_77  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_29  [key=2, style=dotted];
m0_75 -> m0_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_76 -> m0_70  [color=blue, key=0, style=bold];
m0_102 -> m0_103  [color=red, key=0, style=solid];
m0_102 -> m0_104  [color=red, key=2, style=dotted];
m0_103 -> m0_21  [color=blue, key=0, style=bold];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_109 -> m0_109  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [key=2, style=dotted];
m0_110 -> m0_110  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_111 -> m0_108  [color=blue, key=0, style=bold];
m0_114 -> m0_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_19  [color=red, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_91  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_102  [color=red, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_115 -> m0_49  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_116 -> m0_65  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_117 -> m0_82  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m0_118 -> m0_97  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_11  [key=2, style=dotted];
m1_154 -> m1_12  [key=2, style=dotted];
m1_154 -> m1_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_99  [key=2, style=dotted];
m1_155 -> m1_159  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_119  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_81  [key=2, style=dotted];
m1_159 -> m1_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_161  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_81  [key=2, style=dotted];
m1_158 -> m1_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_160 -> m1_153  [color=blue, key=0, style=bold];
m1_270 -> m1_271  [key=0, style=solid];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_99  [key=2, style=dotted];
m1_271 -> m1_274  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_271 -> m1_275  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_271 -> m1_276  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_262  [key=2, style=dotted];
m1_272 -> m1_8  [key=2, style=dotted];
m1_272 -> m1_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_272 -> m1_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_272 -> m1_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_272 -> m1_275  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_272 -> m1_276  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_272 -> m1_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_11  [key=2, style=dotted];
m1_274 -> m1_12  [key=2, style=dotted];
m1_274 -> m1_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_103  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_81  [key=2, style=dotted];
m1_276 -> m1_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_10  [key=2, style=dotted];
m1_273 -> m1_276  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m1_273 -> m1_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m1_277 -> m1_270  [color=blue, key=0, style=bold];
m1_99 -> m1_348  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_350  [key=2, style=dotted];
m1_349 -> m1_99  [color=blue, key=0, style=bold];
m1_210 -> m1_211  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_11  [key=2, style=dotted];
m1_211 -> m1_179  [key=2, style=dotted];
m1_211 -> m1_8  [key=2, style=dotted];
m1_211 -> m1_12  [key=2, style=dotted];
m1_211 -> m1_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_211 -> m1_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_99  [key=2, style=dotted];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_212 -> m1_215  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_11  [key=2, style=dotted];
m1_213 -> m1_12  [key=2, style=dotted];
m1_213 -> m1_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_119  [key=2, style=dotted];
m1_214 -> m1_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_81  [key=2, style=dotted];
m1_215 -> m1_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_216 -> m1_217  [key=0, style=solid];
m1_216 -> m1_218  [key=2, style=dotted];
m1_217 -> m1_210  [color=blue, key=0, style=bold];
m1_262 -> m1_262  [color=darkorchid, key=3, label="Field variable string StateName", style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_27  [key=2, style=dotted];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> n10  [key=2, style=dotted];
m1_41 -> m1_38  [color=blue, key=0, style=bold];
m1_129 -> m1_130  [key=0, style=solid];
m1_130 -> m1_131  [color=red, key=0, style=solid];
m1_130 -> m1_51  [key=2, style=dotted];
m1_130 -> m1_135  [color=red, key=1, label=stateMachine, style=dashed];
m1_131 -> m1_132  [color=red, key=0, style=solid];
m1_131 -> m1_27  [color=red, key=2, style=dotted];
m1_131 -> m1_134  [color=red, key=1, label="lambda expression", style=dashed];
m1_132 -> m1_133  [color=red, key=0, style=solid];
m1_132 -> n10  [color=red, key=2, style=dotted];
m1_133 -> m1_129  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [color=red, key=0, style=solid];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [key=2, style=dotted];
m1_19 -> m1_17  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=2, style=dotted];
m1_20 -> m1_24  [key=2, style=dotted];
m1_21 -> m1_18  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_111 -> m1_112  [color=red, key=0, style=solid];
m1_112 -> m1_113  [color=red, key=0, style=solid];
m1_112 -> m1_51  [color=red, key=2, style=dotted];
m1_112 -> m1_117  [color=red, key=1, label=stateMachine, style=dashed];
m1_113 -> m1_114  [color=red, key=0, style=solid];
m1_113 -> m1_27  [color=red, key=2, style=dotted];
m1_113 -> m1_116  [color=red, key=1, label="lambda expression", style=dashed];
m1_114 -> m1_115  [color=red, key=0, style=solid];
m1_114 -> n10  [color=red, key=2, style=dotted];
m1_115 -> m1_111  [color=blue, key=0, style=bold];
m1_288 -> m1_289  [key=0, style=solid];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_99  [key=2, style=dotted];
m1_289 -> m1_292  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_289 -> m1_293  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_289 -> m1_294  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_262  [key=2, style=dotted];
m1_290 -> m1_8  [key=2, style=dotted];
m1_290 -> m1_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_290 -> m1_292  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_290 -> m1_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_290 -> m1_293  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_290 -> m1_294  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_290 -> m1_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_292 -> m1_293  [key=0, style=solid];
m1_292 -> m1_11  [key=2, style=dotted];
m1_292 -> m1_298  [key=2, style=dotted];
m1_292 -> m1_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_103  [key=2, style=dotted];
m1_293 -> m1_295  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_81  [key=2, style=dotted];
m1_294 -> m1_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_297  [key=2, style=dotted];
m1_291 -> m1_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_291 -> m1_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_291 -> m1_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_161  [key=2, style=dotted];
m1_296 -> m1_288  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [color=red, key=0, style=solid];
m1_255 -> m1_256  [key=0, style=solid];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_99  [key=2, style=dotted];
m1_256 -> m1_258  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_256 -> m1_259  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_262  [key=2, style=dotted];
m1_257 -> m1_8  [key=2, style=dotted];
m1_257 -> m1_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_257 -> m1_259  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_257 -> m1_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_103  [key=2, style=dotted];
m1_258 -> m1_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_81  [key=2, style=dotted];
m1_259 -> m1_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_218  [key=2, style=dotted];
m1_261 -> m1_255  [color=blue, key=0, style=bold];
m1_315 -> m1_316  [key=0, style=solid];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_327  [key=2, style=dotted];
m1_316 -> m1_320  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m1_316 -> m1_325  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_11  [key=2, style=dotted];
m1_317 -> m1_12  [key=2, style=dotted];
m1_317 -> m1_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_328  [key=2, style=dotted];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_81  [key=2, style=dotted];
m1_325 -> m1_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_327  [key=2, style=dotted];
m1_318 -> m1_321  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_11  [key=2, style=dotted];
m1_319 -> m1_12  [key=2, style=dotted];
m1_319 -> m1_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_328  [key=2, style=dotted];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_51  [key=2, style=dotted];
m1_322 -> m1_324  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_262  [key=2, style=dotted];
m1_323 -> m1_8  [key=2, style=dotted];
m1_323 -> m1_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_323 -> m1_325  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_323 -> m1_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_323 -> m1_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_329  [key=2, style=dotted];
m1_324 -> m1_269  [key=2, style=dotted];
m1_326 -> m1_315  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [color=red, key=0, style=solid];
m1_14 -> m1_15  [color=red, key=0, style=solid];
m1_14 -> m1_16  [color=red, key=2, style=dotted];
m1_14 -> m1_17  [color=green, key=2, style=dotted];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_235 -> m1_236  [key=0, style=solid];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_11  [key=2, style=dotted];
m1_236 -> m1_179  [key=2, style=dotted];
m1_236 -> m1_242  [key=2, style=dotted];
m1_236 -> m1_12  [key=2, style=dotted];
m1_236 -> m1_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_99  [key=2, style=dotted];
m1_237 -> m1_239  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_119  [key=2, style=dotted];
m1_238 -> m1_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_81  [key=2, style=dotted];
m1_239 -> m1_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_161  [key=2, style=dotted];
m1_241 -> m1_235  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [color=red, key=0, style=solid];
m1_95 -> m1_96  [color=red, key=0, style=solid];
m1_95 -> m1_99  [color=red, key=2, style=dotted];
m1_95 -> m1_97  [color=red, key=1, label=stateMachine, style=dashed];
m1_96 -> m1_97  [color=red, key=0, style=solid];
m1_96 -> m1_55  [color=red, key=2, style=dotted];
m1_97 -> m1_98  [color=red, key=0, style=solid];
m1_97 -> m1_81  [color=red, key=2, style=dotted];
m1_97 -> m1_100  [color=red, key=1, label="lambda expression", style=dashed];
m1_98 -> m1_94  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_144  [key=2, style=dotted];
m1_138 -> m1_142  [color=darkseagreen4, key=1, label=disposableMock, style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_11  [key=2, style=dotted];
m1_139 -> m1_12  [key=2, style=dotted];
m1_139 -> m1_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_81  [key=2, style=dotted];
m1_142 -> m1_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_51  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_119  [key=2, style=dotted];
m1_143 -> m1_137  [color=blue, key=0, style=bold];
m1_120 -> m1_121  [color=red, key=0, style=solid];
m1_121 -> m1_122  [color=red, key=0, style=solid];
m1_121 -> m1_51  [color=red, key=2, style=dotted];
m1_121 -> m1_126  [color=red, key=1, label=stateMachine, style=dashed];
m1_122 -> m1_123  [color=red, key=0, style=solid];
m1_122 -> m1_27  [color=red, key=2, style=dotted];
m1_122 -> m1_125  [color=red, key=1, label="lambda expression", style=dashed];
m1_122 -> m1_122  [color=red, key=3, label="Local variable int i", style=bold];
m1_123 -> m1_124  [color=red, key=0, style=solid];
m1_123 -> n10  [color=red, key=2, style=dotted];
m1_124 -> m1_120  [color=blue, key=0, style=bold];
m1_190 -> m1_191  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_11  [key=2, style=dotted];
m1_191 -> m1_179  [key=2, style=dotted];
m1_191 -> m1_8  [key=2, style=dotted];
m1_191 -> m1_12  [key=2, style=dotted];
m1_191 -> m1_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_191 -> m1_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_99  [key=2, style=dotted];
m1_192 -> m1_194  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_192 -> m1_195  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_11  [key=2, style=dotted];
m1_193 -> m1_12  [key=2, style=dotted];
m1_193 -> m1_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_119  [key=2, style=dotted];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_81  [key=2, style=dotted];
m1_195 -> m1_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_161  [key=2, style=dotted];
m1_197 -> m1_190  [color=blue, key=0, style=bold];
m1_51 -> m1_346  [key=0, style=solid];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_45  [key=2, style=dotted];
m1_347 -> m1_51  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_0 -> m1_2  [color=green, key=1, label=string, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_8  [color=red, key=2, style=dotted];
m1_1 -> m1_13  [color=red, key=1, label="lambda expression", style=dashed];
m1_1 -> m1_7  [color=green, key=1, label=jobType, style=dashed];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_9  [color=red, key=2, style=dotted];
m1_2 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_10  [color=red, key=2, style=dotted];
m1_3 -> m1_7  [color=green, key=1, label=jobType, style=dashed];
m1_3 -> m1_6  [color=green, key=0, style=solid];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_11  [color=red, key=2, style=dotted];
m1_4 -> m1_12  [color=red, key=2, style=dotted];
m1_4 -> m1_17  [color=red, key=1, label="lambda expression", style=dashed];
m1_4 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_12  [key=2, style=dotted];
m1_5 -> m1_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_5 -> m1_7  [color=green, key=1, label=jobType, style=dashed];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_11  [color=green, key=2, style=dotted];
m1_6 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_10  [color=green, key=0, style=solid];
m1_7 -> m1_12  [color=green, key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_107 -> m1_108  [color=red, key=0, style=solid];
m1_108 -> m1_109  [color=red, key=0, style=solid];
m1_108 -> m1_51  [color=red, key=2, style=dotted];
m1_109 -> m1_110  [color=red, key=0, style=solid];
m1_109 -> m1_55  [color=red, key=2, style=dotted];
m1_109 -> n10  [color=red, key=2, style=dotted];
m1_110 -> m1_107  [color=blue, key=0, style=bold];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_8  [key=2, style=dotted];
m1_74 -> m1_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_80  [key=2, style=dotted];
m1_77 -> m1_78  [color=red, key=0, style=solid];
m1_77 -> m1_55  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_51  [key=2, style=dotted];
m1_78 -> m1_79  [color=red, key=0, style=solid];
m1_78 -> m1_81  [color=red, key=2, style=dotted];
m1_78 -> m1_85  [color=red, key=1, label="lambda expression", style=dashed];
m1_79 -> m1_73  [color=blue, key=0, style=bold];
m1_343 -> m1_344  [key=0, style=solid];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=2, style=dotted];
m1_25 -> m1_28  [key=2, style=dotted];
m1_25 -> m1_7  [color=green, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m1_25 -> m1_14  [color=green, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m1_25 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m1_25 -> m1_19  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m1_25 -> m1_20  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m1_26 -> m1_24  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_34  [color=blue, key=0, style=bold];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=2, style=dotted];
m1_44 -> m1_42  [color=blue, key=0, style=bold];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_54 -> m1_52  [color=blue, key=0, style=bold];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_55  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_63 -> m1_61  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_82 -> m1_83  [key=0, style=solid];
m1_85 -> m1_86  [color=red, key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_16  [key=2, style=dotted];
m1_84 -> m1_82  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [color=red, key=0, style=solid];
m1_86 -> m1_27  [color=red, key=2, style=dotted];
m1_86 -> m1_28  [color=red, key=2, style=dotted];
m1_86 -> m1_88  [color=red, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_91  [color=red, key=1, label="lambda expression", style=dashed];
m1_87 -> m1_85  [color=blue, key=0, style=bold];
m1_88 -> m1_89  [color=red, key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_89 -> m1_90  [color=red, key=0, style=solid];
m1_90 -> m1_88  [color=blue, key=0, style=bold];
m1_92 -> m1_93  [key=0, style=solid];
m1_93 -> m1_91  [color=blue, key=0, style=bold];
m1_100 -> m1_101  [color=red, key=0, style=solid];
m1_101 -> m1_102  [color=red, key=0, style=solid];
m1_101 -> m1_27  [color=red, key=2, style=dotted];
m1_101 -> m1_103  [color=red, key=2, style=dotted];
m1_101 -> m1_104  [color=red, key=1, label="lambda expression", style=dashed];
m1_102 -> m1_100  [color=blue, key=0, style=bold];
m1_104 -> m1_105  [color=red, key=0, style=solid];
m1_105 -> m1_106  [color=red, key=0, style=solid];
m1_106 -> m1_104  [color=blue, key=0, style=bold];
m1_117 -> m1_118  [color=red, key=0, style=solid];
m1_117 -> m1_119  [color=red, key=2, style=dotted];
m1_116 -> m1_117  [color=red, key=0, style=solid];
m1_118 -> m1_116  [color=blue, key=0, style=bold];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_128  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_127 -> m1_125  [color=blue, key=0, style=bold];
m1_135 -> m1_136  [color=red, key=0, style=solid];
m1_135 -> m1_119  [color=red, key=2, style=dotted];
m1_134 -> m1_135  [color=red, key=0, style=solid];
m1_136 -> m1_134  [color=blue, key=0, style=bold];
m1_145 -> m1_146  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_148  [key=2, style=dotted];
m1_147 -> m1_145  [color=blue, key=0, style=bold];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_152  [key=2, style=dotted];
m1_151 -> m1_149  [color=blue, key=0, style=bold];
m1_162 -> m1_163  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_169 -> m1_170  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_27  [key=2, style=dotted];
m1_163 -> m1_165  [key=2, style=dotted];
m1_164 -> m1_162  [color=blue, key=0, style=bold];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_165  [key=2, style=dotted];
m1_168 -> m1_166  [color=blue, key=0, style=bold];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_27  [key=2, style=dotted];
m1_170 -> m1_103  [key=2, style=dotted];
m1_171 -> m1_169  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_187 -> m1_188  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_165  [key=2, style=dotted];
m1_182 -> m1_180  [color=blue, key=0, style=bold];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_186  [key=2, style=dotted];
m1_185 -> m1_183  [color=blue, key=0, style=bold];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_27  [key=2, style=dotted];
m1_188 -> m1_103  [key=2, style=dotted];
m1_189 -> m1_187  [color=blue, key=0, style=bold];
m1_198 -> m1_199  [key=0, style=solid];
m1_201 -> m1_202  [key=0, style=solid];
m1_204 -> m1_205  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_165  [key=2, style=dotted];
m1_200 -> m1_198  [color=blue, key=0, style=bold];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_186  [key=2, style=dotted];
m1_203 -> m1_201  [color=blue, key=0, style=bold];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_27  [key=2, style=dotted];
m1_205 -> m1_103  [key=2, style=dotted];
m1_206 -> m1_204  [color=blue, key=0, style=bold];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_27  [key=2, style=dotted];
m1_208 -> m1_103  [key=2, style=dotted];
m1_209 -> m1_207  [color=blue, key=0, style=bold];
m1_219 -> m1_220  [key=0, style=solid];
m1_222 -> m1_223  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_228 -> m1_229  [key=0, style=solid];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_165  [key=2, style=dotted];
m1_221 -> m1_219  [color=blue, key=0, style=bold];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_186  [key=2, style=dotted];
m1_224 -> m1_222  [color=blue, key=0, style=bold];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_27  [key=2, style=dotted];
m1_226 -> m1_103  [key=2, style=dotted];
m1_227 -> m1_225  [color=blue, key=0, style=bold];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_27  [key=2, style=dotted];
m1_229 -> m1_103  [key=2, style=dotted];
m1_229 -> m1_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_230 -> m1_228  [color=blue, key=0, style=bold];
m1_231 -> m1_232  [key=0, style=solid];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_234  [key=2, style=dotted];
m1_233 -> m1_231  [color=blue, key=0, style=bold];
m1_243 -> m1_244  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_165  [key=2, style=dotted];
m1_245 -> m1_243  [color=blue, key=0, style=bold];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_27  [key=2, style=dotted];
m1_247 -> m1_103  [key=2, style=dotted];
m1_247 -> m1_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_247 -> m1_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_248 -> m1_246  [color=blue, key=0, style=bold];
m1_249 -> m1_250  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_250 -> m1_251  [key=0, style=solid];
m1_251 -> m1_249  [color=blue, key=0, style=bold];
m1_253 -> m1_254  [key=0, style=solid];
m1_254 -> m1_252  [color=blue, key=0, style=bold];
m1_263 -> m1_264  [key=0, style=solid];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_27  [key=2, style=dotted];
m1_267 -> m1_269  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_186  [key=2, style=dotted];
m1_265 -> m1_263  [color=blue, key=0, style=bold];
m1_268 -> m1_266  [color=blue, key=0, style=bold];
m1_278 -> m1_279  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_27  [key=2, style=dotted];
m1_282 -> m1_284  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_27  [key=2, style=dotted];
m1_286 -> m1_269  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_285 -> m1_286  [key=0, style=solid];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_186  [key=2, style=dotted];
m1_280 -> m1_278  [color=blue, key=0, style=bold];
m1_283 -> m1_281  [color=blue, key=0, style=bold];
m1_287 -> m1_285  [color=blue, key=0, style=bold];
m1_299 -> m1_300  [key=0, style=solid];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_27  [key=2, style=dotted];
m1_303 -> m1_269  [key=2, style=dotted];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_27  [key=2, style=dotted];
m1_306 -> m1_269  [key=2, style=dotted];
m1_306 -> m1_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_306 -> m1_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_309 -> m1_310  [key=0, style=solid];
m1_302 -> m1_303  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_186  [key=2, style=dotted];
m1_301 -> m1_299  [color=blue, key=0, style=bold];
m1_304 -> m1_302  [color=blue, key=0, style=bold];
m1_307 -> m1_305  [color=blue, key=0, style=bold];
m1_308 -> m1_309  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_310 -> m1_308  [color=blue, key=0, style=bold];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_314  [key=2, style=dotted];
m1_313 -> m1_311  [color=blue, key=0, style=bold];
m1_330 -> m1_331  [key=0, style=solid];
m1_333 -> m1_334  [key=0, style=solid];
m1_336 -> m1_337  [key=0, style=solid];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_27  [key=2, style=dotted];
m1_340 -> m1_342  [key=2, style=dotted];
m1_340 -> m1_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_339 -> m1_340  [key=0, style=solid];
m1_331 -> m1_332  [key=0, style=solid];
m1_332 -> m1_330  [color=blue, key=0, style=bold];
m1_334 -> m1_335  [key=0, style=solid];
m1_335 -> m1_333  [color=blue, key=0, style=bold];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_186  [key=2, style=dotted];
m1_338 -> m1_336  [color=blue, key=0, style=bold];
m1_341 -> m1_339  [color=blue, key=0, style=bold];
m1_345 -> m1_343  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [color=red, key=0, style=solid];
m1_57 -> m1_51  [key=2, style=dotted];
m1_57 -> m1_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_58 -> m1_59  [color=red, key=0, style=solid];
m1_58 -> m1_27  [color=red, key=2, style=dotted];
m1_58 -> m1_61  [color=red, key=1, label="lambda expression", style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> n10  [key=2, style=dotted];
m1_60 -> m1_56  [color=blue, key=0, style=bold];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_51  [key=2, style=dotted];
m1_47 -> m1_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_27  [key=2, style=dotted];
m1_48 -> m1_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> n10  [key=2, style=dotted];
m1_50 -> m1_46  [color=blue, key=0, style=bold];
m1_172 -> m1_173  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_11  [key=2, style=dotted];
m1_173 -> m1_179  [key=2, style=dotted];
m1_173 -> m1_8  [key=2, style=dotted];
m1_173 -> m1_12  [key=2, style=dotted];
m1_173 -> m1_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_173 -> m1_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_99  [key=2, style=dotted];
m1_174 -> m1_177  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_119  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_81  [key=2, style=dotted];
m1_177 -> m1_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_161  [key=2, style=dotted];
m1_178 -> m1_172  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_27  [key=2, style=dotted];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> n10  [key=2, style=dotted];
m1_32 -> m1_29  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [color=red, key=0, style=solid];
m1_65 -> m1_66  [color=red, key=0, style=solid];
m1_65 -> m1_51  [color=red, key=2, style=dotted];
m1_65 -> m1_70  [color=red, key=1, label=stateMachine, style=dashed];
m1_66 -> m1_67  [color=red, key=0, style=solid];
m1_66 -> m1_27  [color=red, key=2, style=dotted];
m1_66 -> m1_69  [color=red, key=1, label="lambda expression", style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> n10  [key=2, style=dotted];
m1_68 -> m1_64  [color=blue, key=0, style=bold];
m1_351 -> m1_1  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_2  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_3  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_4  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_58  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_65  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_66  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_78  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_95  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_96  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_97  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_101  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_105  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_108  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_109  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_112  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_113  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_117  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_121  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_130  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_131  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_135  [color=red, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_140  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_194  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_215  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_229  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_236  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_237  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_238  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_256  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_267  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_271  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_274  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_282  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_275  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_289  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_292  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_293  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_320  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_321  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_322  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_324  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_325  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_340  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_344  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_346  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_351 -> m1_348  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m1_352 -> m1_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_353 -> m1_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_354 -> m1_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_355 -> m1_117  [color=red, key=1, label=stateMachine, style=dashed];
m1_356 -> m1_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m1_357 -> m1_135  [color=red, key=1, label=stateMachine, style=dashed];
m1_358 -> m1_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_359 -> m1_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_359 -> m1_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_360 -> m1_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m1_361 -> m1_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_361 -> m1_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_362 -> m1_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_362 -> m1_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_363 -> m1_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_363 -> m1_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_11  [color=red, key=2, style=dotted];
m2_5 -> m2_12  [color=red, key=2, style=dotted];
m2_5 -> m2_13  [color=red, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_21  [key=2, style=dotted];
m2_28 -> m2_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> n10  [key=2, style=dotted];
m2_30 -> m2_27  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_7  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_39  [key=2, style=dotted];
m2_59 -> m2_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_60 -> m2_57  [color=blue, key=0, style=bold];
m2_96 -> m2_97  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_93  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_105  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_106  [key=2, style=dotted];
m2_99 -> m2_107  [key=2, style=dotted];
m2_99 -> m2_21  [key=2, style=dotted];
m2_99 -> m2_108  [key=2, style=dotted];
m2_99 -> m2_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_99 -> m2_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_99 -> m2_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_99 -> m2_101  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m2_99 -> m2_102  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m2_99 -> m2_103  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_109  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_109  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_109  [key=2, style=dotted];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_109  [key=2, style=dotted];
m2_104 -> m2_96  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_7  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_38 -> m2_35  [color=blue, key=0, style=bold];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_39  [key=2, style=dotted];
m2_49 -> m2_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_21  [key=2, style=dotted];
m2_18 -> m2_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> n10  [key=2, style=dotted];
m2_20 -> m2_17  [color=blue, key=0, style=bold];
m2_43 -> m2_141  [key=0, style=solid];
m2_43 -> m2_37  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.BackgroundJobServer> createFunc", style=bold];
m2_43 -> m2_49  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.BackgroundJobServer> createFunc", style=bold];
m2_43 -> m2_59  [color=darkorchid, key=3, label="Parameter variable System.Func<Hangfire.BackgroundJobServer> createFunc", style=bold];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_143  [key=2, style=dotted];
m2_142 -> m2_43  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_81  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_72  [key=2, style=dotted];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_80 -> m2_77  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_71 -> m2_68  [color=blue, key=0, style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_13 -> m2_14  [color=red, key=0, style=solid];
m2_14 -> m2_15  [color=red, key=0, style=solid];
m2_14 -> m2_16  [color=red, key=2, style=dotted];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [key=2, style=dotted];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=2, style=dotted];
m2_41 -> m2_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_42 -> m2_40  [color=blue, key=0, style=bold];
m2_44 -> m2_45  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=2, style=dotted];
m2_46 -> m2_44  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_43  [key=2, style=dotted];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_53 -> m2_51  [color=blue, key=0, style=bold];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_26  [key=2, style=dotted];
m2_56 -> m2_54  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_43  [key=2, style=dotted];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_67  [key=2, style=dotted];
m2_66 -> m2_64  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=2, style=dotted];
m2_75 -> m2_73  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_81  [key=2, style=dotted];
m2_84 -> m2_82  [color=blue, key=0, style=bold];
m2_110 -> m2_111  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_112 -> m2_110  [color=blue, key=0, style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_115 -> m2_113  [color=blue, key=0, style=bold];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=2, style=dotted];
m2_118 -> m2_116  [color=blue, key=0, style=bold];
m2_129 -> m2_130  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [key=2, style=dotted];
m2_131 -> m2_129  [color=blue, key=0, style=bold];
m2_134 -> m2_135  [key=0, style=solid];
m2_135 -> m2_133  [color=blue, key=0, style=bold];
m2_137 -> m2_138  [key=0, style=solid];
m2_138 -> m2_136  [color=blue, key=0, style=bold];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_128  [key=2, style=dotted];
m2_121 -> m2_126  [color=darkseagreen4, key=1, label=storageComponent, style=dashed];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_11  [key=2, style=dotted];
m2_122 -> m2_12  [key=2, style=dotted];
m2_122 -> m2_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_109  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_93  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_105  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_106  [key=2, style=dotted];
m2_125 -> m2_107  [key=2, style=dotted];
m2_125 -> m2_21  [key=2, style=dotted];
m2_125 -> m2_108  [key=2, style=dotted];
m2_125 -> m2_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_125 -> m2_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_127 -> m2_120  [color=blue, key=0, style=bold];
m2_93 -> m2_139  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_26  [key=2, style=dotted];
m2_140 -> m2_93  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_87  [color=red, key=0, style=solid];
m2_86 -> m2_93  [key=2, style=dotted];
m2_87 -> m2_88  [color=red, key=0, style=solid];
m2_87 -> m2_94  [color=red, key=2, style=dotted];
m2_87 -> m2_89  [color=red, key=1, label=supervisor, style=dashed];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_95  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=wrapper, style=dashed];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_21  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_21  [key=2, style=dotted];
m2_92 -> m2_85  [color=blue, key=0, style=bold];
m2_144 -> m2_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_5  [color=red, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_18  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_41  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_69  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_70  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_122  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_123  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m2_144 -> m2_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_9  [key=2, style=dotted];
m5_248 -> m5_250  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_249 -> m5_247  [color=blue, key=0, style=bold];
m5_274 -> m5_327  [key=0, style=solid];
m5_274 -> m5_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_274 -> m5_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_274 -> m5_335  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_331  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_327 -> m5_332  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_334 -> m5_335  [key=0, style=solid];
m5_334 -> m5_92  [key=2, style=dotted];
m5_334 -> m5_93  [key=2, style=dotted];
m5_334 -> m5_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_335 -> m5_336  [key=0, style=solid];
m5_335 -> m5_347  [key=2, style=dotted];
m5_335 -> m5_340  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_86  [key=2, style=dotted];
m5_328 -> m5_331  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_328 -> m5_334  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_328 -> m5_338  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_328 -> m5_342  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_331 -> m5_332  [key=0, style=solid];
m5_331 -> m5_224  [key=2, style=dotted];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_346  [key=2, style=dotted];
m5_332 -> m5_332  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_344  [key=0, style=solid];
m5_342 -> m5_343  [key=0, style=solid];
m5_342 -> m5_350  [key=2, style=dotted];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_334  [key=0, style=solid];
m5_333 -> m5_330  [key=0, style=solid];
m5_333 -> m5_333  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_87  [key=2, style=dotted];
m5_336 -> m5_342  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_336 -> m5_344  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_342  [key=0, style=solid];
m5_340 -> m5_348  [key=2, style=dotted];
m5_340 -> m5_349  [key=2, style=dotted];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_340  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_337 -> m5_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_337 -> m5_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_344 -> m5_345  [key=0, style=solid];
m5_343 -> m5_338  [key=0, style=solid];
m5_343 -> m5_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_339 -> m5_340  [key=0, style=solid];
m5_341 -> m5_342  [key=0, style=solid];
m5_345 -> m5_274  [color=blue, key=0, style=bold];
m5_122 -> m5_356  [key=0, style=solid];
m5_122 -> m5_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_122 -> m5_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_122 -> m5_364  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_356 -> m5_357  [key=0, style=solid];
m5_356 -> m5_359  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_356 -> m5_360  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_356 -> m5_361  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_363 -> m5_364  [key=0, style=solid];
m5_363 -> m5_92  [key=2, style=dotted];
m5_363 -> m5_93  [key=2, style=dotted];
m5_363 -> m5_379  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_347  [key=2, style=dotted];
m5_364 -> m5_369  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_357 -> m5_358  [key=0, style=solid];
m5_357 -> m5_375  [key=2, style=dotted];
m5_357 -> m5_359  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m5_359 -> m5_360  [key=0, style=solid];
m5_359 -> m5_362  [key=0, style=solid];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_224  [key=2, style=dotted];
m5_361 -> m5_359  [key=0, style=solid];
m5_361 -> m5_375  [key=2, style=dotted];
m5_361 -> m5_361  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_358 -> m5_359  [key=0, style=solid];
m5_358 -> m5_86  [key=2, style=dotted];
m5_358 -> m5_360  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_358 -> m5_362  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_358 -> m5_371  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_92  [key=2, style=dotted];
m5_362 -> m5_93  [key=2, style=dotted];
m5_362 -> m5_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_362 -> m5_367  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m5_371 -> m5_372  [key=0, style=solid];
m5_371 -> m5_350  [key=2, style=dotted];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_373  [key=0, style=solid];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_87  [key=2, style=dotted];
m5_365 -> m5_371  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_365 -> m5_373  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_371  [key=0, style=solid];
m5_369 -> m5_348  [key=2, style=dotted];
m5_369 -> m5_349  [key=2, style=dotted];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_369  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_366 -> m5_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_366 -> m5_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_373 -> m5_374  [key=0, style=solid];
m5_372 -> m5_367  [key=0, style=solid];
m5_372 -> m5_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_368 -> m5_369  [key=0, style=solid];
m5_370 -> m5_371  [key=0, style=solid];
m5_374 -> m5_122  [color=blue, key=0, style=bold];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_9  [key=2, style=dotted];
m5_258 -> m5_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_259 -> m5_257  [color=blue, key=0, style=bold];
m5_275 -> m5_276  [key=0, style=solid];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_9  [key=2, style=dotted];
m5_276 -> m5_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_277 -> m5_275  [color=blue, key=0, style=bold];
m5_433 -> m5_434  [key=0, style=solid];
m5_434 -> m5_435  [key=0, style=solid];
m5_434 -> m5_70  [key=2, style=dotted];
m5_434 -> m5_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_435 -> m5_433  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_9  [key=2, style=dotted];
m5_23 -> m5_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_281 -> m5_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_70  [key=2, style=dotted];
m5_282 -> m5_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_283 -> m5_281  [color=blue, key=0, style=bold];
m5_427 -> m5_428  [key=0, style=solid];
m5_428 -> m5_429  [key=0, style=solid];
m5_428 -> m5_9  [key=2, style=dotted];
m5_428 -> m5_430  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_429 -> m5_427  [color=blue, key=0, style=bold];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_9  [key=2, style=dotted];
m5_192 -> m5_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_193 -> m5_191  [color=blue, key=0, style=bold];
m5_222 -> m5_382  [key=0, style=solid];
m5_222 -> m5_384  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_222 -> m5_385  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_222 -> m5_386  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_222 -> m5_387  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_222 -> m5_388  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_222 -> m5_391  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_222 -> m5_392  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_222 -> m5_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_222 -> m5_394  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m5_222 -> m5_419  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m5_382 -> m5_383  [key=0, style=solid];
m5_382 -> m5_384  [key=0, style=solid];
m5_384 -> m5_385  [key=0, style=solid];
m5_384 -> m5_396  [key=2, style=dotted];
m5_384 -> m5_390  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_384 -> m5_404  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_384 -> m5_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_384 -> m5_394  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_384 -> m5_416  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_385 -> m5_386  [key=0, style=solid];
m5_385 -> m5_396  [key=2, style=dotted];
m5_385 -> m5_392  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_385 -> m5_412  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_385 -> m5_413  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_385 -> m5_394  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_385 -> m5_416  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_386 -> m5_387  [key=0, style=solid];
m5_386 -> m5_386  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_386 -> m5_390  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_386 -> m5_399  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_386 -> m5_394  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_386 -> m5_416  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_88  [key=2, style=dotted];
m5_387 -> m5_390  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_387 -> m5_392  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_387 -> m5_393  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_388 -> m5_389  [key=0, style=solid];
m5_388 -> m5_393  [key=0, style=solid];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_388  [key=0, style=solid];
m5_392 -> m5_388  [key=0, style=solid];
m5_392 -> m5_89  [key=2, style=dotted];
m5_392 -> m5_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_392 -> m5_411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_394 -> m5_395  [key=0, style=solid];
m5_394 -> m5_397  [key=2, style=dotted];
m5_394 -> m5_92  [key=2, style=dotted];
m5_394 -> m5_93  [key=2, style=dotted];
m5_394 -> m5_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_394 -> m5_418  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_383 -> m5_395  [key=0, style=solid];
m5_383 -> m5_54  [key=2, style=dotted];
m5_383 -> m5_86  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_89  [key=2, style=dotted];
m5_390 -> m5_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_390 -> m5_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_90  [key=2, style=dotted];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_399  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_389 -> m5_404  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_389 -> m5_405  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_389 -> m5_392  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_389 -> m5_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_389 -> m5_412  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_389 -> m5_413  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_395 -> m5_222  [color=blue, key=0, style=bold];
m5_9 -> m5_512  [key=0, style=solid];
m5_9 -> m5_513  [color=darkseagreen4, key=1, label="System.Func<IRedisClient, T>", style=dashed];
m5_512 -> m5_513  [key=0, style=solid];
m5_512 -> m5_515  [key=2, style=dotted];
m5_513 -> m5_514  [key=0, style=solid];
m5_513 -> m5_516  [key=2, style=dotted];
m5_514 -> m5_9  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=PooledRedisClientManager, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_2 -> m5_4  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_509 -> m5_510  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=2, style=dotted];
m5_12 -> m5_10  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=2, style=dotted];
m5_18 -> m5_21  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_19 -> m5_17  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_20  [key=2, style=dotted];
m5_26 -> m5_21  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_27 -> m5_25  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_13  [key=2, style=dotted];
m5_33 -> m5_31  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_13  [key=2, style=dotted];
m5_39 -> m5_37  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_21  [key=2, style=dotted];
m5_45 -> m5_43  [color=blue, key=0, style=bold];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_53  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_51  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_54  [key=2, style=dotted];
m5_51 -> m5_55  [key=2, style=dotted];
m5_51 -> m5_56  [key=2, style=dotted];
m5_51 -> m5_57  [key=2, style=dotted];
m5_51 -> m5_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_51 -> m5_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_52 -> m5_49  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=2, style=dotted];
m5_59 -> m5_62  [key=2, style=dotted];
m5_59 -> m5_63  [key=2, style=dotted];
m5_60 -> m5_58  [color=blue, key=0, style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m5_66 -> m5_64  [color=blue, key=0, style=bold];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_85  [key=2, style=dotted];
m5_72 -> m5_78  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m5_72 -> m5_83  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_77  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_88  [key=2, style=dotted];
m5_77 -> m5_80  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_77 -> m5_81  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_77 -> m5_82  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_75  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_82  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_91  [key=2, style=dotted];
m5_83 -> m5_92  [key=2, style=dotted];
m5_83 -> m5_93  [key=2, style=dotted];
m5_83 -> m5_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_74 -> m5_84  [key=0, style=solid];
m5_74 -> m5_54  [key=2, style=dotted];
m5_74 -> m5_86  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_87  [key=2, style=dotted];
m5_75 -> m5_80  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_75 -> m5_100  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_75 -> m5_83  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_75 -> m5_110  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_87  [key=2, style=dotted];
m5_76 -> m5_81  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_76 -> m5_107  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_76 -> m5_83  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_76 -> m5_110  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_89  [key=2, style=dotted];
m5_80 -> m5_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_80 -> m5_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_102  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_112  [key=2, style=dotted];
m5_110 -> m5_113  [key=2, style=dotted];
m5_110 -> m5_114  [key=2, style=dotted];
m5_110 -> m5_115  [key=2, style=dotted];
m5_110 -> m5_62  [key=2, style=dotted];
m5_110 -> m5_63  [key=2, style=dotted];
m5_81 -> m5_78  [key=0, style=solid];
m5_81 -> m5_89  [key=2, style=dotted];
m5_81 -> m5_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_81 -> m5_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_102  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_90  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_79 -> m5_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_79 -> m5_81  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_79 -> m5_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_79 -> m5_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_97  [key=2, style=dotted];
m5_95 -> m5_98  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_97  [key=2, style=dotted];
m5_104 -> m5_98  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_84 -> m5_71  [color=blue, key=0, style=bold];
m5_109 -> m5_110  [key=0, style=solid];
m5_96 -> m5_94  [color=blue, key=0, style=bold];
m5_101 -> m5_99  [color=blue, key=0, style=bold];
m5_105 -> m5_103  [color=blue, key=0, style=bold];
m5_108 -> m5_106  [color=blue, key=0, style=bold];
m5_111 -> m5_109  [color=blue, key=0, style=bold];
m5_119 -> m5_120  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_122  [key=2, style=dotted];
m5_121 -> m5_119  [color=blue, key=0, style=bold];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_122  [key=2, style=dotted];
m5_128 -> m5_126  [color=blue, key=0, style=bold];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_138  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_146  [key=2, style=dotted];
m5_133 -> m5_139  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m5_133 -> m5_144  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_88  [key=2, style=dotted];
m5_138 -> m5_141  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_138 -> m5_142  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_138 -> m5_143  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_136  [key=0, style=solid];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_143  [key=0, style=solid];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_92  [key=2, style=dotted];
m5_144 -> m5_93  [key=2, style=dotted];
m5_144 -> m5_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_135 -> m5_145  [key=0, style=solid];
m5_135 -> m5_86  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_87  [key=2, style=dotted];
m5_136 -> m5_141  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_136 -> m5_151  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_136 -> m5_144  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_136 -> m5_161  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_87  [key=2, style=dotted];
m5_137 -> m5_142  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_137 -> m5_158  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_137 -> m5_144  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_137 -> m5_161  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_89  [key=2, style=dotted];
m5_141 -> m5_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_141 -> m5_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_102  [key=2, style=dotted];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_163  [key=2, style=dotted];
m5_161 -> m5_164  [key=2, style=dotted];
m5_161 -> n42  [key=2, style=dotted];
m5_161 -> m5_62  [key=2, style=dotted];
m5_142 -> m5_139  [key=0, style=solid];
m5_142 -> m5_89  [key=2, style=dotted];
m5_142 -> m5_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_142 -> m5_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_102  [key=2, style=dotted];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_90  [key=2, style=dotted];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_148  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_140 -> m5_151  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_140 -> m5_142  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_140 -> m5_154  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_140 -> m5_158  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_97  [key=2, style=dotted];
m5_148 -> m5_98  [key=2, style=dotted];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_97  [key=2, style=dotted];
m5_154 -> m5_156  [key=2, style=dotted];
m5_147 -> m5_148  [key=0, style=solid];
m5_150 -> m5_151  [key=0, style=solid];
m5_153 -> m5_154  [key=0, style=solid];
m5_157 -> m5_158  [key=0, style=solid];
m5_145 -> m5_132  [color=blue, key=0, style=bold];
m5_160 -> m5_161  [key=0, style=solid];
m5_149 -> m5_147  [color=blue, key=0, style=bold];
m5_152 -> m5_150  [color=blue, key=0, style=bold];
m5_155 -> m5_153  [color=blue, key=0, style=bold];
m5_159 -> m5_157  [color=blue, key=0, style=bold];
m5_162 -> m5_160  [color=blue, key=0, style=bold];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_173  [key=2, style=dotted];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_171  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_55  [key=2, style=dotted];
m5_171 -> m5_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_172 -> m5_169  [color=blue, key=0, style=bold];
m5_174 -> m5_175  [key=0, style=solid];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_177  [key=2, style=dotted];
m5_175 -> m5_62  [key=2, style=dotted];
m5_175 -> m5_63  [key=2, style=dotted];
m5_176 -> m5_174  [color=blue, key=0, style=bold];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_185  [key=2, style=dotted];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_183  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_55  [key=2, style=dotted];
m5_183 -> m5_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_184 -> m5_181  [color=blue, key=0, style=bold];
m5_186 -> m5_187  [key=0, style=solid];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_189  [key=2, style=dotted];
m5_187 -> m5_62  [key=2, style=dotted];
m5_187 -> m5_190  [key=2, style=dotted];
m5_187 -> m5_63  [key=2, style=dotted];
m5_188 -> m5_186  [color=blue, key=0, style=bold];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_185  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_196  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_55  [key=2, style=dotted];
m5_196 -> m5_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_197 -> m5_194  [color=blue, key=0, style=bold];
m5_198 -> m5_199  [key=0, style=solid];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_201  [key=2, style=dotted];
m5_199 -> m5_62  [key=2, style=dotted];
m5_199 -> m5_63  [key=2, style=dotted];
m5_200 -> m5_198  [color=blue, key=0, style=bold];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_212  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_205 -> m5_217  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_146  [key=2, style=dotted];
m5_206 -> m5_208  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_88  [key=2, style=dotted];
m5_212 -> m5_214  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_212 -> m5_215  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_212 -> m5_216  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_222  [key=2, style=dotted];
m5_217 -> m5_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_221  [key=2, style=dotted];
m5_207 -> m5_218  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_207 -> m5_219  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_219  [key=0, style=solid];
m5_208 -> m5_213  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_208 -> m5_226  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_208 -> m5_214  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_208 -> m5_232  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_208 -> m5_215  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_208 -> m5_238  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_208 -> m5_218  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_218 -> m5_208  [key=0, style=solid];
m5_218 -> m5_223  [key=2, style=dotted];
m5_218 -> m5_224  [key=2, style=dotted];
m5_219 -> m5_220  [key=0, style=solid];
m5_209 -> m5_210  [key=0, style=solid];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_89  [key=2, style=dotted];
m5_213 -> m5_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_213 -> m5_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_213 -> m5_217  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_97  [key=2, style=dotted];
m5_226 -> m5_185  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_89  [key=2, style=dotted];
m5_214 -> m5_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_214 -> m5_234  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_214 -> m5_218  [color=darkseagreen4, key=1, label=length, style=dashed];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_97  [key=2, style=dotted];
m5_232 -> m5_21  [key=2, style=dotted];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_89  [key=2, style=dotted];
m5_215 -> m5_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_215 -> m5_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_215 -> m5_218  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_97  [key=2, style=dotted];
m5_238 -> m5_21  [key=2, style=dotted];
m5_210 -> m5_211  [key=0, style=solid];
m5_211 -> m5_212  [key=0, style=solid];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_90  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_228 -> m5_229  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_234 -> m5_235  [key=0, style=solid];
m5_237 -> m5_238  [key=0, style=solid];
m5_240 -> m5_241  [key=0, style=solid];
m5_243 -> m5_244  [key=0, style=solid];
m5_220 -> m5_205  [color=blue, key=0, style=bold];
m5_227 -> m5_225  [color=blue, key=0, style=bold];
m5_229 -> m5_230  [key=0, style=solid];
m5_230 -> m5_228  [color=blue, key=0, style=bold];
m5_233 -> m5_231  [color=blue, key=0, style=bold];
m5_235 -> m5_236  [key=0, style=solid];
m5_236 -> m5_234  [color=blue, key=0, style=bold];
m5_239 -> m5_237  [color=blue, key=0, style=bold];
m5_241 -> m5_242  [key=0, style=solid];
m5_242 -> m5_240  [color=blue, key=0, style=bold];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_246  [key=2, style=dotted];
m5_244 -> m5_62  [key=2, style=dotted];
m5_244 -> m5_63  [key=2, style=dotted];
m5_245 -> m5_243  [color=blue, key=0, style=bold];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_20  [key=2, style=dotted];
m5_251 -> m5_185  [key=2, style=dotted];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_252  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_55  [key=2, style=dotted];
m5_252 -> m5_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_253 -> m5_250  [color=blue, key=0, style=bold];
m5_254 -> m5_255  [key=0, style=solid];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_246  [key=2, style=dotted];
m5_255 -> m5_62  [key=2, style=dotted];
m5_255 -> m5_63  [key=2, style=dotted];
m5_256 -> m5_254  [color=blue, key=0, style=bold];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_20  [key=2, style=dotted];
m5_261 -> m5_185  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_262  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_55  [key=2, style=dotted];
m5_262 -> m5_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_263 -> m5_260  [color=blue, key=0, style=bold];
m5_264 -> m5_265  [key=0, style=solid];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_267  [key=2, style=dotted];
m5_265 -> m5_62  [key=2, style=dotted];
m5_266 -> m5_264  [color=blue, key=0, style=bold];
m5_271 -> m5_272  [key=0, style=solid];
m5_272 -> m5_273  [key=0, style=solid];
m5_272 -> m5_274  [key=2, style=dotted];
m5_273 -> m5_271  [color=blue, key=0, style=bold];
m5_278 -> m5_279  [key=0, style=solid];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_274  [key=2, style=dotted];
m5_280 -> m5_278  [color=blue, key=0, style=bold];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_20  [key=2, style=dotted];
m5_285 -> m5_306  [key=2, style=dotted];
m5_285 -> m5_300  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_285 -> m5_301  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_285 -> m5_302  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_285 -> m5_303  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_285 -> m5_304  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_289 -> m5_290  [key=0, style=solid];
m5_289 -> m5_20  [key=2, style=dotted];
m5_289 -> m5_156  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_289  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_288  [key=0, style=solid];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_302  [key=0, style=solid];
m5_300 -> m5_309  [key=2, style=dotted];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_102  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_304  [key=0, style=solid];
m5_302 -> m5_309  [key=2, style=dotted];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_102  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_313  [key=2, style=dotted];
m5_304 -> m5_314  [key=2, style=dotted];
m5_304 -> m5_309  [key=2, style=dotted];
m5_304 -> m5_310  [key=2, style=dotted];
m5_304 -> m5_315  [key=2, style=dotted];
m5_304 -> m5_316  [key=2, style=dotted];
m5_304 -> m5_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_304 -> m5_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_304 -> m5_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_287 -> m5_305  [key=0, style=solid];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_304  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m5_288 -> m5_318  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_320  [key=2, style=dotted];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_92  [key=2, style=dotted];
m5_290 -> m5_93  [key=2, style=dotted];
m5_290 -> m5_292  [color=darkseagreen4, key=1, label=history, style=dashed];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_307  [key=2, style=dotted];
m5_291 -> m5_299  [color=darkseagreen4, key=1, label=stateHistory, style=dashed];
m5_291 -> m5_304  [color=darkseagreen4, key=1, label=stateHistory, style=dashed];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_300  [key=0, style=solid];
m5_292 -> m5_294  [color=darkseagreen4, key=1, label=entry, style=dashed];
m5_299 -> m5_292  [key=0, style=solid];
m5_299 -> m5_224  [key=2, style=dotted];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_308  [key=2, style=dotted];
m5_293 -> m5_309  [key=2, style=dotted];
m5_293 -> m5_310  [key=2, style=dotted];
m5_293 -> m5_298  [color=darkseagreen4, key=1, label=dto, style=dashed];
m5_293 -> m5_299  [color=darkseagreen4, key=1, label=dto, style=dashed];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_311  [key=2, style=dotted];
m5_294 -> m5_296  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_294 -> m5_297  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_294 -> m5_298  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m5_298 -> m5_299  [key=0, style=solid];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_312  [key=2, style=dotted];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_312  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_312  [key=2, style=dotted];
m5_305 -> m5_284  [color=blue, key=0, style=bold];
m5_317 -> m5_318  [key=0, style=solid];
m5_321 -> m5_322  [key=0, style=solid];
m5_324 -> m5_325  [key=0, style=solid];
m5_319 -> m5_317  [color=blue, key=0, style=bold];
m5_322 -> m5_323  [key=0, style=solid];
m5_323 -> m5_321  [color=blue, key=0, style=bold];
m5_325 -> m5_326  [key=0, style=solid];
m5_326 -> m5_324  [color=blue, key=0, style=bold];
m5_352 -> m5_353  [key=0, style=solid];
m5_352 -> m5_354  [key=2, style=dotted];
m5_352 -> m5_355  [key=2, style=dotted];
m5_351 -> m5_352  [key=0, style=solid];
m5_353 -> m5_351  [color=blue, key=0, style=bold];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_97  [key=2, style=dotted];
m5_376 -> m5_377  [key=0, style=solid];
m5_379 -> m5_380  [key=0, style=solid];
m5_377 -> m5_378  [key=0, style=solid];
m5_377 -> m5_354  [key=2, style=dotted];
m5_378 -> m5_376  [color=blue, key=0, style=bold];
m5_381 -> m5_379  [color=blue, key=0, style=bold];
m5_409 -> m5_410  [key=0, style=solid];
m5_409 -> m5_20  [key=2, style=dotted];
m5_409 -> m5_98  [key=2, style=dotted];
m5_419 -> m5_420  [key=0, style=solid];
m5_419 -> m5_421  [key=2, style=dotted];
m5_419 -> m5_422  [key=2, style=dotted];
m5_419 -> m5_423  [key=2, style=dotted];
m5_419 -> m5_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_404 -> m5_405  [key=0, style=solid];
m5_404 -> m5_406  [key=0, style=solid];
m5_404 -> m5_407  [key=2, style=dotted];
m5_405 -> m5_406  [key=0, style=solid];
m5_405 -> m5_102  [key=2, style=dotted];
m5_416 -> m5_417  [key=0, style=solid];
m5_416 -> m5_115  [key=2, style=dotted];
m5_416 -> m5_407  [key=2, style=dotted];
m5_412 -> m5_413  [key=0, style=solid];
m5_412 -> m5_414  [key=0, style=solid];
m5_412 -> m5_407  [key=2, style=dotted];
m5_413 -> m5_414  [key=0, style=solid];
m5_413 -> m5_102  [key=2, style=dotted];
m5_399 -> m5_400  [key=0, style=solid];
m5_399 -> m5_20  [key=2, style=dotted];
m5_399 -> m5_401  [key=2, style=dotted];
m5_399 -> m5_402  [key=2, style=dotted];
m5_399 -> m5_98  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_403 -> m5_404  [key=0, style=solid];
m5_403 -> m5_405  [color=darkseagreen4, key=1, label="?", style=dashed];
m5_408 -> m5_409  [key=0, style=solid];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_413  [color=darkseagreen4, key=1, label="?", style=dashed];
m5_415 -> m5_416  [key=0, style=solid];
m5_418 -> m5_419  [key=0, style=solid];
m5_400 -> m5_398  [color=blue, key=0, style=bold];
m5_406 -> m5_403  [color=blue, key=0, style=bold];
m5_410 -> m5_408  [color=blue, key=0, style=bold];
m5_414 -> m5_411  [color=blue, key=0, style=bold];
m5_417 -> m5_415  [color=blue, key=0, style=bold];
m5_420 -> m5_418  [color=blue, key=0, style=bold];
m5_424 -> m5_425  [key=0, style=solid];
m5_425 -> m5_426  [key=0, style=solid];
m5_426 -> m5_424  [color=blue, key=0, style=bold];
m5_430 -> m5_431  [key=0, style=solid];
m5_431 -> m5_432  [key=0, style=solid];
m5_431 -> m5_21  [key=2, style=dotted];
m5_432 -> m5_430  [color=blue, key=0, style=bold];
m5_436 -> m5_437  [key=0, style=solid];
m5_436 -> m5_438  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_436 -> m5_439  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_437 -> m5_438  [key=0, style=solid];
m5_437 -> m5_454  [key=2, style=dotted];
m5_437 -> m5_440  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_460  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_441  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_466  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_442  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_472  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_443  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_478  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_444  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_485  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_445  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_492  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_446  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_498  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_447  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_504  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_450  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_510  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_437 -> m5_452  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_438 -> m5_439  [key=0, style=solid];
m5_438 -> m5_146  [key=2, style=dotted];
m5_438 -> m5_448  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_439 -> m5_440  [key=0, style=solid];
m5_439 -> m5_88  [key=2, style=dotted];
m5_439 -> m5_441  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_442  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_443  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_444  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_445  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_446  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_447  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_450  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_439 -> m5_451  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m5_440 -> m5_441  [key=0, style=solid];
m5_440 -> m5_89  [key=2, style=dotted];
m5_440 -> m5_455  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_440 -> m5_459  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_460 -> m5_461  [key=0, style=solid];
m5_441 -> m5_442  [key=0, style=solid];
m5_441 -> m5_89  [key=2, style=dotted];
m5_441 -> m5_462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_441 -> m5_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_466 -> m5_467  [key=0, style=solid];
m5_442 -> m5_443  [key=0, style=solid];
m5_442 -> m5_89  [key=2, style=dotted];
m5_442 -> m5_468  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_442 -> m5_471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_472 -> m5_473  [key=0, style=solid];
m5_443 -> m5_444  [key=0, style=solid];
m5_443 -> m5_89  [key=2, style=dotted];
m5_443 -> m5_474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_443 -> m5_477  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_478 -> m5_479  [key=0, style=solid];
m5_444 -> m5_445  [key=0, style=solid];
m5_444 -> m5_89  [key=2, style=dotted];
m5_444 -> m5_480  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_444 -> m5_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_485 -> m5_486  [key=0, style=solid];
m5_485 -> m5_487  [key=2, style=dotted];
m5_445 -> m5_446  [key=0, style=solid];
m5_445 -> m5_89  [key=2, style=dotted];
m5_445 -> m5_488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_445 -> m5_491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_492 -> m5_493  [key=0, style=solid];
m5_446 -> m5_447  [key=0, style=solid];
m5_446 -> m5_89  [key=2, style=dotted];
m5_446 -> m5_494  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_446 -> m5_497  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_498 -> m5_499  [key=0, style=solid];
m5_498 -> m5_487  [key=2, style=dotted];
m5_447 -> m5_448  [key=0, style=solid];
m5_447 -> m5_89  [key=2, style=dotted];
m5_447 -> m5_500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_447 -> m5_503  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_504 -> m5_505  [key=0, style=solid];
m5_450 -> m5_448  [key=0, style=solid];
m5_450 -> m5_89  [key=2, style=dotted];
m5_450 -> m5_506  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_450 -> m5_509  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_510 -> m5_511  [key=0, style=solid];
m5_452 -> m5_453  [key=0, style=solid];
m5_448 -> m5_449  [key=0, style=solid];
m5_448 -> m5_451  [key=0, style=solid];
m5_451 -> m5_452  [key=0, style=solid];
m5_451 -> m5_90  [key=2, style=dotted];
m5_455 -> m5_456  [key=0, style=solid];
m5_459 -> m5_460  [key=0, style=solid];
m5_462 -> m5_463  [key=0, style=solid];
m5_465 -> m5_466  [key=0, style=solid];
m5_468 -> m5_469  [key=0, style=solid];
m5_471 -> m5_472  [key=0, style=solid];
m5_474 -> m5_475  [key=0, style=solid];
m5_477 -> m5_478  [key=0, style=solid];
m5_480 -> m5_481  [key=0, style=solid];
m5_484 -> m5_485  [key=0, style=solid];
m5_488 -> m5_489  [key=0, style=solid];
m5_491 -> m5_492  [key=0, style=solid];
m5_494 -> m5_495  [key=0, style=solid];
m5_497 -> m5_498  [key=0, style=solid];
m5_500 -> m5_501  [key=0, style=solid];
m5_503 -> m5_504  [key=0, style=solid];
m5_449 -> m5_450  [key=0, style=solid];
m5_449 -> m5_507  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m5_507 -> m5_508  [key=0, style=solid];
m5_507 -> m5_97  [key=2, style=dotted];
m5_507 -> m5_21  [key=2, style=dotted];
m5_506 -> m5_507  [key=0, style=solid];
m5_453 -> m5_436  [color=blue, key=0, style=bold];
m5_456 -> m5_457  [key=0, style=solid];
m5_456 -> m5_458  [key=2, style=dotted];
m5_457 -> m5_455  [color=blue, key=0, style=bold];
m5_461 -> m5_459  [color=blue, key=0, style=bold];
m5_463 -> m5_464  [key=0, style=solid];
m5_463 -> m5_458  [key=2, style=dotted];
m5_464 -> m5_462  [color=blue, key=0, style=bold];
m5_467 -> m5_465  [color=blue, key=0, style=bold];
m5_469 -> m5_470  [key=0, style=solid];
m5_469 -> m5_13  [key=2, style=dotted];
m5_470 -> m5_468  [color=blue, key=0, style=bold];
m5_473 -> m5_471  [color=blue, key=0, style=bold];
m5_475 -> m5_476  [key=0, style=solid];
m5_475 -> m5_13  [key=2, style=dotted];
m5_476 -> m5_474  [color=blue, key=0, style=bold];
m5_479 -> m5_477  [color=blue, key=0, style=bold];
m5_481 -> m5_482  [key=0, style=solid];
m5_481 -> m5_483  [key=2, style=dotted];
m5_482 -> m5_480  [color=blue, key=0, style=bold];
m5_486 -> m5_484  [color=blue, key=0, style=bold];
m5_489 -> m5_490  [key=0, style=solid];
m5_489 -> m5_13  [key=2, style=dotted];
m5_490 -> m5_488  [color=blue, key=0, style=bold];
m5_493 -> m5_491  [color=blue, key=0, style=bold];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_483  [key=2, style=dotted];
m5_496 -> m5_494  [color=blue, key=0, style=bold];
m5_499 -> m5_497  [color=blue, key=0, style=bold];
m5_501 -> m5_502  [key=0, style=solid];
m5_501 -> m5_13  [key=2, style=dotted];
m5_502 -> m5_500  [color=blue, key=0, style=bold];
m5_505 -> m5_503  [color=blue, key=0, style=bold];
m5_508 -> m5_506  [color=blue, key=0, style=bold];
m5_511 -> m5_509  [color=blue, key=0, style=bold];
m5_115 -> m5_517  [key=0, style=solid];
m5_517 -> m5_520  [key=0, style=solid];
m5_517 -> m5_521  [key=2, style=dotted];
m5_517 -> m5_522  [key=2, style=dotted];
m5_518 -> m5_519  [key=0, style=solid];
m5_519 -> m5_520  [key=0, style=solid];
m5_520 -> m5_115  [color=blue, key=0, style=bold];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_9  [key=2, style=dotted];
m5_167 -> m5_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_168 -> m5_166  [color=blue, key=0, style=bold];
m5_129 -> m5_130  [key=0, style=solid];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_70  [key=2, style=dotted];
m5_130 -> m5_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_131 -> m5_129  [color=blue, key=0, style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_9  [key=2, style=dotted];
m5_41 -> m5_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_40  [color=blue, key=0, style=bold];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_9  [key=2, style=dotted];
m5_179 -> m5_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_180 -> m5_178  [color=blue, key=0, style=bold];
m5_116 -> m5_117  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_9  [key=2, style=dotted];
m5_117 -> m5_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_118 -> m5_116  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_9  [key=2, style=dotted];
m5_29 -> m5_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_30 -> m5_28  [color=blue, key=0, style=bold];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_9  [key=2, style=dotted];
m5_47 -> m5_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_48 -> m5_46  [color=blue, key=0, style=bold];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_9  [key=2, style=dotted];
m5_35 -> m5_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_36 -> m5_34  [color=blue, key=0, style=bold];
m5_268 -> m5_269  [key=0, style=solid];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_9  [key=2, style=dotted];
m5_269 -> m5_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_270 -> m5_268  [color=blue, key=0, style=bold];
m5_123 -> m5_124  [key=0, style=solid];
m5_124 -> m5_125  [key=0, style=solid];
m5_124 -> m5_9  [key=2, style=dotted];
m5_124 -> m5_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_125 -> m5_123  [color=blue, key=0, style=bold];
m5_202 -> m5_203  [key=0, style=solid];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_70  [key=2, style=dotted];
m5_203 -> m5_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_204 -> m5_202  [color=blue, key=0, style=bold];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_70  [key=2, style=dotted];
m5_68 -> m5_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_69 -> m5_67  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_9  [key=2, style=dotted];
m5_15 -> m5_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_14  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_8 -> m5_6  [color=blue, key=0, style=bold];
m5_523 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_15  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_29  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_35  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_47  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_51  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_68  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_117  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_124  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_130  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_167  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_171  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_179  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_183  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_192  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_196  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_203  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_217  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_248  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_252  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_258  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_262  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_269  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_272  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_276  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_279  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_282  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_304  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_428  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_434  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_523 -> m5_512  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m5_524 -> m5_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_525 -> m5_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_526 -> m5_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_527 -> m5_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_528 -> m5_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_529 -> m5_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_530 -> m5_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_530 -> m5_100  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_530 -> m5_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_530 -> m5_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_531 -> m5_100  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_531 -> m5_110  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_532 -> m5_107  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_532 -> m5_110  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_533 -> m5_148  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_533 -> m5_151  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_533 -> m5_154  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_533 -> m5_158  [color=darkseagreen4, key=1, label=name, style=dashed];
m5_534 -> m5_151  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_534 -> m5_161  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_535 -> m5_158  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_535 -> m5_161  [color=darkseagreen4, key=1, label=queues, style=dashed];
m5_536 -> m5_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_537 -> m5_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_538 -> m5_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_539 -> m5_182  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_540 -> m5_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_541 -> m5_195  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_542 -> m5_226  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_542 -> m5_232  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_542 -> m5_238  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_543 -> m5_251  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_544 -> m5_251  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_545 -> m5_251  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_546 -> m5_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_547 -> m5_261  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_548 -> m5_261  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_549 -> m5_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_549 -> m5_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_550 -> m5_318  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m5_551 -> m5_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_552 -> m5_380  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_553 -> m5_399  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_553 -> m5_416  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_554 -> m5_399  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_554 -> m5_404  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_554 -> m5_405  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_554 -> m5_409  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_554 -> m5_412  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_554 -> m5_413  [color=darkseagreen4, key=1, label=id, style=dashed];
m5_555 -> m5_404  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_555 -> m5_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_555 -> m5_416  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_556 -> m5_409  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_557 -> m5_412  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_557 -> m5_413  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_557 -> m5_416  [color=darkseagreen4, key=1, label=states, style=dashed];
m5_558 -> m5_419  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m5_559 -> m5_460  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_466  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_472  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_478  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_485  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_492  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_498  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_504  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_559 -> m5_510  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_560 -> m5_507  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_8  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_10  [color=red, key=0, style=solid];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_11  [color=red, key=2, style=dotted];
m6_8 -> m6_8  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m6_9 -> m6_7  [color=red, key=0, style=solid];
m6_9 -> m6_12  [color=red, key=2, style=dotted];
m6_10 -> m6_6  [color=blue, key=0, style=bold];
m6_13 -> m6_14  [color=red, key=0, style=solid];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_14 -> m6_16  [color=red, key=2, style=dotted];
m6_15 -> m6_13  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_0 -> m6_3  [color=red, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_3  [color=red, key=0, style=solid];
m6_3 -> m6_4  [color=red, key=0, style=solid];
m6_2 -> m6_4  [color=red, key=0, style=solid];
m6_2 -> d18  [color=red, key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_17 -> m6_3  [color=red, key=1, label="Hangfire.Server.InfiniteLoopComponent", style=dashed];
m6_17 -> m6_9  [color=red, key=1, label="Hangfire.Server.InfiniteLoopComponent", style=dashed];
m6_17 -> m6_14  [color=red, key=1, label="Hangfire.Server.InfiniteLoopComponent", style=dashed];
m7_23 -> m7_19  [color=blue, key=0, style=bold];
m7_23 -> m7_24  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_17  [key=2, style=dotted];
m7_21 -> m7_31  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_25  [key=2, style=dotted];
m7_22 -> m7_26  [key=2, style=dotted];
m7_22 -> m7_32  [key=2, style=dotted];
m7_8 -> m7_44  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_39  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> n10  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_24  [key=2, style=dotted];
m7_44 -> m7_34  [color=blue, key=0, style=bold];
m7_45 -> m7_8  [color=blue, key=0, style=bold];
m7_7 -> m7_4  [color=blue, key=0, style=bold];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_34  [color=green, key=2, style=dotted];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_33  [key=2, style=dotted];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_35  [color=green, key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_36  [key=2, style=dotted];
m7_28 -> m7_33  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_19  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_37  [key=2, style=dotted];
m7_29 -> m7_24  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_17  [key=2, style=dotted];
m7_31 -> m7_20  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_34  [key=2, style=dotted];
m7_32 -> m7_27  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> n10  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=2, style=dotted];
m7_3 -> m7_7  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_8  [key=2, style=dotted];
m7_10 -> m7_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m7_10 -> m7_17  [key=2, style=dotted];
m7_10 -> m7_15  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_17  [key=2, style=dotted];
m7_11 -> m7_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_11 -> m7_14  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_11 -> m7_15  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_18  [key=2, style=dotted];
m7_13 -> n10  [key=2, style=dotted];
m7_13 -> m7_3  [color=darkorchid, key=3, label="Property variable HangFire.Storage.IStorageConnection Connection", style=bold];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> n10  [key=2, style=dotted];
m7_12 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> n10  [key=2, style=dotted];
m7_14 -> m7_19  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> n10  [key=2, style=dotted];
m7_16 -> m7_9  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_46  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_8  [key=2, style=dotted];
m7_41 -> m7_39  [key=0, style=solid];
m7_41 -> m7_47  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_26  [key=2, style=dotted];
m7_43 -> m7_40  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_48  [key=2, style=dotted];
m7_34 -> m7_38  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_45  [key=2, style=dotted];
m7_38 -> m7_40  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m7_38 -> m7_35  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_42  [key=0, style=solid];
m7_39 -> m7_44  [key=0, style=solid];
m7_39 -> m7_41  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_49 -> m7_50  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_54  [key=0, style=solid];
m7_53 -> m7_52  [key=0, style=solid];
m7_53 -> m7_62  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_63  [key=2, style=dotted];
m7_54 -> m7_56  [color=darkseagreen4, key=1, label=payload, style=dashed];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_64  [key=2, style=dotted];
m7_57 -> m7_50  [key=0, style=solid];
m7_57 -> m7_65  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_66  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_58  [key=0, style=solid];
m7_50 -> m7_59  [key=0, style=solid];
m7_50 -> m7_61  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_58 -> m7_61  [key=0, style=solid];
m7_61 -> m7_49  [color=blue, key=0, style=bold];
m7_35 -> m7_36  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_8  [key=2, style=dotted];
m7_67 -> m7_26  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_27  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_1  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_2  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_3  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_4  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_10  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_12  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_13  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_14  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_21  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_22  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_23  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_24  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_25  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_28  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_29  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_30  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_38  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_39  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_40  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_41  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_43  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_51  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_52  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_53  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_54  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_55  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_56  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_57  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m7_67 -> m7_60  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_29  [key=0, style=solid];
m11_27 -> m11_26  [color=blue, key=0, style=bold];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_99  [key=2, style=dotted];
m11_27 -> m11_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_8 -> m11_91  [color=green, key=2, style=dotted];
m11_8 -> m11_8  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m11_7 -> m11_8  [color=green, key=0, style=solid];
m11_7 -> m11_90  [key=2, style=dotted];
m11_7 -> m11_6  [color=blue, key=0, style=bold];
m11_9 -> m11_9  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_58  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_9 -> m11_8  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_89  [key=2, style=dotted];
m11_6 -> m11_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_80  [key=0, style=solid];
m11_58 -> m11_58  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_153  [color=darkseagreen4, key=1, label=number, style=dashed];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_87  [key=2, style=dotted];
m11_5 -> m11_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_5 -> m11_4  [color=blue, key=0, style=bold];
m11_78 -> m11_10  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_94  [key=2, style=dotted];
m11_79 -> m11_10  [key=0, style=solid];
m11_79 -> m11_104  [key=2, style=dotted];
m11_11 -> m11_78  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_92  [key=2, style=dotted];
m11_11 -> m11_13  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_14  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_23  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_24  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_32  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_33  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_38  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_39  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_44  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_45  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_50  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_51  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_56  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_57  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_60  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_61  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_63  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_64  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_70  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_71  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_76  [color=darkseagreen4, key=1, label=command, style=dashed];
m11_11 -> m11_10  [color=blue, key=0, style=bold];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_98  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_95  [key=2, style=dotted];
m11_57 -> m11_96  [key=2, style=dotted];
m11_57 -> m11_59  [color=darkseagreen4, key=1, label=seconds, style=dashed];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_100  [key=2, style=dotted];
m11_59 -> m11_101  [key=2, style=dotted];
m11_59 -> m11_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_89  [key=2, style=dotted];
m11_4 -> m11_88  [key=2, style=dotted];
m11_4 -> m11_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_76 -> m11_78  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_94  [key=2, style=dotted];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_97  [key=2, style=dotted];
m11_77 -> m11_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_12 -> m11_80  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_93  [key=2, style=dotted];
m11_13 -> m11_94  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_23  [key=0, style=solid];
m11_13 -> m11_12  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_95  [key=2, style=dotted];
m11_14 -> m11_96  [key=2, style=dotted];
m11_14 -> m11_16  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_23 -> m11_94  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_32  [key=0, style=solid];
m11_23 -> m11_22  [color=blue, key=0, style=bold];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_95  [key=2, style=dotted];
m11_24 -> m11_96  [key=2, style=dotted];
m11_24 -> m11_26  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_32 -> m11_94  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_38  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_95  [key=2, style=dotted];
m11_33 -> m11_96  [key=2, style=dotted];
m11_33 -> m11_35  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_38 -> m11_94  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_44  [key=0, style=solid];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_95  [key=2, style=dotted];
m11_39 -> m11_96  [key=2, style=dotted];
m11_39 -> m11_41  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_44 -> m11_94  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_50  [key=0, style=solid];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_95  [key=2, style=dotted];
m11_45 -> m11_96  [key=2, style=dotted];
m11_45 -> m11_47  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_50 -> m11_94  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_56  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_95  [key=2, style=dotted];
m11_51 -> m11_96  [key=2, style=dotted];
m11_51 -> m11_53  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_94  [key=2, style=dotted];
m11_56 -> m11_60  [key=0, style=solid];
m11_60 -> m11_94  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_63  [key=0, style=solid];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_95  [key=2, style=dotted];
m11_61 -> m11_96  [key=2, style=dotted];
m11_61 -> m11_156  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m11_63 -> m11_94  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_70  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_95  [key=2, style=dotted];
m11_64 -> m11_96  [key=2, style=dotted];
m11_64 -> m11_66  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m11_70 -> m11_76  [key=0, style=solid];
m11_70 -> m11_94  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_95  [key=2, style=dotted];
m11_71 -> m11_96  [key=2, style=dotted];
m11_81 -> m11_92  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_87  [key=2, style=dotted];
m11_3 -> m11_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m11_73 -> m11_76  [key=0, style=solid];
m11_73 -> m11_98  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_98  [key=2, style=dotted];
m11_15 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_15 -> m11_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_15 -> m11_14  [color=blue, key=0, style=bold];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_20  [key=0, style=solid];
m11_20 -> m11_23  [key=0, style=solid];
m11_20 -> m11_98  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_98  [key=2, style=dotted];
m11_25 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_25 -> m11_24  [color=blue, key=0, style=bold];
m11_29 -> m11_32  [key=0, style=solid];
m11_29 -> m11_98  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_28  [color=blue, key=0, style=bold];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_98  [key=2, style=dotted];
m11_31 -> m11_30  [color=blue, key=0, style=bold];
m11_34 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_35 -> m11_38  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_40 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_41 -> m11_44  [key=0, style=solid];
m11_41 -> m11_42  [key=0, style=solid];
m11_46 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_47 -> m11_50  [key=0, style=solid];
m11_47 -> m11_48  [key=0, style=solid];
m11_52 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_55  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_53 -> m11_56  [key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_97  [key=2, style=dotted];
m11_62 -> m11_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_65 -> m11_15  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_69  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_66 -> m11_70  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_103  [key=2, style=dotted];
m11_72 -> m11_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_86  [key=2, style=dotted];
m11_2 -> m11_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_18 -> m11_97  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_36 -> m11_97  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_42 -> m11_97  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_48 -> m11_97  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_54 -> m11_97  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_67 -> m11_97  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_74 -> m11_75  [key=0, style=solid];
m11_17 -> m11_15  [color=darkorchid, key=3, label="Local variable int number", style=bold];
m11_17 -> m11_121  [color=darkseagreen4, key=1, label=number, style=dashed];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_16  [color=blue, key=0, style=bold];
m11_19 -> m11_16  [key=0, style=solid];
m11_19 -> m11_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_19 -> m11_18  [color=blue, key=0, style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_20  [color=blue, key=0, style=bold];
m11_28 -> m11_26  [key=0, style=solid];
m11_28 -> m11_28  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_28 -> m11_29  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_28  [color=darkorchid, key=3, label="Local variable int number", style=bold];
m11_37 -> m11_35  [key=0, style=solid];
m11_37 -> m11_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_43 -> m11_41  [key=0, style=solid];
m11_43 -> m11_43  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_49 -> m11_47  [key=0, style=solid];
m11_49 -> m11_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_55 -> m11_53  [key=0, style=solid];
m11_55 -> m11_55  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_69 -> m11_66  [key=0, style=solid];
m11_69 -> m11_69  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_83  [key=2, style=dotted];
m11_1 -> m11_84  [key=2, style=dotted];
m11_1 -> m11_85  [key=2, style=dotted];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_102  [key=2, style=dotted];
m11_82 -> m11_0  [color=blue, key=0, style=bold];
m11_104 -> m11_181  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_104 -> m11_179  [key=0, style=solid];
m11_104 -> m11_188  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_104 -> m11_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_104 -> m11_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_104 -> m11_79  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m11_181 -> m11_9  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_184  [key=0, style=solid];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_182  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_180 -> m11_192  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_180 -> m11_183  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_183 -> m11_181  [key=0, style=solid];
m11_183 -> m11_183  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_182  [color=darkseagreen4, key=1, label=lastId, style=dashed];
m11_182 -> m11_186  [key=2, style=dotted];
m11_182 -> m11_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_182 -> m11_184  [color=darkseagreen4, key=1, label=lastId, style=dashed];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_186  [key=2, style=dotted];
m11_184 -> m11_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_182  [color=darkseagreen4, key=1, label=lastId, style=dashed];
m11_179 -> m11_184  [color=darkseagreen4, key=1, label=lastId, style=dashed];
m11_179 -> m11_97  [key=2, style=dotted];
m11_179 -> m11_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_185 -> m11_104  [color=blue, key=0, style=bold];
m11_124 -> m11_125  [key=0, style=solid];
m11_117 -> m11_118  [key=0, style=solid];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_123  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_119 -> m11_117  [color=blue, key=0, style=bold];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_98  [key=2, style=dotted];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_190  [key=2, style=dotted];
m11_192 -> m11_193  [key=0, style=solid];
m11_192 -> m11_190  [key=2, style=dotted];
m11_191 -> m11_192  [key=0, style=solid];
m11_194 -> m11_195  [key=0, style=solid];
m11_152 -> m11_153  [key=0, style=solid];
m11_154 -> m11_152  [color=blue, key=0, style=bold];
m11_111 -> m11_112  [key=0, style=solid];
m11_116 -> m11_114  [color=blue, key=0, style=bold];
m11_115 -> m11_98  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_187 -> m11_188  [key=0, style=solid];
m11_189 -> m11_187  [color=blue, key=0, style=bold];
m11_193 -> m11_191  [color=blue, key=0, style=bold];
m11_196 -> m11_194  [color=blue, key=0, style=bold];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_197  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_158  [key=2, style=dotted];
m11_106 -> m11_98  [key=2, style=dotted];
m11_106 -> m11_107  [key=0, style=solid];
m11_109 -> m11_98  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_112 -> m11_98  [key=2, style=dotted];
m11_112 -> m11_113  [key=0, style=solid];
m11_121 -> m11_123  [key=2, style=dotted];
m11_121 -> m11_122  [key=0, style=solid];
m11_108 -> m11_109  [key=0, style=solid];
m11_113 -> m11_111  [color=blue, key=0, style=bold];
m11_165 -> m11_97  [key=2, style=dotted];
m11_165 -> m11_167  [key=0, style=solid];
m11_165 -> m11_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_166 -> m11_97  [key=2, style=dotted];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_177 -> m11_175  [color=blue, key=0, style=bold];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_178  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_157 -> m11_155  [color=blue, key=0, style=bold];
m11_163 -> m11_164  [key=0, style=solid];
m11_105 -> m11_106  [key=0, style=solid];
m11_107 -> m11_105  [color=blue, key=0, style=bold];
m11_110 -> m11_108  [color=blue, key=0, style=bold];
m11_120 -> m11_121  [key=0, style=solid];
m11_122 -> m11_120  [color=blue, key=0, style=bold];
m11_128 -> m11_129  [key=0, style=solid];
m11_132 -> m11_133  [key=0, style=solid];
m11_138 -> m11_139  [key=0, style=solid];
m11_145 -> m11_146  [key=0, style=solid];
m11_159 -> m11_160  [key=0, style=solid];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_166  [key=0, style=solid];
m11_167 -> m11_163  [color=blue, key=0, style=bold];
m11_168 -> m11_169  [key=0, style=solid];
m11_172 -> m11_173  [key=0, style=solid];
m11_130 -> m11_128  [color=blue, key=0, style=bold];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_131  [key=2, style=dotted];
m11_134 -> m11_132  [color=blue, key=0, style=bold];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_135  [key=2, style=dotted];
m11_133 -> m11_136  [key=2, style=dotted];
m11_133 -> m11_137  [key=2, style=dotted];
m11_140 -> m11_138  [color=blue, key=0, style=bold];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_141  [key=2, style=dotted];
m11_139 -> m11_142  [key=2, style=dotted];
m11_139 -> m11_143  [key=2, style=dotted];
m11_139 -> m11_144  [key=2, style=dotted];
m11_147 -> m11_145  [color=blue, key=0, style=bold];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_148  [key=2, style=dotted];
m11_146 -> m11_149  [key=2, style=dotted];
m11_146 -> m11_143  [key=2, style=dotted];
m11_146 -> m11_150  [key=2, style=dotted];
m11_146 -> m11_151  [key=2, style=dotted];
m11_161 -> m11_159  [color=blue, key=0, style=bold];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_162  [key=2, style=dotted];
m11_170 -> m11_168  [color=blue, key=0, style=bold];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_171  [key=2, style=dotted];
m11_174 -> m11_172  [color=blue, key=0, style=bold];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_162  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_127  [key=2, style=dotted];
m11_126 -> m11_124  [color=blue, key=0, style=bold];
m11_199 -> m11_153  [color=darkseagreen4, key=1, label=number, style=dashed];
m11_201 -> m11_188  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_201 -> m11_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_202 -> m11_192  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_200 -> m11_156  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m11_198 -> m11_121  [color=darkseagreen4, key=1, label=number, style=dashed];
m12_10 -> m12_11  [color=green, key=0, style=solid];
m12_11 -> m12_12  [color=green, key=0, style=solid];
m12_11 -> m12_17  [color=green, key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_12  [color=darkseagreen4, key=1, label=owinContext, style=dashed];
m12_13 -> m12_14  [color=green, key=0, style=solid];
m12_13 -> m12_18  [key=2, style=dotted];
m12_13 -> m12_13  [color=darkseagreen4, key=1, label=owinContext, style=dashed];
m12_14 -> m12_15  [color=green, key=0, style=solid];
m12_14 -> m12_19  [color=green, key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_20  [key=2, style=dotted];
m12_16 -> m12_10  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_27  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m12_24 -> m12_31  [color=darkseagreen4, key=1, label=IOwinResponse, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_34  [key=2, style=dotted];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m12_25 -> m12_29  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m12_25 -> m12_32  [color=darkseagreen4, key=1, label=inputStream, style=dashed];
m12_27 -> m12_33  [key=0, style=solid];
m12_27 -> m12_35  [key=2, style=dotted];
m12_27 -> m12_36  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_39  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_37  [key=2, style=dotted];
m12_28 -> m12_31  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m12_28 -> m12_32  [color=darkseagreen4, key=1, label=buffer, style=dashed];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_38  [key=2, style=dotted];
m12_29 -> m12_31  [color=darkseagreen4, key=1, label=readLength, style=dashed];
m12_32 -> m12_30  [key=0, style=solid];
m12_32 -> m12_38  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_33  [key=0, style=solid];
m12_33 -> m12_24  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [color=green, key=0, style=solid];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m12_0 -> m12_6  [color=green, key=1, label=string, style=dashed];
m12_0 -> m12_7  [color=green, key=1, label=string, style=dashed];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_3  [color=green, key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=0, style=solid];
m12_3 -> m12_12  [color=green, key=3, label="Field variable Hangfire.Client.IJobCreationProcess _creationProcess", style=bold];
m12_5 -> m12_6  [color=green, key=0, style=solid];
m12_6 -> m12_7  [color=green, key=0, style=solid];
m12_7 -> m12_8  [color=green, key=0, style=solid];
m12_2 -> m12_8  [color=green, key=0, style=solid];
m12_2 -> d18  [color=green, key=2, style=dotted];
m12_4 -> m12_8  [key=0, style=solid];
m12_4 -> d18  [key=2, style=dotted];
m12_8 -> m12_0  [color=blue, key=0, style=bold];
m12_21 -> m12_22  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_24  [key=2, style=dotted];
m12_23 -> m12_21  [color=blue, key=0, style=bold];
m12_40 -> m12_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m12_40 -> m12_6  [color=green, key=1, label="Hangfire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m12_40 -> m12_7  [color=green, key=1, label="Hangfire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m12_40 -> m12_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m12_40 -> m12_14  [color=green, key=1, label="Hangfire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m12_40 -> m12_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.EmbeddedResourceDispatcher", style=dashed];
m13_5 -> m13_6  [color=red, key=0, style=solid];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m13_0 -> m13_5  [color=red, key=1, label="Hangfire.JobStorage", style=dashed];
m13_0 -> m13_6  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m13_0 -> m13_7  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> m13_3  [color=red, key=0, style=solid];
m13_1 -> m13_5  [color=green, key=2, style=dotted];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_5  [color=red, key=0, style=solid];
m13_3 -> m13_8  [color=green, key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_8  [key=0, style=solid];
m13_2 -> m13_8  [color=red, key=0, style=solid];
m13_2 -> d18  [color=red, key=2, style=dotted];
m13_2 -> m13_3  [color=green, key=0, style=solid];
m13_2 -> m13_6  [color=green, key=2, style=dotted];
m13_2 -> m13_7  [color=green, key=2, style=dotted];
m13_4 -> m13_8  [key=0, style=solid];
m13_4 -> d18  [key=2, style=dotted];
m13_4 -> m13_0  [color=blue, key=0, style=bold];
m13_8 -> m13_0  [color=blue, key=0, style=bold];
m13_21 -> m13_22  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_21  [color=blue, key=0, style=bold];
m13_18 -> m13_24  [color=red, key=0, style=solid];
m13_18 -> m13_28  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m13_18 -> m13_32  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m13_24 -> m13_25  [color=red, key=0, style=solid];
m13_24 -> m13_34  [color=red, key=2, style=dotted];
m13_24 -> m13_26  [color=red, key=1, label=connection, style=dashed];
m13_24 -> m13_29  [color=red, key=1, label=connection, style=dashed];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_35  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_36  [key=2, style=dotted];
m13_26 -> m13_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_29 -> m13_30  [color=red, key=0, style=solid];
m13_29 -> m13_38  [color=red, key=2, style=dotted];
m13_29 -> m13_31  [color=red, key=1, label=stateMachine, style=dashed];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [color=red, key=0, style=solid];
m13_27 -> m13_37  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_40  [key=2, style=dotted];
m13_28 -> m13_33  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_39  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_33 -> m13_18  [color=blue, key=0, style=bold];
m13_14 -> m13_15  [color=red, key=0, style=solid];
m13_15 -> m13_16  [color=green, key=0, style=solid];
m13_15 -> m13_17  [color=red, key=0, style=solid];
m13_15 -> m13_20  [color=red, key=2, style=dotted];
m13_15 -> m13_15  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_16 -> m13_0  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_17 -> m13_14  [color=blue, key=0, style=bold];
m13_17 -> m13_10  [color=blue, key=0, style=bold];
m13_10 -> m13_11  [color=red, key=0, style=solid];
m13_10 -> m13_15  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m13_11 -> m13_12  [color=red, key=0, style=solid];
m13_11 -> m13_16  [color=red, key=0, style=solid];
m13_11 -> m13_18  [color=red, key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_15  [color=red, key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_19  [key=2, style=dotted];
m13_41 -> m13_5  [color=red, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_6  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_7  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_11  [color=red, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_12  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_13  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_14  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_15  [color=red, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_16  [color=darkseagreen4, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_24  [color=red, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m13_41 -> m13_29  [color=red, key=1, label="Hangfire.Server.SchedulePoller", style=dashed];
m15_36 -> m15_37  [color=green, key=0, style=solid];
m15_37 -> m15_38  [color=green, key=0, style=solid];
m15_37 -> m15_23  [color=green, key=2, style=dotted];
m15_37 -> m15_40  [color=green, key=1, label="lambda expression", style=dashed];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> n10  [key=2, style=dotted];
m15_39 -> m15_36  [color=blue, key=0, style=bold];
m15_63 -> m15_64  [key=0, style=solid];
m15_64 -> m15_56  [key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_65 -> m15_57  [key=2, style=dotted];
m15_65 -> m15_66  [key=0, style=solid];
m15_66 -> m15_58  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_69  [key=2, style=dotted];
m15_66 -> m15_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_67 -> m15_58  [key=2, style=dotted];
m15_67 -> m15_68  [key=0, style=solid];
m15_67 -> m15_69  [key=2, style=dotted];
m15_67 -> m15_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_68 -> m15_63  [color=blue, key=0, style=bold];
m15_19 -> m15_20  [color=green, key=0, style=solid];
m15_20 -> m15_21  [color=green, key=0, style=solid];
m15_20 -> m15_23  [color=green, key=2, style=dotted];
m15_20 -> m15_25  [color=green, key=1, label="lambda expression", style=dashed];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> n10  [key=2, style=dotted];
m15_22 -> m15_19  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_4 -> m15_5  [color=green, key=0, style=solid];
m15_4 -> m15_11  [color=green, key=2, style=dotted];
m15_3 -> m15_4  [color=green, key=0, style=solid];
m15_3 -> m15_10  [key=2, style=dotted];
m15_5 -> m15_6  [color=green, key=0, style=solid];
m15_5 -> m15_12  [color=green, key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_13  [key=2, style=dotted];
m15_6 -> m15_14  [key=2, style=dotted];
m15_6 -> m15_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_8  [key=2, style=dotted];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_9  [key=2, style=dotted];
m15_7 -> m15_0  [color=blue, key=0, style=bold];
m15_77 -> m15_78  [color=green, key=0, style=solid];
m15_78 -> m15_79  [color=green, key=0, style=solid];
m15_78 -> m15_86  [color=green, key=2, style=dotted];
m15_78 -> m15_83  [color=green, key=1, label=component1, style=dashed];
m15_79 -> m15_80  [color=green, key=0, style=solid];
m15_79 -> m15_13  [color=green, key=2, style=dotted];
m15_79 -> m15_87  [color=green, key=2, style=dotted];
m15_79 -> m15_88  [color=green, key=1, label="lambda expression", style=dashed];
m15_79 -> m15_91  [color=green, key=1, label="lambda expression", style=dashed];
m15_83 -> m15_84  [color=green, key=0, style=solid];
m15_83 -> m15_58  [color=green, key=2, style=dotted];
m15_83 -> m15_95  [color=green, key=1, label="lambda expression", style=dashed];
m15_80 -> m15_81  [color=green, key=0, style=solid];
m15_80 -> m15_86  [color=green, key=2, style=dotted];
m15_80 -> m15_84  [color=green, key=1, label=component2, style=dashed];
m15_82 -> m15_83  [color=green, key=0, style=solid];
m15_82 -> m15_57  [key=2, style=dotted];
m15_84 -> m15_85  [color=green, key=0, style=solid];
m15_84 -> m15_58  [color=green, key=2, style=dotted];
m15_84 -> m15_98  [color=green, key=1, label="lambda expression", style=dashed];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_56  [key=2, style=dotted];
m15_85 -> m15_77  [color=blue, key=0, style=bold];
m15_56 -> m15_110  [color=green, key=0, style=solid];
m15_110 -> m15_111  [color=green, key=0, style=solid];
m15_110 -> m15_28  [color=green, key=2, style=dotted];
m15_111 -> m15_56  [color=blue, key=0, style=bold];
m15_86 -> m15_112  [color=green, key=0, style=solid];
m15_112 -> m15_113  [color=green, key=0, style=solid];
m15_112 -> m15_116  [color=green, key=2, style=dotted];
m15_112 -> m15_114  [color=green, key=1, label=mock, style=dashed];
m15_113 -> m15_114  [color=green, key=0, style=solid];
m15_113 -> m15_117  [color=green, key=2, style=dotted];
m15_114 -> m15_115  [color=green, key=0, style=solid];
m15_115 -> m15_86  [color=blue, key=0, style=bold];
m15_101 -> m15_102  [key=0, style=solid];
m15_102 -> m15_56  [key=2, style=dotted];
m15_102 -> m15_103  [key=0, style=solid];
m15_103 -> m15_57  [key=2, style=dotted];
m15_103 -> m15_104  [key=0, style=solid];
m15_104 -> m15_58  [key=2, style=dotted];
m15_104 -> m15_105  [key=0, style=solid];
m15_104 -> m15_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_105 -> m15_101  [color=blue, key=0, style=bold];
m15_29 -> m15_30  [color=green, key=0, style=solid];
m15_30 -> m15_31  [color=green, key=0, style=solid];
m15_30 -> m15_23  [color=green, key=2, style=dotted];
m15_30 -> m15_33  [color=green, key=1, label="lambda expression", style=dashed];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> n10  [key=2, style=dotted];
m15_32 -> m15_29  [color=blue, key=0, style=bold];
m15_51 -> m15_52  [key=0, style=solid];
m15_52 -> m15_56  [key=2, style=dotted];
m15_52 -> m15_53  [key=0, style=solid];
m15_53 -> m15_57  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_54 -> m15_58  [key=2, style=dotted];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_55 -> m15_51  [color=blue, key=0, style=bold];
m15_44 -> m15_45  [key=0, style=solid];
m15_46 -> m15_47  [color=green, key=0, style=solid];
m15_46 -> n10  [color=green, key=2, style=dotted];
m15_45 -> m15_46  [color=green, key=0, style=solid];
m15_45 -> m15_23  [key=2, style=dotted];
m15_45 -> m15_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_47 -> m15_44  [color=blue, key=0, style=bold];
m15_106 -> m15_107  [key=0, style=solid];
m15_25 -> m15_26  [color=green, key=0, style=solid];
m15_26 -> m15_27  [color=green, key=0, style=solid];
m15_26 -> m15_28  [color=green, key=2, style=dotted];
m15_27 -> m15_25  [color=blue, key=0, style=bold];
m15_33 -> m15_34  [color=green, key=0, style=solid];
m15_34 -> m15_35  [color=green, key=0, style=solid];
m15_34 -> m15_28  [color=green, key=2, style=dotted];
m15_35 -> m15_33  [color=blue, key=0, style=bold];
m15_40 -> m15_41  [color=green, key=0, style=solid];
m15_41 -> m15_42  [color=green, key=0, style=solid];
m15_41 -> m15_43  [color=green, key=2, style=dotted];
m15_42 -> m15_40  [color=blue, key=0, style=bold];
m15_88 -> m15_89  [color=green, key=0, style=solid];
m15_91 -> m15_92  [color=green, key=0, style=solid];
m15_95 -> m15_96  [color=green, key=0, style=solid];
m15_98 -> m15_99  [color=green, key=0, style=solid];
m15_89 -> m15_90  [color=green, key=0, style=solid];
m15_89 -> m15_23  [color=green, key=2, style=dotted];
m15_89 -> m15_57  [color=green, key=2, style=dotted];
m15_90 -> m15_88  [color=blue, key=0, style=bold];
m15_92 -> m15_93  [color=green, key=0, style=solid];
m15_92 -> m15_94  [color=green, key=2, style=dotted];
m15_93 -> m15_91  [color=blue, key=0, style=bold];
m15_96 -> m15_97  [color=green, key=0, style=solid];
m15_96 -> m15_57  [color=green, key=2, style=dotted];
m15_97 -> m15_95  [color=blue, key=0, style=bold];
m15_99 -> m15_100  [color=green, key=0, style=solid];
m15_99 -> m15_57  [color=green, key=2, style=dotted];
m15_100 -> m15_98  [color=blue, key=0, style=bold];
m15_49 -> m15_28  [key=2, style=dotted];
m15_49 -> m15_50  [key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_62  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_48 -> m15_49  [key=0, style=solid];
m15_50 -> m15_48  [color=blue, key=0, style=bold];
m15_59 -> m15_60  [key=0, style=solid];
m15_61 -> m15_59  [color=blue, key=0, style=bold];
m15_70 -> m15_71  [key=0, style=solid];
m15_73 -> m15_74  [key=0, style=solid];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_18  [key=2, style=dotted];
m15_72 -> m15_70  [color=blue, key=0, style=bold];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_18  [key=2, style=dotted];
m15_75 -> m15_73  [color=blue, key=0, style=bold];
m15_74 -> m15_75  [key=0, style=solid];
m15_74 -> m15_76  [key=2, style=dotted];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_109  [key=2, style=dotted];
m15_108 -> m15_106  [color=blue, key=0, style=bold];
m15_118 -> m15_4  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_5  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_30  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_37  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_41  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_78  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_83  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_80  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_84  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_96  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_99  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_110  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_113  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_60  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_66  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m15_118 -> m15_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", style=dashed];
m16_0 -> m16_1  [color=red, key=0, style=solid];
m16_1 -> m16_2  [color=red, key=0, style=solid];
m16_1 -> m16_60  [color=red, key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_61  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_62  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_63  [key=2, style=dotted];
m16_5 -> m16_7  [color=darkseagreen4, key=1, label=queues, style=dashed];
m16_5 -> m16_10  [color=darkseagreen4, key=1, label=queues, style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_60  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_9  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_58  [key=0, style=solid];
m16_10 -> m16_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_18  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_20  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_22  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_26  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_10 -> m16_29  [color=darkseagreen4, key=1, label=queue, style=dashed];
m16_8 -> m16_59  [key=0, style=solid];
m16_8 -> m16_60  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_60  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_60  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_60  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_64  [key=2, style=dotted];
m16_12 -> m16_65  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_65  [key=2, style=dotted];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_65  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_24  [key=0, style=solid];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_64  [key=2, style=dotted];
m16_20 -> m16_65  [key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_65  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_28  [key=0, style=solid];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_56  [key=0, style=solid];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_60  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_60  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_60  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_60  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_60  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_60  [key=2, style=dotted];
m16_23 -> m16_25  [key=0, style=solid];
m16_23 -> m16_60  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_60  [key=2, style=dotted];
m16_27 -> m16_57  [key=0, style=solid];
m16_27 -> m16_60  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_60  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_60  [key=2, style=dotted];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_60  [key=2, style=dotted];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_65  [key=2, style=dotted];
m16_31 -> m16_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_31 -> m16_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_60  [key=2, style=dotted];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_64  [key=2, style=dotted];
m16_33 -> m16_65  [key=2, style=dotted];
m16_33 -> m16_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_33 -> m16_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_60  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_66  [key=2, style=dotted];
m16_35 -> m16_67  [key=2, style=dotted];
m16_35 -> m16_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_35 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_60  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_39  [key=0, style=solid];
m16_37 -> m16_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_37 -> m16_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_60  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_60  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_68  [key=2, style=dotted];
m16_40 -> m16_69  [key=2, style=dotted];
m16_40 -> m16_65  [key=2, style=dotted];
m16_40 -> m16_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_40 -> m16_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_60  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_65  [key=2, style=dotted];
m16_42 -> m16_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_42 -> m16_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_60  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_64  [key=2, style=dotted];
m16_44 -> m16_65  [key=2, style=dotted];
m16_44 -> m16_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_44 -> m16_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_60  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_70  [key=2, style=dotted];
m16_46 -> m16_67  [key=2, style=dotted];
m16_46 -> m16_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_46 -> m16_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_60  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_54  [key=0, style=solid];
m16_48 -> m16_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_48 -> m16_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_60  [key=2, style=dotted];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> m16_60  [key=2, style=dotted];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> n36  [key=2, style=dotted];
m16_50 -> m16_65  [key=2, style=dotted];
m16_50 -> m16_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_50 -> m16_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_60  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_65  [key=2, style=dotted];
m16_52 -> m16_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m16_53 -> m16_55  [key=0, style=solid];
m16_53 -> m16_60  [key=2, style=dotted];
m16_55 -> m16_29  [key=0, style=solid];
m16_55 -> m16_60  [key=2, style=dotted];
m16_57 -> m16_10  [key=0, style=solid];
m16_57 -> m16_60  [key=2, style=dotted];
m16_59 -> m16_0  [color=blue, key=0, style=bold];
m16_72 -> m16_1  [color=red, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m16_72 -> m16_58  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_5  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_6  [key=2, style=dotted];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_7 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=2, style=dotted];
m17_9 -> m17_7  [color=blue, key=0, style=bold];
m17_11 -> m17_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m17_11 -> m17_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m17_11 -> m17_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m17_11 -> m17_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.WorkerContextMock", style=dashed];
m19_14 -> m19_15  [color=red, key=0, style=solid];
m19_14 -> m19_16  [color=red, key=2, style=dotted];
m19_17 -> m19_15  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m19_17 -> m19_18  [color=red, key=0, style=solid];
m19_18 -> m19_19  [color=red, key=0, style=solid];
m19_18 -> m19_21  [color=red, key=2, style=dotted];
m19_19 -> m19_17  [color=blue, key=0, style=bold];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_22  [key=2, style=dotted];
m19_0 -> m19_3  [color=green, key=1, label=string, style=dashed];
m19_0 -> m19_1  [color=red, key=0, style=solid];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m19_0 -> m19_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_3 -> m19_4  [color=red, key=0, style=solid];
m19_3 -> m19_5  [color=green, key=0, style=solid];
m19_3 -> m19_9  [key=2, style=dotted];
m19_1 -> m19_3  [color=green, key=0, style=solid];
m19_1 -> m19_2  [color=red, key=0, style=solid];
m19_1 -> m19_7  [color=red, key=2, style=dotted];
m19_1 -> m19_13  [color=red, key=1, label="lambda expression", style=dashed];
m19_1 -> m19_4  [color=red, key=1, label=job, style=dashed];
m19_4 -> m19_7  [color=green, key=0, style=solid];
m19_4 -> d18  [color=green, key=2, style=dotted];
m19_4 -> m19_5  [color=red, key=0, style=solid];
m19_4 -> m19_10  [color=red, key=2, style=dotted];
m19_5 -> m19_6  [color=red, key=0, style=solid];
m19_5 -> m19_11  [color=red, key=2, style=dotted];
m19_5 -> m19_12  [color=red, key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_0  [color=blue, key=0, style=bold];
m19_2 -> m19_7  [key=0, style=solid];
m19_2 -> d18  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_8  [key=2, style=dotted];
m19_7 -> m19_0  [color=blue, key=0, style=bold];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_14  [key=2, style=dotted];
m19_12 -> m19_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_16  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_15  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_12  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m19_13 -> m19_9  [color=blue, key=0, style=bold];
m19_13 -> m19_14  [color=red, key=0, style=solid];
m19_49 -> m19_50  [key=0, style=solid];
m19_15 -> m19_13  [color=blue, key=0, style=bold];
m19_30 -> m19_31  [key=0, style=solid];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_33  [key=2, style=dotted];
m19_32 -> m19_30  [color=blue, key=0, style=bold];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_28  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_43 -> m19_41  [color=blue, key=0, style=bold];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_52  [key=2, style=dotted];
m19_51 -> m19_49  [color=blue, key=0, style=bold];
m19_20 -> m19_17  [color=blue, key=0, style=bold];
m19_20 -> m19_5  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m19_20 -> m19_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m19_20 -> m19_10  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m19_20 -> m19_11  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerHeartbeat", style=dashed];
m19_34 -> m19_35  [key=0, style=solid];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_21  [key=2, style=dotted];
m19_35 -> m19_37  [color=darkseagreen4, key=1, label=handler, style=dashed];
m19_35 -> m19_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_11  [key=2, style=dotted];
m19_36 -> m19_39  [key=2, style=dotted];
m19_36 -> m19_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_40  [key=2, style=dotted];
m19_37 -> m19_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_38 -> m19_34  [color=blue, key=0, style=bold];
m19_23 -> m19_24  [color=red, key=0, style=solid];
m19_24 -> m19_25  [color=red, key=0, style=solid];
m19_24 -> m19_21  [color=red, key=2, style=dotted];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_28  [key=2, style=dotted];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_29  [key=2, style=dotted];
m19_26 -> m19_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_27 -> m19_23  [color=blue, key=0, style=bold];
m19_44 -> m19_45  [key=0, style=solid];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_21  [key=2, style=dotted];
m19_45 -> m19_50  [color=darkseagreen4, key=1, label=handler, style=dashed];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_48  [key=2, style=dotted];
m19_46 -> m19_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_47 -> m19_44  [color=blue, key=0, style=bold];
m19_53 -> m19_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_4  [color=red, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_5  [color=red, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_53 -> m19_42  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", style=dashed];
m19_54 -> m19_42  [color=darkseagreen4, key=1, label=handler, style=dashed];
m19_55 -> m19_42  [color=darkseagreen4, key=1, label=context, style=dashed];
m19_56 -> m19_50  [color=darkseagreen4, key=1, label=handler, style=dashed];
m20_19 -> m20_21  [key=0, style=solid];
m20_19 -> m20_23  [color=darkorchid, key=3, label="method methodReturn bool IsJobAborted", style=bold];
m20_19 -> m20_30  [color=darkorchid, key=3, label="method methodReturn bool IsJobAborted", style=bold];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_32  [key=2, style=dotted];
m20_21 -> m20_24  [color=darkseagreen4, key=1, label=state, style=dashed];
m20_21 -> m20_26  [color=red, key=1, label=state, style=dashed];
m20_21 -> m20_28  [color=darkseagreen4, key=1, label=state, style=dashed];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_24  [key=0, style=solid];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_26  [color=red, key=0, style=solid];
m20_24 -> m20_33  [key=2, style=dotted];
m20_26 -> m20_27  [color=red, key=0, style=solid];
m20_26 -> m20_28  [color=red, key=0, style=solid];
m20_26 -> m20_34  [color=red, key=2, style=dotted];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_30  [key=0, style=solid];
m20_28 -> m20_35  [key=2, style=dotted];
m20_23 -> m20_31  [key=0, style=solid];
m20_25 -> m20_31  [key=0, style=solid];
m20_27 -> m20_31  [key=0, style=solid];
m20_29 -> m20_31  [key=0, style=solid];
m20_30 -> m20_31  [key=0, style=solid];
m20_31 -> m20_19  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_3  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m20_0 -> m20_5  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m20_0 -> m20_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_0 -> m20_8  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m20_0 -> m20_9  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m20_0 -> m20_10  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_7  [key=0, style=solid];
m20_7 -> m20_8  [color=red, key=0, style=solid];
m20_8 -> m20_9  [color=red, key=0, style=solid];
m20_9 -> m20_10  [key=0, style=solid];
m20_10 -> m20_11  [key=0, style=solid];
m20_2 -> m20_11  [key=0, style=solid];
m20_2 -> d18  [key=2, style=dotted];
m20_4 -> m20_11  [key=0, style=solid];
m20_4 -> d18  [key=2, style=dotted];
m20_6 -> m20_11  [key=0, style=solid];
m20_6 -> d18  [key=2, style=dotted];
m20_11 -> m20_0  [color=blue, key=0, style=bold];
m20_13 -> m20_14  [color=red, key=0, style=solid];
m20_14 -> m20_15  [color=red, key=0, style=solid];
m20_14 -> m20_18  [color=red, key=2, style=dotted];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_17  [key=0, style=solid];
m20_15 -> m20_19  [key=2, style=dotted];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_20  [key=2, style=dotted];
m20_17 -> m20_13  [color=blue, key=0, style=bold];
m20_36 -> m20_7  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_8  [color=red, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_10  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_14  [color=red, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_15  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_21  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_26  [color=red, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m20_36 -> m20_28  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m22_31 -> m22_32  [color=red, key=0, style=solid];
m22_32 -> m22_33  [color=red, key=0, style=solid];
m22_32 -> m22_34  [color=red, key=2, style=dotted];
m22_33 -> m22_31  [color=blue, key=0, style=bold];
m22_47 -> m22_48  [color=red, key=0, style=solid];
m22_48 -> m22_49  [color=red, key=0, style=solid];
m22_48 -> m22_50  [color=red, key=2, style=dotted];
m22_49 -> m22_47  [color=blue, key=0, style=bold];
m22_43 -> m22_44  [color=red, key=0, style=solid];
m22_44 -> m22_45  [color=red, key=0, style=solid];
m22_44 -> m22_46  [color=red, key=2, style=dotted];
m22_45 -> m22_43  [color=blue, key=0, style=bold];
m22_23 -> m22_24  [color=red, key=0, style=solid];
m22_24 -> m22_25  [color=red, key=0, style=solid];
m22_24 -> m22_26  [color=red, key=2, style=dotted];
m22_25 -> m22_23  [color=blue, key=0, style=bold];
m22_12 -> m22_13  [color=red, key=0, style=solid];
m22_13 -> m22_14  [color=red, key=0, style=solid];
m22_13 -> m22_15  [color=red, key=0, style=solid];
m22_14 -> m22_13  [color=red, key=0, style=solid];
m22_14 -> m22_16  [color=red, key=2, style=dotted];
m22_15 -> m22_12  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [color=red, key=0, style=solid];
m22_0 -> m22_3  [color=red, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerSupervisor>", style=dashed];
m22_1 -> m22_2  [color=red, key=0, style=solid];
m22_1 -> m22_3  [color=red, key=0, style=solid];
m22_3 -> m22_4  [color=red, key=0, style=solid];
m22_3 -> m22_6  [color=red, key=2, style=dotted];
m22_2 -> m22_4  [color=red, key=0, style=solid];
m22_2 -> d18  [color=red, key=2, style=dotted];
m22_4 -> m22_0  [color=blue, key=0, style=bold];
m22_17 -> m22_18  [color=red, key=0, style=solid];
m22_18 -> m22_19  [color=red, key=0, style=solid];
m22_18 -> m22_12  [color=red, key=2, style=dotted];
m22_19 -> m22_20  [color=red, key=0, style=solid];
m22_19 -> m22_21  [color=red, key=0, style=solid];
m22_20 -> m22_19  [color=red, key=0, style=solid];
m22_20 -> m22_22  [color=red, key=2, style=dotted];
m22_21 -> m22_17  [color=blue, key=0, style=bold];
m22_7 -> m22_8  [color=red, key=0, style=solid];
m22_8 -> m22_9  [color=red, key=0, style=solid];
m22_8 -> m22_10  [color=red, key=0, style=solid];
m22_9 -> m22_8  [color=red, key=0, style=solid];
m22_9 -> m22_11  [color=red, key=2, style=dotted];
m22_10 -> m22_7  [color=blue, key=0, style=bold];
m22_27 -> m22_28  [color=red, key=0, style=solid];
m22_28 -> m22_29  [color=red, key=0, style=solid];
m22_28 -> m22_30  [color=red, key=2, style=dotted];
m22_29 -> m22_27  [color=blue, key=0, style=bold];
m22_39 -> m22_40  [color=red, key=0, style=solid];
m22_40 -> m22_41  [color=red, key=0, style=solid];
m22_40 -> m22_42  [color=red, key=2, style=dotted];
m22_41 -> m22_39  [color=blue, key=0, style=bold];
m22_35 -> m22_36  [color=red, key=0, style=solid];
m22_36 -> m22_37  [color=red, key=0, style=solid];
m22_36 -> m22_38  [color=red, key=2, style=dotted];
m22_37 -> m22_35  [color=blue, key=0, style=bold];
m22_51 -> m22_3  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_8  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_13  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_18  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_19  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_24  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_28  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_32  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_36  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_40  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_44  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m22_51 -> m22_48  [color=red, key=1, label="Hangfire.Server.ServerSupervisorCollection", style=dashed];
m23_4 -> m23_5  [color=red, key=0, style=solid];
m23_5 -> m23_6  [color=red, key=0, style=solid];
m23_5 -> m23_7  [color=red, key=2, style=dotted];
m23_6 -> m23_4  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [color=red, key=0, style=solid];
m23_1 -> m23_2  [color=red, key=0, style=solid];
m23_1 -> m23_3  [color=red, key=2, style=dotted];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m23_18 -> m23_19  [key=0, style=solid];
m23_19 -> m23_18  [color=blue, key=0, style=bold];
m23_38 -> m23_39  [color=red, key=0, style=solid];
m23_38 -> m23_40  [color=red, key=1, label=string, style=dashed];
m23_39 -> m23_40  [color=red, key=0, style=solid];
m23_39 -> m23_32  [color=red, key=2, style=dotted];
m23_39 -> m23_42  [color=red, key=2, style=dotted];
m23_40 -> m23_41  [color=red, key=0, style=solid];
m23_40 -> m23_12  [color=red, key=2, style=dotted];
m23_40 -> m23_34  [color=red, key=2, style=dotted];
m23_40 -> m23_42  [color=red, key=2, style=dotted];
m23_41 -> m23_38  [color=blue, key=0, style=bold];
m23_20 -> m23_21  [color=red, key=0, style=solid];
m23_21 -> m23_22  [color=red, key=0, style=solid];
m23_21 -> m23_23  [color=red, key=2, style=dotted];
m23_21 -> m23_24  [color=red, key=2, style=dotted];
m23_22 -> m23_20  [color=blue, key=0, style=bold];
m23_16 -> m23_17  [color=red, key=0, style=solid];
m23_16 -> m23_12  [color=red, key=2, style=dotted];
m23_16 -> n36  [color=red, key=2, style=dotted];
m23_16 -> m23_14  [color=red, key=2, style=dotted];
m23_15 -> m23_16  [color=red, key=0, style=solid];
m23_17 -> m23_15  [color=blue, key=0, style=bold];
m23_35 -> m23_36  [color=red, key=0, style=solid];
m23_36 -> m23_37  [color=red, key=0, style=solid];
m23_36 -> m23_38  [color=red, key=2, style=dotted];
m23_37 -> m23_35  [color=blue, key=0, style=bold];
m23_28 -> m23_29  [color=red, key=0, style=solid];
m23_28 -> m23_30  [color=red, key=1, label=string, style=dashed];
m23_29 -> m23_30  [color=red, key=0, style=solid];
m23_29 -> m23_32  [color=red, key=2, style=dotted];
m23_29 -> m23_33  [color=red, key=2, style=dotted];
m23_30 -> m23_31  [color=red, key=0, style=solid];
m23_30 -> m23_12  [color=red, key=2, style=dotted];
m23_30 -> m23_34  [color=red, key=2, style=dotted];
m23_30 -> m23_33  [color=red, key=2, style=dotted];
m23_31 -> m23_28  [color=blue, key=0, style=bold];
m23_9 -> m23_10  [color=red, key=0, style=solid];
m23_9 -> m23_12  [color=red, key=2, style=dotted];
m23_9 -> n36  [color=red, key=2, style=dotted];
m23_9 -> m23_14  [color=red, key=2, style=dotted];
m23_7 -> m23_8  [color=red, key=0, style=solid];
m23_7 -> m23_9  [color=red, key=1, label=string, style=dashed];
m23_8 -> m23_9  [color=red, key=0, style=solid];
m23_8 -> m23_11  [color=red, key=2, style=dotted];
m23_10 -> m23_7  [color=blue, key=0, style=bold];
m23_25 -> m23_26  [color=red, key=0, style=solid];
m23_26 -> m23_27  [color=red, key=0, style=solid];
m23_26 -> m23_28  [color=red, key=2, style=dotted];
m23_27 -> m23_25  [color=blue, key=0, style=bold];
m23_43 -> m23_1  [color=red, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m23_43 -> m23_5  [color=red, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m23_43 -> m23_21  [color=red, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m23_43 -> m23_26  [color=red, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m23_43 -> m23_36  [color=red, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m24_137 -> m24_138  [color=red, key=0, style=solid];
m24_138 -> m24_139  [color=red, key=0, style=solid];
m24_138 -> m24_146  [color=red, key=2, style=dotted];
m24_138 -> m24_144  [color=red, key=1, label=component, style=dashed];
m24_139 -> m24_140  [color=red, key=0, style=solid];
m24_139 -> m24_147  [color=red, key=2, style=dotted];
m24_139 -> m24_142  [color=red, key=1, label=supervisor, style=dashed];
m24_144 -> m24_145  [color=red, key=0, style=solid];
m24_144 -> m24_112  [color=red, key=2, style=dotted];
m24_140 -> m24_141  [color=red, key=0, style=solid];
m24_140 -> m24_57  [color=red, key=2, style=dotted];
m24_142 -> m24_143  [color=red, key=0, style=solid];
m24_142 -> m24_40  [color=red, key=2, style=dotted];
m24_141 -> m24_142  [color=red, key=0, style=solid];
m24_141 -> m24_91  [color=red, key=2, style=dotted];
m24_143 -> m24_144  [color=red, key=0, style=solid];
m24_143 -> m24_91  [color=red, key=2, style=dotted];
m24_145 -> m24_137  [color=blue, key=0, style=bold];
m24_166 -> m24_167  [color=red, key=0, style=solid];
m24_167 -> m24_168  [color=red, key=0, style=solid];
m24_168 -> m24_166  [color=blue, key=0, style=bold];
m24_70 -> m24_71  [color=red, key=0, style=solid];
m24_71 -> m24_72  [color=red, key=0, style=solid];
m24_71 -> m24_73  [color=red, key=1, label=timesExecuted, style=dashed];
m24_71 -> m24_71  [color=red, key=3, label="Local variable int timesExecuted", style=bold];
m24_72 -> m24_73  [color=red, key=0, style=solid];
m24_72 -> m24_37  [color=red, key=2, style=dotted];
m24_72 -> m24_74  [color=red, key=1, label=supervisor, style=dashed];
m24_72 -> m24_75  [color=red, key=1, label=supervisor, style=dashed];
m24_73 -> m24_74  [color=red, key=0, style=solid];
m24_73 -> m24_81  [color=red, key=2, style=dotted];
m24_73 -> m24_82  [color=red, key=2, style=dotted];
m24_73 -> m24_84  [color=red, key=1, label="lambda expression", style=dashed];
m24_73 -> m24_87  [color=red, key=1, label="lambda expression", style=dashed];
m24_73 -> m24_88  [color=red, key=1, label=timesExecuted, style=dashed];
m24_74 -> m24_75  [color=red, key=0, style=solid];
m24_74 -> m24_57  [color=red, key=2, style=dotted];
m24_75 -> m24_76  [color=red, key=0, style=solid];
m24_75 -> m24_83  [color=red, key=2, style=dotted];
m24_76 -> m24_77  [color=red, key=0, style=solid];
m24_76 -> m24_38  [color=red, key=2, style=dotted];
m24_76 -> m24_39  [color=red, key=2, style=dotted];
m24_77 -> m24_78  [color=red, key=0, style=solid];
m24_77 -> m24_79  [color=red, key=1, label=timesExecuted, style=dashed];
m24_78 -> m24_79  [color=red, key=0, style=solid];
m24_78 -> m24_38  [color=red, key=2, style=dotted];
m24_78 -> m24_39  [color=red, key=2, style=dotted];
m24_79 -> m24_80  [color=red, key=0, style=solid];
m24_79 -> n10  [color=red, key=2, style=dotted];
m24_80 -> m24_70  [color=blue, key=0, style=bold];
m24_24 -> m24_25  [color=red, key=0, style=solid];
m24_25 -> m24_26  [color=red, key=0, style=solid];
m24_25 -> m24_27  [color=red, key=2, style=dotted];
m24_25 -> m24_28  [color=red, key=1, label="lambda expression", style=dashed];
m24_26 -> m24_24  [color=blue, key=0, style=bold];
m24_126 -> m24_127  [color=red, key=0, style=solid];
m24_127 -> m24_128  [color=red, key=0, style=solid];
m24_127 -> m24_37  [color=red, key=2, style=dotted];
m24_127 -> m24_129  [color=red, key=1, label=supervisor, style=dashed];
m24_128 -> m24_129  [color=red, key=0, style=solid];
m24_128 -> m24_57  [color=red, key=2, style=dotted];
m24_129 -> m24_130  [color=red, key=0, style=solid];
m24_129 -> m24_27  [color=red, key=2, style=dotted];
m24_130 -> m24_126  [color=blue, key=0, style=bold];
m24_37 -> m24_153  [color=red, key=0, style=solid];
m24_153 -> m24_154  [color=red, key=0, style=solid];
m24_153 -> m24_81  [color=red, key=2, style=dotted];
m24_153 -> m24_82  [color=red, key=2, style=dotted];
m24_153 -> m24_156  [color=red, key=1, label="lambda expression", style=dashed];
m24_153 -> m24_159  [color=red, key=1, label="lambda expression", style=dashed];
m24_154 -> m24_155  [color=red, key=0, style=solid];
m24_154 -> m24_23  [color=red, key=2, style=dotted];
m24_155 -> m24_37  [color=blue, key=0, style=bold];
m24_100 -> m24_101  [color=red, key=0, style=solid];
m24_101 -> m24_102  [color=red, key=0, style=solid];
m24_101 -> m24_103  [color=red, key=1, label=timesExecuted, style=dashed];
m24_101 -> m24_71  [color=red, key=3, label="Local variable int timesExecuted", style=bold];
m24_102 -> m24_103  [color=red, key=0, style=solid];
m24_102 -> m24_37  [color=red, key=2, style=dotted];
m24_102 -> m24_104  [color=red, key=1, label=supervisor, style=dashed];
m24_102 -> m24_105  [color=red, key=1, label=supervisor, style=dashed];
m24_102 -> m24_108  [color=red, key=1, label=supervisor, style=dashed];
m24_103 -> m24_104  [color=red, key=0, style=solid];
m24_103 -> m24_81  [color=red, key=2, style=dotted];
m24_103 -> m24_82  [color=red, key=2, style=dotted];
m24_103 -> m24_113  [color=red, key=1, label="lambda expression", style=dashed];
m24_103 -> m24_116  [color=red, key=1, label="lambda expression", style=dashed];
m24_103 -> m24_117  [color=red, key=1, label=timesExecuted, style=dashed];
m24_104 -> m24_105  [color=red, key=0, style=solid];
m24_104 -> m24_57  [color=red, key=2, style=dotted];
m24_105 -> m24_106  [color=red, key=0, style=solid];
m24_105 -> m24_83  [color=red, key=2, style=dotted];
m24_108 -> m24_109  [color=red, key=0, style=solid];
m24_108 -> m24_57  [color=red, key=2, style=dotted];
m24_106 -> m24_107  [color=red, key=0, style=solid];
m24_106 -> m24_38  [color=red, key=2, style=dotted];
m24_106 -> m24_39  [color=red, key=2, style=dotted];
m24_107 -> m24_108  [color=red, key=0, style=solid];
m24_107 -> m24_110  [color=red, key=1, label=timesExecuted, style=dashed];
m24_110 -> m24_111  [color=red, key=0, style=solid];
m24_110 -> m24_112  [color=red, key=2, style=dotted];
m24_109 -> m24_110  [color=red, key=0, style=solid];
m24_109 -> m24_38  [color=red, key=2, style=dotted];
m24_109 -> m24_39  [color=red, key=2, style=dotted];
m24_111 -> m24_100  [color=blue, key=0, style=bold];
m24_148 -> m24_149  [color=red, key=0, style=solid];
m24_149 -> m24_150  [color=red, key=0, style=solid];
m24_149 -> m24_37  [color=red, key=2, style=dotted];
m24_150 -> m24_151  [color=red, key=0, style=solid];
m24_150 -> m24_152  [color=red, key=2, style=dotted];
m24_151 -> m24_148  [color=blue, key=0, style=bold];
m24_31 -> m24_32  [color=red, key=0, style=solid];
m24_32 -> m24_33  [color=red, key=0, style=solid];
m24_32 -> m24_37  [color=red, key=2, style=dotted];
m24_32 -> m24_34  [color=red, key=1, label=supervisor, style=dashed];
m24_33 -> m24_34  [color=red, key=0, style=solid];
m24_33 -> m24_38  [color=red, key=2, style=dotted];
m24_33 -> m24_39  [color=red, key=2, style=dotted];
m24_34 -> m24_35  [color=red, key=0, style=solid];
m24_34 -> m24_40  [color=red, key=2, style=dotted];
m24_35 -> m24_36  [color=red, key=0, style=solid];
m24_35 -> m24_41  [color=red, key=2, style=dotted];
m24_35 -> m24_42  [color=red, key=1, label="lambda expression", style=dashed];
m24_36 -> m24_31  [color=blue, key=0, style=bold];
m24_46 -> m24_47  [color=red, key=0, style=solid];
m24_47 -> m24_48  [color=red, key=0, style=solid];
m24_47 -> m24_37  [color=red, key=2, style=dotted];
m24_47 -> m24_49  [color=red, key=1, label=supervisor, style=dashed];
m24_48 -> m24_49  [color=red, key=0, style=solid];
m24_48 -> m24_40  [color=red, key=2, style=dotted];
m24_49 -> m24_50  [color=red, key=0, style=solid];
m24_49 -> m24_27  [color=red, key=2, style=dotted];
m24_50 -> m24_46  [color=blue, key=0, style=bold];
m24_62 -> m24_63  [color=red, key=0, style=solid];
m24_63 -> m24_64  [color=red, key=0, style=solid];
m24_63 -> m24_37  [color=red, key=2, style=dotted];
m24_63 -> m24_65  [color=red, key=1, label=supervisor, style=dashed];
m24_63 -> m24_68  [color=red, key=1, label=supervisor, style=dashed];
m24_64 -> m24_65  [color=red, key=0, style=solid];
m24_64 -> m24_40  [color=red, key=2, style=dotted];
m24_65 -> m24_66  [color=red, key=0, style=solid];
m24_65 -> m24_10  [color=red, key=2, style=dotted];
m24_65 -> m24_67  [color=red, key=1, label="lambda expression", style=dashed];
m24_66 -> m24_62  [color=blue, key=0, style=bold];
m24_162 -> m24_163  [color=red, key=0, style=solid];
m24_163 -> m24_164  [color=red, key=0, style=solid];
m24_163 -> m24_165  [color=red, key=2, style=dotted];
m24_164 -> m24_162  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [color=red, key=0, style=solid];
m24_1 -> m24_2  [color=red, key=0, style=solid];
m24_1 -> m24_4  [color=red, key=2, style=dotted];
m24_2 -> m24_3  [color=red, key=0, style=solid];
m24_2 -> m24_5  [color=red, key=2, style=dotted];
m24_3 -> m24_0  [color=blue, key=0, style=bold];
m24_159 -> m24_160  [color=red, key=0, style=solid];
m24_12 -> m24_13  [color=red, key=0, style=solid];
m24_13 -> m24_14  [color=red, key=0, style=solid];
m24_13 -> m24_15  [color=red, key=2, style=dotted];
m24_14 -> m24_12  [color=blue, key=0, style=bold];
m24_20 -> m24_21  [color=red, key=0, style=solid];
m24_21 -> m24_22  [color=red, key=0, style=solid];
m24_21 -> m24_23  [color=red, key=2, style=dotted];
m24_22 -> m24_20  [color=blue, key=0, style=bold];
m24_28 -> m24_29  [color=red, key=0, style=solid];
m24_29 -> m24_30  [color=red, key=0, style=solid];
m24_29 -> m24_23  [color=red, key=2, style=dotted];
m24_30 -> m24_28  [color=blue, key=0, style=bold];
m24_42 -> m24_43  [color=red, key=0, style=solid];
m24_43 -> m24_44  [color=red, key=0, style=solid];
m24_43 -> m24_10  [color=red, key=2, style=dotted];
m24_43 -> m24_45  [color=red, key=2, style=dotted];
m24_44 -> m24_42  [color=blue, key=0, style=bold];
m24_59 -> m24_60  [color=red, key=0, style=solid];
m24_60 -> m24_61  [color=red, key=0, style=solid];
m24_60 -> m24_10  [color=red, key=2, style=dotted];
m24_60 -> m24_45  [color=red, key=2, style=dotted];
m24_61 -> m24_59  [color=blue, key=0, style=bold];
m24_68 -> m24_69  [color=red, key=0, style=solid];
m24_68 -> m24_57  [color=red, key=2, style=dotted];
m24_67 -> m24_68  [color=red, key=0, style=solid];
m24_69 -> m24_67  [color=blue, key=0, style=bold];
m24_84 -> m24_85  [color=red, key=0, style=solid];
m24_87 -> m24_88  [color=red, key=0, style=solid];
m24_88 -> m24_89  [color=red, key=0, style=solid];
m24_88 -> m24_88  [color=red, key=1, label=timesExecuted, style=dashed];
m24_85 -> m24_86  [color=red, key=0, style=solid];
m24_85 -> m24_10  [color=red, key=2, style=dotted];
m24_85 -> m24_45  [color=red, key=2, style=dotted];
m24_86 -> m24_84  [color=blue, key=0, style=bold];
m24_89 -> m24_90  [color=red, key=0, style=solid];
m24_89 -> m24_91  [color=red, key=2, style=dotted];
m24_90 -> m24_87  [color=blue, key=0, style=bold];
m24_98 -> m24_99  [color=red, key=0, style=solid];
m24_98 -> m24_83  [color=red, key=2, style=dotted];
m24_97 -> m24_98  [color=red, key=0, style=solid];
m24_99 -> m24_97  [color=blue, key=0, style=bold];
m24_113 -> m24_114  [color=red, key=0, style=solid];
m24_116 -> m24_117  [color=red, key=0, style=solid];
m24_117 -> m24_118  [color=red, key=0, style=solid];
m24_117 -> m24_117  [color=red, key=1, label=timesExecuted, style=dashed];
m24_114 -> m24_115  [color=red, key=0, style=solid];
m24_114 -> m24_10  [color=red, key=2, style=dotted];
m24_114 -> m24_45  [color=red, key=2, style=dotted];
m24_115 -> m24_113  [color=blue, key=0, style=bold];
m24_118 -> m24_119  [color=red, key=0, style=solid];
m24_118 -> m24_91  [color=red, key=2, style=dotted];
m24_119 -> m24_116  [color=blue, key=0, style=bold];
m24_156 -> m24_157  [color=red, key=0, style=solid];
m24_157 -> m24_158  [color=red, key=0, style=solid];
m24_157 -> m24_10  [color=red, key=2, style=dotted];
m24_157 -> m24_45  [color=red, key=2, style=dotted];
m24_158 -> m24_156  [color=blue, key=0, style=bold];
m24_160 -> m24_161  [color=red, key=0, style=solid];
m24_160 -> m24_91  [color=red, key=2, style=dotted];
m24_161 -> m24_159  [color=blue, key=0, style=bold];
m24_16 -> m24_17  [color=red, key=0, style=solid];
m24_17 -> m24_18  [color=red, key=0, style=solid];
m24_17 -> m24_10  [color=red, key=2, style=dotted];
m24_17 -> m24_20  [color=red, key=1, label="lambda expression", style=dashed];
m24_18 -> m24_19  [color=red, key=0, style=solid];
m24_18 -> n10  [color=red, key=2, style=dotted];
m24_19 -> m24_16  [color=blue, key=0, style=bold];
m24_131 -> m24_132  [color=red, key=0, style=solid];
m24_132 -> m24_133  [color=red, key=0, style=solid];
m24_132 -> m24_37  [color=red, key=2, style=dotted];
m24_132 -> m24_134  [color=red, key=1, label=supervisor, style=dashed];
m24_132 -> m24_135  [color=red, key=1, label=supervisor, style=dashed];
m24_133 -> m24_134  [color=red, key=0, style=solid];
m24_133 -> m24_57  [color=red, key=2, style=dotted];
m24_134 -> m24_135  [color=red, key=0, style=solid];
m24_134 -> m24_83  [color=red, key=2, style=dotted];
m24_135 -> m24_136  [color=red, key=0, style=solid];
m24_135 -> m24_27  [color=red, key=2, style=dotted];
m24_136 -> m24_131  [color=blue, key=0, style=bold];
m24_51 -> m24_52  [color=red, key=0, style=solid];
m24_52 -> m24_53  [color=red, key=0, style=solid];
m24_52 -> m24_37  [color=red, key=2, style=dotted];
m24_53 -> m24_54  [color=red, key=0, style=solid];
m24_53 -> m24_57  [color=red, key=2, style=dotted];
m24_54 -> m24_55  [color=red, key=0, style=solid];
m24_54 -> m24_38  [color=red, key=2, style=dotted];
m24_54 -> m24_39  [color=red, key=2, style=dotted];
m24_55 -> m24_56  [color=red, key=0, style=solid];
m24_55 -> m24_58  [color=red, key=2, style=dotted];
m24_55 -> m24_41  [color=red, key=2, style=dotted];
m24_55 -> m24_59  [color=red, key=1, label="lambda expression", style=dashed];
m24_56 -> m24_51  [color=blue, key=0, style=bold];
m24_120 -> m24_121  [color=red, key=0, style=solid];
m24_121 -> m24_122  [color=red, key=0, style=solid];
m24_121 -> m24_37  [color=red, key=2, style=dotted];
m24_121 -> m24_123  [color=red, key=1, label=supervisor, style=dashed];
m24_121 -> m24_124  [color=red, key=1, label=supervisor, style=dashed];
m24_122 -> m24_123  [color=red, key=0, style=solid];
m24_122 -> m24_57  [color=red, key=2, style=dotted];
m24_123 -> m24_124  [color=red, key=0, style=solid];
m24_123 -> m24_83  [color=red, key=2, style=dotted];
m24_124 -> m24_125  [color=red, key=0, style=solid];
m24_124 -> m24_27  [color=red, key=2, style=dotted];
m24_125 -> m24_120  [color=blue, key=0, style=bold];
m24_6 -> m24_7  [color=red, key=0, style=solid];
m24_7 -> m24_8  [color=red, key=0, style=solid];
m24_7 -> m24_10  [color=red, key=2, style=dotted];
m24_7 -> m24_12  [color=red, key=1, label="lambda expression", style=dashed];
m24_8 -> m24_9  [color=red, key=0, style=solid];
m24_8 -> n10  [color=red, key=2, style=dotted];
m24_9 -> m24_6  [color=blue, key=0, style=bold];
m24_92 -> m24_93  [color=red, key=0, style=solid];
m24_93 -> m24_94  [color=red, key=0, style=solid];
m24_93 -> m24_37  [color=red, key=2, style=dotted];
m24_93 -> m24_95  [color=red, key=1, label=supervisor, style=dashed];
m24_93 -> m24_98  [color=red, key=1, label=supervisor, style=dashed];
m24_94 -> m24_95  [color=red, key=0, style=solid];
m24_94 -> m24_40  [color=red, key=2, style=dotted];
m24_95 -> m24_96  [color=red, key=0, style=solid];
m24_95 -> m24_10  [color=red, key=2, style=dotted];
m24_95 -> m24_97  [color=red, key=1, label="lambda expression", style=dashed];
m24_96 -> m24_92  [color=blue, key=0, style=bold];
m24_169 -> m24_1  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_2  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_17  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_21  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_25  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_29  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_32  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_35  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_47  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_52  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_55  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_63  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_72  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_73  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_93  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_102  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_103  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_121  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_127  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_132  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_139  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_149  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_150  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_153  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_169 -> m24_154  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts", style=dashed];
m24_170 -> m24_68  [color=red, key=1, label=supervisor, style=dashed];
m24_171 -> m24_88  [color=red, key=1, label=timesExecuted, style=dashed];
m24_172 -> m24_98  [color=red, key=1, label=supervisor, style=dashed];
m24_173 -> m24_117  [color=red, key=1, label=timesExecuted, style=dashed];
m24_174 -> m24_167  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerSupervisorFacts.DisposableComponent", style=dashed];
m25_0 -> m25_1  [color=red, key=0, style=solid];
m25_1 -> m25_2  [color=red, key=0, style=solid];
m25_1 -> m25_3  [color=red, key=2, style=dotted];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_4 -> m25_1  [color=red, key=1, label="Hangfire.Server.ServerSupervisorOptions", style=dashed];
m26_2 -> m26_3  [color=red, key=0, style=solid];
m26_2 -> m26_5  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m26_2 -> m26_7  [color=red, key=1, label="Hangfire.JobStorage", style=dashed];
m26_2 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m26_3 -> m26_4  [color=red, key=0, style=solid];
m26_3 -> m26_5  [color=red, key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [color=red, key=0, style=solid];
m26_7 -> m26_8  [color=red, key=0, style=solid];
m26_8 -> m26_9  [key=0, style=solid];
m26_4 -> m26_9  [color=red, key=0, style=solid];
m26_4 -> m26_10  [color=red, key=2, style=dotted];
m26_6 -> m26_9  [key=0, style=solid];
m26_6 -> m26_10  [key=2, style=dotted];
m26_9 -> m26_2  [color=blue, key=0, style=bold];
m26_23 -> m26_24  [key=0, style=solid];
m26_24 -> m26_25  [key=0, style=solid];
m26_25 -> m26_23  [color=blue, key=0, style=bold];
m26_11 -> m26_12  [color=red, key=0, style=solid];
m26_11 -> m26_16  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_12 -> m26_13  [color=red, key=0, style=solid];
m26_12 -> m26_18  [color=red, key=2, style=dotted];
m26_16 -> m26_17  [color=red, key=0, style=solid];
m26_16 -> m26_22  [color=red, key=2, style=dotted];
m26_16 -> m26_16  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_19  [key=2, style=dotted];
m26_13 -> m26_15  [color=darkseagreen4, key=1, label=serversRemoved, style=dashed];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_16  [color=red, key=0, style=solid];
m26_15 -> m26_16  [color=red, key=0, style=solid];
m26_15 -> m26_20  [key=2, style=dotted];
m26_15 -> d19  [key=2, style=dotted];
m26_17 -> m26_11  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [color=blue, key=0, style=bold];
m26_26 -> m26_7  [color=red, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_8  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_12  [color=red, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_13  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m26_26 -> m26_16  [color=red, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_3 -> m27_2  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerProcess", style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=0, style=solid];
m28_3 -> m28_4  [key=0, style=solid];
m28_2 -> m28_8  [key=0, style=solid];
m28_2 -> d18  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_10  [key=2, style=dotted];
m28_4 -> m28_11  [key=2, style=dotted];
m28_5 -> m28_6  [color=red, key=0, style=solid];
m28_6 -> m28_7  [color=red, key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_8 -> m28_0  [color=blue, key=0, style=bold];
m28_30 -> m28_37  [key=0, style=solid];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_40  [key=0, style=solid];
m28_37 -> m28_42  [key=0, style=solid];
m28_38 -> m28_39  [color=red, key=0, style=solid];
m28_40 -> m28_41  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_39 -> m28_44  [color=red, key=0, style=solid];
m28_41 -> m28_44  [key=0, style=solid];
m28_43 -> m28_44  [key=0, style=solid];
m28_45 -> m28_44  [key=0, style=solid];
m28_44 -> m28_30  [color=blue, key=0, style=bold];
m28_12 -> m28_13  [color=red, key=0, style=solid];
m28_12 -> m28_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m28_12 -> m28_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m28_13 -> m28_14  [color=red, key=0, style=solid];
m28_13 -> m28_20  [color=red, key=1, label=i, style=dashed];
m28_13 -> m28_22  [color=red, key=1, label=i, style=dashed];
m28_13 -> m28_23  [color=red, key=1, label=i, style=dashed];
m28_13 -> m28_24  [color=red, key=1, label=i, style=dashed];
m28_13 -> m28_34  [color=red, key=1, label=i, style=dashed];
m28_13 -> m28_26  [color=red, key=1, label=i, style=dashed];
m28_15 -> m28_16  [color=red, key=0, style=solid];
m28_15 -> m28_28  [key=2, style=dotted];
m28_25 -> m28_26  [color=red, key=0, style=solid];
m28_25 -> m28_32  [key=2, style=dotted];
m28_14 -> m28_15  [color=red, key=0, style=solid];
m28_14 -> m28_27  [color=red, key=0, style=solid];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_22  [color=red, key=0, style=solid];
m28_22 -> m28_23  [color=red, key=0, style=solid];
m28_22 -> m28_29  [color=red, key=2, style=dotted];
m28_22 -> m28_24  [color=red, key=1, label=nextTry, style=dashed];
m28_22 -> m28_34  [color=red, key=1, label=nextTry, style=dashed];
m28_22 -> m28_25  [color=red, key=1, label=nextTry, style=dashed];
m28_23 -> m28_24  [color=red, key=0, style=solid];
m28_23 -> m28_30  [key=2, style=dotted];
m28_24 -> m28_25  [color=red, key=0, style=solid];
m28_24 -> m28_31  [color=red, key=2, style=dotted];
m28_24 -> m28_33  [color=red, key=1, label="lambda expression", style=dashed];
m28_26 -> m28_14  [color=red, key=0, style=solid];
m28_26 -> m28_26  [color=red, key=1, label=i, style=dashed];
m28_16 -> m28_27  [color=red, key=0, style=solid];
m28_17 -> m28_18  [color=red, key=0, style=solid];
m28_18 -> m28_27  [color=red, key=0, style=solid];
m28_19 -> m28_20  [key=0, style=solid];
m28_21 -> m28_27  [key=0, style=solid];
m28_27 -> m28_12  [color=blue, key=0, style=bold];
m28_46 -> m28_47  [key=0, style=solid];
m28_47 -> m28_48  [key=0, style=solid];
m28_47 -> m28_49  [key=2, style=dotted];
m28_48 -> m28_46  [color=blue, key=0, style=bold];
m28_33 -> m28_34  [color=red, key=0, style=solid];
m28_34 -> m28_35  [color=red, key=0, style=solid];
m28_34 -> m28_36  [color=red, key=2, style=dotted];
m28_35 -> m28_33  [color=blue, key=0, style=bold];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> m28_55  [key=2, style=dotted];
m28_51 -> m28_56  [key=2, style=dotted];
m28_51 -> m28_57  [key=2, style=dotted];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_58  [key=2, style=dotted];
m28_52 -> m28_59  [key=2, style=dotted];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_60  [key=2, style=dotted];
m28_53 -> m28_61  [key=2, style=dotted];
m28_54 -> m28_50  [color=blue, key=0, style=bold];
m28_62 -> m28_3  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_4  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_5  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_6  [color=red, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_7  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_14  [color=red, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_15  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_20  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_22  [color=red, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_24  [color=red, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_34  [color=red, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_47  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_62 -> m28_53  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m28_63 -> m28_34  [color=red, key=1, label=i, style=dashed];
m28_64 -> m28_34  [color=red, key=1, label=nextTry, style=dashed];
m29_6 -> m29_7  [key=0, style=solid];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_10  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m29_7 -> m29_19  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m29_8 -> m29_9  [key=0, style=solid];
m29_10 -> m29_11  [key=0, style=solid];
m29_10 -> m29_16  [key=2, style=dotted];
m29_10 -> m29_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_13  [key=0, style=solid];
m29_9 -> m29_15  [key=2, style=dotted];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_17  [key=2, style=dotted];
m29_11 -> m29_12  [key=0, style=solid];
m29_12 -> m29_13  [key=0, style=solid];
m29_14 -> m29_6  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=0, style=solid];
m29_3 -> m29_4  [key=0, style=solid];
m29_2 -> m29_4  [key=0, style=solid];
m29_2 -> d18  [key=2, style=dotted];
m29_4 -> m29_0  [color=blue, key=0, style=bold];
m29_38 -> m29_39  [key=0, style=solid];
m29_39 -> m29_40  [key=0, style=solid];
m29_39 -> m29_41  [key=2, style=dotted];
m29_40 -> m29_38  [color=blue, key=0, style=bold];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_27 -> m29_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_32  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_16  [key=2, style=dotted];
m29_29 -> m29_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_30 -> m29_27  [color=blue, key=0, style=bold];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_42 -> m29_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_43 -> m29_44  [key=0, style=solid];
m29_43 -> m29_47  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m29_44 -> m29_45  [key=0, style=solid];
m29_44 -> m29_16  [key=2, style=dotted];
m29_44 -> m29_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_45 -> m29_42  [color=blue, key=0, style=bold];
m29_16 -> m29_52  [key=0, style=solid];
m29_52 -> m29_53  [key=0, style=solid];
m29_52 -> m29_54  [key=2, style=dotted];
m29_53 -> m29_16  [color=blue, key=0, style=bold];
m29_46 -> m29_47  [key=0, style=solid];
m29_19 -> m29_20  [key=0, style=solid];
m29_19 -> m29_21  [key=2, style=dotted];
m29_19 -> m29_22  [key=2, style=dotted];
m29_19 -> m29_23  [key=2, style=dotted];
m29_19 -> m29_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_18 -> m29_19  [key=0, style=solid];
m29_20 -> m29_18  [color=blue, key=0, style=bold];
m29_24 -> m29_25  [key=0, style=solid];
m29_25 -> m29_26  [key=0, style=solid];
m29_26 -> m29_24  [color=blue, key=0, style=bold];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_34  [key=2, style=dotted];
m29_32 -> m29_23  [key=2, style=dotted];
m29_32 -> m29_22  [key=2, style=dotted];
m29_32 -> m29_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_31 -> m29_32  [key=0, style=solid];
m29_33 -> m29_31  [color=blue, key=0, style=bold];
m29_35 -> m29_36  [key=0, style=solid];
m29_36 -> m29_37  [key=0, style=solid];
m29_37 -> m29_35  [color=blue, key=0, style=bold];
m29_47 -> m29_48  [key=0, style=solid];
m29_47 -> m29_34  [key=2, style=dotted];
m29_47 -> m29_50  [key=2, style=dotted];
m29_48 -> m29_49  [key=0, style=solid];
m29_48 -> m29_51  [key=2, style=dotted];
m29_49 -> m29_46  [color=blue, key=0, style=bold];
m29_55 -> m29_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_55 -> m29_52  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m29_56 -> m29_19  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m29_57 -> m29_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_58 -> m29_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_59 -> m29_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_60 -> m29_32  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m29_61 -> m29_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_62 -> m29_47  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
}
