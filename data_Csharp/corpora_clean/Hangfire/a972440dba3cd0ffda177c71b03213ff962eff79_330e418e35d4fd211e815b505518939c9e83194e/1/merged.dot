digraph  {
n5 [label="Hangfire.Server.ServerWatchdogOptions", span=""];
n0 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()"];
n1 [label="ServerTimeout = TimeSpan.FromMinutes(5)", span="24-24", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()"];
n2 [label="CheckInterval = TimeSpan.FromMinutes(5)", span="25-25", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()"];
n4 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n3 [label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()"];
d49 [label="Release(_connection, _resource)", span="123-123", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0];
d97 [label="Hangfire.SqlServer.SqlServerDistributedLock", span=""];
d48 [label="_timer?.Dispose()", span="121-121", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d50 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="100-100", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d53 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="212-212", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d62 [label="var lockTimeout = (long) Math.Min(LockTimeout.TotalMilliseconds, timeout.TotalMilliseconds)", span="176-176", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d33 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="153-153", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d61 [label="var started = Stopwatch.StartNew()", span="165-165", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d76 [label="started.Elapsed < timeout", span="207-207", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d63 [label="var parameters = new DynamicParameters()", span="180-180", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d81 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)"];
d70 [label="connection.Execute(\r\n                    @''sp_getapplock'',\r\n                    parameters,\r\n                    commandTimeout: (int) (lockTimeout / 1000) + 5,\r\n                    commandType: CommandType.StoredProcedure)", span="188-192", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d64 [label="parameters.Add(''@Resource'', resource)", span="181-181", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d65 [label="parameters.Add(''@DbPrincipal'', ''public'')", span="182-182", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d83 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d69 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="186-186", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d71 [label="var lockResult = parameters.Get<int>(''@Result'')", span="194-194", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d58 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
d60 [label="throw new InvalidOperationException(''Connection must be open before acquiring a distributed lock.'');", span="162-162", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d59 [label="connection.State != ConnectionState.Open", span="155-155", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d78 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", span="153-153", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d79 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
d80 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()"];
d82 [label="Entry DynamicParameters.cstr", span="", cluster="DynamicParameters.cstr"];
d66 [label="parameters.Add(''@LockMode'', LockMode)", span="183-183", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d67 [label="parameters.Add(''@LockOwner'', LockOwner)", span="184-184", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d68 [label="parameters.Add(''@LockTimeout'', LockTimeout.TotalMilliseconds)", span="185-185", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)", color=green, community=0];
d88 [label="var parameters = new DynamicParameters()", span="214-214", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", color=green, community=0];
d89 [label="parameters.Add(''@Resource'', resource)", span="215-215", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d90 [label="parameters.Add(''@LockOwner'', LockOwner)", span="216-216", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d91 [label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="217-217", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d92 [label="connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="219-222", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d93 [label="var releaseResult = parameters.Get<int>(''@Result'')", span="224-224", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d13 [label="_storage = storage", span="70-70", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d14 [label="_resource = resource", span="71-71", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d15 [label="!AcquiredLocks.Value.ContainsKey(_resource) || AcquiredLocks.Value[_resource] == 0", span="73-73", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d16 [label="_connection = storage.CreateAndOpenConnection()", span="75-75", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d17 [label="Acquire(_connection, _resource, timeout)", span="79-79", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d19 [label="storage.ReleaseConnection(_connection)", span="83-83", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d21 [label="!_storage.IsExistingConnection(_connection)", span="87-87", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d22 [label="_timer = new Timer(ExecuteKeepAliveQuery, null, KeepAliveInterval, KeepAliveInterval)", span="89-89", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d23 [label="AcquiredLocks.Value[_resource] = 1", span="92-92", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d24 [label="AcquiredLocks.Value[_resource]++", span="96-96", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d38 [label=_completed, span="102-102", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d40 [label="_completed = true", span="104-104", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d41 [label="!AcquiredLocks.Value.ContainsKey(_resource)", span="106-106", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d43 [label="AcquiredLocks.Value[_resource]--", span="108-108", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d44 [label="AcquiredLocks.Value[_resource] != 0", span="110-110", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d46 [label=_lockObject, span="112-112", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d47 [label="AcquiredLocks.Value.Remove(_resource)", span="119-119", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d55 [label=_lockObject, span="135-135", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d56 [label="_connection?.Execute(''SELECT 1;'')", span="139-139", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d52 [label="Entry System.Threading.Timer.Dispose()", span="0-0", cluster="System.Threading.Timer.Dispose()"];
d39 [label="return;", span="102-102", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d42 [label="return;", span="106-106", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d45 [label="return;", span="110-110", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d37 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="100-100", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()"];
d96 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)", span="212-212", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d95 [label="throw new SqlServerDistributedLockException(\r\n                    $''Could not release a lock on the resource '{resource}': Server returned the '{releaseResult}' error.'');", span="228-229", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d75 [label="throw new SqlServerDistributedLockException(\r\n                        $''Could not place a lock on the resource '{resource}': {(LockErrorMessages.ContainsKey(lockResult) ? LockErrorMessages[lockResult] : $''Server returned the '{lockResult}' error.'')}.'');", span="204-205", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d77 [label="throw new DistributedLockTimeoutException(resource);", span="209-209", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d4 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="61-61", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d74 [label="lockResult == -999", span="202-202", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d72 [label="lockResult >= 0", span="196-196", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d84 [label="Entry Unk.>", span="", cluster="Unk.>"];
d73 [label="return;", span="199-199", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Acquire(IDbConnection, string, System.TimeSpan)"];
d94 [label="releaseResult < 0", span="226-226", cluster="Hangfire.SqlServer.SqlServerDistributedLock.Release(IDbConnection, string)"];
d11 [label="timeout.TotalMilliseconds > Int32.MaxValue", span="67-67", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d31 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
d32 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()"];
d18 [label=Exception, span="81-81", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d20 [label="throw;", span="84-84", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d34 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)"];
d35 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="244-244", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)"];
d36 [label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0", cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)"];
d25 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="61-61", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)"];
d54 [label="Entry Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="133-133", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d57 [label="Exit Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)", span="133-133", cluster="Hangfire.SqlServer.SqlServerDistributedLock.ExecuteKeepAliveQuery(object)"];
d85 [label="Entry Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="22-22", cluster="Hangfire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)"];
d86 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey"];
d87 [label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6", cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)"];
d5 [label="storage == null", span="63-63", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d6 [label="throw new ArgumentNullException(nameof(storage));", span="63-63", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d7 [label="String.IsNullOrEmpty(resource)", span="64-64", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d8 [label="throw new ArgumentNullException(nameof(resource));", span="64-64", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d9 [label="timeout.TotalSeconds + CommandTimeoutAdditionSeconds > Int32.MaxValue", span="65-65", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d12 [label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {(int)TimeSpan.FromMilliseconds(Int32.MaxValue).TotalSeconds} seconds'', nameof(timeout));", span="67-68", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d10 [label="throw new ArgumentException(\r\n                $''The timeout specified is too large. Please supply a timeout equal to or less than {Int32.MaxValue - CommandTimeoutAdditionSeconds} seconds'', nameof(timeout));", span="65-66", cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)"];
d26 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d27 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
d28 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d29 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d30 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)"];
n5 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
n5 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
d49 -> d50  [key=0, style=solid, color=green];
d49 -> d53  [key=2, style=dotted, color=green];
d97 -> d49  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d97 -> d56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerDistributedLock"];
d48 -> d49  [key=0, style=solid, color=green];
d48 -> d52  [key=2, style=dotted];
d50 -> d37  [key=0, style=bold, color=blue];
d53 -> d88  [key=0, style=solid, color=green];
d53 -> d89  [key=1, style=dashed, color=darkseagreen4, label=string];
d53 -> d92  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
d53 -> d95  [key=1, style=dashed, color=darkseagreen4, label=string];
d62 -> d62  [key=1, style=dashed, color=green, label="System.TimeSpan"];
d62 -> d63  [key=0, style=solid, color=green];
d62 -> d81  [key=2, style=dotted, color=green];
d62 -> d70  [key=1, style=dashed, color=green, label=lockTimeout];
d62 -> d76  [key=1, style=dashed, color=green, label="System.TimeSpan"];
d33 -> d62  [key=1, style=dashed, color=green, label="System.TimeSpan"];
d33 -> d64  [key=1, style=dashed, color=green, label=string];
d33 -> d70  [key=1, style=dashed, color=green, label=IDbConnection];
d33 -> d59  [key=0, style=solid];
d33 -> d75  [key=1, style=dashed, color=darkseagreen4, label=string];
d33 -> d77  [key=1, style=dashed, color=darkseagreen4, label=string];
d33 -> d4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan timeout"];
d61 -> d62  [key=0, style=solid, color=green];
d61 -> d80  [key=2, style=dotted, color=green];
d61 -> d76  [key=1, style=dashed, color=green, label=started];
d76 -> d62  [key=0, style=solid, color=green];
d76 -> d77  [key=0, style=solid];
d63 -> d64  [key=0, style=solid, color=green];
d63 -> d70  [key=1, style=dashed, color=green, label=parameters];
d63 -> d82  [key=2, style=dotted, color=green];
d63 -> d65  [key=1, style=dashed, color=green, label=parameters];
d63 -> d66  [key=1, style=dashed, color=green, label=parameters];
d63 -> d67  [key=1, style=dashed, color=green, label=parameters];
d63 -> d68  [key=1, style=dashed, color=green, label=parameters];
d63 -> d69  [key=1, style=dashed, color=green, label=parameters];
d63 -> d71  [key=1, style=dashed, color=green, label=parameters];
d70 -> d71  [key=0, style=solid, color=green];
d70 -> d58  [key=2, style=dotted, color=green];
d64 -> d65  [key=0, style=solid, color=green];
d64 -> d83  [key=2, style=dotted, color=green];
d65 -> d66  [key=0, style=solid, color=green];
d65 -> d83  [key=2, style=dotted, color=green];
d69 -> d70  [key=0, style=solid, color=green];
d69 -> d83  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d71 -> d84  [key=2, style=dotted];
d71 -> d74  [key=1, style=dashed, color=darkseagreen4, label=lockResult];
d71 -> d75  [key=1, style=dashed, color=darkseagreen4, label=lockResult];
d60 -> d78  [key=0, style=solid, color=green];
d60 -> d79  [key=2, style=dotted, color=green];
d59 -> d60  [key=0, style=solid, color=green];
d59 -> d61  [key=0, style=solid, color=green];
d78 -> d33  [key=0, style=bold, color=blue];
d66 -> d67  [key=0, style=solid, color=green];
d66 -> d83  [key=2, style=dotted, color=green];
d67 -> d68  [key=0, style=solid, color=green];
d67 -> d83  [key=2, style=dotted, color=green];
d68 -> d69  [key=0, style=solid, color=green];
d68 -> d83  [key=2, style=dotted, color=green];
d88 -> d89  [key=0, style=solid, color=green];
d88 -> d82  [key=2, style=dotted, color=green];
d88 -> d90  [key=1, style=dashed, color=green, label=parameters];
d88 -> d91  [key=1, style=dashed, color=green, label=parameters];
d88 -> d92  [key=1, style=dashed, color=green, label=parameters];
d88 -> d93  [key=1, style=dashed, color=green, label=parameters];
d89 -> d83  [key=2, style=dotted];
d89 -> d90  [key=0, style=solid];
d90 -> d83  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d91 -> d83  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d92 -> d58  [key=2, style=dotted];
d92 -> d93  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d93 -> d84  [key=2, style=dotted];
d93 -> d95  [key=1, style=dashed, color=darkseagreen4, label=releaseResult];
d13 -> d14  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d15 -> d24  [key=0, style=solid];
d15 -> d31  [key=2, style=dotted];
d16 -> d17  [key=0, style=solid];
d16 -> d32  [key=2, style=dotted];
d17 -> d33  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d21  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d19 -> d34  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d23  [key=0, style=solid];
d21 -> d35  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d36  [key=2, style=dotted];
d23 -> d25  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d40  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d41 -> d42  [key=0, style=solid];
d41 -> d43  [key=0, style=solid];
d41 -> d31  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d44 -> d45  [key=0, style=solid];
d44 -> d46  [key=0, style=solid];
d46 -> d47  [key=0, style=solid];
d47 -> d48  [key=0, style=solid];
d47 -> d51  [key=2, style=dotted];
d55 -> d56  [key=0, style=solid];
d56 -> d58  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d39 -> d50  [key=0, style=solid];
d42 -> d50  [key=0, style=solid];
d45 -> d50  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d96 -> d53  [key=0, style=bold, color=blue];
d95 -> d96  [key=0, style=solid];
d95 -> d85  [key=2, style=dotted];
d75 -> d78  [key=0, style=solid];
d75 -> d85  [key=2, style=dotted];
d75 -> d86  [key=2, style=dotted];
d77 -> d78  [key=0, style=solid];
d77 -> d87  [key=2, style=dotted];
d4 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d14  [key=1, style=dashed, color=darkseagreen4, label=string];
d4 -> d16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
d4 -> d7  [key=1, style=dashed, color=darkseagreen4, label=string];
d4 -> d8  [key=1, style=dashed, color=darkseagreen4, label=string];
d4 -> d9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d74 -> d76  [key=0, style=solid];
d74 -> d75  [key=0, style=solid];
d72 -> d74  [key=0, style=solid];
d72 -> d73  [key=0, style=solid];
d73 -> d78  [key=0, style=solid];
d94 -> d96  [key=0, style=solid];
d94 -> d95  [key=0, style=solid];
d11 -> d13  [key=0, style=solid];
d11 -> d17  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d11 -> d11  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d11 -> d12  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d20 -> d25  [key=0, style=solid];
d25 -> d4  [key=0, style=bold, color=blue];
d54 -> d55  [key=0, style=solid];
d57 -> d54  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid];
d5 -> d7  [key=0, style=solid];
d6 -> d25  [key=0, style=solid];
d6 -> d26  [key=2, style=dotted];
d6 -> d27  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=0, style=solid];
d7 -> d28  [key=2, style=dotted];
d8 -> d25  [key=0, style=solid];
d8 -> d26  [key=2, style=dotted];
d8 -> d27  [key=2, style=dotted];
d9 -> d11  [key=0, style=solid];
d9 -> d9  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d9 -> d10  [key=0, style=solid];
d12 -> d25  [key=0, style=solid];
d12 -> d29  [key=2, style=dotted];
d12 -> d30  [key=2, style=dotted];
d12 -> d27  [key=2, style=dotted];
d10 -> d25  [key=0, style=solid];
d10 -> d29  [key=2, style=dotted];
d10 -> d27  [key=2, style=dotted];
}
