digraph  {
n0 [label="Entry HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7", cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)"];
n1 [label="Exit HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7", cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)"];
d21 [label="_channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", color=green, community=0];
d31 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", span=""];
d20 [label="_channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()"];
d22 [label="_completed = true", span="40-40", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()"];
d25 [label="Entry Unk.Close", span="", cluster="Unk.Close"];
d3 [label="_message = message", span="19-19", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d4 [label="_channel = channel", span="20-20", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d5 [label="JobId = Encoding.UTF8.GetString(_message.Body)", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d10 [label=_completed, span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()"];
d12 [label="_channel.BasicAck(_message.DeliveryTag, false)", span="30-30", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()"];
d13 [label="_completed = true", span="31-31", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()"];
d18 [label=_completed, span="36-36", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()"];
d27 [label="!_completed && !_disposed", span="45-45", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()"];
d28 [label="Requeue()", span="47-47", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()"];
d29 [label="_disposed = true", span="50-50", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()"];
d24 [label="Entry Unk.BasicNack", span="", cluster="Unk.BasicNack"];
d23 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()"];
d0 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d1 [label="message == null", span="17-17", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d6 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d8 [label="Entry Unk.GetString", span="", cluster="Unk.GetString"];
d9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()"];
d11 [label="throw new InvalidOperationException(''Job already completed'');", span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()"];
d16 [label="Entry Unk.BasicAck", span="", cluster="Unk.BasicAck"];
d14 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()"];
d17 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()"];
d19 [label="throw new InvalidOperationException(''Job already completed'');", span="36-36", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()"];
d26 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()"];
d30 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()"];
d2 [label="throw new ArgumentNullException(''message'');", span="17-17", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)"];
d15 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
d7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d25  [key=2, style=dotted, color=green];
d31 -> d21  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d31 -> d29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d24  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d8  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d12 -> d16  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d18 -> d20  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d27 -> d29  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d17  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d23 -> d17  [key=0, style=bold, color=blue];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label=BasicDeliverEventArgs];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label="ref IModel"];
d0 -> d1  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d6 -> d0  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid];
d11 -> d14  [key=0, style=solid];
d11 -> d15  [key=2, style=dotted];
d14 -> d9  [key=0, style=bold, color=blue];
d17 -> d18  [key=0, style=solid];
d19 -> d23  [key=0, style=solid];
d19 -> d15  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d30 -> d26  [key=0, style=bold, color=blue];
d2 -> d6  [key=0, style=solid];
d2 -> d7  [key=2, style=dotted];
}
