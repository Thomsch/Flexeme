digraph  {
m0_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="MessageQueueExtensions.cs"];
m0_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="MessageQueueExtensions.cs"];
m0_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="MessageQueueExtensions.cs"];
m0_9 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="MessageQueueExtensions.cs"];
m0_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="MessageQueueExtensions.cs"];
m0_12 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="MessageQueueExtensions.cs"];
m0_65 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_67 [label="this.ScenarioSetup(scenarioInfo)", span="158-158", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_66 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job by the \'checked\' flag in the \'Fetched\' state should not be re-queue'' +\r\n                    ''d'', new string[] {\r\n                        ''checkpoint-2''})", span="154-156", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_68 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="160-160", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_76 [label="this.ScenarioCleanup()", span="176-176", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_71 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="166-166", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_72 [label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="168-168", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_69 [label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="162-162", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_70 [label="testRunner.And(''it was fetched a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_73 [label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="170-170", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_74 [label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="172-172", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_75 [label="testRunner.And(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_77 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", span="152-152", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobByTheCheckedFlagInTheFetchedStateShouldNotBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_53 [label="Entry Unk.And", span="", cluster="Unk.And", file="MessageQueueExtensions.cs"];
m0_112 [label="Entry Unk.But", span="", cluster="Unk.But", file="MessageQueueExtensions.cs"];
m0_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="MessageQueueExtensions.cs"];
m0_78 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_88 [label="this.ScenarioCleanup()", span="205-205", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_79 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out jobs in the \'Fetched\' state should be re-queued'', new string[] {\r\n                        ''checkpoint-2''})", span="186-187", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_80 [label="this.ScenarioSetup(scenarioInfo)", span="189-189", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_81 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="191-191", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_83 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_84 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="197-197", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_82 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_85 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="199-199", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_86 [label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="201-201", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_87 [label="testRunner.And(''the job does not have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="203-203", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_89 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", span="184-184", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsInTheFetchedStateShouldBeRe_Queued()", file="MessageQueueExtensions.cs"];
m0_26 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="MessageQueueExtensions.cs"];
m0_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_28 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="MessageQueueExtensions.cs"];
m0_22 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="MessageQueueExtensions.cs"];
m0_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="MessageQueueExtensions.cs"];
m0_24 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="MessageQueueExtensions.cs"];
m0_0 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="MessageQueueExtensions.cs"];
m0_1 [label="Exit HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_2 [label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_3 [label="Exit HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33", cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_4 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="MessageQueueExtensions.cs"];
m0_14 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="MessageQueueExtensions.cs"];
m0_16 [label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="MessageQueueExtensions.cs"];
m0_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Re-queueing of timed out jobs''))", span="48-49", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="MessageQueueExtensions.cs"];
m0_17 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="MessageQueueExtensions.cs"];
m0_90 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_99 [label="this.ScenarioCleanup()", span="234-234", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_91 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job\'s state is changed to the Enqueued when the job is being timed out after proc'' +\r\n                    ''eeding to the Processing state'', new string[] {\r\n                        ''checkpoint-3''})", span="216-218", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_92 [label="this.ScenarioSetup(scenarioInfo)", span="220-220", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_93 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="222-222", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_96 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="228-228", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_97 [label="testRunner.Then(''the job moved to the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="230-230", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_94 [label="testRunner.And(''its state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="224-224", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_95 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="226-226", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_98 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="232-232", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_100 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="214-214", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="MessageQueueExtensions.cs"];
m0_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="MessageQueueExtensions.cs"];
m0_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="MessageQueueExtensions.cs"];
m0_40 [label="Entry Unk.When", span="", cluster="Unk.When", file="MessageQueueExtensions.cs"];
m0_122 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_130 [label="this.ScenarioCleanup()", span="307-307", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_123 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When the server could not find the job\'s type, the job is moved to the Failed sta'' +\r\n                    ''te'', ((string[])(null)))", span="292-293", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_124 [label="this.ScenarioSetup(scenarioInfo)", span="295-295", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_125 [label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="297-297", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_127 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="301-301", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_128 [label="testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="303-303", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_126 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="299-299", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_129 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="305-305", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_131 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="290-290", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_101 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_110 [label="this.ScenarioCleanup()", span="261-261", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_102 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job in the Succeeded state does not move to the Enqueued state'', new string[] {\r\n                        ''checkpoint-4''})", span="244-245", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_103 [label="this.ScenarioSetup(scenarioInfo)", span="247-247", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_104 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="249-249", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_107 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="255-255", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_108 [label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="257-257", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_105 [label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="251-251", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_106 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="253-253", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_109 [label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="259-259", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_111 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="242-242", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="MessageQueueExtensions.cs"];
m0_42 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="MessageQueueExtensions.cs"];
m0_43 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Non-timed out job in the \'Checked\' state should not be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="99-100", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_44 [label="this.ScenarioSetup(scenarioInfo)", span="102-102", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="MessageQueueExtensions.cs"];
m0_45 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="104-104", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_46 [label="testRunner.And(''it was checked a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_47 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_48 [label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="MessageQueueExtensions.cs"];
m0_49 [label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="112-112", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_50 [label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="114-114", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_51 [label="this.ScenarioCleanup()", span="116-116", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_52 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", span="97-97", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.Non_TimedOutJobInTheCheckedStateShouldNotBeRequeued()", file="MessageQueueExtensions.cs"];
m0_54 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="MessageQueueExtensions.cs"];
m0_55 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed job in the \'Checked\' state should be requeued'', new string[] {\r\n                        ''checkpoint-1-2''})", span="126-127", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_56 [label="this.ScenarioSetup(scenarioInfo)", span="129-129", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_57 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="131-131", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="MessageQueueExtensions.cs"];
m0_59 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_58 [label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="133-133", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="MessageQueueExtensions.cs"];
m0_60 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="MessageQueueExtensions.cs"];
m0_61 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="139-139", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_62 [label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_63 [label="this.ScenarioCleanup()", span="143-143", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_64 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", span="124-124", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.TimedJobInTheCheckedStateShouldBeRequeued()", file="MessageQueueExtensions.cs"];
m0_38 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="MessageQueueExtensions.cs"];
m0_30 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="MessageQueueExtensions.cs"];
m0_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''A job in the implicit \'Dequeued\' state moved to the \'Checked\' state'', new string[] {\r\n                        ''checkpoint-1-1''})", span="78-79", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_32 [label="this.ScenarioSetup(scenarioInfo)", span="81-81", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_33 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="83-83", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_34 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_35 [label="testRunner.Then(''it marks the job as \'checked\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_36 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_37 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", span="76-76", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.AJobInTheImplicitDequeuedStateMovedToTheCheckedState()", file="MessageQueueExtensions.cs"];
m0_41 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="MessageQueueExtensions.cs"];
m0_39 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="MessageQueueExtensions.cs"];
m0_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="MessageQueueExtensions.cs"];
m0_18 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="MessageQueueExtensions.cs"];
m0_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", color=green, community=0, file="MessageQueueExtensions.cs"];
m0_20 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="MessageQueueExtensions.cs"];
m0_132 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_141 [label="this.ScenarioCleanup()", span="332-332", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_133 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Succeeded job of non-existing type will not be moved to the failed state'', ((string[])(null)))", span="316-316", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_134 [label="this.ScenarioSetup(scenarioInfo)", span="318-318", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_135 [label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="320-320", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_138 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="326-326", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_139 [label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="328-328", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_136 [label="testRunner.And(''its state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="322-322", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_137 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="324-324", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_140 [label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="330-330", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_142 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="314-314", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="MessageQueueExtensions.cs"];
m0_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="MessageQueueExtensions.cs"];
m0_113 [label="Entry HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", span="268-268", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_120 [label="this.ScenarioCleanup()", span="282-282", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_114 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job is being enqueued on its actual queue after timing out'', ((string[])(null)))", span="270-270", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_115 [label="this.ScenarioSetup(scenarioInfo)", span="272-272", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_118 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="278-278", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_119 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="280-280", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_116 [label="testRunner.And(''a dequeued job from the \'test\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="274-274", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_117 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="276-276", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_121 [label="Exit HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", span="268-268", cluster="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItsActualQueueAfterTimingOut()", file="MessageQueueExtensions.cs"];
m0_143 [label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature", span="", file="MessageQueueExtensions.cs"];
m1_10 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="MsmqDtcTransaction.cs"];
m1_18 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="MsmqDtcTransaction.cs"];
m1_19 [label="_scope.Complete()", span="53-53", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_20 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Commit()", file="MsmqDtcTransaction.cs"];
m1_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="MsmqDtcTransaction.cs"];
m1_1 [label="_scope = new TransactionScope()", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_2 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.MsmqDtcTransaction()", file="MsmqDtcTransaction.cs"];
m1_17 [label="Entry Unk.Receive", span="", cluster="Unk.Receive", file="MsmqDtcTransaction.cs"];
m1_11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="MsmqDtcTransaction.cs"];
m1_12 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="MsmqDtcTransaction.cs"];
m1_13 [label="var message = queue.Receive(timeout, MessageQueueTransactionType.Automatic)", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_14 [label="_suppressedScope = new TransactionScope(TransactionScopeOption.Suppress)", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_15 [label="return message;", span="48-48", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_16 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", span="43-43", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Receive(MessageQueue, System.TimeSpan)", file="MsmqDtcTransaction.cs"];
m1_3 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="MsmqDtcTransaction.cs"];
m1_4 [label="Entry Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="MsmqDtcTransaction.cs"];
m1_5 [label="_suppressedScope != null", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_6 [label="_suppressedScope.Complete()", span="36-36", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_8 [label="_scope.Dispose()", span="40-40", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_7 [label="_suppressedScope.Dispose()", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", color=green, community=0, file="MsmqDtcTransaction.cs"];
m1_9 [label="Exit Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqDtcTransaction.Dispose()", file="MsmqDtcTransaction.cs"];
m1_23 [label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction", span="", file="MsmqDtcTransaction.cs"];
m2_8 [label="Entry Unk.End", span="", cluster="Unk.End", file="MsmqExtensions.cs"];
m2_10 [label="Assert.Equal(''connection'', exception.ParamName)", span="27-27", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="MsmqExtensions.cs"];
m2_9 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object))", span="24-25", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="MsmqExtensions.cs"];
m2_11 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="MsmqExtensions.cs"];
m2_0 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="MsmqExtensions.cs"];
m2_1 [label="_connection = new Mock<IStorageConnection>()", span="16-16", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="MsmqExtensions.cs"];
m2_2 [label="_backgroundJob = new BackgroundJobMock()", span="17-17", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="MsmqExtensions.cs"];
m2_3 [label="_cancellationToken = new Mock<IJobCancellationToken>()", span="18-18", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="MsmqExtensions.cs"];
m2_4 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="MsmqExtensions.cs"];
m2_5 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="MsmqExtensions.cs"];
m2_6 [label="Entry Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", span="9-9", cluster="Hangfire.Core.Tests.BackgroundJobMock.BackgroundJobMock()", file="MsmqExtensions.cs"];
m2_65 [label="Entry Hangfire.Server.PerformContext.SetJobParameter(string, object)", span="76-76", cluster="Hangfire.Server.PerformContext.SetJobParameter(string, object)", file="MsmqExtensions.cs"];
m2_25 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="MsmqExtensions.cs"];
m2_27 [label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="45-45", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="MsmqExtensions.cs"];
m2_26 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, _backgroundJob.Object, null))", span="42-43", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="MsmqExtensions.cs"];
m2_28 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", span="40-40", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenCancellationTokenIsNull()", file="MsmqExtensions.cs"];
m2_41 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="MsmqExtensions.cs"];
m2_13 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MsmqExtensions.cs"];
m2_76 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_77 [label="var context = CreateContext()", span="102-102", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_78 [label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<string>(null))", span="104-105", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_79 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="100-100", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_57 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_60 [label="Assert.Equal(''name'', exception.ParamName)", span="86-86", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_58 [label="var context = CreateContext()", span="81-81", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_59 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="83-84", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_61 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="79-79", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="MsmqExtensions.cs"];
m2_12 [label="Entry Unk.>", span="", cluster="Unk.>", file="MsmqExtensions.cs"];
m2_39 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="MsmqExtensions.cs"];
m2_98 [label="return new PerformContext(\r\n                _connection.Object, _backgroundJob.Object, _cancellationToken.Object);", span="120-121", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="MsmqExtensions.cs"];
m2_99 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="118-118", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="MsmqExtensions.cs"];
m2_49 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_50 [label="var context = CreateContext()", span="69-69", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_51 [label="var contextCopy = new PerformContext(context)", span="70-70", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_52 [label="Assert.Same(context.Items, contextCopy.Items)", span="72-72", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_53 [label="Assert.Same(context.Connection, contextCopy.Connection)", span="73-73", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_54 [label="Assert.Same(context.BackgroundJob, contextCopy.BackgroundJob)", span="74-74", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_55 [label="Assert.Same(context.CancellationToken, contextCopy.CancellationToken)", span="75-75", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_56 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="67-67", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="MsmqExtensions.cs"];
m2_40 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="MsmqExtensions.cs"];
m2_83 [label="Entry Hangfire.Server.PerformContext.GetJobParameter<T>(string)", span="83-83", cluster="Hangfire.Server.PerformContext.GetJobParameter<T>(string)", file="MsmqExtensions.cs"];
m2_94 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="MsmqExtensions.cs"];
m2_42 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="MsmqExtensions.cs"];
m2_43 [label="Assert.Throws<NullReferenceException>(\r\n                () => new PerformContext(null))", span="62-63", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="MsmqExtensions.cs"];
m2_44 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="60-60", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="MsmqExtensions.cs"];
m2_89 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="MsmqExtensions.cs"];
m2_48 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", span="30-30", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.PerformContext)", file="MsmqExtensions.cs"];
m2_95 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_22 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_23 [label="new PerformContext(_connection.Object, null, _cancellationToken.Object)", span="34-34", cluster="lambda expression", color=green, community=0, file="MsmqExtensions.cs"];
m2_24 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_14 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_15 [label="new PerformContext(null, _backgroundJob.Object, _cancellationToken.Object)", span="25-25", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_30 [label="new PerformContext(_connection.Object, _backgroundJob.Object, null)", span="43-43", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_73 [label="x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\'''')", span="96-96", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_92 [label="x.GetJobParameter(_backgroundJob.Id, ''name'')", span="111-111", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_16 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_29 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_31 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_63 [label="context.SetJobParameter(null, null)", span="84-84", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_72 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_74 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_81 [label="context.GetJobParameter<string>(null)", span="105-105", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_91 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_93 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_96 [label="context.GetJobParameter<int>(''name'')", span="115-115", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_45 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_62 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_80 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_64 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_82 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_97 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_46 [label="new PerformContext(null)", span="63-63", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_47 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="MsmqExtensions.cs"];
m2_7 [label="Entry Mock<IJobCancellationToken>.cstr", span="", cluster="Mock<IJobCancellationToken>.cstr", file="MsmqExtensions.cs"];
m2_71 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="MsmqExtensions.cs"];
m2_32 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_34 [label="Assert.Equal(_backgroundJob.Object, context.BackgroundJob)", span="53-53", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_33 [label="var context = CreateContext()", span="51-51", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_36 [label="Assert.Same(_connection.Object, context.Connection)", span="55-55", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_37 [label="Assert.Same(_cancellationToken.Object, context.CancellationToken)", span="56-56", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_35 [label="Assert.NotNull(context.Items)", span="54-54", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_38 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="49-49", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="MsmqExtensions.cs"];
m2_66 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="MsmqExtensions.cs"];
m2_67 [label="var context = CreateContext()", span="92-92", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="MsmqExtensions.cs"];
m2_69 [label="_connection.Verify(x => x.SetJobParameter(_backgroundJob.Id, ''name'', ''\''value\''''))", span="96-96", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="MsmqExtensions.cs"];
m2_68 [label="context.SetJobParameter(''name'', ''value'')", span="94-94", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="MsmqExtensions.cs"];
m2_70 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="90-90", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="MsmqExtensions.cs"];
m2_90 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="MsmqExtensions.cs"];
m2_84 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="MsmqExtensions.cs"];
m2_85 [label="_connection.Setup(x => x.GetJobParameter(_backgroundJob.Id, ''name'')).Returns(''value'')", span="111-111", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="MsmqExtensions.cs"];
m2_86 [label="var context = CreateContext()", span="112-112", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="MsmqExtensions.cs"];
m2_87 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="114-115", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="MsmqExtensions.cs"];
m2_88 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="109-109", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="MsmqExtensions.cs"];
m2_75 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="MsmqExtensions.cs"];
m2_18 [label="Entry Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="MsmqExtensions.cs"];
m2_20 [label="Assert.Equal(''backgroundJob'', exception.ParamName)", span="36-36", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", color=green, community=0, file="MsmqExtensions.cs"];
m2_19 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_connection.Object, null, _cancellationToken.Object))", span="33-34", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", color=green, community=0, file="MsmqExtensions.cs"];
m2_21 [label="Exit Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", span="31-31", cluster="Hangfire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenBackgroundJobIsNull()", file="MsmqExtensions.cs"];
m2_17 [label="Entry PerformContext.cstr", span="", cluster="PerformContext.cstr", file="MsmqExtensions.cs"];
m2_102 [label="Hangfire.Core.Tests.Server.PerformContextFacts", span="", file="MsmqExtensions.cs"];
m2_103 [label=context, span="", file="MsmqExtensions.cs"];
m2_104 [label=context, span="", file="MsmqExtensions.cs"];
m2_105 [label=context, span="", file="MsmqExtensions.cs"];
m4_15 [label="Entry Unk.InfoFormat", span="", cluster="Unk.InfoFormat", file="MsmqInternalTransaction.cs"];
m4_8 [label="Entry HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_10 [label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="62-62", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_11 [label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="63-63", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_12 [label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="64-64", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_13 [label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="65-65", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_9 [label="logger.InfoFormat(''Using the following options for HangFire Server:'')", span="61-61", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_14 [label="Exit HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="MsmqInternalTransaction.cs"];
m4_0 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="MsmqInternalTransaction.cs"];
m4_1 [label="WorkerCount = Environment.ProcessorCount * 5", span="15-15", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs"];
m4_2 [label="ServerName = Environment.MachineName", span="16-16", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs"];
m4_3 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="17-17", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs"];
m4_4 [label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="18-18", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs"];
m4_5 [label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="19-19", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", color=green, community=0, file="MsmqInternalTransaction.cs"];
m4_6 [label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="MsmqInternalTransaction.cs"];
m4_7 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MsmqInternalTransaction.cs"];
m4_17 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="MsmqInternalTransaction.cs"];
m4_18 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="MsmqInternalTransaction.cs"];
m4_19 [label="''''' + x + '''''", span="63-63", cluster="lambda expression", file="MsmqInternalTransaction.cs"];
m4_20 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="MsmqInternalTransaction.cs"];
m4_16 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="MsmqInternalTransaction.cs"];
m4_21 [label="HangFire.BackgroundJobServerOptions", span="", file="MsmqInternalTransaction.cs"];
m5_29 [label="_redis.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="83-86", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_24 [label="Entry HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", span="53-53", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_25 [label="var flags = _redis.GetValuesFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Fetched'',\r\n                ''Checked'')", span="55-58", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=red, community=0, file="MsmqJobQueue.cs"];
m5_31 [label="TryToRequeueTheJob(jobId)", span="95-95", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_32 [label="JobFetcher.RemoveFromFetchedQueue(_redis, jobId, queue)", span="96-96", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_26 [label="var fetched = flags[0]", span="60-60", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=red, community=0, file="MsmqJobQueue.cs"];
m5_27 [label="var @checked = flags[1]", span="61-61", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", color=red, community=0, file="MsmqJobQueue.cs"];
m5_28 [label="String.IsNullOrEmpty(fetched) && String.IsNullOrEmpty(@checked)", span="63-63", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_30 [label="TimedOutByFetchedTime(fetched) || TimedOutByCheckedTime(fetched, @checked)", span="93-93", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_33 [label="Exit HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", span="53-53", cluster="HangFire.Server.DequeuedJobsWatcher.RequeueJobIfTimedOut(string, string)", file="MsmqJobQueue.cs"];
m5_81 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="MsmqJobQueue.cs"];
m5_55 [label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="MsmqJobQueue.cs"];
m5_20 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="MsmqJobQueue.cs"];
m5_0 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="MsmqJobQueue.cs"];
m5_1 [label="_redis = redisManager.GetClient()", span="23-23", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="MsmqJobQueue.cs"];
m5_2 [label="_stateMachine = new StateMachine(_redis)", span="24-24", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="MsmqJobQueue.cs"];
m5_3 [label="Exit HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="MsmqJobQueue.cs"];
m5_56 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="MsmqJobQueue.cs"];
m5_38 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="MsmqJobQueue.cs"];
m5_34 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="MsmqJobQueue.cs"];
m5_37 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="62-62", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="MsmqJobQueue.cs"];
m5_5 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="MsmqJobQueue.cs"];
m5_62 [label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="128-128", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="MsmqJobQueue.cs"];
m5_63 [label="!String.IsNullOrEmpty(fetchedTimestamp)", span="133-133", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="MsmqJobQueue.cs"];
m5_65 [label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="138-139", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="MsmqJobQueue.cs"];
m5_64 [label="return false;", span="135-135", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="MsmqJobQueue.cs"];
m5_66 [label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="128-128", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="MsmqJobQueue.cs"];
m5_10 [label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_11 [label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="34-34", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_12 [label=queues, span="36-36", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_13 [label="_redis.AcquireLock(\r\n                    String.Format(''hangfire:queue:{0}:dequeued:lock'', queue),\r\n                    TimeSpan.FromMinutes(1))", span="38-40", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_14 [label="var jobIds = _redis.GetAllItemsFromList(\r\n                        String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="42-43", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", color=red, community=0, file="MsmqJobQueue.cs"];
m5_16 [label="RequeueJobIfTimedOut(jobId, queue)", span="47-47", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_15 [label=jobIds, span="45-45", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_17 [label="Exit HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32", cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="MsmqJobQueue.cs"];
m5_53 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="MsmqJobQueue.cs"];
m5_80 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="MsmqJobQueue.cs"];
m5_45 [label="var queue = JobHelper.GetQueue(Type.GetType(jobType))", span="111-111", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_54 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="MsmqJobQueue.cs"];
m5_79 [label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="164-164", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="MsmqJobQueue.cs"];
m5_78 [label="thread.Join()", span="167-167", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="MsmqJobQueue.cs"];
m5_42 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="MsmqJobQueue.cs"];
m5_6 [label="Entry HangFire.Server.DequeuedJobsWatcher.Dispose()", span="27-27", cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="MsmqJobQueue.cs"];
m5_7 [label="_redis.Dispose()", span="29-29", cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="MsmqJobQueue.cs"];
m5_8 [label="Exit HangFire.Server.DequeuedJobsWatcher.Dispose()", span="27-27", cluster="HangFire.Server.DequeuedJobsWatcher.Dispose()", file="MsmqJobQueue.cs"];
m5_39 [label="Entry Unk.TimedOutByFetchedTime", span="", cluster="Unk.TimedOutByFetchedTime", file="MsmqJobQueue.cs"];
m5_4 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="MsmqJobQueue.cs"];
m5_40 [label="Entry Unk.TimedOutByCheckedTime", span="", cluster="Unk.TimedOutByCheckedTime", file="MsmqJobQueue.cs"];
m5_67 [label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="142-142", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_68 [label=true, span="146-146", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_69 [label="FindAndRequeueTimedOutJobs()", span="148-148", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_71 [label=Exception, span="156-156", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_70 [label="_stopped.WaitOne(SleepTimeout)", span="150-150", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_72 [label="_logger.Fatal(\r\n                    ''Unexpected exception caught in the timed out jobs thread. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="158-160", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_73 [label="Exit HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="142-142", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="MsmqJobQueue.cs"];
m5_60 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="MsmqJobQueue.cs"];
m5_9 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="MsmqJobQueue.cs"];
m5_41 [label="Entry HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="101-101", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_43 [label="var jobType = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Type'')", span="103-105", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_49 [label="_stateMachine.ChangeState(jobId, state, EnqueuedState.Name, ProcessingState.Name)", span="119-119", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_44 [label="JobState state", span="107-107", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_46 [label="state = new EnqueuedState(''Requeued due to time out'', queue)", span="112-112", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_47 [label=Exception, span="114-114", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_48 [label="state = new FailedState(''Failed to re-queue the job'', ex)", span="116-116", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_50 [label="Exit HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", span="101-101", cluster="HangFire.Server.DequeuedJobsWatcher.TryToRequeueTheJob(string)", file="MsmqJobQueue.cs"];
m5_75 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="MsmqJobQueue.cs"];
m5_22 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="MsmqJobQueue.cs"];
m5_18 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", color=green, community=0, file="MsmqJobQueue.cs"];
m5_57 [label="Entry HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="122-122", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="MsmqJobQueue.cs"];
m5_58 [label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="124-125", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="MsmqJobQueue.cs"];
m5_59 [label="Exit HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="122-122", cluster="HangFire.Server.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="MsmqJobQueue.cs"];
m5_52 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="MsmqJobQueue.cs"];
m5_51 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="MsmqJobQueue.cs"];
m5_74 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="MsmqJobQueue.cs"];
m5_36 [label="Entry Unk.IsNullOrEmpty", span="", cluster="Unk.IsNullOrEmpty", file="MsmqJobQueue.cs"];
m5_23 [label="Entry Unk.RequeueJobIfTimedOut", span="", cluster="Unk.RequeueJobIfTimedOut", file="MsmqJobQueue.cs"];
m5_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="MsmqJobQueue.cs"];
m5_35 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="MsmqJobQueue.cs"];
m5_61 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="67-67", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="MsmqJobQueue.cs"];
m5_87 [label="var server = CreateServer()", span="99-99", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="MsmqJobQueue.cs"];
m5_88 [label="var runners = server.GetServerComponentsRunner()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="MsmqJobQueue.cs"];
m5_89 [label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="MsmqJobQueue.cs"];
m5_90 [label="var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="MsmqJobQueue.cs"];
m5_91 [label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112", cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", color=green, community=0, file="MsmqJobQueue.cs"];
m5_76 [label="Entry HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="164-164", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="MsmqJobQueue.cs"];
m5_77 [label="_stopped.Set()", span="166-166", cluster="HangFire.Server.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="MsmqJobQueue.cs"];
m5_21 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="MsmqJobQueue.cs"];
m5_82 [label="HangFire.Server.DequeuedJobsWatcher", span="", file="MsmqJobQueue.cs"];
m6_0 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", span="12-12", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs"];
m6_1 [label="_token = new CancellationToken()", span="14-14", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs"];
m6_2 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", span="12-12", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.MsmqJobQueueFacts()", file="MsmqJobQueueFacts.cs"];
m6_13 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs"];
m6_35 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="52-52", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m6_37 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="55-55", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_36 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="54-54", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m6_38 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="57-57", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m6_39 [label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="59-59", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m6_40 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="52-52", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="MsmqJobQueueFacts.cs"];
m6_42 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="MsmqJobQueueFacts.cs"];
m6_32 [label="Entry Unk.Receive", span="", cluster="Unk.Receive", file="MsmqJobQueueFacts.cs"];
m6_58 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="84-84", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_60 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="88-88", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_59 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="87-87", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_61 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="91-91", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_63 [label="var exception = Assert.Throws<MessageQueueException>(\r\n                () => MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="96-97", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_62 [label="Assert.NotNull(fetchedJob)", span="94-94", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_64 [label="Assert.Equal(MessageQueueErrorCode.IOTimeout, exception.MessageQueueErrorCode)", span="99-99", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_65 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="84-84", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="MsmqJobQueueFacts.cs"];
m6_33 [label="Entry BinaryMessageFormatter.cstr", span="", cluster="BinaryMessageFormatter.cstr", file="MsmqJobQueueFacts.cs"];
m6_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="MsmqJobQueueFacts.cs"];
m6_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="MsmqJobQueueFacts.cs"];
m6_71 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="103-103", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_73 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="107-107", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_72 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="106-106", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_74 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="110-110", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_76 [label="var exception = Assert.Throws<MessageQueueException>(\r\n                () => MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5)))", span="116-117", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_75 [label="fetchedJob.RemoveFromQueue()", span="112-112", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_77 [label="Assert.Equal(MessageQueueErrorCode.IOTimeout, exception.MessageQueueErrorCode)", span="119-119", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_78 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="103-103", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="MsmqJobQueueFacts.cs"];
m6_30 [label="Entry Unk.Begin", span="", cluster="Unk.Begin", file="MsmqJobQueueFacts.cs"];
m6_41 [label="Entry Hangfire.Msmq.Tests.MsmqUtils.EnqueueJobId(string, string)", span="7-7", cluster="Hangfire.Msmq.Tests.MsmqUtils.EnqueueJobId(string, string)", file="MsmqJobQueueFacts.cs"];
m6_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="MsmqJobQueueFacts.cs"];
m6_31 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MsmqJobQueueFacts.cs"];
m6_14 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", span="27-27", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_15 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="30-30", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_16 [label="queue.Enqueue(''my-queue'', ''job-id'')", span="33-33", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_17 [label="var messageQueue = CleanMsmqQueueAttribute.GetMessageQueue(''my-queue'')", span="36-36", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_22 [label="Assert.Equal(''job-id'', message.Body)", span="44-44", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_23 [label="Assert.Equal(''job-id'', message.Label)", span="45-45", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_24 [label="transaction.Commit()", span="47-47", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_18 [label="var transaction = new MessageQueueTransaction()", span="37-37", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_20 [label="var message = messageQueue.Receive(TimeSpan.FromSeconds(5), transaction)", span="41-41", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_21 [label="message.Formatter = new BinaryMessageFormatter()", span="42-42", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_19 [label="transaction.Begin()", span="39-39", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_25 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", span="27-27", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Enqueue_SendsTheJobId()", file="MsmqJobQueueFacts.cs"];
m6_66 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="MsmqJobQueueFacts.cs"];
m6_79 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="MsmqJobQueueFacts.cs"];
m6_28 [label="Entry Hangfire.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", span="45-45", cluster="Hangfire.Msmq.Tests.CleanMsmqQueueAttribute.GetMessageQueue(string)", file="MsmqJobQueueFacts.cs"];
m6_27 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", span="87-87", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.Enqueue(string, string)", file="MsmqJobQueueFacts.cs"];
m6_4 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", span="18-18", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs"];
m6_80 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_10 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_11 [label="new MsmqJobQueue(null, MsmqTransactionType.Internal)", span="21-21", cluster="lambda expression", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_12 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_50 [label="queue.Dequeue(new[] { ''my-queue'' }, token)", span="69-69", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_49 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_51 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_67 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_69 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_68 [label="MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="97-97", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_81 [label="MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="117-117", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_82 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="MsmqJobQueueFacts.cs"];
m6_70 [label="Entry Hangfire.Msmq.Tests.MsmqUtils.DequeueJobId(string, System.TimeSpan)", span="19-19", cluster="Hangfire.Msmq.Tests.MsmqUtils.DequeueJobId(string, System.TimeSpan)", file="MsmqJobQueueFacts.cs"];
m6_48 [label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="MsmqJobQueueFacts.cs"];
m6_5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new MsmqJobQueue(null, MsmqTransactionType.Internal))", span="20-21", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs", color=green, community=0];
m6_6 [label="Assert.Equal(''pathPattern'', exception.ParamName)", span="23-23", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs"];
m6_7 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", span="18-18", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Ctor_ThrowsAnException_WhenPathPatternIsNull()", file="MsmqJobQueueFacts.cs"];
m6_43 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="63-63", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m6_44 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="65-65", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_45 [label="var token = new CancellationToken(true)", span="66-66", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m6_46 [label="Assert.Throws<OperationCanceledException>(\r\n                () => queue.Dequeue(new[] { ''my-queue'' }, token))", span="68-69", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m6_47 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="63-63", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="MsmqJobQueueFacts.cs"];
m6_34 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="MsmqJobQueueFacts.cs"];
m6_83 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="123-123", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_85 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="127-127", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_84 [label="MsmqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="126-126", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_86 [label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="130-130", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_87 [label="fetchedJob.Dispose()", span="131-131", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_89 [label="Assert.Equal(''job-id'', jobId)", span="135-135", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_88 [label="var jobId = MsmqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="134-134", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_90 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="123-123", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="MsmqJobQueueFacts.cs"];
m6_26 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="138-138", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs"];
m6_92 [label="return new MsmqJobQueue(CleanMsmqQueueAttribute.PathPattern, transactionType);", span="140-140", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_93 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="138-138", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.CreateQueue(Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueFacts.cs"];
m6_91 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="MsmqJobQueueFacts.cs"];
m6_29 [label="Entry MessageQueueTransaction.cstr", span="", cluster="MessageQueueTransaction.cstr", file="MsmqJobQueueFacts.cs"];
m6_52 [label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="73-73", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m6_54 [label="var queue = CreateQueue(MsmqTransactionType.Internal)", span="76-76", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", color=green, community=0, file="MsmqJobQueueFacts.cs"];
m6_53 [label="MsmqUtils.EnqueueJobId(''queue-2'', ''job-id'')", span="75-75", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m6_55 [label="var fetchedJob = queue.Dequeue(new[] { ''queue-1'', ''queue-2'' }, _token)", span="78-78", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m6_56 [label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="80-80", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m6_57 [label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="73-73", cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="MsmqJobQueueFacts.cs"];
m6_94 [label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts", span="", file="MsmqJobQueueFacts.cs"];
m6_95 [label=queue, span="", file="MsmqJobQueueFacts.cs"];
m6_96 [label=token, span="", file="MsmqJobQueueFacts.cs"];
m7_9 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="29-29", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="MsmqJobQueueMonitoringApi.cs"];
m7_5 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="MsmqJobQueueMonitoringApi.cs"];
m7_6 [label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="MsmqJobQueueMonitoringApi.cs"];
m7_7 [label="context.Transaction.RemoveFromList(''succeeded'', context.JobId)", span="16-16", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="MsmqJobQueueMonitoringApi.cs"];
m7_8 [label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="MsmqJobQueueMonitoringApi.cs"];
m7_0 [label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="MsmqJobQueueMonitoringApi.cs"];
m7_1 [label="context.Transaction.InsertToList(''succeeded'', context.JobId)", span="10-10", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="MsmqJobQueueMonitoringApi.cs"];
m7_2 [label="context.Transaction.TrimList(''succeeded'', 0, 99)", span="11-11", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="MsmqJobQueueMonitoringApi.cs"];
m7_3 [label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="MsmqJobQueueMonitoringApi.cs"];
m7_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="MsmqJobQueueMonitoringApi.cs"];
m8_16 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="MsmqJobQueueProvider.cs"];
m8_4 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", span="44-44", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_57 [label="Entry System.Random.Next(int, int)", span="0-0", cluster="System.Random.Next(int, int)", file="MsmqJobQueueProvider.cs"];
m8_53 [label="Entry System.Random.Random(int)", span="0-0", cluster="System.Random.Random(int)", file="MsmqJobQueueProvider.cs"];
m8_5 [label="innerComponent == null", span="49-49", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_2 [label="_monitoringApi = new MsmqJobQueueMonitoringApi(pathPattern, queues)", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m8_3 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProvider.cs"];
m8_0 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="MsmqJobQueueProvider.cs"];
m8_1 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", color=green, community=0, file="MsmqJobQueueProvider.cs"];
m8_18 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MsmqJobQueueProvider.cs"];
m8_56 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="MsmqJobQueueProvider.cs"];
m8_39 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_40 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="MsmqJobQueueProvider.cs"];
m8_17 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="MsmqJobQueueProvider.cs"];
m8_58 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="MsmqJobQueueProvider.cs"];
m8_20 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="69-69", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_21 [label="ExecuteWithAutomaticRetry(cancellationToken)", span="71-71", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_22 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="69-69", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_41 [label="Entry Hangfire.Logging.ILog.ErrorFormat(string, params object[])", span="158-158", cluster="Hangfire.Logging.ILog.ErrorFormat(string, params object[])", file="MsmqJobQueueProvider.cs"];
m8_43 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="MsmqJobQueueProvider.cs"];
m8_6 [label="throw new ArgumentNullException(''innerComponent'');", span="49-49", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_7 [label="delayCallback == null", span="50-50", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_8 [label="throw new ArgumentNullException(''delayCallback'');", span="50-50", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_23 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="74-74", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_24 [label="var i = 0", span="76-76", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_26 [label="_innerComponent.Execute(cancellationToken)", span="80-80", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_35 [label="cancellationToken.WaitHandle.WaitOne(nextTry)", span="103-103", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_25 [label="i <= _maxRetryAttempts", span="76-76", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_31 [label="i >= _maxRetryAttempts - 1", span="90-90", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_33 [label="var nextTry = _delayCallback(i)", span="92-92", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_34 [label="_logger.ErrorFormat(\r\n                        ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                        ex,\r\n                        _maxRetryAttempts,\r\n                        i + 1,\r\n                        _maxRetryAttempts,\r\n                        nextTry)", span="94-100", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_37 [label="i++", span="76-76", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_27 [label="return;", span="81-81", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_28 [label=OperationCanceledException, span="83-83", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_29 [label="throw;", span="85-85", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_30 [label=Exception, span="87-87", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_32 [label="throw;", span="90-90", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_36 [label="cancellationToken.ThrowIfCancellationRequested()", span="104-104", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_38 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="74-74", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="MsmqJobQueueProvider.cs"];
m8_44 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="109-109", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="MsmqJobQueueProvider.cs"];
m8_45 [label="return _innerComponent.ToString();", span="111-111", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="MsmqJobQueueProvider.cs"];
m8_46 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="109-109", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="MsmqJobQueueProvider.cs"];
m8_19 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="360-360", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="MsmqJobQueueProvider.cs"];
m8_54 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="MsmqJobQueueProvider.cs"];
m8_55 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()", file="MsmqJobQueueProvider.cs"];
m8_42 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="MsmqJobQueueProvider.cs"];
m8_9 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m8_11 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m8_12 [label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span="", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_13 [label="_delayCallback = delayCallback", span="60-60", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_10 [label="return _monitoringApi;", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProvider.cs"];
m8_14 [label="_logger = LogProvider.GetLogger(_innerComponent.GetType())", span="61-61", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_15 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", span="44-44", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="MsmqJobQueueProvider.cs"];
m8_48 [label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="114-114", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="MsmqJobQueueProvider.cs"];
m8_49 [label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="117-117", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="MsmqJobQueueProvider.cs"];
m8_50 [label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="118-119", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="MsmqJobQueueProvider.cs"];
m8_51 [label="return TimeSpan.FromSeconds(nextTry);", span="121-121", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="MsmqJobQueueProvider.cs"];
m8_52 [label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="114-114", cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="MsmqJobQueueProvider.cs"];
m8_47 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="MsmqJobQueueProvider.cs"];
m8_59 [label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span="", file="MsmqJobQueueProvider.cs"];
m9_7 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="MsmqJobQueueProviderFacts.cs"];
m9_6 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="MsmqJobQueueProviderFacts.cs"];
m9_0 [label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_1 [label="var provider = CreateProvider()", span="12-12", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_2 [label="var jobQueue = provider.GetJobQueue(null)", span="14-14", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_3 [label="Assert.NotNull(jobQueue)", span="16-16", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_4 [label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_5 [label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs"];
m9_14 [label="return new MsmqJobQueueProvider(\r\n                CleanMsmqQueueAttribute.PathPattern,\r\n                Queues);", span="31-33", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", color=red, community=0, file="MsmqJobQueueProviderFacts.cs"];
m9_15 [label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs"];
m9_8 [label="Entry Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_9 [label="var provider = CreateProvider()", span="22-22", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_10 [label="var monitoring = provider.GetJobQueueMonitoringApi(null)", span="24-24", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_11 [label="Assert.NotNull(monitoring)", span="26-26", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_12 [label="Exit Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20", cluster="Hangfire.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs"];
m9_13 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="MsmqJobQueueProviderFacts.cs"];
m9_16 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", span="26-26", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>)", file="MsmqJobQueueProviderFacts.cs"];
m10_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="MsmqSqlServerStorageExtensions.cs"];
m10_55 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MsmqSqlServerStorageExtensions.cs"];
m10_58 [label="Entry HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="133-133", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_75 [label="var components = _storage.GetComponents()", span="135-135", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_76 [label="return components\r\n                .Select(component => new ServerComponentRunner(component))\r\n                .ToArray();", span="137-139", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_77 [label="Exit HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="133-133", cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="MsmqSqlServerStorageExtensions.cs"];
m10_26 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="MsmqSqlServerStorageExtensions.cs"];
m10_78 [label="Entry HangFire.JobStorage.GetComponents()", span="58-58", cluster="HangFire.JobStorage.GetComponents()", file="MsmqSqlServerStorageExtensions.cs"];
m10_46 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="MsmqSqlServerStorageExtensions.cs"];
m10_16 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="MsmqSqlServerStorageExtensions.cs"];
m10_27 [label="Entry Unk.InfoFormat", span="", cluster="Unk.InfoFormat", file="MsmqSqlServerStorageExtensions.cs"];
m10_30 [label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22", cluster="HangFire.Server.IServerComponentRunner.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_29 [label="Entry HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", span="59-59", cluster="HangFire.BackgroundJobServerOptions.WriteToLog(ILog)", file="MsmqSqlServerStorageExtensions.cs"];
m10_80 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="MsmqSqlServerStorageExtensions.cs"];
m10_56 [label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="114-114", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_60 [label="var stateMachineFactory = new StateMachineFactory(_storage)", span="116-116", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_62 [label="yield return new ServerComponentRunner(new WorkerManager(sharedWorkerContext, _options.WorkerCount));", span="125-125", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_63 [label="yield return new ServerComponentRunner(new ServerHeartbeat(_storage, _serverId));", span="126-126", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_64 [label="yield return new ServerComponentRunner(new ServerWatchdog(_storage));", span="127-127", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_65 [label="yield return new ServerComponentRunner(\r\n                new SchedulePoller(_storage, stateMachineFactory, _options.SchedulePollingInterval));", span="129-130", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_61 [label="var sharedWorkerContext = new SharedWorkerContext(\r\n                _serverId,\r\n                _options.Queues,\r\n                _storage,\r\n                new JobPerformanceProcess(),\r\n                JobActivator.Current,\r\n                stateMachineFactory)", span="117-123", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_66 [label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="114-114", cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="MsmqSqlServerStorageExtensions.cs"];
m10_72 [label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28", cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="MsmqSqlServerStorageExtensions.cs"];
m10_34 [label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23", cluster="HangFire.Server.IServerComponentRunner.Stop()", file="MsmqSqlServerStorageExtensions.cs"];
m10_2 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="MsmqSqlServerStorageExtensions.cs"];
m10_3 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="MsmqSqlServerStorageExtensions.cs"];
m10_69 [label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28", cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="MsmqSqlServerStorageExtensions.cs"];
m10_0 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36", cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="MsmqSqlServerStorageExtensions.cs"];
m10_1 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36", cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="MsmqSqlServerStorageExtensions.cs"];
m10_4 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_5 [label="options == null", span="48-48", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_7 [label="storage == null", span="49-49", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_9 [label="_options = options", span="51-51", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_10 [label="_storage = storage", span="52-52", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_6 [label="throw new ArgumentNullException(''options'');", span="48-48", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_8 [label="throw new ArgumentNullException(''storage'');", span="49-49", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_11 [label="_serverId = String.Format(''{0}:{1}'', _options.ServerName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="54-54", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_12 [label="_serverRunner = GetServerRunner()", span="57-57", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_13 [label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_31 [label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="MsmqSqlServerStorageExtensions.cs"];
m10_32 [label="_serverRunner.Stop()", span="73-73", cluster="HangFire.BackgroundJobServer.Stop()", file="MsmqSqlServerStorageExtensions.cs"];
m10_33 [label="Exit HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="MsmqSqlServerStorageExtensions.cs"];
m10_44 [label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext()", file="MsmqSqlServerStorageExtensions.cs"];
m10_47 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="MsmqSqlServerStorageExtensions.cs"];
m10_49 [label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="104-104", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_50 [label="var componentRunners = new List<IServerComponentRunner>()", span="106-106", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_51 [label="componentRunners.AddRange(GetCommonComponentRunners())", span="108-108", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_52 [label="componentRunners.AddRange(GetStorageComponentRunners())", span="109-109", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_53 [label="return new ServerComponentRunnerCollection(componentRunners);", span="111-111", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_54 [label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="104-104", cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_15 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="MsmqSqlServerStorageExtensions.cs"];
m10_81 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="MsmqSqlServerStorageExtensions.cs"];
m10_82 [label="new ServerComponentRunner(component)", span="138-138", cluster="lambda expression", file="MsmqSqlServerStorageExtensions.cs"];
m10_83 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="MsmqSqlServerStorageExtensions.cs"];
m10_59 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="MsmqSqlServerStorageExtensions.cs"];
m10_57 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="MsmqSqlServerStorageExtensions.cs"];
m10_74 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="HangFire.Server.SchedulePoller.SchedulePoller(HangFire.JobStorage, HangFire.States.IStateMachineFactory, System.TimeSpan)", file="MsmqSqlServerStorageExtensions.cs"];
m10_79 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="MsmqSqlServerStorageExtensions.cs"];
m10_19 [label="Entry HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_20 [label="Logger.Info(''Starting HangFire Server...'')", span="62-62", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_21 [label="Logger.InfoFormat(''Using job storage: '{0}'.'', _storage)", span="63-63", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_22 [label="_storage.WriteOptionsToLog(Logger)", span="65-65", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_23 [label="_options.WriteToLog(Logger)", span="66-66", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_24 [label="_serverRunner.Start()", span="68-68", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_25 [label="Exit HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="MsmqSqlServerStorageExtensions.cs"];
m10_18 [label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="82-82", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_40 [label="var context = new ServerContext\r\n            {\r\n                Queues = _options.Queues,\r\n                WorkerCount = _options.WorkerCount\r\n            }", span="84-88", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_41 [label="var server = new ServerCore(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="90-94", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_42 [label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions\r\n                {\r\n                    ShutdownTimeout = _options.ShutdownTimeout\r\n                });", span="96-101", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_43 [label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="82-82", cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="MsmqSqlServerStorageExtensions.cs"];
m10_28 [label="Entry HangFire.JobStorage.WriteOptionsToLog(ILog)", span="68-68", cluster="HangFire.JobStorage.WriteOptionsToLog(ILog)", file="MsmqSqlServerStorageExtensions.cs"];
m10_48 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="MsmqSqlServerStorageExtensions.cs"];
m10_35 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()", file="MsmqSqlServerStorageExtensions.cs"];
m10_36 [label="_serverRunner.Dispose()", span="78-78", cluster="HangFire.BackgroundJobServer.Dispose()", file="MsmqSqlServerStorageExtensions.cs"];
m10_37 [label="Logger.Info(''HangFire Server stopped.'')", span="79-79", cluster="HangFire.BackgroundJobServer.Dispose()", file="MsmqSqlServerStorageExtensions.cs"];
m10_38 [label="Exit HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()", file="MsmqSqlServerStorageExtensions.cs"];
m10_68 [label="Entry HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", span="23-23", cluster="HangFire.Server.SharedWorkerContext.SharedWorkerContext(string, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.JobActivator, HangFire.States.IStateMachineFactory)", file="MsmqSqlServerStorageExtensions.cs"];
m10_70 [label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36", cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="MsmqSqlServerStorageExtensions.cs"];
m10_39 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="MsmqSqlServerStorageExtensions.cs"];
m10_71 [label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="29-29", cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="MsmqSqlServerStorageExtensions.cs"];
m10_73 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_67 [label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16", cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="MsmqSqlServerStorageExtensions.cs"];
m10_45 [label="Entry HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", span="31-31", cluster="HangFire.Server.ServerCore.ServerCore(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", file="MsmqSqlServerStorageExtensions.cs"];
m10_84 [label="HangFire.BackgroundJobServer", span="", file="MsmqSqlServerStorageExtensions.cs"];
m13_11 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RazorPage.cs"];
m13_12 [label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span="", cluster="Hangfire.Dashboard.RazorPage.ToString()", file="RazorPage.cs"];
m13_13 [label="Exit Hangfire.Dashboard.RazorPage.ToString()", span="70-70", cluster="Hangfire.Dashboard.RazorPage.ToString()", file="RazorPage.cs"];
m13_4 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueue.MsmqJobQueue(string, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="RazorPage.cs"];
m13_5 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="35-35", cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_48 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="RazorPage.cs"];
m13_0 [label="Entry Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="RazorPage.cs"];
m13_1 [label="GenerationTime = Stopwatch.StartNew()", span="34-34", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="RazorPage.cs"];
m13_2 [label="Html = new HtmlHelper(this)", span="35-35", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="RazorPage.cs"];
m13_3 [label="Exit Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="RazorPage.cs"];
m13_41 [label="Entry Hangfire.Storage.IMonitoringApi.GetStatistics()", span="27-27", cluster="Hangfire.Storage.IMonitoringApi.GetStatistics()", file="RazorPage.cs"];
m13_40 [label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54", cluster="Hangfire.JobStorage.GetMonitoringApi()", file="RazorPage.cs"];
m13_34 [label="Entry Hangfire.Dashboard.UrlHelper.UrlHelper(System.Collections.Generic.IDictionary<string, object>)", span="27-27", cluster="Hangfire.Dashboard.UrlHelper.UrlHelper(System.Collections.Generic.IDictionary<string, object>)", file="RazorPage.cs"];
m13_35 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="RazorPage.cs"];
m13_72 [label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0", cluster="System.Net.WebUtility.HtmlEncode(string)", file="RazorPage.cs"];
m13_42 [label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs"];
m13_43 [label="string.IsNullOrEmpty(textToAppend)", span="106-106", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", color=green, community=0, file="RazorPage.cs"];
m13_44 [label="return;", span="107-107", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs"];
m13_45 [label="_content.Append(textToAppend)", span="108-108", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs"];
m13_46 [label="Exit Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="RazorPage.cs"];
m13_69 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="RazorPage.cs"];
m13_8 [label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="RazorPage.cs"];
m13_9 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RazorPage.cs"];
m13_10 [label="return _monitoringApi;", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RazorPage.cs"];
m13_6 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="RazorPage.cs"];
m13_7 [label="return _jobQueue;", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="RazorPage.cs"];
m13_57 [label="Entry Hangfire.Dashboard.RazorPage.Encode(string)", span="139-139", cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="RazorPage.cs"];
m13_70 [label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : WebUtility.HtmlEncode(text);", span="141-143", cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="RazorPage.cs"];
m13_71 [label="Exit Hangfire.Dashboard.RazorPage.Encode(string)", span="139-139", cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="RazorPage.cs"];
m13_47 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RazorPage.cs"];
m13_55 [label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27", cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="RazorPage.cs"];
m13_49 [label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs"];
m13_51 [label="return;", span="114-114", cluster="Hangfire.Dashboard.RazorPage.Write(object)", color=green, community=0, file="RazorPage.cs"];
m13_50 [label="value == null", span="113-113", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs"];
m13_53 [label="WriteLiteral(html != null ? html.ToString() : Encode(value.ToString()))", span="116-116", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs"];
m13_52 [label="var html = value as NonEscapedString", span="115-115", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs"];
m13_54 [label="Exit Hangfire.Dashboard.RazorPage.Write(object)", span="111-111", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="RazorPage.cs"];
m13_36 [label="Entry lambda expression", span="97-101", cluster="lambda expression", file="RazorPage.cs"];
m13_37 [label="var monitoring = Storage.GetMonitoringApi()", span="99-99", cluster="lambda expression", file="RazorPage.cs"];
m13_38 [label="return monitoring.GetStatistics();", span="100-100", cluster="lambda expression", file="RazorPage.cs"];
m13_39 [label="Exit lambda expression", span="97-101", cluster="lambda expression", file="RazorPage.cs"];
m13_61 [label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22", cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", file="RazorPage.cs"];
m13_58 [label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="RazorPage.cs"];
m13_59 [label="return new NonEscapedString(_body);", span="121-121", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="RazorPage.cs"];
m13_60 [label="Exit Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="RazorPage.cs"];
m13_15 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_16 [label="Request = parentPage.Request", span="77-77", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_17 [label="Response = parentPage.Response", span="78-78", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_18 [label="Storage = parentPage.Storage", span="79-79", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_19 [label="AppPath = parentPage.AppPath", span="80-80", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_20 [label="Url = parentPage.Url", span="81-81", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_21 [label="GenerationTime = parentPage.GenerationTime", span="83-83", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_22 [label="_statisticsLazy = parentPage._statisticsLazy", span="84-84", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_23 [label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="RazorPage.cs"];
m13_24 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_26 [label="Request = owinContext.Request", span="91-91", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_27 [label="Response = owinContext.Response", span="92-92", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_28 [label="Storage = context.JobStorage", span="93-93", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_29 [label="AppPath = context.AppPath", span="94-94", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_30 [label="Url = new UrlHelper(context.OwinEnvironment)", span="95-95", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_31 [label="_statisticsLazy = new Lazy<StatisticsDto>(() =>\r\n            {\r\n                var monitoring = Storage.GetMonitoringApi();\r\n                return monitoring.GetStatistics();\r\n            })", span="97-101", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_25 [label="var owinContext = new OwinContext(context.OwinEnvironment)", span="89-89", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_32 [label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="RazorPage.cs"];
m13_33 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="RazorPage.cs"];
m13_56 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="RazorPage.cs"];
m13_14 [label="Entry Hangfire.Dashboard.RazorPage.TransformText(string)", span="124-124", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_62 [label="_body = body", span="126-126", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_63 [label="Execute()", span="128-128", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_64 [label="Layout != null", span="130-130", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_65 [label="Layout.Assign(this)", span="132-132", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_66 [label="return Layout.TransformText(_content.ToString());", span="133-133", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_67 [label="return _content.ToString();", span="136-136", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_68 [label="Exit Hangfire.Dashboard.RazorPage.TransformText(string)", span="124-124", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="RazorPage.cs"];
m13_73 [label="Hangfire.Dashboard.RazorPage", span="", file="RazorPage.cs"];
m0_9 -> m0_10  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_13  [key=2, style=dotted];
m0_12 -> m0_9  [key=0, style=bold, color=blue];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid, color=green];
m0_67 -> m0_22  [key=2, style=dotted, color=green];
m0_66 -> m0_67  [key=0, style=solid, color=green];
m0_66 -> m0_38  [key=2, style=dotted];
m0_68 -> m0_39  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_76 -> m0_26  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_71 -> m0_40  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_41  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_69 -> m0_53  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_53  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_73 -> m0_53  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_53  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_53  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_77 -> m0_65  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_88 -> m0_26  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_79 -> m0_38  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_22  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_39  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_83 -> m0_40  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_41  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_82 -> m0_53  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_85 -> m0_53  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_53  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_53  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_89 -> m0_78  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_29  [key=2, style=dotted, color=green];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=2, style=dotted];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_5  [key=2, style=dotted, color=green];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_6  [key=2, style=dotted, color=green];
m0_2 -> m0_7  [key=2, style=dotted, color=green];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_8  [key=2, style=dotted, color=green];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_16 -> m0_0  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_17 -> m0_14  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_99 -> m0_26  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_91 -> m0_38  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_22  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_39  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_96 -> m0_40  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_41  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_94 -> m0_53  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_53  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_98 -> m0_53  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_100 -> m0_90  [key=0, style=bold, color=blue];
m0_122 -> m0_123  [key=0, style=solid];
m0_130 -> m0_26  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_123 -> m0_38  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_22  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_39  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_127 -> m0_40  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_128 -> m0_41  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_126 -> m0_53  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_129 -> m0_53  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_131 -> m0_122  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_110 -> m0_26  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_102 -> m0_38  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_22  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_39  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_107 -> m0_40  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_108 -> m0_41  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_105 -> m0_53  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_53  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_111 -> m0_101  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid, color=green];
m0_43 -> m0_44  [key=0, style=solid, color=green];
m0_43 -> m0_38  [key=2, style=dotted, color=green];
m0_44 -> m0_45  [key=0, style=solid, color=green];
m0_44 -> m0_22  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid, color=green];
m0_45 -> m0_39  [key=2, style=dotted, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_53  [key=2, style=dotted, color=green];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_40  [key=2, style=dotted, color=green];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_41  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_53  [key=2, style=dotted, color=green];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_53  [key=2, style=dotted, color=green];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_26  [key=2, style=dotted, color=green];
m0_52 -> m0_42  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_38  [key=2, style=dotted, color=green];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_22  [key=2, style=dotted, color=green];
m0_57 -> m0_39  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid, color=green];
m0_59 -> m0_40  [key=2, style=dotted, color=green];
m0_58 -> m0_59  [key=0, style=solid, color=green];
m0_58 -> m0_53  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid, color=green];
m0_60 -> m0_41  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_61 -> m0_53  [key=2, style=dotted, color=green];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_62 -> m0_53  [key=2, style=dotted, color=green];
m0_63 -> m0_64  [key=0, style=solid, color=green];
m0_63 -> m0_26  [key=2, style=dotted, color=green];
m0_64 -> m0_54  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_31 -> m0_38  [key=2, style=dotted, color=green];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_32 -> m0_22  [key=2, style=dotted, color=green];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_39  [key=2, style=dotted, color=green];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_40  [key=2, style=dotted, color=green];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_41  [key=2, style=dotted, color=green];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_26  [key=2, style=dotted, color=green];
m0_37 -> m0_30  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_21  [key=2, style=dotted, color=green];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_132 -> m0_133  [key=0, style=solid];
m0_141 -> m0_26  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_133 -> m0_38  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_22  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_39  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_138 -> m0_40  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_41  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_136 -> m0_53  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_53  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_112  [key=2, style=dotted];
m0_142 -> m0_132  [key=0, style=bold, color=blue];
m0_113 -> m0_114  [key=0, style=solid];
m0_120 -> m0_26  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_114 -> m0_38  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_22  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_118 -> m0_40  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_119 -> m0_41  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_116 -> m0_53  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_53  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_121 -> m0_113  [key=0, style=bold, color=blue];
m0_143 -> m0_32  [key=1, style=dashed, color=green, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_36  [key=1, style=dashed, color=green, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_51  [key=1, style=dashed, color=green, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_56  [key=1, style=dashed, color=green, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_63  [key=1, style=dashed, color=green, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_67  [key=1, style=dashed, color=green, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m0_143 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.Re_QueueingOfTimedOutJobsFeature"];
m1_18 -> m1_19  [key=0, style=solid, color=green];
m1_19 -> m1_20  [key=0, style=solid, color=green];
m1_19 -> m1_10  [key=2, style=dotted, color=green];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_3  [key=2, style=dotted, color=green];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid, color=green];
m1_13 -> m1_14  [key=0, style=solid, color=green];
m1_13 -> m1_17  [key=2, style=dotted, color=green];
m1_13 -> m1_15  [key=1, style=dashed, color=green, label=message];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_3  [key=2, style=dotted, color=green];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_16 -> m1_12  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_8  [key=0, style=solid, color=green];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_10  [key=2, style=dotted, color=green];
m1_8 -> m1_9  [key=0, style=solid, color=green];
m1_8 -> m1_11  [key=2, style=dotted, color=green];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_11  [key=2, style=dotted, color=green];
m1_9 -> m1_4  [key=0, style=bold, color=blue];
m1_23 -> m1_1  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m1_23 -> m1_5  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m1_23 -> m1_6  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m1_23 -> m1_8  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m1_23 -> m1_7  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m1_23 -> m1_14  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m1_23 -> m1_19  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqDtcTransaction"];
m2_8 -> m2_9  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_13  [key=2, style=dotted, color=green];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_19  [key=3, color=green, style=bold, label="method methodReturn Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage> UseMsmqQueues"];
m2_9 -> m2_12  [key=2, style=dotted];
m2_9 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_11 -> m2_8  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.Net.HttpStatusCode"];
m2_0 -> m2_5  [key=3, color=darkorchid, style=bold, label="method methodReturn IHttpHandler Process"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=response];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=response];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_27 -> m2_13  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_26 -> m2_12  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_28 -> m2_25  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_39  [key=2, style=dotted];
m2_77 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_78 -> m2_12  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_79 -> m2_76  [key=0, style=bold, color=blue];
m2_57 -> m2_58  [key=0, style=solid];
m2_60 -> m2_13  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_39  [key=2, style=dotted];
m2_58 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_59 -> m2_12  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_61 -> m2_57  [key=0, style=bold, color=blue];
m2_39 -> m2_98  [key=0, style=solid];
m2_98 -> m2_17  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_99 -> m2_39  [key=0, style=bold, color=blue];
m2_49 -> m2_50  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_39  [key=2, style=dotted];
m2_50 -> m2_52  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_50 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_50 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_50 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_48  [key=2, style=dotted];
m2_51 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m2_51 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m2_51 -> m2_55  [key=1, style=dashed, color=darkseagreen4, label=contextCopy];
m2_52 -> m2_41  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_41  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_41  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_55 -> m2_41  [key=2, style=dotted];
m2_55 -> m2_56  [key=0, style=solid];
m2_56 -> m2_49  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_12  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_95 -> m2_96  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid, color=green];
m2_23 -> m2_24  [key=0, style=solid, color=green];
m2_23 -> m2_17  [key=2, style=dotted, color=green];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_17  [key=2, style=dotted];
m2_15 -> m2_16  [key=0, style=solid];
m2_30 -> m2_17  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_75  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_94  [key=2, style=dotted];
m2_16 -> m2_14  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_31 -> m2_29  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_65  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_74 -> m2_72  [key=0, style=bold, color=blue];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=2, style=dotted];
m2_91 -> m2_92  [key=0, style=solid];
m2_93 -> m2_91  [key=0, style=bold, color=blue];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_83  [key=2, style=dotted];
m2_45 -> m2_46  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_64 -> m2_62  [key=0, style=bold, color=blue];
m2_82 -> m2_80  [key=0, style=bold, color=blue];
m2_97 -> m2_95  [key=0, style=bold, color=blue];
m2_46 -> m2_48  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_45  [key=0, style=bold, color=blue];
m2_32 -> m2_33  [key=0, style=solid];
m2_34 -> m2_13  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_39  [key=2, style=dotted];
m2_33 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_33 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_33 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_41  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_41  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_40  [key=2, style=dotted];
m2_38 -> m2_32  [key=0, style=bold, color=blue];
m2_66 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_39  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_71  [key=2, style=dotted];
m2_69 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_65  [key=2, style=dotted];
m2_70 -> m2_66  [key=0, style=bold, color=blue];
m2_84 -> m2_85  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_89  [key=2, style=dotted];
m2_85 -> m2_90  [key=2, style=dotted];
m2_85 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_39  [key=2, style=dotted];
m2_86 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_87 -> m2_12  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_88 -> m2_84  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid, color=green];
m2_20 -> m2_10  [key=3, color=green, style=bold, label="Parameter variable string pathPattern"];
m2_20 -> m2_21  [key=0, style=solid, color=green];
m2_20 -> m2_13  [key=2, style=dotted, color=green];
m2_19 -> m2_19  [key=3, color=green, style=bold, label="method methodReturn Hangfire.IGlobalConfiguration<Hangfire.SqlServer.SqlServerStorage> UseMsmqQueues"];
m2_19 -> m2_20  [key=0, style=solid, color=green];
m2_19 -> m2_12  [key=2, style=dotted, color=green];
m2_19 -> m2_22  [key=1, style=dashed, color=green, label="lambda expression"];
m2_21 -> m2_18  [key=0, style=bold, color=blue];
m2_102 -> m2_19  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_23  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_102 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.PerformContextFacts"];
m2_103 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_104 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label=context];
m2_105 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=context];
m4_8 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m4_8 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m4_8 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m4_8 -> m4_9  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_16  [key=2, style=dotted];
m4_11 -> m4_17  [key=2, style=dotted];
m4_11 -> m4_15  [key=2, style=dotted];
m4_11 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_8  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_2 -> m4_3  [key=0, style=solid, color=green];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_4 -> m4_5  [key=0, style=solid, color=green];
m4_4 -> m4_7  [key=2, style=dotted, color=green];
m4_5 -> m4_6  [key=0, style=solid, color=green];
m4_5 -> m4_7  [key=2, style=dotted, color=green];
m4_6 -> m4_0  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_18  [key=0, style=bold, color=blue];
m4_21 -> m4_1  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_2  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_3  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_4  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_5  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m4_21 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m5_29 -> m5_33  [key=0, style=solid];
m5_29 -> m5_34  [key=2, style=dotted];
m5_29 -> m5_37  [key=2, style=dotted];
m5_29 -> m5_38  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid, color=red];
m5_24 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_24 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_24 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_25 -> m5_26  [key=0, style=solid, color=red];
m5_25 -> m5_34  [key=2, style=dotted, color=red];
m5_25 -> m5_35  [key=2, style=dotted, color=red];
m5_25 -> m5_27  [key=1, style=dashed, color=red, label=flags];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_41  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_42  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid, color=red];
m5_26 -> m5_28  [key=1, style=dashed, color=red, label=fetched];
m5_26 -> m5_30  [key=1, style=dashed, color=red, label=fetched];
m5_27 -> m5_28  [key=0, style=solid, color=red];
m5_27 -> m5_30  [key=1, style=dashed, color=red, label="@checked"];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=0, style=solid];
m5_28 -> m5_36  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_33  [key=0, style=solid];
m5_30 -> m5_39  [key=2, style=dotted];
m5_30 -> m5_40  [key=2, style=dotted];
m5_33 -> m5_24  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_62 -> m5_64  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TimedOutByCheckedTime"];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=0, style=solid];
m5_63 -> m5_60  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_60  [key=2, style=dotted];
m5_65 -> m5_61  [key=2, style=dotted];
m5_64 -> m5_66  [key=0, style=solid];
m5_66 -> m5_62  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_18  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_17  [key=0, style=solid];
m5_12 -> m5_14  [key=1, style=dashed, color=red, label=queue];
m5_12 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=queue];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_19  [key=2, style=dotted];
m5_13 -> m5_20  [key=2, style=dotted];
m5_13 -> m5_21  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid, color=red];
m5_14 -> m5_19  [key=2, style=dotted, color=red];
m5_14 -> m5_22  [key=2, style=dotted, color=red];
m5_14 -> m5_14  [key=3, color=red, style=bold, label="Local variable string jobId"];
m5_16 -> m5_15  [key=0, style=solid];
m5_16 -> m5_23  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_12  [key=0, style=solid];
m5_17 -> m5_10  [key=0, style=bold, color=blue];
m5_45 -> m5_91  [key=3, color=green, style=bold, label="Local variable MessageQueue messageQueue"];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_52  [key=2, style=dotted];
m5_45 -> m5_53  [key=2, style=dotted];
m5_79 -> m5_91  [key=3, color=green, style=bold, label="Local variable MessageQueue messageQueue"];
m5_79 -> m5_76  [key=0, style=bold, color=blue];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_81  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [key=2, style=dotted];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_71  [key=0, style=solid];
m5_68 -> m5_73  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_10  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_70 -> m5_68  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_73  [key=0, style=solid];
m5_70 -> m5_74  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_75  [key=2, style=dotted];
m5_73 -> m5_67  [key=0, style=bold, color=blue];
m5_41 -> m5_43  [key=0, style=solid];
m5_41 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_41 -> m5_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string jobId"];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_34  [key=2, style=dotted];
m5_43 -> m5_51  [key=2, style=dotted];
m5_43 -> m5_45  [key=1, style=dashed, color=darkseagreen4, label=jobType];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_56  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_49  [key=0, style=solid];
m5_46 -> m5_54  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_55  [key=2, style=dotted];
m5_50 -> m5_41  [key=0, style=bold, color=blue];
m5_57 -> m5_58  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_60  [key=2, style=dotted];
m5_58 -> m5_61  [key=2, style=dotted];
m5_59 -> m5_57  [key=0, style=bold, color=blue];
m5_91 -> m5_78  [key=3, color=green, style=bold, label="Parameter variable string queue"];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.Thread"];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_80  [key=2, style=dotted];
m5_82 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_14  [key=1, style=dashed, color=red, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_25  [key=1, style=dashed, color=red, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m5_82 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.DequeuedJobsWatcher"];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_35 -> m6_36  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid, color=green];
m6_37 -> m6_26  [key=2, style=dotted, color=green];
m6_36 -> m6_37  [key=0, style=solid, color=green];
m6_36 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_42  [key=2, style=dotted];
m6_39 -> m6_9  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_40 -> m6_35  [key=0, style=bold, color=blue];
m6_58 -> m6_59  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid, color=green];
m6_60 -> m6_26  [key=2, style=dotted, color=green];
m6_59 -> m6_60  [key=0, style=solid, color=green];
m6_59 -> m6_41  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_42  [key=2, style=dotted];
m6_63 -> m6_8  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_66  [key=2, style=dotted];
m6_64 -> m6_9  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_65 -> m6_58  [key=0, style=bold, color=blue];
m6_71 -> m6_72  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid, color=green];
m6_73 -> m6_26  [key=2, style=dotted, color=green];
m6_72 -> m6_73  [key=0, style=solid, color=green];
m6_72 -> m6_41  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_42  [key=2, style=dotted];
m6_76 -> m6_8  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_79  [key=2, style=dotted];
m6_77 -> m6_9  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_78 -> m6_71  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_15 -> m6_16  [key=0, style=solid, color=green];
m6_15 -> m6_26  [key=2, style=dotted, color=green];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_27  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_28  [key=2, style=dotted];
m6_17 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=messageQueue];
m6_22 -> m6_9  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_9  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_34  [key=2, style=dotted];
m6_18 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_29  [key=2, style=dotted];
m6_18 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_31  [key=2, style=dotted];
m6_20 -> m6_32  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=message];
m6_21 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=message];
m6_21 -> m6_33  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_30  [key=2, style=dotted];
m6_25 -> m6_14  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_80 -> m6_81  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid, color=green];
m6_11 -> m6_12  [key=0, style=solid, color=green];
m6_11 -> m6_13  [key=2, style=dotted, color=green];
m6_12 -> m6_10  [key=0, style=bold, color=blue];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_42  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_51 -> m6_49  [key=0, style=bold, color=blue];
m6_67 -> m6_68  [key=0, style=solid];
m6_69 -> m6_67  [key=0, style=bold, color=blue];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_31  [key=2, style=dotted];
m6_68 -> m6_70  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_31  [key=2, style=dotted];
m6_81 -> m6_70  [key=2, style=dotted];
m6_82 -> m6_80  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_8  [key=2, style=dotted, color=green];
m6_5 -> m6_10  [key=1, style=dashed, color=green, label="lambda expression"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=2, style=dotted];
m6_6 -> m6_9  [key=2, style=dotted];
m6_7 -> m6_5  [key=0, style=bold, color=blue];
m6_7 -> m6_4  [key=0, style=bold, color=blue];
m6_43 -> m6_44  [key=0, style=solid, color=green];
m6_44 -> m6_45  [key=0, style=solid, color=green];
m6_44 -> m6_26  [key=2, style=dotted, color=green];
m6_44 -> m6_46  [key=1, style=dashed, color=green, label=queue];
m6_44 -> m6_50  [key=1, style=dashed, color=green, label=queue];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_48  [key=2, style=dotted];
m6_45 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=token];
m6_46 -> m6_8  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_47 -> m6_43  [key=0, style=bold, color=blue];
m6_83 -> m6_84  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid, color=green];
m6_85 -> m6_26  [key=2, style=dotted, color=green];
m6_84 -> m6_85  [key=0, style=solid, color=green];
m6_84 -> m6_41  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_42  [key=2, style=dotted];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_91  [key=2, style=dotted];
m6_89 -> m6_9  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_31  [key=2, style=dotted];
m6_88 -> m6_70  [key=2, style=dotted];
m6_90 -> m6_83  [key=0, style=bold, color=blue];
m6_26 -> m6_15  [key=3, color=green, style=bold, label="Parameter variable Hangfire.SqlServer.Msmq.MsmqTransactionType transactionType"];
m6_26 -> m6_92  [key=0, style=solid, color=green];
m6_92 -> m6_93  [key=0, style=solid, color=green];
m6_92 -> m6_13  [key=2, style=dotted, color=green];
m6_93 -> m6_26  [key=0, style=bold, color=blue];
m6_52 -> m6_53  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid, color=green];
m6_54 -> m6_26  [key=2, style=dotted, color=green];
m6_53 -> m6_54  [key=0, style=solid, color=green];
m6_53 -> m6_41  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_42  [key=2, style=dotted];
m6_56 -> m6_9  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_52  [key=0, style=bold, color=blue];
m6_94 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m6_94 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m6_94 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m6_94 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m6_94 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m6_94 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueFacts"];
m6_95 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=queue];
m6_96 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=token];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=2, style=dotted];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="System.Func<int, System.TimeSpan>"];
m8_4 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_4 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IServerComponent"];
m8_4 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_4 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="System.Func<int, System.TimeSpan>"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_5  [key=2, style=dotted];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_4  [key=2, style=dotted, color=green];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=2, style=dotted];
m8_22 -> m8_20  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_15  [key=0, style=solid];
m8_6 -> m8_16  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=0, style=solid];
m8_8 -> m8_6  [key=0, style=bold, color=blue];
m8_8 -> m8_15  [key=0, style=solid];
m8_8 -> m8_16  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m8_23 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m8_23 -> m8_20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_24 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_24 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_24 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_24 -> m8_24  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_39  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_42  [key=2, style=dotted];
m8_35 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_38  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_40  [key=2, style=dotted];
m8_33 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_41  [key=2, style=dotted];
m8_37 -> m8_25  [key=0, style=solid];
m8_37 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_27 -> m8_38  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_29 -> m8_38  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_32 -> m8_38  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_43  [key=2, style=dotted];
m8_36 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m8_38 -> m8_23  [key=0, style=bold, color=blue];
m8_44 -> m8_45  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_47  [key=2, style=dotted];
m8_46 -> m8_44  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_9  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_1  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m8_12 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m8_12 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m8_12 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m8_13 -> m8_14  [key=0, style=solid];
m8_10 -> m8_15  [key=0, style=solid];
m8_10 -> m8_17  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_19  [key=2, style=dotted];
m8_15 -> m8_4  [key=0, style=bold, color=blue];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_53  [key=2, style=dotted];
m8_49 -> m8_54  [key=2, style=dotted];
m8_49 -> m8_55  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_56  [key=2, style=dotted];
m8_50 -> m8_57  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_58  [key=2, style=dotted];
m8_52 -> m8_48  [key=0, style=bold, color=blue];
m8_59 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m8_59 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryServerComponentWrapper"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m9_5 -> m9_14  [key=0, style=solid, color=red];
m9_14 -> m9_15  [key=0, style=solid, color=red];
m9_14 -> m9_16  [key=2, style=dotted, color=red];
m9_15 -> m9_5  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_5  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_7  [key=2, style=dotted];
m9_12 -> m9_8  [key=0, style=bold, color=blue];
m10_58 -> m10_75  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_78  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_79  [key=2, style=dotted];
m10_76 -> m10_80  [key=2, style=dotted];
m10_76 -> m10_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_77 -> m10_58  [key=0, style=bold, color=blue];
m10_56 -> m10_60  [key=0, style=solid];
m10_56 -> m10_62  [key=0, style=bold, color=crimson];
m10_56 -> m10_63  [key=0, style=bold, color=crimson];
m10_56 -> m10_64  [key=0, style=bold, color=crimson];
m10_56 -> m10_65  [key=0, style=bold, color=crimson];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_67  [key=2, style=dotted];
m10_60 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label=stateMachineFactory];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_70  [key=2, style=dotted];
m10_62 -> m10_71  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_70  [key=2, style=dotted];
m10_63 -> m10_72  [key=2, style=dotted];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_70  [key=2, style=dotted];
m10_64 -> m10_73  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_70  [key=2, style=dotted];
m10_65 -> m10_74  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_68  [key=2, style=dotted];
m10_61 -> m10_69  [key=2, style=dotted];
m10_66 -> m10_56  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid];
m10_3 -> m10_2  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m10_4 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m10_4 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_6 -> m10_13  [key=0, style=solid];
m10_6 -> m10_14  [key=2, style=dotted];
m10_8 -> m10_13  [key=0, style=solid];
m10_8 -> m10_14  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_15  [key=2, style=dotted];
m10_11 -> m10_16  [key=2, style=dotted];
m10_11 -> m10_17  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_18  [key=2, style=dotted];
m10_13 -> m10_4  [key=0, style=bold, color=blue];
m10_31 -> m10_32  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_34  [key=2, style=dotted];
m10_33 -> m10_31  [key=0, style=bold, color=blue];
m10_49 -> m10_50  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_55  [key=2, style=dotted];
m10_50 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=componentRunners];
m10_50 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label=componentRunners];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_56  [key=2, style=dotted];
m10_51 -> m10_57  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_58  [key=2, style=dotted];
m10_52 -> m10_57  [key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_59  [key=2, style=dotted];
m10_54 -> m10_49  [key=0, style=bold, color=blue];
m10_81 -> m10_82  [key=0, style=solid];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_70  [key=2, style=dotted];
m10_83 -> m10_81  [key=0, style=bold, color=blue];
m10_19 -> m10_20  [key=0, style=solid];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_26  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_27  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_28  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_29  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_30  [key=2, style=dotted];
m10_25 -> m10_19  [key=0, style=bold, color=blue];
m10_18 -> m10_40  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_44  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_45  [key=2, style=dotted];
m10_41 -> m10_46  [key=2, style=dotted];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_47  [key=2, style=dotted];
m10_42 -> m10_48  [key=2, style=dotted];
m10_43 -> m10_18  [key=0, style=bold, color=blue];
m10_35 -> m10_36  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_39  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_26  [key=2, style=dotted];
m10_38 -> m10_35  [key=0, style=bold, color=blue];
m10_84 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m10_84 -> m10_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_14  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToString"];
m13_11 -> m13_9  [key=0, style=bold, color=blue];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_14  [key=2, style=dotted];
m13_12 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m13_12 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m13_12 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m13_12 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider"];
m13_13 -> m13_11  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_4  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_5  [key=2, style=dotted];
m13_3 -> m13_0  [key=0, style=bold, color=blue];
m13_34 -> m13_34  [key=3, color=darkorchid, style=bold, label="Field variable System.Lazy<Hangfire.Storage.Monitoring.StatisticsDto> _statisticsLazy"];
m13_42 -> m13_43  [key=0, style=solid, color=green];
m13_42 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_43 -> m13_44  [key=0, style=solid, color=green];
m13_43 -> m13_45  [key=0, style=solid, color=green];
m13_43 -> m13_47  [key=2, style=dotted, color=green];
m13_44 -> m13_46  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_48  [key=2, style=dotted];
m13_46 -> m13_42  [key=0, style=bold, color=blue];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_6  [key=0, style=bold, color=blue];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_8  [key=0, style=bold, color=blue];
m13_10 -> m13_11  [key=0, style=solid];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_6  [key=0, style=bold, color=blue];
m13_7 -> m13_8  [key=0, style=solid];
m13_57 -> m13_70  [key=0, style=solid];
m13_70 -> m13_47  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_72  [key=2, style=dotted];
m13_71 -> m13_57  [key=0, style=bold, color=blue];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_49 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_51 -> m13_54  [key=0, style=solid, color=green];
m13_50 -> m13_51  [key=0, style=solid, color=green];
m13_50 -> m13_52  [key=0, style=solid];
m13_53 -> m13_42  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_55  [key=2, style=dotted];
m13_53 -> m13_56  [key=2, style=dotted];
m13_53 -> m13_57  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_54 -> m13_49  [key=0, style=bold, color=blue];
m13_36 -> m13_37  [key=0, style=solid];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_40  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_41  [key=2, style=dotted];
m13_39 -> m13_36  [key=0, style=bold, color=blue];
m13_58 -> m13_59  [key=0, style=solid];
m13_59 -> m13_60  [key=0, style=solid];
m13_59 -> m13_61  [key=2, style=dotted];
m13_60 -> m13_58  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_15 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_15 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_15 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_15 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_15 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_16 -> m13_17  [key=0, style=solid];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_15  [key=0, style=bold, color=blue];
m13_24 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m13_24 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m13_24 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m13_24 -> m13_25  [key=0, style=solid];
m13_26 -> m13_27  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_29 -> m13_30  [key=0, style=solid];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_34  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_35  [key=2, style=dotted];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label=owinContext];
m13_25 -> m13_33  [key=2, style=dotted];
m13_32 -> m13_24  [key=0, style=bold, color=blue];
m13_14 -> m13_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string body"];
m13_14 -> m13_62  [key=0, style=solid];
m13_14 -> m13_14  [key=3, color=darkorchid, style=bold, label="method methodReturn string TransformText"];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_6  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_67  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_15  [key=2, style=dotted];
m13_66 -> m13_68  [key=0, style=solid];
m13_66 -> m13_69  [key=2, style=dotted];
m13_66 -> m13_14  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_69  [key=2, style=dotted];
m13_68 -> m13_14  [key=0, style=bold, color=blue];
m13_73 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m13_73 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
}
