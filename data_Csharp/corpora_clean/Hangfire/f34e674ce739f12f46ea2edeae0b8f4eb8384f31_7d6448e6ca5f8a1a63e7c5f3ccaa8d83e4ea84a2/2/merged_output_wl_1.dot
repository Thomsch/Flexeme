digraph  {
n76 [label="Hangfire.Dashboard.RazorPage", span=""];
n0 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", label="Entry Hangfire.Dashboard.RazorPage.RazorPage()", span="31-31"];
n1 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", label="GenerationTime = Stopwatch.StartNew()", span="33-33"];
n2 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", label="Html = new HtmlHelper(this)", span="34-34"];
n4 [cluster="System.Diagnostics.Stopwatch.StartNew()", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
n3 [cluster="Hangfire.Dashboard.RazorPage.RazorPage()", label="Exit Hangfire.Dashboard.RazorPage.RazorPage()", span="31-31"];
n5 [cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", label="Entry Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="61-61"];
n6 [cluster="Hangfire.Dashboard.RazorPage.Execute()", label="Entry Hangfire.Dashboard.RazorPage.Execute()", span="62-62"];
n7 [cluster="Hangfire.Dashboard.RazorPage.Execute()", label="Exit Hangfire.Dashboard.RazorPage.Execute()", span="62-62"];
n8 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", label="Entry Hangfire.Dashboard.RazorPage.Query(string)", span="64-64"];
n9 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", label="return Request.GetQuery(key);", span="66-66"];
n10 [cluster="Hangfire.Dashboard.RazorPage.Query(string)", label="Exit Hangfire.Dashboard.RazorPage.Query(string)", span="64-64"];
n11 [cluster="Hangfire.Dashboard.DashboardRequest.GetQuery(string)", label="Entry Hangfire.Dashboard.DashboardRequest.GetQuery(string)", span="30-30"];
n12 [cluster="Hangfire.Dashboard.RazorPage.ToString()", label="Entry Hangfire.Dashboard.RazorPage.ToString()", span="69-69"];
n13 [cluster="Hangfire.Dashboard.RazorPage.ToString()", label="return TransformText(null);", span="71-71"];
n14 [cluster="Hangfire.Dashboard.RazorPage.ToString()", label="Exit Hangfire.Dashboard.RazorPage.ToString()", span="69-69"];
n15 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="Entry Hangfire.Dashboard.RazorPage.TransformText(string)", span="129-129"];
n16 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75"];
n17 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Context = parentPage.Context", span="77-77"];
n18 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Request = parentPage.Request", span="78-78"];
n19 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Response = parentPage.Response", span="79-79"];
n20 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Storage = parentPage.Storage", span="80-80"];
n21 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="AppPath = parentPage.AppPath", span="81-81"];
n22 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="DashboardOptions = parentPage.DashboardOptions", span="82-82"];
n23 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Url = parentPage.Url", span="83-83"];
n24 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="GenerationTime = parentPage.GenerationTime", span="85-85"];
n25 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="_statisticsLazy = parentPage._statisticsLazy", span="86-86"];
n26 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75"];
n27 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", span="89-89"];
n28 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Context = context", span="91-91"];
n29 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Request = context.Request", span="92-92"];
n30 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Response = context.Response", span="93-93"];
n31 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Storage = context.Storage", span="95-95"];
n32 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="AppPath = context.Options.AppPath", span="96-96"];
n33 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", color=red, community=0, label="0: DashboardOptions = context.Options", span="97-97"];
n34 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Url = new UrlHelper(context)", span="98-98"];
n35 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="_statisticsLazy = new Lazy<StatisticsDto>(() =>\r\n            {\r\n                var monitoring = Storage.GetMonitoringApi();\r\n                return monitoring.GetStatistics();\r\n            })", span="100-104"];
n37 [cluster="Hangfire.Dashboard.UrlHelper.UrlHelper(Hangfire.Dashboard.DashboardContext)", label="Entry Hangfire.Dashboard.UrlHelper.UrlHelper(Hangfire.Dashboard.DashboardContext)", span="37-37"];
n36 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", span="89-89"];
n38 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
n39 [cluster="lambda expression", label="Entry lambda expression", span="100-104"];
n40 [cluster="lambda expression", label="var monitoring = Storage.GetMonitoringApi()", span="102-102"];
n41 [cluster="lambda expression", label="return monitoring.GetStatistics();", span="103-103"];
n43 [cluster="Hangfire.JobStorage.GetMonitoringApi()", label="Entry Hangfire.JobStorage.GetMonitoringApi()", span="54-54"];
n42 [cluster="lambda expression", label="Exit lambda expression", span="100-104"];
n44 [cluster="Hangfire.Storage.IMonitoringApi.GetStatistics()", label="Entry Hangfire.Storage.IMonitoringApi.GetStatistics()", span="27-27"];
n45 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="108-108"];
n46 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", label="string.IsNullOrEmpty(textToAppend)", span="110-110"];
n48 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", label="_content.Append(textToAppend)", span="112-112"];
n47 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", label="return;", span="111-111"];
n50 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n49 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", label="Exit Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="108-108"];
n51 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n52 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="116-116"];
n53 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", label="value == null", span="118-118"];
n55 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", label="var html = value as NonEscapedString", span="120-120"];
n56 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", label="WriteLiteral(html?.ToString() ?? Encode(value.ToString()))", span="121-121"];
n54 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", label="return;", span="119-119"];
n57 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", label="Exit Hangfire.Dashboard.RazorPage.Write(object)", span="116-116"];
n58 [cluster="Hangfire.Dashboard.NonEscapedString.ToString()", label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27"];
n59 [cluster="object.ToString()", label="Entry object.ToString()", span="0-0"];
n60 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", label="Entry Hangfire.Dashboard.RazorPage.Encode(string)", span="144-144"];
n61 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="124-124"];
n62 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", label="return new NonEscapedString(_body);", span="126-126"];
n63 [cluster="Hangfire.Dashboard.RazorPage.RenderBody()", label="Exit Hangfire.Dashboard.RazorPage.RenderBody()", span="124-124"];
n64 [cluster="Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", label="Entry Hangfire.Dashboard.NonEscapedString.NonEscapedString(string)", span="22-22"];
n65 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="_body = body", span="131-131"];
n66 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="Execute()", span="133-133"];
n67 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="Layout != null", span="135-135"];
n68 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="Layout.Assign(this)", span="137-137"];
n70 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="return _content.ToString();", span="141-141"];
n69 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="return Layout.TransformText(_content.ToString());", span="138-138"];
n71 [cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", label="Exit Hangfire.Dashboard.RazorPage.TransformText(string)", span="129-129"];
n72 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n73 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : WebUtility.HtmlEncode(text);", span="146-148"];
n74 [cluster="Hangfire.Dashboard.RazorPage.Encode(string)", label="Exit Hangfire.Dashboard.RazorPage.Encode(string)", span="144-144"];
n75 [cluster="System.Net.WebUtility.HtmlEncode(string)", label="Entry System.Net.WebUtility.HtmlEncode(string)", span="0-0"];
d33 [cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.DashboardContext)", color=green, community=0, label="0: DashboardOptions = context.Options", span="97-97"];
m0_16 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m0_17 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="_transaction.Dispose()", span="47-47"];
m0_18 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.After(System.Reflection.MethodInfo)", span="43-43"];
m0_31 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26"];
m0_27 [cluster="string.Format(string, object)", file="CleanDatabaseAttribute.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_30 [cluster="Unk.Execute", file="CleanDatabaseAttribute.cs", label="Entry Unk.Execute", span=""];
m0_19 [cluster="Unk.Dispose", file="CleanDatabaseAttribute.cs", label="Entry Unk.Dispose", span=""];
m0_32 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m0_0 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", span="18-18"];
m0_1 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute()", span="18-18"];
m0_28 [cluster="SqlConnection.cstr", file="CleanDatabaseAttribute.cs", label="Entry SqlConnection.cstr", span=""];
m0_29 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetMasterConnectionString()", span="21-21"];
m0_15 [cluster="TransactionOptions.cstr", file="CleanDatabaseAttribute.cs", label="Entry TransactionOptions.cstr", span=""];
m0_26 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetDatabaseName()", span="16-16"];
m0_14 [cluster="TransactionScope.cstr", file="CleanDatabaseAttribute.cs", label="Entry TransactionScope.cstr", span=""];
m0_5 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="28-28"];
m0_6 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Monitor.Enter(GlobalLock)", span="30-30"];
m0_7 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="!_sqlObjectInstalled", span="32-32"];
m0_8 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="RecreateDatabaseAndInstallObjects()", span="34-34"];
m0_10 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="_transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = _isolationLevel })", span="38-40"];
m0_9 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="_sqlObjectInstalled = true", span="35-35"];
m0_11 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.Before(System.Reflection.MethodInfo)", span="28-28"];
m0_2 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="23-23"];
m0_3 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="_isolationLevel = isolationLevel", span="25-25"];
m0_4 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.CleanDatabaseAttribute(IsolationLevel)", span="23-23"];
m0_13 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="Entry Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m0_20 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", color=red, community=0, file="CleanDatabaseAttribute.cs", label="0: var recreateDatabaseSql = String.Format(\r\n                @''if db_id('{0}') is null create database [{0}]'',\r\n                ConnectionUtils.GetDatabaseName())", span="58-60"];
m0_21 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetMasterConnectionString())", span="62-63"];
m0_22 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="connection.Execute(recreateDatabaseSql)", span="65-65"];
m0_23 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="var connection = new SqlConnection(\r\n                ConnectionUtils.GetConnectionString())", span="68-69"];
m0_24 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="SqlServerObjectsInstaller.Install(connection)", span="71-71"];
m0_25 [cluster="Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", file="CleanDatabaseAttribute.cs", label="Exit Hangfire.SqlServer.Tests.CleanDatabaseAttribute.RecreateDatabaseAndInstallObjects()", span="56-56"];
m0_12 [cluster="System.Threading.Monitor.Enter(object)", file="CleanDatabaseAttribute.cs", label="Entry System.Threading.Monitor.Enter(object)", span="0-0"];
m0_33 [file="CleanDatabaseAttribute.cs", label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", span=""];
m2_17 [cluster="Unk.>", file="CountersAggregatorFacts.cs", label="Entry Unk.>", span=""];
m2_27 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m2_13 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40"];
m2_23 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: var storage = new SqlServerStorage(connection)", span="42-42"];
m2_24 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: return new CountersAggregator(storage, TimeSpan.Zero);", span="43-43"];
m2_25 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", file="CountersAggregatorFacts.cs", label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateAggregator(SqlConnection)", span="40-40"];
m2_18 [cluster="Unk.Single", file="CountersAggregatorFacts.cs", label="Entry Unk.Single", span=""];
m2_26 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="93-93"];
m2_12 [cluster="Unk.Execute", file="CountersAggregatorFacts.cs", label="Entry Unk.Execute", span=""];
m2_16 [cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42"];
m2_19 [cluster="Unk.Equal", file="CountersAggregatorFacts.cs", label="Entry Unk.Equal", span=""];
m2_14 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="CountersAggregatorFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m2_0 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12"];
m2_1 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=1, file="CountersAggregatorFacts.cs", label="0: string createSql = @''\r\ninsert into HangFire.Counter ([Key], [Value], ExpireAt) \r\nvalues ('key', 1, @expireAt)''", span="14-16"];
m2_2 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: var connection = CreateConnection()", span="18-18"];
m2_3 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: connection.Execute(createSql, new { expireAt = DateTime.UtcNow.AddHours(1) })", span="21-21"];
m2_4 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: var aggregator = CreateAggregator(connection)", span="23-23"];
m2_8 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: Assert.Equal(1, connection.Query<int>(@''select count(*) from HangFire.AggregatedCounter'').Single())", span="31-31"];
m2_5 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: var cts = new CancellationTokenSource()", span="24-24"];
m2_7 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: aggregator.Execute(cts.Token)", span="28-28"];
m2_6 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: cts.Cancel()", span="25-25"];
m2_9 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", file="CountersAggregatorFacts.cs", label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CountersAggregatorExecutesProperly()", span="12-12"];
m2_10 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35"];
m2_20 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", color=green, community=0, file="CountersAggregatorFacts.cs", label="0: return ConnectionUtils.CreateConnection();", span="37-37"];
m2_21 [cluster="Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", file="CountersAggregatorFacts.cs", label="Exit Hangfire.SqlServer.Tests.CountersAggregatorFacts.CreateConnection()", span="35-35"];
m2_15 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="CountersAggregatorFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_22 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="CountersAggregatorFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m2_11 [cluster="System.DateTime.AddHours(double)", file="CountersAggregatorFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m3_8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="67-67"];
m3_9 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="67-67"];
m3_0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="37-37"];
m3_1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="37-37"];
m3_10 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="75-75"];
m3_11 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="75-75"];
m3_4 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="52-52"];
m3_5 [cluster="Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseDashboardPath(string)", span="52-52"];
m3_2 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="44-44"];
m3_3 [cluster="Hangfire.IBootstrapperConfiguration.UseFilter(object)", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseFilter(object)", span="44-44"];
m3_12 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="83-83"];
m3_13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="83-83"];
m3_6 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="DashboardMiddleware.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="59-59"];
m3_7 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="DashboardMiddleware.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="59-59"];
m4_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="DashboardOptions.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22"];
m4_0 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m4_1 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="AppPath = ''/''", span="25-25"];
m4_2 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="AuthorizationFilters = new[] { new LocalRequestsOnlyAuthorizationFilter() }", span="26-26"];
m4_3 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="DashboardOptions.cs", label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m4_5 [file="DashboardOptions.cs", label="Hangfire.DashboardOptions", span=""];
m5_26 [cluster="Unk.GetTestJob", file="DashboardOwinExtensions.cs", label="Entry Unk.GetTestJob", span=""];
m5_205 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153"];
m5_12 [cluster="Unk.UseConnection", file="DashboardOwinExtensions.cs", label="Entry Unk.UseConnection", span=""];
m5_256 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="303-303"];
m5_257 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="305-316"];
m5_258 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="303-303"];
m5_82 [cluster="Unk.Equal", file="DashboardOwinExtensions.cs", label="Entry Unk.Equal", span=""];
m5_243 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158"];
m5_93 [cluster="Unk.SetJobState", file="DashboardOwinExtensions.cs", label="Entry Unk.SetJobState", span=""];
m5_192 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="222-222"];
m5_193 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="224-233"];
m5_194 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="222-222"];
m5_34 [cluster="Unk.ExpireJob", file="DashboardOwinExtensions.cs", label="Entry Unk.ExpireJob", span=""];
m5_3 [cluster="Unk.>", file="DashboardOwinExtensions.cs", label="Entry Unk.>", span=""];
m5_125 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m5_126 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                var record = sql.Query(''select * from HangFire.JobQueue'').Single();\r\n                Assert.Equal(''1'', record.JobId.ToString());\r\n                Assert.Equal(''default'', record.Queue);\r\n                Assert.Null(record.FetchedAt);\r\n            })", span="141-149"];
m5_127 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToQueue_AddsAJobToTheQueue()", span="139-139"];
m5_139 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m5_140 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="DashboardOwinExtensions.cs", label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="154-156"];
m5_141 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.GetTestJob(IDbConnection, string)", span="152-152"];
m5_22 [cluster="Unk.Query", file="DashboardOwinExtensions.cs", label="Entry Unk.Query", span=""];
m5_142 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m5_143 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n            })", span="162-170"];
m5_144 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="160-160"];
m5_33 [cluster="System.TimeSpan.FromDays(double)", file="DashboardOwinExtensions.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m5_94 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m5_95 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DashboardOwinExtensions.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="108-111"];
m5_96 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n                state.Object.Reason = ''Reason'';\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="113-135"];
m5_97 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="106-106"];
m5_298 [cluster="System.Action<T>.Invoke(T)", file="DashboardOwinExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_179 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139"];
m5_27 [cluster="System.DateTime.AddDays(double)", file="DashboardOwinExtensions.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m5_0 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m5_1 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="DashboardOwinExtensions.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null))", span="17-18"];
m5_2 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="15-15"];
m5_24 [cluster="Unk.ToString", file="DashboardOwinExtensions.cs", label="Entry Unk.ToString", span=""];
m5_124 [cluster="Unk.AddJobState", file="DashboardOwinExtensions.cs", label="Entry Unk.AddJobState", span=""];
m5_180 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="205-205"];
m5_181 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="207-218"];
m5_182 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="205-205"];
m5_48 [cluster="Unk.NotNull", file="DashboardOwinExtensions.cs", label="Entry Unk.NotNull", span=""];
m5_81 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DashboardOwinExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_268 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172"];
m5_78 [cluster="Mock<State>.cstr", file="DashboardOwinExtensions.cs", label="Entry Mock<State>.cstr", span=""];
m5_25 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="361-361"];
m5_299 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DashboardOwinExtensions.cs", label="var transaction = new SqlServerWriteOnlyTransaction(connection)", span="365-365"];
m5_300 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DashboardOwinExtensions.cs", label="action(transaction)", span="367-367"];
m5_301 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DashboardOwinExtensions.cs", label="transaction.Commit()", span="368-368"];
m5_302 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="361-361"];
m5_79 [cluster="Unk.Setup", file="DashboardOwinExtensions.cs", label="Entry Unk.Setup", span=""];
m5_281 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="337-337"];
m5_282 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="339-350"];
m5_283 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="337-337"];
m5_29 [cluster="Unk.Null", file="DashboardOwinExtensions.cs", label="Entry Unk.Null", span=""];
m5_155 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="174-174"];
m5_156 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="176-187"];
m5_157 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="174-174"];
m5_89 [cluster="Unk.SerializeData", file="DashboardOwinExtensions.cs", label="Entry Unk.SerializeData", span=""];
m5_303 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45"];
m5_35 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m5_36 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DashboardOwinExtensions.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="47-50"];
m5_37 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="52-64"];
m5_38 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="45-45"];
m5_230 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="271-271"];
m5_231 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="273-282"];
m5_232 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="271-271"];
m5_289 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="341-345"];
m5_4 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="18-18"];
m5_5 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="new SqlServerWriteOnlyTransaction(null)", span="18-18"];
m5_6 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="18-18"];
m5_14 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="31-31"];
m5_15 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="32-32"];
m5_13 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="29-41"];
m5_16 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="34-34"];
m5_17 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var job = GetTestJob(sql, jobId)", span="36-36"];
m5_19 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="39-39"];
m5_31 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="34-34"];
m5_30 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="34-34"];
m5_18 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1))", span="37-37"];
m5_20 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(anotherJob.ExpireAt)", span="40-40"];
m5_21 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="29-41"];
m5_32 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="34-34"];
m5_40 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54"];
m5_41 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="55-55"];
m5_39 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="52-64"];
m5_42 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.PersistJob(jobId))", span="57-57"];
m5_43 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var job = GetTestJob(sql, jobId)", span="59-59"];
m5_45 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="62-62"];
m5_50 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.PersistJob(jobId)", span="57-57"];
m5_49 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="57-57"];
m5_44 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(job.ExpireAt)", span="60-60"];
m5_46 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.NotNull(anotherJob.ExpireAt)", span="63-63"];
m5_47 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="52-64"];
m5_51 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="57-57"];
m5_58 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77"];
m5_59 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="78-78"];
m5_57 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="75-102"];
m5_64 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="86-86"];
m5_65 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var job = GetTestJob(sql, jobId)", span="88-88"];
m5_68 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var anotherJob = GetTestJob(sql, anotherJobId)", span="92-92"];
m5_71 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="96-96"];
m5_91 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.SetJobState(jobId, state.Object)", span="86-86"];
m5_72 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="97-97"];
m5_60 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var state = new Mock<State>()", span="80-80"];
m5_61 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="81-81"];
m5_62 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="82-83"];
m5_63 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="state.Object.Reason = ''Reason''", span="84-84"];
m5_83 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="81-81"];
m5_86 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="82-82"];
m5_90 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="86-86"];
m5_66 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''State'', job.StateName)", span="89-89"];
m5_67 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.NotNull(job.StateId)", span="90-90"];
m5_69 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(anotherJob.StateName)", span="93-93"];
m5_70 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(anotherJob.StateId)", span="94-94"];
m5_73 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''State'', jobState.Name)", span="98-98"];
m5_74 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="99-99"];
m5_75 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.NotNull(jobState.CreatedAt)", span="100-100"];
m5_76 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="101-101"];
m5_77 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="75-102"];
m5_84 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.Name", span="81-81"];
m5_85 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="81-81"];
m5_87 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.SerializeData()", span="82-82"];
m5_88 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="82-82"];
m5_92 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="86-86"];
m5_99 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="115-115"];
m5_98 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="113-135"];
m5_104 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="123-123"];
m5_105 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var job = GetTestJob(sql, jobId)", span="125-125"];
m5_108 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="129-129"];
m5_100 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var state = new Mock<State>()", span="117-117"];
m5_122 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddJobState(jobId, state.Object)", span="123-123"];
m5_109 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="130-130"];
m5_101 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="state.Setup(x => x.Name).Returns(''State'')", span="118-118"];
m5_102 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="119-120"];
m5_103 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="state.Object.Reason = ''Reason''", span="121-121"];
m5_115 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="118-118"];
m5_118 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="119-119"];
m5_121 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="123-123"];
m5_106 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(job.StateName)", span="126-126"];
m5_107 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(job.StateId)", span="127-127"];
m5_110 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''State'', jobState.Name)", span="131-131"];
m5_111 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''Reason'', jobState.Reason)", span="132-132"];
m5_112 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.NotNull(jobState.CreatedAt)", span="133-133"];
m5_113 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="134-134"];
m5_114 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="113-135"];
m5_116 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.Name", span="118-118"];
m5_117 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="118-118"];
m5_119 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.SerializeData()", span="119-119"];
m5_120 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="119-119"];
m5_123 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="123-123"];
m5_128 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="141-149"];
m5_129 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="143-143"];
m5_130 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var record = sql.Query(''select * from HangFire.JobQueue'').Single()", span="145-145"];
m5_135 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="143-143"];
m5_131 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''1'', record.JobId.ToString())", span="146-146"];
m5_132 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''default'', record.Queue)", span="147-147"];
m5_133 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Null(record.FetchedAt)", span="148-148"];
m5_134 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="141-149"];
m5_136 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToQueue(''default'', ''1'')", span="143-143"];
m5_137 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="143-143"];
m5_145 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="162-170"];
m5_146 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="164-164"];
m5_147 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="166-166"];
m5_151 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="164-164"];
m5_148 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''my-key'', record.Key)", span="168-168"];
m5_149 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(1, record.Value)", span="169-169"];
m5_150 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="162-170"];
m5_152 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.IncrementCounter(''my-key'')", span="164-164"];
m5_153 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="164-164"];
m5_158 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="176-187"];
m5_159 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="178-182"];
m5_160 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="184-184"];
m5_163 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="178-182"];
m5_161 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(2, recordCount)", span="186-186"];
m5_162 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="176-187"];
m5_164 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.IncrementCounter(''my-key'')", span="180-180"];
m5_165 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.IncrementCounter(''my-key'')", span="181-181"];
m5_166 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="178-182"];
m5_170 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="193-201"];
m5_171 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="195-195"];
m5_172 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="197-197"];
m5_176 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="195-195"];
m5_173 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''my-key'', record.Key)", span="199-199"];
m5_174 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(-1, record.Value)", span="200-200"];
m5_175 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="193-201"];
m5_177 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.DecrementCounter(''my-key'')", span="195-195"];
m5_178 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="195-195"];
m5_183 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="207-218"];
m5_184 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="209-213"];
m5_185 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="215-215"];
m5_188 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="209-213"];
m5_186 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(2, recordCount)", span="217-217"];
m5_187 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="207-218"];
m5_189 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.DecrementCounter(''my-key'')", span="211-211"];
m5_190 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.DecrementCounter(''my-key'')", span="212-212"];
m5_191 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="209-213"];
m5_195 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="224-233"];
m5_196 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="226-226"];
m5_197 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="228-228"];
m5_202 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="226-226"];
m5_198 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''my-key'', record.Key)", span="230-230"];
m5_199 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''my-value'', record.Value)", span="231-231"];
m5_200 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(0.0, record.Score, 2)", span="232-232"];
m5_201 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="224-233"];
m5_203 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="226-226"];
m5_204 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="226-226"];
m5_209 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="239-250"];
m5_210 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="241-245"];
m5_211 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="247-247"];
m5_214 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="241-245"];
m5_212 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(2, recordCount)", span="249-249"];
m5_213 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="239-250"];
m5_215 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="243-243"];
m5_216 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''another-value'')", span="244-244"];
m5_217 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="241-245"];
m5_221 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="256-267"];
m5_222 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="258-262"];
m5_223 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="264-264"];
m5_226 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="258-262"];
m5_224 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(1, recordCount)", span="266-266"];
m5_225 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="256-267"];
m5_227 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="260-260"];
m5_228 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="261-261"];
m5_229 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="258-262"];
m5_233 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="273-282"];
m5_234 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="275-275"];
m5_235 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="277-277"];
m5_240 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="275-275"];
m5_236 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''my-key'', record.Key)", span="279-279"];
m5_237 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(''my-value'', record.Value)", span="280-280"];
m5_238 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(3.2, record.Score, 3)", span="281-281"];
m5_239 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="273-282"];
m5_241 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="275-275"];
m5_242 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="275-275"];
m5_247 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="288-299"];
m5_248 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="290-294"];
m5_249 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="296-296"];
m5_252 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="290-294"];
m5_250 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(3.2, record.Score, 3)", span="298-298"];
m5_251 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="288-299"];
m5_253 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="292-292"];
m5_254 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="293-293"];
m5_255 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="290-294"];
m5_259 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="305-316"];
m5_260 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="307-311"];
m5_261 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="313-313"];
m5_264 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="307-311"];
m5_262 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(0, recordCount)", span="315-315"];
m5_263 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="305-316"];
m5_265 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="309-309"];
m5_266 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.RemoveFromSet(''my-key'', ''my-value'')", span="310-310"];
m5_267 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="307-311"];
m5_272 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="322-333"];
m5_273 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="324-328"];
m5_274 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="330-330"];
m5_277 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="324-328"];
m5_275 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(1, recordCount)", span="332-332"];
m5_276 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="322-333"];
m5_278 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="326-326"];
m5_279 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.RemoveFromSet(''my-key'', ''different-value'')", span="327-327"];
m5_280 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="324-328"];
m5_284 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="339-350"];
m5_285 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="341-345"];
m5_286 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="347-347"];
m5_287 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Assert.Equal(1, recordCount)", span="349-349"];
m5_288 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="339-350"];
m5_290 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.AddToSet(''my-key'', ''my-value'')", span="343-343"];
m5_291 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="x.RemoveFromSet(''different-key'', ''my-value'')", span="344-344"];
m5_292 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="341-345"];
m5_269 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="320-320"];
m5_270 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="322-333"];
m5_271 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="320-320"];
m5_218 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="254-254"];
m5_219 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="256-267"];
m5_220 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="254-254"];
m5_293 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="353-353"];
m5_294 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DashboardOwinExtensions.cs", label="var connection = ConnectionUtils.CreateConnection()", span="355-355"];
m5_295 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DashboardOwinExtensions.cs", label="action(connection)", span="357-357"];
m5_296 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="353-353"];
m5_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34"];
m5_23 [cluster="Unk.Single", file="DashboardOwinExtensions.cs", label="Entry Unk.Single", span=""];
m5_8 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m5_9 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DashboardOwinExtensions.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="24-27"];
m5_10 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow < job.ExpireAt && job.ExpireAt < DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="29-41"];
m5_11 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.ExpireJob_SetsJobExpirationData()", span="22-22"];
m5_53 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m5_54 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DashboardOwinExtensions.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="70-73"];
m5_55 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<State>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n                state.Object.Reason = ''Reason'';\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="75-102"];
m5_56 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="68-68"];
m5_28 [cluster="Unk.True", file="DashboardOwinExtensions.cs", label="Entry Unk.True", span=""];
m5_138 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114"];
m5_297 [cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m5_154 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125"];
m5_80 [cluster="Unk.Returns", file="DashboardOwinExtensions.cs", label="Entry Unk.Returns", span=""];
m5_206 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="237-237"];
m5_207 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="239-250"];
m5_208 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="237-237"];
m5_52 [cluster="Unk.PersistJob", file="DashboardOwinExtensions.cs", label="Entry Unk.PersistJob", span=""];
m5_244 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="286-286"];
m5_245 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="288-299"];
m5_246 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="286-286"];
m5_167 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="DashboardOwinExtensions.cs", label="Entry HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="191-191"];
m5_168 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="DashboardOwinExtensions.cs", label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n            })", span="193-201"];
m5_169 [cluster="HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="DashboardOwinExtensions.cs", label="Exit HangFire.SqlServer.Tests.WriteTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="191-191"];
m5_304 [file="DashboardOwinExtensions.cs", label="HangFire.SqlServer.Tests.WriteTransactionFacts", span=""];
m5_305 [file="DashboardOwinExtensions.cs", label=arrangeSql, span=""];
m5_306 [file="DashboardOwinExtensions.cs", label=jobId, span=""];
m5_307 [file="DashboardOwinExtensions.cs", label=arrangeSql, span=""];
m5_308 [file="DashboardOwinExtensions.cs", label=jobId, span=""];
m5_309 [file="DashboardOwinExtensions.cs", label=arrangeSql, span=""];
m5_310 [file="DashboardOwinExtensions.cs", label=jobId, span=""];
m5_311 [file="DashboardOwinExtensions.cs", label=state, span=""];
m5_312 [file="DashboardOwinExtensions.cs", label=arrangeSql, span=""];
m5_313 [file="DashboardOwinExtensions.cs", label=jobId, span=""];
m5_314 [file="DashboardOwinExtensions.cs", label=state, span=""];
m6_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHistoryRenderer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="JobHistoryRenderer.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m6_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="JobHistoryRenderer.cs", label="transaction == null", span="27-27"];
m6_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="JobHistoryRenderer.cs", label="Transaction = transaction", span="29-29"];
m6_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="JobHistoryRenderer.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m6_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", file="JobHistoryRenderer.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IAtomicWriteTransaction)", span="23-23"];
m6_6 [file="JobHistoryRenderer.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m7_42 [cluster="string.Format(string, object, object, object)", file="LayoutPage.generated.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m7_36 [cluster="Hangfire.Dashboard.UrlHelper.Home()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.Home()", span="38-38"];
m7_33 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="104-104"];
m7_37 [cluster="Hangfire.Dashboard.Pages.Navigation.Navigation()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.Navigation.Navigation()", span="25-25"];
m7_0 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.Execute()", span="40-40"];
m7_1 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n'')", span="44-44"];
m7_2 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''<!DOCTYPE html>\r\n<html lang=\''en\''>\r\n<head>\r\n    <title>'')", span="50-50"];
m7_3 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Title)", span="55-55"];
m7_4 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral('' - Hangfire</title>\r\n    <meta http-equiv=\''X-UA-Compatible\'' content=\''IE=edge\''>\r\n '' +\r\n''   <meta charset=\''utf-8\'' />\r\n    <meta name=\''viewport\'' content=\''width=device-wid'' +\r\n''th, initial-scale=1.0\''>\r\n    <link rel=\''stylesheet\'' href=\'''')", span="60-62"];
m7_5 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.To(''/css''))", span="67-67"];
m7_6 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@'''''' />\r\n</head>\r\n    <body>\r\n        <!-- Wrap all page content here -->\r\n        <div id=''''wrap''''>\r\n\r\n            <!-- Fixed navbar -->\r\n            <div class=''''navbar navbar-default navbar-fixed-top''''>\r\n                <div class=''''container''''>\r\n                    <div class=''''navbar-header''''>\r\n                        <button type=''''button'''' class=''''navbar-toggle'''' data-toggle=''''collapse'''' data-target=''''.navbar-collapse''''>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                            <span class=''''icon-bar''''></span>\r\n                        </button>\r\n                        <a class=''''navbar-brand'''' href='''''')", span="72-87"];
m7_7 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.Home())", span="92-92"];
m7_8 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''>Hangfire Dashboard</a>\r\n                    </div>\r\n                    <div cl'' +\r\n''ass=\''collapse navbar-collapse\''>\r\n                        '')", span="97-98"];
m7_9 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Html.RenderPartial(new Navigation()))", span="103-103"];
m7_10 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''\r\n'')", span="108-108"];
m7_11 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: @AppPath != null", span="113-113"];
m7_12 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=red, community=1, file="LayoutPage.generated.cs", label="0: WriteLiteral(''                            <ul class=\''nav navbar-nav navbar-right\''>\r\n           '' +\r\n''                     <li>\r\n                                    <a href=\'''')", span="118-119"];
m7_15 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=red, community=1, file="LayoutPage.generated.cs", label="0: WriteLiteral(''                    </div>\r\n                    <!--/.nav-collapse -->\r\n         '' +\r\n''       </div>\r\n            </div>\r\n\r\n            <!-- Begin page content -->\r\n  '' +\r\n''          <div class=\''container\'' style=\''margin-bottom: 20px;\''>\r\n                '' +\r\n'''')", span="145-148"];
m7_13 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: Write(AppPath)", span="124-124"];
m7_14 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@''''''>\r\n                                        <span class=''''glyphicon glyphicon-log-out''''></span>\r\n                                        Back to site\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n'')", span="129-135"];
m7_16 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(RenderBody())", span="153-153"];
m7_17 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(@''\r\n            </div>\r\n        </div>\r\n\r\n        <div id=''''footer''''>\r\n            <div class=''''container''''>\r\n                <ul class=''''list-inline credit''''>\r\n                    <li>\r\n                        <a href=''''http://hangfire.io/'''' target=''''_blank''''>Hangfire\r\n'')", span="158-167"];
m7_18 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="var version = GetType().Assembly.GetName().Version", span="173-173"];
m7_19 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''                            '')", span="179-179"];
m7_20 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(String.Format(''{0}.{1}.{2}'', version.Major, version.Minor, version.Build))", span="184-184"];
m7_21 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </li>\r\n                    <l'' +\r\n''i>'')", span="189-190"];
m7_22 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Storage)", span="195-195"];
m7_23 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''</li>\r\n                    <li>Time: '')", span="200-200"];
m7_24 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(DateTime.UtcNow)", span="205-205"];
m7_25 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral('' GMT</li>\r\n                    <li>Generated: '')", span="210-210"];
m7_26 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(GenerationTime.Elapsed.TotalMilliseconds.ToString(''N''))", span="215-215"];
m7_27 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", color=green, community=0, file="LayoutPage.generated.cs", label="0: WriteLiteral(''ms</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n   '' +\r\n''     <script>\r\n            (function (hangFire) {\r\n                hangFire.conf'' +\r\n''ig = {\r\n                    pollInterval: 2000,\r\n                    pollUrl: \''')", span="220-222"];
m7_28 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.To(''/stats''))", span="227-227"];
m7_29 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\'\r\n                };\r\n            })(window.Hangfire = window.Hangfire || {});\r\n'' +\r\n''        </script>\r\n        <script src=\'''')", span="232-233"];
m7_30 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Write(Url.To(''/js''))", span="238-238"];
m7_31 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="WriteLiteral(''\''></script>\r\n    </body>\r\n</html>\r\n'')", span="243-243"];
m7_32 [cluster="Hangfire.Dashboard.Pages.LayoutPage.Execute()", file="LayoutPage.generated.cs", label="Exit Hangfire.Dashboard.Pages.LayoutPage.Execute()", span="40-40"];
m7_41 [cluster="System.Reflection.Assembly.GetName()", file="LayoutPage.generated.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m7_40 [cluster="object.GetType()", file="LayoutPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m7_38 [cluster="Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.HtmlHelper.RenderPartial(Hangfire.Dashboard.RazorPage)", span="82-82"];
m7_34 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111"];
m7_43 [cluster="double.ToString(string)", file="LayoutPage.generated.cs", label="Entry double.ToString(string)", span="0-0"];
m7_35 [cluster="Hangfire.Dashboard.UrlHelper.To(string)", file="LayoutPage.generated.cs", label="Entry Hangfire.Dashboard.UrlHelper.To(string)", span="33-33"];
m7_44 [file="LayoutPage.generated.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m8_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RequestDispatcherContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_0 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="Entry Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m8_1 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="RequestDispatcherContext.cs", label="0: jobStorage == null", span="31-31"];
m8_3 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="owinEnvironment == null", span="32-32"];
m8_5 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="uriMatch == null", span="33-33"];
m8_7 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="AppPath = appPath", span="35-35"];
m8_8 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="JobStorage = jobStorage", span="36-36"];
m8_9 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="OwinEnvironment = owinEnvironment", span="37-37"];
m8_10 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="UriMatch = uriMatch", span="38-38"];
m8_2 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="RequestDispatcherContext.cs", label="0: throw new ArgumentNullException(''jobStorage'');", span="31-31"];
m8_4 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="throw new ArgumentNullException(''owinEnvironment'');", span="32-32"];
m8_6 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="throw new ArgumentNullException(''uriMatch'');", span="33-33"];
m8_11 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="RequestDispatcherContext.cs", label="Exit Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m8_13 [file="RequestDispatcherContext.cs", label="Hangfire.Dashboard.RequestDispatcherContext", span=""];
m9_28 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31"];
m9_29 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31"];
m9_24 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", span="29-29"];
m9_25 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", span="29-29"];
m9_8 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m9_9 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m9_10 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", span="20-20"];
m9_11 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", span="20-20"];
m9_6 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m9_7 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m9_36 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", span="37-37"];
m9_37 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", span="37-37"];
m9_38 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", span="38-38"];
m9_39 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", span="38-38"];
m9_4 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Servers()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Servers()", span="16-16"];
m9_5 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Servers()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.Servers()", span="16-16"];
m9_32 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="34-34"];
m9_33 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="34-34"];
m9_12 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="21-21"];
m9_13 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="21-21"];
m9_0 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m9_1 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m9_26 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="30-30"];
m9_27 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="30-30"];
m9_30 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="32-32"];
m9_31 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="32-32"];
m9_20 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26"];
m9_21 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26"];
m9_34 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", span="36-36"];
m9_35 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", span="36-36"];
m9_40 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", span="39-39"];
m9_41 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", span="39-39"];
m9_22 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m9_23 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m9_2 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m9_3 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m9_18 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m9_19 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m9_14 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="23-23"];
m9_15 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="23-23"];
m9_16 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m9_17 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="SqlServerConnection.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m10_363 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m10_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m10_623 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="891-894"];
m10_624 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m10_155 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m10_621 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerConnectionFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_401 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m10_57 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84"];
m10_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m10_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1206-1208"];
m10_812 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1210-1225"];
m10_813 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m10_478 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m10_479 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="682-683"];
m10_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m10_460 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m10_364 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m10_365 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="530-531"];
m10_366 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m10_739 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m10_740 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1092-1096"];
m10_741 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m10_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m10_668 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="970-972"];
m10_669 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="974-987"];
m10_670 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m10_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m10_865 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1300-1302"];
m10_866 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1304-1319"];
m10_867 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m10_575 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m10_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m10_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="378-384"];
m10_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m10_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m10_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="494-501"];
m10_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="503-512"];
m10_346 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m10_905 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="SqlServerConnectionFacts.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m10_304 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m10_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="437-440"];
m10_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="442-454"];
m10_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m10_153 [cluster="Unk.ToString", file="SqlServerConnectionFacts.cs", label="Entry Unk.ToString", span=""];
m10_25 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", span="42-42"];
m10_26 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(ConnectionUtils.CreateConnection(), IsolationLevel.Serializable, null))", span="44-45"];
m10_27 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''queueProviders'', exception.ParamName)", span="47-47"];
m10_28 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", span="42-42"];
m10_857 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m10_858 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1290-1294"];
m10_859 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m10_24 [cluster="SqlServerConnection.cstr", file="SqlServerConnectionFacts.cs", label="Entry SqlServerConnection.cstr", span=""];
m10_209 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m10_210 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="251-253"];
m10_211 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m10_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m10_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1334-1338"];
m10_885 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m10_450 [cluster="Unk.NotEqual", file="SqlServerConnectionFacts.cs", label="Entry Unk.NotEqual", span=""];
m10_829 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m10_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m10_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1057-1059"];
m10_721 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1061-1076"];
m10_722 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m10_281 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m10_282 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="390-393"];
m10_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="395-407"];
m10_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m10_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m10_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="518-524"];
m10_355 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m10_792 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m10_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m10_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="625-626"];
m10_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m10_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m10_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1147-1149"];
m10_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1151-1166"];
m10_775 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m10_389 [cluster="Unk.Execute", file="SqlServerConnectionFacts.cs", label="Entry Unk.Execute", span=""];
m10_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m10_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="306-318"];
m10_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="320-335"];
m10_242 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m10_658 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m10_659 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="945-947"];
m10_660 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="949-964"];
m10_661 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m10_259 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m10_847 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m10_848 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1280-1284"];
m10_849 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m10_488 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m10_6 [cluster="Mock<IPersistentJobQueue>.cstr", file="SqlServerConnectionFacts.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m10_402 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m10_403 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="582-588"];
m10_404 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m10_764 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m10_39 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63"];
m10_685 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m10_33 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", span="51-51"];
m10_34 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="53-53"];
m10_35 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="55-55"];
m10_37 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="Assert.Equal(ConnectionState.Closed, sqlConnection.State)", span="59-59"];
m10_36 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="connection.Dispose()", span="57-57"];
m10_38 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", span="51-51"];
m10_205 [cluster="int.ToString()", file="SqlServerConnectionFacts.cs", label="Entry int.ToString()", span="0-0"];
m10_326 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m10_327 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="472-478"];
m10_328 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m10_203 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m10_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m10_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="341-344"];
m10_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="346-360"];
m10_253 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m10_650 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m10_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m10_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1344-1346"];
m10_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1348-1363"];
m10_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m10_156 [cluster="System.DateTime.AddDays(double)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m10_439 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m10_7 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="SqlServerConnectionFacts.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m10_154 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m10_566 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m10_567 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="804-805"];
m10_568 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m10_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m10_512 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="720-726"];
m10_513 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m10_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m10_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="259-263"];
m10_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m10_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m10_577 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="811-815"];
m10_578 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m10_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m10_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="632-636"];
m10_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="638-646"];
m10_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m10_583 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m10_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="821-823"];
m10_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="825-843"];
m10_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m10_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m10_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1172-1178"];
m10_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m10_712 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m10_713 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1047-1051"];
m10_714 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m10_793 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m10_794 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1184-1190"];
m10_795 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m10_62 [cluster="Unk.Dequeue", file="SqlServerConnectionFacts.cs", label="Entry Unk.Dequeue", span=""];
m10_894 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1348-1363"];
m10_11 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="26-26"];
m10_12 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="26-26"];
m10_13 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="26-26"];
m10_21 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="36-36"];
m10_22 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="new SqlServerConnection(null, IsolationLevel.Serializable, _providers)", span="36-36"];
m10_23 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="36-36"];
m10_29 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="45-45"];
m10_30 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="new SqlServerConnection(ConnectionUtils.CreateConnection(), IsolationLevel.Serializable, null)", span="45-45"];
m10_31 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="45-45"];
m10_50 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="79-87"];
m10_51 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var token = new CancellationToken()", span="81-81"];
m10_53 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.FetchNextJob(queues, token)", span="84-84"];
m10_52 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var queues = new[] { ''default'' }", span="82-82"];
m10_54 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="_queue.Verify(x => x.Dequeue(queues, token))", span="86-86"];
m10_60 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="x.Dequeue(queues, token)", span="86-86"];
m10_55 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="79-87"];
m10_59 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="86-86"];
m10_61 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="86-86"];
m10_67 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="93-101"];
m10_68 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var token = new CancellationToken()", span="95-95"];
m10_71 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="99-100"];
m10_75 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="100-100"];
m10_69 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="96-96"];
m10_70 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="97-97"];
m10_72 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="93-101"];
m10_74 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="100-100"];
m10_76 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="100-100"];
m10_80 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="107-111"];
m10_81 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var transaction = connection.CreateWriteTransaction()", span="109-109"];
m10_82 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(transaction)", span="110-110"];
m10_83 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="107-111"];
m10_89 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="117-121"];
m10_90 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="119-119"];
m10_91 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(@lock)", span="120-120"];
m10_92 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="117-121"];
m10_98 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="127-137"];
m10_99 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="129-134"];
m10_103 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="130-134"];
m10_100 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="136-136"];
m10_102 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="130-134"];
m10_101 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="127-137"];
m10_104 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="130-134"];
m10_110 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="143-153"];
m10_111 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="145-150"];
m10_115 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="146-150"];
m10_112 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="152-152"];
m10_114 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="146-150"];
m10_113 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="143-153"];
m10_116 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="146-150"];
m10_118 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="147-147"];
m10_119 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="SampleMethod(''hello'')", span="147-147"];
m10_120 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="147-147"];
m10_126 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="159-195"];
m10_127 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="161-161"];
m10_128 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="162-166"];
m10_131 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="171-171"];
m10_144 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="188-191"];
m10_133 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="173-173"];
m10_142 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="185-185"];
m10_143 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="186-186"];
m10_129 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(jobId)", span="168-168"];
m10_160 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="163-163"];
m10_130 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotEmpty(jobId)", span="169-169"];
m10_132 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="172-172"];
m10_134 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="174-174"];
m10_135 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="175-175"];
m10_136 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="177-177"];
m10_137 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="invocationData.Arguments = sqlJob.Arguments", span="178-178"];
m10_138 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = invocationData.Deserialize()", span="180-180"];
m10_139 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="181-181"];
m10_140 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="182-182"];
m10_141 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="183-183"];
m10_145 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="193-193"];
m10_163 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="191-191"];
m10_166 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="191-191"];
m10_146 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="194-194"];
m10_147 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="159-195"];
m10_161 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="SampleMethod(''Hello'')", span="163-163"];
m10_162 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="163-163"];
m10_164 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string) x.Name", span="191-191"];
m10_165 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="191-191"];
m10_167 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string) x.Value", span="191-191"];
m10_168 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="191-191"];
m10_172 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="201-202"];
m10_173 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="201-202"];
m10_176 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetJobData(null)", span="202-202"];
m10_174 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="201-202"];
m10_175 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="202-202"];
m10_177 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="202-202"];
m10_182 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="208-212"];
m10_183 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetJobData(''1'')", span="210-210"];
m10_184 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="211-211"];
m10_185 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="208-212"];
m10_193 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="227-234"];
m10_191 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="223-245"];
m10_192 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="225-225"];
m10_194 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="236-236"];
m10_206 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="225-225"];
m10_195 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="238-238"];
m10_196 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result.Job)", span="239-239"];
m10_197 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Succeeded'', result.State)", span="240-240"];
m10_198 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="241-241"];
m10_199 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result.LoadException)", span="242-242"];
m10_200 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="243-243"];
m10_201 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="244-244"];
m10_202 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="223-245"];
m10_207 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="SampleMethod(''wrong'')", span="225-225"];
m10_208 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="225-225"];
m10_212 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="252-253"];
m10_213 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="252-253"];
m10_216 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetStateData(null)", span="253-253"];
m10_214 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="252-253"];
m10_215 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="253-253"];
m10_217 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="253-253"];
m10_222 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="259-263"];
m10_223 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetStateData(''1'')", span="261-261"];
m10_224 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="262-262"];
m10_225 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="259-263"];
m10_232 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="290-292"];
m10_230 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="283-300"];
m10_231 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="285-288"];
m10_233 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetStateData(jobId.ToString())", span="294-294"];
m10_234 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="295-295"];
m10_235 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Name'', result.Name)", span="297-297"];
m10_236 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Reason'', result.Reason)", span="298-298"];
m10_237 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="299-299"];
m10_238 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="283-300"];
m10_245 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="327-329"];
m10_243 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="320-335"];
m10_244 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="322-325"];
m10_246 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetStateData(jobId.ToString())", span="331-331"];
m10_247 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="332-332"];
m10_248 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="334-334"];
m10_249 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="320-335"];
m10_255 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="348-355"];
m10_254 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="346-360"];
m10_256 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="357-357"];
m10_257 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result.LoadException)", span="359-359"];
m10_258 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="346-360"];
m10_263 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="366-372"];
m10_264 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="368-369"];
m10_268 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="369-369"];
m10_265 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="371-371"];
m10_267 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="369-369"];
m10_266 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="366-372"];
m10_269 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="369-369"];
m10_274 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="378-384"];
m10_275 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="380-381"];
m10_279 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="381-381"];
m10_276 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="383-383"];
m10_278 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="381-381"];
m10_277 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="378-384"];
m10_280 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="381-381"];
m10_286 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="397-397"];
m10_285 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="395-407"];
m10_288 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="400-400"];
m10_289 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="402-404"];
m10_287 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="string jobId = job.Id.ToString()", span="398-398"];
m10_290 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value'', parameter.Value)", span="406-406"];
m10_291 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="395-407"];
m10_297 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="420-420"];
m10_296 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="418-431"];
m10_299 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="423-423"];
m10_300 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="424-424"];
m10_301 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="426-428"];
m10_298 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="string jobId = job.Id.ToString()", span="421-421"];
m10_302 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="430-430"];
m10_303 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="418-431"];
m10_309 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="444-444"];
m10_308 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="442-454"];
m10_311 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="447-447"];
m10_312 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="449-451"];
m10_310 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="string jobId = job.Id.ToString()", span="445-445"];
m10_313 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal((string) null, parameter.Value)", span="453-453"];
m10_314 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="442-454"];
m10_318 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="460-466"];
m10_319 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="462-463"];
m10_323 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetJobParameter(null, ''hello'')", span="463-463"];
m10_320 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="465-465"];
m10_322 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="463-463"];
m10_321 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="460-466"];
m10_324 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="463-463"];
m10_329 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="472-478"];
m10_330 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="474-475"];
m10_334 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetJobParameter(''1'', null)", span="475-475"];
m10_331 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="477-477"];
m10_333 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="475-475"];
m10_332 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="472-478"];
m10_335 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="475-475"];
m10_339 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="484-488"];
m10_340 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="486-486"];
m10_341 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(value)", span="487-487"];
m10_342 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="484-488"];
m10_348 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="505-507"];
m10_347 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="503-512"];
m10_349 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="509-509"];
m10_350 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''value'', value)", span="511-511"];
m10_351 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="503-512"];
m10_356 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="518-524"];
m10_357 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="520-521"];
m10_361 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="521-521"];
m10_358 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="523-523"];
m10_360 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="521-521"];
m10_359 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="518-524"];
m10_362 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="521-521"];
m10_367 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="530-531"];
m10_368 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="530-531"];
m10_371 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="531-531"];
m10_369 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="530-531"];
m10_370 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="531-531"];
m10_372 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="531-531"];
m10_376 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="537-543"];
m10_377 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="539-540"];
m10_378 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="542-542"];
m10_379 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="537-543"];
m10_385 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql)", span="559-559"];
m10_384 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="557-564"];
m10_386 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="561-561"];
m10_387 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''-1.0'', result)", span="563-563"];
m10_388 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="557-564"];
m10_393 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="570-576"];
m10_394 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="572-573"];
m10_398 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(null, new ServerContext())", span="573-573"];
m10_395 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="575-575"];
m10_397 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="573-573"];
m10_396 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="570-576"];
m10_399 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="573-573"];
m10_405 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="582-588"];
m10_406 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="584-585"];
m10_410 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(''server'', null)", span="585-585"];
m10_407 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="587-587"];
m10_409 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="585-585"];
m10_408 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="582-588"];
m10_411 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="585-585"];
m10_415 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="594-619"];
m10_416 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="596-600"];
m10_417 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(''server'', context1)", span="601-601"];
m10_418 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="603-603"];
m10_423 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(''server'', context2)", span="615-615"];
m10_424 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="616-616"];
m10_419 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''server'', server.Id)", span="604-604"];
m10_420 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="605-607"];
m10_421 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(server.LastHeartbeat)", span="608-608"];
m10_422 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="610-614"];
m10_425 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''server'', sameServer.Id)", span="617-617"];
m10_426 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="618-618"];
m10_427 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="594-619"];
m10_433 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="625-626"];
m10_434 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="625-626"];
m10_437 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveServer(null)", span="626-626"];
m10_435 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="625-626"];
m10_436 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="626-626"];
m10_438 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="626-626"];
m10_445 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql)", span="640-640"];
m10_444 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="638-646"];
m10_446 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveServer(''Server1'')", span="642-642"];
m10_447 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="644-644"];
m10_448 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="645-645"];
m10_449 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="638-646"];
m10_454 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="652-653"];
m10_455 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="652-653"];
m10_458 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.Heartbeat(null)", span="653-653"];
m10_456 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="652-653"];
m10_457 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="653-653"];
m10_459 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="653-653"];
m10_466 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql)", span="667-667"];
m10_465 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="665-676"];
m10_467 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.Heartbeat(''server1'')", span="669-669"];
m10_468 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="671-672"];
m10_469 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="674-674"];
m10_472 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="672-672"];
m10_475 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="672-672"];
m10_470 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="675-675"];
m10_471 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="665-676"];
m10_473 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string)x.Id", span="672-672"];
m10_474 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="672-672"];
m10_476 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(DateTime)x.LastHeartbeat", span="672-672"];
m10_477 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="672-672"];
m10_481 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="682-683"];
m10_482 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="682-683"];
m10_485 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="683-683"];
m10_483 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="682-683"];
m10_484 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="683-683"];
m10_486 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="683-683"];
m10_494 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="695-701"];
m10_493 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="693-707"];
m10_495 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="703-703"];
m10_496 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="705-705"];
m10_497 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="706-706"];
m10_498 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="693-707"];
m10_504 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="713-714"];
m10_505 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="714-714"];
m10_508 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetAllItemsFromSet(null)", span="714-714"];
m10_506 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="713-714"];
m10_507 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="714-714"];
m10_509 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="714-714"];
m10_514 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="720-726"];
m10_515 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="722-722"];
m10_516 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="724-724"];
m10_517 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result.Count)", span="725-725"];
m10_518 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="720-726"];
m10_524 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="739-744"];
m10_523 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="736-753"];
m10_525 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="747-747"];
m10_526 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result.Count)", span="750-750"];
m10_527 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Contains(''1'', result)", span="751-751"];
m10_528 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Contains(''2'', result)", span="752-752"];
m10_529 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="736-753"];
m10_533 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="759-765"];
m10_534 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="761-762"];
m10_538 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="762-762"];
m10_535 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="764-764"];
m10_537 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="762-762"];
m10_536 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="759-765"];
m10_539 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="762-762"];
m10_544 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="771-777"];
m10_545 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="773-774"];
m10_549 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="774-774"];
m10_546 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="776-776"];
m10_548 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="774-774"];
m10_547 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="771-777"];
m10_550 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="774-774"];
m10_554 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="783-798"];
m10_555 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="785-789"];
m10_556 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="791-794"];
m10_557 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="796-796"];
m10_560 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="794-794"];
m10_563 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="794-794"];
m10_558 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="797-797"];
m10_559 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="783-798"];
m10_561 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string)x.Field", span="794-794"];
m10_562 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="794-794"];
m10_564 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string)x.Value", span="794-794"];
m10_565 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="794-794"];
m10_569 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="804-805"];
m10_570 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="805-805"];
m10_573 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetAllEntriesFromHash(null)", span="805-805"];
m10_571 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="804-805"];
m10_572 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="805-805"];
m10_574 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="805-805"];
m10_579 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="811-815"];
m10_580 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="813-813"];
m10_581 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="814-814"];
m10_582 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="811-815"];
m10_588 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="828-833"];
m10_587 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="825-843"];
m10_589 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="836-836"];
m10_590 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="839-839"];
m10_591 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result.Count)", span="840-840"];
m10_592 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="841-841"];
m10_593 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="842-842"];
m10_594 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="825-843"];
m10_598 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="849-853"];
m10_599 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="851-852"];
m10_602 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetSetCount(null)", span="852-852"];
m10_600 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="849-853"];
m10_601 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="852-852"];
m10_603 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="852-852"];
m10_608 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="859-863"];
m10_609 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetCount(''my-set'')", span="861-861"];
m10_610 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="862-862"];
m10_611 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="859-863"];
m10_617 [cluster="lambda expression", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                })", span="875-880"];
m10_616 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="873-885"];
m10_618 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetCount(''set-1'')", span="882-882"];
m10_619 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="884-884"];
m10_620 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="873-885"];
m10_625 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="891-894"];
m10_626 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="893-893"];
m10_629 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="893-893"];
m10_627 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="891-894"];
m10_628 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="893-893"];
m10_630 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="893-893"];
m10_637 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="906-914"];
m10_636 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="904-919"];
m10_638 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="916-916"];
m10_639 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="918-918"];
m10_640 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="904-919"];
m10_644 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="925-929"];
m10_645 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="927-928"];
m10_648 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetCounter(null)", span="928-928"];
m10_646 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="925-929"];
m10_647 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="928-928"];
m10_649 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="928-928"];
m10_654 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="935-939"];
m10_655 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetCounter(''my-counter'')", span="937-937"];
m10_656 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="938-938"];
m10_657 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="935-939"];
m10_663 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="952-957"];
m10_662 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="949-964"];
m10_664 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetCounter(''counter-1'')", span="960-960"];
m10_665 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="963-963"];
m10_666 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="949-964"];
m10_672 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="977-981"];
m10_671 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="974-987"];
m10_673 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetCounter(''counter-1'')", span="984-984"];
m10_674 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(12, result)", span="986-986"];
m10_675 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="974-987"];
m10_679 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="993-996"];
m10_680 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="995-995"];
m10_683 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetHashCount(null)", span="995-995"];
m10_681 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="993-996"];
m10_682 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="995-995"];
m10_684 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="995-995"];
m10_689 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1002-1006"];
m10_690 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashCount(''my-hash'')", span="1004-1004"];
m10_691 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="1005-1005"];
m10_692 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1002-1006"];
m10_698 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1019-1024"];
m10_697 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1016-1031"];
m10_699 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashCount(''hash-1'')", span="1027-1027"];
m10_700 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="1030-1030"];
m10_701 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1016-1031"];
m10_705 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1037-1041"];
m10_706 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1039-1040"];
m10_709 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetHashTtl(null)", span="1040-1040"];
m10_707 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1037-1041"];
m10_708 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1040-1040"];
m10_710 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1040-1040"];
m10_715 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1047-1051"];
m10_716 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1049-1049"];
m10_717 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.Zero)", span="1050-1050"];
m10_718 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1047-1051"];
m10_724 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1064-1068"];
m10_723 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1061-1076"];
m10_725 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1071-1071"];
m10_726 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1074-1074"];
m10_727 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1075-1075"];
m10_728 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1061-1076"];
m10_732 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1082-1086"];
m10_733 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1084-1085"];
m10_736 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetListCount(null)", span="1085-1085"];
m10_734 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1082-1086"];
m10_735 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1085-1085"];
m10_737 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1085-1085"];
m10_742 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1092-1096"];
m10_743 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListCount(''my-list'')", span="1094-1094"];
m10_744 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="1095-1095"];
m10_745 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1092-1096"];
m10_751 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1109-1114"];
m10_750 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1106-1121"];
m10_752 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListCount(''list-1'')", span="1117-1117"];
m10_753 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="1120-1120"];
m10_754 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1106-1121"];
m10_758 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1127-1131"];
m10_759 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1129-1130"];
m10_762 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetListTtl(null)", span="1130-1130"];
m10_760 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1127-1131"];
m10_761 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1130-1130"];
m10_763 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1130-1130"];
m10_768 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1137-1141"];
m10_769 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListTtl(''my-list'')", span="1139-1139"];
m10_770 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.Zero)", span="1140-1140"];
m10_771 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1137-1141"];
m10_777 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1154-1158"];
m10_776 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1151-1166"];
m10_778 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListTtl(''list-1'')", span="1161-1161"];
m10_779 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1164-1164"];
m10_780 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1165-1165"];
m10_781 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1151-1166"];
m10_785 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1172-1178"];
m10_786 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1174-1175"];
m10_790 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetValueFromHash(null, ''name'')", span="1175-1175"];
m10_787 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1177-1177"];
m10_789 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1175-1175"];
m10_788 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1172-1178"];
m10_791 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1175-1175"];
m10_796 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1184-1190"];
m10_797 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1186-1187"];
m10_801 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetValueFromHash(''key'', null)", span="1187-1187"];
m10_798 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1189-1189"];
m10_800 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1187-1187"];
m10_799 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1184-1190"];
m10_802 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1187-1187"];
m10_806 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1196-1200"];
m10_807 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1198-1198"];
m10_808 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="1199-1199"];
m10_809 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1196-1200"];
m10_815 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1213-1218"];
m10_814 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1210-1225"];
m10_816 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1221-1221"];
m10_817 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''1'', result)", span="1224-1224"];
m10_818 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1210-1225"];
m10_822 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1231-1237"];
m10_823 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1233-1234"];
m10_827 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1234-1234"];
m10_824 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1236-1236"];
m10_826 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1234-1234"];
m10_825 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1231-1237"];
m10_828 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1234-1234"];
m10_833 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1243-1247"];
m10_834 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1245-1245"];
m10_835 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Empty(result)", span="1246-1246"];
m10_836 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1243-1247"];
m10_843 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1260-1267"];
m10_842 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1257-1274"];
m10_844 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1270-1270"];
m10_845 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1273-1273"];
m10_846 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1257-1274"];
m10_850 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1280-1284"];
m10_851 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1282-1283"];
m10_854 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetAllItemsFromList(null)", span="1283-1283"];
m10_852 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1280-1284"];
m10_853 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1283-1283"];
m10_855 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1283-1283"];
m10_860 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1290-1294"];
m10_861 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1292-1292"];
m10_862 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Empty(result)", span="1293-1293"];
m10_863 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1290-1294"];
m10_869 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1307-1312"];
m10_868 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1304-1319"];
m10_870 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1315-1315"];
m10_871 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1318-1318"];
m10_872 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1304-1319"];
m10_876 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1325-1328"];
m10_877 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1327-1327"];
m10_880 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetSetTtl(null)", span="1327-1327"];
m10_878 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1325-1328"];
m10_879 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1327-1327"];
m10_881 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1327-1327"];
m10_886 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1334-1338"];
m10_887 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1336-1336"];
m10_888 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.Zero)", span="1337-1337"];
m10_889 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1334-1338"];
m10_895 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1351-1355"];
m10_896 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1358-1358"];
m10_897 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1361-1361"];
m10_898 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1362-1362"];
m10_899 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1348-1363"];
m10_125 [cluster="Unk.UseConnections", file="SqlServerConnectionFacts.cs", label="Entry Unk.UseConnections", span=""];
m10_412 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m10_413 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="594-619"];
m10_414 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m10_540 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m10_84 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71"];
m10_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m10_694 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1012-1014"];
m10_695 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1016-1031"];
m10_696 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m10_9 [cluster="Unk.Returns", file="SqlServerConnectionFacts.cs", label="Entry Unk.Returns", span=""];
m10_390 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m10_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="570-576"];
m10_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m10_117 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m10_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m10_502 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="713-714"];
m10_503 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m10_711 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m10_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m10_901 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1368-1368"];
m10_903 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="action(sqlConnection, connection)", span="1371-1371"];
m10_902 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="1369-1369"];
m10_904 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m10_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m10_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="366-372"];
m10_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m10_179 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m10_180 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="208-212"];
m10_181 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m10_77 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m10_78 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="107-111"];
m10_79 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m10_157 [cluster="System.DateTime.AddMinutes(double)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m10_336 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m10_337 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="484-488"];
m10_338 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m10_66 [cluster="Unk.UseConnection", file="SqlServerConnectionFacts.cs", label="Entry Unk.UseConnection", span=""];
m10_20 [cluster="Unk.Equal", file="SqlServerConnectionFacts.cs", label="Entry Unk.Equal", span=""];
m10_121 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m10_910 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m10_631 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m10_729 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m10_730 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1082-1086"];
m10_731 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m10_56 [cluster="System.Threading.CancellationToken.CancellationToken()", file="SqlServerConnectionFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m10_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m10_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="759-765"];
m10_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m10_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m10_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="23-23"];
m10_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="25-25"];
m10_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="provider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(_queue.Object)", span="26-27"];
m10_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="29-29"];
m10_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m10_32 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m10_178 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154"];
m10_94 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76"];
m10_107 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m10_108 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="143-153"];
m10_109 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m10_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m10_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="869-871"];
m10_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="873-885"];
m10_615 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m10_765 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m10_766 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1137-1141"];
m10_767 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m10_151 [cluster="Unk.Query", file="SqlServerConnectionFacts.cs", label="Entry Unk.Query", span=""];
m10_489 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m10_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="689-691"];
m10_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="693-707"];
m10_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m10_755 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m10_756 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1127-1131"];
m10_757 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m10_909 [cluster="System.Action<T>.Invoke(T)", file="SqlServerConnectionFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m10_226 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m10_227 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="269-281"];
m10_228 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="283-300"];
m10_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m10_803 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m10_804 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1196-1200"];
m10_805 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m10_73 [cluster="Unk.Add", file="SqlServerConnectionFacts.cs", label="Entry Unk.Add", span=""];
m10_85 [cluster="Unk.NotNull", file="SqlServerConnectionFacts.cs", label="Entry Unk.NotNull", span=""];
m10_63 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m10_64 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="93-101"];
m10_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m10_8 [cluster="Unk.Setup", file="SqlServerConnectionFacts.cs", label="Entry Unk.Setup", span=""];
m10_676 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m10_677 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="993-996"];
m10_678 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m10_186 [cluster="Unk.Null", file="SqlServerConnectionFacts.cs", label="Entry Unk.Null", span=""];
m10_46 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m10_47 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="79-87"];
m10_48 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m10_519 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m10_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="732-734"];
m10_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="736-753"];
m10_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m10_10 [cluster="PersistentJobQueueProviderCollection.cstr", file="SqlServerConnectionFacts.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m10_106 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m10_204 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m10_499 [cluster="System.DateTime.AddHours(double)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m10_150 [cluster="Unk.NotEmpty", file="SqlServerConnectionFacts.cs", label="Entry Unk.NotEmpty", span=""];
m10_15 [cluster="Unk.GetJobQueue", file="SqlServerConnectionFacts.cs", label="Entry Unk.GetJobQueue", span=""];
m10_837 [cluster="Unk.Empty", file="SqlServerConnectionFacts.cs", label="Entry Unk.Empty", span=""];
m10_541 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m10_542 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="771-777"];
m10_543 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m10_686 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m10_687 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1002-1006"];
m10_688 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m10_702 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m10_703 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1037-1041"];
m10_704 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m10_49 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m10_906 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="var connection = new SqlServerConnection( \r\n                ConnectionUtils.CreateConnection(),\r\n                IsolationLevel.Serializable,\r\n                _providers)", span="1377-1380"];
m10_907 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="action(connection)", span="1382-1382"];
m10_908 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m10_510 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m10_58 [cluster="Unk.Verify", file="SqlServerConnectionFacts.cs", label="Entry Unk.Verify", span=""];
m10_641 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m10_642 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="925-929"];
m10_643 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m10_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m10_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1231-1237"];
m10_821 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m10_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m10_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="460-466"];
m10_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m10_428 [cluster="string.StartsWith(string)", file="SqlServerConnectionFacts.cs", label="Entry string.StartsWith(string)", span="0-0"];
m10_487 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m10_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m10_839 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1253-1255"];
m10_840 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1257-1274"];
m10_841 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m10_159 [cluster="Unk.ToDictionary", file="SqlServerConnectionFacts.cs", label="Entry Unk.ToDictionary", span=""];
m10_500 [cluster="System.TimeSpan.FromHours(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m10_95 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m10_96 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="127-137"];
m10_97 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m10_651 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m10_652 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="935-939"];
m10_653 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m10_856 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m10_873 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m10_874 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1325-1328"];
m10_875 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m10_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m10_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="117-121"];
m10_88 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m10_148 [cluster="System.DateTime.DateTime(int, int, int)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m10_14 [cluster="Unk.>", file="SqlServerConnectionFacts.cs", label="Entry Unk.>", span=""];
m10_270 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m10_595 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m10_596 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="849-853"];
m10_597 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m10_93 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m10_380 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m10_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="549-555"];
m10_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="557-564"];
m10_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m10_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m10_633 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="900-902"];
m10_634 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="904-919"];
m10_635 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m10_149 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m10_292 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m10_293 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="413-416"];
m10_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="418-431"];
m10_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m10_882 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m10_325 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m10_400 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m10_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerConnectionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191"];
m10_352 [cluster="Unk.GetJobParameter", file="SqlServerConnectionFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m10_461 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m10_462 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="659-663"];
m10_463 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="665-676"];
m10_464 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m10_830 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m10_831 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1243-1247"];
m10_832 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m10_551 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m10_552 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="783-798"];
m10_553 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m10_187 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m10_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="218-221"];
m10_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="223-245"];
m10_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m10_429 [cluster="Unk.Contains", file="SqlServerConnectionFacts.cs", label="Entry Unk.Contains", span=""];
m10_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m10_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, IsolationLevel.Serializable, _providers))", span="35-36"];
m10_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="38-38"];
m10_19 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m10_451 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m10_452 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="652-653"];
m10_453 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m10_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m10_747 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: string arrangeSql = @''\r\ninsert into Hangfire.List ([Key])\r\nvalues (@key)''", span="1102-1104"];
m10_748 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1106-1121"];
m10_749 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m10_604 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m10_152 [cluster="Unk.Single", file="SqlServerConnectionFacts.cs", label="Entry Unk.Single", span=""];
m10_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m10_170 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="201-202"];
m10_171 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m10_122 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m10_123 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="159-195"];
m10_124 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m10_158 [cluster="Unk.True", file="SqlServerConnectionFacts.cs", label="Entry Unk.True", span=""];
m10_373 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m10_374 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="537-543"];
m10_375 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m10_40 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m10_41 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="66-66"];
m10_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers, ownsConnection: false)", span="68-68"];
m10_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="Assert.Equal(ConnectionState.Open, sqlConnection.State)", span="72-72"];
m10_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="connection.Dispose()", span="70-70"];
m10_45 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m10_738 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m10_605 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m10_606 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="859-863"];
m10_607 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m10_911 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m10_912 [file="SqlServerConnectionFacts.cs", label=token, span=""];
m10_913 [file="SqlServerConnectionFacts.cs", label=queues, span=""];
m10_914 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_915 [file="SqlServerConnectionFacts.cs", label=token, span=""];
m10_916 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_917 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_918 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_919 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_920 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_921 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_922 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_923 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_924 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_925 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_926 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_927 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_928 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_929 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_930 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_931 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_932 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_933 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_934 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_935 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_936 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_937 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_938 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_939 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_940 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_941 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_942 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_943 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_944 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_945 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_946 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_947 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_948 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_949 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_950 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_951 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_952 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_953 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_954 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_955 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_956 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_957 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_958 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_959 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_960 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_961 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_962 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_963 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_964 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_965 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_966 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_967 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_968 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_969 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_970 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m10_971 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m10_972 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m11_36 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m11_223 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerObjectsInstaller.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_227 [cluster="Unk.TryParse", file="SqlServerObjectsInstaller.cs", label="Entry Unk.TryParse", span=""];
m11_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SqlServerObjectsInstaller.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m11_42 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="77-77"];
m11_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var job = Redis.GetValuesFromHash(\r\n                        String.Format(''hangfire:job:{0}'', scheduledJob.Key),\r\n                        new[] { ''Type'', ''Args'' })", span="90-92"];
m11_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var dto = job.TrueForAll(x => x == null)\r\n                        ? null\r\n                        : new ScheduleDto\r\n                        {\r\n                            ScheduledAt = JobHelper.FromTimestamp((long)scheduledJob.Value),\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            Queue = JobHelper.TryToGetQueue(job[0]),\r\n                            Type = job[0]\r\n                        }", span="94-102"];
m11_46 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label=scheduledJobs, span="88-88"];
m11_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="result.Add(scheduledJob.Key, dto)", span="104-104"];
m11_44 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="81-84"];
m11_45 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var result = new Dictionary<string, ScheduleDto>()", span="86-86"];
m11_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="return result;", span="107-107"];
m11_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label=Redis, span="79-79"];
m11_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="77-77"];
m11_148 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m11_295 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m11_29 [cluster="Unk.GetJobsWithProperties", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m11_269 [cluster="KeyValuePair<string, T>.cstr", file="SqlServerObjectsInstaller.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m11_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SqlServerObjectsInstaller.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m11_129 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m11_296 [cluster="Unk.CreatePipeline", file="SqlServerObjectsInstaller.cs", label="Entry Unk.CreatePipeline", span=""];
m11_166 [cluster="Unk.GetValueFromHash", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetValueFromHash", span=""];
m11_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m11_26 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromStringTimestamp(state[0])\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-73"];
m11_25 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60"];
m11_24 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerObjectsInstaller.cs", label=Redis, span="55-55"];
m11_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m11_38 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m11_260 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="440-440"];
m11_261 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerObjectsInstaller.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = redis.GetValuesFromHash(String.Format(''hangfire:job:{0}'', x), properties),\r\n                    State = stateProperties != null ? redis.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', x), stateProperties) : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="447-457"];
m11_262 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IEnumerable<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="440-440"];
m11_191 [cluster="Unk.ContainsKey", file="SqlServerObjectsInstaller.cs", label="Entry Unk.ContainsKey", span=""];
m11_138 [cluster="Unk.FromNullableStringTimestamp", file="SqlServerObjectsInstaller.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m11_168 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m11_270 [cluster="Unk.selector", file="SqlServerObjectsInstaller.cs", label="Entry Unk.selector", span=""];
m11_11 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m11_12 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=green, community=0, file="SqlServerObjectsInstaller.cs", label="0: Redis", span="30-30"];
m11_13 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="SqlServerObjectsInstaller.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32"];
m11_14 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m11_60 [cluster="Unk.TryToGetQueue", file="SqlServerObjectsInstaller.cs", label="Entry Unk.TryToGetQueue", span=""];
m11_153 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="379-379"];
m11_211 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="390-390"];
m11_208 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="dates.Add(endDate)", span="386-386"];
m11_205 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var dates = new List<DateTime>()", span="383-383"];
m11_207 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="i < 24", span="384-384"];
m11_212 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="391-391"];
m11_204 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var endDate = DateTime.UtcNow", span="382-382"];
m11_209 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="endDate = endDate.AddHours(-1)", span="387-387"];
m11_213 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var result = new Dictionary<DateTime, long>()", span="393-393"];
m11_206 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var i = 0", span="384-384"];
m11_215 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="i < dates.Count", span="394-394"];
m11_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="result.Add(dates[i], value)", span="402-402"];
m11_210 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="i++", span="384-384"];
m11_217 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="397-397"];
m11_221 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="return result;", span="405-405"];
m11_214 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var i = 0", span="394-394"];
m11_220 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="i++", span="394-394"];
m11_216 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="long value", span="396-396"];
m11_218 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="value = 0", span="399-399"];
m11_222 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="379-379"];
m11_52 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m11_88 [cluster="HangFire.Web.ServerDto.ServerDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m11_192 [cluster="Unk.Where", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Where", span=""];
m11_170 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="333-333"];
m11_172 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="337-337"];
m11_171 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label=Redis, span="335-335"];
m11_173 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="338-338"];
m11_176 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="return JobState.Apply(\r\n                    Redis, \r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="345-348"];
m11_174 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="String.IsNullOrEmpty(queue)", span="340-340"];
m11_175 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="return false;", span="342-342"];
m11_177 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="333-333"];
m11_125 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m11_253 [cluster="System.DateTime.AddDays(double)", file="SqlServerObjectsInstaller.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m11_56 [cluster="Unk.TrueForAll", file="SqlServerObjectsInstaller.cs", label="Entry Unk.TrueForAll", span=""];
m11_321 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="492-492"];
m11_264 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = redis.GetValuesFromHash(String.Format(''hangfire:job:{0}'', x), properties),\r\n                    State = stateProperties != null ? redis.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', x), stateProperties) : null\r\n                }", span="448-453"];
m11_338 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="506-506"];
m11_263 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="448-453"];
m11_265 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="448-453"];
m11_337 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="506-506"];
m11_339 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="506-506"];
m11_135 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="260-266"];
m11_145 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="284-292"];
m11_194 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="373-373"];
m11_198 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="373-373"];
m11_201 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="373-373"];
m11_195 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="!hiddenProperties.Contains(x.Key)", span="373-373"];
m11_267 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="454-456"];
m11_126 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="222-227"];
m11_258 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="422-422"];
m11_137 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="260-266"];
m11_136 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="260-266"];
m11_147 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="284-292"];
m11_146 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new DequeuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            State = job[2],\r\n                            CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                            FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                            CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                        }", span="284-292"];
m11_196 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="373-373"];
m11_200 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="373-373"];
m11_199 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.Key", span="373-373"];
m11_203 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="373-373"];
m11_202 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.Value", span="373-373"];
m11_266 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="454-456"];
m11_268 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="454-456"];
m11_271 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="456-456"];
m11_128 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="222-227"];
m11_127 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromStringTimestamp(state[0]),\r\n                        }", span="222-227"];
m11_257 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="422-422"];
m11_259 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="422-422"];
m11_340 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="507-507"];
m11_32 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="66-73"];
m11_39 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="73-73"];
m11_98 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="168-177"];
m11_108 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="195-201"];
m11_62 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="94-94"];
m11_229 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="390-390"];
m11_254 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="421-421"];
m11_273 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="456-456"];
m11_272 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="y == null", span="456-456"];
m11_331 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="499-499"];
m11_334 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="500-500"];
m11_304 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Servers = x", span="480-480"];
m11_310 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Queues = x", span="484-484"];
m11_316 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Scheduled = x", span="488-488"];
m11_322 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Processing = x", span="492-492"];
m11_329 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="496-496"];
m11_335 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Failed = x", span="500-500"];
m11_341 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="stats.Enqueued += x", span="507-507"];
m11_342 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="507-507"];
m11_34 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="66-73"];
m11_33 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromStringTimestamp(state[0])\r\n                    }", span="66-73"];
m11_41 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="73-73"];
m11_40 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.Value.StartedAt", span="73-73"];
m11_100 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="168-177"];
m11_99 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                    }", span="168-177"];
m11_110 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="195-201"];
m11_109 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromStringTimestamp(state[0]),\r\n                    }", span="195-201"];
m11_64 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="94-94"];
m11_63 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x == null", span="94-94"];
m11_230 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="390-390"];
m11_231 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="390-390"];
m11_256 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="421-421"];
m11_255 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.ToString(''yyyy-MM-dd'')", span="421-421"];
m11_324 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="495-495"];
m11_328 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="496-496"];
m11_333 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="499-499"];
m11_332 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="499-499"];
m11_336 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="500-500"];
m11_299 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="479-479"];
m11_303 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="480-480"];
m11_305 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="480-480"];
m11_306 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="483-483"];
m11_309 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="484-484"];
m11_311 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="484-484"];
m11_312 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="487-487"];
m11_315 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="488-488"];
m11_317 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="488-488"];
m11_318 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Entry lambda expression", span="491-491"];
m11_323 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="492-492"];
m11_330 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="496-496"];
m11_326 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="495-495"];
m11_325 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="495-495"];
m11_301 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="479-479"];
m11_300 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetSetCount(''hangfire:servers'')", span="479-479"];
m11_308 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="483-483"];
m11_307 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetSetCount(''hangfire:queues'')", span="483-483"];
m11_314 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="487-487"];
m11_313 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="487-487"];
m11_319 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="491-491"];
m11_320 [cluster="lambda expression", file="SqlServerObjectsInstaller.cs", label="Exit lambda expression", span="491-491"];
m11_28 [cluster="Unk.GetRangeFromSortedSet", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m11_91 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlServerObjectsInstaller.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_189 [cluster="Unk.ToList", file="SqlServerObjectsInstaller.cs", label="Entry Unk.ToList", span=""];
m11_54 [cluster="Unk.Format", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Format", span=""];
m11_154 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="304-304"];
m11_156 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerObjectsInstaller.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="308-308"];
m11_155 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerObjectsInstaller.cs", label=Redis, span="306-306"];
m11_157 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="304-304"];
m11_297 [cluster="Unk.QueueCommand", file="SqlServerObjectsInstaller.cs", label="Entry Unk.QueueCommand", span=""];
m11_92 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="154-154"];
m11_95 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                    });", span="163-177"];
m11_94 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="158-161"];
m11_93 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerObjectsInstaller.cs", label=Redis, span="156-156"];
m11_96 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="154-154"];
m11_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m11_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m11_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerObjectsInstaller.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m11_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerObjectsInstaller.cs", label=Redis, span="14-14"];
m11_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m11_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m11_101 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m11_58 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m11_232 [cluster="System.DateTime.ToString(string)", file="SqlServerObjectsInstaller.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m11_102 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="181-181"];
m11_104 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from, \r\n                    from + count - 1)", span="185-188"];
m11_105 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromStringTimestamp(state[0]),\r\n                    });", span="190-201"];
m11_103 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerObjectsInstaller.cs", label=Redis, span="183-183"];
m11_106 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="181-181"];
m11_124 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="SqlServerObjectsInstaller.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m11_226 [cluster="Unk.ElementAt", file="SqlServerObjectsInstaller.cs", label="Entry Unk.ElementAt", span=""];
m11_107 [cluster="Unk.GetRangeFromList", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetRangeFromList", span=""];
m11_112 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="205-205"];
m11_119 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="var length = Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="229-229"];
m11_120 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="var dequeued = Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="230-230"];
m11_116 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label=queues, span="212-212"];
m11_118 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromStringTimestamp(state[0]),\r\n                        })", span="217-227"];
m11_121 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="232-238"];
m11_117 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="var firstJobIds = Redis.GetRangeFromList(\r\n                        String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="214-215"];
m11_114 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="209-209"];
m11_115 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="210-210"];
m11_122 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="return result;", span="241-241"];
m11_113 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label=Redis, span="207-207"];
m11_123 [cluster="HangFire.Web.JobStorage.Queues()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="205-205"];
m11_65 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="111-111"];
m11_67 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerObjectsInstaller.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="115-115"];
m11_66 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerObjectsInstaller.cs", label=Redis, span="113-113"];
m11_68 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="111-111"];
m11_111 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m11_89 [cluster="Unk.Parse", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Parse", span=""];
m11_298 [cluster="Unk.Flush", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Flush", span=""];
m11_61 [cluster="Unk.Add", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Add", span=""];
m11_278 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="468-468"];
m11_290 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="var queueName = queue", span="504-504"];
m11_289 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label=queues, span="502-502"];
m11_291 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="505-507"];
m11_281 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="474-474"];
m11_288 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="498-500"];
m11_292 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.Flush()", span="510-510"];
m11_280 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="var stats = new StatisticsDto()", span="472-472"];
m11_282 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="var pipeline = Redis.CreatePipeline()", span="476-476"];
m11_287 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''), \r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="494-496"];
m11_293 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="return stats;", span="513-513"];
m11_279 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label=Redis, span="470-470"];
m11_283 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="478-480"];
m11_284 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''), \r\n                        x => stats.Queues = x)", span="482-484"];
m11_285 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''), \r\n                        x => stats.Scheduled = x)", span="486-488"];
m11_286 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''), \r\n                        x => stats.Processing = x)", span="490-492"];
m11_294 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="468-468"];
m11_74 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="127-127"];
m11_79 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="var server = Redis.GetAllEntriesFromHash(\r\n                        String.Format(''hangfire:server:{0}'', serverName))", span="135-136"];
m11_80 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="var queues = Redis.GetAllItemsFromList(\r\n                        String.Format(''hangfire:server:{0}:queues'', serverName))", span="138-139"];
m11_78 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label=serverNames, span="133-133"];
m11_81 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="result.Add(new ServerDto\r\n                        {\r\n                            Name = serverName,\r\n                            WorkersCount = int.Parse(server[''WorkerCount'']),\r\n                            Queues = queues,\r\n                            StartedAt = JobHelper.FromStringTimestamp(server[''StartedAt''])\r\n                        })", span="141-147"];
m11_76 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="131-131"];
m11_77 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="var result = new List<ServerDto>(serverNames.Count)", span="132-132"];
m11_82 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="return result;", span="150-150"];
m11_75 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label=Redis, span="129-129"];
m11_83 [cluster="HangFire.Web.JobStorage.Servers()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="127-127"];
m11_274 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="460-460"];
m11_276 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerObjectsInstaller.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="464-464"];
m11_275 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerObjectsInstaller.cs", label=Redis, span="462-462"];
m11_277 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="460-460"];
m11_149 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="296-296"];
m11_151 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerObjectsInstaller.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="300-300"];
m11_150 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerObjectsInstaller.cs", label=Redis, span="298-298"];
m11_152 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="296-296"];
m11_139 [cluster="string.Equals(string, System.StringComparison)", file="SqlServerObjectsInstaller.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m11_169 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m11_224 [cluster="System.DateTime.AddHours(double)", file="SqlServerObjectsInstaller.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m11_85 [cluster="List<ServerDto>.cstr", file="SqlServerObjectsInstaller.cs", label="Entry List<ServerDto>.cstr", span=""];
m11_69 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="408-408"];
m11_241 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="422-422"];
m11_240 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="421-421"];
m11_238 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="dates.Add(endDate)", span="417-417"];
m11_242 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="424-424"];
m11_237 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="startDate <= endDate", span="415-415"];
m11_236 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var dates = new List<DateTime>()", span="413-413"];
m11_245 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="i < stringDates.Count", span="427-427"];
m11_234 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var endDate = DateTime.UtcNow.Date", span="411-411"];
m11_243 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var result = new Dictionary<DateTime, long>()", span="426-426"];
m11_239 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="endDate = endDate.AddDays(-1)", span="418-418"];
m11_247 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="430-430"];
m11_235 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var startDate = endDate.AddDays(-7)", span="412-412"];
m11_249 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="result.Add(dates[i], value)", span="434-434"];
m11_244 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="var i = 0", span="427-427"];
m11_250 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="i++", span="427-427"];
m11_246 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="long value", span="429-429"];
m11_251 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="return result;", span="437-437"];
m11_248 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="value = 0", span="432-432"];
m11_252 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="408-408"];
m11_4 [cluster="Unk.GetSortedSetCount", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetSortedSetCount", span=""];
m11_15 [cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m11_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerObjectsInstaller.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40"];
m11_16 [cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerObjectsInstaller.cs", label=Redis, span="38-38"];
m11_18 [cluster="HangFire.Web.JobStorage.FailedCount()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m11_190 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m11_178 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="352-352"];
m11_180 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="356-356"];
m11_184 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="361-362"];
m11_179 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label=Redis, span="354-354"];
m11_181 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="job.Count == 0", span="357-357"];
m11_186 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="368-375"];
m11_183 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="359-359"];
m11_185 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="364-366"];
m11_182 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="return null;", span="357-357"];
m11_187 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="352-352"];
m11_228 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerObjectsInstaller.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m11_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerObjectsInstaller.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m11_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerObjectsInstaller.cs", label=Redis, span="22-22"];
m11_8 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m11_233 [cluster="string.Format(string, object, object)", file="SqlServerObjectsInstaller.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m11_86 [cluster="Unk.GetAllEntriesFromHash", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m11_193 [cluster="Unk.ToDictionary", file="SqlServerObjectsInstaller.cs", label="Entry Unk.ToDictionary", span=""];
m11_90 [cluster="Unk.FromStringTimestamp", file="SqlServerObjectsInstaller.cs", label="Entry Unk.FromStringTimestamp", span=""];
m11_302 [cluster="Unk.GetSetCount", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetSetCount", span=""];
m11_140 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="270-270"];
m11_142 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="275-277"];
m11_141 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label=Redis, span="273-273"];
m11_143 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            State = job[2],\r\n                            CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                            FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                            CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                        });", span="279-292"];
m11_144 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="270-270"];
m11_9 [cluster="string.Format(string, object)", file="SqlServerObjectsInstaller.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_70 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="119-119"];
m11_72 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerObjectsInstaller.cs", label="return GetTimelineStats(Redis, ''failed'');", span="123-123"];
m11_71 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerObjectsInstaller.cs", label=Redis, span="121-121"];
m11_73 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="119-119"];
m11_59 [cluster="Unk.>", file="SqlServerObjectsInstaller.cs", label="Entry Unk.>", span=""];
m11_10 [cluster="Unk.GetListCount", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetListCount", span=""];
m11_57 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m11_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerObjectsInstaller.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_225 [cluster="Unk.GetValuesMap", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetValuesMap", span=""];
m11_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m11_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="SqlServerObjectsInstaller.cs", label=Redis, span="46-46"];
m11_21 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="SqlServerObjectsInstaller.cs", label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48"];
m11_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m11_87 [cluster="Unk.GetAllItemsFromList", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m11_197 [cluster="Unk.Contains", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Contains", span=""];
m11_188 [cluster="Unk.Select", file="SqlServerObjectsInstaller.cs", label="Entry Unk.Select", span=""];
m11_84 [cluster="Unk.GetAllItemsFromSet", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m11_97 [cluster="Unk.GetRangeFromSortedSetDesc", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m11_327 [cluster="Unk.GetValue", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetValue", span=""];
m11_55 [cluster="Unk.GetValuesFromHash", file="SqlServerObjectsInstaller.cs", label="Entry Unk.GetValuesFromHash", span=""];
m11_158 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="312-312"];
m11_160 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="316-316"];
m11_159 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label=Redis, span="314-314"];
m11_161 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="318-318"];
m11_164 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="326-329"];
m11_163 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="return false;", span="321-321"];
m11_162 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="String.IsNullOrEmpty(queue)", span="319-319"];
m11_165 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="312-312"];
m11_130 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="245-245"];
m11_132 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="250-253"];
m11_131 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label=Redis, span="248-248"];
m11_133 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        });", span="255-266"];
m11_134 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerObjectsInstaller.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="245-245"];
m11_346 [file="SqlServerObjectsInstaller.cs", label=IRedisClient, span=""];
m11_347 [file="SqlServerObjectsInstaller.cs", label="string[]", span=""];
m11_348 [file="SqlServerObjectsInstaller.cs", label="string[]", span=""];
m11_351 [file="SqlServerObjectsInstaller.cs", label=queueName, span=""];
m11_343 [file="SqlServerObjectsInstaller.cs", label=hiddenProperties, span=""];
m11_349 [file="SqlServerObjectsInstaller.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m11_345 [file="SqlServerObjectsInstaller.cs", label=string, span=""];
m11_350 [file="SqlServerObjectsInstaller.cs", label=stats, span=""];
m11_344 [file="SqlServerObjectsInstaller.cs", label=string, span=""];
m12_15 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="51-51"];
m12_16 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="SqlServerWriteOnlyTransactionFacts.cs", label="return new RedisStorageConnection(this, _pooledManager.GetClient());", span="53-53"];
m12_17 [cluster="HangFire.Redis.RedisStorage.GetConnection()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="51-51"];
m12_9 [cluster="RedisClientManagerConfig.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry RedisClientManagerConfig.cstr", span=""];
m12_10 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46"];
m12_11 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="SqlServerWriteOnlyTransactionFacts.cs", label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="48-48"];
m12_12 [cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46"];
m12_14 [cluster="Unk.GetClient", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry Unk.GetClient", span=""];
m12_0 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23"];
m12_1 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23"];
m12_19 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="56-56"];
m12_20 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="SqlServerWriteOnlyTransactionFacts.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="58-58"];
m12_21 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="SqlServerWriteOnlyTransactionFacts.cs", label="yield return new DequeuedJobsWatcher(this);", span="59-59"];
m12_22 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="SqlServerWriteOnlyTransactionFacts.cs", label="yield return new ServerWatchdog(this);", span="60-60"];
m12_23 [cluster="HangFire.Redis.RedisStorage.GetComponents()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="56-56"];
m12_24 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m12_25 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m12_26 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m12_27 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63"];
m12_28 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="SqlServerWriteOnlyTransactionFacts.cs", label="yield return new FailedStateHandler();", span="65-65"];
m12_29 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="SqlServerWriteOnlyTransactionFacts.cs", label="yield return new ProcessingStateHandler();", span="66-66"];
m12_30 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="SqlServerWriteOnlyTransactionFacts.cs", label="yield return new SucceededStateHandler();", span="67-67"];
m12_31 [cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63"];
m12_8 [cluster="PooledRedisClientManager.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m12_38 [cluster="string.Format(string, object, object)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_13 [cluster="RedisMonitoringApi.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry RedisMonitoringApi.cstr", span=""];
m12_35 [cluster="HangFire.Redis.RedisStorage.ToString()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.ToString()", span="70-70"];
m12_36 [cluster="HangFire.Redis.RedisStorage.ToString()", file="SqlServerWriteOnlyTransactionFacts.cs", label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="72-72"];
m12_37 [cluster="HangFire.Redis.RedisStorage.ToString()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.ToString()", span="70-70"];
m12_18 [cluster="RedisStorageConnection.cstr", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry RedisStorageConnection.cstr", span=""];
m12_34 [cluster="HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", span="6-6"];
m12_2 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28"];
m12_3 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="SqlServerWriteOnlyTransactionFacts.cs", label="_host = host", span="30-30"];
m12_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="SqlServerWriteOnlyTransactionFacts.cs", label="_db = db", span="31-31"];
m12_5 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="SqlServerWriteOnlyTransactionFacts.cs", label="_options = options", span="32-32"];
m12_6 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="SqlServerWriteOnlyTransactionFacts.cs", label="_pooledManager = new PooledRedisClientManager(\r\n                new []{ host },\r\n                new string[0],\r\n                new RedisClientManagerConfig\r\n                {\r\n                    DefaultDb = db,\r\n                    MaxWritePoolSize = _options.ConnectionPoolSize\r\n                })", span="34-41"];
m12_7 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="SqlServerWriteOnlyTransactionFacts.cs", label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28"];
m12_33 [cluster="HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", span="8-8"];
m12_32 [cluster="HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", file="SqlServerWriteOnlyTransactionFacts.cs", label="Entry HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", span="8-8"];
m12_39 [file="SqlServerWriteOnlyTransactionFacts.cs", label="HangFire.Redis.RedisStorage", span=""];
n76 -> n1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n13  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n33  [color=red, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n56  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n62  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n67  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> n70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n76 -> d33  [color=green, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=2, style=dotted];
n10 -> n8  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [color=green, key=3, label="method methodReturn string ToString", style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=2, style=dotted];
n14 -> n12  [color=blue, key=0, style=bold];
n15 -> n65  [key=0, style=solid];
n15 -> n13  [color=green, key=3, label="Parameter variable string body", style=bold];
n15 -> n15  [color=green, key=3, label="method methodReturn string TransformText", style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n16 -> n25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RazorPage", style=dashed];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n26 -> n16  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n27 -> n30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n27 -> n31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n27 -> n32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n27 -> n33  [color=red, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n27 -> n34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n27 -> d33  [color=green, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [color=red, key=0, style=solid];
n32 -> d33  [color=green, key=0, style=solid];
n33 -> n34  [color=red, key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n38  [key=2, style=dotted];
n36 -> n27  [color=blue, key=0, style=bold];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n43  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=2, style=dotted];
n42 -> n39  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n45 -> n48  [color=darkseagreen4, key=1, label=string, style=dashed];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=0, style=solid];
n46 -> n50  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [key=2, style=dotted];
n47 -> n49  [key=0, style=solid];
n49 -> n45  [color=blue, key=0, style=bold];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [color=darkseagreen4, key=1, label=object, style=dashed];
n52 -> n56  [color=darkseagreen4, key=1, label=object, style=dashed];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n58  [key=2, style=dotted];
n56 -> n59  [key=2, style=dotted];
n56 -> n60  [key=2, style=dotted];
n56 -> n45  [key=2, style=dotted];
n54 -> n57  [key=0, style=solid];
n57 -> n52  [color=blue, key=0, style=bold];
n60 -> n73  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=2, style=dotted];
n63 -> n61  [color=blue, key=0, style=bold];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n6  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n70  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n16  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=2, style=dotted];
n69 -> n71  [key=0, style=solid];
n69 -> n72  [key=2, style=dotted];
n69 -> n15  [key=2, style=dotted];
n71 -> n15  [color=blue, key=0, style=bold];
n73 -> n74  [key=0, style=solid];
n73 -> n50  [key=2, style=dotted];
n73 -> n75  [key=2, style=dotted];
n74 -> n60  [color=blue, key=0, style=bold];
d33 -> n34  [color=green, key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_16  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_12  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_14  [key=2, style=dotted];
m0_10 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_11 -> m0_5  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_13 -> m0_20  [color=red, key=0, style=solid];
m0_20 -> m0_21  [color=red, key=0, style=solid];
m0_20 -> m0_26  [color=red, key=2, style=dotted];
m0_20 -> m0_27  [color=red, key=2, style=dotted];
m0_20 -> m0_22  [color=red, key=1, label=recreateDatabaseSql, style=dashed];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_28  [key=2, style=dotted];
m0_23 -> m0_31  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_13  [color=blue, key=0, style=bold];
m0_33 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m0_33 -> m0_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m0_33 -> m0_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.CleanDatabaseAttribute", style=dashed];
m2_13 -> m2_2  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m2_13 -> m2_23  [color=green, key=0, style=solid];
m2_23 -> m2_24  [color=green, key=0, style=solid];
m2_23 -> m2_26  [color=green, key=2, style=dotted];
m2_24 -> m2_25  [color=green, key=0, style=solid];
m2_24 -> m2_27  [color=green, key=2, style=dotted];
m2_25 -> m2_13  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_1  [color=green, key=3, label="Local variable string createSql", style=bold];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=1, label=createSql, style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_10  [color=green, key=2, style=dotted];
m2_2 -> m2_4  [color=green, key=1, label=connection, style=dashed];
m2_2 -> m2_8  [color=green, key=1, label=connection, style=dashed];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_11  [color=green, key=2, style=dotted];
m2_3 -> m2_12  [color=green, key=2, style=dotted];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_4 -> m2_13  [color=green, key=2, style=dotted];
m2_4 -> m2_7  [color=green, key=1, label=aggregator, style=dashed];
m2_8 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_17  [color=green, key=2, style=dotted];
m2_8 -> m2_18  [color=green, key=2, style=dotted];
m2_8 -> m2_19  [color=green, key=2, style=dotted];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_5 -> m2_14  [color=green, key=2, style=dotted];
m2_5 -> m2_7  [color=green, key=1, label=cts, style=dashed];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_16  [color=green, key=2, style=dotted];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_15  [color=green, key=2, style=dotted];
m2_9 -> m2_0  [color=blue, key=0, style=bold];
m2_10 -> m2_20  [color=green, key=0, style=solid];
m2_20 -> m2_21  [color=green, key=0, style=solid];
m2_20 -> m2_22  [color=green, key=2, style=dotted];
m2_21 -> m2_10  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_8  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_10  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_12  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_6  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_5 -> m4_1  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m4_5 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m5_256 -> m5_257  [key=0, style=solid];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_12  [key=2, style=dotted];
m5_257 -> m5_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_258 -> m5_256  [color=blue, key=0, style=bold];
m5_192 -> m5_193  [key=0, style=solid];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_12  [key=2, style=dotted];
m5_193 -> m5_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_194 -> m5_192  [color=blue, key=0, style=bold];
m5_125 -> m5_126  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_12  [key=2, style=dotted];
m5_126 -> m5_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_127 -> m5_125  [color=blue, key=0, style=bold];
m5_139 -> m5_140  [key=0, style=solid];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_22  [key=2, style=dotted];
m5_140 -> m5_23  [key=2, style=dotted];
m5_141 -> m5_139  [color=blue, key=0, style=bold];
m5_142 -> m5_143  [key=0, style=solid];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_12  [key=2, style=dotted];
m5_143 -> m5_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_144 -> m5_142  [color=blue, key=0, style=bold];
m5_94 -> m5_95  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_99  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_12  [key=2, style=dotted];
m5_96 -> m5_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_97 -> m5_94  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_180 -> m5_181  [key=0, style=solid];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_12  [key=2, style=dotted];
m5_181 -> m5_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_182 -> m5_180  [color=blue, key=0, style=bold];
m5_25 -> m5_299  [key=0, style=solid];
m5_25 -> m5_300  [color=darkseagreen4, key=1, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>", style=dashed];
m5_299 -> m5_300  [key=0, style=solid];
m5_299 -> m5_7  [key=2, style=dotted];
m5_299 -> m5_301  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_298  [key=2, style=dotted];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_303  [key=2, style=dotted];
m5_302 -> m5_25  [color=blue, key=0, style=bold];
m5_281 -> m5_282  [key=0, style=solid];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_12  [key=2, style=dotted];
m5_282 -> m5_284  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_283 -> m5_281  [color=blue, key=0, style=bold];
m5_155 -> m5_156  [key=0, style=solid];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_12  [key=2, style=dotted];
m5_156 -> m5_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_157 -> m5_155  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_40  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_36 -> m5_41  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_12  [key=2, style=dotted];
m5_37 -> m5_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_38 -> m5_35  [color=blue, key=0, style=bold];
m5_230 -> m5_231  [key=0, style=solid];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_12  [key=2, style=dotted];
m5_231 -> m5_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_232 -> m5_230  [color=blue, key=0, style=bold];
m5_289 -> m5_290  [key=0, style=solid];
m5_289 -> m5_291  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_22  [key=2, style=dotted];
m5_14 -> m5_23  [key=2, style=dotted];
m5_14 -> m5_24  [key=2, style=dotted];
m5_14 -> m5_16  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_14 -> m5_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_14 -> m5_17  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_22  [key=2, style=dotted];
m5_15 -> m5_23  [key=2, style=dotted];
m5_15 -> m5_24  [key=2, style=dotted];
m5_15 -> m5_19  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_13 -> m5_16  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_13 -> m5_17  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_13 -> m5_19  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_25  [key=2, style=dotted];
m5_16 -> m5_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_26  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_26  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=2, style=dotted];
m5_31 -> m5_34  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_27  [key=2, style=dotted];
m5_18 -> m5_28  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_29  [key=2, style=dotted];
m5_21 -> m5_13  [color=blue, key=0, style=bold];
m5_32 -> m5_30  [color=blue, key=0, style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_22  [key=2, style=dotted];
m5_40 -> m5_23  [key=2, style=dotted];
m5_40 -> m5_24  [key=2, style=dotted];
m5_40 -> m5_42  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_40 -> m5_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_40 -> m5_43  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_22  [key=2, style=dotted];
m5_41 -> m5_23  [key=2, style=dotted];
m5_41 -> m5_24  [key=2, style=dotted];
m5_41 -> m5_45  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_39 -> m5_42  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_39 -> m5_43  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_39 -> m5_45  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_25  [key=2, style=dotted];
m5_42 -> m5_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_26  [key=2, style=dotted];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_26  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_29  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=2, style=dotted];
m5_47 -> m5_39  [color=blue, key=0, style=bold];
m5_51 -> m5_49  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_22  [key=2, style=dotted];
m5_58 -> m5_23  [key=2, style=dotted];
m5_58 -> m5_24  [key=2, style=dotted];
m5_58 -> m5_64  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_58 -> m5_91  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_58 -> m5_65  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_58 -> m5_72  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_22  [key=2, style=dotted];
m5_59 -> m5_23  [key=2, style=dotted];
m5_59 -> m5_24  [key=2, style=dotted];
m5_59 -> m5_68  [color=darkseagreen4, key=1, label=anotherJobId, style=dashed];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_59  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_57 -> m5_64  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_57 -> m5_65  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_57 -> m5_68  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_57 -> m5_71  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_25  [key=2, style=dotted];
m5_64 -> m5_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_26  [key=2, style=dotted];
m5_65 -> m5_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_26  [key=2, style=dotted];
m5_68 -> m5_70  [color=darkseagreen4, key=1, label=anotherJob, style=dashed];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_22  [key=2, style=dotted];
m5_71 -> m5_23  [key=2, style=dotted];
m5_71 -> m5_73  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_71 -> m5_74  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_71 -> m5_75  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_71 -> m5_76  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_93  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_24  [key=2, style=dotted];
m5_72 -> m5_82  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_78  [key=2, style=dotted];
m5_60 -> m5_62  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_60 -> m5_63  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_79  [key=2, style=dotted];
m5_61 -> m5_80  [key=2, style=dotted];
m5_61 -> m5_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_79  [key=2, style=dotted];
m5_62 -> m5_81  [key=2, style=dotted];
m5_62 -> m5_80  [key=2, style=dotted];
m5_62 -> m5_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_63  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_63 -> m5_91  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_83 -> m5_84  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_82  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_48  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_29  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_29  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_82  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_82  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_48  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_82  [key=2, style=dotted];
m5_77 -> m5_57  [color=blue, key=0, style=bold];
m5_84 -> m5_85  [key=0, style=solid];
m5_85 -> m5_83  [color=blue, key=0, style=bold];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_89  [key=2, style=dotted];
m5_88 -> m5_86  [color=blue, key=0, style=bold];
m5_92 -> m5_90  [color=blue, key=0, style=bold];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_22  [key=2, style=dotted];
m5_99 -> m5_23  [key=2, style=dotted];
m5_99 -> m5_24  [key=2, style=dotted];
m5_99 -> m5_104  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_99 -> m5_122  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_99 -> m5_105  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_99 -> m5_109  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_104  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_98 -> m5_105  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_98 -> m5_108  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_25  [key=2, style=dotted];
m5_104 -> m5_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_26  [key=2, style=dotted];
m5_105 -> m5_107  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_22  [key=2, style=dotted];
m5_108 -> m5_23  [key=2, style=dotted];
m5_108 -> m5_110  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_108 -> m5_111  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_108 -> m5_112  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_108 -> m5_113  [color=darkseagreen4, key=1, label=jobState, style=dashed];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_78  [key=2, style=dotted];
m5_100 -> m5_102  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_100 -> m5_103  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_124  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_24  [key=2, style=dotted];
m5_109 -> m5_82  [key=2, style=dotted];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_79  [key=2, style=dotted];
m5_101 -> m5_80  [key=2, style=dotted];
m5_101 -> m5_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_79  [key=2, style=dotted];
m5_102 -> m5_81  [key=2, style=dotted];
m5_102 -> m5_80  [key=2, style=dotted];
m5_102 -> m5_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_103  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_103 -> m5_122  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_115 -> m5_116  [key=0, style=solid];
m5_118 -> m5_119  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_29  [key=2, style=dotted];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_29  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_82  [key=2, style=dotted];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_82  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_48  [key=2, style=dotted];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_82  [key=2, style=dotted];
m5_114 -> m5_98  [color=blue, key=0, style=bold];
m5_116 -> m5_117  [key=0, style=solid];
m5_117 -> m5_115  [color=blue, key=0, style=bold];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_89  [key=2, style=dotted];
m5_120 -> m5_118  [color=blue, key=0, style=bold];
m5_123 -> m5_121  [color=blue, key=0, style=bold];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_25  [key=2, style=dotted];
m5_129 -> m5_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_22  [key=2, style=dotted];
m5_130 -> m5_23  [key=2, style=dotted];
m5_130 -> m5_132  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_130 -> m5_133  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_135 -> m5_136  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_24  [key=2, style=dotted];
m5_131 -> m5_82  [key=2, style=dotted];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_82  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_29  [key=2, style=dotted];
m5_134 -> m5_128  [color=blue, key=0, style=bold];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_138  [key=2, style=dotted];
m5_137 -> m5_135  [color=blue, key=0, style=bold];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_147  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_25  [key=2, style=dotted];
m5_146 -> m5_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_22  [key=2, style=dotted];
m5_147 -> m5_23  [key=2, style=dotted];
m5_147 -> m5_149  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_151 -> m5_152  [key=0, style=solid];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_82  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_82  [key=2, style=dotted];
m5_150 -> m5_145  [color=blue, key=0, style=bold];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_154  [key=2, style=dotted];
m5_153 -> m5_151  [color=blue, key=0, style=bold];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_160  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_25  [key=2, style=dotted];
m5_159 -> m5_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_3  [key=2, style=dotted];
m5_160 -> m5_23  [key=2, style=dotted];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_165  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_82  [key=2, style=dotted];
m5_162 -> m5_158  [color=blue, key=0, style=bold];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_154  [key=2, style=dotted];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_154  [key=2, style=dotted];
m5_166 -> m5_163  [color=blue, key=0, style=bold];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_172  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_25  [key=2, style=dotted];
m5_171 -> m5_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_22  [key=2, style=dotted];
m5_172 -> m5_23  [key=2, style=dotted];
m5_172 -> m5_174  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_176 -> m5_177  [key=0, style=solid];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_82  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_82  [key=2, style=dotted];
m5_175 -> m5_170  [color=blue, key=0, style=bold];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_179  [key=2, style=dotted];
m5_178 -> m5_176  [color=blue, key=0, style=bold];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_185  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_25  [key=2, style=dotted];
m5_184 -> m5_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_3  [key=2, style=dotted];
m5_185 -> m5_23  [key=2, style=dotted];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_190  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_82  [key=2, style=dotted];
m5_187 -> m5_183  [color=blue, key=0, style=bold];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_179  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_179  [key=2, style=dotted];
m5_191 -> m5_188  [color=blue, key=0, style=bold];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_197  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_25  [key=2, style=dotted];
m5_196 -> m5_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_22  [key=2, style=dotted];
m5_197 -> m5_23  [key=2, style=dotted];
m5_197 -> m5_199  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_197 -> m5_200  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_202 -> m5_203  [key=0, style=solid];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_82  [key=2, style=dotted];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_82  [key=2, style=dotted];
m5_200 -> m5_201  [key=0, style=solid];
m5_200 -> m5_82  [key=2, style=dotted];
m5_201 -> m5_195  [color=blue, key=0, style=bold];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_205  [key=2, style=dotted];
m5_204 -> m5_202  [color=blue, key=0, style=bold];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_211  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_25  [key=2, style=dotted];
m5_210 -> m5_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_3  [key=2, style=dotted];
m5_211 -> m5_23  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_216  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_82  [key=2, style=dotted];
m5_213 -> m5_209  [color=blue, key=0, style=bold];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_205  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_205  [key=2, style=dotted];
m5_217 -> m5_214  [color=blue, key=0, style=bold];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_223  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_25  [key=2, style=dotted];
m5_222 -> m5_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_3  [key=2, style=dotted];
m5_223 -> m5_23  [key=2, style=dotted];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_228  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_82  [key=2, style=dotted];
m5_225 -> m5_221  [color=blue, key=0, style=bold];
m5_227 -> m5_228  [key=0, style=solid];
m5_227 -> m5_205  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_205  [key=2, style=dotted];
m5_229 -> m5_226  [color=blue, key=0, style=bold];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_235  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_25  [key=2, style=dotted];
m5_234 -> m5_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_22  [key=2, style=dotted];
m5_235 -> m5_23  [key=2, style=dotted];
m5_235 -> m5_237  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_235 -> m5_238  [color=darkseagreen4, key=1, label=record, style=dashed];
m5_240 -> m5_241  [key=0, style=solid];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_82  [key=2, style=dotted];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_82  [key=2, style=dotted];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_82  [key=2, style=dotted];
m5_239 -> m5_233  [color=blue, key=0, style=bold];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_243  [key=2, style=dotted];
m5_242 -> m5_240  [color=blue, key=0, style=bold];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_249  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_25  [key=2, style=dotted];
m5_248 -> m5_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_22  [key=2, style=dotted];
m5_249 -> m5_23  [key=2, style=dotted];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_254  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_82  [key=2, style=dotted];
m5_251 -> m5_247  [color=blue, key=0, style=bold];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_205  [key=2, style=dotted];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_243  [key=2, style=dotted];
m5_255 -> m5_252  [color=blue, key=0, style=bold];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_261  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_25  [key=2, style=dotted];
m5_260 -> m5_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_3  [key=2, style=dotted];
m5_261 -> m5_23  [key=2, style=dotted];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_266  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_82  [key=2, style=dotted];
m5_263 -> m5_259  [color=blue, key=0, style=bold];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_205  [key=2, style=dotted];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_268  [key=2, style=dotted];
m5_267 -> m5_264  [color=blue, key=0, style=bold];
m5_272 -> m5_273  [key=0, style=solid];
m5_272 -> m5_274  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_25  [key=2, style=dotted];
m5_273 -> m5_277  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_3  [key=2, style=dotted];
m5_274 -> m5_23  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_279  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m5_275 -> m5_276  [key=0, style=solid];
m5_275 -> m5_82  [key=2, style=dotted];
m5_276 -> m5_272  [color=blue, key=0, style=bold];
m5_278 -> m5_279  [key=0, style=solid];
m5_278 -> m5_205  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_268  [key=2, style=dotted];
m5_280 -> m5_277  [color=blue, key=0, style=bold];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_286  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_25  [key=2, style=dotted];
m5_285 -> m5_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_3  [key=2, style=dotted];
m5_286 -> m5_23  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_82  [key=2, style=dotted];
m5_288 -> m5_284  [color=blue, key=0, style=bold];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_205  [key=2, style=dotted];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_268  [key=2, style=dotted];
m5_292 -> m5_289  [color=blue, key=0, style=bold];
m5_269 -> m5_270  [key=0, style=solid];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_12  [key=2, style=dotted];
m5_270 -> m5_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_271 -> m5_269  [color=blue, key=0, style=bold];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_12  [key=2, style=dotted];
m5_219 -> m5_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_220 -> m5_218  [color=blue, key=0, style=bold];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_295  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_297  [key=2, style=dotted];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_298  [key=2, style=dotted];
m5_296 -> m5_293  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_14  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_9 -> m5_15  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_10 -> m5_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_11 -> m5_8  [color=blue, key=0, style=bold];
m5_53 -> m5_54  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_58  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_54 -> m5_59  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_12  [key=2, style=dotted];
m5_55 -> m5_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_56 -> m5_53  [color=blue, key=0, style=bold];
m5_206 -> m5_207  [key=0, style=solid];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_12  [key=2, style=dotted];
m5_207 -> m5_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_208 -> m5_206  [color=blue, key=0, style=bold];
m5_244 -> m5_245  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_12  [key=2, style=dotted];
m5_245 -> m5_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_246 -> m5_244  [color=blue, key=0, style=bold];
m5_167 -> m5_168  [key=0, style=solid];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_12  [key=2, style=dotted];
m5_168 -> m5_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_169 -> m5_167  [color=blue, key=0, style=bold];
m5_304 -> m5_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_45  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_55  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_64  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_65  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_68  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_96  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_104  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_105  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_126  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_129  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_143  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_146  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_156  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_159  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_168  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_171  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_181  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_184  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_193  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_196  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_207  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_210  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_219  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_222  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_231  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_234  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_245  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_248  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_257  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_260  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_270  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_273  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_282  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_304 -> m5_285  [color=darkseagreen4, key=1, label="HangFire.SqlServer.Tests.WriteTransactionFacts", style=dashed];
m5_305 -> m5_14  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_305 -> m5_15  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_306 -> m5_31  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_307 -> m5_40  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_307 -> m5_41  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_308 -> m5_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_309 -> m5_58  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_309 -> m5_59  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_310 -> m5_91  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_311 -> m5_91  [color=darkseagreen4, key=1, label=state, style=dashed];
m5_312 -> m5_99  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m5_313 -> m5_122  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m5_314 -> m5_122  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IAtomicWriteTransaction", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_6 -> m6_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_33  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_33  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_34  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_33  [key=2, style=dotted];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_35  [key=2, style=dotted];
m7_5 -> m7_34  [key=2, style=dotted];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_33  [color=green, key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_36  [key=2, style=dotted];
m7_7 -> m7_34  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_33  [key=2, style=dotted];
m7_9 -> m7_10  [color=green, key=0, style=solid];
m7_9 -> m7_37  [key=2, style=dotted];
m7_9 -> m7_38  [key=2, style=dotted];
m7_9 -> m7_34  [key=2, style=dotted];
m7_10 -> m7_11  [color=green, key=0, style=solid];
m7_10 -> m7_33  [color=green, key=2, style=dotted];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_15  [color=green, key=0, style=solid];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_33  [color=red, key=2, style=dotted];
m7_15 -> m7_16  [color=red, key=0, style=solid];
m7_15 -> m7_33  [color=red, key=2, style=dotted];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_34  [color=green, key=2, style=dotted];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_14 -> m7_33  [color=green, key=2, style=dotted];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_16 -> n61  [key=2, style=dotted];
m7_16 -> m7_34  [key=2, style=dotted];
m7_17 -> m7_18  [color=green, key=0, style=solid];
m7_17 -> m7_33  [color=green, key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_40  [key=2, style=dotted];
m7_18 -> m7_41  [key=2, style=dotted];
m7_18 -> m7_20  [color=darkseagreen4, key=1, label=version, style=dashed];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_33  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_42  [key=2, style=dotted];
m7_20 -> m7_34  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_33  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_34  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_33  [key=2, style=dotted];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_34  [key=2, style=dotted];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_33  [color=green, key=2, style=dotted];
m7_26 -> m7_27  [color=green, key=0, style=solid];
m7_26 -> m7_43  [key=2, style=dotted];
m7_26 -> m7_34  [key=2, style=dotted];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_33  [color=green, key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_35  [key=2, style=dotted];
m7_28 -> m7_34  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_33  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_35  [key=2, style=dotted];
m7_30 -> m7_34  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=2, style=dotted];
m7_32 -> m7_0  [color=blue, key=0, style=bold];
m7_44 -> m7_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_2  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_4  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_6  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_10  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_11  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_13  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_14  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_16  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_17  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_23  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_25  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_26  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_27  [color=green, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m7_44 -> m7_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m8_0 -> m8_5  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m8_0 -> m8_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m8_0 -> m8_10  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_3  [color=green, key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_2 -> m8_11  [color=green, key=0, style=solid];
m8_2 -> m8_12  [color=green, key=2, style=dotted];
m8_4 -> m8_11  [key=0, style=solid];
m8_4 -> m8_12  [key=2, style=dotted];
m8_6 -> m8_11  [key=0, style=solid];
m8_6 -> m8_12  [key=2, style=dotted];
m8_11 -> m8_0  [color=blue, key=0, style=bold];
m8_13 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m8_13 -> m8_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m8_13 -> m8_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m8_13 -> m8_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_28  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_24  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_8  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_10  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_6  [color=blue, key=0, style=bold];
m9_36 -> m9_37  [key=0, style=solid];
m9_37 -> m9_36  [color=blue, key=0, style=bold];
m9_38 -> m9_39  [key=0, style=solid];
m9_39 -> m9_38  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_4  [color=blue, key=0, style=bold];
m9_32 -> m9_33  [key=0, style=solid];
m9_33 -> m9_32  [color=blue, key=0, style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_12  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_26  [color=blue, key=0, style=bold];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_30  [color=blue, key=0, style=bold];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_20  [color=blue, key=0, style=bold];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_34  [color=blue, key=0, style=bold];
m9_40 -> m9_41  [key=0, style=solid];
m9_41 -> m9_40  [color=blue, key=0, style=bold];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_22  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_18  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_14  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_16  [color=blue, key=0, style=bold];
m10_622 -> m10_623  [key=0, style=solid];
m10_623 -> m10_624  [key=0, style=solid];
m10_623 -> m10_66  [key=2, style=dotted];
m10_623 -> m10_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_624 -> m10_622  [color=blue, key=0, style=bold];
m10_810 -> m10_811  [key=0, style=solid];
m10_811 -> m10_812  [key=0, style=solid];
m10_811 -> m10_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_811 -> m10_584  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_812 -> m10_813  [key=0, style=solid];
m10_812 -> m10_125  [key=2, style=dotted];
m10_812 -> m10_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_813 -> m10_810  [color=blue, key=0, style=bold];
m10_478 -> m10_479  [key=0, style=solid];
m10_479 -> m10_480  [key=0, style=solid];
m10_479 -> m10_66  [key=2, style=dotted];
m10_479 -> m10_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_480 -> m10_478  [color=blue, key=0, style=bold];
m10_364 -> m10_365  [key=0, style=solid];
m10_365 -> m10_366  [key=0, style=solid];
m10_365 -> m10_66  [key=2, style=dotted];
m10_365 -> m10_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_366 -> m10_364  [color=blue, key=0, style=bold];
m10_739 -> m10_740  [key=0, style=solid];
m10_740 -> m10_741  [key=0, style=solid];
m10_740 -> m10_66  [key=2, style=dotted];
m10_740 -> m10_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_741 -> m10_739  [color=blue, key=0, style=bold];
m10_667 -> m10_668  [key=0, style=solid];
m10_668 -> m10_669  [key=0, style=solid];
m10_668 -> m10_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_668 -> m10_668  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_669 -> m10_670  [key=0, style=solid];
m10_669 -> m10_125  [key=2, style=dotted];
m10_669 -> m10_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_670 -> m10_667  [color=blue, key=0, style=bold];
m10_864 -> m10_865  [key=0, style=solid];
m10_865 -> m10_866  [key=0, style=solid];
m10_865 -> m10_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_865 -> m10_865  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_866 -> m10_867  [key=0, style=solid];
m10_866 -> m10_125  [key=2, style=dotted];
m10_866 -> m10_868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_867 -> m10_864  [color=blue, key=0, style=bold];
m10_271 -> m10_272  [key=0, style=solid];
m10_272 -> m10_273  [key=0, style=solid];
m10_272 -> m10_66  [key=2, style=dotted];
m10_272 -> m10_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_273 -> m10_271  [color=blue, key=0, style=bold];
m10_343 -> m10_344  [key=0, style=solid];
m10_344 -> m10_345  [key=0, style=solid];
m10_344 -> m10_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_344 -> m10_344  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_345 -> m10_346  [key=0, style=solid];
m10_345 -> m10_125  [key=2, style=dotted];
m10_345 -> m10_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_346 -> m10_343  [color=blue, key=0, style=bold];
m10_304 -> m10_305  [key=0, style=solid];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_305 -> m10_282  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_125  [key=2, style=dotted];
m10_306 -> m10_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_307 -> m10_304  [color=blue, key=0, style=bold];
m10_25 -> m10_26  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_14  [key=2, style=dotted];
m10_26 -> m10_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_20  [key=2, style=dotted];
m10_28 -> m10_25  [color=blue, key=0, style=bold];
m10_857 -> m10_858  [key=0, style=solid];
m10_858 -> m10_859  [key=0, style=solid];
m10_858 -> m10_66  [key=2, style=dotted];
m10_858 -> m10_860  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_859 -> m10_857  [color=blue, key=0, style=bold];
m10_209 -> m10_210  [key=0, style=solid];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_66  [key=2, style=dotted];
m10_210 -> m10_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_211 -> m10_209  [color=blue, key=0, style=bold];
m10_883 -> m10_884  [key=0, style=solid];
m10_884 -> m10_885  [key=0, style=solid];
m10_884 -> m10_66  [key=2, style=dotted];
m10_884 -> m10_886  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_885 -> m10_883  [color=blue, key=0, style=bold];
m10_719 -> m10_720  [key=0, style=solid];
m10_720 -> m10_721  [key=0, style=solid];
m10_720 -> m10_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_720 -> m10_720  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_721 -> m10_722  [key=0, style=solid];
m10_721 -> m10_125  [key=2, style=dotted];
m10_721 -> m10_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_722 -> m10_719  [color=blue, key=0, style=bold];
m10_281 -> m10_282  [key=0, style=solid];
m10_282 -> m10_283  [key=0, style=solid];
m10_282 -> m10_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_282 -> m10_282  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_283 -> m10_284  [key=0, style=solid];
m10_283 -> m10_125  [key=2, style=dotted];
m10_283 -> m10_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_284 -> m10_281  [color=blue, key=0, style=bold];
m10_353 -> m10_354  [key=0, style=solid];
m10_354 -> m10_355  [key=0, style=solid];
m10_354 -> m10_66  [key=2, style=dotted];
m10_354 -> m10_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_355 -> m10_353  [color=blue, key=0, style=bold];
m10_430 -> m10_431  [key=0, style=solid];
m10_431 -> m10_432  [key=0, style=solid];
m10_431 -> m10_66  [key=2, style=dotted];
m10_431 -> m10_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_432 -> m10_430  [color=blue, key=0, style=bold];
m10_772 -> m10_773  [key=0, style=solid];
m10_773 -> m10_774  [key=0, style=solid];
m10_773 -> m10_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_773 -> m10_773  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_774 -> m10_775  [key=0, style=solid];
m10_774 -> m10_125  [key=2, style=dotted];
m10_774 -> m10_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_775 -> m10_772  [color=blue, key=0, style=bold];
m10_239 -> m10_240  [key=0, style=solid];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_240 -> m10_227  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_241 -> m10_242  [key=0, style=solid];
m10_241 -> m10_125  [key=2, style=dotted];
m10_241 -> m10_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_242 -> m10_239  [color=blue, key=0, style=bold];
m10_658 -> m10_659  [key=0, style=solid];
m10_659 -> m10_660  [key=0, style=solid];
m10_659 -> m10_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_659 -> m10_659  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_660 -> m10_661  [key=0, style=solid];
m10_660 -> m10_125  [key=2, style=dotted];
m10_660 -> m10_662  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_661 -> m10_658  [color=blue, key=0, style=bold];
m10_847 -> m10_848  [key=0, style=solid];
m10_848 -> m10_849  [key=0, style=solid];
m10_848 -> m10_66  [key=2, style=dotted];
m10_848 -> m10_850  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_849 -> m10_847  [color=blue, key=0, style=bold];
m10_402 -> m10_403  [key=0, style=solid];
m10_403 -> m10_404  [key=0, style=solid];
m10_403 -> m10_66  [key=2, style=dotted];
m10_403 -> m10_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_404 -> m10_402  [color=blue, key=0, style=bold];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_32  [key=2, style=dotted];
m10_34 -> m10_37  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_24  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_20  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_39  [key=2, style=dotted];
m10_38 -> m10_33  [color=blue, key=0, style=bold];
m10_326 -> m10_327  [key=0, style=solid];
m10_327 -> m10_328  [key=0, style=solid];
m10_327 -> m10_66  [key=2, style=dotted];
m10_327 -> m10_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_328 -> m10_326  [color=blue, key=0, style=bold];
m10_250 -> m10_251  [key=0, style=solid];
m10_251 -> m10_252  [key=0, style=solid];
m10_251 -> m10_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_251 -> m10_188  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_252 -> m10_253  [key=0, style=solid];
m10_252 -> m10_125  [key=2, style=dotted];
m10_252 -> m10_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_253 -> m10_250  [color=blue, key=0, style=bold];
m10_890 -> m10_891  [key=0, style=solid];
m10_891 -> m10_892  [key=0, style=solid];
m10_891 -> m10_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_891 -> m10_891  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_892 -> m10_893  [key=0, style=solid];
m10_892 -> m10_125  [key=2, style=dotted];
m10_892 -> m10_894  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_893 -> m10_890  [color=blue, key=0, style=bold];
m10_566 -> m10_567  [key=0, style=solid];
m10_567 -> m10_568  [key=0, style=solid];
m10_567 -> m10_66  [key=2, style=dotted];
m10_567 -> m10_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_568 -> m10_566  [color=blue, key=0, style=bold];
m10_511 -> m10_512  [key=0, style=solid];
m10_512 -> m10_513  [key=0, style=solid];
m10_512 -> m10_66  [key=2, style=dotted];
m10_512 -> m10_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_513 -> m10_511  [color=blue, key=0, style=bold];
m10_219 -> m10_220  [key=0, style=solid];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_66  [key=2, style=dotted];
m10_220 -> m10_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_221 -> m10_219  [color=blue, key=0, style=bold];
m10_576 -> m10_577  [key=0, style=solid];
m10_577 -> m10_578  [key=0, style=solid];
m10_577 -> m10_66  [key=2, style=dotted];
m10_577 -> m10_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_578 -> m10_576  [color=blue, key=0, style=bold];
m10_440 -> m10_441  [key=0, style=solid];
m10_441 -> m10_442  [key=0, style=solid];
m10_441 -> m10_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_441 -> m10_441  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_442 -> m10_443  [key=0, style=solid];
m10_442 -> m10_125  [key=2, style=dotted];
m10_442 -> m10_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_443 -> m10_440  [color=blue, key=0, style=bold];
m10_583 -> m10_584  [key=0, style=solid];
m10_584 -> m10_585  [key=0, style=solid];
m10_584 -> m10_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_584 -> m10_584  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_585 -> m10_586  [key=0, style=solid];
m10_585 -> m10_125  [key=2, style=dotted];
m10_585 -> m10_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_586 -> m10_583  [color=blue, key=0, style=bold];
m10_782 -> m10_783  [key=0, style=solid];
m10_783 -> m10_784  [key=0, style=solid];
m10_783 -> m10_66  [key=2, style=dotted];
m10_783 -> m10_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_784 -> m10_782  [color=blue, key=0, style=bold];
m10_712 -> m10_713  [key=0, style=solid];
m10_713 -> m10_714  [key=0, style=solid];
m10_713 -> m10_66  [key=2, style=dotted];
m10_713 -> m10_715  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_714 -> m10_712  [color=blue, key=0, style=bold];
m10_793 -> m10_794  [key=0, style=solid];
m10_794 -> m10_795  [key=0, style=solid];
m10_794 -> m10_66  [key=2, style=dotted];
m10_794 -> m10_796  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_795 -> m10_793  [color=blue, key=0, style=bold];
m10_894 -> m10_895  [key=0, style=solid];
m10_894 -> m10_896  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=2, style=dotted];
m10_12 -> m10_15  [key=2, style=dotted];
m10_13 -> m10_11  [color=blue, key=0, style=bold];
m10_21 -> m10_22  [key=0, style=solid];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_24  [key=2, style=dotted];
m10_23 -> m10_21  [color=blue, key=0, style=bold];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_24  [key=2, style=dotted];
m10_30 -> m10_32  [key=2, style=dotted];
m10_31 -> m10_29  [color=blue, key=0, style=bold];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_56  [key=2, style=dotted];
m10_51 -> m10_53  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_51 -> m10_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_51 -> m10_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_57  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_54  [color=darkseagreen4, key=1, label=queues, style=dashed];
m10_52 -> m10_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_58  [key=2, style=dotted];
m10_54 -> m10_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_62  [key=2, style=dotted];
m10_55 -> m10_50  [color=blue, key=0, style=bold];
m10_59 -> m10_60  [key=0, style=solid];
m10_61 -> m10_59  [color=blue, key=0, style=bold];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_67 -> m10_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_56  [key=2, style=dotted];
m10_68 -> m10_71  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_68 -> m10_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_14  [key=2, style=dotted];
m10_71 -> m10_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_57  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_7  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_73  [key=2, style=dotted];
m10_72 -> m10_67  [color=blue, key=0, style=bold];
m10_74 -> m10_75  [key=0, style=solid];
m10_76 -> m10_74  [color=blue, key=0, style=bold];
m10_80 -> m10_81  [key=0, style=solid];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_84  [key=2, style=dotted];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_85  [key=2, style=dotted];
m10_83 -> m10_80  [color=blue, key=0, style=bold];
m10_89 -> m10_90  [key=0, style=solid];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_93  [key=2, style=dotted];
m10_90 -> m10_94  [key=2, style=dotted];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_85  [key=2, style=dotted];
m10_92 -> m10_89  [color=blue, key=0, style=bold];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_14  [key=2, style=dotted];
m10_99 -> m10_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_105  [key=2, style=dotted];
m10_103 -> m10_106  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_20  [key=2, style=dotted];
m10_102 -> m10_103  [key=0, style=solid];
m10_101 -> m10_98  [color=blue, key=0, style=bold];
m10_104 -> m10_102  [color=blue, key=0, style=bold];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_14  [key=2, style=dotted];
m10_111 -> m10_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_117  [key=2, style=dotted];
m10_115 -> m10_106  [key=2, style=dotted];
m10_115 -> m10_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_20  [key=2, style=dotted];
m10_114 -> m10_115  [key=0, style=solid];
m10_113 -> m10_110  [color=blue, key=0, style=bold];
m10_116 -> m10_114  [color=blue, key=0, style=bold];
m10_118 -> m10_119  [key=0, style=solid];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_121  [key=2, style=dotted];
m10_120 -> m10_118  [color=blue, key=0, style=bold];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_126 -> m10_131  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_126 -> m10_144  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_148  [key=2, style=dotted];
m10_127 -> m10_133  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m10_127 -> m10_142  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m10_127 -> m10_143  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_117  [key=2, style=dotted];
m10_128 -> m10_105  [key=2, style=dotted];
m10_128 -> m10_149  [key=2, style=dotted];
m10_128 -> m10_106  [key=2, style=dotted];
m10_128 -> m10_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_128 -> m10_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_128 -> m10_132  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_128 -> m10_144  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_131 -> m10_132  [key=0, style=solid];
m10_131 -> m10_151  [key=2, style=dotted];
m10_131 -> m10_152  [key=2, style=dotted];
m10_131 -> m10_133  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_131 -> m10_134  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_131 -> m10_135  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_131 -> m10_136  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_131 -> m10_137  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_131 -> m10_142  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_131 -> m10_143  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_151  [key=2, style=dotted];
m10_144 -> m10_159  [key=2, style=dotted];
m10_144 -> m10_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_144 -> m10_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_144 -> m10_146  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_20  [key=2, style=dotted];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_156  [key=2, style=dotted];
m10_142 -> m10_157  [key=2, style=dotted];
m10_142 -> m10_158  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_156  [key=2, style=dotted];
m10_143 -> m10_157  [key=2, style=dotted];
m10_143 -> m10_158  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_85  [key=2, style=dotted];
m10_160 -> m10_161  [key=0, style=solid];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_150  [key=2, style=dotted];
m10_132 -> m10_133  [key=0, style=solid];
m10_132 -> m10_153  [key=2, style=dotted];
m10_132 -> m10_20  [key=2, style=dotted];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_20  [key=2, style=dotted];
m10_135 -> m10_136  [key=0, style=solid];
m10_135 -> m10_20  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_154  [key=2, style=dotted];
m10_136 -> m10_138  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m10_137 -> m10_138  [key=0, style=solid];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_155  [key=2, style=dotted];
m10_138 -> m10_140  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_138 -> m10_141  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_139 -> m10_140  [key=0, style=solid];
m10_139 -> m10_20  [key=2, style=dotted];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_20  [key=2, style=dotted];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_20  [key=2, style=dotted];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_20  [key=2, style=dotted];
m10_163 -> m10_164  [key=0, style=solid];
m10_166 -> m10_167  [key=0, style=solid];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_20  [key=2, style=dotted];
m10_147 -> m10_126  [color=blue, key=0, style=bold];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_121  [key=2, style=dotted];
m10_162 -> m10_160  [color=blue, key=0, style=bold];
m10_164 -> m10_165  [key=0, style=solid];
m10_165 -> m10_163  [color=blue, key=0, style=bold];
m10_167 -> m10_168  [key=0, style=solid];
m10_168 -> m10_166  [color=blue, key=0, style=bold];
m10_172 -> m10_173  [key=0, style=solid];
m10_172 -> m10_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_173 -> m10_174  [key=0, style=solid];
m10_173 -> m10_14  [key=2, style=dotted];
m10_173 -> m10_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_178  [key=2, style=dotted];
m10_174 -> m10_172  [color=blue, key=0, style=bold];
m10_175 -> m10_176  [key=0, style=solid];
m10_177 -> m10_175  [color=blue, key=0, style=bold];
m10_182 -> m10_183  [key=0, style=solid];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_178  [key=2, style=dotted];
m10_184 -> m10_185  [key=0, style=solid];
m10_184 -> m10_186  [key=2, style=dotted];
m10_185 -> m10_182  [color=blue, key=0, style=bold];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_203  [key=2, style=dotted];
m10_193 -> m10_204  [key=2, style=dotted];
m10_193 -> m10_151  [key=2, style=dotted];
m10_193 -> m10_152  [key=2, style=dotted];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_193  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_191 -> m10_194  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_117  [key=2, style=dotted];
m10_192 -> m10_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_194 -> m10_195  [key=0, style=solid];
m10_194 -> m10_205  [key=2, style=dotted];
m10_194 -> m10_178  [key=2, style=dotted];
m10_194 -> m10_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_194 -> m10_197  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_194 -> m10_198  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_194 -> m10_199  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_194 -> m10_200  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_194 -> m10_201  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_206 -> m10_207  [key=0, style=solid];
m10_195 -> m10_196  [key=0, style=solid];
m10_195 -> m10_85  [key=2, style=dotted];
m10_196 -> m10_197  [key=0, style=solid];
m10_196 -> m10_85  [key=2, style=dotted];
m10_197 -> m10_198  [key=0, style=solid];
m10_197 -> m10_20  [key=2, style=dotted];
m10_198 -> m10_199  [key=0, style=solid];
m10_198 -> m10_20  [key=2, style=dotted];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_186  [key=2, style=dotted];
m10_200 -> m10_201  [key=0, style=solid];
m10_200 -> m10_157  [key=2, style=dotted];
m10_200 -> m10_158  [key=2, style=dotted];
m10_201 -> m10_202  [key=0, style=solid];
m10_201 -> m10_157  [key=2, style=dotted];
m10_201 -> m10_158  [key=2, style=dotted];
m10_202 -> m10_191  [color=blue, key=0, style=bold];
m10_207 -> m10_208  [key=0, style=solid];
m10_207 -> m10_121  [key=2, style=dotted];
m10_208 -> m10_206  [color=blue, key=0, style=bold];
m10_212 -> m10_213  [key=0, style=solid];
m10_212 -> m10_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_14  [key=2, style=dotted];
m10_213 -> m10_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_216 -> m10_217  [key=0, style=solid];
m10_216 -> m10_218  [key=2, style=dotted];
m10_214 -> m10_212  [color=blue, key=0, style=bold];
m10_215 -> m10_216  [key=0, style=solid];
m10_217 -> m10_215  [color=blue, key=0, style=bold];
m10_222 -> m10_223  [key=0, style=solid];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_218  [key=2, style=dotted];
m10_224 -> m10_225  [key=0, style=solid];
m10_224 -> m10_186  [key=2, style=dotted];
m10_225 -> m10_222  [color=blue, key=0, style=bold];
m10_232 -> m10_233  [key=0, style=solid];
m10_232 -> m10_204  [key=2, style=dotted];
m10_232 -> m10_151  [key=2, style=dotted];
m10_232 -> m10_152  [key=2, style=dotted];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_232  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_230 -> m10_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_105  [key=2, style=dotted];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_205  [key=2, style=dotted];
m10_233 -> m10_218  [key=2, style=dotted];
m10_233 -> m10_235  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_233 -> m10_236  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_233 -> m10_237  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_234 -> m10_235  [key=0, style=solid];
m10_234 -> m10_85  [key=2, style=dotted];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_20  [key=2, style=dotted];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_20  [key=2, style=dotted];
m10_237 -> m10_238  [key=0, style=solid];
m10_237 -> m10_20  [key=2, style=dotted];
m10_238 -> m10_230  [color=blue, key=0, style=bold];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_204  [key=2, style=dotted];
m10_245 -> m10_151  [key=2, style=dotted];
m10_245 -> m10_152  [key=2, style=dotted];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_245  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_243 -> m10_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_105  [key=2, style=dotted];
m10_246 -> m10_247  [key=0, style=solid];
m10_246 -> m10_205  [key=2, style=dotted];
m10_246 -> m10_218  [key=2, style=dotted];
m10_246 -> m10_248  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_247 -> m10_248  [key=0, style=solid];
m10_247 -> m10_85  [key=2, style=dotted];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_20  [key=2, style=dotted];
m10_249 -> m10_243  [color=blue, key=0, style=bold];
m10_255 -> m10_256  [key=0, style=solid];
m10_255 -> m10_259  [key=2, style=dotted];
m10_255 -> m10_204  [key=2, style=dotted];
m10_255 -> m10_151  [key=2, style=dotted];
m10_255 -> m10_152  [key=2, style=dotted];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_205  [key=2, style=dotted];
m10_256 -> m10_178  [key=2, style=dotted];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_85  [key=2, style=dotted];
m10_258 -> m10_254  [color=blue, key=0, style=bold];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_264 -> m10_265  [key=0, style=solid];
m10_264 -> m10_14  [key=2, style=dotted];
m10_264 -> m10_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_268 -> m10_269  [key=0, style=solid];
m10_268 -> m10_270  [key=2, style=dotted];
m10_265 -> m10_266  [key=0, style=solid];
m10_265 -> m10_20  [key=2, style=dotted];
m10_267 -> m10_268  [key=0, style=solid];
m10_266 -> m10_263  [color=blue, key=0, style=bold];
m10_269 -> m10_267  [color=blue, key=0, style=bold];
m10_274 -> m10_275  [key=0, style=solid];
m10_274 -> m10_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_275 -> m10_276  [key=0, style=solid];
m10_275 -> m10_14  [key=2, style=dotted];
m10_275 -> m10_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_279 -> m10_280  [key=0, style=solid];
m10_279 -> m10_270  [key=2, style=dotted];
m10_276 -> m10_277  [key=0, style=solid];
m10_276 -> m10_20  [key=2, style=dotted];
m10_278 -> m10_279  [key=0, style=solid];
m10_277 -> m10_274  [color=blue, key=0, style=bold];
m10_280 -> m10_278  [color=blue, key=0, style=bold];
m10_286 -> m10_287  [key=0, style=solid];
m10_286 -> m10_151  [key=2, style=dotted];
m10_286 -> m10_152  [key=2, style=dotted];
m10_285 -> m10_286  [key=0, style=solid];
m10_285 -> m10_288  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_285 -> m10_289  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_288 -> m10_289  [key=0, style=solid];
m10_288 -> m10_270  [key=2, style=dotted];
m10_289 -> m10_290  [key=0, style=solid];
m10_289 -> m10_151  [key=2, style=dotted];
m10_289 -> m10_152  [key=2, style=dotted];
m10_287 -> m10_288  [key=0, style=solid];
m10_287 -> m10_153  [key=2, style=dotted];
m10_287 -> m10_289  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_290 -> m10_291  [key=0, style=solid];
m10_290 -> m10_20  [key=2, style=dotted];
m10_291 -> m10_285  [color=blue, key=0, style=bold];
m10_297 -> m10_298  [key=0, style=solid];
m10_297 -> m10_151  [key=2, style=dotted];
m10_297 -> m10_152  [key=2, style=dotted];
m10_296 -> m10_297  [key=0, style=solid];
m10_296 -> m10_299  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_296 -> m10_300  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_296 -> m10_301  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_270  [key=2, style=dotted];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_270  [key=2, style=dotted];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_151  [key=2, style=dotted];
m10_301 -> m10_152  [key=2, style=dotted];
m10_298 -> m10_299  [key=0, style=solid];
m10_298 -> m10_153  [key=2, style=dotted];
m10_298 -> m10_300  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_298 -> m10_301  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_302 -> m10_303  [key=0, style=solid];
m10_302 -> m10_20  [key=2, style=dotted];
m10_303 -> m10_296  [color=blue, key=0, style=bold];
m10_309 -> m10_310  [key=0, style=solid];
m10_309 -> m10_151  [key=2, style=dotted];
m10_309 -> m10_152  [key=2, style=dotted];
m10_308 -> m10_309  [key=0, style=solid];
m10_308 -> m10_311  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_308 -> m10_312  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_311 -> m10_312  [key=0, style=solid];
m10_311 -> m10_270  [key=2, style=dotted];
m10_312 -> m10_313  [key=0, style=solid];
m10_312 -> m10_151  [key=2, style=dotted];
m10_312 -> m10_152  [key=2, style=dotted];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_153  [key=2, style=dotted];
m10_310 -> m10_312  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_20  [key=2, style=dotted];
m10_314 -> m10_308  [color=blue, key=0, style=bold];
m10_318 -> m10_319  [key=0, style=solid];
m10_318 -> m10_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_319 -> m10_320  [key=0, style=solid];
m10_319 -> m10_14  [key=2, style=dotted];
m10_319 -> m10_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_323 -> m10_324  [key=0, style=solid];
m10_323 -> m10_325  [key=2, style=dotted];
m10_320 -> m10_321  [key=0, style=solid];
m10_320 -> m10_20  [key=2, style=dotted];
m10_322 -> m10_323  [key=0, style=solid];
m10_321 -> m10_318  [color=blue, key=0, style=bold];
m10_324 -> m10_322  [color=blue, key=0, style=bold];
m10_329 -> m10_330  [key=0, style=solid];
m10_329 -> m10_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_330 -> m10_331  [key=0, style=solid];
m10_330 -> m10_14  [key=2, style=dotted];
m10_330 -> m10_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_334 -> m10_335  [key=0, style=solid];
m10_334 -> m10_325  [key=2, style=dotted];
m10_331 -> m10_332  [key=0, style=solid];
m10_331 -> m10_20  [key=2, style=dotted];
m10_333 -> m10_334  [key=0, style=solid];
m10_332 -> m10_329  [color=blue, key=0, style=bold];
m10_335 -> m10_333  [color=blue, key=0, style=bold];
m10_339 -> m10_340  [key=0, style=solid];
m10_340 -> m10_341  [key=0, style=solid];
m10_340 -> m10_325  [key=2, style=dotted];
m10_341 -> m10_342  [key=0, style=solid];
m10_341 -> m10_186  [key=2, style=dotted];
m10_342 -> m10_339  [color=blue, key=0, style=bold];
m10_348 -> m10_349  [key=0, style=solid];
m10_348 -> m10_14  [key=2, style=dotted];
m10_348 -> m10_152  [key=2, style=dotted];
m10_347 -> m10_348  [key=0, style=solid];
m10_347 -> m10_349  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_349 -> m10_350  [key=0, style=solid];
m10_349 -> m10_153  [key=2, style=dotted];
m10_349 -> m10_352  [key=2, style=dotted];
m10_350 -> m10_351  [key=0, style=solid];
m10_350 -> m10_20  [key=2, style=dotted];
m10_351 -> m10_347  [color=blue, key=0, style=bold];
m10_356 -> m10_357  [key=0, style=solid];
m10_356 -> m10_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_357 -> m10_358  [key=0, style=solid];
m10_357 -> m10_14  [key=2, style=dotted];
m10_357 -> m10_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_361 -> m10_362  [key=0, style=solid];
m10_361 -> m10_363  [key=2, style=dotted];
m10_358 -> m10_359  [key=0, style=solid];
m10_358 -> m10_20  [key=2, style=dotted];
m10_360 -> m10_361  [key=0, style=solid];
m10_359 -> m10_356  [color=blue, key=0, style=bold];
m10_362 -> m10_360  [color=blue, key=0, style=bold];
m10_367 -> m10_368  [key=0, style=solid];
m10_367 -> m10_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_368 -> m10_369  [key=0, style=solid];
m10_368 -> m10_14  [key=2, style=dotted];
m10_368 -> m10_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_371 -> m10_372  [key=0, style=solid];
m10_371 -> m10_363  [key=2, style=dotted];
m10_369 -> m10_367  [color=blue, key=0, style=bold];
m10_370 -> m10_371  [key=0, style=solid];
m10_372 -> m10_370  [color=blue, key=0, style=bold];
m10_376 -> m10_377  [key=0, style=solid];
m10_377 -> m10_378  [key=0, style=solid];
m10_377 -> m10_363  [key=2, style=dotted];
m10_378 -> m10_379  [key=0, style=solid];
m10_378 -> m10_186  [key=2, style=dotted];
m10_379 -> m10_376  [color=blue, key=0, style=bold];
m10_385 -> m10_386  [key=0, style=solid];
m10_385 -> m10_389  [key=2, style=dotted];
m10_384 -> m10_385  [key=0, style=solid];
m10_384 -> m10_386  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_386 -> m10_387  [key=0, style=solid];
m10_386 -> m10_363  [key=2, style=dotted];
m10_387 -> m10_388  [key=0, style=solid];
m10_387 -> m10_20  [key=2, style=dotted];
m10_388 -> m10_384  [color=blue, key=0, style=bold];
m10_393 -> m10_394  [key=0, style=solid];
m10_393 -> m10_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_394 -> m10_395  [key=0, style=solid];
m10_394 -> m10_14  [key=2, style=dotted];
m10_394 -> m10_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_398 -> m10_399  [key=0, style=solid];
m10_398 -> m10_400  [key=2, style=dotted];
m10_398 -> m10_401  [key=2, style=dotted];
m10_395 -> m10_396  [key=0, style=solid];
m10_395 -> m10_20  [key=2, style=dotted];
m10_397 -> m10_398  [key=0, style=solid];
m10_396 -> m10_393  [color=blue, key=0, style=bold];
m10_399 -> m10_397  [color=blue, key=0, style=bold];
m10_405 -> m10_406  [key=0, style=solid];
m10_405 -> m10_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_406 -> m10_407  [key=0, style=solid];
m10_406 -> m10_14  [key=2, style=dotted];
m10_406 -> m10_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_410 -> m10_411  [key=0, style=solid];
m10_410 -> m10_401  [key=2, style=dotted];
m10_407 -> m10_408  [key=0, style=solid];
m10_407 -> m10_20  [key=2, style=dotted];
m10_409 -> m10_410  [key=0, style=solid];
m10_408 -> m10_405  [color=blue, key=0, style=bold];
m10_411 -> m10_409  [color=blue, key=0, style=bold];
m10_415 -> m10_416  [key=0, style=solid];
m10_415 -> m10_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_415 -> m10_418  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_415 -> m10_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_415 -> m10_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_416 -> m10_417  [key=0, style=solid];
m10_416 -> m10_400  [key=2, style=dotted];
m10_417 -> m10_418  [key=0, style=solid];
m10_417 -> m10_401  [key=2, style=dotted];
m10_418 -> m10_419  [key=0, style=solid];
m10_418 -> m10_151  [key=2, style=dotted];
m10_418 -> m10_152  [key=2, style=dotted];
m10_418 -> m10_420  [color=darkseagreen4, key=1, label=server, style=dashed];
m10_418 -> m10_421  [color=darkseagreen4, key=1, label=server, style=dashed];
m10_423 -> m10_424  [key=0, style=solid];
m10_423 -> m10_401  [key=2, style=dotted];
m10_424 -> m10_425  [key=0, style=solid];
m10_424 -> m10_151  [key=2, style=dotted];
m10_424 -> m10_152  [key=2, style=dotted];
m10_424 -> m10_426  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m10_419 -> m10_420  [key=0, style=solid];
m10_419 -> m10_20  [key=2, style=dotted];
m10_420 -> m10_421  [key=0, style=solid];
m10_420 -> m10_428  [key=2, style=dotted];
m10_420 -> m10_158  [key=2, style=dotted];
m10_421 -> m10_422  [key=0, style=solid];
m10_421 -> m10_85  [key=2, style=dotted];
m10_422 -> m10_423  [key=0, style=solid];
m10_422 -> m10_400  [key=2, style=dotted];
m10_425 -> m10_426  [key=0, style=solid];
m10_425 -> m10_20  [key=2, style=dotted];
m10_426 -> m10_427  [key=0, style=solid];
m10_426 -> m10_429  [key=2, style=dotted];
m10_427 -> m10_415  [color=blue, key=0, style=bold];
m10_433 -> m10_434  [key=0, style=solid];
m10_433 -> m10_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_434 -> m10_435  [key=0, style=solid];
m10_434 -> m10_14  [key=2, style=dotted];
m10_434 -> m10_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_437 -> m10_438  [key=0, style=solid];
m10_437 -> m10_439  [key=2, style=dotted];
m10_435 -> m10_433  [color=blue, key=0, style=bold];
m10_436 -> m10_437  [key=0, style=solid];
m10_438 -> m10_436  [color=blue, key=0, style=bold];
m10_445 -> m10_446  [key=0, style=solid];
m10_445 -> m10_389  [key=2, style=dotted];
m10_444 -> m10_445  [key=0, style=solid];
m10_444 -> m10_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_444 -> m10_447  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_446 -> m10_447  [key=0, style=solid];
m10_446 -> m10_439  [key=2, style=dotted];
m10_447 -> m10_448  [key=0, style=solid];
m10_447 -> m10_151  [key=2, style=dotted];
m10_447 -> m10_152  [key=2, style=dotted];
m10_448 -> m10_449  [key=0, style=solid];
m10_448 -> m10_450  [key=2, style=dotted];
m10_449 -> m10_444  [color=blue, key=0, style=bold];
m10_454 -> m10_455  [key=0, style=solid];
m10_454 -> m10_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_455 -> m10_456  [key=0, style=solid];
m10_455 -> m10_14  [key=2, style=dotted];
m10_455 -> m10_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_458 -> m10_459  [key=0, style=solid];
m10_458 -> m10_460  [key=2, style=dotted];
m10_456 -> m10_454  [color=blue, key=0, style=bold];
m10_457 -> m10_458  [key=0, style=solid];
m10_459 -> m10_457  [color=blue, key=0, style=bold];
m10_466 -> m10_467  [key=0, style=solid];
m10_466 -> m10_389  [key=2, style=dotted];
m10_465 -> m10_466  [key=0, style=solid];
m10_465 -> m10_467  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_465 -> m10_468  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_467 -> m10_468  [key=0, style=solid];
m10_467 -> m10_460  [key=2, style=dotted];
m10_468 -> m10_469  [key=0, style=solid];
m10_468 -> m10_151  [key=2, style=dotted];
m10_468 -> m10_159  [key=2, style=dotted];
m10_468 -> m10_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_468 -> m10_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_468 -> m10_470  [color=darkseagreen4, key=1, label=servers, style=dashed];
m10_469 -> m10_470  [key=0, style=solid];
m10_469 -> m10_450  [key=2, style=dotted];
m10_472 -> m10_473  [key=0, style=solid];
m10_475 -> m10_476  [key=0, style=solid];
m10_470 -> m10_471  [key=0, style=solid];
m10_470 -> m10_20  [key=2, style=dotted];
m10_471 -> m10_465  [color=blue, key=0, style=bold];
m10_473 -> m10_474  [key=0, style=solid];
m10_474 -> m10_472  [color=blue, key=0, style=bold];
m10_476 -> m10_477  [key=0, style=solid];
m10_477 -> m10_475  [color=blue, key=0, style=bold];
m10_481 -> m10_482  [key=0, style=solid];
m10_481 -> m10_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_482 -> m10_483  [key=0, style=solid];
m10_482 -> m10_14  [key=2, style=dotted];
m10_482 -> m10_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_485 -> m10_486  [key=0, style=solid];
m10_485 -> m10_487  [key=2, style=dotted];
m10_485 -> m10_488  [key=2, style=dotted];
m10_483 -> m10_481  [color=blue, key=0, style=bold];
m10_484 -> m10_485  [key=0, style=solid];
m10_486 -> m10_484  [color=blue, key=0, style=bold];
m10_494 -> m10_495  [key=0, style=solid];
m10_494 -> m10_156  [key=2, style=dotted];
m10_494 -> m10_499  [key=2, style=dotted];
m10_494 -> m10_389  [key=2, style=dotted];
m10_493 -> m10_494  [key=0, style=solid];
m10_493 -> m10_495  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_493 -> m10_496  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_495 -> m10_496  [key=0, style=solid];
m10_495 -> m10_500  [key=2, style=dotted];
m10_495 -> m10_488  [key=2, style=dotted];
m10_496 -> m10_497  [key=0, style=solid];
m10_496 -> m10_151  [key=2, style=dotted];
m10_496 -> m10_152  [key=2, style=dotted];
m10_497 -> m10_498  [key=0, style=solid];
m10_497 -> m10_20  [key=2, style=dotted];
m10_498 -> m10_493  [color=blue, key=0, style=bold];
m10_504 -> m10_505  [key=0, style=solid];
m10_504 -> m10_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_505 -> m10_506  [key=0, style=solid];
m10_505 -> m10_14  [key=2, style=dotted];
m10_505 -> m10_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_508 -> m10_509  [key=0, style=solid];
m10_508 -> m10_510  [key=2, style=dotted];
m10_506 -> m10_504  [color=blue, key=0, style=bold];
m10_507 -> m10_508  [key=0, style=solid];
m10_509 -> m10_507  [color=blue, key=0, style=bold];
m10_514 -> m10_515  [key=0, style=solid];
m10_515 -> m10_516  [key=0, style=solid];
m10_515 -> m10_510  [key=2, style=dotted];
m10_515 -> m10_517  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_516 -> m10_517  [key=0, style=solid];
m10_516 -> m10_85  [key=2, style=dotted];
m10_517 -> m10_518  [key=0, style=solid];
m10_517 -> m10_20  [key=2, style=dotted];
m10_518 -> m10_514  [color=blue, key=0, style=bold];
m10_524 -> m10_525  [key=0, style=solid];
m10_524 -> m10_389  [key=2, style=dotted];
m10_523 -> m10_524  [key=0, style=solid];
m10_523 -> m10_525  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_525 -> m10_526  [key=0, style=solid];
m10_525 -> m10_510  [key=2, style=dotted];
m10_525 -> m10_527  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_525 -> m10_528  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_526 -> m10_527  [key=0, style=solid];
m10_526 -> m10_20  [key=2, style=dotted];
m10_527 -> m10_528  [key=0, style=solid];
m10_527 -> m10_429  [key=2, style=dotted];
m10_528 -> m10_529  [key=0, style=solid];
m10_528 -> m10_429  [key=2, style=dotted];
m10_529 -> m10_523  [color=blue, key=0, style=bold];
m10_533 -> m10_534  [key=0, style=solid];
m10_533 -> m10_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_534 -> m10_535  [key=0, style=solid];
m10_534 -> m10_14  [key=2, style=dotted];
m10_534 -> m10_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_538 -> m10_539  [key=0, style=solid];
m10_538 -> m10_105  [key=2, style=dotted];
m10_538 -> m10_540  [key=2, style=dotted];
m10_535 -> m10_536  [key=0, style=solid];
m10_535 -> m10_20  [key=2, style=dotted];
m10_537 -> m10_538  [key=0, style=solid];
m10_536 -> m10_533  [color=blue, key=0, style=bold];
m10_539 -> m10_537  [color=blue, key=0, style=bold];
m10_544 -> m10_545  [key=0, style=solid];
m10_544 -> m10_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_545 -> m10_546  [key=0, style=solid];
m10_545 -> m10_14  [key=2, style=dotted];
m10_545 -> m10_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_549 -> m10_550  [key=0, style=solid];
m10_549 -> m10_540  [key=2, style=dotted];
m10_546 -> m10_547  [key=0, style=solid];
m10_546 -> m10_20  [key=2, style=dotted];
m10_548 -> m10_549  [key=0, style=solid];
m10_547 -> m10_544  [color=blue, key=0, style=bold];
m10_550 -> m10_548  [color=blue, key=0, style=bold];
m10_554 -> m10_555  [key=0, style=solid];
m10_554 -> m10_556  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m10_555 -> m10_556  [key=0, style=solid];
m10_555 -> m10_105  [key=2, style=dotted];
m10_555 -> m10_540  [key=2, style=dotted];
m10_556 -> m10_557  [key=0, style=solid];
m10_556 -> m10_151  [key=2, style=dotted];
m10_556 -> m10_159  [key=2, style=dotted];
m10_556 -> m10_560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_556 -> m10_563  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_556 -> m10_558  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_557 -> m10_558  [key=0, style=solid];
m10_557 -> m10_20  [key=2, style=dotted];
m10_560 -> m10_561  [key=0, style=solid];
m10_563 -> m10_564  [key=0, style=solid];
m10_558 -> m10_559  [key=0, style=solid];
m10_558 -> m10_20  [key=2, style=dotted];
m10_559 -> m10_554  [color=blue, key=0, style=bold];
m10_561 -> m10_562  [key=0, style=solid];
m10_562 -> m10_560  [color=blue, key=0, style=bold];
m10_564 -> m10_565  [key=0, style=solid];
m10_565 -> m10_563  [color=blue, key=0, style=bold];
m10_569 -> m10_570  [key=0, style=solid];
m10_569 -> m10_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_570 -> m10_571  [key=0, style=solid];
m10_570 -> m10_14  [key=2, style=dotted];
m10_570 -> m10_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_573 -> m10_574  [key=0, style=solid];
m10_573 -> m10_575  [key=2, style=dotted];
m10_571 -> m10_569  [color=blue, key=0, style=bold];
m10_572 -> m10_573  [key=0, style=solid];
m10_574 -> m10_572  [color=blue, key=0, style=bold];
m10_579 -> m10_580  [key=0, style=solid];
m10_580 -> m10_581  [key=0, style=solid];
m10_580 -> m10_575  [key=2, style=dotted];
m10_581 -> m10_582  [key=0, style=solid];
m10_581 -> m10_186  [key=2, style=dotted];
m10_582 -> m10_579  [color=blue, key=0, style=bold];
m10_588 -> m10_589  [key=0, style=solid];
m10_588 -> m10_389  [key=2, style=dotted];
m10_587 -> m10_588  [key=0, style=solid];
m10_587 -> m10_589  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_589 -> m10_590  [key=0, style=solid];
m10_589 -> m10_575  [key=2, style=dotted];
m10_589 -> m10_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_589 -> m10_592  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_589 -> m10_593  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_590 -> m10_591  [key=0, style=solid];
m10_590 -> m10_85  [key=2, style=dotted];
m10_591 -> m10_592  [key=0, style=solid];
m10_591 -> m10_20  [key=2, style=dotted];
m10_592 -> m10_593  [key=0, style=solid];
m10_592 -> m10_20  [key=2, style=dotted];
m10_593 -> m10_594  [key=0, style=solid];
m10_593 -> m10_20  [key=2, style=dotted];
m10_594 -> m10_587  [color=blue, key=0, style=bold];
m10_598 -> m10_599  [key=0, style=solid];
m10_598 -> m10_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_599 -> m10_600  [key=0, style=solid];
m10_599 -> m10_14  [key=2, style=dotted];
m10_599 -> m10_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_602 -> m10_603  [key=0, style=solid];
m10_602 -> m10_604  [key=2, style=dotted];
m10_600 -> m10_598  [color=blue, key=0, style=bold];
m10_601 -> m10_602  [key=0, style=solid];
m10_603 -> m10_601  [color=blue, key=0, style=bold];
m10_608 -> m10_609  [key=0, style=solid];
m10_609 -> m10_610  [key=0, style=solid];
m10_609 -> m10_604  [key=2, style=dotted];
m10_610 -> m10_611  [key=0, style=solid];
m10_610 -> m10_20  [key=2, style=dotted];
m10_611 -> m10_608  [color=blue, key=0, style=bold];
m10_617 -> m10_618  [color=red, key=0, style=solid];
m10_617 -> m10_621  [color=red, key=2, style=dotted];
m10_617 -> m10_389  [color=red, key=2, style=dotted];
m10_616 -> m10_617  [color=red, key=0, style=solid];
m10_616 -> m10_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_618 -> m10_619  [key=0, style=solid];
m10_618 -> m10_604  [key=2, style=dotted];
m10_619 -> m10_620  [key=0, style=solid];
m10_619 -> m10_20  [key=2, style=dotted];
m10_620 -> m10_616  [color=blue, key=0, style=bold];
m10_625 -> m10_626  [key=0, style=solid];
m10_625 -> m10_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_626 -> m10_627  [key=0, style=solid];
m10_626 -> m10_14  [key=2, style=dotted];
m10_626 -> m10_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_629 -> m10_630  [key=0, style=solid];
m10_629 -> m10_631  [key=2, style=dotted];
m10_627 -> m10_625  [color=blue, key=0, style=bold];
m10_628 -> m10_629  [key=0, style=solid];
m10_630 -> m10_628  [color=blue, key=0, style=bold];
m10_637 -> m10_638  [key=0, style=solid];
m10_637 -> m10_621  [key=2, style=dotted];
m10_637 -> m10_389  [key=2, style=dotted];
m10_636 -> m10_637  [key=0, style=solid];
m10_636 -> m10_638  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_638 -> m10_639  [key=0, style=solid];
m10_638 -> m10_631  [key=2, style=dotted];
m10_639 -> m10_640  [key=0, style=solid];
m10_639 -> m10_20  [key=2, style=dotted];
m10_640 -> m10_636  [color=blue, key=0, style=bold];
m10_644 -> m10_645  [key=0, style=solid];
m10_644 -> m10_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_645 -> m10_646  [key=0, style=solid];
m10_645 -> m10_14  [key=2, style=dotted];
m10_645 -> m10_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_648 -> m10_649  [key=0, style=solid];
m10_648 -> m10_650  [key=2, style=dotted];
m10_646 -> m10_644  [color=blue, key=0, style=bold];
m10_647 -> m10_648  [key=0, style=solid];
m10_649 -> m10_647  [color=blue, key=0, style=bold];
m10_654 -> m10_655  [key=0, style=solid];
m10_655 -> m10_656  [key=0, style=solid];
m10_655 -> m10_650  [key=2, style=dotted];
m10_656 -> m10_657  [key=0, style=solid];
m10_656 -> m10_20  [key=2, style=dotted];
m10_657 -> m10_654  [color=blue, key=0, style=bold];
m10_663 -> m10_664  [key=0, style=solid];
m10_663 -> m10_389  [key=2, style=dotted];
m10_662 -> m10_663  [key=0, style=solid];
m10_662 -> m10_664  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_664 -> m10_665  [key=0, style=solid];
m10_664 -> m10_650  [key=2, style=dotted];
m10_665 -> m10_666  [key=0, style=solid];
m10_665 -> m10_20  [key=2, style=dotted];
m10_666 -> m10_662  [color=blue, key=0, style=bold];
m10_672 -> m10_673  [key=0, style=solid];
m10_672 -> m10_389  [key=2, style=dotted];
m10_671 -> m10_672  [key=0, style=solid];
m10_671 -> m10_673  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_673 -> m10_674  [key=0, style=solid];
m10_673 -> m10_650  [key=2, style=dotted];
m10_674 -> m10_675  [key=0, style=solid];
m10_674 -> m10_20  [key=2, style=dotted];
m10_675 -> m10_671  [color=blue, key=0, style=bold];
m10_679 -> m10_680  [key=0, style=solid];
m10_679 -> m10_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_680 -> m10_681  [key=0, style=solid];
m10_680 -> m10_14  [key=2, style=dotted];
m10_680 -> m10_682  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_683 -> m10_684  [key=0, style=solid];
m10_683 -> m10_685  [key=2, style=dotted];
m10_681 -> m10_679  [color=blue, key=0, style=bold];
m10_682 -> m10_683  [key=0, style=solid];
m10_684 -> m10_682  [color=blue, key=0, style=bold];
m10_689 -> m10_690  [key=0, style=solid];
m10_690 -> m10_691  [key=0, style=solid];
m10_690 -> m10_685  [key=2, style=dotted];
m10_691 -> m10_692  [key=0, style=solid];
m10_691 -> m10_20  [key=2, style=dotted];
m10_692 -> m10_689  [color=blue, key=0, style=bold];
m10_698 -> m10_699  [key=0, style=solid];
m10_698 -> m10_389  [key=2, style=dotted];
m10_697 -> m10_698  [key=0, style=solid];
m10_697 -> m10_699  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_699 -> m10_700  [key=0, style=solid];
m10_699 -> m10_685  [key=2, style=dotted];
m10_700 -> m10_701  [key=0, style=solid];
m10_700 -> m10_20  [key=2, style=dotted];
m10_701 -> m10_697  [color=blue, key=0, style=bold];
m10_705 -> m10_706  [key=0, style=solid];
m10_705 -> m10_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_706 -> m10_707  [key=0, style=solid];
m10_706 -> m10_14  [key=2, style=dotted];
m10_706 -> m10_708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_709 -> m10_710  [key=0, style=solid];
m10_709 -> m10_711  [key=2, style=dotted];
m10_707 -> m10_705  [color=blue, key=0, style=bold];
m10_708 -> m10_709  [key=0, style=solid];
m10_710 -> m10_708  [color=blue, key=0, style=bold];
m10_715 -> m10_716  [key=0, style=solid];
m10_716 -> m10_717  [key=0, style=solid];
m10_716 -> m10_711  [key=2, style=dotted];
m10_717 -> m10_718  [key=0, style=solid];
m10_717 -> m10_158  [key=2, style=dotted];
m10_718 -> m10_715  [color=blue, key=0, style=bold];
m10_724 -> m10_725  [key=0, style=solid];
m10_724 -> m10_499  [key=2, style=dotted];
m10_724 -> m10_389  [key=2, style=dotted];
m10_723 -> m10_724  [key=0, style=solid];
m10_723 -> m10_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_725 -> m10_726  [key=0, style=solid];
m10_725 -> m10_711  [key=2, style=dotted];
m10_725 -> m10_727  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_726 -> m10_727  [key=0, style=solid];
m10_726 -> m10_487  [key=2, style=dotted];
m10_726 -> m10_158  [key=2, style=dotted];
m10_727 -> m10_728  [key=0, style=solid];
m10_727 -> m10_487  [key=2, style=dotted];
m10_727 -> m10_158  [key=2, style=dotted];
m10_728 -> m10_723  [color=blue, key=0, style=bold];
m10_732 -> m10_733  [key=0, style=solid];
m10_732 -> m10_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_733 -> m10_734  [key=0, style=solid];
m10_733 -> m10_14  [key=2, style=dotted];
m10_733 -> m10_735  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_736 -> m10_737  [key=0, style=solid];
m10_736 -> m10_738  [key=2, style=dotted];
m10_734 -> m10_732  [color=blue, key=0, style=bold];
m10_735 -> m10_736  [key=0, style=solid];
m10_737 -> m10_735  [color=blue, key=0, style=bold];
m10_742 -> m10_743  [key=0, style=solid];
m10_743 -> m10_744  [key=0, style=solid];
m10_743 -> m10_738  [key=2, style=dotted];
m10_744 -> m10_745  [key=0, style=solid];
m10_744 -> m10_20  [key=2, style=dotted];
m10_745 -> m10_742  [color=blue, key=0, style=bold];
m10_751 -> m10_752  [key=0, style=solid];
m10_751 -> m10_389  [key=2, style=dotted];
m10_750 -> m10_751  [key=0, style=solid];
m10_750 -> m10_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_752 -> m10_753  [key=0, style=solid];
m10_752 -> m10_738  [key=2, style=dotted];
m10_753 -> m10_754  [key=0, style=solid];
m10_753 -> m10_20  [key=2, style=dotted];
m10_754 -> m10_750  [color=blue, key=0, style=bold];
m10_758 -> m10_759  [key=0, style=solid];
m10_758 -> m10_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_759 -> m10_760  [key=0, style=solid];
m10_759 -> m10_14  [key=2, style=dotted];
m10_759 -> m10_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_762 -> m10_763  [key=0, style=solid];
m10_762 -> m10_764  [key=2, style=dotted];
m10_760 -> m10_758  [color=blue, key=0, style=bold];
m10_761 -> m10_762  [key=0, style=solid];
m10_763 -> m10_761  [color=blue, key=0, style=bold];
m10_768 -> m10_769  [key=0, style=solid];
m10_769 -> m10_770  [key=0, style=solid];
m10_769 -> m10_764  [key=2, style=dotted];
m10_770 -> m10_771  [key=0, style=solid];
m10_770 -> m10_158  [key=2, style=dotted];
m10_771 -> m10_768  [color=blue, key=0, style=bold];
m10_777 -> m10_778  [key=0, style=solid];
m10_777 -> m10_499  [key=2, style=dotted];
m10_777 -> m10_389  [key=2, style=dotted];
m10_776 -> m10_777  [key=0, style=solid];
m10_776 -> m10_778  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_778 -> m10_779  [key=0, style=solid];
m10_778 -> m10_764  [key=2, style=dotted];
m10_778 -> m10_780  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_779 -> m10_780  [key=0, style=solid];
m10_779 -> m10_487  [key=2, style=dotted];
m10_779 -> m10_158  [key=2, style=dotted];
m10_780 -> m10_781  [key=0, style=solid];
m10_780 -> m10_487  [key=2, style=dotted];
m10_780 -> m10_158  [key=2, style=dotted];
m10_781 -> m10_776  [color=blue, key=0, style=bold];
m10_785 -> m10_786  [key=0, style=solid];
m10_785 -> m10_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_786 -> m10_787  [key=0, style=solid];
m10_786 -> m10_14  [key=2, style=dotted];
m10_786 -> m10_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_790 -> m10_791  [key=0, style=solid];
m10_790 -> m10_792  [key=2, style=dotted];
m10_787 -> m10_788  [key=0, style=solid];
m10_787 -> m10_20  [key=2, style=dotted];
m10_789 -> m10_790  [key=0, style=solid];
m10_788 -> m10_785  [color=blue, key=0, style=bold];
m10_791 -> m10_789  [color=blue, key=0, style=bold];
m10_796 -> m10_797  [key=0, style=solid];
m10_796 -> m10_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_797 -> m10_798  [key=0, style=solid];
m10_797 -> m10_14  [key=2, style=dotted];
m10_797 -> m10_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_801 -> m10_802  [key=0, style=solid];
m10_801 -> m10_792  [key=2, style=dotted];
m10_798 -> m10_799  [key=0, style=solid];
m10_798 -> m10_20  [key=2, style=dotted];
m10_800 -> m10_801  [key=0, style=solid];
m10_799 -> m10_796  [color=blue, key=0, style=bold];
m10_802 -> m10_800  [color=blue, key=0, style=bold];
m10_806 -> m10_807  [key=0, style=solid];
m10_807 -> m10_808  [key=0, style=solid];
m10_807 -> m10_792  [key=2, style=dotted];
m10_808 -> m10_809  [key=0, style=solid];
m10_808 -> m10_186  [key=2, style=dotted];
m10_809 -> m10_806  [color=blue, key=0, style=bold];
m10_815 -> m10_816  [key=0, style=solid];
m10_815 -> m10_389  [key=2, style=dotted];
m10_814 -> m10_815  [key=0, style=solid];
m10_814 -> m10_816  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_816 -> m10_817  [key=0, style=solid];
m10_816 -> m10_792  [key=2, style=dotted];
m10_817 -> m10_818  [key=0, style=solid];
m10_817 -> m10_20  [key=2, style=dotted];
m10_818 -> m10_814  [color=blue, key=0, style=bold];
m10_822 -> m10_823  [key=0, style=solid];
m10_822 -> m10_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_823 -> m10_824  [key=0, style=solid];
m10_823 -> m10_14  [key=2, style=dotted];
m10_823 -> m10_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_827 -> m10_828  [key=0, style=solid];
m10_827 -> m10_829  [key=2, style=dotted];
m10_824 -> m10_825  [key=0, style=solid];
m10_824 -> m10_20  [key=2, style=dotted];
m10_826 -> m10_827  [key=0, style=solid];
m10_825 -> m10_822  [color=blue, key=0, style=bold];
m10_828 -> m10_826  [color=blue, key=0, style=bold];
m10_833 -> m10_834  [key=0, style=solid];
m10_834 -> m10_835  [key=0, style=solid];
m10_834 -> m10_829  [key=2, style=dotted];
m10_835 -> m10_836  [key=0, style=solid];
m10_835 -> m10_837  [key=2, style=dotted];
m10_836 -> m10_833  [color=blue, key=0, style=bold];
m10_843 -> m10_844  [key=0, style=solid];
m10_843 -> m10_389  [key=2, style=dotted];
m10_842 -> m10_843  [key=0, style=solid];
m10_842 -> m10_844  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_844 -> m10_845  [key=0, style=solid];
m10_844 -> m10_829  [key=2, style=dotted];
m10_845 -> m10_846  [key=0, style=solid];
m10_845 -> m10_20  [key=2, style=dotted];
m10_846 -> m10_842  [color=blue, key=0, style=bold];
m10_850 -> m10_851  [key=0, style=solid];
m10_850 -> m10_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_851 -> m10_852  [key=0, style=solid];
m10_851 -> m10_14  [key=2, style=dotted];
m10_851 -> m10_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_854 -> m10_855  [key=0, style=solid];
m10_854 -> m10_856  [key=2, style=dotted];
m10_852 -> m10_850  [color=blue, key=0, style=bold];
m10_853 -> m10_854  [key=0, style=solid];
m10_855 -> m10_853  [color=blue, key=0, style=bold];
m10_860 -> m10_861  [key=0, style=solid];
m10_861 -> m10_862  [key=0, style=solid];
m10_861 -> m10_856  [key=2, style=dotted];
m10_862 -> m10_863  [key=0, style=solid];
m10_862 -> m10_837  [key=2, style=dotted];
m10_863 -> m10_860  [color=blue, key=0, style=bold];
m10_869 -> m10_870  [key=0, style=solid];
m10_869 -> m10_389  [key=2, style=dotted];
m10_868 -> m10_869  [key=0, style=solid];
m10_868 -> m10_870  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_870 -> m10_871  [key=0, style=solid];
m10_870 -> m10_856  [key=2, style=dotted];
m10_871 -> m10_872  [key=0, style=solid];
m10_871 -> m10_20  [key=2, style=dotted];
m10_872 -> m10_868  [color=blue, key=0, style=bold];
m10_876 -> m10_877  [key=0, style=solid];
m10_876 -> m10_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_877 -> m10_878  [key=0, style=solid];
m10_877 -> m10_14  [key=2, style=dotted];
m10_877 -> m10_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_880 -> m10_881  [key=0, style=solid];
m10_880 -> m10_882  [key=2, style=dotted];
m10_878 -> m10_876  [color=blue, key=0, style=bold];
m10_879 -> m10_880  [key=0, style=solid];
m10_881 -> m10_879  [color=blue, key=0, style=bold];
m10_886 -> m10_887  [key=0, style=solid];
m10_887 -> m10_888  [key=0, style=solid];
m10_887 -> m10_882  [key=2, style=dotted];
m10_888 -> m10_889  [key=0, style=solid];
m10_888 -> m10_158  [key=2, style=dotted];
m10_889 -> m10_886  [color=blue, key=0, style=bold];
m10_895 -> m10_896  [key=0, style=solid];
m10_895 -> m10_157  [key=2, style=dotted];
m10_895 -> m10_389  [key=2, style=dotted];
m10_896 -> m10_897  [key=0, style=solid];
m10_896 -> m10_882  [key=2, style=dotted];
m10_896 -> m10_898  [color=darkseagreen4, key=1, label=result, style=dashed];
m10_897 -> m10_898  [key=0, style=solid];
m10_897 -> m10_487  [key=2, style=dotted];
m10_897 -> m10_158  [key=2, style=dotted];
m10_898 -> m10_899  [key=0, style=solid];
m10_898 -> m10_487  [key=2, style=dotted];
m10_898 -> m10_158  [key=2, style=dotted];
m10_899 -> m10_894  [color=blue, key=0, style=bold];
m10_412 -> m10_413  [key=0, style=solid];
m10_413 -> m10_414  [key=0, style=solid];
m10_413 -> m10_125  [key=2, style=dotted];
m10_413 -> m10_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_414 -> m10_412  [color=blue, key=0, style=bold];
m10_693 -> m10_694  [key=0, style=solid];
m10_694 -> m10_695  [key=0, style=solid];
m10_694 -> m10_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_694 -> m10_694  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_695 -> m10_696  [key=0, style=solid];
m10_695 -> m10_125  [key=2, style=dotted];
m10_695 -> m10_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_696 -> m10_693  [color=blue, key=0, style=bold];
m10_390 -> m10_391  [key=0, style=solid];
m10_391 -> m10_392  [key=0, style=solid];
m10_391 -> m10_66  [key=2, style=dotted];
m10_391 -> m10_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_392 -> m10_390  [color=blue, key=0, style=bold];
m10_501 -> m10_502  [key=0, style=solid];
m10_502 -> m10_503  [key=0, style=solid];
m10_502 -> m10_66  [key=2, style=dotted];
m10_502 -> m10_504  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_503 -> m10_501  [color=blue, key=0, style=bold];
m10_900 -> m10_901  [key=0, style=solid];
m10_900 -> m10_903  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m10_901 -> m10_902  [key=0, style=solid];
m10_901 -> m10_32  [key=2, style=dotted];
m10_901 -> m10_903  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m10_903 -> m10_904  [key=0, style=solid];
m10_903 -> m10_905  [key=2, style=dotted];
m10_902 -> m10_903  [key=0, style=solid];
m10_902 -> m10_24  [key=2, style=dotted];
m10_904 -> m10_900  [color=blue, key=0, style=bold];
m10_260 -> m10_261  [key=0, style=solid];
m10_261 -> m10_262  [key=0, style=solid];
m10_261 -> m10_66  [key=2, style=dotted];
m10_261 -> m10_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_262 -> m10_260  [color=blue, key=0, style=bold];
m10_179 -> m10_180  [key=0, style=solid];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_66  [key=2, style=dotted];
m10_180 -> m10_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_181 -> m10_179  [color=blue, key=0, style=bold];
m10_77 -> m10_78  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_66  [key=2, style=dotted];
m10_78 -> m10_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_79 -> m10_77  [color=blue, key=0, style=bold];
m10_336 -> m10_337  [key=0, style=solid];
m10_337 -> m10_338  [key=0, style=solid];
m10_337 -> m10_66  [key=2, style=dotted];
m10_337 -> m10_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_338 -> m10_336  [color=blue, key=0, style=bold];
m10_121 -> m10_910  [key=0, style=solid];
m10_121 -> m10_108  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m10_121 -> m10_123  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m10_121 -> m10_189  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m10_910 -> m10_121  [color=blue, key=0, style=bold];
m10_729 -> m10_730  [key=0, style=solid];
m10_730 -> m10_731  [key=0, style=solid];
m10_730 -> m10_66  [key=2, style=dotted];
m10_730 -> m10_732  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_731 -> m10_729  [color=blue, key=0, style=bold];
m10_530 -> m10_531  [key=0, style=solid];
m10_531 -> m10_532  [key=0, style=solid];
m10_531 -> m10_66  [key=2, style=dotted];
m10_531 -> m10_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_532 -> m10_530  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_7  [key=2, style=dotted];
m10_2 -> m10_4  [color=darkseagreen4, key=1, label=provider, style=dashed];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_8  [key=2, style=dotted];
m10_3 -> m10_9  [key=2, style=dotted];
m10_3 -> m10_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_10  [key=2, style=dotted];
m10_5 -> m10_0  [color=blue, key=0, style=bold];
m10_107 -> m10_108  [key=0, style=solid];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_66  [key=2, style=dotted];
m10_108 -> m10_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_109 -> m10_107  [color=blue, key=0, style=bold];
m10_612 -> m10_613  [color=red, key=0, style=solid];
m10_613 -> m10_614  [color=red, key=0, style=solid];
m10_613 -> m10_617  [color=red, key=1, label=arrangeSql, style=dashed];
m10_613 -> m10_613  [color=red, key=3, label="Local variable string arrangeSql", style=bold];
m10_614 -> m10_615  [color=red, key=0, style=solid];
m10_614 -> m10_125  [color=red, key=2, style=dotted];
m10_614 -> m10_616  [color=red, key=1, label="lambda expression", style=dashed];
m10_615 -> m10_612  [color=blue, key=0, style=bold];
m10_765 -> m10_766  [key=0, style=solid];
m10_766 -> m10_767  [key=0, style=solid];
m10_766 -> m10_66  [key=2, style=dotted];
m10_766 -> m10_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_767 -> m10_765  [color=blue, key=0, style=bold];
m10_489 -> m10_490  [key=0, style=solid];
m10_490 -> m10_491  [key=0, style=solid];
m10_490 -> m10_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_490 -> m10_490  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_491 -> m10_492  [key=0, style=solid];
m10_491 -> m10_125  [key=2, style=dotted];
m10_491 -> m10_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_492 -> m10_489  [color=blue, key=0, style=bold];
m10_755 -> m10_756  [key=0, style=solid];
m10_756 -> m10_757  [key=0, style=solid];
m10_756 -> m10_66  [key=2, style=dotted];
m10_756 -> m10_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_757 -> m10_755  [color=blue, key=0, style=bold];
m10_226 -> m10_227  [key=0, style=solid];
m10_227 -> m10_228  [key=0, style=solid];
m10_227 -> m10_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_227 -> m10_227  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_228 -> m10_229  [key=0, style=solid];
m10_228 -> m10_125  [key=2, style=dotted];
m10_228 -> m10_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_229 -> m10_226  [color=blue, key=0, style=bold];
m10_803 -> m10_804  [key=0, style=solid];
m10_804 -> m10_805  [key=0, style=solid];
m10_804 -> m10_66  [key=2, style=dotted];
m10_804 -> m10_806  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_805 -> m10_803  [color=blue, key=0, style=bold];
m10_63 -> m10_64  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_66  [key=2, style=dotted];
m10_64 -> m10_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_65 -> m10_63  [color=blue, key=0, style=bold];
m10_676 -> m10_677  [key=0, style=solid];
m10_677 -> m10_678  [key=0, style=solid];
m10_677 -> m10_66  [key=2, style=dotted];
m10_677 -> m10_679  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_678 -> m10_676  [color=blue, key=0, style=bold];
m10_46 -> m10_47  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_49  [key=2, style=dotted];
m10_47 -> m10_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_48 -> m10_46  [color=blue, key=0, style=bold];
m10_519 -> m10_520  [key=0, style=solid];
m10_520 -> m10_521  [key=0, style=solid];
m10_520 -> m10_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_520 -> m10_520  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_521 -> m10_522  [key=0, style=solid];
m10_521 -> m10_125  [key=2, style=dotted];
m10_521 -> m10_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_522 -> m10_519  [color=blue, key=0, style=bold];
m10_541 -> m10_542  [key=0, style=solid];
m10_542 -> m10_543  [key=0, style=solid];
m10_542 -> m10_66  [key=2, style=dotted];
m10_542 -> m10_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_543 -> m10_541  [color=blue, key=0, style=bold];
m10_686 -> m10_687  [key=0, style=solid];
m10_687 -> m10_688  [key=0, style=solid];
m10_687 -> m10_66  [key=2, style=dotted];
m10_687 -> m10_689  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_688 -> m10_686  [color=blue, key=0, style=bold];
m10_702 -> m10_703  [key=0, style=solid];
m10_703 -> m10_704  [key=0, style=solid];
m10_703 -> m10_66  [key=2, style=dotted];
m10_703 -> m10_705  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_704 -> m10_702  [color=blue, key=0, style=bold];
m10_49 -> m10_906  [key=0, style=solid];
m10_49 -> m10_907  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m10_49 -> m10_47  [color=darkorchid, key=3, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action", style=bold];
m10_906 -> m10_907  [key=0, style=solid];
m10_906 -> m10_24  [key=2, style=dotted];
m10_906 -> m10_32  [key=2, style=dotted];
m10_907 -> m10_908  [key=0, style=solid];
m10_907 -> m10_909  [key=2, style=dotted];
m10_908 -> m10_49  [color=blue, key=0, style=bold];
m10_641 -> m10_642  [key=0, style=solid];
m10_642 -> m10_643  [key=0, style=solid];
m10_642 -> m10_66  [key=2, style=dotted];
m10_642 -> m10_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_643 -> m10_641  [color=blue, key=0, style=bold];
m10_819 -> m10_820  [key=0, style=solid];
m10_820 -> m10_821  [key=0, style=solid];
m10_820 -> m10_66  [key=2, style=dotted];
m10_820 -> m10_822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_821 -> m10_819  [color=blue, key=0, style=bold];
m10_315 -> m10_316  [key=0, style=solid];
m10_316 -> m10_317  [key=0, style=solid];
m10_316 -> m10_66  [key=2, style=dotted];
m10_316 -> m10_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_317 -> m10_315  [color=blue, key=0, style=bold];
m10_838 -> m10_839  [key=0, style=solid];
m10_839 -> m10_840  [key=0, style=solid];
m10_839 -> m10_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_839 -> m10_839  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_840 -> m10_841  [key=0, style=solid];
m10_840 -> m10_125  [key=2, style=dotted];
m10_840 -> m10_842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_841 -> m10_838  [color=blue, key=0, style=bold];
m10_95 -> m10_96  [key=0, style=solid];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_66  [key=2, style=dotted];
m10_96 -> m10_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_97 -> m10_95  [color=blue, key=0, style=bold];
m10_651 -> m10_652  [key=0, style=solid];
m10_652 -> m10_653  [key=0, style=solid];
m10_652 -> m10_66  [key=2, style=dotted];
m10_652 -> m10_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_653 -> m10_651  [color=blue, key=0, style=bold];
m10_873 -> m10_874  [key=0, style=solid];
m10_874 -> m10_875  [key=0, style=solid];
m10_874 -> m10_66  [key=2, style=dotted];
m10_874 -> m10_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_875 -> m10_873  [color=blue, key=0, style=bold];
m10_86 -> m10_87  [key=0, style=solid];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_66  [key=2, style=dotted];
m10_87 -> m10_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_88 -> m10_86  [color=blue, key=0, style=bold];
m10_595 -> m10_596  [key=0, style=solid];
m10_596 -> m10_597  [key=0, style=solid];
m10_596 -> m10_66  [key=2, style=dotted];
m10_596 -> m10_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_597 -> m10_595  [color=blue, key=0, style=bold];
m10_380 -> m10_381  [key=0, style=solid];
m10_381 -> m10_382  [key=0, style=solid];
m10_381 -> m10_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_381 -> m10_381  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_382 -> m10_383  [key=0, style=solid];
m10_382 -> m10_125  [key=2, style=dotted];
m10_382 -> m10_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_383 -> m10_380  [color=blue, key=0, style=bold];
m10_632 -> m10_633  [color=red, key=0, style=solid];
m10_633 -> m10_634  [color=red, key=0, style=solid];
m10_633 -> m10_637  [color=red, key=1, label=arrangeSql, style=dashed];
m10_633 -> m10_613  [color=red, key=3, label="Local variable string arrangeSql", style=bold];
m10_634 -> m10_635  [key=0, style=solid];
m10_634 -> m10_125  [key=2, style=dotted];
m10_634 -> m10_636  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_635 -> m10_632  [color=blue, key=0, style=bold];
m10_292 -> m10_293  [key=0, style=solid];
m10_293 -> m10_294  [key=0, style=solid];
m10_293 -> m10_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_293 -> m10_282  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_294 -> m10_295  [key=0, style=solid];
m10_294 -> m10_125  [key=2, style=dotted];
m10_294 -> m10_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_295 -> m10_292  [color=blue, key=0, style=bold];
m10_461 -> m10_462  [key=0, style=solid];
m10_462 -> m10_463  [key=0, style=solid];
m10_462 -> m10_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_462 -> m10_462  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_463 -> m10_464  [key=0, style=solid];
m10_463 -> m10_125  [key=2, style=dotted];
m10_463 -> m10_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_464 -> m10_461  [color=blue, key=0, style=bold];
m10_830 -> m10_831  [key=0, style=solid];
m10_831 -> m10_832  [key=0, style=solid];
m10_831 -> m10_66  [key=2, style=dotted];
m10_831 -> m10_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_832 -> m10_830  [color=blue, key=0, style=bold];
m10_551 -> m10_552  [key=0, style=solid];
m10_552 -> m10_553  [key=0, style=solid];
m10_552 -> m10_125  [key=2, style=dotted];
m10_552 -> m10_554  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_553 -> m10_551  [color=blue, key=0, style=bold];
m10_187 -> m10_188  [key=0, style=solid];
m10_188 -> m10_189  [key=0, style=solid];
m10_188 -> m10_193  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_188 -> m10_188  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_125  [key=2, style=dotted];
m10_189 -> m10_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_190 -> m10_187  [color=blue, key=0, style=bold];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_14  [key=2, style=dotted];
m10_17 -> m10_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=2, style=dotted];
m10_19 -> m10_16  [color=blue, key=0, style=bold];
m10_451 -> m10_452  [key=0, style=solid];
m10_452 -> m10_453  [key=0, style=solid];
m10_452 -> m10_66  [key=2, style=dotted];
m10_452 -> m10_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_453 -> m10_451  [color=blue, key=0, style=bold];
m10_746 -> m10_747  [color=red, key=0, style=solid];
m10_747 -> m10_748  [color=red, key=0, style=solid];
m10_747 -> m10_751  [color=red, key=1, label=arrangeSql, style=dashed];
m10_747 -> m10_747  [color=red, key=3, label="Local variable string arrangeSql", style=bold];
m10_748 -> m10_749  [key=0, style=solid];
m10_748 -> m10_125  [key=2, style=dotted];
m10_748 -> m10_750  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_749 -> m10_746  [color=blue, key=0, style=bold];
m10_169 -> m10_170  [key=0, style=solid];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_66  [key=2, style=dotted];
m10_170 -> m10_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_171 -> m10_169  [color=blue, key=0, style=bold];
m10_122 -> m10_123  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_125  [key=2, style=dotted];
m10_123 -> m10_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_124 -> m10_122  [color=blue, key=0, style=bold];
m10_373 -> m10_374  [key=0, style=solid];
m10_374 -> m10_375  [key=0, style=solid];
m10_374 -> m10_66  [key=2, style=dotted];
m10_374 -> m10_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_375 -> m10_373  [color=blue, key=0, style=bold];
m10_40 -> m10_41  [key=0, style=solid];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_32  [key=2, style=dotted];
m10_41 -> m10_44  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m10_42 -> m10_43  [key=0, style=solid];
m10_42 -> m10_24  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_20  [key=2, style=dotted];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_39  [key=2, style=dotted];
m10_45 -> m10_40  [color=blue, key=0, style=bold];
m10_605 -> m10_606  [key=0, style=solid];
m10_606 -> m10_607  [key=0, style=solid];
m10_606 -> m10_66  [key=2, style=dotted];
m10_606 -> m10_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_607 -> m10_605  [color=blue, key=0, style=bold];
m10_911 -> m10_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_42  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_47  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_64  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_78  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_96  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_108  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_241  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_261  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_272  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_283  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_327  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_337  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_413  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_442  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_452  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_463  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_479  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_502  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_512  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_542  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_567  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_577  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_585  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_596  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_606  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_614  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_623  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_634  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_652  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_660  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_669  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_677  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_687  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_695  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_703  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_713  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_730  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_740  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_748  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_766  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_774  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_794  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_804  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_812  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_831  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_840  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_848  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_858  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_866  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_874  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_884  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_892  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_902  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_911 -> m10_906  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m10_912 -> m10_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_913 -> m10_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m10_914 -> m10_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_915 -> m10_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m10_916 -> m10_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_917 -> m10_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_918 -> m10_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_919 -> m10_193  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_920 -> m10_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_921 -> m10_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_922 -> m10_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_923 -> m10_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_924 -> m10_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_925 -> m10_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_926 -> m10_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_927 -> m10_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_928 -> m10_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_929 -> m10_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_930 -> m10_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_931 -> m10_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_932 -> m10_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_933 -> m10_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_934 -> m10_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_935 -> m10_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_936 -> m10_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_937 -> m10_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_938 -> m10_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_939 -> m10_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_940 -> m10_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_941 -> m10_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_942 -> m10_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_943 -> m10_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_944 -> m10_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_945 -> m10_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_946 -> m10_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_947 -> m10_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_948 -> m10_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_949 -> m10_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_950 -> m10_617  [color=red, key=1, label=arrangeSql, style=dashed];
m10_951 -> m10_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_952 -> m10_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_953 -> m10_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_954 -> m10_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_955 -> m10_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_956 -> m10_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_957 -> m10_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_958 -> m10_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_959 -> m10_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_960 -> m10_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_961 -> m10_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_962 -> m10_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_963 -> m10_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_964 -> m10_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_965 -> m10_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_966 -> m10_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_967 -> m10_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_968 -> m10_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_969 -> m10_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_970 -> m10_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m10_971 -> m10_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m10_972 -> m10_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m11_42 -> m11_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_42 -> m11_45  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<string, HangFire.Web.ScheduleDto> ScheduledJobs", style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_47 -> m11_55  [key=2, style=dotted];
m11_47 -> m11_54  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_48 -> m11_60  [key=2, style=dotted];
m11_48 -> m11_59  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_56  [key=2, style=dotted];
m11_48 -> m11_57  [key=2, style=dotted];
m11_48 -> m11_58  [key=2, style=dotted];
m11_48 -> m11_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [color=darkseagreen4, key=1, label=scheduledJob, style=dashed];
m11_46 -> m11_50  [key=0, style=solid];
m11_46 -> m11_49  [color=darkseagreen4, key=1, label=scheduledJob, style=dashed];
m11_49 -> m11_46  [key=0, style=solid];
m11_49 -> m11_49  [color=darkorchid, key=3, label="Field variable int Personal", style=bold];
m11_49 -> m11_61  [key=2, style=dotted];
m11_44 -> m11_46  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_52  [key=2, style=dotted];
m11_44 -> m11_21  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_49  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_45 -> m11_53  [key=2, style=dotted];
m11_45 -> m11_50  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_50 -> m11_50  [color=darkorchid, key=3, label="Field variable int Express", style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_43 -> m11_44  [key=0, style=solid];
m11_51 -> m11_42  [color=blue, key=0, style=bold];
m11_23 -> m11_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_23 -> m11_23  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_23 -> m11_24  [key=0, style=solid];
m11_26 -> m11_29  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_30  [key=2, style=dotted];
m11_26 -> m11_31  [key=2, style=dotted];
m11_26 -> m11_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_26 -> m11_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_28  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_27 -> m11_23  [color=blue, key=0, style=bold];
m11_260 -> m11_264  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_267  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m11_261 -> m11_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_261 -> m11_188  [key=2, style=dotted];
m11_261 -> m11_189  [key=2, style=dotted];
m11_261 -> m11_262  [key=0, style=solid];
m11_261 -> m11_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_262 -> m11_260  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [color=green, key=0, style=solid];
m11_11 -> m11_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_12 -> m11_12  [color=green, key=3, label="Field variable int RequiredSchemaVersion", style=bold];
m11_12 -> m11_13  [color=green, key=0, style=solid];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_9  [key=2, style=dotted];
m11_13 -> m11_10  [key=2, style=dotted];
m11_14 -> m11_11  [color=blue, key=0, style=bold];
m11_153 -> m11_211  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_153 -> m11_204  [key=0, style=solid];
m11_153 -> m11_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_153 -> m11_212  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m11_153 -> m11_213  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats", style=bold];
m11_211 -> m11_188  [key=2, style=dotted];
m11_211 -> m11_189  [key=2, style=dotted];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_208 -> m11_91  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid];
m11_205 -> m11_211  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_205 -> m11_208  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_205 -> m11_206  [key=0, style=solid];
m11_205 -> m11_223  [key=2, style=dotted];
m11_205 -> m11_215  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_205 -> m11_219  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_207 -> m11_211  [key=0, style=solid];
m11_207 -> m11_208  [key=0, style=solid];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_225  [key=2, style=dotted];
m11_212 -> m11_217  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m11_204 -> m11_208  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_209  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_209 -> m11_209  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_224  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_53  [key=2, style=dotted];
m11_213 -> m11_219  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_213 -> m11_221  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_206 -> m11_207  [key=0, style=solid];
m11_206 -> m11_206  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_206 -> m11_210  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_215 -> m11_206  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_221  [key=0, style=solid];
m11_219 -> m11_220  [key=0, style=solid];
m11_219 -> m11_228  [key=2, style=dotted];
m11_210 -> m11_207  [key=0, style=solid];
m11_210 -> m11_210  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_217 -> m11_219  [key=0, style=solid];
m11_217 -> m11_218  [key=0, style=solid];
m11_217 -> m11_226  [key=2, style=dotted];
m11_217 -> m11_227  [key=2, style=dotted];
m11_221 -> m11_222  [key=0, style=solid];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_219  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_214 -> m11_217  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_214 -> m11_220  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_220 -> m11_215  [key=0, style=solid];
m11_220 -> m11_220  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_216 -> m11_217  [key=0, style=solid];
m11_218 -> m11_219  [key=0, style=solid];
m11_222 -> m11_153  [color=blue, key=0, style=bold];
m11_170 -> m11_172  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_170 -> m11_171  [key=0, style=solid];
m11_170 -> m11_176  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_170 -> m11_163  [color=darkorchid, key=3, label="method methodReturn bool EnqueueScheduled", style=bold];
m11_172 -> m11_9  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_166  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_60  [key=2, style=dotted];
m11_173 -> m11_176  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_168  [key=2, style=dotted];
m11_176 -> m11_169  [key=2, style=dotted];
m11_174 -> m11_176  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> n50  [key=2, style=dotted];
m11_175 -> m11_177  [key=0, style=solid];
m11_177 -> m11_170  [color=blue, key=0, style=bold];
m11_321 -> m11_322  [key=0, style=solid];
m11_264 -> m11_9  [key=2, style=dotted];
m11_264 -> m11_265  [key=0, style=solid];
m11_264 -> m11_55  [key=2, style=dotted];
m11_338 -> m11_10  [key=2, style=dotted];
m11_338 -> m11_339  [key=0, style=solid];
m11_338 -> m11_54  [key=2, style=dotted];
m11_263 -> m11_264  [key=0, style=solid];
m11_265 -> m11_263  [color=blue, key=0, style=bold];
m11_337 -> m11_338  [key=0, style=solid];
m11_339 -> m11_337  [color=blue, key=0, style=bold];
m11_135 -> m11_136  [key=0, style=solid];
m11_145 -> m11_146  [key=0, style=solid];
m11_194 -> m11_195  [key=0, style=solid];
m11_198 -> m11_199  [key=0, style=solid];
m11_201 -> m11_202  [key=0, style=solid];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_197  [key=2, style=dotted];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_269  [key=2, style=dotted];
m11_267 -> m11_56  [key=2, style=dotted];
m11_267 -> m11_270  [key=2, style=dotted];
m11_267 -> m11_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_126 -> m11_127  [key=0, style=solid];
m11_258 -> m11_54  [key=2, style=dotted];
m11_258 -> m11_259  [key=0, style=solid];
m11_137 -> m11_135  [color=blue, key=0, style=bold];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_129  [key=2, style=dotted];
m11_136 -> m11_36  [key=2, style=dotted];
m11_136 -> m11_138  [key=2, style=dotted];
m11_136 -> m11_139  [key=2, style=dotted];
m11_147 -> m11_145  [color=blue, key=0, style=bold];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_148  [key=2, style=dotted];
m11_146 -> m11_36  [key=2, style=dotted];
m11_146 -> m11_138  [key=2, style=dotted];
m11_196 -> m11_194  [color=blue, key=0, style=bold];
m11_200 -> m11_198  [color=blue, key=0, style=bold];
m11_199 -> m11_200  [key=0, style=solid];
m11_203 -> m11_201  [color=blue, key=0, style=bold];
m11_202 -> m11_203  [key=0, style=solid];
m11_266 -> m11_267  [key=0, style=solid];
m11_268 -> m11_266  [color=blue, key=0, style=bold];
m11_271 -> m11_272  [key=0, style=solid];
m11_128 -> m11_126  [color=blue, key=0, style=bold];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_129  [key=2, style=dotted];
m11_127 -> m11_36  [key=2, style=dotted];
m11_127 -> m11_38  [key=2, style=dotted];
m11_257 -> m11_258  [key=0, style=solid];
m11_259 -> m11_257  [color=blue, key=0, style=bold];
m11_340 -> m11_341  [key=0, style=solid];
m11_32 -> m11_33  [key=0, style=solid];
m11_39 -> m11_40  [key=0, style=solid];
m11_98 -> m11_99  [key=0, style=solid];
m11_108 -> m11_109  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_229 -> m11_230  [key=0, style=solid];
m11_254 -> m11_255  [key=0, style=solid];
m11_273 -> m11_271  [color=blue, key=0, style=bold];
m11_272 -> m11_273  [key=0, style=solid];
m11_331 -> m11_332  [key=0, style=solid];
m11_334 -> m11_335  [key=0, style=solid];
m11_304 -> m11_305  [key=0, style=solid];
m11_310 -> m11_311  [key=0, style=solid];
m11_316 -> m11_317  [key=0, style=solid];
m11_322 -> m11_323  [key=0, style=solid];
m11_329 -> m11_89  [key=2, style=dotted];
m11_329 -> m11_330  [key=0, style=solid];
m11_335 -> m11_336  [key=0, style=solid];
m11_341 -> m11_342  [key=0, style=solid];
m11_342 -> m11_340  [color=blue, key=0, style=bold];
m11_34 -> m11_32  [color=blue, key=0, style=bold];
m11_33 -> m11_36  [key=2, style=dotted];
m11_33 -> m11_38  [key=2, style=dotted];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_37  [key=2, style=dotted];
m11_41 -> m11_39  [color=blue, key=0, style=bold];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m11_100 -> m11_98  [color=blue, key=0, style=bold];
m11_99 -> m11_36  [key=2, style=dotted];
m11_99 -> m11_38  [key=2, style=dotted];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_101  [key=2, style=dotted];
m11_99 -> m11_37  [key=2, style=dotted];
m11_110 -> m11_108  [color=blue, key=0, style=bold];
m11_109 -> m11_36  [key=2, style=dotted];
m11_109 -> m11_38  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_111  [key=2, style=dotted];
m11_109 -> m11_37  [key=2, style=dotted];
m11_64 -> m11_62  [color=blue, key=0, style=bold];
m11_63 -> m11_64  [key=0, style=solid];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_232  [key=2, style=dotted];
m11_230 -> m11_233  [key=2, style=dotted];
m11_231 -> m11_229  [color=blue, key=0, style=bold];
m11_256 -> m11_254  [color=blue, key=0, style=bold];
m11_255 -> m11_256  [key=0, style=solid];
m11_255 -> m11_232  [key=2, style=dotted];
m11_324 -> m11_325  [key=0, style=solid];
m11_328 -> m11_329  [key=0, style=solid];
m11_333 -> m11_331  [color=blue, key=0, style=bold];
m11_332 -> m11_333  [key=0, style=solid];
m11_332 -> m11_4  [key=2, style=dotted];
m11_336 -> m11_334  [color=blue, key=0, style=bold];
m11_299 -> m11_300  [key=0, style=solid];
m11_303 -> m11_304  [key=0, style=solid];
m11_305 -> m11_303  [color=blue, key=0, style=bold];
m11_306 -> m11_307  [key=0, style=solid];
m11_309 -> m11_310  [key=0, style=solid];
m11_311 -> m11_309  [color=blue, key=0, style=bold];
m11_312 -> m11_313  [key=0, style=solid];
m11_315 -> m11_316  [key=0, style=solid];
m11_317 -> m11_315  [color=blue, key=0, style=bold];
m11_318 -> m11_319  [key=0, style=solid];
m11_323 -> m11_321  [color=blue, key=0, style=bold];
m11_330 -> m11_328  [color=blue, key=0, style=bold];
m11_326 -> m11_324  [color=blue, key=0, style=bold];
m11_325 -> m11_326  [key=0, style=solid];
m11_325 -> m11_327  [key=2, style=dotted];
m11_301 -> m11_299  [color=blue, key=0, style=bold];
m11_300 -> m11_301  [key=0, style=solid];
m11_300 -> m11_302  [key=2, style=dotted];
m11_308 -> m11_306  [color=blue, key=0, style=bold];
m11_307 -> m11_308  [key=0, style=solid];
m11_307 -> m11_302  [key=2, style=dotted];
m11_314 -> m11_312  [color=blue, key=0, style=bold];
m11_313 -> m11_4  [key=2, style=dotted];
m11_313 -> m11_314  [key=0, style=solid];
m11_319 -> m11_4  [key=2, style=dotted];
m11_319 -> m11_320  [key=0, style=solid];
m11_320 -> m11_318  [color=blue, key=0, style=bold];
m11_154 -> m11_153  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs", style=bold];
m11_154 -> m11_155  [key=0, style=solid];
m11_156 -> m11_153  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_155 -> m11_156  [key=0, style=solid];
m11_157 -> m11_154  [color=blue, key=0, style=bold];
m11_92 -> m11_94  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_92 -> m11_93  [key=0, style=solid];
m11_95 -> m11_29  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_97  [key=2, style=dotted];
m11_93 -> m11_94  [key=0, style=solid];
m11_96 -> m11_92  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_2 -> m11_4  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_102 -> m11_104  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_102 -> m11_103  [key=0, style=solid];
m11_104 -> m11_107  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_105 -> m11_29  [key=2, style=dotted];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_103 -> m11_104  [key=0, style=solid];
m11_106 -> m11_102  [color=blue, key=0, style=bold];
m11_112 -> m11_115  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<HangFire.Web.QueueWithTopEnqueuedJobsDto> Queues", style=bold];
m11_112 -> m11_113  [key=0, style=solid];
m11_119 -> m11_10  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_54  [key=2, style=dotted];
m11_119 -> m11_121  [color=darkseagreen4, key=1, label=length, style=dashed];
m11_120 -> m11_10  [key=2, style=dotted];
m11_120 -> m11_121  [key=0, style=solid];
m11_120 -> m11_54  [key=2, style=dotted];
m11_116 -> m11_119  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_116 -> m11_120  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_116 -> m11_117  [key=0, style=solid];
m11_116 -> m11_122  [key=0, style=solid];
m11_116 -> m11_121  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_29  [key=2, style=dotted];
m11_118 -> m11_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_118 -> m11_121  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m11_121 -> m11_116  [key=0, style=solid];
m11_121 -> m11_125  [key=2, style=dotted];
m11_121 -> m11_91  [key=2, style=dotted];
m11_117 -> m11_107  [key=2, style=dotted];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_54  [key=2, style=dotted];
m11_114 -> m11_116  [color=darkseagreen4, key=1, label=queues, style=dashed];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_84  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_121  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_115 -> m11_124  [key=2, style=dotted];
m11_115 -> m11_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_122 -> m11_123  [key=0, style=solid];
m11_113 -> m11_114  [key=0, style=solid];
m11_123 -> m11_112  [color=blue, key=0, style=bold];
m11_65 -> m11_69  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m11_65 -> m11_66  [key=0, style=solid];
m11_67 -> m11_69  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_68 -> m11_65  [color=blue, key=0, style=bold];
m11_278 -> m11_280  [color=darkorchid, key=3, label="method methodReturn HangFire.Web.StatisticsDto GetStatistics", style=bold];
m11_278 -> m11_279  [key=0, style=solid];
m11_290 -> m11_338  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m11_290 -> m11_291  [key=0, style=solid];
m11_290 -> m11_289  [color=darkorchid, key=3, label="Local variable var queueName", style=bold];
m11_289 -> m11_290  [key=0, style=solid];
m11_289 -> m11_292  [key=0, style=solid];
m11_291 -> m11_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_291 -> m11_289  [key=0, style=solid];
m11_291 -> m11_297  [key=2, style=dotted];
m11_291 -> m11_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_281 -> m11_289  [color=darkseagreen4, key=1, label=queues, style=dashed];
m11_281 -> m11_84  [key=2, style=dotted];
m11_281 -> m11_282  [key=0, style=solid];
m11_288 -> m11_289  [key=0, style=solid];
m11_288 -> m11_297  [key=2, style=dotted];
m11_288 -> m11_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_288 -> m11_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_292 -> m11_293  [key=0, style=solid];
m11_292 -> m11_298  [key=2, style=dotted];
m11_280 -> m11_291  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_281  [key=0, style=solid];
m11_280 -> m11_288  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_295  [key=2, style=dotted];
m11_280 -> m11_283  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_304  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_284  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_310  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_285  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_316  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_286  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_322  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_287  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_329  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_335  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_341  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_280 -> m11_293  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_282 -> m11_291  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_282 -> m11_288  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_282 -> m11_292  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_282 -> m11_283  [key=0, style=solid];
m11_282 -> m11_296  [key=2, style=dotted];
m11_282 -> m11_284  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_282 -> m11_285  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_282 -> m11_286  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_282 -> m11_287  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m11_287 -> m11_288  [key=0, style=solid];
m11_287 -> m11_297  [key=2, style=dotted];
m11_287 -> m11_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_287 -> m11_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_293 -> m11_294  [key=0, style=solid];
m11_279 -> m11_280  [key=0, style=solid];
m11_283 -> m11_297  [key=2, style=dotted];
m11_283 -> m11_284  [key=0, style=solid];
m11_283 -> m11_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_283 -> m11_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_284 -> m11_297  [key=2, style=dotted];
m11_284 -> m11_285  [key=0, style=solid];
m11_284 -> m11_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_284 -> m11_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_285 -> m11_297  [key=2, style=dotted];
m11_285 -> m11_286  [key=0, style=solid];
m11_285 -> m11_312  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_285 -> m11_315  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_286 -> m11_297  [key=2, style=dotted];
m11_286 -> m11_287  [key=0, style=solid];
m11_286 -> m11_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_286 -> m11_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_294 -> m11_278  [color=blue, key=0, style=bold];
m11_74 -> m11_77  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<HangFire.Web.ServerDto> Servers", style=bold];
m11_74 -> m11_75  [key=0, style=solid];
m11_79 -> m11_86  [key=2, style=dotted];
m11_79 -> m11_54  [key=2, style=dotted];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_81  [color=darkseagreen4, key=1, label=server, style=dashed];
m11_80 -> m11_87  [key=2, style=dotted];
m11_80 -> m11_54  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_80  [color=darkseagreen4, key=1, label=serverName, style=dashed];
m11_78 -> m11_82  [key=0, style=solid];
m11_78 -> m11_81  [color=darkseagreen4, key=1, label=serverName, style=dashed];
m11_81 -> m11_91  [key=2, style=dotted];
m11_81 -> m11_78  [key=0, style=solid];
m11_81 -> m11_88  [key=2, style=dotted];
m11_81 -> m11_89  [key=2, style=dotted];
m11_81 -> m11_90  [key=2, style=dotted];
m11_76 -> m11_78  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m11_76 -> m11_84  [key=2, style=dotted];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_78  [key=0, style=solid];
m11_77 -> m11_81  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_77 -> m11_85  [key=2, style=dotted];
m11_77 -> m11_82  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_82 -> m11_83  [key=0, style=solid];
m11_75 -> m11_76  [key=0, style=solid];
m11_83 -> m11_74  [color=blue, key=0, style=bold];
m11_274 -> m11_275  [key=0, style=solid];
m11_276 -> m11_10  [key=2, style=dotted];
m11_276 -> m11_277  [key=0, style=solid];
m11_275 -> m11_276  [key=0, style=solid];
m11_277 -> m11_274  [color=blue, key=0, style=bold];
m11_149 -> m11_153  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m11_149 -> m11_150  [key=0, style=solid];
m11_151 -> m11_153  [key=2, style=dotted];
m11_151 -> m11_152  [key=0, style=solid];
m11_150 -> m11_151  [key=0, style=solid];
m11_152 -> m11_149  [color=blue, key=0, style=bold];
m11_69 -> m11_258  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_69 -> m11_241  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_69 -> m11_234  [key=0, style=solid];
m11_69 -> m11_242  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m11_69 -> m11_243  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m11_241 -> m11_188  [key=2, style=dotted];
m11_241 -> m11_189  [key=2, style=dotted];
m11_241 -> m11_242  [key=0, style=solid];
m11_241 -> m11_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_240 -> m11_188  [key=2, style=dotted];
m11_240 -> m11_189  [key=2, style=dotted];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_240 -> m11_245  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m11_238 -> m11_91  [key=2, style=dotted];
m11_238 -> m11_239  [key=0, style=solid];
m11_242 -> m11_243  [key=0, style=solid];
m11_242 -> m11_225  [key=2, style=dotted];
m11_242 -> m11_247  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m11_237 -> m11_240  [key=0, style=solid];
m11_237 -> m11_238  [key=0, style=solid];
m11_236 -> m11_240  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_236 -> m11_238  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_236 -> m11_237  [key=0, style=solid];
m11_236 -> m11_223  [key=2, style=dotted];
m11_236 -> m11_249  [color=darkseagreen4, key=1, label=dates, style=dashed];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_251  [key=0, style=solid];
m11_245 -> m11_206  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m11_234 -> m11_238  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_234 -> m11_237  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_239  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_243 -> m11_244  [key=0, style=solid];
m11_243 -> m11_53  [key=2, style=dotted];
m11_243 -> m11_249  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_243 -> m11_251  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_239 -> m11_237  [key=0, style=solid];
m11_239 -> m11_239  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m11_239 -> m11_253  [key=2, style=dotted];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_249  [key=0, style=solid];
m11_247 -> m11_226  [key=2, style=dotted];
m11_247 -> m11_227  [key=2, style=dotted];
m11_235 -> m11_237  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m11_235 -> m11_236  [key=0, style=solid];
m11_235 -> m11_253  [key=2, style=dotted];
m11_249 -> m11_250  [key=0, style=solid];
m11_249 -> m11_228  [key=2, style=dotted];
m11_244 -> m11_245  [key=0, style=solid];
m11_244 -> m11_247  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_244 -> m11_249  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_244 -> m11_250  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_250 -> m11_245  [key=0, style=solid];
m11_250 -> m11_250  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_246 -> m11_247  [key=0, style=solid];
m11_251 -> m11_252  [key=0, style=solid];
m11_248 -> m11_249  [key=0, style=solid];
m11_252 -> m11_69  [color=blue, key=0, style=bold];
m11_15 -> m11_16  [key=0, style=solid];
m11_17 -> m11_4  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_16 -> m11_17  [key=0, style=solid];
m11_18 -> m11_15  [color=blue, key=0, style=bold];
m11_178 -> m11_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_178 -> m11_184  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_181  [color=darkorchid, key=3, label="method methodReturn HangFire.Web.JobDetailsDto JobDetails", style=bold];
m11_180 -> m11_9  [key=2, style=dotted];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_86  [key=2, style=dotted];
m11_180 -> m11_186  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_184 -> m11_9  [key=2, style=dotted];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_87  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_183  [key=0, style=solid];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_190  [key=2, style=dotted];
m11_186 -> m11_59  [key=2, style=dotted];
m11_186 -> m11_191  [key=2, style=dotted];
m11_186 -> m11_192  [key=2, style=dotted];
m11_186 -> m11_193  [key=2, style=dotted];
m11_186 -> m11_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_186 -> m11_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_186 -> m11_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_186  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m11_183 -> m11_195  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_188  [key=2, style=dotted];
m11_185 -> m11_189  [key=2, style=dotted];
m11_182 -> m11_187  [key=0, style=solid];
m11_187 -> m11_178  [color=blue, key=0, style=bold];
m11_5 -> m11_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_5 -> m11_6  [key=0, style=solid];
m11_7 -> m11_9  [key=2, style=dotted];
m11_7 -> m11_10  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_8 -> m11_5  [color=blue, key=0, style=bold];
m11_140 -> m11_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_140 -> m11_141  [key=0, style=solid];
m11_142 -> m11_9  [key=2, style=dotted];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_107  [key=2, style=dotted];
m11_141 -> m11_142  [key=0, style=solid];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_29  [key=2, style=dotted];
m11_143 -> m11_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_144 -> m11_140  [color=blue, key=0, style=bold];
m11_70 -> m11_69  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m11_70 -> m11_71  [key=0, style=solid];
m11_72 -> m11_69  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_73 -> m11_70  [color=blue, key=0, style=bold];
m11_19 -> m11_20  [key=0, style=solid];
m11_20 -> m11_44  [color=darkorchid, key=3, label="Local variable string script", style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_4  [key=2, style=dotted];
m11_22 -> m11_19  [color=blue, key=0, style=bold];
m11_158 -> m11_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_158 -> m11_163  [color=darkorchid, key=3, label="method methodReturn bool RetryJob", style=bold];
m11_160 -> m11_9  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_166  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_60  [key=2, style=dotted];
m11_161 -> m11_164  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_168  [key=2, style=dotted];
m11_164 -> m11_169  [key=2, style=dotted];
m11_163 -> m11_165  [key=0, style=solid];
m11_162 -> m11_164  [key=0, style=solid];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> n50  [key=2, style=dotted];
m11_165 -> m11_158  [color=blue, key=0, style=bold];
m11_130 -> m11_132  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_130 -> m11_131  [key=0, style=solid];
m11_132 -> m11_9  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_107  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_29  [key=2, style=dotted];
m11_133 -> m11_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_134 -> m11_130  [color=blue, key=0, style=bold];
m11_346 -> m11_264  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m11_347 -> m11_264  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m11_348 -> m11_264  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m11_351 -> m11_338  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m11_343 -> m11_195  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m11_349 -> m11_267  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m11_345 -> m11_258  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_350 -> m11_304  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_350 -> m11_310  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_350 -> m11_316  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_350 -> m11_322  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_350 -> m11_329  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_350 -> m11_335  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_350 -> m11_341  [color=darkseagreen4, key=1, label=stats, style=dashed];
m11_344 -> m11_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=2, style=dotted];
m12_16 -> m12_14  [key=2, style=dotted];
m12_17 -> m12_15  [color=blue, key=0, style=bold];
m12_10 -> m12_11  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=2, style=dotted];
m12_11 -> m12_14  [key=2, style=dotted];
m12_12 -> m12_10  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_21  [color=crimson, key=0, style=bold];
m12_19 -> m12_22  [color=crimson, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_24  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_25  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_26  [key=2, style=dotted];
m12_23 -> m12_19  [color=blue, key=0, style=bold];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_29  [color=crimson, key=0, style=bold];
m12_27 -> m12_30  [color=crimson, key=0, style=bold];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_32  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_33  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_34  [key=2, style=dotted];
m12_31 -> m12_27  [color=blue, key=0, style=bold];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_35  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_38  [key=2, style=dotted];
m12_37 -> m12_35  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_2 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorageOptions", style=dashed];
m12_2 -> m12_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=2, style=dotted];
m12_6 -> m12_9  [key=2, style=dotted];
m12_7 -> m12_2  [color=blue, key=0, style=bold];
m12_39 -> m12_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_6  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_16  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_21  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m12_39 -> m12_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
}
