digraph  {
n36 [label="Hangfire.SqlServer.CountersAggregator", span=""];
n0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
n1 [label="storage == null", span="41-41", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
n2 [label="throw new ArgumentNullException(nameof(storage));", span="41-41", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
n3 [label="_storage = storage", span="43-43", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
n4 [label="_interval = interval", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
n5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)"];
n6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
n8 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n9 [label="Logger.Debug(''Aggregating records in 'Counter' table...'')", span="49-49", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n13 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="65-65", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n17 [label="cancellationToken.WaitHandle.WaitOne(_interval)", span="73-73", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n10 [label="int removedCount = 0", span="51-51", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n19 [label="Entry Hangfire.Logging.ILog.Debug(string)", span="116-116", cluster="Hangfire.Logging.ILog.Debug(string)"];
n11 [label="_storage.UseConnection(null, connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0);\r\n                })", span="55-61", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n12 [label="removedCount >= NumberOfRecordsInSinglePass", span="63-63", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n20 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)", span="171-171", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection, System.Action<DbConnection>)"];
n24 [label="Entry lambda expression", span="55-61", cluster="lambda expression"];
n15 [label="removedCount >= NumberOfRecordsInSinglePass", span="69-69", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n14 [label="cancellationToken.ThrowIfCancellationRequested()", span="66-66", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n21 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)"];
n22 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()"];
n16 [label="Logger.Trace(''Records from the 'Counter' table aggregated.'')", span="71-71", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n23 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="234-234", cluster="Hangfire.Logging.ILog.Trace(string)"];
n18 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)"];
n25 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(_storage),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass },\r\n                        commandTimeout: 0)", span="57-60", cluster="lambda expression"];
n26 [label="Exit lambda expression", span="55-61", cluster="lambda expression"];
n27 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="81-81", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)"];
n28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
n29 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="76-76", cluster="Hangfire.SqlServer.CountersAggregator.ToString()"];
n30 [label="return GetType().ToString();", span="78-78", cluster="Hangfire.SqlServer.CountersAggregator.ToString()"];
n31 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="76-76", cluster="Hangfire.SqlServer.CountersAggregator.ToString()"];
n32 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n33 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()"];
n34 [label="return \r\n$@''DECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) C\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\nFROM [{storage.SchemaName}].[Counter] C WITH (READPAST, XLOCK, INDEX(0))\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{storage.SchemaName}].[AggregatedCounter] WITH (HOLDLOCK) AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="83-110", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)"];
n35 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", span="81-81", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)"];
d34 [label="return \r\n$@''DECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) C\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\nFROM [{storage.SchemaName}].[Counter] C WITH (READPAST, XLOCK, INDEX(0))\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [{storage.SchemaName}].[AggregatedCounter] WITH (HOLDLOCK) AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="83-110", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0];
m0_3 [label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", span="14-14", cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", file="DashboardMetrics.cs"];
m0_4 [label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", span="14-14", cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Seed(Hangfire.Sample.Highlighter.Models.HighlighterDbContext)", file="DashboardMetrics.cs"];
m0_44 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="DashboardMetrics.cs"];
m0_52 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DashboardMetrics.cs"];
m0_30 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="DashboardMetrics.cs"];
m0_31 [label="Entry long.ToString(string)", span="0-0", cluster="long.ToString(string)", file="DashboardMetrics.cs"];
m0_71 [label="Entry lambda expression", span="177-194", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_28 [label="new Metric(page.Statistics.Servers.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Servers == 0 ? MetricStyle.Warning : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Servers == 0,\r\n                Title = page.Statistics.Servers == 0\r\n                    ? ''No active servers found. Jobs will not be processed.''\r\n                    : null\r\n            }", span="66-73", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_27 [label="Entry lambda expression", span="66-73", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_29 [label="Exit lambda expression", span="66-73", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_33 [label="new Metric(page.Statistics.Recurring.ToString(''N0''))", span="78-78", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_32 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_34 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_42 [label="return new Metric(retryCount.ToString(''N0''))\r\n                {\r\n                    Style = retryCount > 0 ? MetricStyle.Warning : MetricStyle.Default\r\n                };", span="97-100", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_41 [label="retryCount = storageConnection.GetSetCount(''retries'')", span="94-94", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_43 [label="Exit lambda expression", span="83-101", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_47 [label="page.Statistics.Enqueued > 0 || page.Statistics.Failed == 0\r\n                ? new Metric(page.Statistics.Enqueued.ToString(''N0''))\r\n                {\r\n                    Style = page.Statistics.Enqueued > 0 ? MetricStyle.Info : MetricStyle.Default,\r\n                    Highlighted = page.Statistics.Enqueued > 0 && page.Statistics.Failed == 0\r\n                }\r\n                : null", span="106-112", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_46 [label="Entry lambda expression", span="106-112", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_48 [label="Exit lambda expression", span="106-112", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_50 [label="page.Statistics.Failed > 0\r\n                ? new Metric(page.Statistics.Failed.ToString(''N0''))\r\n                {\r\n                    Style = MetricStyle.Danger,\r\n                    Highlighted = true,\r\n                    Title = string.Format(Strings.Metrics_FailedCountOrNull, page.Statistics.Failed)\r\n                }\r\n                : null", span="117-124", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_49 [label="Entry lambda expression", span="117-124", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_51 [label="Exit lambda expression", span="117-124", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_54 [label="new Metric($''{page.Statistics.Enqueued:N0} / {page.Statistics.Queues:N0}'')\r\n            {\r\n                Style = page.Statistics.Enqueued > 0 ? MetricStyle.Info : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Enqueued > 0\r\n            }", span="129-133", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_53 [label="Entry lambda expression", span="129-133", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_55 [label="Exit lambda expression", span="129-133", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_57 [label="new Metric(page.Statistics.Scheduled.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Scheduled > 0 ? MetricStyle.Info : MetricStyle.Default\r\n            }", span="138-141", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_56 [label="Entry lambda expression", span="138-141", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_58 [label="Exit lambda expression", span="138-141", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_60 [label="new Metric(page.Statistics.Processing.ToString(''N0''))\r\n            {\r\n                Style = page.Statistics.Processing > 0 ? MetricStyle.Warning : MetricStyle.Default\r\n            }", span="146-149", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_59 [label="Entry lambda expression", span="146-149", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_61 [label="Exit lambda expression", span="146-149", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_63 [label="new Metric(page.Statistics.Succeeded.ToString(''N0''))\r\n            {\r\n                IntValue = page.Statistics.Succeeded\r\n            }", span="154-157", cluster="lambda expression", color=green, community=0, file="DashboardMetrics.cs"];
m0_62 [label="Entry lambda expression", span="154-157", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_64 [label="Exit lambda expression", span="154-157", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_66 [label="new Metric(page.Statistics.Failed.ToString(''N0''))\r\n            {\r\n                IntValue = page.Statistics.Failed,\r\n                Style = page.Statistics.Failed > 0 ? MetricStyle.Danger : MetricStyle.Default,\r\n                Highlighted = page.Statistics.Failed > 0\r\n            }", span="162-167", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_69 [label="new Metric(page.Statistics.Deleted.ToString(''N0''))", span="172-172", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_77 [label="return new Metric(awaitingCount.ToString(''N0''))\r\n                {\r\n                    Style = awaitingCount > 0 ? MetricStyle.Info : MetricStyle.Default\r\n                };", span="190-193", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_38 [label="var storageConnection = connection as JobStorageConnection", span="88-88", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_39 [label="storageConnection == null", span="89-89", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_40 [label="return null;", span="91-91", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_35 [label="Entry lambda expression", span="83-101", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_65 [label="Entry lambda expression", span="162-167", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_67 [label="Exit lambda expression", span="162-167", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_68 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_70 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_72 [label="long awaitingCount = -1", span="179-179", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_75 [label="storageConnection != null", span="184-184", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_76 [label="awaitingCount = storageConnection.GetSetCount(''awaiting'')", span="186-186", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_37 [label="var connection = page.Storage.GetConnection()", span="86-86", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_36 [label="long retryCount", span="85-85", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_73 [label="var connection = page.Storage.GetConnection()", span="181-181", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_74 [label="var storageConnection = connection as JobStorageConnection", span="183-183", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_78 [label="Exit lambda expression", span="177-194", cluster="lambda expression", file="DashboardMetrics.cs"];
m0_0 [label="Entry Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9", cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DashboardMetrics.cs"];
m0_1 [label="AutomaticMigrationsEnabled = false", span="11-11", cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DashboardMetrics.cs"];
m0_2 [label="Exit Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", span="9-9", cluster="Hangfire.Sample.Highlighter.Migrations.Configuration.Configuration()", file="DashboardMetrics.cs"];
m0_45 [label="Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53", cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", file="DashboardMetrics.cs"];
m1_64 [label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40", cluster="HangFire.Web.RazorPage.Write(object)", file="HtmlHelper.cs"];
m1_41 [label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="279-279", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_0 [label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="34-34", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_1 [label="WriteLiteral(''\r\n'')", span="38-38", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_2 [label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="47-47", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_3 [label="int from, perPage", span="49-49", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="51-51", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_6 [label="var pager = new Pager(from, perPage, JobStorage.FailedCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/failed'')\r\n    }", span="54-57", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_7 [label="var failedJobs = JobStorage.FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="59-59", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_9 [label="pager.TotalPageCount == 0", span="70-70", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_11 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="91-91", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="HtmlHelper.cs"];
m1_28 [label="Write(job.Value.ExceptionMessage)", span="203-203", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_8 [label="WriteLiteral(''\r\n'')", span="65-65", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_13 [label="var index = 0", span="120-120", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_10 [label="WriteLiteral(''    <div class=\''alert alert-success\''>\r\n        You have no failed jobs at the mom'' +\r\n''ent.\r\n    </div>\r\n'')", span="76-77", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_12 [label="WriteLiteral(@''    <table class=''''table failed-table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Failed</th>\r\n                <th>Queue</th>\r\n                <th>Job type</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="104-115", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_14 [label=failedJobs, span="128-128", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_27 [label="WriteLiteral(''\r\n                        </div>\r\n                        <div style=\''color: #888'' +\r\n'';\''>\r\n                            '')", span="197-198", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_15 [label="WriteLiteral(''                <tr>\r\n                    <td rowspan=\''2\''>\r\n                     '' +\r\n''   <a href=\'''')", span="134-135", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_16 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="140-140", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_17 [label="WriteLiteral(''\''>\r\n                            '')", span="145-145", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs", color=green, community=0];
m1_18 [label="Write(HtmlHelper.JobId(job.Key))", span="150-150", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_19 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d data-moment=\'''')", span="155-156", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_20 [label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="161-161", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_21 [label="WriteLiteral(''\''>'')", span="166-166", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_22 [label="Write(job.Value.FailedAt)", span="171-171", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_23 [label="WriteLiteral(''</td>\r\n                    <td>'')", span="176-176", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_24 [label="Write(HtmlHelper.QueueLabel(job.Value.Queue))", span="181-181", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_25 [label="WriteLiteral(''</td>\r\n                    <td class=\''expander\''>\r\n                        <div>\r\n'' +\r\n''                            '')", span="186-187", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_26 [label="Write(HtmlHelper.JobType(job.Value.Type))", span="192-192", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_29 [label="WriteLiteral('' <span class=\''caret\''></span>\r\n                        </div>\r\n                   '' +\r\n'' </td>\r\n                    <td>\r\n                        <div class=\''pull-right'' +\r\n''\''>\r\n                            <button class=\''btn btn-primary btn-sm\'' data-ajax'' +\r\n''=\'''')", span="208-211", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_70 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="54-54", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="HtmlHelper.cs"];
m1_36 [label="WriteLiteral(''</h4>\r\n                        <p>\r\n                            '')", span="253-253", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_52 [label="Write(RenderPartial(new Paginator(pager)))", span="369-369", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_30 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="HtmlHelper.cs"];
m1_31 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="HtmlHelper.cs"];
m1_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HtmlHelper.cs"];
m1_33 [label="Entry HttpRequestBase.LinkTo(string)", span="8-8", cluster="HttpRequestBase.LinkTo(string)", file="HtmlHelper.cs"];
m1_34 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="HtmlHelper.cs"];
m1_35 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="13-13", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="HtmlHelper.cs"];
m1_37 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="237-237", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="HtmlHelper.cs"];
m1_38 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="HtmlHelper.cs"];
m1_40 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="HtmlHelper.cs"];
m1_42 [label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17", cluster="HangFire.Web.HtmlHelper.JobId(string)", file="HtmlHelper.cs"];
m1_43 [label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22", cluster="HangFire.Web.HtmlHelper.JobType(string)", file="HtmlHelper.cs"];
m1_45 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="HtmlHelper.cs"];
m1_46 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="HtmlHelper.cs"];
m1_47 [label="HangFire.Web.Pages.EnqueuedJobsPage", span="", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_48 [label="Write(arg.Value)", span="331-331", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_49 [label="WriteLiteral(''\''</pre></td>\r\n                                    </tr>\r\n'')", span="336-336", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_50 [label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n         '' +\r\n''               </div>\r\n                    </td>\r\n                </tr>\r\n'')", span="346-347", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_51 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="357-357", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_39 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="53-53", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="HtmlHelper.cs"];
m1_44 [label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="34-34", cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs"];
m1_53 [label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="34-34", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="HtmlHelper.cs"];
m1_66 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="HtmlHelper.cs"];
m1_54 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="HtmlHelper.cs"];
m1_67 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="39-39", cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="HtmlHelper.cs"];
m1_69 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="HtmlHelper.cs"];
m1_60 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="146-146", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="HtmlHelper.cs"];
m1_59 [label="Entry HttpRequestBase.LinkTo(string)", span="8-8", cluster="HttpRequestBase.LinkTo(string)", file="HtmlHelper.cs"];
m1_58 [label="Entry HangFire.Web.JobStorage.FailedCount()", span="28-28", cluster="HangFire.Web.JobStorage.FailedCount()", file="HtmlHelper.cs"];
m1_72 [label="HangFire.Web.Pages.FailedJobsPage", span="", file="HtmlHelper.cs"];
m3_0 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Metric.cs"];
m3_1 [label="Value = value", span="22-22", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Metric.cs"];
m3_2 [label="Exit Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="Metric.cs"];
m3_3 [label="Entry Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_4 [label=style, span="45-45", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_5 [label="MetricStyle.Default", span="47-47", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_7 [label="MetricStyle.Info", span="48-48", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_9 [label="MetricStyle.Success", span="49-49", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_11 [label="MetricStyle.Warning", span="50-50", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_13 [label="MetricStyle.Danger", span="51-51", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_15 [label="return ''metric-null'';", span="52-52", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_6 [label="return ''metric-default'';", span="47-47", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_8 [label="return ''metric-info'';", span="48-48", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_10 [label="return ''metric-success'';", span="49-49", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_12 [label="return ''metric-warning'';", span="50-50", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_14 [label="return ''metric-danger'';", span="51-51", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_16 [label="Exit Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", span="43-43", cluster="Hangfire.Dashboard.MetricStyleExtensions.ToClassName(Hangfire.Dashboard.MetricStyle)", file="Metric.cs"];
m3_17 [label="Hangfire.Dashboard.Metric", span="", file="Metric.cs"];
m5_24 [label="Entry Unk.BasicNack", span="", cluster="Unk.BasicNack", file="SqlCommandBatch.cs"];
m5_26 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs"];
m5_27 [label="!_completed && !_disposed", span="45-45", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs"];
m5_28 [label="Requeue()", span="47-47", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs"];
m5_29 [label="_disposed = true", span="50-50", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs"];
m5_30 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", span="43-43", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Dispose()", file="SqlCommandBatch.cs"];
m5_15 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlCommandBatch.cs"];
m5_17 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_18 [label=_completed, span="36-36", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_19 [label="throw new InvalidOperationException(''Job already completed'');", span="36-36", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_20 [label="_channel.BasicNack(_message.DeliveryTag, false, true)", span="37-37", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_21 [label="_channel.Close(global::RabbitMQ.Client.Framing.v0_9_1.Constants.ReplySuccess, ''Requeue'')", span="38-38", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_22 [label="_completed = true", span="40-40", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_23 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", span="34-34", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.Requeue()", file="SqlCommandBatch.cs"];
m5_9 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs"];
m5_10 [label=_completed, span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs"];
m5_11 [label="throw new InvalidOperationException(''Job already completed'');", span="29-29", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs"];
m5_12 [label="_channel.BasicAck(_message.DeliveryTag, false)", span="30-30", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs"];
m5_13 [label="_completed = true", span="31-31", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs"];
m5_14 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", span="27-27", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RemoveFromQueue()", file="SqlCommandBatch.cs"];
m5_8 [label="Entry Unk.GetString", span="", cluster="Unk.GetString", file="SqlCommandBatch.cs"];
m5_16 [label="Entry Unk.BasicAck", span="", cluster="Unk.BasicAck", file="SqlCommandBatch.cs"];
m5_25 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="SqlCommandBatch.cs"];
m5_0 [label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_1 [label="message == null", span="17-17", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_3 [label="_message = message", span="19-19", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_4 [label="_channel = channel", span="20-20", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_2 [label="throw new ArgumentNullException(''message'');", span="17-17", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_5 [label="JobId = Encoding.UTF8.GetString(_message.Body)", span="22-22", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_6 [label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", span="15-15", cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob.RabbitMqFetchedJob(BasicDeliverEventArgs, ref IModel)", file="SqlCommandBatch.cs"];
m5_31 [label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob", span="", file="SqlCommandBatch.cs"];
m6_151 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_152 [label="key == null", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_153 [label="throw new ArgumentNullException(nameof(key));", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_154 [label="toScore < fromScore", span="258-258", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_156 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout));", span="260-263", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_155 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="258-258", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_157 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs"];
m6_102 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs"];
m6_100 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="SqlServerConnection.cs"];
m6_197 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="315-315", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_198 [label="serverId == null", span="317-317", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_199 [label="throw new ArgumentNullException(nameof(serverId));", span="317-317", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_200 [label="context == null", span="318-318", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_201 [label="throw new ArgumentNullException(nameof(context));", span="318-318", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_202 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="320-325", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_203 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="327-337", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_204 [label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="315-315", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnection.cs"];
m6_27 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="65-65", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_28 [label="queues == null || queues.Length == 0", span="67-67", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_29 [label="throw new ArgumentNullException(nameof(queues));", span="67-67", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_30 [label="var providers = queues\r\n                .Select(queue => _storage.QueueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="69-72", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_32 [label="throw new InvalidOperationException(\r\n                    $''Multiple provider instances registered for queues: {String.Join('', '', queues)}. You should choose only one type of persistent queues per server instance.'');", span="76-77", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_34 [label="return persistentQueue.Dequeue(queues, cancellationToken);", span="81-81", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_31 [label="providers.Length != 1", span="74-74", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_33 [label="var persistentQueue = providers[0].GetJobQueue()", span="80-80", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_35 [label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="65-65", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs"];
m6_217 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="353-353", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m6_218 [label="serverId == null", span="355-355", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m6_219 [label="throw new ArgumentNullException(nameof(serverId));", span="355-355", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m6_220 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="357-363", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m6_221 [label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="353-353", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs"];
m6_118 [label="Entry Hangfire.Storage.StateData.StateData()", span="23-23", cluster="Hangfire.Storage.StateData.StateData()", file="SqlServerConnection.cs"];
m6_205 [label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs"];
m6_181 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="299-299", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m6_182 [label="key == null", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m6_183 [label="throw new ArgumentNullException(nameof(key));", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m6_184 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value);\r\n\r\n                return result.Count != 0 ? result : null;\r\n            });", span="303-312", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m6_185 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="299-299", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs"];
m6_74 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerConnection.cs"];
m6_330 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="502-502", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m6_331 [label="key == null", span="504-504", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m6_332 [label="throw new ArgumentNullException(nameof(key));", span="504-504", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m6_334 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="513-515", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m6_333 [label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from [{_storage.SchemaName}].List with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="506-511", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m6_335 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="502-502", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnection.cs"];
m6_26 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", span="532-532", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_348 [label="_dedicatedConnection == null", span="534-534", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_351 [label="!_lockedResources.ContainsKey(resource)", span="541-541", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_352 [label="SqlServerDistributedLock.Acquire(_dedicatedConnection, resource, timeout)", span="545-545", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_354 [label="ReleaseLock(resource, lockId, true)", span="549-549", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_356 [label="_lockedResources.Add(resource, new HashSet<Guid>())", span="553-553", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_357 [label="_lockedResources[resource].Add(lockId)", span="556-556", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_358 [label="return new DisposableLock(this, resource, lockId);", span="557-557", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_349 [label="_dedicatedConnection = _storage.CreateAndOpenConnection()", span="536-536", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_350 [label="var lockId = Guid.NewGuid()", span="539-539", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_353 [label=Exception, span="547-547", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_355 [label="throw;", span="550-550", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_359 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", span="532-532", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_298 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="460-460", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_299 [label="key == null", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_300 [label="throw new ArgumentNullException(nameof(key));", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_301 [label="name == null", span="463-463", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_302 [label="throw new ArgumentNullException(nameof(name));", span="463-463", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_304 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout));", span="469-470", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_303 [label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].Hash with (readcommittedlock)\r\nwhere [Key] = @key and [Field] = @field''", span="465-467", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_305 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="460-460", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnection.cs"];
m6_103 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="SqlServerConnection.cs"];
m6_361 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="SqlServerConnection.cs"];
m6_130 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m6_150 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="SqlServerConnection.cs"];
m6_225 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="366-366", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m6_226 [label="timeOut.Duration() != timeOut", span="368-368", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m6_227 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', nameof(timeOut));", span="370-370", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m6_228 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout));", span="373-376", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m6_229 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="366-366", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs"];
m6_368 [label="Entry Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", span="603-603", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs"];
m6_385 [label="_connection = connection", span="605-605", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs"];
m6_386 [label="_resource = resource", span="606-606", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs"];
m6_387 [label="_lockId = lockId", span="607-607", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs"];
m6_388 [label="Exit Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", span="603-603", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.DisposableLock(Hangfire.SqlServer.SqlServerConnection, string, System.Guid)", file="SqlServerConnection.cs"];
m6_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerConnection.cs"];
m6_318 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m6_319 [label="key == null", span="487-487", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m6_320 [label="throw new ArgumentNullException(nameof(key));", span="487-487", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m6_322 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="493-499", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m6_321 [label="string query = \r\n$@''select min([ExpireAt]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="489-491", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m6_323 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnection.cs"];
m6_7 [label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="45-45", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m6_8 [label="_dedicatedConnection != null", span="47-47", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m6_9 [label="_dedicatedConnection.Dispose()", span="49-49", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m6_10 [label="_dedicatedConnection = null", span="50-50", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m6_11 [label="Exit Hangfire.SqlServer.SqlServerConnection.Dispose()", span="45-45", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs"];
m6_277 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m6_278 [label="key == null", span="437-437", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m6_279 [label="throw new ArgumentNullException(nameof(key));", span="437-437", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m6_281 [label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="441-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m6_280 [label="string query = $@''select count([Id]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="439-439", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m6_282 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="435-435", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnection.cs"];
m6_362 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerConnection.cs"];
m6_363 [label="Entry Unk.Acquire", span="", cluster="Unk.Acquire", file="SqlServerConnection.cs"];
m6_56 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnection.cs"];
m6_170 [label="Entry Unk.UseTransaction", span="", cluster="Unk.UseTransaction", file="SqlServerConnection.cs"];
m6_268 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="420-420", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m6_269 [label="key == null", span="422-422", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m6_270 [label="throw new ArgumentNullException(nameof(key));", span="422-422", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m6_272 [label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0);", span="431-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m6_271 [label="string query = \r\n$@''select sum(s.[Value]) from (select sum([Value]) as [Value] from [{_storage.SchemaName}].Counter with (readcommittedlock)\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from [{_storage.SchemaName}].AggregatedCounter with (readcommittedlock)\r\nwhere [Key] = @key) as s''", span="424-429", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m6_273 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="420-420", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnection.cs"];
m6_38 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SqlServerConnection.cs"];
m6_209 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m6_210 [label="serverId == null", span="342-342", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m6_211 [label="throw new ArgumentNullException(nameof(serverId));", span="342-342", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m6_212 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="344-350", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m6_213 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs"];
m6_117 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerConnection.cs"];
m6_12 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m6_230 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs"];
m6_42 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="SqlServerConnection.cs"];
m6_345 [label="Entry lambda expression", span="527-527", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_17 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_18 [label=_dedicatedConnection, span="56-56", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_19 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_43 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_44 [label="_storage.QueueProviders.GetProvider(queue)", span="70-70", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_45 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_59 [label="var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString()", span="102-111", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_60 [label="parameters.Count > 0", span="113-113", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_63 [label=parameters, span="121-121", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_58 [label="Entry lambda expression", span="100-137", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_65 [label="commandBatch.Connection = connection", span="129-129", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_64 [label="commandBatch.Append(insertParameterSql,\r\n                            new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                            new SqlParameter(''@name'', parameter.Key),\r\n                            new SqlParameter(''@value'', (object)parameter.Value ?? DBNull.Value))", span="123-126", cluster="lambda expression", color=red, community=1, file="SqlServerConnection.cs"];
m6_69 [label="return jobId;", span="136-136", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_61 [label="string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="115-117", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_62 [label="var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="119-119", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_66 [label="commandBatch.CommandTimeout = _storage.CommandTimeout", span="130-130", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_67 [label="commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="131-131", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_68 [label="commandBatch.ExecuteNonQuery()", span="133-133", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_70 [label="Exit lambda expression", span="100-137", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_88 [label="var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault()", span="149-150", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_87 [label="Entry lambda expression", span="147-177", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_89 [label="jobData == null", span="152-152", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_91 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="155-155", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_92 [label="invocationData.Arguments = jobData.Arguments", span="156-156", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_98 [label="return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };", span="170-176", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_90 [label="return null;", span="152-152", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_95 [label="job = invocationData.Deserialize()", span="163-163", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_93 [label="Job job = null", span="158-158", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_94 [label="JobLoadException loadException = null", span="159-159", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_96 [label=JobLoadException, span="165-165", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_97 [label="loadException = ex", span="167-167", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_99 [label="Exit lambda expression", span="147-177", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_111 [label="var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault()", span="192-192", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_110 [label="Entry lambda expression", span="190-208", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_112 [label="sqlState == null", span="193-193", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_114 [label="var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase)", span="198-200", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_115 [label="return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };", span="202-207", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_113 [label="return null;", span="195-195", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_116 [label="Exit lambda expression", span="190-208", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_128 [label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout)", span="218-225", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_127 [label="Entry lambda expression", span="216-226", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_129 [label="Exit lambda expression", span="216-226", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_139 [label="connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout)", span="234-237", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_138 [label="Entry lambda expression", span="234-237", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_140 [label="Exit lambda expression", span="234-237", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_147 [label="var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)", span="246-249", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_146 [label="Entry lambda expression", span="244-252", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_148 [label="return new HashSet<string>(result);", span="251-251", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_149 [label="Exit lambda expression", span="244-252", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_160 [label="connection.ExecuteScalar<string>(\r\n                $@''select top 1 Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore },\r\n                commandTimeout: _storage.CommandTimeout)", span="260-263", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_159 [label="Entry lambda expression", span="260-263", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_161 [label="Exit lambda expression", span="260-263", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_173 [label=keyValuePairs, span="282-282", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_174 [label="commandBatch.Append(sql,\r\n                        new SqlParameter(''@key'', key),\r\n                        new SqlParameter(''@field'', keyValuePair.Key),\r\n                        new SqlParameter(''@value'', (object)keyValuePair.Value ?? DBNull.Value))", span="284-287", cluster="lambda expression", color=red, community=1, file="SqlServerConnection.cs"];
m6_171 [label="Entry lambda expression", span="278-296", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_172 [label="var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue)", span="280-280", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_175 [label="commandBatch.Connection = connection", span="290-290", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_176 [label="commandBatch.Transaction = transaction", span="291-291", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_177 [label="commandBatch.CommandTimeout = _storage.CommandTimeout", span="292-292", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_178 [label="commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout", span="293-293", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_179 [label="commandBatch.ExecuteNonQuery()", span="295-295", cluster="lambda expression", color=red, community=0, file="SqlServerConnection.cs"];
m6_180 [label="Exit lambda expression", span="278-296", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_187 [label="var result = connection.Query<SqlHash>(\r\n                    $''select Field, Value from [{_storage.SchemaName}].Hash with (forceseek, readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout)\r\n                    .ToDictionary(x => x.Field, x => x.Value)", span="305-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_186 [label="Entry lambda expression", span="303-312", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_188 [label="return result.Count != 0 ? result : null;", span="311-311", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_191 [label="Entry lambda expression", span="309-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_194 [label="Entry lambda expression", span="309-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_189 [label="Exit lambda expression", span="303-312", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_192 [label="x.Field", span="309-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_193 [label="Exit lambda expression", span="309-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_195 [label="x.Value", span="309-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_196 [label="Exit lambda expression", span="309-309", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_207 [label="connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].Server with (holdlock) as Target\r\nusing (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat)\r\non Target.Id = Source.Id\r\nwhen matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat\r\nwhen not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                    new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow },\r\n                    commandTimeout: _storage.CommandTimeout)", span="329-336", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_206 [label="Entry lambda expression", span="327-337", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_208 [label="Exit lambda expression", span="327-337", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_215 [label="connection.Execute(\r\n                    $@''delete from [{_storage.SchemaName}].Server where Id = @id'',\r\n                    new { id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="346-349", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_214 [label="Entry lambda expression", span="344-350", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_216 [label="Exit lambda expression", span="344-350", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_223 [label="connection.Execute(\r\n                    $@''update [{_storage.SchemaName}].Server set LastHeartbeat = @now where Id = @id'',\r\n                    new { now = DateTime.UtcNow, id = serverId },\r\n                    commandTimeout: _storage.CommandTimeout)", span="359-362", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_222 [label="Entry lambda expression", span="357-363", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_224 [label="Exit lambda expression", span="357-363", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_232 [label="Entry lambda expression", span="373-376", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_233 [label="connection.Execute(\r\n                $@''delete from [{_storage.SchemaName}].Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) },\r\n                commandTimeout: _storage.CommandTimeout)", span="373-376", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_234 [label="Exit lambda expression", span="373-376", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_242 [label="connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First()", span="383-386", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_241 [label="Entry lambda expression", span="383-386", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_243 [label="Exit lambda expression", span="383-386", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_252 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="400-402", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_251 [label="Entry lambda expression", span="400-402", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_253 [label="Exit lambda expression", span="400-402", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_262 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="413-413", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_261 [label="Entry lambda expression", span="411-417", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_263 [label="!result.HasValue", span="414-414", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_265 [label="return result.Value - DateTime.UtcNow;", span="416-416", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_264 [label="return TimeSpan.FromSeconds(-1);", span="414-414", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_266 [label="Exit lambda expression", span="411-417", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_275 [label="connection.ExecuteScalar<long?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout) ?? 0", span="432-432", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_274 [label="Entry lambda expression", span="431-432", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_276 [label="Exit lambda expression", span="431-432", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_284 [label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="442-442", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_283 [label="Entry lambda expression", span="441-442", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_285 [label="Exit lambda expression", span="441-442", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_293 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="453-453", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_292 [label="Entry lambda expression", span="451-457", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_294 [label="!result.HasValue", span="454-454", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_296 [label="return result.Value - DateTime.UtcNow;", span="456-456", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_295 [label="return TimeSpan.FromSeconds(-1);", span="454-454", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_297 [label="Exit lambda expression", span="451-457", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_307 [label="connection\r\n                .ExecuteScalar<string>(query, new { key = key, field = name }, commandTimeout: _storage.CommandTimeout)", span="469-470", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_306 [label="Entry lambda expression", span="469-470", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_308 [label="Exit lambda expression", span="469-470", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_316 [label="connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="482-482", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_315 [label="Entry lambda expression", span="481-482", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_317 [label="Exit lambda expression", span="481-482", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_325 [label="var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout)", span="495-495", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_324 [label="Entry lambda expression", span="493-499", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_326 [label="!result.HasValue", span="496-496", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_328 [label="return result.Value - DateTime.UtcNow;", span="498-498", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_327 [label="return TimeSpan.FromSeconds(-1);", span="496-496", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_329 [label="Exit lambda expression", span="493-499", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_337 [label="connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList()", span="513-515", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_336 [label="Entry lambda expression", span="513-515", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_338 [label="Exit lambda expression", span="513-515", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_346 [label="connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList()", span="527-527", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_347 [label="Exit lambda expression", span="527-527", cluster="lambda expression", file="SqlServerConnection.cs"];
m6_162 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m6_163 [label="key == null", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m6_164 [label="throw new ArgumentNullException(nameof(key));", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m6_165 [label="keyValuePairs == null", span="269-269", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m6_166 [label="throw new ArgumentNullException(nameof(keyValuePairs));", span="269-269", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m6_168 [label="_storage.UseTransaction(_dedicatedConnection, (connection, transaction) =>\r\n            {\r\n                var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                foreach (var keyValuePair in keyValuePairs)\r\n                {\r\n                    commandBatch.Append(sql,\r\n                        new SqlParameter(''@key'', key),\r\n                        new SqlParameter(''@field'', keyValuePair.Key),\r\n                        new SqlParameter(''@value'', (object)keyValuePair.Value ?? DBNull.Value));\r\n                }\r\n\r\n                commandBatch.Connection = connection;\r\n                commandBatch.Transaction = transaction;\r\n                commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                commandBatch.ExecuteNonQuery();\r\n            })", span="278-296", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SqlServerConnection.cs"];
m6_167 [label="string sql =\r\n$@'';merge [{_storage.SchemaName}].Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="271-276", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", color=red, community=0, file="SqlServerConnection.cs"];
m6_169 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs"];
m6_13 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m6_14 [label="return new SqlServerWriteOnlyTransaction(_storage, () => _dedicatedConnection);", span="56-56", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m6_15 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs"];
m6_0 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m6_1 [label="storage == null", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m6_2 [label="throw new ArgumentNullException(nameof(storage));", span="41-41", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m6_3 [label="_storage = storage", span="42-42", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m6_4 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerConnection.cs"];
m6_254 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerConnection.cs"];
m6_286 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m6_287 [label="key == null", span="447-447", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m6_288 [label="throw new ArgumentNullException(nameof(key));", span="447-447", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m6_290 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="451-457", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m6_289 [label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].Hash with (readcommittedlock) where [Key] = @key''", span="449-449", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m6_291 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnection.cs"];
m6_57 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="SqlServerConnection.cs"];
m6_25 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerConnection.cs"];
m6_245 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m6_246 [label="key == null", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m6_247 [label="throw new ArgumentNullException(nameof(key));", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m6_249 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 }, commandTimeout: _storage.CommandTimeout)\r\n                .ToList());", span="400-402", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m6_248 [label="string query =\r\n$@''select [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num\r\n	from [{_storage.SchemaName}].[Set] with (readcommittedlock)\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="393-398", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m6_250 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnection.cs"];
m6_80 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="140-140", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m6_81 [label="id == null", span="142-142", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m6_82 [label="throw new ArgumentNullException(nameof(id));", span="142-142", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m6_84 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var jobData = connection.Query<SqlJob>(sql, new { id = long.Parse(id) }, commandTimeout: _storage.CommandTimeout)\r\n                    .SingleOrDefault();\r\n\r\n                if (jobData == null) return null;\r\n\r\n                // TODO: conversion exception could be thrown.\r\n                var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData);\r\n                invocationData.Arguments = jobData.Arguments;\r\n\r\n                Job job = null;\r\n                JobLoadException loadException = null;\r\n\r\n                try\r\n                {\r\n                    job = invocationData.Deserialize();\r\n                }\r\n                catch (JobLoadException ex)\r\n                {\r\n                    loadException = ex;\r\n                }\r\n\r\n                return new JobData\r\n                {\r\n                    Job = job,\r\n                    State = jobData.StateName,\r\n                    CreatedAt = jobData.CreatedAt,\r\n                    LoadException = loadException\r\n                };\r\n            });", span="147-177", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m6_83 [label="string sql =\r\n$@''select InvocationData, StateName, Arguments, CreatedAt from [{_storage.SchemaName}].Job with (readcommittedlock) where Id = @id''", span="144-145", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m6_85 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="140-140", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs"];
m6_20 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_21 [label="String.IsNullOrWhiteSpace(resource)", span="61-61", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_22 [label="throw new ArgumentNullException(nameof(resource));", span="61-61", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_23 [label="return AcquireLock($''{_storage.SchemaName}:{resource}'', timeout);", span="62-62", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_24 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="59-59", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_235 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs"];
m6_381 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="SqlServerConnection.cs"];
m6_40 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="SqlServerConnection.cs"];
m6_384 [label="Entry Unk.ReleaseConnection", span="", cluster="Unk.ReleaseConnection", file="SqlServerConnection.cs"];
m6_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="SqlServerConnection.cs"];
m6_77 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="SqlServerConnection.cs"];
m6_39 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnection.cs"];
m6_86 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", span="180-180", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(DbConnection, System.Func<DbConnection, T>)", file="SqlServerConnection.cs"];
m6_389 [label="Entry Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", span="610-610", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="SqlServerConnection.cs"];
m6_390 [label="_connection.ReleaseLock(_resource, _lockId, true)", span="612-612", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="SqlServerConnection.cs"];
m6_391 [label="Exit Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", span="610-610", cluster="Hangfire.SqlServer.SqlServerConnection.DisposableLock.Dispose()", file="SqlServerConnection.cs"];
m6_47 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_48 [label="job == null", span="90-90", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_49 [label="throw new ArgumentNullException(nameof(job));", span="90-90", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_50 [label="parameters == null", span="91-91", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_51 [label="throw new ArgumentNullException(nameof(parameters));", span="91-91", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_53 [label="var invocationData = InvocationData.Serialize(job)", span="98-98", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_54 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var jobId = connection.ExecuteScalar<long>(\r\n                    createJobSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(invocationData),\r\n                        arguments = invocationData.Arguments,\r\n                        createdAt = createdAt,\r\n                        expireAt = createdAt.Add(expireIn)\r\n                    },\r\n                    commandTimeout: _storage.CommandTimeout).ToString();\r\n\r\n                if (parameters.Count > 0)\r\n                {\r\n                    string insertParameterSql =\r\n$@''insert into [{_storage.SchemaName}].JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)'';\r\n\r\n                    var commandBatch = new SqlCommandBatch(preferBatching: _storage.CommandBatchMaxTimeout.HasValue);\r\n\r\n                    foreach (var parameter in parameters)\r\n                    {\r\n                        commandBatch.Append(insertParameterSql,\r\n                            new SqlParameter(''@jobId'', long.Parse(jobId)),\r\n                            new SqlParameter(''@name'', parameter.Key),\r\n                            new SqlParameter(''@value'', (object)parameter.Value ?? DBNull.Value));\r\n                    }\r\n\r\n                    commandBatch.Connection = connection;\r\n                    commandBatch.CommandTimeout = _storage.CommandTimeout;\r\n                    commandBatch.CommandBatchMaxTimeout = _storage.CommandBatchMaxTimeout;\r\n\r\n                    commandBatch.ExecuteNonQuery();\r\n                }\r\n\r\n                return jobId;\r\n            });", span="100-137", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=red, community=0, file="SqlServerConnection.cs"];
m6_52 [label="string createJobSql =\r\n$@''insert into [{_storage.SchemaName}].Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\noutput inserted.Id\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt)''", span="93-96", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_55 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs"];
m6_71 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs"];
m6_244 [label="Entry Unk.First", span="", cluster="Unk.First", file="SqlServerConnection.cs"];
m6_16 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(Hangfire.SqlServer.SqlServerStorage, System.Func<DbConnection>)", file="SqlServerConnection.cs"];
m6_231 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs"];
m6_41 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="SqlServerConnection.cs"];
m6_382 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SqlServerConnection.cs"];
m6_141 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="240-240", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m6_142 [label="key == null", span="242-242", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m6_143 [label="throw new ArgumentNullException(nameof(key));", span="242-242", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m6_144 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.Query<string>(\r\n                    $@''select Value from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                    new { key },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n\r\n                return new HashSet<string>(result);\r\n            });", span="244-252", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m6_145 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="240-240", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs"];
m6_367 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="SqlServerConnection.cs"];
m6_366 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerConnection.cs"];
m6_360 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="239-239", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerConnection.cs"];
m6_46 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerConnection.cs"];
m6_190 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerConnection.cs"];
m6_339 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="518-518", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m6_340 [label="key == null", span="520-520", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m6_341 [label="throw new ArgumentNullException(nameof(key));", span="520-520", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m6_343 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Query<string>(query, new { key = key }, commandTimeout: _storage.CommandTimeout).ToList());", span="527-527", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m6_342 [label="string query =\r\n$@''select [Value] from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="522-525", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m6_344 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="518-518", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnection.cs"];
m6_73 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnection.cs"];
m6_76 [label="Entry SqlParameter.cstr", span="", cluster="SqlParameter.cstr", file="SqlServerConnection.cs"];
m6_119 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="211-211", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_120 [label="id == null", span="213-213", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_121 [label="throw new ArgumentNullException(nameof(id));", span="213-213", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_122 [label="name == null", span="214-214", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_123 [label="throw new ArgumentNullException(nameof(name));", span="214-214", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_124 [label="_storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                connection.Execute(\r\n$@'';merge [{_storage.SchemaName}].JobParameter with (holdlock) as Target\r\nusing (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) \r\non Target.JobId = Source.JobId AND Target.Name = Source.Name\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                    new { jobId = long.Parse(id), name, value },\r\n                    commandTimeout: _storage.CommandTimeout);\r\n            })", span="216-226", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_125 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="211-211", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs"];
m6_158 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs"];
m6_267 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnection.cs"];
m6_383 [label="Entry Unk.Release", span="", cluster="Unk.Release", file="SqlServerConnection.cs"];
m6_75 [label="Entry Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", span="29-29", cluster="Hangfire.SqlServer.SqlCommandBatch.SqlCommandBatch(bool)", file="SqlServerConnection.cs"];
m6_78 [label="Entry Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", span="51-51", cluster="Hangfire.SqlServer.SqlCommandBatch.Append(string, params SqlParameter[])", file="SqlServerConnection.cs"];
m6_255 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m6_256 [label="key == null", span="407-407", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m6_257 [label="throw new ArgumentNullException(nameof(key));", span="407-407", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m6_259 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var result = connection.ExecuteScalar<DateTime?>(query, new { key = key }, commandTimeout: _storage.CommandTimeout);\r\n                if (!result.HasValue) return TimeSpan.FromSeconds(-1);\r\n\r\n                return result.Value - DateTime.UtcNow;\r\n            });", span="411-417", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m6_258 [label="string query = $@''select min([ExpireAt]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key''", span="409-409", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m6_260 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnection.cs"];
m6_131 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="229-229", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_132 [label="id == null", span="231-231", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_133 [label="throw new ArgumentNullException(nameof(id));", span="231-231", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_134 [label="name == null", span="232-232", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_135 [label="throw new ArgumentNullException(nameof(name));", span="232-232", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_136 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.ExecuteScalar<string>(\r\n                $@''select top (1) Value from [{_storage.SchemaName}].JobParameter with (readcommittedlock) where JobId = @id and Name = @name'',\r\n                new { id = long.Parse(id), name = name },\r\n                commandTimeout: _storage.CommandTimeout));", span="234-237", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_137 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="229-229", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs"];
m6_364 [label="Entry Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", span="560-560", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_369 [label="_lockedResources.ContainsKey(resource)", span="564-564", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_370 [label="_lockedResources[resource].Contains(lockId)", span="566-566", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_371 [label="_lockedResources[resource].Remove(lockId) &&\r\n                            _lockedResources[resource].Count == 0 &&\r\n                            _lockedResources.Remove(resource) &&\r\n                            _dedicatedConnection.State == ConnectionState.Open", span="568-571", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_372 [label="SqlServerDistributedLock.Release(_dedicatedConnection, resource)", span="577-577", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_377 [label="!onDisposing", span="590-590", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_373 [label="_lockedResources.Count == 0", span="582-582", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_374 [label="_storage.ReleaseConnection(_dedicatedConnection)", span="584-584", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_376 [label=Exception, span="588-588", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_375 [label="_dedicatedConnection = null", span="585-585", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_378 [label="throw;", span="592-592", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_379 [label="Exit Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", span="560-560", cluster="Hangfire.SqlServer.SqlServerConnection.ReleaseLock(string, System.Guid, bool)", file="SqlServerConnection.cs"];
m6_79 [label="Entry Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", span="75-75", cluster="Hangfire.SqlServer.SqlCommandBatch.ExecuteNonQuery()", file="SqlServerConnection.cs"];
m6_72 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs"];
m6_104 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="180-180", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m6_105 [label="jobId == null", span="182-182", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m6_106 [label="throw new ArgumentNullException(nameof(jobId));", span="182-182", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m6_108 [label="return _storage.UseConnection(_dedicatedConnection, connection =>\r\n            {\r\n                var sqlState = connection.Query<SqlState>(sql, new { jobId = long.Parse(jobId) }, commandTimeout: _storage.CommandTimeout).SingleOrDefault();\r\n                if (sqlState == null)\r\n                {\r\n                    return null;\r\n                }\r\n\r\n                var data = new Dictionary<string, string>(\r\n                    JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                    StringComparer.OrdinalIgnoreCase);\r\n\r\n                return new StateData\r\n                {\r\n                    Name = sqlState.Name,\r\n                    Reason = sqlState.Reason,\r\n                    Data = data\r\n                };\r\n            });", span="190-208", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m6_107 [label="string sql = \r\n$@''select s.Name, s.Reason, s.Data\r\nfrom [{_storage.SchemaName}].State s with (readcommittedlock)\r\ninner join [{_storage.SchemaName}].Job j with (readcommittedlock) on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="184-188", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m6_109 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="180-180", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs"];
m6_37 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="SqlServerConnection.cs"];
m6_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerConnection.cs"];
m6_236 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m6_237 [label="key == null", span="381-381", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m6_238 [label="throw new ArgumentNullException(nameof(key));", span="381-381", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m6_239 [label="return _storage.UseConnection(_dedicatedConnection, connection => connection.Query<int>(\r\n                $''select count([Key]) from [{_storage.SchemaName}].[Set] with (readcommittedlock) where [Key] = @key'',\r\n                new { key = key },\r\n                commandTimeout: _storage.CommandTimeout).First());", span="383-386", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m6_240 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnection.cs"];
m6_309 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m6_310 [label="key == null", span="475-475", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m6_311 [label="throw new ArgumentNullException(nameof(key));", span="475-475", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m6_313 [label="return _storage.UseConnection(_dedicatedConnection, connection => \r\n                connection.ExecuteScalar<long>(query, new { key = key }, commandTimeout: _storage.CommandTimeout));", span="481-482", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m6_312 [label="string query = \r\n$@''select count([Id]) from [{_storage.SchemaName}].List with (readcommittedlock)\r\nwhere [Key] = @key''", span="477-479", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m6_314 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnection.cs"];
m6_101 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs"];
m6_380 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SqlServerConnection.cs"];
m6_365 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SqlServerConnection.cs"];
m6_392 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerConnection.cs"];
m6_393 [label="System.DateTime", span="", file="SqlServerConnection.cs"];
m6_394 [label="System.TimeSpan", span="", file="SqlServerConnection.cs"];
m6_395 [label=createJobSql, span="", file="SqlServerConnection.cs"];
m6_396 [label=invocationData, span="", file="SqlServerConnection.cs"];
m6_397 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="SqlServerConnection.cs"];
m6_398 [label=string, span="", file="SqlServerConnection.cs"];
m6_399 [label=sql, span="", file="SqlServerConnection.cs"];
m6_400 [label=string, span="", file="SqlServerConnection.cs"];
m6_401 [label=sql, span="", file="SqlServerConnection.cs"];
m6_402 [label=string, span="", file="SqlServerConnection.cs"];
m6_403 [label=string, span="", file="SqlServerConnection.cs"];
m6_404 [label=string, span="", file="SqlServerConnection.cs"];
m6_405 [label=string, span="", file="SqlServerConnection.cs"];
m6_406 [label=string, span="", file="SqlServerConnection.cs"];
m6_407 [label=string, span="", file="SqlServerConnection.cs"];
m6_408 [label=string, span="", file="SqlServerConnection.cs"];
m6_409 [label=double, span="", file="SqlServerConnection.cs"];
m6_410 [label=double, span="", file="SqlServerConnection.cs"];
m6_411 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="SqlServerConnection.cs"];
m6_412 [label=string, span="", file="SqlServerConnection.cs"];
m6_413 [label=sql, span="", file="SqlServerConnection.cs"];
m6_414 [label=string, span="", file="SqlServerConnection.cs"];
m6_415 [label=string, span="", file="SqlServerConnection.cs"];
m6_416 [label=data, span="", file="SqlServerConnection.cs"];
m6_417 [label=string, span="", file="SqlServerConnection.cs"];
m6_418 [label=string, span="", file="SqlServerConnection.cs"];
m6_419 [label="System.TimeSpan", span="", file="SqlServerConnection.cs"];
m6_420 [label=string, span="", file="SqlServerConnection.cs"];
m6_421 [label=string, span="", file="SqlServerConnection.cs"];
m6_422 [label=int, span="", file="SqlServerConnection.cs"];
m6_423 [label=int, span="", file="SqlServerConnection.cs"];
m6_424 [label=query, span="", file="SqlServerConnection.cs"];
m6_425 [label=string, span="", file="SqlServerConnection.cs"];
m6_426 [label=query, span="", file="SqlServerConnection.cs"];
m6_427 [label=string, span="", file="SqlServerConnection.cs"];
m6_428 [label=query, span="", file="SqlServerConnection.cs"];
m6_429 [label=string, span="", file="SqlServerConnection.cs"];
m6_430 [label=query, span="", file="SqlServerConnection.cs"];
m6_431 [label=string, span="", file="SqlServerConnection.cs"];
m6_432 [label=query, span="", file="SqlServerConnection.cs"];
m6_433 [label=string, span="", file="SqlServerConnection.cs"];
m6_434 [label=string, span="", file="SqlServerConnection.cs"];
m6_435 [label=query, span="", file="SqlServerConnection.cs"];
m6_436 [label=string, span="", file="SqlServerConnection.cs"];
m6_437 [label=query, span="", file="SqlServerConnection.cs"];
m6_438 [label=string, span="", file="SqlServerConnection.cs"];
m6_439 [label=query, span="", file="SqlServerConnection.cs"];
m6_440 [label=string, span="", file="SqlServerConnection.cs"];
m6_441 [label=int, span="", file="SqlServerConnection.cs"];
m6_442 [label=int, span="", file="SqlServerConnection.cs"];
m6_443 [label=query, span="", file="SqlServerConnection.cs"];
m6_444 [label=string, span="", file="SqlServerConnection.cs"];
m6_445 [label=query, span="", file="SqlServerConnection.cs"];
m6_446 [label="Hangfire.SqlServer.SqlServerConnection.DisposableLock", span="", file="SqlServerConnection.cs"];
m7_0 [label="Entry HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7", cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerStorage.cs"];
m7_1 [label="Exit HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7", cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerStorage.cs"];
m8_8 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="SqlServerWriteOnlyTransaction.cs"];
m8_9 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="SqlServerWriteOnlyTransaction.cs"];
m8_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", span="37-37", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyTransaction.cs"];
m8_15 [label="return Equals(obj as ExpressionFingerprint);", span="39-39", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyTransaction.cs"];
m8_16 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", span="37-37", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(object)", file="SqlServerWriteOnlyTransaction.cs"];
m8_10 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyTransaction.cs"];
m8_11 [label="return (other != null)\r\n                   && (this.NodeType == other.NodeType)\r\n                   && Equals(this.Type, other.Type);", span="32-34", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyTransaction.cs"];
m8_12 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="SqlServerWriteOnlyTransaction.cs"];
m8_4 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs"];
m8_5 [label="combiner.AddInt32((int)NodeType)", span="26-26", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs"];
m8_6 [label="combiner.AddObject(Type)", span="27-27", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs"];
m8_7 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="SqlServerWriteOnlyTransaction.cs"];
m8_0 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="12-12", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs"];
m8_1 [label="NodeType = nodeType", span="14-14", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs"];
m8_2 [label="Type = type", span="15-15", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs"];
m8_3 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="12-12", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.ExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="SqlServerWriteOnlyTransaction.cs"];
m8_13 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="SqlServerWriteOnlyTransaction.cs"];
m8_17 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", span="42-42", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs"];
m8_18 [label="HashCodeCombiner combiner = new HashCodeCombiner()", span="44-44", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs"];
m8_19 [label="AddToHashCodeCombiner(combiner)", span="45-45", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs"];
m8_20 [label="return combiner.CombinedHash;", span="46-46", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs"];
m8_21 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", span="42-42", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.GetHashCode()", file="SqlServerWriteOnlyTransaction.cs"];
m8_22 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", span="7-7", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", file="SqlServerWriteOnlyTransaction.cs"];
m8_23 [label="HangFire.Common.ExpressionUtil.ExpressionFingerprint", span="", file="SqlServerWriteOnlyTransaction.cs"];
n36 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
n36 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
n36 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
n36 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
n36 -> n17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
n36 -> n30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n2 -> n5  [key=0, style=solid];
n2 -> n6  [key=2, style=dotted];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n0  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n8 -> n17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n9 -> n10  [key=0, style=solid];
n9 -> n19  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n21  [key=2, style=dotted];
n13 -> n13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n17 -> n18  [key=0, style=solid];
n17 -> n21  [key=2, style=dotted];
n17 -> n17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n10 -> n11  [key=0, style=solid];
n10 -> n10  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
n11 -> n12  [key=0, style=solid];
n11 -> n20  [key=2, style=dotted];
n11 -> n24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n11 -> n15  [key=1, style=dashed, color=darkseagreen4, label=removedCount];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n15 -> n10  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n14 -> n14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n14 -> n17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n16 -> n17  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n18 -> n8  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=2, style=dotted];
n25 -> n28  [key=2, style=dotted];
n26 -> n24  [key=0, style=bold, color=blue];
n27 -> n34  [key=0, style=solid];
n27 -> d34  [key=0, style=solid, color=green];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n30 -> n33  [key=2, style=dotted];
n31 -> n29  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n35 -> n27  [key=0, style=bold, color=blue];
d34 -> n35  [key=0, style=solid, color=green];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_3  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_71  [key=3, color=darkorchid, style=bold, label="Local variable long awaitingCount"];
m0_71 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_30  [key=2, style=dotted, color=green];
m0_28 -> m0_31  [key=2, style=dotted, color=green];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_30  [key=2, style=dotted, color=green];
m0_33 -> m0_31  [key=2, style=dotted, color=green];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_34 -> m0_32  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid, color=green];
m0_42 -> m0_30  [key=2, style=dotted, color=green];
m0_42 -> m0_31  [key=2, style=dotted, color=green];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_41 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_35  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_30  [key=2, style=dotted, color=green];
m0_47 -> m0_31  [key=2, style=dotted, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_48 -> m0_46  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_30  [key=2, style=dotted, color=green];
m0_50 -> m0_31  [key=2, style=dotted, color=green];
m0_50 -> m0_52  [key=2, style=dotted, color=green];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_51 -> m0_49  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_54 -> m0_30  [key=2, style=dotted, color=green];
m0_53 -> m0_54  [key=0, style=solid, color=green];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid, color=green];
m0_57 -> m0_30  [key=2, style=dotted, color=green];
m0_57 -> m0_31  [key=2, style=dotted, color=green];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_58 -> m0_56  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid, color=green];
m0_60 -> m0_30  [key=2, style=dotted, color=green];
m0_60 -> m0_31  [key=2, style=dotted, color=green];
m0_59 -> m0_60  [key=0, style=solid, color=green];
m0_61 -> m0_59  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid, color=green];
m0_63 -> m0_30  [key=2, style=dotted, color=green];
m0_63 -> m0_31  [key=2, style=dotted, color=green];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_64 -> m0_62  [key=0, style=bold, color=blue];
m0_66 -> m0_30  [key=2, style=dotted];
m0_66 -> m0_31  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_69 -> m0_30  [key=2, style=dotted];
m0_69 -> m0_31  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_77 -> m0_30  [key=2, style=dotted];
m0_77 -> m0_31  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_38 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=storageConnection];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_41  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_43  [key=0, style=solid];
m0_35 -> m0_35  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_65  [key=0, style=bold, color=blue];
m0_68 -> m0_69  [key=0, style=solid];
m0_70 -> m0_68  [key=0, style=bold, color=blue];
m0_72 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=awaitingCount];
m0_72 -> m0_73  [key=0, style=solid];
m0_75 -> m0_77  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_45  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_44  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_44  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=storageConnection];
m0_78 -> m0_71  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m1_41 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_70  [key=2, style=dotted];
m1_41 -> m1_40  [key=2, style=dotted];
m1_41 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_30  [key=2, style=dotted];
m1_1 -> m1_54  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_31  [key=2, style=dotted, color=green];
m1_2 -> m1_32  [key=2, style=dotted];
m1_2 -> m1_33  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_34  [key=2, style=dotted, color=green];
m1_4 -> m1_6  [key=1, style=dashed, color=green, label=from];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_34  [key=2, style=dotted, color=green];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_35  [key=2, style=dotted, color=green];
m1_6 -> m1_36  [key=2, style=dotted];
m1_6 -> m1_33  [key=2, style=dotted];
m1_6 -> m1_9  [key=1, style=dashed, color=green, label=pager];
m1_6 -> m1_11  [key=1, style=dashed, color=green, label=pager];
m1_6 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=pager];
m1_6 -> m1_58  [key=2, style=dotted, color=green];
m1_6 -> m1_59  [key=2, style=dotted, color=green];
m1_6 -> m1_52  [key=1, style=dashed, color=green, label=pager];
m1_7 -> m1_8  [key=0, style=solid, color=green];
m1_7 -> m1_37  [key=2, style=dotted];
m1_7 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=enqueuedJobs];
m1_7 -> m1_60  [key=2, style=dotted, color=green];
m1_7 -> m1_14  [key=1, style=dashed, color=green, label=failedJobs];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid, color=red];
m1_11 -> m1_12  [key=0, style=solid, color=red];
m1_11 -> m1_38  [key=2, style=dotted, color=red];
m1_11 -> m1_39  [key=2, style=dotted, color=red];
m1_11 -> m1_40  [key=2, style=dotted, color=red];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_46  [key=2, style=dotted];
m1_28 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_40  [key=2, style=dotted];
m1_28 -> m1_64  [key=2, style=dotted];
m1_28 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_28 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_30  [key=2, style=dotted];
m1_8 -> m1_54  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_27  [key=0, style=solid];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_13 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_10 -> m1_29  [key=0, style=solid];
m1_10 -> m1_30  [key=2, style=dotted];
m1_10 -> m1_54  [key=2, style=dotted];
m1_10 -> m1_53  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_30  [key=2, style=dotted];
m1_12 -> m1_54  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_30  [key=2, style=dotted];
m1_14 -> m1_16  [key=1, style=dashed, color=green, label=job];
m1_14 -> m1_51  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_54  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_33  [key=2, style=dotted];
m1_15 -> m1_41  [key=2, style=dotted];
m1_15 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_15 -> m1_54  [key=2, style=dotted, color=green];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_30  [key=2, style=dotted];
m1_16 -> m1_16  [key=1, style=dashed, color=green, label=job];
m1_16 -> m1_59  [key=2, style=dotted, color=green];
m1_16 -> m1_64  [key=2, style=dotted, color=green];
m1_16 -> m1_18  [key=1, style=dashed, color=green, label=job];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_17 -> m1_42  [key=2, style=dotted];
m1_17 -> m1_40  [key=2, style=dotted];
m1_17 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_17 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_17 -> m1_54  [key=2, style=dotted, color=green];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_30  [key=2, style=dotted];
m1_18 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_18 -> m1_42  [key=2, style=dotted];
m1_18 -> m1_40  [key=2, style=dotted];
m1_18 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_43  [key=2, style=dotted];
m1_19 -> m1_41  [key=2, style=dotted];
m1_19 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_19 -> m1_54  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_30  [key=2, style=dotted];
m1_20 -> m1_64  [key=2, style=dotted];
m1_20 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_20 -> m1_66  [key=2, style=dotted];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_44  [key=2, style=dotted];
m1_21 -> m1_41  [key=2, style=dotted];
m1_21 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_21 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_21 -> m1_54  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_30  [key=2, style=dotted];
m1_22 -> m1_64  [key=2, style=dotted];
m1_22 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_22 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_45  [key=2, style=dotted];
m1_23 -> m1_41  [key=2, style=dotted];
m1_23 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_23 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_23 -> m1_54  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_24 -> m1_67  [key=2, style=dotted];
m1_24 -> m1_40  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_41  [key=2, style=dotted];
m1_25 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_25 -> m1_54  [key=2, style=dotted];
m1_26 -> m1_13  [key=0, style=solid];
m1_26 -> m1_30  [key=2, style=dotted];
m1_26 -> m1_64  [key=2, style=dotted];
m1_26 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_43  [key=2, style=dotted];
m1_26 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_29 -> m1_0  [key=0, style=bold, color=blue];
m1_29 -> m1_54  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_36 -> m1_54  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_46  [key=2, style=dotted];
m1_52 -> m1_39  [key=2, style=dotted];
m1_52 -> m1_40  [key=2, style=dotted];
m1_30 -> m1_59  [key=2, style=dotted];
m1_30 -> m1_64  [key=2, style=dotted];
m1_30 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_31 -> m1_54  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_54  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_64  [key=2, style=dotted];
m1_33 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_54  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_64  [key=2, style=dotted];
m1_35 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_37 -> m1_64  [key=2, style=dotted];
m1_37 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_38 -> m1_54  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_40 -> m1_54  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_42 -> m1_54  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_54  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_45 -> m1_54  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_64  [key=2, style=dotted];
m1_46 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=arg];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=arg];
m1_47 -> m1_54  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_11  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_47 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m1_48 -> m1_64  [key=2, style=dotted];
m1_48 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=arg];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_49 -> m1_44  [key=0, style=solid];
m1_50 -> m1_14  [key=0, style=solid];
m1_50 -> m1_54  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_39 -> m1_43  [key=0, style=solid];
m1_39 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_39 -> m1_69  [key=2, style=dotted];
m1_39 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=arg];
m1_44 -> m1_50  [key=0, style=solid];
m1_44 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_53 -> m1_0  [key=0, style=bold, color=blue];
m1_72 -> m1_2  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_4  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_5  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_6  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_15  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_16  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_17  [key=1, style=dashed, color=green, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m1_72 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m3_3 -> m3_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m3_3 -> m3_9  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m3_3 -> m3_11  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m3_3 -> m3_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m3_3 -> m3_15  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToClassName"];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=0, style=solid];
m3_4 -> m3_9  [key=0, style=solid];
m3_4 -> m3_11  [key=0, style=solid];
m3_4 -> m3_13  [key=0, style=solid];
m3_4 -> m3_15  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_6 -> m3_16  [key=0, style=solid];
m3_8 -> m3_16  [key=0, style=solid];
m3_10 -> m3_16  [key=0, style=solid];
m3_12 -> m3_16  [key=0, style=solid];
m3_14 -> m3_16  [key=0, style=solid];
m3_16 -> m3_3  [key=0, style=bold, color=blue];
m3_17 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Metric"];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_17  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_26  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=0, style=solid];
m5_19 -> m5_23  [key=0, style=solid];
m5_19 -> m5_15  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_24  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_25  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_17  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=0, style=solid];
m5_11 -> m5_14  [key=0, style=solid];
m5_11 -> m5_15  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_16  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_9  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=BasicDeliverEventArgs];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="ref IModel"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_2 -> m5_6  [key=0, style=solid];
m5_2 -> n6  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_31 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m5_31 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.RabbitMQ.RabbitMqFetchedJob"];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_151 -> m6_154  [key=1, style=dashed, color=darkseagreen4, label=double];
m6_151 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_151 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_154  [key=0, style=solid];
m6_153 -> m6_157  [key=0, style=solid];
m6_153 -> m6_5  [key=2, style=dotted];
m6_153 -> m6_6  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_156  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_86  [key=2, style=dotted];
m6_156 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_155 -> m6_157  [key=0, style=solid];
m6_155 -> m6_158  [key=2, style=dotted];
m6_157 -> m6_151  [key=0, style=bold, color=blue];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_197 -> m6_200  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m6_197 -> m6_201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m6_197 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m6_197 -> m6_203  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_197 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_200  [key=0, style=solid];
m6_199 -> m6_204  [key=0, style=solid];
m6_199 -> m6_5  [key=2, style=dotted];
m6_199 -> m6_6  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_202  [key=0, style=solid];
m6_201 -> m6_204  [key=0, style=solid];
m6_201 -> m6_5  [key=2, style=dotted];
m6_201 -> m6_6  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_205  [key=2, style=dotted];
m6_202 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=data];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> n20  [key=2, style=dotted];
m6_203 -> m6_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_204 -> m6_197  [key=0, style=bold, color=blue];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_27 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_27 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_27 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_29 -> m6_35  [key=0, style=solid];
m6_29 -> m6_5  [key=2, style=dotted];
m6_29 -> m6_6  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_36  [key=2, style=dotted];
m6_30 -> m6_37  [key=2, style=dotted];
m6_30 -> m6_38  [key=2, style=dotted];
m6_30 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_30 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=providers];
m6_32 -> m6_35  [key=0, style=solid];
m6_32 -> m6_39  [key=2, style=dotted];
m6_32 -> m6_40  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_42  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_41  [key=2, style=dotted];
m6_35 -> m6_27  [key=0, style=bold, color=blue];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_217 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_217 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [key=0, style=solid];
m6_219 -> m6_221  [key=0, style=solid];
m6_219 -> m6_5  [key=2, style=dotted];
m6_219 -> m6_6  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> n20  [key=2, style=dotted];
m6_220 -> m6_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_221 -> m6_217  [key=0, style=bold, color=blue];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_181 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_181 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=0, style=solid];
m6_183 -> m6_5  [key=2, style=dotted];
m6_183 -> m6_6  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_57  [key=2, style=dotted];
m6_184 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_185 -> m6_181  [key=0, style=bold, color=blue];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_330 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_330 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_333  [key=0, style=solid];
m6_332 -> m6_335  [key=0, style=solid];
m6_332 -> m6_5  [key=2, style=dotted];
m6_332 -> m6_6  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_86  [key=2, style=dotted];
m6_334 -> m6_336  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_335 -> m6_330  [key=0, style=bold, color=blue];
m6_26 -> m6_348  [key=0, style=solid];
m6_26 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_26 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_26 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_26 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_26 -> m6_357  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_26 -> m6_358  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_26 -> m6_20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan timeout"];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_350  [key=0, style=solid];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_357  [key=0, style=solid];
m6_351 -> m6_362  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_356  [key=0, style=solid];
m6_352 -> m6_363  [key=2, style=dotted];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_364  [key=2, style=dotted];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_365  [key=2, style=dotted];
m6_356 -> m6_366  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_367  [key=2, style=dotted];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_368  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_360  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_361  [key=2, style=dotted];
m6_350 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label=lockId];
m6_350 -> m6_357  [key=1, style=dashed, color=darkseagreen4, label=lockId];
m6_350 -> m6_358  [key=1, style=dashed, color=darkseagreen4, label=lockId];
m6_353 -> m6_354  [key=0, style=solid];
m6_355 -> m6_359  [key=0, style=solid];
m6_359 -> m6_26  [key=0, style=bold, color=blue];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_300  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_298 -> m6_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_298 -> m6_302  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_298 -> m6_304  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_298 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_301  [key=0, style=solid];
m6_300 -> m6_305  [key=0, style=solid];
m6_300 -> m6_5  [key=2, style=dotted];
m6_300 -> m6_6  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_303  [key=0, style=solid];
m6_302 -> m6_305  [key=0, style=solid];
m6_302 -> m6_5  [key=2, style=dotted];
m6_302 -> m6_6  [key=2, style=dotted];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_86  [key=2, style=dotted];
m6_304 -> m6_306  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_305 -> m6_298  [key=0, style=bold, color=blue];
m6_225 -> m6_226  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_228  [key=0, style=solid];
m6_226 -> m6_230  [key=2, style=dotted];
m6_226 -> m6_226  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_227 -> m6_229  [key=0, style=solid];
m6_227 -> m6_231  [key=2, style=dotted];
m6_227 -> m6_6  [key=2, style=dotted];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> n20  [key=2, style=dotted];
m6_228 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_228 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_229 -> m6_225  [key=0, style=bold, color=blue];
m6_368 -> m6_385  [key=0, style=solid];
m6_368 -> m6_386  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_368 -> m6_387  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m6_385 -> m6_386  [key=0, style=solid];
m6_386 -> m6_387  [key=0, style=solid];
m6_387 -> m6_388  [key=0, style=solid];
m6_388 -> m6_368  [key=0, style=bold, color=blue];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_320  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_318 -> m6_322  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_318 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_321  [key=0, style=solid];
m6_320 -> m6_323  [key=0, style=solid];
m6_320 -> m6_5  [key=2, style=dotted];
m6_320 -> m6_6  [key=2, style=dotted];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_86  [key=2, style=dotted];
m6_322 -> m6_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_323 -> m6_318  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_7  [key=0, style=bold, color=blue];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_277 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_277 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_280  [key=0, style=solid];
m6_279 -> m6_282  [key=0, style=solid];
m6_279 -> m6_5  [key=2, style=dotted];
m6_279 -> m6_6  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_281 -> m6_86  [key=2, style=dotted];
m6_281 -> m6_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_282 -> m6_277  [key=0, style=bold, color=blue];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_270  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_268 -> m6_272  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_268 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_271  [key=0, style=solid];
m6_270 -> m6_273  [key=0, style=solid];
m6_270 -> m6_5  [key=2, style=dotted];
m6_270 -> m6_6  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_86  [key=2, style=dotted];
m6_272 -> m6_274  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_273 -> m6_268  [key=0, style=bold, color=blue];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_209 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_209 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_212  [key=0, style=solid];
m6_211 -> m6_213  [key=0, style=solid];
m6_211 -> m6_5  [key=2, style=dotted];
m6_211 -> m6_6  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> n20  [key=2, style=dotted];
m6_212 -> m6_214  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_213 -> m6_209  [key=0, style=bold, color=blue];
m6_345 -> m6_346  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_17  [key=0, style=bold, color=blue];
m6_43 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_45 -> m6_43  [key=0, style=bold, color=blue];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_71  [key=2, style=dotted];
m6_59 -> m6_72  [key=2, style=dotted];
m6_59 -> m6_73  [key=2, style=dotted];
m6_59 -> m6_74  [key=2, style=dotted];
m6_59 -> m6_64  [key=1, style=dashed, color=red, label=jobId];
m6_59 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_69  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid, color=red];
m6_63 -> m6_65  [key=0, style=solid, color=red];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_65  [key=1, style=dashed, color=red, label=DbConnection];
m6_65 -> m6_66  [key=0, style=solid, color=red];
m6_64 -> m6_63  [key=0, style=solid, color=red];
m6_64 -> m6_76  [key=2, style=dotted, color=red];
m6_64 -> m6_77  [key=2, style=dotted, color=red];
m6_64 -> m6_78  [key=2, style=dotted, color=red];
m6_64 -> m6_64  [key=1, style=dashed, color=red, label=parameter];
m6_69 -> m6_70  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid, color=red];
m6_61 -> m6_64  [key=1, style=dashed, color=red, label=insertParameterSql];
m6_62 -> m6_63  [key=0, style=solid, color=red];
m6_62 -> m6_75  [key=2, style=dotted, color=red];
m6_62 -> m6_64  [key=1, style=dashed, color=red, label=commandBatch];
m6_62 -> m6_65  [key=1, style=dashed, color=red, label=commandBatch];
m6_62 -> m6_66  [key=1, style=dashed, color=red, label=commandBatch];
m6_62 -> m6_67  [key=1, style=dashed, color=red, label=commandBatch];
m6_62 -> m6_68  [key=1, style=dashed, color=red, label=commandBatch];
m6_66 -> m6_67  [key=0, style=solid, color=red];
m6_67 -> m6_68  [key=0, style=solid, color=red];
m6_68 -> m6_69  [key=0, style=solid, color=red];
m6_68 -> m6_79  [key=2, style=dotted, color=red];
m6_70 -> m6_58  [key=0, style=bold, color=blue];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_100  [key=2, style=dotted];
m6_88 -> m6_73  [key=2, style=dotted];
m6_88 -> m6_101  [key=2, style=dotted];
m6_88 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_88 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_88 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_87 -> m6_88  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_91  [key=0, style=solid];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_73  [key=2, style=dotted];
m6_91 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m6_92 -> m6_93  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_103  [key=2, style=dotted];
m6_90 -> m6_99  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_98  [key=0, style=solid];
m6_95 -> m6_102  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_94 -> m6_95  [key=0, style=solid];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_99 -> m6_87  [key=0, style=bold, color=blue];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_100  [key=2, style=dotted];
m6_111 -> m6_73  [key=2, style=dotted];
m6_111 -> m6_101  [key=2, style=dotted];
m6_111 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m6_111 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m6_110 -> m6_111  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_114  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_117  [key=2, style=dotted];
m6_114 -> m6_73  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_118  [key=2, style=dotted];
m6_113 -> m6_116  [key=0, style=solid];
m6_116 -> m6_110  [key=0, style=bold, color=blue];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_100  [key=2, style=dotted];
m6_128 -> m6_130  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_129 -> m6_127  [key=0, style=bold, color=blue];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_100  [key=2, style=dotted];
m6_139 -> m6_73  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_140 -> m6_138  [key=0, style=bold, color=blue];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_73  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_150  [key=2, style=dotted];
m6_149 -> m6_146  [key=0, style=bold, color=blue];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_73  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_161 -> m6_159  [key=0, style=bold, color=blue];
m6_173 -> m6_174  [key=0, style=solid, color=red];
m6_173 -> m6_175  [key=0, style=solid, color=red];
m6_174 -> m6_173  [key=0, style=solid, color=red];
m6_174 -> m6_76  [key=2, style=dotted, color=red];
m6_174 -> m6_78  [key=2, style=dotted, color=red];
m6_174 -> m6_174  [key=1, style=dashed, color=red, label=keyValuePair];
m6_171 -> m6_172  [key=0, style=solid, color=red];
m6_171 -> m6_175  [key=1, style=dashed, color=red, label=DbConnection];
m6_171 -> m6_176  [key=1, style=dashed, color=red, label=DbTransaction];
m6_172 -> m6_173  [key=0, style=solid, color=red];
m6_172 -> m6_75  [key=2, style=dotted, color=red];
m6_172 -> m6_174  [key=1, style=dashed, color=red, label=commandBatch];
m6_172 -> m6_175  [key=1, style=dashed, color=red, label=commandBatch];
m6_172 -> m6_176  [key=1, style=dashed, color=red, label=commandBatch];
m6_172 -> m6_177  [key=1, style=dashed, color=red, label=commandBatch];
m6_172 -> m6_178  [key=1, style=dashed, color=red, label=commandBatch];
m6_172 -> m6_179  [key=1, style=dashed, color=red, label=commandBatch];
m6_175 -> m6_176  [key=0, style=solid, color=red];
m6_176 -> m6_177  [key=0, style=solid, color=red];
m6_177 -> m6_178  [key=0, style=solid, color=red];
m6_178 -> m6_179  [key=0, style=solid, color=red];
m6_179 -> m6_180  [key=0, style=solid, color=red];
m6_179 -> m6_79  [key=2, style=dotted, color=red];
m6_180 -> m6_171  [key=0, style=bold, color=blue];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_73  [key=2, style=dotted];
m6_187 -> m6_190  [key=2, style=dotted];
m6_187 -> m6_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_187 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_186 -> m6_187  [key=0, style=solid];
m6_188 -> m6_189  [key=0, style=solid];
m6_191 -> m6_192  [key=0, style=solid];
m6_194 -> m6_195  [key=0, style=solid];
m6_189 -> m6_186  [key=0, style=bold, color=blue];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_191  [key=0, style=bold, color=blue];
m6_195 -> m6_196  [key=0, style=solid];
m6_196 -> m6_194  [key=0, style=bold, color=blue];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_71  [key=2, style=dotted];
m6_207 -> m6_130  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_208 -> m6_206  [key=0, style=bold, color=blue];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_130  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_216 -> m6_214  [key=0, style=bold, color=blue];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_130  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_224 -> m6_222  [key=0, style=bold, color=blue];
m6_232 -> m6_233  [key=0, style=solid];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_235  [key=2, style=dotted];
m6_233 -> m6_72  [key=2, style=dotted];
m6_233 -> m6_130  [key=2, style=dotted];
m6_233 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_234 -> m6_232  [key=0, style=bold, color=blue];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_73  [key=2, style=dotted];
m6_242 -> m6_244  [key=2, style=dotted];
m6_241 -> m6_242  [key=0, style=solid];
m6_243 -> m6_241  [key=0, style=bold, color=blue];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_73  [key=2, style=dotted];
m6_252 -> m6_254  [key=2, style=dotted];
m6_251 -> m6_252  [key=0, style=solid];
m6_253 -> m6_251  [key=0, style=bold, color=blue];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_73  [key=2, style=dotted];
m6_262 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_261 -> m6_262  [key=0, style=solid];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_265  [key=0, style=solid];
m6_265 -> m6_266  [key=0, style=solid];
m6_264 -> m6_266  [key=0, style=solid];
m6_264 -> m6_267  [key=2, style=dotted];
m6_266 -> m6_261  [key=0, style=bold, color=blue];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_73  [key=2, style=dotted];
m6_274 -> m6_275  [key=0, style=solid];
m6_276 -> m6_274  [key=0, style=bold, color=blue];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_73  [key=2, style=dotted];
m6_283 -> m6_284  [key=0, style=solid];
m6_285 -> m6_283  [key=0, style=bold, color=blue];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_73  [key=2, style=dotted];
m6_293 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_292 -> m6_293  [key=0, style=solid];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_296  [key=0, style=solid];
m6_296 -> m6_297  [key=0, style=solid];
m6_295 -> m6_297  [key=0, style=solid];
m6_295 -> m6_267  [key=2, style=dotted];
m6_297 -> m6_292  [key=0, style=bold, color=blue];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_73  [key=2, style=dotted];
m6_306 -> m6_307  [key=0, style=solid];
m6_308 -> m6_306  [key=0, style=bold, color=blue];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_73  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_317 -> m6_315  [key=0, style=bold, color=blue];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_73  [key=2, style=dotted];
m6_325 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=result];
m6_324 -> m6_325  [key=0, style=solid];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_328  [key=0, style=solid];
m6_328 -> m6_329  [key=0, style=solid];
m6_327 -> m6_329  [key=0, style=solid];
m6_327 -> m6_267  [key=2, style=dotted];
m6_329 -> m6_324  [key=0, style=bold, color=blue];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_73  [key=2, style=dotted];
m6_337 -> m6_254  [key=2, style=dotted];
m6_336 -> m6_337  [key=0, style=solid];
m6_338 -> m6_336  [key=0, style=bold, color=blue];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_73  [key=2, style=dotted];
m6_346 -> m6_254  [key=2, style=dotted];
m6_347 -> m6_345  [key=0, style=bold, color=blue];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_164  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_162 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m6_162 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m6_162 -> m6_168  [key=1, style=dashed, color=red, label=string];
m6_162 -> m6_173  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m6_162 -> m6_174  [key=1, style=dashed, color=red, label=string];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_165  [key=0, style=solid];
m6_164 -> m6_169  [key=0, style=solid];
m6_164 -> m6_5  [key=2, style=dotted];
m6_164 -> m6_6  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_167  [key=0, style=solid, color=red];
m6_166 -> m6_169  [key=0, style=solid];
m6_166 -> m6_5  [key=2, style=dotted];
m6_166 -> m6_6  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid, color=red];
m6_168 -> m6_170  [key=2, style=dotted, color=red];
m6_168 -> m6_171  [key=1, style=dashed, color=red, label="lambda expression"];
m6_167 -> m6_168  [key=0, style=solid, color=red];
m6_167 -> m6_174  [key=1, style=dashed, color=red, label=sql];
m6_169 -> m6_162  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=2, style=dotted];
m6_15 -> m6_13  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_288  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_286 -> m6_290  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_286 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_289  [key=0, style=solid];
m6_288 -> m6_291  [key=0, style=solid];
m6_288 -> m6_5  [key=2, style=dotted];
m6_288 -> m6_6  [key=2, style=dotted];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_86  [key=2, style=dotted];
m6_290 -> m6_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_291 -> m6_286  [key=0, style=bold, color=blue];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_245 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_245 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_248  [key=0, style=solid];
m6_247 -> m6_250  [key=0, style=solid];
m6_247 -> m6_5  [key=2, style=dotted];
m6_247 -> m6_6  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_86  [key=2, style=dotted];
m6_249 -> m6_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_250 -> m6_245  [key=0, style=bold, color=blue];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_80 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_80 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_83  [key=0, style=solid];
m6_82 -> m6_85  [key=0, style=solid];
m6_82 -> m6_5  [key=2, style=dotted];
m6_82 -> m6_6  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_86  [key=2, style=dotted];
m6_84 -> m6_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_84 -> m6_84  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.Common.JobLoadException loadException"];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label=sql];
m6_85 -> m6_80  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_20 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_20 -> m6_26  [key=3, color=darkorchid, style=bold, label="method methodReturn System.IDisposable AcquireDistributedLock"];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=0, style=solid];
m6_21 -> m6_25  [key=2, style=dotted];
m6_22 -> m6_24  [key=0, style=solid];
m6_22 -> m6_5  [key=2, style=dotted];
m6_22 -> m6_6  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_20  [key=0, style=bold, color=blue];
m6_389 -> m6_390  [key=0, style=solid];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_364  [key=2, style=dotted];
m6_391 -> m6_389  [key=0, style=bold, color=blue];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_47 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_47 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_47 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_47 -> m6_54  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m6_47 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m6_47 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_47 -> m6_63  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_50  [key=0, style=solid];
m6_49 -> m6_55  [key=0, style=solid];
m6_49 -> m6_5  [key=2, style=dotted];
m6_49 -> m6_6  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=0, style=solid];
m6_51 -> m6_55  [key=0, style=solid];
m6_51 -> m6_5  [key=2, style=dotted];
m6_51 -> m6_6  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid, color=red];
m6_53 -> m6_56  [key=2, style=dotted];
m6_53 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m6_54 -> m6_55  [key=0, style=solid, color=red];
m6_54 -> m6_57  [key=2, style=dotted, color=red];
m6_54 -> m6_58  [key=1, style=dashed, color=red, label="lambda expression"];
m6_54 -> m6_54  [key=3, color=red, style=bold, label="method methodReturn ? "];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_54  [key=1, style=dashed, color=red, label=createJobSql];
m6_52 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m6_55 -> m6_47  [key=0, style=bold, color=blue];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_141 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_141 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_144  [key=0, style=solid];
m6_143 -> m6_145  [key=0, style=solid];
m6_143 -> m6_5  [key=2, style=dotted];
m6_143 -> m6_6  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_86  [key=2, style=dotted];
m6_144 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_145 -> m6_141  [key=0, style=bold, color=blue];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_341  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_339 -> m6_343  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_339 -> m6_346  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_342  [key=0, style=solid];
m6_341 -> m6_344  [key=0, style=solid];
m6_341 -> m6_5  [key=2, style=dotted];
m6_341 -> m6_6  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_86  [key=2, style=dotted];
m6_343 -> m6_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_346  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_344 -> m6_339  [key=0, style=bold, color=blue];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_119 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_119 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_119 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_119 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=0, style=solid];
m6_121 -> m6_125  [key=0, style=solid];
m6_121 -> m6_5  [key=2, style=dotted];
m6_121 -> m6_6  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_123 -> m6_125  [key=0, style=solid];
m6_123 -> m6_5  [key=2, style=dotted];
m6_123 -> m6_6  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> n20  [key=2, style=dotted];
m6_124 -> m6_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_125 -> m6_119  [key=0, style=bold, color=blue];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_257  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_255 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_255 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_258  [key=0, style=solid];
m6_257 -> m6_260  [key=0, style=solid];
m6_257 -> m6_5  [key=2, style=dotted];
m6_257 -> m6_6  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_86  [key=2, style=dotted];
m6_259 -> m6_261  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_260 -> m6_255  [key=0, style=bold, color=blue];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_131 -> m6_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_131 -> m6_135  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_131 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_131 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_134  [key=0, style=solid];
m6_133 -> m6_137  [key=0, style=solid];
m6_133 -> m6_5  [key=2, style=dotted];
m6_133 -> m6_6  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_135 -> m6_137  [key=0, style=solid];
m6_135 -> m6_5  [key=2, style=dotted];
m6_135 -> m6_6  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_86  [key=2, style=dotted];
m6_136 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_137 -> m6_131  [key=0, style=bold, color=blue];
m6_364 -> m6_369  [key=0, style=solid];
m6_364 -> m6_370  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_364 -> m6_371  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_364 -> m6_372  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_364 -> m6_377  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_364 -> m6_26  [key=3, color=darkorchid, style=bold, label="Parameter variable string resource"];
m6_364 -> m6_350  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Guid lockId"];
m6_364 -> m6_354  [key=3, color=darkorchid, style=bold, label="Parameter variable bool onDisposing"];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_373  [key=0, style=solid];
m6_369 -> m6_362  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_373  [key=0, style=solid];
m6_370 -> m6_380  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_373  [key=0, style=solid];
m6_371 -> m6_381  [key=2, style=dotted];
m6_371 -> m6_382  [key=2, style=dotted];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_383  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_379  [key=0, style=solid];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_376  [key=0, style=solid];
m6_373 -> m6_379  [key=0, style=solid];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_384  [key=2, style=dotted];
m6_376 -> m6_377  [key=0, style=solid];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_379  [key=0, style=solid];
m6_378 -> m6_379  [key=0, style=solid];
m6_379 -> m6_364  [key=0, style=bold, color=blue];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_104 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_104 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_107  [key=0, style=solid];
m6_106 -> m6_109  [key=0, style=solid];
m6_106 -> m6_5  [key=2, style=dotted];
m6_106 -> m6_6  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_86  [key=2, style=dotted];
m6_108 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_108 -> m6_84  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Storage.StateData "];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=sql];
m6_109 -> m6_104  [key=0, style=bold, color=blue];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_236 -> m6_239  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_236 -> m6_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_239  [key=0, style=solid];
m6_238 -> m6_240  [key=0, style=solid];
m6_238 -> m6_5  [key=2, style=dotted];
m6_238 -> m6_6  [key=2, style=dotted];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_86  [key=2, style=dotted];
m6_239 -> m6_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_240 -> m6_236  [key=0, style=bold, color=blue];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_311  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_309 -> m6_313  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_309 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_312  [key=0, style=solid];
m6_311 -> m6_314  [key=0, style=solid];
m6_311 -> m6_5  [key=2, style=dotted];
m6_311 -> m6_6  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_86  [key=2, style=dotted];
m6_313 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_314 -> m6_309  [key=0, style=bold, color=blue];
m6_392 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_54  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_62  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_66  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_67  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_167  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_168  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_172  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_177  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_178  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_239  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_242  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_271  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_272  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_281  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_289  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_290  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_304  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_312  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_321  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_322  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_333  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_334  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_342  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_343  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_346  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_349  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_351  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_352  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_354  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_356  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_357  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_358  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_369  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_370  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_371  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_372  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_373  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_374  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_392 -> m6_375  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m6_393 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m6_394 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_395 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m6_396 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m6_397 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_397 -> m6_63  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m6_398 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_399 -> m6_88  [key=1, style=dashed, color=darkseagreen4, label=sql];
m6_400 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_401 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=sql];
m6_402 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_403 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_404 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_405 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_406 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_407 -> m6_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_408 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_409 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=double];
m6_410 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=double];
m6_411 -> m6_173  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m6_412 -> m6_174  [key=1, style=dashed, color=red, label=string];
m6_413 -> m6_174  [key=1, style=dashed, color=red, label=sql];
m6_414 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_415 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_416 -> m6_207  [key=1, style=dashed, color=darkseagreen4, label=data];
m6_417 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_418 -> m6_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_419 -> m6_233  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_420 -> m6_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_421 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_422 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_423 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_424 -> m6_252  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_425 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_426 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_427 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_428 -> m6_275  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_429 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_430 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_431 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_432 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_433 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_434 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_435 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_436 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_437 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_438 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_439 -> m6_325  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_440 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_441 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_442 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_443 -> m6_337  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_444 -> m6_346  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_445 -> m6_346  [key=1, style=dashed, color=darkseagreen4, label=query];
m6_446 -> m6_385  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m6_446 -> m6_386  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m6_446 -> m6_387  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m6_446 -> m6_390  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection.DisposableLock"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_10  [key=2, style=dotted];
m8_16 -> m8_14  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=2, style=dotted];
m8_12 -> m8_10  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [key=2, style=dotted];
m8_7 -> m8_4  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_22  [key=2, style=dotted];
m8_18 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=combiner];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_4  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_17  [key=0, style=bold, color=blue];
m8_23 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
m8_23 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
m8_23 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
m8_23 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
m8_23 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
m8_23 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
m8_23 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprint"];
}
