digraph  {
m1_0 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_22 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_23 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_26 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m1_27 [label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", span="45-45", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromList(string, string)", file="IWriteOnlyTransaction.cs"];
m1_2 [label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m1_3 [label="Exit HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25", cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", file="IWriteOnlyTransaction.cs"];
m1_18 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_19 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="IWriteOnlyTransaction.cs"];
m1_28 [label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m1_29 [label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46", cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="IWriteOnlyTransaction.cs"];
m1_32 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="50-50", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_33 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", span="50-50", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_30 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="49-49", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_31 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", span="49-49", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementValue(string)", file="IWriteOnlyTransaction.cs"];
m1_34 [label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="51-51", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_35 [label="Exit HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="51-51", cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_8 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m1_9 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="IWriteOnlyTransaction.cs"];
m1_12 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_13 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="34-34", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_36 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="53-53", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m1_37 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="53-53", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m1_10 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_11 [label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_20 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m1_21 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="IWriteOnlyTransaction.cs"];
m1_14 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_15 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="IWriteOnlyTransaction.cs"];
m1_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_5 [label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26", cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_6 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_7 [label="Exit HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="27-27", cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="IWriteOnlyTransaction.cs"];
m1_16 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_17 [label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m1_24 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m1_25 [label="Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="IWriteOnlyTransaction.cs"];
m2_0 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="24-24", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RedisWriteOnlyTransaction.cs"];
m2_1 [label="ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="26-26", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RedisWriteOnlyTransaction.cs"];
m2_2 [label="CheckInterval = ServerWatchdog.DefaultCheckInterval", span="27-27", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RedisWriteOnlyTransaction.cs"];
m2_3 [label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="24-24", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RedisWriteOnlyTransaction.cs"];
m2_4 [label="Hangfire.Server.ServerWatchdogOptions", span="", file="RedisWriteOnlyTransaction.cs"];
m3_2 [label="Entry Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="96-96", cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SqlServerConnection.cs"];
m3_3 [label="Exit Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="96-96", cluster="Hangfire.IBackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="SqlServerConnection.cs"];
m3_0 [label="Entry Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SqlServerConnection.cs"];
m3_1 [label="Exit Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="65-65", cluster="Hangfire.IBackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="SqlServerConnection.cs"];
m4_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_82 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_83 [label="AddToSet(key, value, 0.0)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_84 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="153-153", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_98 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_99 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="181-183", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_100 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="179-179", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_85 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m4_86 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="160-165", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m4_87 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="167-169", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m4_88 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="158-158", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="SqlServerWriteOnlyTransaction.cs"];
m4_64 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_65 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="134-136", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_66 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="132-132", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_44 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_45 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="98-100", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_46 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="102-111", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_47 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="96-96", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_145 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="SqlServerWriteOnlyTransaction.cs"];
m4_35 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_36 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="78-81", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_37 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="83-93", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_38 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="76-76", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="SqlServerWriteOnlyTransaction.cs"];
m4_110 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m4_111 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num, [Key] from HangFire.List)\r\ndelete from cte where row_num not between @start and @end and [Key] = @key''", span="195-198", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m4_112 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="200-202", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m4_113 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="193-193", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="SqlServerWriteOnlyTransaction.cs"];
m4_23 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="256-256", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m4_143 [label="_commandQueue.Enqueue(action)", span="258-258", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m4_144 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="256-256", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyTransaction.cs"];
m4_17 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m4_18 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerWriteOnlyTransaction.cs"];
m4_15 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m4_76 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_77 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="148-150", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_78 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="146-146", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_70 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_71 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="141-143", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_72 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="139-139", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_19 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerWriteOnlyTransaction.cs"];
m4_27 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_92 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_93 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="174-176", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_94 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="172-172", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_20 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_21 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="64-66", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_22 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_104 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_105 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="188-190", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_106 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="186-186", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_8 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_9 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.Required,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="47-49", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_10 [label="_connection.EnlistTransaction(Transaction.Current)", span="51-51", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_13 [label="transaction.Complete()", span="58-58", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_11 [label=_commandQueue, span="53-53", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_12 [label="command(_connection)", span="55-55", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_14 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="45-45", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="SqlServerWriteOnlyTransaction.cs"];
m4_16 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerWriteOnlyTransaction.cs"];
m4_137 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="249-249", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_138 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="251-253", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_139 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="249-249", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m4_42 [label="Entry HangFire.States.State.SerializeData()", span="27-27", cluster="HangFire.States.State.SerializeData()", file="SqlServerWriteOnlyTransaction.cs"];
m4_140 [label="Entry lambda expression", span="251-253", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_25 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_24 [label="Entry lambda expression", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_26 [label="Exit lambda expression", span="64-66", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_32 [label="Entry lambda expression", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_34 [label="Exit lambda expression", span="71-73", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_40 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_39 [label="Entry lambda expression", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_41 [label="Exit lambda expression", span="83-93", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_49 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_48 [label="Entry lambda expression", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_50 [label="Exit lambda expression", span="102-111", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_56 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_55 [label="Entry lambda expression", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_57 [label="Exit lambda expression", span="120-122", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_62 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_61 [label="Entry lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_63 [label="Exit lambda expression", span="127-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_68 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_67 [label="Entry lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_69 [label="Exit lambda expression", span="134-136", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_74 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_73 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_75 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_80 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_79 [label="Entry lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_81 [label="Exit lambda expression", span="148-150", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_90 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_89 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_91 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_96 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_95 [label="Entry lambda expression", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_97 [label="Exit lambda expression", span="174-176", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_102 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_101 [label="Entry lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_103 [label="Exit lambda expression", span="181-183", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_108 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_107 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_109 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_115 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_114 [label="Entry lambda expression", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_116 [label="Exit lambda expression", span="200-202", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_123 [label="var affectedRows = x.Execute(updateSql, new { key })", span="218-218", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_125 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="222-222", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_122 [label="Entry lambda expression", span="216-224", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_124 [label="affectedRows == 0", span="220-220", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_126 [label="Exit lambda expression", span="216-224", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_133 [label="var affectedRows = x.Execute(updateSql, new { key })", span="240-240", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_135 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="244-244", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_132 [label="Entry lambda expression", span="238-246", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_134 [label="affectedRows == 0", span="242-242", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_136 [label="Exit lambda expression", span="238-246", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_141 [label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="251-253", cluster="lambda expression", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_142 [label="Exit lambda expression", span="251-253", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m4_127 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="227-227", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_128 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="229-234", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_130 [label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="238-246", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_129 [label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="235-236", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_131 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", span="227-227", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_0 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m4_1 [label="connection == null", span="36-36", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m4_3 [label="_connection = connection", span="38-38", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m4_2 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m4_4 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlServerWriteOnlyTransaction.cs"];
m4_117 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="205-205", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_118 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="207-212", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_120 [label="QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="216-224", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_119 [label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="213-214", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m4_121 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", span="205-205", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementValue(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_43 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyTransaction.cs"];
m4_28 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyTransaction.cs"];
m4_51 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_52 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="116-118", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_53 [label="QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="120-122", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_54 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="114-114", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_58 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_59 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="127-129", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_60 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="125-125", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_29 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_30 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="71-73", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_31 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="69-69", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="SqlServerWriteOnlyTransaction.cs"];
m4_6 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m4_7 [label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="41-41", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m4_146 [label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_147 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_148 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_149 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_150 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_151 [label="HangFire.States.State", span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_152 [label=addAndSetStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_153 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_154 [label="HangFire.States.State", span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_155 [label=addStateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_156 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_157 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_158 [label=enqueueJobSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_159 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_160 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_161 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_162 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_163 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_164 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_165 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_166 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_167 [label=double, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_168 [label=addSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_169 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_170 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_171 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_172 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_173 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_174 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_175 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_176 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_177 [label=int, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_178 [label=trimSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_179 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_180 [label=updateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_181 [label=insertSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_182 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_183 [label=updateSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_184 [label=insertSql, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_185 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m4_186 [label="System.TimeSpan", span="", file="SqlServerWriteOnlyTransaction.cs"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_22  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_26  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_18  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_28  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_32  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_30  [key=0, style=bold, color=blue];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_34  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_12  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_36  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_10  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_20  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_14  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_16  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_24  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
m2_4 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m4_82 -> m4_83  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_85  [key=2, style=dotted];
m4_84 -> m4_82  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_23  [key=2, style=dotted];
m4_99 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_100 -> m4_98  [key=0, style=bold, color=blue];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_85 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_85 -> m4_82  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m4_85 -> m4_83  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m4_86 -> m4_86  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_23  [key=2, style=dotted];
m4_87 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_88 -> m4_85  [key=0, style=bold, color=blue];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_23  [key=2, style=dotted];
m4_65 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_66 -> m4_64  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_44 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m4_45 -> m4_45  [key=3, color=darkorchid, style=bold, label="Local variable string addStateSql"];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_23  [key=2, style=dotted];
m4_46 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_47 -> m4_44  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_35 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m4_36 -> m4_36  [key=3, color=darkorchid, style=bold, label="Local variable string addAndSetStateSql"];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_23  [key=2, style=dotted];
m4_37 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_38 -> m4_35  [key=0, style=bold, color=blue];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_110 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m4_111 -> m4_111  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_23  [key=2, style=dotted];
m4_112 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_113 -> m4_110  [key=0, style=bold, color=blue];
m4_23 -> m4_143  [key=0, style=solid];
m4_23 -> m4_21  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_46  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_59  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_65  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_71  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_87  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_93  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_112  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_120  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_130  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_23 -> m4_138  [key=3, color=red, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_145  [key=2, style=dotted];
m4_144 -> m4_23  [key=0, style=bold, color=blue];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_23  [key=2, style=dotted];
m4_77 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_23  [key=2, style=dotted];
m4_71 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_72 -> m4_70  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_23  [key=2, style=dotted];
m4_93 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_94 -> m4_92  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_21 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_22 -> m4_20  [key=0, style=bold, color=blue];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_23  [key=2, style=dotted];
m4_105 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_106 -> m4_104  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_16  [key=2, style=dotted];
m4_9 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_17  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_19  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=0, style=solid];
m4_12 -> m4_11  [key=0, style=solid];
m4_12 -> m4_18  [key=2, style=dotted];
m4_14 -> m4_8  [key=0, style=bold, color=blue];
m4_137 -> m4_138  [key=0, style=solid, color=red];
m4_137 -> m4_141  [key=1, style=dashed, color=red, label=string];
m4_138 -> m4_139  [key=0, style=solid, color=red];
m4_138 -> m4_23  [key=2, style=dotted, color=red];
m4_138 -> m4_140  [key=1, style=dashed, color=red, label="lambda expression"];
m4_139 -> m4_137  [key=0, style=bold, color=blue];
m4_140 -> m4_141  [key=0, style=solid, color=red];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=2, style=dotted];
m4_25 -> m4_28  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_28  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_34 -> m4_32  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [key=2, style=dotted];
m4_40 -> m4_43  [key=2, style=dotted];
m4_40 -> m4_28  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_42  [key=2, style=dotted];
m4_49 -> m4_43  [key=2, style=dotted];
m4_49 -> m4_28  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_50 -> m4_48  [key=0, style=bold, color=blue];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_28  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_57 -> m4_55  [key=0, style=bold, color=blue];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_28  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_63 -> m4_61  [key=0, style=bold, color=blue];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_27  [key=2, style=dotted];
m4_68 -> m4_28  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_69 -> m4_67  [key=0, style=bold, color=blue];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_28  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_75 -> m4_73  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_27  [key=2, style=dotted];
m4_80 -> m4_28  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_28  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_91 -> m4_89  [key=0, style=bold, color=blue];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_28  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_97 -> m4_95  [key=0, style=bold, color=blue];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_28  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_103 -> m4_101  [key=0, style=bold, color=blue];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_28  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_109 -> m4_107  [key=0, style=bold, color=blue];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_28  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_116 -> m4_114  [key=0, style=bold, color=blue];
m4_123 -> m4_124  [key=0, style=solid, color=red];
m4_123 -> m4_28  [key=2, style=dotted, color=red];
m4_125 -> m4_126  [key=0, style=solid, color=red];
m4_125 -> m4_28  [key=2, style=dotted, color=red];
m4_122 -> m4_123  [key=0, style=solid, color=red];
m4_122 -> m4_125  [key=1, style=dashed, color=red, label=SqlConnection];
m4_124 -> m4_125  [key=0, style=solid, color=red];
m4_124 -> m4_126  [key=0, style=solid, color=red];
m4_126 -> m4_122  [key=0, style=bold, color=blue];
m4_133 -> m4_134  [key=0, style=solid, color=red];
m4_133 -> m4_28  [key=2, style=dotted, color=red];
m4_135 -> m4_136  [key=0, style=solid, color=red];
m4_135 -> m4_28  [key=2, style=dotted, color=red];
m4_132 -> m4_133  [key=0, style=solid, color=red];
m4_132 -> m4_135  [key=1, style=dashed, color=red, label=SqlConnection];
m4_134 -> m4_135  [key=0, style=solid, color=red];
m4_134 -> m4_136  [key=0, style=solid, color=red];
m4_136 -> m4_132  [key=0, style=bold, color=blue];
m4_141 -> m4_142  [key=0, style=solid, color=red];
m4_141 -> m4_27  [key=2, style=dotted, color=red];
m4_141 -> m4_28  [key=2, style=dotted, color=red];
m4_142 -> m4_140  [key=0, style=bold, color=blue];
m4_127 -> m4_128  [key=0, style=solid, color=red];
m4_127 -> m4_130  [key=1, style=dashed, color=red, label=string];
m4_127 -> m4_133  [key=1, style=dashed, color=red, label=string];
m4_127 -> m4_135  [key=1, style=dashed, color=red, label=string];
m4_128 -> m4_129  [key=0, style=solid, color=red];
m4_128 -> m4_130  [key=1, style=dashed, color=red, label=insertSql];
m4_128 -> m4_135  [key=1, style=dashed, color=red, label=insertSql];
m4_128 -> m4_118  [key=3, color=red, style=bold, label="Local variable string insertSql"];
m4_130 -> m4_131  [key=0, style=solid, color=red];
m4_130 -> m4_23  [key=2, style=dotted, color=red];
m4_130 -> m4_132  [key=1, style=dashed, color=red, label="lambda expression"];
m4_129 -> m4_130  [key=0, style=solid, color=red];
m4_129 -> m4_133  [key=1, style=dashed, color=red, label=updateSql];
m4_129 -> m4_135  [key=1, style=dashed, color=red, label=updateSql];
m4_129 -> m4_129  [key=3, color=red, style=bold, label="Local variable string updateSql"];
m4_131 -> m4_127  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_2 -> m4_4  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_117 -> m4_118  [key=0, style=solid, color=red];
m4_117 -> m4_120  [key=1, style=dashed, color=red, label=string];
m4_117 -> m4_123  [key=1, style=dashed, color=red, label=string];
m4_117 -> m4_125  [key=1, style=dashed, color=red, label=string];
m4_118 -> m4_119  [key=0, style=solid, color=red];
m4_118 -> m4_120  [key=1, style=dashed, color=red, label=insertSql];
m4_118 -> m4_125  [key=1, style=dashed, color=red, label=insertSql];
m4_118 -> m4_118  [key=3, color=red, style=bold, label="Local variable string insertSql"];
m4_120 -> m4_121  [key=0, style=solid, color=red];
m4_120 -> m4_23  [key=2, style=dotted, color=red];
m4_120 -> m4_122  [key=1, style=dashed, color=red, label="lambda expression"];
m4_119 -> m4_120  [key=0, style=solid, color=red];
m4_119 -> m4_123  [key=1, style=dashed, color=red, label=updateSql];
m4_119 -> m4_125  [key=1, style=dashed, color=red, label=updateSql];
m4_119 -> m4_119  [key=3, color=red, style=bold, label="Local variable string updateSql"];
m4_121 -> m4_117  [key=0, style=bold, color=blue];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_51 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m4_52 -> m4_52  [key=3, color=darkorchid, style=bold, label="Local variable string enqueueJobSql"];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_23  [key=2, style=dotted];
m4_53 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_54 -> m4_51  [key=0, style=bold, color=blue];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_23  [key=2, style=dotted];
m4_59 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_60 -> m4_58  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_23  [key=2, style=dotted];
m4_30 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_31 -> m4_29  [key=0, style=bold, color=blue];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_6  [key=0, style=bold, color=blue];
m4_146 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_120  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_130  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_138  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_146 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m4_147 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_148 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_149 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_150 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_151 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_152 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m4_153 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_154 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m4_155 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m4_156 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_157 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_158 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m4_159 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_160 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_161 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_162 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_163 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_164 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_165 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_166 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_167 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=double];
m4_168 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m4_169 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_170 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_171 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_172 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_173 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_174 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_175 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_176 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_177 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_178 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m4_179 -> m4_123  [key=1, style=dashed, color=red, label=string];
m4_179 -> m4_125  [key=1, style=dashed, color=red, label=string];
m4_180 -> m4_123  [key=1, style=dashed, color=red, label=updateSql];
m4_180 -> m4_125  [key=1, style=dashed, color=red, label=updateSql];
m4_181 -> m4_125  [key=1, style=dashed, color=red, label=insertSql];
m4_182 -> m4_133  [key=1, style=dashed, color=red, label=string];
m4_182 -> m4_135  [key=1, style=dashed, color=red, label=string];
m4_183 -> m4_133  [key=1, style=dashed, color=red, label=updateSql];
m4_183 -> m4_135  [key=1, style=dashed, color=red, label=updateSql];
m4_184 -> m4_135  [key=1, style=dashed, color=red, label=insertSql];
m4_185 -> m4_141  [key=1, style=dashed, color=red, label=string];
m4_186 -> m4_141  [key=1, style=dashed, color=red, label="System.TimeSpan"];
}
