digraph  {
n12 [label="HangFire.Tests.JobInvokerTests.CorrectJob", span=""];
n13 [label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span=""];
n14 [label="HangFire.Tests.JobInvokerTests.DisposableJob", span=""];
n0 [label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()"];
n1 [label="Performed = true", span="185-185", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()"];
n2 [label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()"];
n3 [label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)"];
n4 [label="A = a", span="196-196", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)"];
n5 [label="B = b", span="197-197", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)"];
n6 [label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)"];
n7 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()"];
n8 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()"];
n9 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()"];
n10 [label="Disposed = true", span="211-211", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()"];
n11 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()"];
m1_123 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_128 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="260-263", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_126 [label="toScore < fromScore", span="258-258", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_124 [label="key == null", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_127 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="258-258", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_125 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_129 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerMonitoringApi.cs"];
m1_2 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_7 [label="_connection = connection", span="53-53", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_8 [label="_isolationLevel = isolationLevel", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_9 [label="_queueProviders = queueProviders", span="55-55", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_10 [label="OwnsConnection = ownsConnection", span="57-57", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_5 [label="queueProviders == null", span="51-51", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_3 [label="connection == null", span="50-50", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_6 [label="throw new ArgumentNullException(''queueProviders'');", span="51-51", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_4 [label="throw new ArgumentNullException(''connection'');", span="50-50", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_11 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="SqlServerMonitoringApi.cs"];
m1_219 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_223 [label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="424-424", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_222 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.Hash\r\nwhere [Key] = @key''", span="420-422", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_224 [label="!result.HasValue", span="425-425", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_226 [label="return result.Value - DateTime.UtcNow;", span="427-427", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_220 [label="key == null", span="418-418", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_225 [label="return TimeSpan.FromSeconds(-1);", span="425-425", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_221 [label="throw new ArgumentNullException(''key'');", span="418-418", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_227 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerMonitoringApi.cs"];
m1_88 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerMonitoringApi.cs"];
m1_157 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_163 [label="_connection.Execute(\r\n                @''merge HangFire.Server with (holdlock) as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="313-319", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_162 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="306-311", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_158 [label="serverId == null", span="303-303", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_160 [label="context == null", span="304-304", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_159 [label="throw new ArgumentNullException(''serverId'');", span="303-303", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_161 [label="throw new ArgumentNullException(''context'');", span="304-304", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_164 [label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerMonitoringApi.cs"];
m1_27 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_30 [label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="88-91", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m1_28 [label="queues == null || queues.Length == 0", span="86-86", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_31 [label="providers.Length != 1", span="93-93", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_33 [label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="100-100", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_32 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="95-97", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_34 [label="return persistentQueue.Dequeue(queues, cancellationToken);", span="101-101", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_29 [label="throw new ArgumentNullException(''queues'');", span="86-86", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_35 [label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerMonitoringApi.cs"];
m1_46 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerMonitoringApi.cs"];
m1_242 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_249 [label="return result.Value - DateTime.UtcNow;", span="464-464", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m1_246 [label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="461-461", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_247 [label="!result.HasValue", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_245 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.List\r\nwhere [Key] = @key''", span="457-459", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_248 [label="return TimeSpan.FromSeconds(-1);", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_244 [label="throw new ArgumentNullException(''key'');", span="455-455", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_243 [label="key == null", span="455-455", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_250 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_13 [label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerMonitoringApi.cs"];
m1_14 [label=OwnsConnection, span="65-65", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerMonitoringApi.cs"];
m1_15 [label="_connection.Dispose()", span="67-67", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerMonitoringApi.cs"];
m1_16 [label="Exit Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerMonitoringApi.cs"];
m1_171 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerMonitoringApi.cs"];
m1_174 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="335-337", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerMonitoringApi.cs"];
m1_172 [label="serverId == null", span="333-333", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerMonitoringApi.cs"];
m1_173 [label="throw new ArgumentNullException(''serverId'');", span="333-333", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerMonitoringApi.cs"];
m1_175 [label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerMonitoringApi.cs"];
m1_190 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_194 [label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="372-374", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_193 [label="var query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num \r\n	from Hangfire.[Set]\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="365-370", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_191 [label="key == null", span="363-363", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_192 [label="throw new ArgumentNullException(''key'');", span="363-363", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_195 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_257 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerMonitoringApi.cs"];
m1_261 [label="return _connection.Query<string>(query, new { key = key }).ToList();", span="492-492", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerMonitoringApi.cs"];
m1_260 [label="string query = @''\r\nselect [Value] from Hangfire.List\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="487-490", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerMonitoringApi.cs"];
m1_258 [label="key == null", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerMonitoringApi.cs"];
m1_259 [label="throw new ArgumentNullException(''key'');", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerMonitoringApi.cs"];
m1_262 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerMonitoringApi.cs"];
m1_213 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerMonitoringApi.cs"];
m1_217 [label="return _connection.Query<long>(query, new { key = key }).Single();", span="413-413", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerMonitoringApi.cs"];
m1_216 [label="string query = @''\r\nselect count([Id]) from HangFire.Hash\r\nwhere [Key] = @key''", span="409-411", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerMonitoringApi.cs"];
m1_214 [label="key == null", span="407-407", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerMonitoringApi.cs"];
m1_215 [label="throw new ArgumentNullException(''key'');", span="407-407", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerMonitoringApi.cs"];
m1_218 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerMonitoringApi.cs"];
m1_150 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerMonitoringApi.cs"];
m1_101 [label="Entry Hangfire.Storage.StateData.StateData()", span="21-21", cluster="Hangfire.Storage.StateData.StateData()", file="SqlServerMonitoringApi.cs"];
m1_165 [label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerMonitoringApi.cs"];
m1_26 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerMonitoringApi.cs"];
m1_21 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerMonitoringApi.cs"];
m1_71 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_74 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where Id = @id''", span="158-159", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m1_72 [label="id == null", span="156-156", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_75 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="161-162", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_73 [label="throw new ArgumentNullException(''id'');", span="156-156", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_76 [label="jobData == null", span="164-164", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_78 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="167-167", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_79 [label="invocationData.Arguments = jobData.Arguments", span="168-168", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_85 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="182-188", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_77 [label="return null;", span="164-164", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_82 [label="job = invocationData.Deserialize()", span="175-175", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_80 [label="Job job = null", span="170-170", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_84 [label="loadException = ex", span="179-179", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_81 [label="JobLoadException loadException = null", span="171-171", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_83 [label=JobLoadException, span="177-177", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_86 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerMonitoringApi.cs"];
m1_144 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerMonitoringApi.cs"];
m1_147 [label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="293-296", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerMonitoringApi.cs"];
m1_145 [label="key == null", span="291-291", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerMonitoringApi.cs"];
m1_148 [label="return result.Count != 0 ? result : null;", span="298-298", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerMonitoringApi.cs"];
m1_146 [label="throw new ArgumentNullException(''key'');", span="291-291", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerMonitoringApi.cs"];
m1_149 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerMonitoringApi.cs"];
m1_22 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_23 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="78-81", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_24 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_67 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerMonitoringApi.cs"];
m1_183 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="SqlServerMonitoringApi.cs"];
m1_102 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_107 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter with (holdlock) as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="224-230", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_105 [label="name == null", span="222-222", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_103 [label="id == null", span="221-221", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_106 [label="throw new ArgumentNullException(''name'');", span="222-222", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_104 [label="throw new ArgumentNullException(''id'');", span="221-221", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_108 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerMonitoringApi.cs"];
m1_130 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerMonitoringApi.cs"];
m1_40 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="SqlServerMonitoringApi.cs"];
m1_206 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerMonitoringApi.cs"];
m1_64 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerMonitoringApi.cs"];
m1_197 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_201 [label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="385-385", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_200 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.[Set]\r\nwhere [Key] = @key''", span="381-383", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_202 [label="!result.HasValue", span="386-386", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_204 [label="return result.Value - DateTime.UtcNow;", span="388-388", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_198 [label="key == null", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_203 [label="return TimeSpan.FromSeconds(-1);", span="386-386", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_199 [label="throw new ArgumentNullException(''key'');", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_205 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerMonitoringApi.cs"];
m1_207 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerMonitoringApi.cs"];
m1_211 [label="return _connection.Query<long?>(query, new { key = key }).Single() ?? 0;", span="402-402", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerMonitoringApi.cs"];
m1_210 [label="string query = @''\r\nselect sum(s.[Value]) from (select sum([Value]) as [Value] from HangFire.Counter\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from HangFire.AggregatedCounter\r\nwhere [Key] = @key) as s''", span="395-400", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerMonitoringApi.cs"];
m1_208 [label="key == null", span="393-393", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerMonitoringApi.cs"];
m1_209 [label="throw new ArgumentNullException(''key'');", span="393-393", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerMonitoringApi.cs"];
m1_212 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerMonitoringApi.cs"];
m1_38 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SqlServerMonitoringApi.cs"];
m1_142 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerMonitoringApi.cs"];
m1_69 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerMonitoringApi.cs"];
m1_109 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_114 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="238-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_112 [label="name == null", span="236-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_110 [label="id == null", span="235-235", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_113 [label="throw new ArgumentNullException(''name'');", span="236-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_111 [label="throw new ArgumentNullException(''id'');", span="235-235", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_115 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerMonitoringApi.cs"];
m1_166 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerMonitoringApi.cs"];
m1_169 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="326-328", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerMonitoringApi.cs"];
m1_167 [label="serverId == null", span="324-324", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerMonitoringApi.cs"];
m1_168 [label="throw new ArgumentNullException(''serverId'');", span="324-324", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerMonitoringApi.cs"];
m1_170 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerMonitoringApi.cs"];
m1_25 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr", file="SqlServerMonitoringApi.cs"];
m1_66 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_39 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerMonitoringApi.cs"];
m1_100 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="SqlServerMonitoringApi.cs"];
m1_143 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerMonitoringApi.cs"];
m1_90 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_93 [label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="195-199", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m1_91 [label="jobId == null", span="193-193", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_94 [label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="201-201", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_92 [label="throw new ArgumentNullException(''jobId'');", span="193-193", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_95 [label="sqlState == null", span="202-202", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_97 [label="var data = new Dictionary<string, string>(\r\n                JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                StringComparer.OrdinalIgnoreCase)", span="207-209", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_98 [label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = data\r\n            };", span="211-216", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_96 [label="return null;", span="204-204", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_99 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerMonitoringApi.cs"];
m1_251 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_255 [label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="478-480", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_254 [label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from Hangfire.List\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="471-476", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_252 [label="key == null", span="469-469", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_253 [label="throw new ArgumentNullException(''key'');", span="469-469", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_256 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerMonitoringApi.cs"];
m1_17 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerMonitoringApi.cs"];
m1_181 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerMonitoringApi.cs"];
m1_47 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_54 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="120-128", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_61 [label="_connection.Execute(insertParameterSql, parameterArray)", span="148-148", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_53 [label="var invocationData = InvocationData.Serialize(job)", span="118-118", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_52 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="113-116", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_55 [label="parameters.Count > 0", span="130-130", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_59 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="136-141", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_62 [label="return jobId;", span="151-151", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_56 [label="var parameterArray = new object[parameters.Count]", span="132-132", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_60 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="144-146", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_48 [label="job == null", span="110-110", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_50 [label="parameters == null", span="111-111", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_58 [label=parameters, span="134-134", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_57 [label="int parameterIndex = 0", span="133-133", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_49 [label="throw new ArgumentNullException(''job'');", span="110-110", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_51 [label="throw new ArgumentNullException(''parameters'');", span="111-111", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_63 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_65 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerMonitoringApi.cs"];
m1_131 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_139 [label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="282-282", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_138 [label=keyValuePairs, span="280-280", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_136 [label="string sql = @''\r\nmerge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="271-276", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_132 [label="key == null", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_134 [label="keyValuePairs == null", span="269-269", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_137 [label="var transaction = new TransactionScope()", span="278-278", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_140 [label="transaction.Complete()", span="285-285", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_133 [label="throw new ArgumentNullException(''key'');", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_135 [label="throw new ArgumentNullException(''keyValuePairs'');", span="269-269", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_141 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerMonitoringApi.cs"];
m1_154 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_43 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_44 [label="_queueProviders.GetProvider(queue)", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_45 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_151 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_153 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_152 [label="x.Field", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_155 [label="x.Value", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_156 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="SqlServerMonitoringApi.cs"];
m1_37 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="SqlServerMonitoringApi.cs"];
m1_228 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_234 [label="return _connection.Query<string>(query, new { key = key, field = name }).SingleOrDefault();", span="439-439", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_233 [label="string query = @''\r\nselect [Value] from HangFire.Hash\r\nwhere [Key] = @key and [Field] = @field''", span="435-437", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_229 [label="key == null", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_231 [label="name == null", span="433-433", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_230 [label="throw new ArgumentNullException(''key'');", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_232 [label="throw new ArgumentNullException(''name'');", span="433-433", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_235 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerMonitoringApi.cs"];
m1_189 [label="Entry Unk.First", span="", cluster="Unk.First", file="SqlServerMonitoringApi.cs"];
m1_18 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerMonitoringApi.cs"];
m1_19 [label="return new SqlServerWriteOnlyTransaction(_connection, _isolationLevel, _queueProviders);", span="73-73", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerMonitoringApi.cs"];
m1_20 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerMonitoringApi.cs"];
m1_42 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="SqlServerMonitoringApi.cs"];
m1_36 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerMonitoringApi.cs"];
m1_89 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()", file="SqlServerMonitoringApi.cs"];
m1_184 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerMonitoringApi.cs"];
m1_187 [label="return _connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First();", span="356-358", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerMonitoringApi.cs"];
m1_185 [label="key == null", span="354-354", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerMonitoringApi.cs"];
m1_186 [label="throw new ArgumentNullException(''key'');", span="354-354", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerMonitoringApi.cs"];
m1_188 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerMonitoringApi.cs"];
m1_68 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerMonitoringApi.cs"];
m1_182 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerMonitoringApi.cs"];
m1_196 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="SqlServerMonitoringApi.cs"];
m1_70 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerMonitoringApi.cs"];
m1_41 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="SqlServerMonitoringApi.cs"];
m1_122 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="SqlServerMonitoringApi.cs"];
m1_116 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerMonitoringApi.cs"];
m1_119 [label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="248-250", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerMonitoringApi.cs"];
m1_117 [label="key == null", span="246-246", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerMonitoringApi.cs"];
m1_120 [label="return new HashSet<string>(result);", span="252-252", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerMonitoringApi.cs"];
m1_118 [label="throw new ArgumentNullException(''key'');", span="246-246", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerMonitoringApi.cs"];
m1_121 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerMonitoringApi.cs"];
m1_236 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerMonitoringApi.cs"];
m1_240 [label="return _connection.Query<long>(query, new { key = key }).Single();", span="450-450", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerMonitoringApi.cs"];
m1_239 [label="string query = @''\r\nselect count([Id]) from HangFire.List\r\nwhere [Key] = @key''", span="446-448", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerMonitoringApi.cs"];
m1_237 [label="key == null", span="444-444", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerMonitoringApi.cs"];
m1_238 [label="throw new ArgumentNullException(''key'');", span="444-444", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerMonitoringApi.cs"];
m1_241 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerMonitoringApi.cs"];
m1_87 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerMonitoringApi.cs"];
m1_176 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_179 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="347-349", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_177 [label="timeOut.Duration() != timeOut", span="342-342", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_178 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="344-344", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_180 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerMonitoringApi.cs"];
m1_263 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="SqlServerMonitoringApi.cs"];
n12 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.CorrectJob"];
n13 -> n4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
n13 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
n14 -> n10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.DisposableJob"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=1, style=dashed, color=darkseagreen4, label=string];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n3  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n8 -> n7  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n11 -> n9  [key=0, style=bold, color=blue];
m1_123 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=double];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_67  [key=2, style=dotted];
m1_128 -> m1_87  [key=2, style=dotted];
m1_126 -> m1_128  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_124 -> m1_126  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_127 -> m1_129  [key=0, style=solid];
m1_127 -> m1_130  [key=2, style=dotted];
m1_125 -> m1_129  [key=0, style=solid];
m1_125 -> m1_12  [key=2, style=dotted];
m1_129 -> m1_123  [key=0, style=bold, color=blue];
m1_2 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m1_2 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=IsolationLevel];
m1_2 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m1_2 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_6 -> m1_11  [key=0, style=solid];
m1_6 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_11  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_11 -> m1_2  [key=0, style=bold, color=blue];
m1_219 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_219 -> m1_220  [key=0, style=solid];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_67  [key=2, style=dotted];
m1_223 -> m1_68  [key=2, style=dotted];
m1_223 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_222 -> m1_223  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_226  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_220 -> m1_222  [key=0, style=solid];
m1_220 -> m1_221  [key=0, style=solid];
m1_225 -> m1_206  [key=2, style=dotted];
m1_225 -> m1_227  [key=0, style=solid];
m1_221 -> m1_12  [key=2, style=dotted];
m1_221 -> m1_227  [key=0, style=solid];
m1_227 -> m1_219  [key=0, style=bold, color=blue];
m1_157 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m1_157 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_65  [key=2, style=dotted];
m1_163 -> m1_70  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_165  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_160  [key=0, style=solid];
m1_160 -> m1_162  [key=0, style=solid];
m1_160 -> m1_161  [key=0, style=solid];
m1_159 -> m1_164  [key=0, style=solid];
m1_159 -> m1_12  [key=2, style=dotted];
m1_161 -> m1_164  [key=0, style=solid];
m1_161 -> m1_12  [key=2, style=dotted];
m1_164 -> m1_157  [key=0, style=bold, color=blue];
m1_27 -> m1_30  [key=1, style=dashed, color=green, label="string[]"];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_27 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_30 -> m1_31  [key=0, style=solid, color=green];
m1_30 -> m1_36  [key=2, style=dotted, color=green];
m1_30 -> m1_37  [key=2, style=dotted, color=green];
m1_30 -> m1_38  [key=2, style=dotted, color=green];
m1_30 -> m1_43  [key=1, style=dashed, color=green, label="lambda expression"];
m1_30 -> m1_33  [key=1, style=dashed, color=green, label=providers];
m1_28 -> m1_30  [key=0, style=solid, color=green];
m1_28 -> m1_29  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_41  [key=2, style=dotted];
m1_32 -> m1_35  [key=0, style=solid];
m1_32 -> m1_39  [key=2, style=dotted];
m1_32 -> m1_40  [key=2, style=dotted];
m1_32 -> m1_26  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_42  [key=2, style=dotted];
m1_29 -> m1_35  [key=0, style=solid];
m1_29 -> m1_12  [key=2, style=dotted];
m1_35 -> m1_27  [key=0, style=bold, color=blue];
m1_242 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_242 -> m1_243  [key=0, style=solid];
m1_249 -> m1_250  [key=0, style=solid, color=green];
m1_246 -> m1_249  [key=1, style=dashed, color=green, label=result];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_67  [key=2, style=dotted];
m1_246 -> m1_68  [key=2, style=dotted];
m1_247 -> m1_249  [key=0, style=solid, color=green];
m1_247 -> m1_248  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_248 -> m1_250  [key=0, style=solid];
m1_248 -> m1_206  [key=2, style=dotted];
m1_244 -> m1_250  [key=0, style=solid];
m1_244 -> m1_12  [key=2, style=dotted];
m1_243 -> m1_245  [key=0, style=solid];
m1_243 -> m1_244  [key=0, style=solid];
m1_250 -> m1_242  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=2, style=dotted];
m1_16 -> m1_13  [key=0, style=bold, color=blue];
m1_171 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_171 -> m1_172  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_70  [key=2, style=dotted];
m1_172 -> m1_174  [key=0, style=solid];
m1_172 -> m1_173  [key=0, style=solid];
m1_173 -> m1_175  [key=0, style=solid];
m1_173 -> m1_12  [key=2, style=dotted];
m1_175 -> m1_171  [key=0, style=bold, color=blue];
m1_190 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_190 -> m1_191  [key=0, style=solid];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_67  [key=2, style=dotted];
m1_194 -> m1_196  [key=2, style=dotted];
m1_193 -> m1_194  [key=0, style=solid];
m1_191 -> m1_193  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_195  [key=0, style=solid];
m1_192 -> m1_12  [key=2, style=dotted];
m1_195 -> m1_190  [key=0, style=bold, color=blue];
m1_257 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_257 -> m1_258  [key=0, style=solid];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_67  [key=2, style=dotted];
m1_261 -> m1_196  [key=2, style=dotted];
m1_260 -> m1_261  [key=0, style=solid];
m1_258 -> m1_260  [key=0, style=solid];
m1_258 -> m1_259  [key=0, style=solid];
m1_259 -> m1_262  [key=0, style=solid];
m1_259 -> m1_12  [key=2, style=dotted];
m1_262 -> m1_257  [key=0, style=bold, color=blue];
m1_213 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_213 -> m1_214  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_67  [key=2, style=dotted];
m1_217 -> m1_68  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_214 -> m1_216  [key=0, style=solid];
m1_214 -> m1_215  [key=0, style=solid];
m1_215 -> m1_218  [key=0, style=solid];
m1_215 -> m1_12  [key=2, style=dotted];
m1_218 -> m1_213  [key=0, style=bold, color=blue];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_74 -> m1_75  [key=0, style=solid, color=green];
m1_72 -> m1_74  [key=0, style=solid, color=green];
m1_72 -> m1_73  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_67  [key=2, style=dotted];
m1_75 -> m1_87  [key=2, style=dotted];
m1_75 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m1_75 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m1_75 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m1_73 -> m1_86  [key=0, style=solid];
m1_73 -> m1_12  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_78 -> m1_67  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m1_79 -> m1_80  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_89  [key=2, style=dotted];
m1_77 -> m1_86  [key=0, style=solid];
m1_82 -> m1_85  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_88  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_83 -> m1_84  [key=0, style=solid];
m1_86 -> m1_71  [key=0, style=bold, color=blue];
m1_144 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_144 -> m1_145  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_67  [key=2, style=dotted];
m1_147 -> m1_150  [key=2, style=dotted];
m1_147 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_147 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_145 -> m1_147  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_146 -> m1_12  [key=2, style=dotted];
m1_146 -> m1_149  [key=0, style=solid];
m1_149 -> m1_144  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_26  [key=2, style=dotted];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_102 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_70  [key=2, style=dotted];
m1_105 -> m1_107  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_103 -> m1_105  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_106 -> m1_108  [key=0, style=solid];
m1_106 -> m1_12  [key=2, style=dotted];
m1_104 -> m1_108  [key=0, style=solid];
m1_104 -> m1_12  [key=2, style=dotted];
m1_108 -> m1_102  [key=0, style=bold, color=blue];
m1_197 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_197 -> m1_198  [key=0, style=solid];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_67  [key=2, style=dotted];
m1_201 -> m1_68  [key=2, style=dotted];
m1_201 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_200 -> m1_201  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_204  [key=0, style=solid];
m1_204 -> m1_205  [key=0, style=solid];
m1_198 -> m1_200  [key=0, style=solid];
m1_198 -> m1_199  [key=0, style=solid];
m1_203 -> m1_206  [key=2, style=dotted];
m1_203 -> m1_205  [key=0, style=solid];
m1_199 -> m1_12  [key=2, style=dotted];
m1_199 -> m1_205  [key=0, style=solid];
m1_205 -> m1_197  [key=0, style=bold, color=blue];
m1_207 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_207 -> m1_208  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_67  [key=2, style=dotted];
m1_211 -> m1_68  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_208 -> m1_210  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_209 -> m1_212  [key=0, style=solid];
m1_209 -> m1_12  [key=2, style=dotted];
m1_212 -> m1_207  [key=0, style=bold, color=blue];
m1_109 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_67  [key=2, style=dotted];
m1_114 -> m1_87  [key=2, style=dotted];
m1_112 -> m1_114  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_113 -> m1_115  [key=0, style=solid];
m1_113 -> m1_12  [key=2, style=dotted];
m1_111 -> m1_115  [key=0, style=solid];
m1_111 -> m1_12  [key=2, style=dotted];
m1_115 -> m1_109  [key=0, style=bold, color=blue];
m1_166 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_166 -> m1_167  [key=0, style=solid];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_70  [key=2, style=dotted];
m1_167 -> m1_169  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_168 -> m1_170  [key=0, style=solid];
m1_168 -> m1_12  [key=2, style=dotted];
m1_170 -> m1_166  [key=0, style=bold, color=blue];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_93 -> m1_94  [key=0, style=solid, color=green];
m1_91 -> m1_93  [key=0, style=solid, color=green];
m1_91 -> m1_92  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_67  [key=2, style=dotted];
m1_94 -> m1_87  [key=2, style=dotted];
m1_94 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m1_94 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
m1_92 -> m1_99  [key=0, style=solid];
m1_92 -> m1_12  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_97  [key=0, style=solid];
m1_97 -> m1_67  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_100  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_101  [key=2, style=dotted];
m1_96 -> m1_99  [key=0, style=solid];
m1_99 -> m1_90  [key=0, style=bold, color=blue];
m1_251 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_251 -> m1_252  [key=0, style=solid];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_67  [key=2, style=dotted];
m1_255 -> m1_196  [key=2, style=dotted];
m1_254 -> m1_255  [key=0, style=solid];
m1_252 -> m1_254  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_253 -> m1_256  [key=0, style=solid];
m1_253 -> m1_12  [key=2, style=dotted];
m1_256 -> m1_251  [key=0, style=bold, color=blue];
m1_47 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_47 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m1_47 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_47 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_47 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_65  [key=2, style=dotted];
m1_54 -> m1_66  [key=2, style=dotted];
m1_54 -> m1_67  [key=2, style=dotted];
m1_54 -> m1_68  [key=2, style=dotted];
m1_54 -> m1_69  [key=2, style=dotted];
m1_54 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_54 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_70  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_64  [key=2, style=dotted];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m1_52 -> m1_53  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_62  [key=0, style=solid];
m1_59 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m1_59 -> m1_58  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_56 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m1_56 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m1_56 -> m1_57  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_50  [key=0, style=solid];
m1_50 -> m1_52  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=0, style=solid];
m1_57 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m1_57 -> m1_58  [key=0, style=solid];
m1_49 -> m1_12  [key=2, style=dotted];
m1_49 -> m1_63  [key=0, style=solid];
m1_51 -> m1_12  [key=2, style=dotted];
m1_51 -> m1_63  [key=0, style=solid];
m1_63 -> m1_47  [key=0, style=bold, color=blue];
m1_131 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m1_131 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m1_139 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
m1_139 -> m1_138  [key=0, style=solid];
m1_139 -> m1_70  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_140  [key=0, style=solid];
m1_136 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=sql];
m1_136 -> m1_137  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_134  [key=0, style=solid];
m1_134 -> m1_136  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_142  [key=2, style=dotted];
m1_137 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_143  [key=2, style=dotted];
m1_133 -> m1_12  [key=2, style=dotted];
m1_133 -> m1_141  [key=0, style=solid];
m1_135 -> m1_12  [key=2, style=dotted];
m1_135 -> m1_141  [key=0, style=solid];
m1_141 -> m1_131  [key=0, style=bold, color=blue];
m1_154 -> m1_155  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_45 -> m1_43  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_153 -> m1_151  [key=0, style=bold, color=blue];
m1_152 -> m1_153  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_156 -> m1_154  [key=0, style=bold, color=blue];
m1_228 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_67  [key=2, style=dotted];
m1_234 -> m1_87  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_231  [key=0, style=solid];
m1_231 -> m1_233  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_230 -> m1_235  [key=0, style=solid];
m1_230 -> m1_12  [key=2, style=dotted];
m1_232 -> m1_235  [key=0, style=solid];
m1_232 -> m1_12  [key=2, style=dotted];
m1_235 -> m1_228  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_184 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_184 -> m1_185  [key=0, style=solid];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_67  [key=2, style=dotted];
m1_187 -> m1_189  [key=2, style=dotted];
m1_185 -> m1_187  [key=0, style=solid];
m1_185 -> m1_186  [key=0, style=solid];
m1_186 -> m1_188  [key=0, style=solid];
m1_186 -> m1_12  [key=2, style=dotted];
m1_188 -> m1_184  [key=0, style=bold, color=blue];
m1_116 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_116 -> m1_117  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_67  [key=2, style=dotted];
m1_117 -> m1_119  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=2, style=dotted];
m1_118 -> m1_12  [key=2, style=dotted];
m1_118 -> m1_121  [key=0, style=solid];
m1_121 -> m1_116  [key=0, style=bold, color=blue];
m1_236 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_236 -> m1_237  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_67  [key=2, style=dotted];
m1_240 -> m1_68  [key=2, style=dotted];
m1_239 -> m1_240  [key=0, style=solid];
m1_237 -> m1_239  [key=0, style=solid];
m1_237 -> m1_238  [key=0, style=solid];
m1_238 -> m1_241  [key=0, style=solid];
m1_238 -> m1_12  [key=2, style=dotted];
m1_241 -> m1_236  [key=0, style=bold, color=blue];
m1_176 -> m1_177  [key=0, style=solid];
m1_179 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_183  [key=2, style=dotted];
m1_179 -> m1_66  [key=2, style=dotted];
m1_179 -> m1_70  [key=2, style=dotted];
m1_177 -> m1_179  [key=0, style=solid];
m1_177 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_181  [key=2, style=dotted];
m1_178 -> m1_180  [key=0, style=solid];
m1_178 -> m1_182  [key=2, style=dotted];
m1_180 -> m1_176  [key=0, style=bold, color=blue];
m1_263 -> m1_30  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_217  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m1_263 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
}
