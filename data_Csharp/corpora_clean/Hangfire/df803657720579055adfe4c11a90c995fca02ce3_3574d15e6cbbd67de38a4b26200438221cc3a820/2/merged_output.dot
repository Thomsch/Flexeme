digraph  {
n66 [label="Hangfire.BackgroundJobServer", span=""];
n0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="34-34"];
n1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="34-34"];
n2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="44-44"];
n3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="44-44"];
n4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="54-54"];
n5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="54-54"];
n6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="65-65"];
n7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="65-65"];
n8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="70-70"];
n9 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage == null", span="75-75"];
n11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="options == null", span="76-76"];
n13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="additionalProcesses == null", span="77-77"];
n16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(GetProcesses(options))", span="80-80"];
n17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(storage.GetComponents())", span="81-81"];
n18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="processes.AddRange(additionalProcesses)", span="82-82"];
n19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var properties = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="84-88"];
n21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="91-91"];
n22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="storage.WriteOptionsToLog(Logger)", span="93-93"];
n23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="options.WriteToLog(Logger)", span="94-94"];
n24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", color=red, community=1, label="0: _server = new BackgroundProcessServer(storage, processes, properties)\r\n            {\r\n                ShutdownTimeout = options.ShutdownTimeout\r\n            }", span="96-99"];
n10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(''storage'');", span="75-75"];
n12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(''options'');", span="76-76"];
n14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="throw new ArgumentNullException(''additionalProcesses'');", span="77-77"];
n15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="var processes = new List<IServerProcess>()", span="79-79"];
n27 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n28 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", span="108-108"];
n29 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n30 [cluster="Hangfire.JobStorage.GetComponents()", label="Entry Hangfire.JobStorage.GetComponents()", span="58-58"];
n20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Logger.Info(''Starting Hangfire Server'')", span="90-90"];
n31 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n32 [cluster="Hangfire.Logging.ILog.Info(string)", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
n33 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
n34 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
n35 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71"];
n25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="70-70"];
n26 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n36 [cluster="Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", label="Entry Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", span="38-38"];
n37 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="102-102"];
n38 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="_server.Dispose()", span="104-104"];
n39 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Logger.Info(''Hangfire Server stopped.'')", span="105-105"];
n41 [cluster="Hangfire.Server.BackgroundProcessServer.Dispose()", label="Entry Hangfire.Server.BackgroundProcessServer.Dispose()", span="60-60"];
n40 [cluster="Hangfire.BackgroundJobServer.Dispose()", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="102-102"];
n42 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="options == null", span="110-110"];
n46 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="i < options.WorkerCount", span="114-114"];
n47 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="processes.Add(new Worker(new WorkerContext(options.Queues, i + 1)))", span="116-116"];
n50 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="processes.Add(new SchedulePoller(options.SchedulePollingInterval))", span="120-120"];
n51 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="processes.Add(new ServerWatchdog(options.ServerWatchdogOptions))", span="121-121"];
n43 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="throw new ArgumentNullException(''options'');", span="110-110"];
n44 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="var processes = new List<IServerProcess>()", span="112-112"];
n45 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="var i = 0", span="114-114"];
n49 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="processes.Add(new ServerHeartbeat())", span="119-119"];
n52 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="processes.Add(new RecurringJobScheduler())", span="122-122"];
n53 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="return processes;", span="124-124"];
n48 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="i++", span="114-114"];
n55 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="35-35"];
n56 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", label="Entry Hangfire.Server.WorkerContext.WorkerContext(string[], int)", span="27-27"];
n57 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n58 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="20-20"];
n59 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32"];
n60 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27"];
n61 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39"];
n54 [cluster="Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", label="Exit Hangfire.BackgroundJobServer.GetProcesses(Hangfire.BackgroundJobServerOptions)", span="108-108"];
n62 [cluster="Hangfire.BackgroundJobServer.Start()", label="Entry Hangfire.BackgroundJobServer.Start()", span="128-128"];
n63 [cluster="Hangfire.BackgroundJobServer.Start()", label="Exit Hangfire.BackgroundJobServer.Start()", span="128-128"];
n64 [cluster="Hangfire.BackgroundJobServer.Stop()", label="Entry Hangfire.BackgroundJobServer.Stop()", span="133-133"];
n65 [cluster="Hangfire.BackgroundJobServer.Stop()", label="Exit Hangfire.BackgroundJobServer.Stop()", span="133-133"];
m1_16 [cluster="string.Replace(string, string)", file="BackgroundProcessServerFacts.cs", label="Entry string.Replace(string, string)", span="0-0"];
m1_0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m1_1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="BackgroundProcessServerFacts.cs", label="0: connection == null", span="36-36"];
m1_4 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="BackgroundProcessServerFacts.cs", label="1: !IsSqlEditionSupported(connection)", span="40-40"];
m1_8 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="connection.Execute(script)", span="51-51"];
m1_2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="BackgroundProcessServerFacts.cs", label="1: throw new ArgumentNullException(''connection'');", span="36-36"];
m1_3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="BackgroundProcessServerFacts.cs", label="1: Log.Info(''Start installing HangFire SQL objects...'')", span="38-38"];
m1_5 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="BackgroundProcessServerFacts.cs", label="0: throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="42-42"];
m1_6 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="BackgroundProcessServerFacts.cs", label="0: var script = GetStringResource(\r\n                typeof(SqlServerObjectsInstaller).Assembly, \r\n                ''HangFire.SqlServer.Install.sql'')", span="45-47"];
m1_7 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="49-49"];
m1_9 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="Log.Info(''HangFire SQL objects installed.'')", span="53-53"];
m1_10 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m1_21 [cluster="Unk.>", file="BackgroundProcessServerFacts.cs", label="Entry Unk.>", span=""];
m1_32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="BackgroundProcessServerFacts.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m1_22 [cluster="Unk.Single", file="BackgroundProcessServerFacts.cs", label="Entry Unk.Single", span=""];
m1_30 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundProcessServerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_17 [cluster="Unk.Execute", file="BackgroundProcessServerFacts.cs", label="Entry Unk.Execute", span=""];
m1_31 [cluster="string.Format(string, object, object)", file="BackgroundProcessServerFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_33 [cluster="System.IO.StreamReader.ReadToEnd()", file="BackgroundProcessServerFacts.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m1_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m1_23 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="64-64"];
m1_25 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''Requested resource `{0}` was not found in the assembly `{1}`.'',\r\n                        resourceName,\r\n                        assembly));", span="68-71"];
m1_24 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="stream == null", span="66-66"];
m1_26 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="var reader = new StreamReader(stream)", span="74-74"];
m1_27 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="return reader.ReadToEnd();", span="76-76"];
m1_28 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="BackgroundProcessServerFacts.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m1_13 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m1_18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="58-58"];
m1_19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.SqlAzure;", span="59-59"];
m1_20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="BackgroundProcessServerFacts.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m1_29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="BackgroundProcessServerFacts.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m1_14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="BackgroundProcessServerFacts.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m1_12 [cluster="Unk.Info", file="BackgroundProcessServerFacts.cs", label="Entry Unk.Info", span=""];
m5_398 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="TypeExtensions.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m5_115 [cluster="long.Parse(string)", file="TypeExtensions.cs", label="Entry long.Parse(string)", span="0-0"];
m5_0 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m5_1 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="TypeExtensions.cs", label="_connectionString = connectionString", span="39-39"];
m5_2 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="TypeExtensions.cs", label="_queueProviders = queueProviders", span="40-40"];
m5_3 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(string, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m5_48 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518"];
m5_385 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="525-532"];
m5_386 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="534-537"];
m5_387 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="return DeserializeJobs(jobs, selector);", span="539-539"];
m5_388 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518"];
m5_399 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m5_234 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314"];
m5_235 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="TypeExtensions.cs", label="return UseConnection(connection =>\r\n            {\r\n                const string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n'';\r\n\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n\r\n                stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count();\r\n\r\n                return stats;\r\n            });", span="316-353"];
m5_236 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314"];
m5_52 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m5_72 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="117-117"];
m5_73 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="119-120"];
m5_74 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="117-117"];
m5_361 [cluster="Unk.Open", file="TypeExtensions.cs", label="Entry Unk.Open", span=""];
m5_7 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447"];
m5_351 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="var transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="449-449"];
m5_354 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="var result = action(connection)", span="454-454"];
m5_352 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="var connection = new SqlConnection(_connectionString)", span="450-450"];
m5_355 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="transaction.Complete()", span="456-456"];
m5_353 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="connection.Open()", span="452-452"];
m5_356 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="return result;", span="458-458"];
m5_357 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447"];
m5_360 [cluster="SqlConnection.cstr", file="TypeExtensions.cs", label="Entry SqlConnection.cstr", span=""];
m5_273 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m5_411 [cluster="Unk.ToString", file="TypeExtensions.cs", label="Entry Unk.ToString", span=""];
m5_194 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263"];
m5_195 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="TypeExtensions.cs", label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="265-299"];
m5_196 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263"];
m5_258 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m5_104 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="TypeExtensions.cs", label="Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="67-67"];
m5_367 [cluster="Unk.DeserializeJobs", file="TypeExtensions.cs", label="Entry Unk.DeserializeJobs", span=""];
m5_36 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="77-77"];
m5_37 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="79-80"];
m5_38 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="77-77"];
m5_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251"];
m5_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="253-254"];
m5_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251"];
m5_179 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m5_255 [cluster="Unk.Read", file="TypeExtensions.cs", label="Entry Unk.Read", span=""];
m5_384 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="TypeExtensions.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m5_105 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168"];
m5_106 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="TypeExtensions.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="170-182"];
m5_107 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168"];
m5_94 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150"];
m5_95 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="TypeExtensions.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="152-165"];
m5_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150"];
m5_269 [cluster="Unk.ContainsKey", file="TypeExtensions.cs", label="Entry Unk.ContainsKey", span=""];
m5_64 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m5_146 [cluster="Unk.EnqueuedJobs", file="TypeExtensions.cs", label="Entry Unk.EnqueuedJobs", span=""];
m5_65 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111"];
m5_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="113-114"];
m5_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111"];
m5_383 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="TypeExtensions.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="31-31"];
m5_22 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60"];
m5_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="TypeExtensions.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.FetchedCount ?? 0;\r\n            });", span="62-68"];
m5_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60"];
m5_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m5_254 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m5_256 [cluster="System.Func<T, TResult>.Invoke(T)", file="TypeExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_400 [cluster="int.ToString()", file="TypeExtensions.cs", label="Entry int.ToString()", span="0-0"];
m5_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71"];
m5_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="73-74"];
m5_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71"];
m5_92 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m5_389 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542"];
m5_390 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="546-546"];
m5_391 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label=jobs, span="548-548"];
m5_393 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="551-551"];
m5_394 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="553-554"];
m5_395 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="return new JobList<TDto>(result);", span="557-557"];
m5_392 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="550-550"];
m5_396 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542"];
m5_358 [cluster="TransactionScope.cstr", file="TypeExtensions.cs", label="Entry TransactionScope.cstr", span=""];
m5_141 [cluster="Unk.ToArray", file="TypeExtensions.cs", label="Entry Unk.ToArray", span=""];
m5_332 [cluster="System.DateTime.AddDays(double)", file="TypeExtensions.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m5_210 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m5_350 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m5_125 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m5_368 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="480-487"];
m5_8 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="45-46"];
m5_9 [cluster="lambda expression", file="TypeExtensions.cs", label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="46-46"];
m5_10 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="45-46"];
m5_16 [cluster="lambda expression", file="TypeExtensions.cs", label="var queueApi = GetQueueApi(connection, queue)", span="53-53"];
m5_17 [cluster="lambda expression", file="TypeExtensions.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="54-54"];
m5_15 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="51-57"];
m5_18 [cluster="lambda expression", file="TypeExtensions.cs", label="return counters.EnqueuedCount ?? 0;", span="56-56"];
m5_19 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="51-57"];
m5_26 [cluster="lambda expression", file="TypeExtensions.cs", label="var queueApi = GetQueueApi(connection, queue)", span="64-64"];
m5_27 [cluster="lambda expression", file="TypeExtensions.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="65-65"];
m5_25 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="62-68"];
m5_28 [cluster="lambda expression", file="TypeExtensions.cs", label="return counters.FetchedCount ?? 0;", span="67-67"];
m5_29 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="62-68"];
m5_33 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="73-74"];
m5_34 [cluster="lambda expression", file="TypeExtensions.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="74-74"];
m5_35 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="73-74"];
m5_39 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="79-80"];
m5_40 [cluster="lambda expression", file="TypeExtensions.cs", label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="80-80"];
m5_41 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="79-80"];
m5_46 [cluster="lambda expression", file="TypeExtensions.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="85-94"];
m5_45 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="85-94"];
m5_47 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="85-94"];
m5_49 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="89-94"];
m5_50 [cluster="lambda expression", file="TypeExtensions.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="89-94"];
m5_51 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="89-94"];
m5_59 [cluster="lambda expression", file="TypeExtensions.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="99-108"];
m5_58 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="99-108"];
m5_60 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="99-108"];
m5_61 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="103-108"];
m5_62 [cluster="lambda expression", file="TypeExtensions.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="103-108"];
m5_63 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="103-108"];
m5_68 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="113-114"];
m5_69 [cluster="lambda expression", file="TypeExtensions.cs", label="GetTimelineStats(connection, ''succeeded'')", span="114-114"];
m5_70 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="113-114"];
m5_75 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="119-120"];
m5_76 [cluster="lambda expression", file="TypeExtensions.cs", label="GetTimelineStats(connection, ''failed'')", span="120-120"];
m5_77 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="119-120"];
m5_82 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="125-147"];
m5_83 [cluster="lambda expression", file="TypeExtensions.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="127-129"];
m5_84 [cluster="lambda expression", file="TypeExtensions.cs", label="var result = new List<ServerDto>()", span="131-131"];
m5_85 [cluster="lambda expression", file="TypeExtensions.cs", label=servers, span="133-133"];
m5_87 [cluster="lambda expression", file="TypeExtensions.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="136-143"];
m5_88 [cluster="lambda expression", file="TypeExtensions.cs", label="return result;", span="146-146"];
m5_86 [cluster="lambda expression", file="TypeExtensions.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="135-135"];
m5_89 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="125-147"];
m5_98 [cluster="lambda expression", file="TypeExtensions.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="152-165"];
m5_97 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="152-165"];
m5_99 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="152-165"];
m5_100 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="157-165"];
m5_101 [cluster="lambda expression", file="TypeExtensions.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="157-165"];
m5_102 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="157-165"];
m5_109 [cluster="lambda expression", file="TypeExtensions.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="170-182"];
m5_108 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="170-182"];
m5_110 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="170-182"];
m5_111 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="175-182"];
m5_112 [cluster="lambda expression", file="TypeExtensions.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="175-182"];
m5_113 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="175-182"];
m5_120 [cluster="lambda expression", file="TypeExtensions.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="187-196"];
m5_119 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="187-196"];
m5_121 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="187-196"];
m5_122 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="192-196"];
m5_123 [cluster="lambda expression", file="TypeExtensions.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="192-196"];
m5_124 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="192-196"];
m5_129 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="201-226"];
m5_130 [cluster="lambda expression", file="TypeExtensions.cs", label="var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray()", span="203-207"];
m5_148 [cluster="lambda expression", file="TypeExtensions.cs", label="x.GetJobQueueMonitoringApi(connection)", span="204-204"];
m5_135 [cluster="lambda expression", file="TypeExtensions.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    })", span="216-222"];
m5_131 [cluster="lambda expression", file="TypeExtensions.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="209-209"];
m5_147 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="204-204"];
m5_151 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="205-205"];
m5_155 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="205-205"];
m5_158 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="206-206"];
m5_132 [cluster="lambda expression", file="TypeExtensions.cs", label=tuples, span="211-211"];
m5_136 [cluster="lambda expression", file="TypeExtensions.cs", label="return result;", span="225-225"];
m5_133 [cluster="lambda expression", file="TypeExtensions.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="213-213"];
m5_134 [cluster="lambda expression", file="TypeExtensions.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="214-214"];
m5_137 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="201-226"];
m5_149 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="204-204"];
m5_152 [cluster="lambda expression", file="TypeExtensions.cs", label="x.GetQueues()", span="205-205"];
m5_153 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="205-205"];
m5_156 [cluster="lambda expression", file="TypeExtensions.cs", label="new { Monitoring = monitoring, Queue = queue }", span="205-205"];
m5_157 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="205-205"];
m5_159 [cluster="lambda expression", file="TypeExtensions.cs", label="x.Queue", span="206-206"];
m5_160 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="206-206"];
m5_165 [cluster="lambda expression", file="TypeExtensions.cs", label="var queueApi = GetQueueApi(connection, queue)", span="233-233"];
m5_166 [cluster="lambda expression", file="TypeExtensions.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="234-234"];
m5_164 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="231-237"];
m5_167 [cluster="lambda expression", file="TypeExtensions.cs", label="return EnqueuedJobs(connection, enqueuedJobIds);", span="236-236"];
m5_168 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="231-237"];
m5_175 [cluster="lambda expression", file="TypeExtensions.cs", label="var queueApi = GetQueueApi(connection, queue)", span="244-244"];
m5_176 [cluster="lambda expression", file="TypeExtensions.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="245-245"];
m5_174 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="242-248"];
m5_177 [cluster="lambda expression", file="TypeExtensions.cs", label="return FetchedJobs(connection, fetchedJobIds);", span="247-247"];
m5_178 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="242-248"];
m5_184 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="253-254"];
m5_185 [cluster="lambda expression", file="TypeExtensions.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="254-254"];
m5_186 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="253-254"];
m5_191 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="259-260"];
m5_192 [cluster="lambda expression", file="TypeExtensions.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="260-260"];
m5_193 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="259-260"];
m5_199 [cluster="lambda expression", file="TypeExtensions.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="273-273"];
m5_197 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="265-299"];
m5_198 [cluster="lambda expression", file="TypeExtensions.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="268-271"];
m5_200 [cluster="lambda expression", file="TypeExtensions.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="275-275"];
m5_203 [cluster="lambda expression", file="TypeExtensions.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="278-278"];
m5_204 [cluster="lambda expression", file="TypeExtensions.cs", label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList()", span="279-289"];
m5_201 [cluster="lambda expression", file="TypeExtensions.cs", label="job == null", span="276-276"];
m5_205 [cluster="lambda expression", file="TypeExtensions.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="291-297"];
m5_202 [cluster="lambda expression", file="TypeExtensions.cs", label="return null;", span="276-276"];
m5_212 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="278-278"];
m5_215 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="278-278"];
m5_218 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="282-288"];
m5_206 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="265-299"];
m5_213 [cluster="lambda expression", file="TypeExtensions.cs", label="x.Name", span="278-278"];
m5_214 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="278-278"];
m5_216 [cluster="lambda expression", file="TypeExtensions.cs", label="x.Value", span="278-278"];
m5_217 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="278-278"];
m5_219 [cluster="lambda expression", file="TypeExtensions.cs", label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            }", span="282-288"];
m5_220 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="282-288"];
m5_225 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="304-305"];
m5_226 [cluster="lambda expression", file="TypeExtensions.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="305-305"];
m5_227 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="304-305"];
m5_231 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="310-311"];
m5_232 [cluster="lambda expression", file="TypeExtensions.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="311-311"];
m5_233 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="310-311"];
m5_237 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="316-353"];
m5_238 [cluster="lambda expression", file="TypeExtensions.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="318-326"];
m5_240 [cluster="lambda expression", file="TypeExtensions.cs", label="var multi = connection.QueryMultiple(sql)", span="329-329"];
m5_251 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count()", span="348-350"];
m5_271 [cluster="lambda expression", file="TypeExtensions.cs", label="x.GetJobQueueMonitoringApi(connection).GetQueues()", span="349-349"];
m5_239 [cluster="lambda expression", file="TypeExtensions.cs", label="var stats = new StatisticsDto()", span="328-328"];
m5_243 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="335-335"];
m5_244 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Failed = getCountIfExists(FailedState.StateName)", span="336-336"];
m5_245 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="337-337"];
m5_246 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="338-338"];
m5_247 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Servers = multi.Read<int>().Single()", span="340-340"];
m5_248 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="342-342"];
m5_249 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="343-343"];
m5_250 [cluster="lambda expression", file="TypeExtensions.cs", label="stats.Recurring = multi.Read<int>().Single()", span="345-345"];
m5_252 [cluster="lambda expression", file="TypeExtensions.cs", label="return stats;", span="352-352"];
m5_241 [cluster="lambda expression", file="TypeExtensions.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="331-331"];
m5_242 [cluster="lambda expression", file="TypeExtensions.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333"];
m5_260 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="331-331"];
m5_263 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="331-331"];
m5_267 [cluster="lambda expression", file="TypeExtensions.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333"];
m5_270 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="349-349"];
m5_253 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="316-353"];
m5_261 [cluster="lambda expression", file="TypeExtensions.cs", label="x.State", span="331-331"];
m5_262 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="331-331"];
m5_264 [cluster="lambda expression", file="TypeExtensions.cs", label="x.Count", span="331-331"];
m5_265 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="331-331"];
m5_266 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="333-333"];
m5_268 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="333-333"];
m5_272 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="349-349"];
m5_301 [cluster="lambda expression", file="TypeExtensions.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="368-368"];
m5_300 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="368-368"];
m5_305 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="378-378"];
m5_308 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="378-378"];
m5_302 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="368-368"];
m5_306 [cluster="lambda expression", file="TypeExtensions.cs", label="(string)x.Key", span="378-378"];
m5_307 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="378-378"];
m5_309 [cluster="lambda expression", file="TypeExtensions.cs", label="(long)x.Count", span="378-378"];
m5_310 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="378-378"];
m5_337 [cluster="lambda expression", file="TypeExtensions.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="410-410"];
m5_333 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="409-409"];
m5_336 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="410-410"];
m5_340 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="420-420"];
m5_343 [cluster="lambda expression", file="TypeExtensions.cs", label="Entry lambda expression", span="420-420"];
m5_334 [cluster="lambda expression", file="TypeExtensions.cs", label="x.ToString(''yyyy-MM-dd'')", span="409-409"];
m5_335 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="409-409"];
m5_338 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="410-410"];
m5_341 [cluster="lambda expression", file="TypeExtensions.cs", label="(string)x.Key", span="420-420"];
m5_342 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="420-420"];
m5_344 [cluster="lambda expression", file="TypeExtensions.cs", label="(long)x.Count", span="420-420"];
m5_345 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="420-420"];
m5_369 [cluster="lambda expression", file="TypeExtensions.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="480-487"];
m5_370 [cluster="lambda expression", file="TypeExtensions.cs", label="Exit lambda expression", span="480-487"];
m5_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560"];
m5_402 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="564-569"];
m5_403 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="571-574"];
m5_404 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="576-576"];
m5_405 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label=jobs, span="578-578"];
m5_406 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="580-587"];
m5_407 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="return new JobList<FetchedJobDto>(result);", span="590-590"];
m5_408 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560"];
m5_145 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m5_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_90 [cluster="Unk.ToList", file="TypeExtensions.cs", label="Entry Unk.ToList", span=""];
m5_54 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="TypeExtensions.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="56-56"];
m5_339 [cluster="Unk.Format", file="TypeExtensions.cs", label="Entry Unk.Format", span=""];
m5_412 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m5_303 [cluster="System.DateTime.ToString(string)", file="TypeExtensions.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m5_171 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240"];
m5_172 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="TypeExtensions.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage);\r\n\r\n                return FetchedJobs(connection, fetchedJobIds);\r\n            });", span="242-248"];
m5_173 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240"];
m5_142 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="TypeExtensions.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m5_299 [cluster="Unk.ElementAt", file="TypeExtensions.cs", label="Entry Unk.ElementAt", span=""];
m5_410 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="TypeExtensions.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m5_296 [cluster="Unk.Query", file="TypeExtensions.cs", label="Entry Unk.Query", span=""];
m5_42 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m5_43 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="TypeExtensions.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="85-94"];
m5_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m5_297 [cluster="Unk.Add", file="TypeExtensions.cs", label="Entry Unk.Add", span=""];
m5_362 [cluster="Unk.Complete", file="TypeExtensions.cs", label="Entry Unk.Complete", span=""];
m5_359 [cluster="TransactionOptions.cstr", file="TypeExtensions.cs", label="Entry TransactionOptions.cstr", span=""];
m5_409 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="TypeExtensions.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m5_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437"];
m5_346 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="TypeExtensions.cs", label="var provider = _queueProviders.GetProvider(queueName)", span="441-441"];
m5_347 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="TypeExtensions.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi(connection)", span="442-442"];
m5_348 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="TypeExtensions.cs", label="return monitoringApi;", span="444-444"];
m5_349 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437"];
m5_295 [cluster="System.DateTime.AddHours(double)", file="TypeExtensions.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m5_4 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43"];
m5_5 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="45-46"];
m5_6 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43"];
m5_207 [cluster="Unk.QueryMultiple", file="TypeExtensions.cs", label="Entry Unk.QueryMultiple", span=""];
m5_114 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m5_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m5_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="TypeExtensions.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="99-108"];
m5_57 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m5_228 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308"];
m5_229 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="310-311"];
m5_230 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308"];
m5_161 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m5_162 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="TypeExtensions.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage);\r\n\r\n                return EnqueuedJobs(connection, enqueuedJobIds);\r\n            });", span="231-237"];
m5_163 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m5_78 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123"];
m5_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="TypeExtensions.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="125-147"];
m5_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123"];
m5_304 [cluster="string.Format(string, object, object)", file="TypeExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_139 [cluster="Unk.SelectMany", file="TypeExtensions.cs", label="Entry Unk.SelectMany", span=""];
m5_209 [cluster="Unk.ToDictionary", file="TypeExtensions.cs", label="Entry Unk.ToDictionary", span=""];
m5_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302"];
m5_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="304-305"];
m5_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302"];
m5_376 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503"];
m5_377 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="505-505"];
m5_378 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label="data.Arguments = arguments", span="506-506"];
m5_379 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label="return data.Deserialize();", span="510-510"];
m5_380 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label=JobLoadException, span="512-512"];
m5_381 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label="return null;", span="514-514"];
m5_382 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503"];
m5_371 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m5_103 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m5_21 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m5_81 [cluster="Unk.>", file="TypeExtensions.cs", label="Entry Unk.>", span=""];
m5_143 [cluster="Unk.GetEnqueuedJobIds", file="TypeExtensions.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m5_140 [cluster="Unk.OrderBy", file="TypeExtensions.cs", label="Entry Unk.OrderBy", span=""];
m5_144 [cluster="Unk.GetEnqueuedAndFetchedCount", file="TypeExtensions.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m5_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490"];
m5_372 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="TypeExtensions.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="492-493"];
m5_373 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="TypeExtensions.cs", label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName })\r\n                 .Single()", span="495-498"];
m5_374 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="TypeExtensions.cs", label="return count;", span="500-500"];
m5_375 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490"];
m5_154 [cluster="Unk.GetQueues", file="TypeExtensions.cs", label="Entry Unk.GetQueues", span=""];
m5_298 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TypeExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_401 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m5_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185"];
m5_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="TypeExtensions.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="187-196"];
m5_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185"];
m5_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49"];
m5_13 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="TypeExtensions.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.EnqueuedCount ?? 0;\r\n            });", span="51-57"];
m5_14 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49"];
m5_170 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462"];
m5_363 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="466-471"];
m5_364 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="473-476"];
m5_365 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="478-487"];
m5_366 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462"];
m5_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257"];
m5_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="TypeExtensions.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="259-260"];
m5_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257"];
m5_169 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m5_259 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="TypeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m5_138 [cluster="Unk.Select", file="TypeExtensions.cs", label="Entry Unk.Select", span=""];
m5_150 [cluster="Unk.GetJobQueueMonitoringApi", file="TypeExtensions.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m5_221 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="TypeExtensions.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m5_397 [cluster="System.Collections.Generic.List<T>.List(int)", file="TypeExtensions.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m5_257 [cluster="Unk.Single", file="TypeExtensions.cs", label="Entry Unk.Single", span=""];
m5_71 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395"];
m5_311 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var endDate = DateTime.UtcNow.Date", span="399-399"];
m5_318 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="410-410"];
m5_320 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="417-420"];
m5_312 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var startDate = endDate.AddDays(-7)", span="400-400"];
m5_314 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="startDate <= endDate", span="403-403"];
m5_315 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="dates.Add(endDate)", span="405-405"];
m5_316 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="endDate = endDate.AddDays(-1)", span="406-406"];
m5_313 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var dates = new List<DateTime>()", span="401-401"];
m5_317 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="409-409"];
m5_328 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="result.Add(dates[i], value)", span="431-431"];
m5_326 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="i < stringDates.Count", span="428-428"];
m5_319 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="412-415"];
m5_321 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label=keys, span="422-422"];
m5_322 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="!valuesMap.ContainsKey(key)", span="424-424"];
m5_323 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="valuesMap.Add(key, 0)", span="424-424"];
m5_327 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="430-430"];
m5_324 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var result = new Dictionary<DateTime, long>()", span="427-427"];
m5_325 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var i = 0", span="428-428"];
m5_330 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="return result;", span="434-434"];
m5_329 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="i++", span="428-428"];
m5_331 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395"];
m5_126 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199"];
m5_127 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="TypeExtensions.cs", label="return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>\r\n            {\r\n                var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray();\r\n\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);\r\n\r\n                foreach (var tuple in tuples)\r\n                {\r\n                    var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5);\r\n                    var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="201-226"];
m5_128 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199"];
m5_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356"];
m5_274 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var endDate = DateTime.UtcNow", span="360-360"];
m5_281 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="368-368"];
m5_283 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="375-378"];
m5_275 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var dates = new List<DateTime>()", span="361-361"];
m5_278 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="dates.Add(endDate)", span="364-364"];
m5_279 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="endDate = endDate.AddHours(-1)", span="365-365"];
m5_276 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var i = 0", span="362-362"];
m5_289 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="i < dates.Count", span="386-386"];
m5_291 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="result.Add(dates[i], value)", span="389-389"];
m5_277 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="i < 24", span="362-362"];
m5_280 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="i++", span="362-362"];
m5_282 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="370-373"];
m5_284 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label=keys, span="380-380"];
m5_285 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="!valuesMap.ContainsKey(key)", span="382-382"];
m5_286 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="valuesMap.Add(key, 0)", span="382-382"];
m5_290 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="388-388"];
m5_287 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var result = new Dictionary<DateTime, long>()", span="385-385"];
m5_288 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="var i = 0", span="386-386"];
m5_293 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="return result;", span="392-392"];
m5_292 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="i++", span="386-386"];
m5_294 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="TypeExtensions.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356"];
m5_208 [cluster="Unk.SingleOrDefault", file="TypeExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_211 [cluster="Unk.DeserializeJob", file="TypeExtensions.cs", label="Entry Unk.DeserializeJob", span=""];
m5_413 [file="TypeExtensions.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m5_414 [file="TypeExtensions.cs", label=string, span=""];
m5_415 [file="TypeExtensions.cs", label=string, span=""];
m5_416 [file="TypeExtensions.cs", label=int, span=""];
m5_417 [file="TypeExtensions.cs", label=int, span=""];
m5_418 [file="TypeExtensions.cs", label=int, span=""];
m5_419 [file="TypeExtensions.cs", label=int, span=""];
m5_420 [file="TypeExtensions.cs", label=int, span=""];
m5_421 [file="TypeExtensions.cs", label=int, span=""];
m5_422 [file="TypeExtensions.cs", label=int, span=""];
m5_423 [file="TypeExtensions.cs", label=int, span=""];
m5_424 [file="TypeExtensions.cs", label=int, span=""];
m5_425 [file="TypeExtensions.cs", label=int, span=""];
m5_426 [file="TypeExtensions.cs", label=SqlConnection, span=""];
m5_427 [file="TypeExtensions.cs", label=string, span=""];
m5_428 [file="TypeExtensions.cs", label=int, span=""];
m5_429 [file="TypeExtensions.cs", label=int, span=""];
m5_430 [file="TypeExtensions.cs", label=string, span=""];
m5_431 [file="TypeExtensions.cs", label=int, span=""];
m5_432 [file="TypeExtensions.cs", label=int, span=""];
m5_433 [file="TypeExtensions.cs", label=string, span=""];
m5_434 [file="TypeExtensions.cs", label=countByStates, span=""];
m5_435 [file="TypeExtensions.cs", label=SqlConnection, span=""];
m5_436 [file="TypeExtensions.cs", label=string, span=""];
m5_437 [file="TypeExtensions.cs", label=string, span=""];
n66 -> n24  [color=red, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n66 -> n38  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n16  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n17  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
n8 -> n19  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n21  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n8 -> n23  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n8 -> n24  [color=red, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n28  [key=2, style=dotted];
n16 -> n29  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n30  [key=2, style=dotted];
n17 -> n29  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n29  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n31  [key=2, style=dotted];
n19 -> n24  [color=red, key=1, label=properties, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n33  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n34  [key=2, style=dotted];
n23 -> n24  [color=red, key=0, style=solid];
n23 -> n35  [key=2, style=dotted];
n24 -> n25  [color=red, key=0, style=solid];
n24 -> n36  [color=red, key=2, style=dotted];
n10 -> n25  [key=0, style=solid];
n10 -> n26  [key=2, style=dotted];
n12 -> n25  [key=0, style=solid];
n12 -> n26  [key=2, style=dotted];
n14 -> n25  [key=0, style=solid];
n14 -> n26  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n27  [key=2, style=dotted];
n15 -> n17  [color=darkseagreen4, key=1, label=processes, style=dashed];
n15 -> n18  [color=darkseagreen4, key=1, label=processes, style=dashed];
n15 -> n24  [color=red, key=1, label=processes, style=dashed];
n28 -> n42  [key=0, style=solid];
n28 -> n46  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n28 -> n47  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n28 -> n50  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n28 -> n51  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n32  [key=2, style=dotted];
n25 -> n8  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n32  [key=2, style=dotted];
n40 -> n37  [color=blue, key=0, style=bold];
n42 -> n43  [key=0, style=solid];
n42 -> n44  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n49  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n47 -> n55  [key=2, style=dotted];
n47 -> n56  [key=2, style=dotted];
n47 -> n57  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n59  [key=2, style=dotted];
n50 -> n57  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n60  [key=2, style=dotted];
n51 -> n57  [key=2, style=dotted];
n43 -> n54  [key=0, style=solid];
n43 -> n26  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n27  [key=2, style=dotted];
n44 -> n47  [color=darkseagreen4, key=1, label=processes, style=dashed];
n44 -> n49  [color=darkseagreen4, key=1, label=processes, style=dashed];
n44 -> n50  [color=darkseagreen4, key=1, label=processes, style=dashed];
n44 -> n51  [color=darkseagreen4, key=1, label=processes, style=dashed];
n44 -> n52  [color=darkseagreen4, key=1, label=processes, style=dashed];
n44 -> n53  [color=darkseagreen4, key=1, label=processes, style=dashed];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [color=darkseagreen4, key=1, label=i, style=dashed];
n45 -> n48  [color=darkseagreen4, key=1, label=i, style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n58  [key=2, style=dotted];
n49 -> n57  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n61  [key=2, style=dotted];
n52 -> n57  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n48 -> n46  [key=0, style=solid];
n48 -> n48  [color=darkseagreen4, key=1, label=i, style=dashed];
n54 -> n28  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n63 -> n62  [color=blue, key=0, style=bold];
n64 -> n65  [key=0, style=solid];
n65 -> n64  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_0 -> m1_4  [color=red, key=1, label=SqlConnection, style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_3  [color=red, key=0, style=solid];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_6  [color=red, key=0, style=solid];
m1_4 -> m1_13  [color=red, key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_17  [key=2, style=dotted];
m1_2 -> m1_10  [color=red, key=0, style=solid];
m1_2 -> n26  [color=red, key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_12  [color=red, key=2, style=dotted];
m1_5 -> m1_10  [color=red, key=0, style=solid];
m1_5 -> m1_14  [color=red, key=2, style=dotted];
m1_6 -> m1_7  [color=red, key=0, style=solid];
m1_6 -> m1_15  [color=red, key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_7  [color=darkseagreen4, key=1, label=script, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_12  [key=2, style=dotted];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m1_15 -> m1_23  [key=0, style=solid];
m1_15 -> m1_25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m1_15 -> m1_6  [color=red, key=3, label="Parameter variable string resourceName", style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_29  [key=2, style=dotted];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label=stream, style=dashed];
m1_25 -> m1_28  [key=0, style=solid];
m1_25 -> m1_30  [key=2, style=dotted];
m1_25 -> m1_31  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_32  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_33  [key=2, style=dotted];
m1_28 -> m1_15  [color=blue, key=0, style=bold];
m1_13 -> m1_18  [key=0, style=solid];
m1_13 -> m1_0  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_21  [key=2, style=dotted];
m1_18 -> m1_22  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_13  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_0  [color=blue, key=0, style=bold];
m5_48 -> m5_385  [key=0, style=solid];
m5_48 -> m5_386  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_48 -> m5_387  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m5_385 -> m5_386  [key=0, style=solid];
m5_386 -> m5_387  [key=0, style=solid];
m5_386 -> m5_81  [key=2, style=dotted];
m5_386 -> m5_90  [key=2, style=dotted];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_367  [key=2, style=dotted];
m5_388 -> m5_48  [color=blue, key=0, style=bold];
m5_234 -> m5_235  [key=0, style=solid];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_7  [key=2, style=dotted];
m5_235 -> m5_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_236 -> m5_234  [color=blue, key=0, style=bold];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_7  [key=2, style=dotted];
m5_73 -> m5_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_74 -> m5_72  [color=blue, key=0, style=bold];
m5_7 -> m5_351  [key=0, style=solid];
m5_7 -> m5_354  [color=darkseagreen4, key=1, label="System.Func<SqlConnection, T>", style=dashed];
m5_351 -> m5_352  [key=0, style=solid];
m5_351 -> m5_358  [key=2, style=dotted];
m5_351 -> m5_359  [key=2, style=dotted];
m5_351 -> m5_355  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_256  [key=2, style=dotted];
m5_354 -> m5_356  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_352 -> m5_353  [key=0, style=solid];
m5_352 -> m5_360  [key=2, style=dotted];
m5_352 -> m5_354  [color=darkseagreen4, key=1, label=connection, style=dashed];
m5_355 -> m5_356  [key=0, style=solid];
m5_355 -> m5_362  [key=2, style=dotted];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_361  [key=2, style=dotted];
m5_356 -> m5_357  [key=0, style=solid];
m5_357 -> m5_7  [color=blue, key=0, style=bold];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_7  [key=2, style=dotted];
m5_195 -> m5_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_196 -> m5_194  [color=blue, key=0, style=bold];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_7  [key=2, style=dotted];
m5_37 -> m5_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_38 -> m5_36  [color=blue, key=0, style=bold];
m5_181 -> m5_182  [key=0, style=solid];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_7  [key=2, style=dotted];
m5_182 -> m5_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_183 -> m5_181  [color=blue, key=0, style=bold];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_7  [key=2, style=dotted];
m5_106 -> m5_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_107 -> m5_105  [color=blue, key=0, style=bold];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_98  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_7  [key=2, style=dotted];
m5_95 -> m5_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_96 -> m5_94  [color=blue, key=0, style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_7  [key=2, style=dotted];
m5_66 -> m5_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_67 -> m5_65  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_22 -> m5_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_7  [key=2, style=dotted];
m5_23 -> m5_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_7  [key=2, style=dotted];
m5_31 -> m5_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_32 -> m5_30  [color=blue, key=0, style=bold];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_391  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>", style=dashed];
m5_389 -> m5_393  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_397  [key=2, style=dotted];
m5_390 -> m5_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_390 -> m5_395  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_395  [key=0, style=solid];
m5_391 -> m5_393  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_391 -> m5_394  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_376  [key=2, style=dotted];
m5_393 -> m5_398  [key=2, style=dotted];
m5_394 -> m5_391  [key=0, style=solid];
m5_394 -> m5_399  [key=2, style=dotted];
m5_394 -> m5_400  [key=2, style=dotted];
m5_394 -> m5_93  [key=2, style=dotted];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_401  [key=2, style=dotted];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_383  [key=2, style=dotted];
m5_396 -> m5_389  [color=blue, key=0, style=bold];
m5_368 -> m5_369  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=2, style=dotted];
m5_10 -> m5_8  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_20  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_21  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_15  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_20  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_21  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_25  [color=blue, key=0, style=bold];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_11  [key=2, style=dotted];
m5_35 -> m5_33  [color=blue, key=0, style=bold];
m5_39 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_11  [key=2, style=dotted];
m5_41 -> m5_39  [color=blue, key=0, style=bold];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=2, style=dotted];
m5_46 -> m5_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_45 -> m5_46  [key=0, style=solid];
m5_47 -> m5_45  [color=blue, key=0, style=bold];
m5_49 -> m5_50  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_52  [key=2, style=dotted];
m5_50 -> m5_53  [key=2, style=dotted];
m5_50 -> m5_54  [key=2, style=dotted];
m5_51 -> m5_49  [color=blue, key=0, style=bold];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_48  [key=2, style=dotted];
m5_59 -> m5_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_58 -> m5_59  [key=0, style=solid];
m5_60 -> m5_58  [color=blue, key=0, style=bold];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_64  [key=2, style=dotted];
m5_62 -> m5_54  [key=2, style=dotted];
m5_63 -> m5_61  [color=blue, key=0, style=bold];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=2, style=dotted];
m5_70 -> m5_68  [color=blue, key=0, style=bold];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_71  [key=2, style=dotted];
m5_77 -> m5_75  [color=blue, key=0, style=bold];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_81  [key=2, style=dotted];
m5_83 -> m5_90  [key=2, style=dotted];
m5_83 -> m5_85  [color=darkseagreen4, key=1, label=servers, style=dashed];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> n27  [key=2, style=dotted];
m5_84 -> m5_87  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_84 -> m5_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_88  [key=0, style=solid];
m5_85 -> m5_87  [color=darkseagreen4, key=1, label=server, style=dashed];
m5_87 -> m5_85  [key=0, style=solid];
m5_87 -> m5_92  [key=2, style=dotted];
m5_87 -> m5_93  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_81  [key=2, style=dotted];
m5_89 -> m5_82  [color=blue, key=0, style=bold];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_48  [key=2, style=dotted];
m5_98 -> m5_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_97 -> m5_98  [key=0, style=solid];
m5_99 -> m5_97  [color=blue, key=0, style=bold];
m5_100 -> m5_101  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_103  [key=2, style=dotted];
m5_101 -> m5_104  [key=2, style=dotted];
m5_102 -> m5_100  [color=blue, key=0, style=bold];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_48  [key=2, style=dotted];
m5_109 -> m5_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_108 -> m5_109  [key=0, style=solid];
m5_110 -> m5_108  [color=blue, key=0, style=bold];
m5_111 -> m5_112  [key=0, style=solid];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_114  [key=2, style=dotted];
m5_112 -> m5_53  [key=2, style=dotted];
m5_112 -> m5_115  [key=2, style=dotted];
m5_112 -> m5_104  [key=2, style=dotted];
m5_113 -> m5_111  [color=blue, key=0, style=bold];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_48  [key=2, style=dotted];
m5_120 -> m5_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_119 -> m5_120  [key=0, style=solid];
m5_121 -> m5_119  [color=blue, key=0, style=bold];
m5_122 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_125  [key=2, style=dotted];
m5_123 -> m5_104  [key=2, style=dotted];
m5_124 -> m5_122  [color=blue, key=0, style=bold];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_148  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_129 -> m5_135  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_138  [key=2, style=dotted];
m5_130 -> m5_139  [key=2, style=dotted];
m5_130 -> m5_140  [key=2, style=dotted];
m5_130 -> m5_141  [key=2, style=dotted];
m5_130 -> m5_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_130 -> m5_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_130 -> m5_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_130 -> m5_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_130 -> m5_132  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_150  [key=2, style=dotted];
m5_135 -> m5_132  [key=0, style=solid];
m5_135 -> m5_145  [key=2, style=dotted];
m5_135 -> m5_146  [key=2, style=dotted];
m5_135 -> m5_93  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_142  [key=2, style=dotted];
m5_131 -> m5_135  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_131 -> m5_136  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_147 -> m5_148  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_155 -> m5_156  [key=0, style=solid];
m5_158 -> m5_159  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_136  [key=0, style=solid];
m5_132 -> m5_134  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m5_132 -> m5_135  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m5_136 -> m5_137  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_143  [key=2, style=dotted];
m5_133 -> m5_135  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_144  [key=2, style=dotted];
m5_137 -> m5_129  [color=blue, key=0, style=bold];
m5_149 -> m5_147  [color=blue, key=0, style=bold];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_154  [key=2, style=dotted];
m5_153 -> m5_151  [color=blue, key=0, style=bold];
m5_156 -> m5_157  [key=0, style=solid];
m5_157 -> m5_155  [color=blue, key=0, style=bold];
m5_159 -> m5_160  [key=0, style=solid];
m5_160 -> m5_158  [color=blue, key=0, style=bold];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_20  [key=2, style=dotted];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_169  [key=2, style=dotted];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_167  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_170  [key=2, style=dotted];
m5_168 -> m5_164  [color=blue, key=0, style=bold];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_20  [key=2, style=dotted];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_179  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_177  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_180  [key=2, style=dotted];
m5_178 -> m5_174  [color=blue, key=0, style=bold];
m5_184 -> m5_185  [key=0, style=solid];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_187  [key=2, style=dotted];
m5_186 -> m5_184  [color=blue, key=0, style=bold];
m5_191 -> m5_192  [key=0, style=solid];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_187  [key=2, style=dotted];
m5_193 -> m5_191  [color=blue, key=0, style=bold];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_207  [key=2, style=dotted];
m5_199 -> m5_203  [color=darkseagreen4, key=1, label=multi, style=dashed];
m5_199 -> m5_204  [color=darkseagreen4, key=1, label=multi, style=dashed];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_198 -> m5_199  [key=0, style=solid];
m5_200 -> m5_201  [key=0, style=solid];
m5_200 -> m5_81  [key=2, style=dotted];
m5_200 -> m5_208  [key=2, style=dotted];
m5_200 -> m5_205  [color=darkseagreen4, key=1, label=job, style=dashed];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_81  [key=2, style=dotted];
m5_203 -> m5_209  [key=2, style=dotted];
m5_203 -> m5_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_203 -> m5_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_203 -> m5_205  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_81  [key=2, style=dotted];
m5_204 -> m5_90  [key=2, style=dotted];
m5_204 -> m5_138  [key=2, style=dotted];
m5_204 -> m5_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_201 -> m5_202  [key=0, style=solid];
m5_201 -> m5_203  [key=0, style=solid];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_210  [key=2, style=dotted];
m5_205 -> m5_211  [key=2, style=dotted];
m5_202 -> m5_206  [key=0, style=solid];
m5_212 -> m5_213  [key=0, style=solid];
m5_215 -> m5_216  [key=0, style=solid];
m5_218 -> m5_219  [key=0, style=solid];
m5_206 -> m5_197  [color=blue, key=0, style=bold];
m5_213 -> m5_214  [key=0, style=solid];
m5_214 -> m5_212  [color=blue, key=0, style=bold];
m5_216 -> m5_217  [key=0, style=solid];
m5_217 -> m5_215  [color=blue, key=0, style=bold];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_221  [key=2, style=dotted];
m5_219 -> m5_81  [key=2, style=dotted];
m5_220 -> m5_218  [color=blue, key=0, style=bold];
m5_225 -> m5_226  [key=0, style=solid];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_11  [key=2, style=dotted];
m5_227 -> m5_225  [color=blue, key=0, style=bold];
m5_231 -> m5_232  [key=0, style=solid];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_11  [key=2, style=dotted];
m5_233 -> m5_231  [color=blue, key=0, style=bold];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_240  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_237 -> m5_251  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_237 -> m5_271  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_240  [color=darkseagreen4, key=1, label=sql, style=dashed];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_207  [key=2, style=dotted];
m5_240 -> m5_247  [color=darkseagreen4, key=1, label=multi, style=dashed];
m5_240 -> m5_248  [color=darkseagreen4, key=1, label=multi, style=dashed];
m5_240 -> m5_249  [color=darkseagreen4, key=1, label=multi, style=dashed];
m5_240 -> m5_250  [color=darkseagreen4, key=1, label=multi, style=dashed];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_258  [key=2, style=dotted];
m5_251 -> m5_259  [key=2, style=dotted];
m5_251 -> m5_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_271 -> m5_272  [key=0, style=solid];
m5_271 -> m5_150  [key=2, style=dotted];
m5_271 -> m5_273  [key=2, style=dotted];
m5_239 -> m5_240  [key=0, style=solid];
m5_239 -> m5_254  [key=2, style=dotted];
m5_239 -> m5_243  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_244  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_245  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_246  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_247  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_248  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_249  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_250  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_251  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_239 -> m5_252  [color=darkseagreen4, key=1, label=stats, style=dashed];
m5_243 -> m5_244  [key=0, style=solid];
m5_243 -> m5_256  [key=2, style=dotted];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_256  [key=2, style=dotted];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_256  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_256  [key=2, style=dotted];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_81  [key=2, style=dotted];
m5_247 -> m5_257  [key=2, style=dotted];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_81  [key=2, style=dotted];
m5_248 -> m5_208  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_81  [key=2, style=dotted];
m5_249 -> m5_208  [key=2, style=dotted];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_81  [key=2, style=dotted];
m5_250 -> m5_257  [key=2, style=dotted];
m5_252 -> m5_253  [key=0, style=solid];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_255  [key=2, style=dotted];
m5_241 -> m5_209  [key=2, style=dotted];
m5_241 -> m5_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_241 -> m5_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_241 -> m5_267  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m5_242 -> m5_243  [key=0, style=solid];
m5_242 -> m5_267  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_242 -> m5_244  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m5_242 -> m5_245  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m5_242 -> m5_246  [color=darkseagreen4, key=1, label=getCountIfExists, style=dashed];
m5_260 -> m5_261  [key=0, style=solid];
m5_263 -> m5_264  [key=0, style=solid];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_269  [key=2, style=dotted];
m5_270 -> m5_271  [key=0, style=solid];
m5_253 -> m5_237  [color=blue, key=0, style=bold];
m5_261 -> m5_262  [key=0, style=solid];
m5_262 -> m5_260  [color=blue, key=0, style=bold];
m5_264 -> m5_265  [key=0, style=solid];
m5_265 -> m5_263  [color=blue, key=0, style=bold];
m5_266 -> m5_267  [key=0, style=solid];
m5_268 -> m5_266  [color=blue, key=0, style=bold];
m5_272 -> m5_270  [color=blue, key=0, style=bold];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_303  [key=2, style=dotted];
m5_301 -> m5_304  [key=2, style=dotted];
m5_300 -> m5_301  [key=0, style=solid];
m5_305 -> m5_306  [key=0, style=solid];
m5_308 -> m5_309  [key=0, style=solid];
m5_302 -> m5_300  [color=blue, key=0, style=bold];
m5_306 -> m5_307  [key=0, style=solid];
m5_307 -> m5_305  [color=blue, key=0, style=bold];
m5_309 -> m5_310  [key=0, style=solid];
m5_310 -> m5_308  [color=blue, key=0, style=bold];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_339  [key=2, style=dotted];
m5_333 -> m5_334  [key=0, style=solid];
m5_336 -> m5_337  [key=0, style=solid];
m5_340 -> m5_341  [key=0, style=solid];
m5_343 -> m5_344  [key=0, style=solid];
m5_334 -> m5_335  [key=0, style=solid];
m5_334 -> m5_303  [key=2, style=dotted];
m5_335 -> m5_333  [color=blue, key=0, style=bold];
m5_338 -> m5_336  [color=blue, key=0, style=bold];
m5_341 -> m5_342  [key=0, style=solid];
m5_342 -> m5_340  [color=blue, key=0, style=bold];
m5_344 -> m5_345  [key=0, style=solid];
m5_345 -> m5_343  [color=blue, key=0, style=bold];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_371  [key=2, style=dotted];
m5_369 -> m5_104  [key=2, style=dotted];
m5_370 -> m5_368  [color=blue, key=0, style=bold];
m5_180 -> m5_402  [key=0, style=solid];
m5_180 -> m5_403  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_402 -> m5_403  [key=0, style=solid];
m5_403 -> m5_404  [key=0, style=solid];
m5_403 -> m5_81  [key=2, style=dotted];
m5_403 -> m5_90  [key=2, style=dotted];
m5_403 -> m5_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m5_404 -> m5_405  [key=0, style=solid];
m5_404 -> m5_409  [key=2, style=dotted];
m5_404 -> m5_406  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_404 -> m5_407  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_405 -> m5_406  [key=0, style=solid];
m5_405 -> m5_407  [key=0, style=solid];
m5_406 -> m5_405  [key=0, style=solid];
m5_406 -> m5_410  [key=2, style=dotted];
m5_406 -> m5_411  [key=2, style=dotted];
m5_406 -> m5_412  [key=2, style=dotted];
m5_406 -> m5_211  [key=2, style=dotted];
m5_406 -> m5_93  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_407 -> m5_401  [key=2, style=dotted];
m5_408 -> m5_180  [color=blue, key=0, style=bold];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_171 -> m5_176  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_7  [key=2, style=dotted];
m5_172 -> m5_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_173 -> m5_171  [color=blue, key=0, style=bold];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_7  [key=2, style=dotted];
m5_43 -> m5_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_44 -> m5_42  [color=blue, key=0, style=bold];
m5_20 -> m5_346  [key=0, style=solid];
m5_20 -> m5_347  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_346 -> m5_347  [key=0, style=solid];
m5_346 -> m5_350  [key=2, style=dotted];
m5_347 -> m5_348  [key=0, style=solid];
m5_347 -> m5_150  [key=2, style=dotted];
m5_348 -> m5_349  [key=0, style=solid];
m5_349 -> m5_20  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=2, style=dotted];
m5_5 -> m5_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_7  [key=2, style=dotted];
m5_56 -> m5_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_57 -> m5_55  [color=blue, key=0, style=bold];
m5_228 -> m5_229  [key=0, style=solid];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_7  [key=2, style=dotted];
m5_229 -> m5_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_230 -> m5_228  [color=blue, key=0, style=bold];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_161 -> m5_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_162 -> m5_163  [key=0, style=solid];
m5_162 -> m5_7  [key=2, style=dotted];
m5_162 -> m5_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_163 -> m5_161  [color=blue, key=0, style=bold];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [key=2, style=dotted];
m5_79 -> m5_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_80 -> m5_78  [color=blue, key=0, style=bold];
m5_222 -> m5_223  [key=0, style=solid];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_7  [key=2, style=dotted];
m5_223 -> m5_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_224 -> m5_222  [color=blue, key=0, style=bold];
m5_376 -> m5_377  [key=0, style=solid];
m5_376 -> m5_378  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_377 -> m5_378  [key=0, style=solid];
m5_377 -> m5_383  [key=2, style=dotted];
m5_377 -> m5_379  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_378 -> m5_379  [key=0, style=solid];
m5_379 -> m5_382  [key=0, style=solid];
m5_379 -> m5_384  [key=2, style=dotted];
m5_380 -> m5_381  [key=0, style=solid];
m5_381 -> m5_382  [key=0, style=solid];
m5_382 -> m5_376  [color=blue, key=0, style=bold];
m5_11 -> m5_372  [key=0, style=solid];
m5_11 -> m5_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_372 -> m5_373  [key=0, style=solid];
m5_373 -> m5_374  [key=0, style=solid];
m5_373 -> m5_81  [key=2, style=dotted];
m5_373 -> m5_257  [key=2, style=dotted];
m5_374 -> m5_375  [key=0, style=solid];
m5_375 -> m5_11  [color=blue, key=0, style=bold];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_7  [key=2, style=dotted];
m5_117 -> m5_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_118 -> m5_116  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_12 -> m5_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_7  [key=2, style=dotted];
m5_13 -> m5_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_14 -> m5_12  [color=blue, key=0, style=bold];
m5_170 -> m5_363  [key=0, style=solid];
m5_170 -> m5_364  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_363 -> m5_364  [key=0, style=solid];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_81  [key=2, style=dotted];
m5_364 -> m5_90  [key=2, style=dotted];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_367  [key=2, style=dotted];
m5_365 -> m5_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_366 -> m5_170  [color=blue, key=0, style=bold];
m5_188 -> m5_189  [key=0, style=solid];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_7  [key=2, style=dotted];
m5_189 -> m5_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_190 -> m5_188  [color=blue, key=0, style=bold];
m5_71 -> m5_311  [key=0, style=solid];
m5_71 -> m5_318  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_71 -> m5_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_71 -> m5_320  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_314  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_311 -> m5_315  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_311 -> m5_316  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_138  [key=2, style=dotted];
m5_318 -> m5_90  [key=2, style=dotted];
m5_318 -> m5_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_318 -> m5_320  [color=darkseagreen4, key=1, label=keys, style=dashed];
m5_318 -> m5_321  [color=darkseagreen4, key=1, label=keys, style=dashed];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_296  [key=2, style=dotted];
m5_320 -> m5_209  [key=2, style=dotted];
m5_320 -> m5_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_320 -> m5_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_320 -> m5_322  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_320 -> m5_323  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_320 -> m5_327  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_332  [key=2, style=dotted];
m5_312 -> m5_314  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_317  [key=0, style=solid];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_93  [key=2, style=dotted];
m5_316 -> m5_314  [key=0, style=solid];
m5_316 -> m5_332  [key=2, style=dotted];
m5_316 -> m5_316  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> n27  [key=2, style=dotted];
m5_313 -> m5_315  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_313 -> m5_317  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_313 -> m5_328  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_138  [key=2, style=dotted];
m5_317 -> m5_90  [key=2, style=dotted];
m5_317 -> m5_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_317 -> m5_326  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_297  [key=2, style=dotted];
m5_326 -> m5_327  [key=0, style=solid];
m5_326 -> m5_330  [key=0, style=solid];
m5_319 -> m5_320  [key=0, style=solid];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_324  [key=0, style=solid];
m5_321 -> m5_323  [color=darkseagreen4, key=1, label=key, style=dashed];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_321  [key=0, style=solid];
m5_322 -> m5_269  [key=2, style=dotted];
m5_323 -> m5_321  [key=0, style=solid];
m5_323 -> m5_297  [key=2, style=dotted];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_299  [key=2, style=dotted];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_298  [key=2, style=dotted];
m5_324 -> m5_328  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_324 -> m5_330  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_325 -> m5_328  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_325 -> m5_329  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_330 -> m5_331  [key=0, style=solid];
m5_329 -> m5_326  [key=0, style=solid];
m5_329 -> m5_329  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_331 -> m5_71  [color=blue, key=0, style=bold];
m5_126 -> m5_127  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_81  [key=2, style=dotted];
m5_127 -> m5_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_128 -> m5_126  [color=blue, key=0, style=bold];
m5_187 -> m5_274  [key=0, style=solid];
m5_187 -> m5_281  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_187 -> m5_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_187 -> m5_283  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_278  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_274 -> m5_279  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_138  [key=2, style=dotted];
m5_281 -> m5_90  [key=2, style=dotted];
m5_281 -> m5_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_281 -> m5_283  [color=darkseagreen4, key=1, label=keys, style=dashed];
m5_281 -> m5_284  [color=darkseagreen4, key=1, label=keys, style=dashed];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_296  [key=2, style=dotted];
m5_283 -> m5_209  [key=2, style=dotted];
m5_283 -> m5_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_283 -> m5_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_283 -> m5_285  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_283 -> m5_286  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_283 -> m5_290  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m5_275 -> m5_276  [key=0, style=solid];
m5_275 -> n27  [key=2, style=dotted];
m5_275 -> m5_278  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_275 -> m5_281  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_275 -> m5_289  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_275 -> m5_291  [color=darkseagreen4, key=1, label=dates, style=dashed];
m5_278 -> m5_279  [key=0, style=solid];
m5_278 -> m5_93  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_295  [key=2, style=dotted];
m5_279 -> m5_279  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_289 -> m5_290  [key=0, style=solid];
m5_289 -> m5_293  [key=0, style=solid];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_297  [key=2, style=dotted];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_281  [key=0, style=solid];
m5_280 -> m5_277  [key=0, style=solid];
m5_280 -> m5_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_282 -> m5_283  [key=0, style=solid];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_287  [key=0, style=solid];
m5_284 -> m5_286  [color=darkseagreen4, key=1, label=key, style=dashed];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_284  [key=0, style=solid];
m5_285 -> m5_269  [key=2, style=dotted];
m5_286 -> m5_284  [key=0, style=solid];
m5_286 -> m5_297  [key=2, style=dotted];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_299  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_298  [key=2, style=dotted];
m5_287 -> m5_291  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_287 -> m5_293  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_290  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_288 -> m5_291  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_288 -> m5_292  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_293 -> m5_294  [key=0, style=solid];
m5_292 -> m5_289  [key=0, style=solid];
m5_292 -> m5_292  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_294 -> m5_187  [color=blue, key=0, style=bold];
m5_413 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_26  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_37  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_46  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_59  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_66  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_69  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_73  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_76  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_79  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_95  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_98  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_106  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_109  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_117  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_120  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_127  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_130  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_135  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_162  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_165  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_167  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_172  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_175  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_177  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_182  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_185  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_189  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_192  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_195  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_205  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_223  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_226  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_229  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_232  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_235  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_251  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_346  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_352  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_365  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_387  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_413 -> m5_406  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m5_414 -> m5_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_414 -> m5_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_415 -> m5_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_415 -> m5_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_416 -> m5_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_417 -> m5_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_418 -> m5_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_419 -> m5_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_420 -> m5_98  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_421 -> m5_98  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_422 -> m5_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_423 -> m5_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_424 -> m5_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_425 -> m5_120  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_426 -> m5_148  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_427 -> m5_165  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_427 -> m5_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_428 -> m5_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_429 -> m5_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_430 -> m5_175  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_430 -> m5_176  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_431 -> m5_176  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_432 -> m5_176  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_433 -> m5_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_434 -> m5_267  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m5_435 -> m5_271  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m5_436 -> m5_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_437 -> m5_337  [color=darkseagreen4, key=1, label=string, style=dashed];
}
