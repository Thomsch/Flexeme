digraph  {
n64 [label="Hangfire.Server.AutomaticRetryProcess", span=""];
n65 [label=i, span=""];
n66 [label=nextTry, span=""];
n0 [label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n1 [label="innerProcess == null", span="32-32", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n3 [label="_innerProcess = innerProcess", span="34-34", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n2 [label="throw new ArgumentNullException(''innerProcess'');", span="32-32", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n4 [label="_logger = LogProvider.GetLogger(_innerProcess.GetType())", span="35-35", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n5 [label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="37-37", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n10 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n11 [label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353", cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)"];
n6 [label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="38-38", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n7 [label="DelayCallback = GetBackOffMultiplier", span="39-39", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n8 [label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30", cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)"];
n9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n12 [label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n13 [label="var i = 0", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n15 [label="_innerProcess.Execute(context)", span="57-57", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n25 [label="context.CancellationToken.WaitHandle.WaitOne(nextTry)", span="83-83", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n26 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="84-84", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n14 [label="i <= MaxRetryAttempts", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n20 [label="i >= MaxRetryAttempts - 1", span="67-67", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n22 [label="var nextTry = DelayCallback(i)", span="69-69", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n23 [label="var logLevel = GetLogLevel(i)", span="70-70", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n24 [label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n36 [label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79", cluster="lambda expression"];
n27 [label="i++", span="53-53", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n28 [label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n16 [label="return;", span="58-58", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n29 [label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26", cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n17 [label=OperationCanceledException, span="60-60", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n18 [label="throw;", span="62-62", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n19 [label=Exception, span="64-64", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n21 [label="throw;", span="67-67", cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)"];
n30 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n31 [label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n32 [label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54", cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)"];
n35 [label="Entry lambda expression", span="74-79", cluster="lambda expression"];
n33 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)"];
n34 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()"];
n37 [label="Exit lambda expression", span="74-79", cluster="lambda expression"];
n38 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
n39 [label=i, span="91-91", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n40 [label=0, span="93-93", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n42 [label=1, span="95-95", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n44 [label=2, span="97-97", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n41 [label="return LogLevel.Debug;", span="94-94", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n43 [label="return LogLevel.Info;", span="96-96", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n45 [label="return LogLevel.Warn;", span="98-98", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n46 [label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n47 [label="return LogLevel.Error;", span="101-101", cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)"];
n48 [label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()"];
n49 [label="return _innerProcess.ToString();", span="106-106", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()"];
n50 [label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104", cluster="Hangfire.Server.AutomaticRetryProcess.ToString()"];
n51 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()"];
n52 [label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)"];
n53 [label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="112-112", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)"];
n54 [label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="113-114", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)"];
n57 [label="Entry System.Random.Random(int)", span="0-0", cluster="System.Random.Random(int)"];
n58 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()"];
n59 [label="Entry System.Guid.GetHashCode()", span="0-0", cluster="System.Guid.GetHashCode()"];
n55 [label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="116-116", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)"];
n60 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)"];
n61 [label="Entry System.Random.Next(int, int)", span="0-0", cluster="System.Random.Next(int, int)"];
n56 [label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109", cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)"];
n62 [label="Entry System.Math.Min(double, double)", span="0-0", cluster="System.Math.Min(double, double)"];
n63 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
d8 [label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", color=green, community=0];
d228 [label="HangFire.Redis.RedisConnection", span=""];
d7 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()"];
d9 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()"];
d10 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr"];
d11 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction"];
d1 [label="Redis = redis", span="34-34", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)"];
d4 [label="Redis.Dispose()", span="41-41", cluster="HangFire.Redis.RedisConnection.Dispose()"];
d22 [label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d23 [label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d25 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="95-98", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d26 [label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d36 [label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)"];
d48 [label="var transaction = Redis.CreateTransaction()", span="130-130", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d70 [label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d105 [label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d118 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)"];
d121 [label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)"];
d127 [label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)"];
d134 [label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d143 [label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d148 [label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)"];
d152 [label="var transaction = Redis.CreateTransaction()", span="274-274", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d174 [label="RemoveServer(Redis, serverId)", span="301-301", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)"];
d191 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="322-325", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)"];
d194 [label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d197 [label="var pipeline = Redis.CreatePipeline()", span="335-335", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d206 [label="RemoveServer(Redis, heartbeat.Key)", span="363-363", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d177 [label="var transaction = redis.CreateTransaction()", span="306-306", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)"];
d0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)"];
d2 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)"];
d3 [label="Entry HangFire.Redis.RedisConnection.Dispose()", span="39-39", cluster="HangFire.Redis.RedisConnection.Dispose()"];
d5 [label="Exit HangFire.Redis.RedisConnection.Dispose()", span="39-39", cluster="HangFire.Redis.RedisConnection.Dispose()"];
d6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose"];
d21 [label="queueIndex == 0", span="65-65", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d19 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d20 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d24 [label="jobId == null", span="78-78", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists"];
d31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists"];
d29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d32 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)"];
d33 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash"];
d18 [label="queueName = queues[queueIndex]", span="60-60", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d27 [label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d34 [label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30", cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)"];
d35 [label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)"];
d37 [label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)"];
d38 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock"];
d47 [label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(createdAt))", span="128-128", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d49 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d50 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d51 [label="transaction.Commit()", span="141-141", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d69 [label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d71 [label="storedData.Count == 0", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d96 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash"];
d78 [label="storedData.ContainsKey(''Type'')", span="160-160", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d79 [label="type = storedData[''Type'']", span="162-162", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d80 [label="storedData.ContainsKey(''Method'')", span="164-164", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d81 [label="method = storedData[''Method'']", span="166-166", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d82 [label="storedData.ContainsKey(''ParameterTypes'')", span="168-168", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d83 [label="parameterTypes = storedData[''ParameterTypes'']", span="170-170", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d84 [label="storedData.ContainsKey(''Arguments'')", span="172-172", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d85 [label="arguments = storedData[''Arguments'']", span="174-174", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d86 [label="storedData.ContainsKey(''CreatedAt'')", span="176-176", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d87 [label="createdAt = storedData[''CreatedAt'']", span="178-178", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d94 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.FromNullableStringTimestamp(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d102 [label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d103 [label="jobId == null", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d106 [label="entries.Count == 0", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d108 [label="var stateData = new Dictionary<string, string>(entries)", span="213-213", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d111 [label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d117 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)"];
d119 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)"];
d120 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)"];
d122 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)"];
d123 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash"];
d124 [label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)"];
d125 [label="key == null", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)"];
d128 [label="return new HashSet<string>(result);", span="245-245", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)"];
d130 [label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107", cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)"];
d131 [label="Entry Unk.GetAllItemsFromSortedSet", span="", cluster="Unk.GetAllItemsFromSortedSet"];
d133 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d135 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
d136 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore"];
d137 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault"];
d138 [label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d141 [label="keyValuePairs == null", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d144 [label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d64 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash"];
d145 [label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)"];
d146 [label="key == null", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)"];
d149 [label="return result.Count != 0 ? result : null;", span="269-269", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)"];
d151 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d153 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d154 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="279-285", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d157 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d158 [label="transaction.Commit()", span="295-295", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d173 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)"];
d175 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)"];
d176 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)"];
d190 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)"];
d192 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)"];
d193 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d195 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d210 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet"];
d198 [label=serverNames, span="337-337", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d196 [label="var utcNow = DateTime.UtcNow", span="333-333", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d211 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline"];
d200 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="341-349", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d201 [label="pipeline.Flush()", span="352-352", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d205 [label="utcNow > maxTime.Add(timeOut)", span="361-361", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d204 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d207 [label="removedServerCount++", span="364-364", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d178 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)"];
d179 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)"];
d180 [label="transaction.Commit()", span="316-316", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)"];
d17 [label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d15 [label="var queueIndex = 0", span="53-53", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d66 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138", cluster="lambda expression"];
d62 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134", cluster="lambda expression"];
d165 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="279-285", cluster="lambda expression"];
d170 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292", cluster="lambda expression"];
d187 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314", cluster="lambda expression"];
d12 [label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d39 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d42 [label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d46 [label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d58 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
d40 [label="var jobId = Guid.NewGuid().ToString()", span="118-118", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d59 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand"];
d61 [label="Entry lambda expression", span="132-134", cluster="lambda expression"];
d65 [label="Entry lambda expression", span="136-138", cluster="lambda expression"];
d52 [label="return jobId;", span="144-144", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d60 [label="Entry Unk.Commit", span="", cluster="Unk.Commit"];
d95 [label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d72 [label="return null;", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d73 [label="string type = null", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d77 [label="string createdAt = null", span="158-158", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d97 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey"];
d90 [label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d88 [label="Job job = null", span="181-181", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d91 [label="job = invocationData.Deserialize()", span="188-188", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d93 [label="loadException = ex", span="192-192", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d100 [label="Entry HangFire.Storage.JobData.JobData()", span="21-21", cluster="HangFire.Storage.JobData.JobData()"];
d101 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)"];
d112 [label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d104 [label="throw new ArgumentNullException(''jobId'');", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d107 [label="return null;", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d109 [label="stateData.Remove(''State'')", span="214-214", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d114 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr"];
d110 [label="stateData.Remove(''Reason'')", span="215-215", cluster="HangFire.Redis.RedisConnection.GetStateData(string)"];
d116 [label="Entry HangFire.Storage.StateData.StateData()", span="21-21", cluster="HangFire.Storage.StateData.StateData()"];
d129 [label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)"];
d126 [label="throw new ArgumentNullException(''key'');", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)"];
d132 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr"];
d139 [label="key == null", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d142 [label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d140 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
d150 [label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)"];
d147 [label="throw new ArgumentNullException(''key'');", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)"];
d159 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d161 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277", cluster="lambda expression"];
d155 [label="context.Queues", span="287-287", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d160 [label="Entry lambda expression", span="276-277", cluster="lambda expression"];
d164 [label="Entry lambda expression", span="279-285", cluster="lambda expression"];
d156 [label="var queue1 = queue", span="289-289", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)"];
d169 [label="Entry lambda expression", span="290-292", cluster="lambda expression"];
d181 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)"];
d183 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310", cluster="lambda expression"];
d209 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d167 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
d222 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="345-349", cluster="lambda expression"];
d203 [label=heartbeats, span="356-356", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d199 [label="var name = serverName", span="339-339", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d216 [label="Entry lambda expression", span="342-344", cluster="lambda expression"];
d221 [label="Entry lambda expression", span="345-349", cluster="lambda expression"];
d202 [label="var removedServerCount = 0", span="355-355", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d212 [label="Entry Unk.Flush", span="", cluster="Unk.Flush"];
d215 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
d213 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)"];
d214 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)"];
d208 [label="return removedServerCount;", span="368-368", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)"];
d182 [label="Entry lambda expression", span="308-310", cluster="lambda expression"];
d186 [label="Entry lambda expression", span="312-314", cluster="lambda expression"];
d16 [label="cancellationToken.ThrowIfCancellationRequested()", span="57-57", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d14 [label="string queueName", span="52-52", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d229 [label=jobId, span=""];
d231 [label="System.TimeSpan", span=""];
d67 [label="Exit lambda expression", span="136-138", cluster="lambda expression"];
d68 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn"];
d230 [label=storedParameters, span=""];
d63 [label="Exit lambda expression", span="132-134", cluster="lambda expression"];
d232 [label=string, span=""];
d233 [label="HangFire.Server.ServerContext", span=""];
d166 [label="Exit lambda expression", span="279-285", cluster="lambda expression"];
d168 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)"];
d234 [label=queue1, span=""];
d171 [label="Exit lambda expression", span="290-292", cluster="lambda expression"];
d172 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList"];
d235 [label=string, span=""];
d188 [label="Exit lambda expression", span="312-314", cluster="lambda expression"];
d189 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry"];
d13 [label="string jobId", span="51-51", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
d53 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d41 [label="var invocationData = InvocationData.Serialize(job)", span="120-120", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d43 [label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)"];
d44 [label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d45 [label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
d54 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()"];
d55 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()"];
d74 [label="string method = null", span="155-155", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d76 [label="string arguments = null", span="157-157", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d75 [label="string parameterTypes = null", span="156-156", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d89 [label="JobLoadException loadException = null", span="182-182", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d98 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)"];
d92 [label=JobLoadException, span="190-190", cluster="HangFire.Redis.RedisConnection.GetJobData(string)"];
d99 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()"];
d113 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d115 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)"];
d162 [label="Exit lambda expression", span="276-277", cluster="lambda expression"];
d163 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet"];
d184 [label="Exit lambda expression", span="308-310", cluster="lambda expression"];
d185 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet"];
d236 [label=name, span=""];
d237 [label=heartbeats, span=""];
d223 [label="Exit lambda expression", span="345-349", cluster="lambda expression"];
d224 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)"];
d225 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp"];
d226 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp"];
d227 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d217 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344", cluster="lambda expression"];
d218 [label="Exit lambda expression", span="342-344", cluster="lambda expression"];
d28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()"];
d56 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)"];
d219 [label="Entry Unk.Format", span="", cluster="Unk.Format"];
d220 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash"];
m0_11 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="BackgroundJobServer.cs"];
m0_4 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="BackgroundJobServer.cs"];
m0_20 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="BackgroundJobServer.cs"];
m0_6 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="BackgroundJobServer.cs"];
m0_7 [label="var date = new DateTime(2012, 12, 12)", span="20-20", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="BackgroundJobServer.cs"];
m0_8 [label="var state = new ScheduledState(date)", span="21-21", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="BackgroundJobServer.cs"];
m0_9 [label="Assert.Equal(date, state.EnqueueAt)", span="22-22", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="BackgroundJobServer.cs"];
m0_10 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="BackgroundJobServer.cs"];
m0_0 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="BackgroundJobServer.cs"];
m0_1 [label="var state = new ScheduledState(DateTime.UtcNow)", span="13-13", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="BackgroundJobServer.cs"];
m0_2 [label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="BackgroundJobServer.cs"];
m0_3 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="BackgroundJobServer.cs"];
m0_21 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobServer.cs"];
m0_34 [label="Entry Unk.False", span="", cluster="Unk.False", file="BackgroundJobServer.cs"];
m0_17 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_35 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_36 [label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_37 [label="Assert.False(state.IgnoreJobLoadException)", span="56-56", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_38 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobServer.cs"];
m0_28 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="BackgroundJobServer.cs"];
m0_30 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_31 [label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_32 [label="Assert.False(state.IsFinal)", span="49-49", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_33 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobServer.cs"];
m0_18 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BackgroundJobServer.cs"];
m0_22 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobServer.cs"];
m0_23 [label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobServer.cs"];
m0_24 [label="var data = state.SerializeData()", span="38-38", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobServer.cs"];
m0_25 [label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", span="40-40", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobServer.cs"];
m0_26 [label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobServer.cs"];
m0_27 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobServer.cs"];
m0_12 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="BackgroundJobServer.cs"];
m0_13 [label="var state = new ScheduledState(TimeSpan.FromDays(1))", span="28-28", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="BackgroundJobServer.cs"];
m0_14 [label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", span="29-29", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="BackgroundJobServer.cs"];
m0_15 [label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", span="30-30", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="BackgroundJobServer.cs"];
m0_16 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="BackgroundJobServer.cs"];
m0_19 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BackgroundJobServer.cs"];
m0_29 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="BackgroundJobServer.cs"];
m3_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundProcessContext.cs"];
m3_2 [label="Assert.Equal(Math.Min(Environment.ProcessorCount * 5, 40), options.WorkerCount)", span="13-13", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="BackgroundProcessContext.cs"];
m3_1 [label="var options = CreateOptions()", span="11-11", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundProcessContext.cs"];
m3_3 [label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="14-14", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundProcessContext.cs"];
m3_4 [label="Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="15-15", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundProcessContext.cs"];
m3_5 [label="Assert.True(options.SchedulePollingInterval > TimeSpan.Zero)", span="16-16", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundProcessContext.cs"];
m3_45 [label="return new BackgroundJobServerOptions();", span="65-65", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="BackgroundProcessContext.cs"];
m3_33 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundProcessContext.cs"];
m3_9 [label="stateMachineFactory == null", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_47 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundProcessContext.cs"];
m3_7 [label="connection == null", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_46 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="BackgroundProcessContext.cs"];
m3_15 [label="_stateMachineFactory = stateMachineFactory", span="57-57", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_8 [label="throw new ArgumentNullException(''connection'');", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_54 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_48 [label=options, span="", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessContext.cs"];
m3_49 [label=options, span="", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessContext.cs"];
m3_50 [label=options, span="", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessContext.cs"];
m3_51 [label=options, span="", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessContext.cs"];
m3_52 [label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessContext.cs"];
m3_26 [label=_jobWasCreated, span="100-100", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_28 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_29 [label="!_parameters.ContainsKey(name)", span="107-107", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_34 [label="var options = CreateOptions()", span="49-49", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundProcessContext.cs"];
m3_44 [label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_22 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundProcessContext.cs"];
m3_11 [label="job == null", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_12 [label="throw new ArgumentNullException(''job'');", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_13 [label="initialState == null", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_14 [label="throw new ArgumentNullException(''initialState'');", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundProcessContext.cs"];
m3_40 [label="throw new ArgumentNullException(''name'');", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_41 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_42 [label=Exception, span="139-139", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_43 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_53 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="BackgroundProcessContext.cs"];
m3_6 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="BackgroundProcessContext.cs"];
m3_16 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="BackgroundProcessContext.cs"];
m3_17 [label="options.WorkerCount = 0", span="25-25", cluster="lambda expression", file="BackgroundProcessContext.cs"];
m3_18 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="BackgroundProcessContext.cs"];
m3_19 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundProcessContext.cs"];
m3_10 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundProcessContext.cs"];
m3_20 [label="var options = CreateOptions()", span="31-31", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="BackgroundProcessContext.cs"];
m3_36 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundProcessContext.cs"];
m3_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundProcessContext.cs"];
m3_24 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_23 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_25 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_31 [label="_parameters[name] = serializedValue", span="113-113", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_30 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_32 [label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessContext.cs"];
m3_38 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_39 [label="String.IsNullOrWhiteSpace(name)", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessContext.cs"];
m3_21 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="33-34", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", color=red, community=0, file="BackgroundProcessContext.cs"];
m3_35 [label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="51-52", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="BackgroundProcessContext.cs"];
m3_55 [label="HangFire.Client.CreateContext", span="", file="BackgroundProcessContext.cs"];
m4_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundProcessContextFacts.cs"];
m4_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundProcessContextFacts.cs"];
m4_27 [label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="BackgroundProcessContextFacts.cs"];
m4_0 [label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_1 [label="RecurringJobs = new List<RecurringJobDto>()", span="11-11", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_2 [label="var connection = JobStorage.Current.GetConnection()", span="13-13", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_3 [label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_5 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_18 [label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_4 [label=ids, span="17-17", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_7 [label="RecurringJobs.Add(new RecurringJobDto { Id = id, Removed = true })", span="23-23", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_8 [label="var dto = new RecurringJobDto { Id = id }", span="27-27", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_6 [label="hash == null", span="21-21", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_9 [label="dto.Cron = hash[''Cron'']", span="28-28", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_10 [label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="32-32", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_14 [label="hash.ContainsKey(''NextExecution'')", span="40-40", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_15 [label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="42-42", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_16 [label="hash.ContainsKey(''LastJobId'')", span="45-45", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_17 [label="dto.LastJobId = hash[''LastJobId'']", span="47-47", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_21 [label="hash.ContainsKey(''LastExecution'')", span="56-56", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_22 [label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="58-58", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_11 [label="dto.Job = invocationData.Deserialize()", span="33-33", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_13 [label="dto.LoadException = ex", span="37-37", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_20 [label="dto.LastJobState = stateData.Name", span="52-52", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_23 [label="RecurringJobs.Add(dto)", span="61-61", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_12 [label=JobLoadException, span="35-35", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_19 [label="stateData != null", span="50-50", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_24 [label="Exit HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="BackgroundProcessContextFacts.cs"];
m4_31 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundProcessContextFacts.cs"];
m4_32 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="BackgroundProcessContextFacts.cs"];
m4_35 [label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55", cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="BackgroundProcessContextFacts.cs"];
m4_29 [label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="BackgroundProcessContextFacts.cs"];
m4_36 [label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="BackgroundProcessContextFacts.cs"];
m4_30 [label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68", cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="BackgroundProcessContextFacts.cs"];
m4_28 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundProcessContextFacts.cs"];
m4_26 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="BackgroundProcessContextFacts.cs"];
m4_37 [label="HangFire.Web.Pages.RecurringJobsPage", span="", file="BackgroundProcessContextFacts.cs"];
m5_10 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="BackgroundProcessExtensions.cs"];
m5_11 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="BackgroundProcessExtensions.cs"];
m5_12 [label="transaction.IncrementCounter(''stats:succeeded'')", span="59-59", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="BackgroundProcessExtensions.cs"];
m5_13 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="BackgroundProcessExtensions.cs"];
m5_14 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="BackgroundProcessExtensions.cs"];
m5_5 [label="Entry HangFire.States.SucceededState.SerializeData()", span="45-45", cluster="HangFire.States.SucceededState.SerializeData()", file="BackgroundProcessExtensions.cs"];
m5_6 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.SerializeDateTime(SucceededAt) },\r\n                { ''PerformanceDuration'', PerformanceDuration.ToString(CultureInfo.InvariantCulture) },\r\n                { ''Latency'', Latency.ToString(CultureInfo.InvariantCulture) }\r\n            };", span="47-52", cluster="HangFire.States.SucceededState.SerializeData()", color=green, community=0, file="BackgroundProcessExtensions.cs"];
m5_7 [label="Exit HangFire.States.SucceededState.SerializeData()", span="45-45", cluster="HangFire.States.SucceededState.SerializeData()", file="BackgroundProcessExtensions.cs"];
m5_15 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="BackgroundProcessExtensions.cs"];
m5_16 [label="transaction.DecrementCounter(''stats:succeeded'')", span="64-64", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="BackgroundProcessExtensions.cs"];
m5_17 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="BackgroundProcessExtensions.cs"];
m5_18 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="BackgroundProcessExtensions.cs"];
m5_0 [label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="BackgroundProcessExtensions.cs"];
m5_1 [label="Latency = latency", span="30-30", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="BackgroundProcessExtensions.cs"];
m5_2 [label="PerformanceDuration = performanceDuration", span="31-31", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="BackgroundProcessExtensions.cs"];
m5_3 [label="SucceededAt = DateTime.UtcNow", span="32-32", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="BackgroundProcessExtensions.cs"];
m5_4 [label="Exit HangFire.States.SucceededState.SucceededState(long, long)", span="28-28", cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="BackgroundProcessExtensions.cs"];
m5_9 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="BackgroundProcessExtensions.cs"];
m5_19 [label="HangFire.States.SucceededState", span="", file="BackgroundProcessExtensions.cs"];
m6_6 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_7 [label="connection == null", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_9 [label="stateMachineFactory == null", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_11 [label="job == null", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_13 [label="initialState == null", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_15 [label="_stateMachineFactory = stateMachineFactory", span="57-57", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_16 [label="Connection = connection", span="59-59", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_17 [label="Job = job", span="60-60", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_18 [label="InitialState = initialState", span="61-61", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_8 [label="throw new ArgumentNullException(''connection'');", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_12 [label="throw new ArgumentNullException(''job'');", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_14 [label="throw new ArgumentNullException(''initialState'');", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_19 [label="Items = new Dictionary<string, object>()", span="63-63", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_20 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundProcessExtensionsFacts.cs"];
m6_35 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_23 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_24 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_28 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_29 [label="!_parameters.ContainsKey(name)", span="107-107", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_30 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_31 [label="_parameters[name] = serializedValue", span="113-113", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_25 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_26 [label=_jobWasCreated, span="100-100", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_32 [label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_46 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="BackgroundProcessExtensionsFacts.cs"];
m6_53 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="BackgroundProcessExtensionsFacts.cs"];
m6_0 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="BackgroundProcessExtensionsFacts.cs"];
m6_1 [label="Items = context.Items", span="40-40", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="BackgroundProcessExtensionsFacts.cs"];
m6_2 [label="JobId = context.JobId", span="41-41", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="BackgroundProcessExtensionsFacts.cs"];
m6_3 [label="_jobWasCreated = context._jobWasCreated", span="42-42", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="BackgroundProcessExtensionsFacts.cs"];
m6_4 [label="_parameters = context._parameters", span="43-43", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="BackgroundProcessExtensionsFacts.cs"];
m6_5 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="BackgroundProcessExtensionsFacts.cs"];
m6_45 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_38 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_39 [label="String.IsNullOrWhiteSpace(name)", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_41 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_43 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_40 [label="throw new ArgumentNullException(''name'');", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_42 [label=Exception, span="139-139", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_44 [label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_33 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_48 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessExtensionsFacts.cs"];
m6_49 [label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessExtensionsFacts.cs"];
m6_50 [label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessExtensionsFacts.cs"];
m6_51 [label="_jobWasCreated = true", span="152-152", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessExtensionsFacts.cs"];
m6_52 [label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="BackgroundProcessExtensionsFacts.cs"];
m6_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundProcessExtensionsFacts.cs"];
m6_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundProcessExtensionsFacts.cs"];
m6_54 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="BackgroundProcessExtensionsFacts.cs"];
m6_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="BackgroundProcessExtensionsFacts.cs"];
m6_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BackgroundProcessExtensionsFacts.cs"];
m6_55 [label="HangFire.Client.CreateContext", span="", file="BackgroundProcessExtensionsFacts.cs"];
m7_0 [label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs"];
m7_1 [label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs"];
m8_6 [label="Entry Mock<IBackgroundProcess>.cstr", span="", cluster="Mock<IBackgroundProcess>.cstr", file="InfiniteLoopComponentFacts.cs"];
m8_7 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="InfiniteLoopComponentFacts.cs"];
m8_22 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="InfiniteLoopComponentFacts.cs"];
m8_21 [label="Entry Unk.CreateProcess", span="", cluster="Unk.CreateProcess", file="InfiniteLoopComponentFacts.cs"];
m8_16 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="InfiniteLoopComponentFacts.cs"];
m8_17 [label="var process = CreateProcess(_innerComponent.Object)", span="30-30", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="InfiniteLoopComponentFacts.cs"];
m8_18 [label="var result = process.InnerProcess", span="31-31", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="InfiniteLoopComponentFacts.cs"];
m8_19 [label="Assert.Same(_innerComponent.Object, result)", span="32-32", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="InfiniteLoopComponentFacts.cs"];
m8_20 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="InfiniteLoopComponentFacts.cs"];
m8_32 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="InfiniteLoopComponentFacts.cs"];
m8_81 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InfiniteLoopComponentFacts.cs"];
m8_70 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="InfiniteLoopComponentFacts.cs"];
m8_23 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_24 [label="_innerComponent.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="39-40", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_25 [label="var process = CreateProcess(_innerComponent.Object)", span="42-42", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_26 [label="_context.CancellationTokenSource.CancelAfter(TimeSpan.FromMilliseconds(100))", span="43-43", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_27 [label="process.Execute(_context.Object)", span="46-46", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_28 [label="_innerComponent.Verify(x => x.Execute(_context.CancellationTokenSource.Token), Times.AtLeast(5))", span="49-49", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_29 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_44 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="InfiniteLoopComponentFacts.cs"];
m8_8 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs"];
m8_9 [label="Assert.Throws<ArgumentNullException>(() => new InfiniteLoopProcess(null))", span="24-24", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs"];
m8_10 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="InfiniteLoopComponentFacts.cs"];
m8_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="InfiniteLoopComponentFacts.cs"];
m8_79 [label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="39-39", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopComponentFacts.cs"];
m8_34 [label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="31-31", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopComponentFacts.cs"];
m8_0 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m8_1 [label="_innerComponent = new Mock<IServerComponent>()", span="16-16", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m8_2 [label="_innerProcess = new Mock<IBackgroundProcess>()", span="17-17", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m8_3 [label="_context = new BackgroundProcessContextMock()", span="18-18", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m8_4 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs"];
m8_80 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="InfiniteLoopComponentFacts.cs"];
m8_48 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_49 [label="_innerProcess.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="56-57", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_50 [label="var process = CreateProcess(_innerProcess.Object)", span="59-59", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_51 [label="_context.CancellationTokenSource.CancelAfter(TimeSpan.FromMilliseconds(100))", span="60-60", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_52 [label="process.Execute(_context.Object)", span="63-63", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_53 [label="_innerProcess.Verify(x => x.Execute(_context.Object), Times.AtLeast(5))", span="66-66", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_54 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_30 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="InfiniteLoopComponentFacts.cs"];
m8_5 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="InfiniteLoopComponentFacts.cs"];
m8_71 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_12 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_13 [label="new InfiniteLoopProcess(null)", span="24-24", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_14 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_37 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_41 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_45 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_38 [label="x.Execute(It.IsAny<CancellationToken>())", span="39-39", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_39 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_42 [label="Thread.Sleep(5)", span="40-40", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_43 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_46 [label="x.Execute(_context.CancellationTokenSource.Token)", span="49-49", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_47 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_55 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_58 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_61 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_56 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="56-56", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_57 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_59 [label="Thread.Sleep(5)", span="57-57", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_60 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_62 [label="x.Execute(_context.Object)", span="66-66", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_63 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_72 [label="x.Execute(It.IsAny<CancellationToken>())", span="80-80", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_73 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="InfiniteLoopComponentFacts.cs"];
m8_74 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m8_75 [label="var process = CreateProcess(_innerComponent.Object)", span="86-86", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m8_76 [label="var result = process.ToString()", span="87-87", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m8_77 [label="Assert.Equal(_innerComponent.Object.ToString(), result)", span="88-88", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m8_78 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs"];
m8_64 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_65 [label="var process = CreateProcess(_innerComponent.Object)", span="73-73", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_66 [label="_context.CancellationTokenSource.Cancel()", span="74-74", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_67 [label="process.Execute(_context.Object)", span="77-77", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_68 [label="_innerComponent.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="80-80", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_69 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs"];
m8_33 [label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="InfiniteLoopComponentFacts.cs"];
m8_35 [label="Entry Unk.AtLeast", span="", cluster="Unk.AtLeast", file="InfiniteLoopComponentFacts.cs"];
m8_15 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", span="23-23", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopComponentFacts.cs"];
m8_40 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="InfiniteLoopComponentFacts.cs"];
m8_82 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.IServerProcess)", span="91-91", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopComponentFacts.cs"];
m8_83 [label="return new InfiniteLoopProcess(process);", span="93-93", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopComponentFacts.cs"];
m8_84 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.IServerProcess)", span="91-91", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.IServerProcess)", file="InfiniteLoopComponentFacts.cs"];
m8_31 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="InfiniteLoopComponentFacts.cs"];
m8_36 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="InfiniteLoopComponentFacts.cs"];
m8_85 [label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span="", file="InfiniteLoopComponentFacts.cs"];
m9_4 [label="Redis.Dispose()", span="41-41", cluster="HangFire.Redis.RedisConnection.Dispose()", file="InfiniteLoopProcess.cs"];
m9_113 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="InfiniteLoopProcess.cs"];
m9_168 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="InfiniteLoopProcess.cs"];
m9_25 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="95-98", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_12 [label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_13 [label="string jobId", span="51-51", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_16 [label="cancellationToken.ThrowIfCancellationRequested()", span="57-57", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_17 [label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_18 [label="queueName = queues[queueIndex]", span="60-60", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_14 [label="string queueName", span="52-52", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_15 [label="var queueIndex = 0", span="53-53", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_21 [label="queueIndex == 0", span="65-65", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_19 [label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_20 [label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_26 [label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_22 [label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_23 [label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_24 [label="jobId == null", span="78-78", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_27 [label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49", cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs"];
m9_35 [label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_36 [label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_37 [label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107", cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_58 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InfiniteLoopProcess.cs"];
m9_98 [label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24", cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="InfiniteLoopProcess.cs"];
m9_131 [label="Entry Unk.GetAllItemsFromSortedSet", span="", cluster="Unk.GetAllItemsFromSortedSet", file="InfiniteLoopProcess.cs"];
m9_50 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_39 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_40 [label="var jobId = Guid.NewGuid().ToString()", span="118-118", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_41 [label="var invocationData = InvocationData.Serialize(job)", span="120-120", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_42 [label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_47 [label="storedParameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(createdAt))", span="128-128", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_49 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_52 [label="return jobId;", span="144-144", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_43 [label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_44 [label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_45 [label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_46 [label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_48 [label="var transaction = Redis.CreateTransaction()", span="130-130", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_51 [label="transaction.Commit()", span="141-141", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_53 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_64 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="InfiniteLoopProcess.cs"];
m9_133 [label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="InfiniteLoopProcess.cs"];
m9_134 [label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="InfiniteLoopProcess.cs"];
m9_135 [label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248", cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="InfiniteLoopProcess.cs"];
m9_226 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="InfiniteLoopProcess.cs"];
m9_96 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="InfiniteLoopProcess.cs"];
m9_102 [label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_103 [label="jobId == null", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_105 [label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_104 [label="throw new ArgumentNullException(''jobId'');", span="206-206", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_106 [label="entries.Count == 0", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_108 [label="var stateData = new Dictionary<string, string>(entries)", span="213-213", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_111 [label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_107 [label="return null;", span="211-211", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_109 [label="stateData.Remove(''State'')", span="214-214", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_110 [label="stateData.Remove(''Reason'')", span="215-215", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_112 [label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204", cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="InfiniteLoopProcess.cs"];
m9_114 [label="Entry Dictionary<string, string>.cstr", span="", cluster="Dictionary<string, string>.cstr", file="InfiniteLoopProcess.cs"];
m9_225 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="InfiniteLoopProcess.cs"];
m9_11 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="InfiniteLoopProcess.cs"];
m9_33 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="InfiniteLoopProcess.cs"];
m9_130 [label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107", cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="InfiniteLoopProcess.cs"];
m9_163 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="InfiniteLoopProcess.cs"];
m9_193 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_194 [label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_205 [label="utcNow > maxTime.Add(timeOut)", span="361-361", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_195 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_198 [label=serverNames, span="337-337", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_196 [label="var utcNow = DateTime.UtcNow", span="333-333", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_200 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="341-349", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_203 [label=heartbeats, span="356-356", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_197 [label="var pipeline = Redis.CreatePipeline()", span="335-335", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_201 [label="pipeline.Flush()", span="352-352", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_199 [label="var name = serverName", span="339-339", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_202 [label="var removedServerCount = 0", span="355-355", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_207 [label="removedServerCount++", span="364-364", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_208 [label="return removedServerCount;", span="368-368", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_204 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_206 [label="RemoveServer(Redis, heartbeat.Key)", span="363-363", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_209 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="InfiniteLoopProcess.cs"];
m9_30 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="InfiniteLoopProcess.cs"];
m9_191 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="322-325", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="InfiniteLoopProcess.cs"];
m9_190 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="InfiniteLoopProcess.cs"];
m9_192 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="InfiniteLoopProcess.cs"];
m9_189 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="InfiniteLoopProcess.cs"];
m9_179 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_176 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_177 [label="var transaction = redis.CreateTransaction()", span="306-306", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_178 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_180 [label="transaction.Commit()", span="316-316", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_181 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="InfiniteLoopProcess.cs"];
m9_7 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="InfiniteLoopProcess.cs"];
m9_8 [label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="InfiniteLoopProcess.cs"];
m9_9 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="InfiniteLoopProcess.cs"];
m9_101 [label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60", cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="InfiniteLoopProcess.cs"];
m9_120 [label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="InfiniteLoopProcess.cs"];
m9_121 [label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="InfiniteLoopProcess.cs"];
m9_122 [label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233", cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="InfiniteLoopProcess.cs"];
m9_68 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="InfiniteLoopProcess.cs"];
m9_55 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="InfiniteLoopProcess.cs"];
m9_138 [label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_139 [label="key == null", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_141 [label="keyValuePairs == null", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_143 [label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_140 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_142 [label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_144 [label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255", cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="InfiniteLoopProcess.cs"];
m9_212 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="InfiniteLoopProcess.cs"];
m9_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="InfiniteLoopProcess.cs"];
m9_10 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="InfiniteLoopProcess.cs"];
m9_227 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="InfiniteLoopProcess.cs"];
m9_215 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="InfiniteLoopProcess.cs"];
m9_116 [label="Entry HangFire.Storage.StateData.StateData()", span="21-21", cluster="HangFire.Storage.StateData.StateData()", file="InfiniteLoopProcess.cs"];
m9_151 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_152 [label="var transaction = Redis.CreateTransaction()", span="274-274", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_153 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_154 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="279-285", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_155 [label="context.Queues", span="287-287", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_157 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_158 [label="transaction.Commit()", span="295-295", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_156 [label="var queue1 = queue", span="289-289", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_159 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="InfiniteLoopProcess.cs"];
m9_167 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="InfiniteLoopProcess.cs"];
m9_224 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="InfiniteLoopProcess.cs"];
m9_34 [label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30", cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="InfiniteLoopProcess.cs"];
m9_57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="InfiniteLoopProcess.cs"];
m9_172 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="InfiniteLoopProcess.cs"];
m9_6 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="InfiniteLoopProcess.cs"];
m9_185 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="InfiniteLoopProcess.cs"];
m9_213 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="InfiniteLoopProcess.cs"];
m9_173 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="InfiniteLoopProcess.cs"];
m9_174 [label="RemoveServer(Redis, serverId)", span="301-301", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="InfiniteLoopProcess.cs"];
m9_175 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="InfiniteLoopProcess.cs"];
m9_214 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="InfiniteLoopProcess.cs"];
m9_69 [label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_70 [label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_71 [label="storedData.Count == 0", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_78 [label="storedData.ContainsKey(''Type'')", span="160-160", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_79 [label="type = storedData[''Type'']", span="162-162", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_80 [label="storedData.ContainsKey(''Method'')", span="164-164", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_81 [label="method = storedData[''Method'']", span="166-166", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_82 [label="storedData.ContainsKey(''ParameterTypes'')", span="168-168", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_83 [label="parameterTypes = storedData[''ParameterTypes'']", span="170-170", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_84 [label="storedData.ContainsKey(''Arguments'')", span="172-172", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_85 [label="arguments = storedData[''Arguments'']", span="174-174", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_86 [label="storedData.ContainsKey(''CreatedAt'')", span="176-176", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_87 [label="createdAt = storedData[''CreatedAt'']", span="178-178", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_94 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.FromNullableStringTimestamp(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_72 [label="return null;", span="152-152", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_73 [label="string type = null", span="154-154", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_74 [label="string method = null", span="155-155", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_90 [label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_75 [label="string parameterTypes = null", span="156-156", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_76 [label="string arguments = null", span="157-157", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_77 [label="string createdAt = null", span="158-158", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_88 [label="Job job = null", span="181-181", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_89 [label="JobLoadException loadException = null", span="182-182", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_91 [label="job = invocationData.Deserialize()", span="188-188", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_92 [label=JobLoadException, span="190-190", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_93 [label="loadException = ex", span="192-192", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_95 [label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147", cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="InfiniteLoopProcess.cs"];
m9_221 [label="Entry lambda expression", span="345-349", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_66 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_62 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_61 [label="Entry lambda expression", span="132-134", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_65 [label="Entry lambda expression", span="136-138", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_63 [label="Exit lambda expression", span="132-134", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_67 [label="Exit lambda expression", span="136-138", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_161 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_165 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="279-285", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_170 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_160 [label="Entry lambda expression", span="276-277", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_164 [label="Entry lambda expression", span="279-285", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_169 [label="Entry lambda expression", span="290-292", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_162 [label="Exit lambda expression", span="276-277", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_166 [label="Exit lambda expression", span="279-285", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_171 [label="Exit lambda expression", span="290-292", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_183 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_187 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_182 [label="Entry lambda expression", span="308-310", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_186 [label="Entry lambda expression", span="312-314", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_184 [label="Exit lambda expression", span="308-310", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_188 [label="Exit lambda expression", span="312-314", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_222 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="345-349", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_217 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_216 [label="Entry lambda expression", span="342-344", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_218 [label="Exit lambda expression", span="342-344", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_223 [label="Exit lambda expression", span="345-349", cluster="lambda expression", file="InfiniteLoopProcess.cs"];
m9_0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="InfiniteLoopProcess.cs"];
m9_1 [label="Redis = redis", span="34-34", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="InfiniteLoopProcess.cs"];
m9_2 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32", cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="InfiniteLoopProcess.cs"];
m9_32 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="InfiniteLoopProcess.cs"];
m9_137 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="InfiniteLoopProcess.cs"];
m9_145 [label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="InfiniteLoopProcess.cs"];
m9_146 [label="key == null", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="InfiniteLoopProcess.cs"];
m9_148 [label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="InfiniteLoopProcess.cs"];
m9_147 [label="throw new ArgumentNullException(''key'');", span="265-265", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="InfiniteLoopProcess.cs"];
m9_149 [label="return result.Count != 0 ? result : null;", span="269-269", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="InfiniteLoopProcess.cs"];
m9_150 [label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263", cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="InfiniteLoopProcess.cs"];
m9_211 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="InfiniteLoopProcess.cs"];
m9_118 [label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="InfiniteLoopProcess.cs"];
m9_117 [label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="InfiniteLoopProcess.cs"];
m9_119 [label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225", cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="InfiniteLoopProcess.cs"];
m9_54 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="InfiniteLoopProcess.cs"];
m9_123 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="InfiniteLoopProcess.cs"];
m9_60 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="InfiniteLoopProcess.cs"];
m9_210 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="InfiniteLoopProcess.cs"];
m9_124 [label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="InfiniteLoopProcess.cs"];
m9_125 [label="key == null", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="InfiniteLoopProcess.cs"];
m9_127 [label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="InfiniteLoopProcess.cs"];
m9_126 [label="throw new ArgumentNullException(''key'');", span="242-242", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="InfiniteLoopProcess.cs"];
m9_128 [label="return new HashSet<string>(result);", span="245-245", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="InfiniteLoopProcess.cs"];
m9_129 [label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240", cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="InfiniteLoopProcess.cs"];
m9_100 [label="Entry HangFire.Storage.JobData.JobData()", span="21-21", cluster="HangFire.Storage.JobData.JobData()", file="InfiniteLoopProcess.cs"];
m9_99 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="InfiniteLoopProcess.cs"];
m9_219 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="InfiniteLoopProcess.cs"];
m9_220 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="InfiniteLoopProcess.cs"];
m9_132 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr", file="InfiniteLoopProcess.cs"];
m9_59 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="InfiniteLoopProcess.cs"];
m9_136 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="InfiniteLoopProcess.cs"];
m9_31 [label="Entry Unk.PopAndPushItemBetweenLists", span="", cluster="Unk.PopAndPushItemBetweenLists", file="InfiniteLoopProcess.cs"];
m9_115 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="InfiniteLoopProcess.cs"];
m9_38 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="InfiniteLoopProcess.cs"];
m9_56 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="InfiniteLoopProcess.cs"];
m9_97 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="InfiniteLoopProcess.cs"];
m9_228 [label="HangFire.Redis.RedisConnection", span="", file="InfiniteLoopProcess.cs"];
m9_229 [label=jobId, span="", file="InfiniteLoopProcess.cs"];
m9_230 [label=storedParameters, span="", file="InfiniteLoopProcess.cs"];
m9_231 [label="System.TimeSpan", span="", file="InfiniteLoopProcess.cs"];
m9_232 [label=string, span="", file="InfiniteLoopProcess.cs"];
m9_233 [label="HangFire.Server.ServerContext", span="", file="InfiniteLoopProcess.cs"];
m9_234 [label=queue1, span="", file="InfiniteLoopProcess.cs"];
m9_235 [label=string, span="", file="InfiniteLoopProcess.cs"];
m9_236 [label=name, span="", file="InfiniteLoopProcess.cs"];
m9_237 [label=heartbeats, span="", file="InfiniteLoopProcess.cs"];
m10_0 [label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs"];
m10_1 [label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs"];
m12_0 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ServerBootstrapperFacts.cs"];
m12_1 [label="transaction == null", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ServerBootstrapperFacts.cs"];
m12_3 [label="Transaction = transaction", span="29-29", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ServerBootstrapperFacts.cs"];
m12_2 [label="throw new ArgumentNullException(''transaction'');", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ServerBootstrapperFacts.cs"];
m12_4 [label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ServerBootstrapperFacts.cs"];
m12_6 [label="HangFire.Common.States.StateApplyingContext", span="", file="ServerBootstrapperFacts.cs"];
n64 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n64 -> n55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.AutomaticRetryProcess"];
n65 -> n36  [key=1, style=dashed, color=darkseagreen4, label=i];
n66 -> n36  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ILongRunningProcess"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n2 -> n8  [key=0, style=solid];
n2 -> n9  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n4 -> n11  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n0  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
n12 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
n12 -> n26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
n13 -> n14  [key=0, style=solid];
n13 -> n20  [key=1, style=dashed, color=darkseagreen4, label=i];
n13 -> n22  [key=1, style=dashed, color=darkseagreen4, label=i];
n13 -> n23  [key=1, style=dashed, color=darkseagreen4, label=i];
n13 -> n24  [key=1, style=dashed, color=darkseagreen4, label=i];
n13 -> n36  [key=1, style=dashed, color=darkseagreen4, label=i];
n13 -> n27  [key=1, style=dashed, color=darkseagreen4, label=i];
n13 -> n13  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n15 -> n16  [key=0, style=solid];
n15 -> n29  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n33  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n34  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n28  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n30  [key=2, style=dotted];
n22 -> n24  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
n22 -> n36  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
n22 -> n25  [key=1, style=dashed, color=darkseagreen4, label=nextTry];
n23 -> n24  [key=0, style=solid];
n23 -> n31  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n32  [key=2, style=dotted];
n24 -> n35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n36 -> n37  [key=0, style=solid];
n36 -> n38  [key=2, style=dotted];
n27 -> n14  [key=0, style=solid];
n27 -> n27  [key=1, style=dashed, color=darkseagreen4, label=i];
n28 -> n12  [key=0, style=bold, color=blue];
n16 -> n28  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n18 -> n28  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n21 -> n28  [key=0, style=solid];
n31 -> n39  [key=0, style=solid];
n31 -> n13  [key=3, color=darkorchid, style=bold, label="Parameter variable int i"];
n31 -> n41  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
n31 -> n43  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
n31 -> n45  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
n31 -> n47  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Logging.LogLevel GetLogLevel"];
n35 -> n36  [key=0, style=solid];
n37 -> n35  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n39 -> n42  [key=0, style=solid];
n39 -> n44  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n41 -> n46  [key=0, style=solid];
n43 -> n46  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n46 -> n31  [key=0, style=bold, color=blue];
n47 -> n46  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=2, style=dotted];
n50 -> n48  [key=0, style=bold, color=blue];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=1, style=dashed, color=darkseagreen4, label=int];
n53 -> n54  [key=0, style=solid];
n53 -> n57  [key=2, style=dotted];
n53 -> n58  [key=2, style=dotted];
n53 -> n59  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n60  [key=2, style=dotted];
n54 -> n61  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n62  [key=2, style=dotted];
n55 -> n63  [key=2, style=dotted];
n56 -> n52  [key=0, style=bold, color=blue];
d8 -> d9  [key=0, style=solid, color=green];
d8 -> d10  [key=2, style=dotted, color=green];
d8 -> d11  [key=2, style=dotted, color=green];
d228 -> d8  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
d228 -> d1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d228 -> d206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
d7 -> d8  [key=0, style=solid, color=green];
d9 -> d7  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [key=2, style=dotted];
d22 -> d24  [key=0, style=solid];
d22 -> d30  [key=2, style=dotted];
d22 -> d25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d22 -> d26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d23 -> d24  [key=0, style=solid];
d23 -> d31  [key=2, style=dotted];
d23 -> d25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d23 -> d26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d25 -> d26  [key=0, style=solid];
d25 -> d29  [key=2, style=dotted];
d25 -> d32  [key=2, style=dotted];
d25 -> d33  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d34  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [key=2, style=dotted];
d48 -> d11  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d50  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d48 -> d51  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d70 -> d71  [key=0, style=solid];
d70 -> d29  [key=2, style=dotted];
d70 -> d96  [key=2, style=dotted];
d70 -> d78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d79  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d80  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d84  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d85  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d86  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d70 -> d94  [key=1, style=dashed, color=darkseagreen4, label=storedData];
d105 -> d106  [key=0, style=solid];
d105 -> d29  [key=2, style=dotted];
d105 -> d96  [key=2, style=dotted];
d105 -> d108  [key=1, style=dashed, color=darkseagreen4, label=entries];
d105 -> d111  [key=1, style=dashed, color=darkseagreen4, label=entries];
d118 -> d119  [key=0, style=solid];
d118 -> d29  [key=2, style=dotted];
d118 -> d33  [key=2, style=dotted];
d121 -> d122  [key=0, style=solid];
d121 -> d29  [key=2, style=dotted];
d121 -> d123  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d130  [key=2, style=dotted];
d127 -> d131  [key=2, style=dotted];
d134 -> d135  [key=0, style=solid];
d134 -> d136  [key=2, style=dotted];
d134 -> d137  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d143 -> d130  [key=2, style=dotted];
d143 -> d64  [key=2, style=dotted];
d148 -> d149  [key=0, style=solid];
d148 -> d130  [key=2, style=dotted];
d148 -> d96  [key=2, style=dotted];
d152 -> d11  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d152 -> d154  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d152 -> d157  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d152 -> d158  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d174 -> d175  [key=0, style=solid];
d174 -> d176  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d29  [key=2, style=dotted];
d191 -> d32  [key=2, style=dotted];
d191 -> d33  [key=2, style=dotted];
d194 -> d195  [key=0, style=solid];
d194 -> d210  [key=2, style=dotted];
d194 -> d198  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
d197 -> d198  [key=0, style=solid];
d197 -> d211  [key=2, style=dotted];
d197 -> d200  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
d197 -> d201  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
d206 -> d206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
d206 -> d207  [key=0, style=solid];
d206 -> d176  [key=2, style=dotted];
d177 -> d11  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d177 -> d179  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d177 -> d180  [key=1, style=dashed, color=darkseagreen4, label=transaction];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d3 -> d4  [key=0, style=solid];
d5 -> d3  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid];
d21 -> d23  [key=0, style=solid];
d19 -> d22  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
d19 -> d23  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
d19 -> d20  [key=0, style=solid];
d19 -> d29  [key=2, style=dotted];
d20 -> d22  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
d20 -> d23  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
d20 -> d21  [key=0, style=solid];
d20 -> d29  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d15  [key=0, style=solid];
d18 -> d26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
d27 -> d12  [key=0, style=bold, color=blue];
d35 -> d36  [key=0, style=solid];
d37 -> d35  [key=0, style=bold, color=blue];
d47 -> d48  [key=0, style=solid];
d47 -> d32  [key=2, style=dotted];
d47 -> d58  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d49 -> d59  [key=2, style=dotted];
d49 -> d61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d50 -> d51  [key=0, style=solid];
d50 -> d59  [key=2, style=dotted];
d50 -> d65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d51 -> d52  [key=0, style=solid];
d51 -> d60  [key=2, style=dotted];
d69 -> d70  [key=0, style=solid];
d71 -> d72  [key=0, style=solid];
d71 -> d73  [key=0, style=solid];
d78 -> d79  [key=0, style=solid];
d78 -> d80  [key=0, style=solid];
d78 -> d97  [key=2, style=dotted];
d79 -> d80  [key=0, style=solid];
d79 -> d90  [key=1, style=dashed, color=darkseagreen4, label=type];
d80 -> d81  [key=0, style=solid];
d80 -> d82  [key=0, style=solid];
d80 -> d97  [key=2, style=dotted];
d81 -> d82  [key=0, style=solid];
d81 -> d90  [key=1, style=dashed, color=darkseagreen4, label=method];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [key=0, style=solid];
d82 -> d97  [key=2, style=dotted];
d83 -> d84  [key=0, style=solid];
d83 -> d90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
d84 -> d85  [key=0, style=solid];
d84 -> d86  [key=0, style=solid];
d84 -> d97  [key=2, style=dotted];
d85 -> d86  [key=0, style=solid];
d85 -> d90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
d86 -> d87  [key=0, style=solid];
d86 -> d88  [key=0, style=solid];
d86 -> d97  [key=2, style=dotted];
d87 -> d88  [key=0, style=solid];
d87 -> d94  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
d94 -> d95  [key=0, style=solid];
d94 -> d100  [key=2, style=dotted];
d94 -> d97  [key=2, style=dotted];
d94 -> d101  [key=2, style=dotted];
d102 -> d105  [key=1, style=dashed, color=darkseagreen4, label=string];
d102 -> d103  [key=0, style=solid];
d103 -> d105  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d108  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d108 -> d114  [key=2, style=dotted];
d108 -> d110  [key=1, style=dashed, color=darkseagreen4, label=stateData];
d108 -> d111  [key=1, style=dashed, color=darkseagreen4, label=stateData];
d111 -> d112  [key=0, style=solid];
d111 -> d116  [key=2, style=dotted];
d111 -> d97  [key=2, style=dotted];
d117 -> d118  [key=0, style=solid];
d119 -> d117  [key=0, style=bold, color=blue];
d120 -> d121  [key=0, style=solid];
d122 -> d120  [key=0, style=bold, color=blue];
d124 -> d127  [key=1, style=dashed, color=darkseagreen4, label=string];
d124 -> d125  [key=0, style=solid];
d125 -> d127  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d128 -> d132  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d135 -> d133  [key=0, style=bold, color=blue];
d138 -> d143  [key=1, style=dashed, color=darkseagreen4, label=string];
d138 -> d139  [key=0, style=solid];
d138 -> d141  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
d141 -> d143  [key=0, style=solid];
d141 -> d142  [key=0, style=solid];
d144 -> d138  [key=0, style=bold, color=blue];
d145 -> d148  [key=1, style=dashed, color=darkseagreen4, label=string];
d145 -> d146  [key=0, style=solid];
d146 -> d148  [key=0, style=solid];
d146 -> d147  [key=0, style=solid];
d149 -> d150  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d151 -> d153  [key=1, style=dashed, color=darkseagreen4, label=string];
d151 -> d161  [key=1, style=dashed, color=darkseagreen4, label=string];
d151 -> d154  [key=1, style=dashed, color=darkseagreen4, label=string];
d151 -> d165  [key=1, style=dashed, color=darkseagreen4, label=string];
d151 -> d155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
d151 -> d157  [key=1, style=dashed, color=darkseagreen4, label=string];
d151 -> d170  [key=1, style=dashed, color=darkseagreen4, label=string];
d153 -> d154  [key=0, style=solid];
d153 -> d59  [key=2, style=dotted];
d153 -> d160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d154 -> d155  [key=0, style=solid];
d154 -> d59  [key=2, style=dotted];
d154 -> d164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d157 -> d155  [key=0, style=solid];
d157 -> d59  [key=2, style=dotted];
d157 -> d169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d158 -> d159  [key=0, style=solid];
d158 -> d60  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d175 -> d173  [key=0, style=bold, color=blue];
d176 -> d177  [key=0, style=solid];
d176 -> d178  [key=1, style=dashed, color=darkseagreen4, label=string];
d176 -> d183  [key=1, style=dashed, color=darkseagreen4, label=string];
d176 -> d179  [key=1, style=dashed, color=darkseagreen4, label=string];
d176 -> d187  [key=1, style=dashed, color=darkseagreen4, label=string];
d190 -> d191  [key=0, style=solid];
d192 -> d190  [key=0, style=bold, color=blue];
d193 -> d194  [key=0, style=solid];
d193 -> d205  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d195 -> d196  [key=0, style=solid];
d195 -> d167  [key=2, style=dotted];
d195 -> d200  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
d195 -> d222  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
d195 -> d203  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
d198 -> d199  [key=0, style=solid];
d198 -> d201  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d196 -> d205  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
d200 -> d198  [key=0, style=solid];
d200 -> d59  [key=2, style=dotted];
d200 -> d216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d200 -> d221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d201 -> d202  [key=0, style=solid];
d201 -> d212  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d205 -> d203  [key=0, style=solid];
d205 -> d215  [key=2, style=dotted];
d204 -> d206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
d204 -> d205  [key=0, style=solid];
d204 -> d204  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
d204 -> d213  [key=2, style=dotted];
d204 -> d214  [key=2, style=dotted];
d207 -> d207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
d207 -> d203  [key=0, style=solid];
d207 -> d208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
d178 -> d179  [key=0, style=solid];
d178 -> d59  [key=2, style=dotted];
d178 -> d182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d179 -> d180  [key=0, style=solid];
d179 -> d59  [key=2, style=dotted];
d179 -> d186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d180 -> d181  [key=0, style=solid];
d180 -> d60  [key=2, style=dotted];
d17 -> d21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
d17 -> d18  [key=0, style=solid];
d17 -> d17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
d15 -> d17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
d15 -> d16  [key=0, style=solid];
d66 -> d29  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=2, style=dotted];
d62 -> d29  [key=2, style=dotted];
d62 -> d64  [key=2, style=dotted];
d62 -> d63  [key=0, style=solid];
d165 -> d29  [key=2, style=dotted];
d165 -> d32  [key=2, style=dotted];
d165 -> d64  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d165 -> d167  [key=2, style=dotted];
d165 -> d168  [key=2, style=dotted];
d170 -> d29  [key=2, style=dotted];
d170 -> d171  [key=0, style=solid];
d170 -> d172  [key=2, style=dotted];
d187 -> d29  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d189  [key=2, style=dotted];
d12 -> d18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
d12 -> d17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
d12 -> d13  [key=0, style=solid];
d12 -> d16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d39 -> d47  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
d39 -> d50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d39 -> d66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d39 -> d40  [key=0, style=solid];
d39 -> d41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
d39 -> d42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
d42 -> d47  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d42 -> d49  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d42 -> d62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d42 -> d43  [key=0, style=solid];
d42 -> d57  [key=2, style=dotted];
d42 -> d44  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d42 -> d45  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d42 -> d46  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d46 -> d47  [key=0, style=solid];
d46 -> d58  [key=2, style=dotted];
d40 -> d49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d40 -> d50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d40 -> d66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d40 -> d62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d40 -> d41  [key=0, style=solid];
d40 -> d54  [key=2, style=dotted];
d40 -> d55  [key=2, style=dotted];
d40 -> d52  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d61 -> d62  [key=0, style=solid];
d65 -> d66  [key=0, style=solid];
d52 -> d53  [key=0, style=solid];
d95 -> d69  [key=0, style=bold, color=blue];
d72 -> d95  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d73 -> d90  [key=1, style=dashed, color=darkseagreen4, label=type];
d77 -> d78  [key=0, style=solid];
d77 -> d94  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
d90 -> d91  [key=0, style=solid];
d90 -> d98  [key=2, style=dotted];
d88 -> d89  [key=0, style=solid];
d91 -> d94  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d91 -> d99  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d112 -> d102  [key=0, style=bold, color=blue];
d104 -> d112  [key=0, style=solid];
d104 -> d113  [key=2, style=dotted];
d107 -> d112  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d109 -> d115  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d115  [key=2, style=dotted];
d129 -> d124  [key=0, style=bold, color=blue];
d126 -> d129  [key=0, style=solid];
d126 -> d113  [key=2, style=dotted];
d139 -> d141  [key=0, style=solid];
d139 -> d140  [key=0, style=solid];
d142 -> d144  [key=0, style=solid];
d142 -> d113  [key=2, style=dotted];
d140 -> d144  [key=0, style=solid];
d140 -> d113  [key=2, style=dotted];
d150 -> d145  [key=0, style=bold, color=blue];
d147 -> d150  [key=0, style=solid];
d147 -> d113  [key=2, style=dotted];
d159 -> d151  [key=0, style=bold, color=blue];
d161 -> d162  [key=0, style=solid];
d161 -> d163  [key=2, style=dotted];
d155 -> d158  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d164 -> d165  [key=0, style=solid];
d156 -> d157  [key=0, style=solid];
d156 -> d170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
d169 -> d170  [key=0, style=solid];
d181 -> d176  [key=0, style=bold, color=blue];
d183 -> d184  [key=0, style=solid];
d183 -> d185  [key=2, style=dotted];
d209 -> d193  [key=0, style=bold, color=blue];
d222 -> d223  [key=0, style=solid];
d222 -> d224  [key=2, style=dotted];
d222 -> d225  [key=2, style=dotted];
d222 -> d226  [key=2, style=dotted];
d222 -> d227  [key=2, style=dotted];
d203 -> d204  [key=0, style=solid];
d203 -> d208  [key=0, style=solid];
d199 -> d200  [key=0, style=solid];
d199 -> d222  [key=1, style=dashed, color=darkseagreen4, label=name];
d199 -> d217  [key=1, style=dashed, color=darkseagreen4, label=name];
d216 -> d217  [key=0, style=solid];
d221 -> d222  [key=0, style=solid];
d202 -> d207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
d202 -> d203  [key=0, style=solid];
d202 -> d208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
d208 -> d209  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d186 -> d187  [key=0, style=solid];
d16 -> d17  [key=0, style=solid];
d16 -> d16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
d16 -> d28  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d229 -> d66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d229 -> d62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
d231 -> d66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
d67 -> d65  [key=0, style=bold, color=blue];
d230 -> d62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
d63 -> d61  [key=0, style=bold, color=blue];
d232 -> d165  [key=1, style=dashed, color=darkseagreen4, label=string];
d232 -> d170  [key=1, style=dashed, color=darkseagreen4, label=string];
d232 -> d161  [key=1, style=dashed, color=darkseagreen4, label=string];
d233 -> d165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
d166 -> d164  [key=0, style=bold, color=blue];
d234 -> d170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
d171 -> d169  [key=0, style=bold, color=blue];
d235 -> d187  [key=1, style=dashed, color=darkseagreen4, label=string];
d235 -> d183  [key=1, style=dashed, color=darkseagreen4, label=string];
d188 -> d186  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid];
d53 -> d39  [key=0, style=bold, color=blue];
d41 -> d42  [key=0, style=solid];
d41 -> d46  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
d41 -> d56  [key=2, style=dotted];
d41 -> d43  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
d41 -> d44  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
d41 -> d45  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
d43 -> d58  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d44 -> d58  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d45 -> d58  [key=2, style=dotted];
d74 -> d90  [key=1, style=dashed, color=darkseagreen4, label=method];
d74 -> d75  [key=0, style=solid];
d76 -> d77  [key=0, style=solid];
d76 -> d90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
d75 -> d90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
d75 -> d76  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d162 -> d160  [key=0, style=bold, color=blue];
d184 -> d182  [key=0, style=bold, color=blue];
d236 -> d222  [key=1, style=dashed, color=darkseagreen4, label=name];
d236 -> d217  [key=1, style=dashed, color=darkseagreen4, label=name];
d237 -> d222  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
d223 -> d221  [key=0, style=bold, color=blue];
d217 -> d218  [key=0, style=solid];
d217 -> d219  [key=2, style=dotted];
d217 -> d220  [key=2, style=dotted];
d218 -> d216  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=date];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_4  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_5  [key=2, style=dotted];
m0_10 -> m0_6  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_4  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_34  [key=2, style=dotted];
m0_38 -> m0_35  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_4  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_30  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_4  [key=2, style=dotted];
m0_23 -> m0_11  [key=2, style=dotted];
m0_23 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=data];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_29  [key=2, style=dotted];
m0_25 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_5  [key=2, style=dotted];
m0_27 -> m0_22  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_13 -> m0_18  [key=2, style=dotted];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_19  [key=2, style=dotted];
m0_14 -> m0_20  [key=2, style=dotted];
m0_14 -> m0_21  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_20  [key=2, style=dotted];
m0_15 -> m0_21  [key=2, style=dotted];
m0_16 -> m0_12  [key=0, style=bold, color=blue];
m3_0 -> m3_2  [key=1, style=dashed, color=green, label="HangFire.Client.CreateContext"];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_9  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_1 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_9  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_10  [key=2, style=dotted];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_10  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_47  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_7 -> m3_45  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_46 -> m3_7  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_8 -> m3_20  [key=0, style=solid];
m3_8 -> d113  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_53  [key=2, style=dotted];
m3_49 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_54  [key=2, style=dotted];
m3_50 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_52 -> m3_48  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_7  [key=2, style=dotted];
m3_27 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_27 -> m3_32  [key=0, style=solid];
m3_27 -> m3_34  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_15  [key=2, style=dotted];
m3_28 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m3_28 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m3_28 -> m3_35  [key=2, style=dotted];
m3_29 -> m3_26  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=0, style=solid];
m3_29 -> m3_36  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_7  [key=2, style=dotted];
m3_34 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_44 -> m3_38  [key=0, style=bold, color=blue];
m3_22 -> m3_19  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_7  [key=2, style=dotted];
m3_12 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_12 -> m3_20  [key=0, style=solid];
m3_12 -> d113  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_13 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_14 -> m3_11  [key=0, style=bold, color=blue];
m3_14 -> m3_20  [key=0, style=solid];
m3_14 -> d113  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_44  [key=0, style=solid];
m3_40 -> d113  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_7  [key=2, style=dotted];
m3_41 -> m3_44  [key=0, style=solid];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_45  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_44  [key=2, style=dotted];
m3_43 -> m3_40  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_46  [key=2, style=dotted];
m3_43 -> m3_47  [key=2, style=dotted];
m3_6 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m3_6 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m3_6 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m3_6 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m3_6 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m3_6 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.State"];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [key=2, style=dotted];
m3_10 -> m3_20  [key=0, style=solid];
m3_10 -> d113  [key=2, style=dotted];
m3_20 -> m3_6  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid, color=red];
m3_20 -> m3_7  [key=2, style=dotted];
m3_20 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_36 -> m3_33  [key=0, style=bold, color=blue];
m3_37 -> m3_38  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_24 -> m3_33  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_23 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_25 -> m3_23  [key=0, style=bold, color=blue];
m3_25 -> m3_32  [key=0, style=solid];
m3_25 -> d113  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=0, style=solid];
m3_30 -> m3_37  [key=2, style=dotted];
m3_32 -> m3_30  [key=0, style=bold, color=blue];
m3_32 -> m3_23  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_38 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_39 -> m3_37  [key=0, style=bold, color=blue];
m3_39 -> m3_41  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_33  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid, color=red];
m3_21 -> m3_15  [key=2, style=dotted, color=red];
m3_21 -> m3_23  [key=1, style=dashed, color=red, label="lambda expression"];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_15  [key=2, style=dotted];
m3_35 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_55 -> m3_2  [key=1, style=dashed, color=green, label="HangFire.Client.CreateContext"];
m3_55 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m3_55 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_25  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_26  [key=2, style=dotted];
m4_2 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=connection];
m4_2 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=connection];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_27  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_28  [key=2, style=dotted];
m4_5 -> m4_29  [key=2, style=dotted];
m4_5 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_5 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=hash];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_36  [key=2, style=dotted];
m4_18 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_24  [key=0, style=solid];
m4_4 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_4 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=id];
m4_7 -> m4_4  [key=0, style=solid];
m4_7 -> m4_30  [key=2, style=dotted];
m4_7 -> m4_31  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_30  [key=2, style=dotted];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_8 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=dto];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_32  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=0, style=solid];
m4_14 -> m4_34  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_35  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_21  [key=0, style=solid];
m4_16 -> m4_34  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=0, style=solid];
m4_21 -> m4_34  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_35  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=0, style=solid];
m4_11 -> d99  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_23 -> m4_4  [key=0, style=solid];
m4_23 -> m4_31  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [key=0, style=solid];
m4_24 -> m4_0  [key=0, style=bold, color=blue];
m4_37 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m4_37 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m4_37 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.RecurringJobsPage"];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_6 -> d167  [key=2, style=dotted, color=green];
m5_6 -> m5_9  [key=2, style=dotted, color=green];
m5_6 -> m5_10  [key=2, style=dotted, color=green];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_18 -> m5_0  [key=3, color=green, style=bold, label="Property variable long PerformanceDuration"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label=long];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_0  [key=0, style=bold, color=blue];
m5_19 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_19 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_19 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m5_19 -> m5_6  [key=1, style=dashed, color=green, label="HangFire.States.SucceededState"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m6_6 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m6_6 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m6_6 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m6_6 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m6_6 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m6_6 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid];
m6_8 -> m6_20  [key=0, style=solid];
m6_8 -> d113  [key=2, style=dotted];
m6_10 -> m6_20  [key=0, style=solid];
m6_10 -> d113  [key=2, style=dotted];
m6_12 -> m6_20  [key=0, style=solid];
m6_12 -> d113  [key=2, style=dotted];
m6_14 -> m6_20  [key=0, style=solid];
m6_14 -> d113  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_6  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_23 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_23 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_23 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=0, style=solid];
m6_24 -> m6_33  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_35  [key=2, style=dotted];
m6_28 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m6_28 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_31  [key=0, style=solid];
m6_29 -> m6_36  [key=2, style=dotted];
m6_30 -> m6_32  [key=0, style=solid];
m6_30 -> m6_37  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_25 -> m6_32  [key=0, style=solid];
m6_25 -> d113  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=0, style=solid];
m6_27 -> m6_32  [key=0, style=solid];
m6_27 -> m6_34  [key=2, style=dotted];
m6_32 -> m6_23  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_38 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=0, style=solid];
m6_39 -> m6_33  [key=2, style=dotted];
m6_41 -> m6_44  [key=0, style=solid];
m6_41 -> m6_36  [key=2, style=dotted];
m6_41 -> m6_45  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_46  [key=2, style=dotted];
m6_43 -> m6_47  [key=2, style=dotted];
m6_40 -> m6_44  [key=0, style=solid];
m6_40 -> d113  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_44 -> m6_38  [key=0, style=bold, color=blue];
m6_48 -> m6_49  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_53  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_54  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_52 -> m6_48  [key=0, style=bold, color=blue];
m6_55 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m6_55 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_21  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_22  [key=2, style=dotted];
m8_20 -> m8_16  [key=0, style=bold, color=blue];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_30  [key=2, style=dotted];
m8_24 -> m8_31  [key=2, style=dotted];
m8_24 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_24 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_21  [key=2, style=dotted];
m8_25 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=process];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_32  [key=2, style=dotted];
m8_26 -> m8_33  [key=2, style=dotted];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_34  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_35  [key=2, style=dotted];
m8_28 -> m8_36  [key=2, style=dotted];
m8_28 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_29 -> m8_23  [key=0, style=bold, color=blue];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=2, style=dotted];
m8_9 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_10 -> m8_8  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_5  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_6  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_7  [key=2, style=dotted];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_30  [key=2, style=dotted];
m8_49 -> m8_31  [key=2, style=dotted];
m8_49 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_49 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_21  [key=2, style=dotted];
m8_50 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label=process];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_32  [key=2, style=dotted];
m8_51 -> m8_33  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_34  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_35  [key=2, style=dotted];
m8_53 -> m8_36  [key=2, style=dotted];
m8_53 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_54 -> m8_48  [key=0, style=bold, color=blue];
m8_71 -> m8_72  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=2, style=dotted];
m8_14 -> m8_12  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_11  [key=2, style=dotted];
m8_38 -> m8_40  [key=2, style=dotted];
m8_39 -> m8_37  [key=0, style=bold, color=blue];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_44  [key=2, style=dotted];
m8_43 -> m8_41  [key=0, style=bold, color=blue];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_40  [key=2, style=dotted];
m8_47 -> m8_45  [key=0, style=bold, color=blue];
m8_55 -> m8_56  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_11  [key=2, style=dotted];
m8_56 -> m8_40  [key=2, style=dotted];
m8_57 -> m8_55  [key=0, style=bold, color=blue];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_44  [key=2, style=dotted];
m8_60 -> m8_58  [key=0, style=bold, color=blue];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_40  [key=2, style=dotted];
m8_63 -> m8_61  [key=0, style=bold, color=blue];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_11  [key=2, style=dotted];
m8_72 -> m8_40  [key=2, style=dotted];
m8_73 -> m8_71  [key=0, style=bold, color=blue];
m8_74 -> m8_75  [key=0, style=solid];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_21  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_79  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_80  [key=2, style=dotted];
m8_77 -> m8_81  [key=2, style=dotted];
m8_78 -> m8_74  [key=0, style=bold, color=blue];
m8_64 -> m8_65  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_21  [key=2, style=dotted];
m8_65 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label=process];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_70  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_34  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_36  [key=2, style=dotted];
m8_68 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_69 -> m8_64  [key=0, style=bold, color=blue];
m8_82 -> m8_83  [key=0, style=solid];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_15  [key=2, style=dotted];
m8_84 -> m8_82  [key=0, style=bold, color=blue];
m8_85 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m8_85 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m9_4 -> d5  [key=0, style=solid];
m9_4 -> m9_6  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_29  [key=2, style=dotted];
m9_25 -> m9_32  [key=2, style=dotted];
m9_25 -> m9_33  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_12 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_12 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_13 -> m9_14  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_28  [key=2, style=dotted];
m9_16 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m9_17 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m9_18 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label=queueIndex];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_29  [key=2, style=dotted];
m9_19 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m9_19 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label=queueKey];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_29  [key=2, style=dotted];
m9_20 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m9_20 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label=fetchedKey];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_34  [key=2, style=dotted];
m9_22 -> m9_24  [key=0, style=solid];
m9_22 -> m9_30  [key=2, style=dotted];
m9_22 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_22 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_31  [key=2, style=dotted];
m9_23 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_23 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_24 -> m9_15  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_27 -> m9_12  [key=0, style=bold, color=blue];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=2, style=dotted];
m9_37 -> m9_35  [key=0, style=bold, color=blue];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_59  [key=2, style=dotted];
m9_50 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m9_39 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m9_39 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m9_39 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_39 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_54  [key=2, style=dotted];
m9_40 -> m9_55  [key=2, style=dotted];
m9_40 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_40 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_40 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_40 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_40 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_56  [key=2, style=dotted];
m9_41 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m9_41 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m9_41 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m9_41 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_57  [key=2, style=dotted];
m9_42 -> m9_44  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_42 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_42 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_42 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_42 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_42 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_32  [key=2, style=dotted];
m9_47 -> m9_58  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_59  [key=2, style=dotted];
m9_49 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_52 -> m9_53  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_58  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_58  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_58  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_58  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_11  [key=2, style=dotted];
m9_48 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_48 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_60  [key=2, style=dotted];
m9_53 -> m9_39  [key=0, style=bold, color=blue];
m9_133 -> m9_134  [key=0, style=solid];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_136  [key=2, style=dotted];
m9_134 -> m9_137  [key=2, style=dotted];
m9_135 -> m9_133  [key=0, style=bold, color=blue];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_105  [key=0, style=solid];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_29  [key=2, style=dotted];
m9_105 -> m9_96  [key=2, style=dotted];
m9_105 -> m9_108  [key=1, style=dashed, color=darkseagreen4, label=entries];
m9_105 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label=entries];
m9_104 -> m9_112  [key=0, style=solid];
m9_104 -> m9_113  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_108  [key=0, style=solid];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_114  [key=2, style=dotted];
m9_108 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m9_108 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_116  [key=2, style=dotted];
m9_111 -> m9_97  [key=2, style=dotted];
m9_107 -> m9_112  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_115  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_115  [key=2, style=dotted];
m9_112 -> m9_102  [key=0, style=bold, color=blue];
m9_193 -> m9_194  [key=0, style=solid];
m9_193 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_210  [key=2, style=dotted];
m9_194 -> m9_198  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m9_205 -> m9_206  [key=0, style=solid];
m9_205 -> m9_203  [key=0, style=solid];
m9_205 -> m9_215  [key=2, style=dotted];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_167  [key=2, style=dotted];
m9_195 -> m9_200  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_195 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_195 -> m9_203  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_198 -> m9_199  [key=0, style=solid];
m9_198 -> m9_201  [key=0, style=solid];
m9_196 -> m9_197  [key=0, style=solid];
m9_196 -> m9_205  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m9_200 -> m9_198  [key=0, style=solid];
m9_200 -> m9_59  [key=2, style=dotted];
m9_200 -> m9_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_200 -> m9_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_208  [key=0, style=solid];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_211  [key=2, style=dotted];
m9_197 -> m9_200  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_197 -> m9_201  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_212  [key=2, style=dotted];
m9_199 -> m9_200  [key=0, style=solid];
m9_199 -> m9_217  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_199 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_202 -> m9_208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_207 -> m9_203  [key=0, style=solid];
m9_207 -> m9_207  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_207 -> m9_208  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_208 -> m9_209  [key=0, style=solid];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_213  [key=2, style=dotted];
m9_204 -> m9_214  [key=2, style=dotted];
m9_204 -> m9_204  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m9_204 -> m9_206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m9_206 -> m9_207  [key=0, style=solid];
m9_206 -> m9_176  [key=2, style=dotted];
m9_206 -> m9_206  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m9_209 -> m9_193  [key=0, style=bold, color=blue];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_29  [key=2, style=dotted];
m9_191 -> m9_32  [key=2, style=dotted];
m9_191 -> m9_33  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_192 -> m9_190  [key=0, style=bold, color=blue];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_59  [key=2, style=dotted];
m9_179 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_176 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_176 -> m9_179  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_176 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_11  [key=2, style=dotted];
m9_177 -> m9_179  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_177 -> m9_180  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_59  [key=2, style=dotted];
m9_178 -> m9_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_60  [key=2, style=dotted];
m9_181 -> m9_176  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=2, style=dotted];
m9_8 -> m9_11  [key=2, style=dotted];
m9_9 -> m9_7  [key=0, style=bold, color=blue];
m9_120 -> m9_121  [key=0, style=solid];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_29  [key=2, style=dotted];
m9_121 -> m9_123  [key=2, style=dotted];
m9_122 -> m9_120  [key=0, style=bold, color=blue];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_141  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m9_138 -> m9_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_141  [key=0, style=solid];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_143  [key=0, style=solid];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_130  [key=2, style=dotted];
m9_143 -> m9_64  [key=2, style=dotted];
m9_140 -> m9_144  [key=0, style=solid];
m9_140 -> m9_113  [key=2, style=dotted];
m9_142 -> m9_144  [key=0, style=solid];
m9_142 -> m9_113  [key=2, style=dotted];
m9_144 -> m9_138  [key=0, style=bold, color=blue];
m9_151 -> m9_152  [key=0, style=solid];
m9_151 -> m9_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_151 -> m9_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_151 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_151 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_151 -> m9_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m9_151 -> m9_157  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_151 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_152 -> m9_153  [key=0, style=solid];
m9_152 -> m9_11  [key=2, style=dotted];
m9_152 -> m9_154  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_152 -> m9_157  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_152 -> m9_158  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_153 -> m9_154  [key=0, style=solid];
m9_153 -> m9_59  [key=2, style=dotted];
m9_153 -> m9_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_154 -> m9_155  [key=0, style=solid];
m9_154 -> m9_59  [key=2, style=dotted];
m9_154 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_158  [key=0, style=solid];
m9_157 -> m9_155  [key=0, style=solid];
m9_157 -> m9_59  [key=2, style=dotted];
m9_157 -> m9_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_158 -> m9_159  [key=0, style=solid];
m9_158 -> m9_60  [key=2, style=dotted];
m9_156 -> m9_157  [key=0, style=solid];
m9_156 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m9_159 -> m9_151  [key=0, style=bold, color=blue];
m9_173 -> m9_174  [key=0, style=solid];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_176  [key=2, style=dotted];
m9_175 -> m9_173  [key=0, style=bold, color=blue];
m9_69 -> m9_70  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_29  [key=2, style=dotted];
m9_70 -> m9_96  [key=2, style=dotted];
m9_70 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_81  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_82  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_70 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label=storedData];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_73  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_80  [key=0, style=solid];
m9_78 -> m9_97  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=type];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_82  [key=0, style=solid];
m9_80 -> m9_97  [key=2, style=dotted];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=method];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [key=0, style=solid];
m9_82 -> m9_97  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_86  [key=0, style=solid];
m9_84 -> m9_97  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_88  [key=0, style=solid];
m9_86 -> m9_97  [key=2, style=dotted];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_100  [key=2, style=dotted];
m9_94 -> m9_97  [key=2, style=dotted];
m9_94 -> m9_101  [key=2, style=dotted];
m9_72 -> m9_95  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=type];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=method];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_98  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=parameterTypes];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label=arguments];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m9_88 -> m9_89  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_94  [key=0, style=solid];
m9_91 -> m9_99  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_95 -> m9_69  [key=0, style=bold, color=blue];
m9_221 -> m9_222  [key=0, style=solid];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_29  [key=2, style=dotted];
m9_66 -> m9_68  [key=2, style=dotted];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_29  [key=2, style=dotted];
m9_62 -> m9_64  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_65 -> m9_66  [key=0, style=solid];
m9_63 -> m9_61  [key=0, style=bold, color=blue];
m9_67 -> m9_65  [key=0, style=bold, color=blue];
m9_161 -> m9_162  [key=0, style=solid];
m9_161 -> m9_163  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_29  [key=2, style=dotted];
m9_165 -> m9_167  [key=2, style=dotted];
m9_165 -> m9_168  [key=2, style=dotted];
m9_165 -> m9_32  [key=2, style=dotted];
m9_165 -> m9_64  [key=2, style=dotted];
m9_170 -> m9_171  [key=0, style=solid];
m9_170 -> m9_29  [key=2, style=dotted];
m9_170 -> m9_172  [key=2, style=dotted];
m9_160 -> m9_161  [key=0, style=solid];
m9_164 -> m9_165  [key=0, style=solid];
m9_169 -> m9_170  [key=0, style=solid];
m9_162 -> m9_160  [key=0, style=bold, color=blue];
m9_166 -> m9_164  [key=0, style=bold, color=blue];
m9_171 -> m9_169  [key=0, style=bold, color=blue];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_185  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_29  [key=2, style=dotted];
m9_187 -> m9_189  [key=2, style=dotted];
m9_182 -> m9_183  [key=0, style=solid];
m9_186 -> m9_187  [key=0, style=solid];
m9_184 -> m9_182  [key=0, style=bold, color=blue];
m9_188 -> m9_186  [key=0, style=bold, color=blue];
m9_222 -> m9_223  [key=0, style=solid];
m9_222 -> m9_224  [key=2, style=dotted];
m9_222 -> m9_225  [key=2, style=dotted];
m9_222 -> m9_226  [key=2, style=dotted];
m9_222 -> m9_227  [key=2, style=dotted];
m9_217 -> m9_218  [key=0, style=solid];
m9_217 -> m9_219  [key=2, style=dotted];
m9_217 -> m9_220  [key=2, style=dotted];
m9_216 -> m9_217  [key=0, style=solid];
m9_218 -> m9_216  [key=0, style=bold, color=blue];
m9_223 -> m9_221  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_148  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_130  [key=2, style=dotted];
m9_148 -> m9_96  [key=2, style=dotted];
m9_147 -> m9_150  [key=0, style=solid];
m9_147 -> m9_113  [key=2, style=dotted];
m9_149 -> m9_150  [key=0, style=solid];
m9_150 -> m9_145  [key=0, style=bold, color=blue];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_29  [key=2, style=dotted];
m9_118 -> m9_33  [key=2, style=dotted];
m9_117 -> m9_118  [key=0, style=solid];
m9_119 -> m9_117  [key=0, style=bold, color=blue];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_130  [key=2, style=dotted];
m9_127 -> m9_131  [key=2, style=dotted];
m9_126 -> m9_129  [key=0, style=solid];
m9_126 -> m9_113  [key=2, style=dotted];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_132  [key=2, style=dotted];
m9_129 -> m9_124  [key=0, style=bold, color=blue];
m9_228 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_148  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_228 -> m9_206  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m9_229 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_229 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_230 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=storedParameters];
m9_231 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_232 -> m9_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_232 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_232 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_233 -> m9_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m9_234 -> m9_170  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m9_235 -> m9_183  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_235 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_236 -> m9_217  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_236 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_237 -> m9_222  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_2 -> m12_4  [key=0, style=solid];
m12_2 -> d113  [key=2, style=dotted];
m12_4 -> m12_0  [key=0, style=bold, color=blue];
m12_6 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
}
