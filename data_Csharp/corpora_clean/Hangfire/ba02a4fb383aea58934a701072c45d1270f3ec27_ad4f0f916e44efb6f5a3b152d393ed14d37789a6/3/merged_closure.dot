digraph  {
n102 [label="HangFire.States.StateMachine", span=""];
n103 [label="System.Collections.Generic.IEnumerable<object>", span=""];
n0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
n1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="connection == null", span="34-34"];
n3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="handlers == null", span="35-35"];
n5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="_connection = connection", span="37-37"];
n6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="_handlerCollection = GetHandlerCollection(handlers)", span="38-38"];
n2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="throw new ArgumentNullException(''connection'');", span="34-34"];
n4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="throw new ArgumentNullException(''handlers'');", span="35-35"];
n7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
n8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n9 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="Entry HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189"];
n10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
n11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", label="filters == null", span="47-47"];
n13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", label="_getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49"];
n16 [cluster="lambda expression", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49"];
n12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", label="throw new ArgumentNullException(''filters'');", span="47-47"];
n14 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
n15 [cluster="lambda expression", label="Entry lambda expression", span="49-49"];
n17 [cluster="lambda expression", label="Exit lambda expression", span="49-49"];
n18 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n19 [cluster="lambda expression", label="Entry lambda expression", span="49-49"];
n20 [cluster="lambda expression", label="new JobFilter(f, JobFilterScope.Type, null)", span="49-49"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="49-49"];
n22 [cluster="HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", label="Entry HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", span="38-38"];
n23 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52"];
n24 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="job == null", span="57-57"];
n26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="parameters == null", span="58-58"];
n28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="state == null", span="59-59"];
n30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="61-64"];
n31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="var context = new StateContext(jobId, job)", span="66-66"];
n32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="ChangeState(context, state, null)", span="67-67"];
n25 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="throw new ArgumentNullException(''job'');", span="57-57"];
n27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="throw new ArgumentNullException(''parameters'');", span="58-58"];
n29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="throw new ArgumentNullException(''state'');", span="59-59"];
n35 [cluster="System.TimeSpan.FromHours(double)", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
n36 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28"];
n33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="return jobId;", span="69-69"];
n37 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
n38 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="Entry HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", span="132-132"];
n34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52"];
n39 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72"];
n40 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="jobId == null", span="75-75"];
n42 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="toState == null", span="76-76"];
n44 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="fromStates == null", span="77-77"];
n46 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="_connection.AcquireJobLock(jobId)", span="85-85"];
n48 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="var jobData = _connection.GetJobData(jobId)", span="89-89"];
n51 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="!fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="98-98"];
n56 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="toState = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            toState.Name, jobId)\r\n                    }", span="115-120"];
n58 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="var context = new StateContext(jobId, jobData.Job)", span="125-125"];
n41 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="throw new ArgumentNullException(''jobId'');", span="75-75"];
n43 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="throw new ArgumentNullException(''toState'');", span="76-76"];
n45 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="throw new ArgumentNullException(''fromStates'');", span="77-77"];
n47 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="bool loadSucceeded", span="87-87"];
n62 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="36-36"];
n49 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="jobData == null", span="91-91"];
n63 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37"];
n53 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="jobData.EnsureLoaded()", span="105-105"];
n59 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="var stateChanged = ChangeState(context, toState, jobData.State)", span="126-126"];
n50 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="return false;", span="95-95"];
n52 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="return false;", span="100-100"];
n64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
n54 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="loadSucceeded = true", span="106-106"];
n65 [cluster="HangFire.Storage.JobData.EnsureLoaded()", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
n55 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label=JobLoadException, span="108-108"];
n57 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="loadSucceeded = false", span="122-122"];
n66 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
n67 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n60 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="return loadSucceeded && stateChanged;", span="128-128"];
n61 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", label="Exit HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72"];
n68 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="var filterInfo = GetFilters(context.Job)", span="136-136"];
n69 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="var electedState = ElectState(context, toState, oldStateName, filterInfo.ElectStateFilters)", span="138-138"];
n70 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="ApplyState(context, electedState, oldStateName, filterInfo.ApplyStateFilters)", span="139-139"];
n74 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="ApplyState(context, failedState, oldStateName, Enumerable.Empty<IApplyStateFilter>())", span="153-153"];
n77 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184"];
n78 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", label="Entry HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160"];
n71 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="return true;", span="142-142"];
n79 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172"];
n72 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label=Exception, span="144-144"];
n73 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="146-149"];
n75 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="return false;", span="156-156"];
n80 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n76 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", label="Exit HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", span="132-132"];
n81 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", label="var context = new ElectStateContext(\r\n                stateContext, toState, fromStateName, _connection)", span="166-167"];
n82 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", label="return context.ElectState(filters);", span="169-169"];
n84 [cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", label="Entry HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", span="27-27"];
n83 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", label="Exit HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160"];
n85 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69"];
n86 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="var context = new ApplyStateContext(\r\n                _connection, stateContext, electedState, oldStateName)", span="178-179"];
n87 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="context.ApplyState(_handlerCollection, filters)", span="181-181"];
n89 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26"];
n88 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172"];
n90 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
n91 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", label="return new JobFilterInfo(_getFiltersThunk(job));", span="186-186"];
n92 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184"];
n93 [cluster="HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", label="Entry HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", span="40-40"];
n94 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n95 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="var handlerCollection = new StateHandlerCollection()", span="191-191"];
n96 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label=handlers, span="192-192"];
n100 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
n97 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="handlerCollection.AddHandler(handler)", span="194-194"];
n98 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="return handlerCollection;", span="197-197"];
n101 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
n99 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", label="Exit HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189"];
d16 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", color=green, community=0, label="var server = BackgroundJobServer.StartNew(storage, options)", prediction=0, span="72-72"];
d9 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
d14 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="storage == null", span="70-70"];
d17 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Servers.Add(server)", span="73-73"];
d28 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165"];
d24 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token.Register(server.Dispose)", span="88-88"];
d26 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
d10 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="builder == null", span="68-68"];
d12 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="options == null", span="69-69"];
d18 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="var context = new OwinContext(builder.Properties)", span="75-75"];
d25 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="return builder;", span="90-90"];
d15 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''storage'');", span="70-70"];
d29 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
d19 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="76-76"];
d21 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token = context.Get<CancellationToken>(''server.OnDispose'')", span="80-80"];
d22 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token == default(CancellationToken)", span="83-83"];
d33 [cluster="Unk.Register", label="Entry Unk.Register", span=""];
d11 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''builder'');", span="68-68"];
d13 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''options'');", span="69-69"];
d23 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new InvalidOperationException(''Current OWIN environment does not contain an instance of the `CancellationToken` class under `host.OnAppDisposing` key.'');", span="85-85"];
d30 [cluster="OwinContext.cstr", label="Entry OwinContext.cstr", span=""];
d27 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d20 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token == default(CancellationToken)", span="77-77"];
d31 [cluster="Unk.>", label="Entry Unk.>", span=""];
d32 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d49 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''builder'');", span="119-119"];
d51 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''pathMatch'');", span="120-120"];
d53 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''options'');", span="121-121"];
d55 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''storage'');", span="122-122"];
d48 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="builder == null", span="119-119"];
d59 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
d50 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="pathMatch == null", span="120-120"];
d52 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="options == null", span="121-121"];
d54 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="storage == null", span="122-122"];
d47 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
d58 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="return builder;", span="130-130"];
d56 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="SignatureConversions.AddConversions(builder)", span="124-124"];
d57 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="126-128"];
d63 [cluster="lambda expression", label="subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes)", span="126-128"];
d60 [cluster="Unk.AddConversions", label="Entry Unk.AddConversions", span=""];
d61 [cluster="Unk.Map", label="Entry Unk.Map", span=""];
d62 [cluster="lambda expression", label="Entry lambda expression", span="126-128"];
d75 [label="Hangfire.DashboardOptions", span=""];
d76 [label="Hangfire.JobStorage", span=""];
d64 [cluster="lambda expression", label="Exit lambda expression", span="126-128"];
d65 [cluster="Unk.UseOwin", label="Entry Unk.UseOwin", span=""];
d66 [cluster="System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", label="Entry System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", span="42-42"];
m0_31 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89"];
m0_39 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=i, span="91-91"];
m0_40 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=0, span="93-93"];
m0_42 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=1, span="95-95"];
m0_44 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label=2, span="97-97"];
m0_41 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Debug;", span="94-94"];
m0_43 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Info;", span="96-96"];
m0_45 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Warn;", span="98-98"];
m0_47 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="return LogLevel.Error;", span="101-101"];
m0_46 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89"];
m0_61 [cluster="System.Random.Next(int, int)", file="AutomaticRetryProcess.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m0_57 [cluster="System.Random.Random(int)", file="AutomaticRetryProcess.cs", label="Entry System.Random.Random(int)", span="0-0"];
m0_38 [cluster="string.Format(string, params object[])", file="AutomaticRetryProcess.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m0_10 [cluster="object.GetType()", file="AutomaticRetryProcess.cs", label="Entry object.GetType()", span="0-0"];
m0_29 [cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m0_60 [cluster="System.Math.Pow(double, double)", file="AutomaticRetryProcess.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m0_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="AutomaticRetryProcess.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_12 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m0_13 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="var i = 0", span="53-53"];
m0_15 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="_innerProcess.Execute(context)", span="57-57"];
m0_25 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="context.CancellationToken.WaitHandle.WaitOne(nextTry)", span="83-83"];
m0_26 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="84-84"];
m0_14 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="i <= MaxRetryAttempts", span="53-53"];
m0_20 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="i >= MaxRetryAttempts - 1", span="67-67"];
m0_22 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="var nextTry = DelayCallback(i)", span="69-69"];
m0_23 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="var logLevel = GetLogLevel(i)", span="70-70"];
m0_24 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80"];
m0_27 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="i++", span="53-53"];
m0_16 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="return;", span="58-58"];
m0_17 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label=OperationCanceledException, span="60-60"];
m0_18 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="throw;", span="62-62"];
m0_19 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label=Exception, span="64-64"];
m0_21 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="throw;", span="67-67"];
m0_28 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m0_63 [cluster="System.TimeSpan.FromSeconds(double)", file="AutomaticRetryProcess.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m0_34 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="AutomaticRetryProcess.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_32 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m0_48 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104"];
m0_49 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="AutomaticRetryProcess.cs", label="return _innerProcess.ToString();", span="106-106"];
m0_50 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104"];
m0_35 [cluster="lambda expression", file="AutomaticRetryProcess.cs", label="Entry lambda expression", span="74-79"];
m0_36 [cluster="lambda expression", file="AutomaticRetryProcess.cs", label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79"];
m0_37 [cluster="lambda expression", file="AutomaticRetryProcess.cs", label="Exit lambda expression", span="74-79"];
m0_62 [cluster="System.Math.Min(double, double)", file="AutomaticRetryProcess.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m0_58 [cluster="System.Guid.NewGuid()", file="AutomaticRetryProcess.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m0_11 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m0_59 [cluster="System.Guid.GetHashCode()", file="AutomaticRetryProcess.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m0_33 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="AutomaticRetryProcess.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m0_52 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109"];
m0_53 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="112-112"];
m0_54 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="113-114"];
m0_55 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="116-116"];
m0_56 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109"];
m0_0 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m0_1 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="innerProcess == null", span="32-32"];
m0_3 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="_innerProcess = innerProcess", span="34-34"];
m0_2 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="throw new ArgumentNullException(''innerProcess'');", span="32-32"];
m0_4 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="_logger = LogProvider.GetLogger(_innerProcess.GetType())", span="35-35"];
m0_5 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="37-37"];
m0_6 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="38-38"];
m0_7 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="DelayCallback = GetBackOffMultiplier", span="39-39"];
m0_8 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="AutomaticRetryProcess.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m0_51 [cluster="object.ToString()", file="AutomaticRetryProcess.cs", label="Entry object.ToString()", span="0-0"];
m0_64 [file="AutomaticRetryProcess.cs", label="Hangfire.Server.AutomaticRetryProcess", span=""];
m0_65 [file="AutomaticRetryProcess.cs", label=i, span=""];
m0_66 [file="AutomaticRetryProcess.cs", label=nextTry, span=""];
m1_40 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="132-132"];
m1_48 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="132-132"];
m1_34 [cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", span="227-227"];
m1_114 [cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", span="227-227"];
m1_4 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="67-67"];
m1_5 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions)", span="67-67"];
m1_28 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m1_82 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_0 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer()", span="45-45"];
m1_1 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer()", span="45-45"];
m1_51 [cluster="Hangfire.Logging.ILog.WarnFormat(string, params object[])", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.WarnFormat(string, params object[])", span="270-270"];
m1_52 [cluster="Hangfire.BackgroundJobServer.StartNew()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.StartNew()", span="150-150"];
m1_54 [cluster="Hangfire.BackgroundJobServer.StartNew()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.StartNew()", span="150-150"];
m1_55 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", span="155-155"];
m1_57 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", span="155-155"];
m1_10 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="84-84"];
m1_11 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="84-84"];
m1_36 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="123-123"];
m1_37 [cluster="Hangfire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Start()", span="123-123"];
m1_107 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(string[], int)", span="27-27"];
m1_49 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundJobServer.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m1_112 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39"];
m1_9 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165"];
m1_63 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165"];
m1_110 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32"];
m1_83 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", span="208-208"];
m1_93 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="options == null", span="210-210"];
m1_97 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="i < options.WorkerCount", span="214-214"];
m1_98 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="processes.Add(new Worker(new WorkerContext(options.Queues, i + 1)))", span="216-216"];
m1_101 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="processes.Add(new SchedulePoller(options.SchedulePollingInterval))", span="220-220"];
m1_102 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="processes.Add(new ServerWatchdog(options.ServerWatchdogOptions))", span="221-221"];
m1_94 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''options'');", span="210-210"];
m1_96 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="var i = 0", span="214-214"];
m1_100 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="processes.Add(new ServerHeartbeat())", span="219-219"];
m1_103 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="processes.Add(new RecurringJobScheduler())", span="222-222"];
m1_104 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="return processes;", span="224-224"];
m1_99 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="i++", span="214-214"];
m1_105 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", span="208-208"];
m1_120 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="BackgroundJobServer.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m1_115 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m1_29 [cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", span="232-232"];
m1_118 [cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", span="232-232"];
m1_88 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
m1_59 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", span="160-160"];
m1_61 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", span="160-160"];
m1_50 [cluster="System.Threading.Tasks.Task.Wait(System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry System.Threading.Tasks.Task.Wait(System.TimeSpan)", span="0-0"];
m1_122 [cluster="string.Format(string, object, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_86 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_89 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71"];
m1_87 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m1_38 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.Stop()", span="128-128"];
m1_39 [cluster="Hangfire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.Stop()", span="128-128"];
m1_65 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="172-172"];
m1_66 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="storage == null", span="177-177"];
m1_68 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="options == null", span="178-178"];
m1_70 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="additionalProcesses == null", span="179-179"];
m1_74 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="processes.AddRange(storage.GetComponents())", span="183-183"];
m1_75 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="processes.AddRange(additionalProcesses)", span="184-184"];
m1_77 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="192-192"];
m1_78 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="storage.WriteOptionsToLog(Logger)", span="194-194"];
m1_79 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="options.WriteToLog(Logger)", span="195-195"];
m1_67 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''storage'');", span="177-177"];
m1_69 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''options'');", span="178-178"];
m1_71 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="throw new ArgumentNullException(''additionalProcesses'');", span="179-179"];
m1_81 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="172-172"];
m1_32 [cluster="ServerBootstrapper.cstr", file="BackgroundJobServer.cs", label="Entry ServerBootstrapper.cstr", span=""];
m1_58 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m1_109 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="20-20"];
m1_119 [cluster="string.ToLowerInvariant()", file="BackgroundJobServer.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_12 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>)", span="91-91"];
m1_13 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>, System.Collections.Generic.IDictionary<string, object>)", span="91-91"];
m1_33 [cluster="Unk.Select", file="BackgroundJobServer.cs", label="Entry Unk.Select", span=""];
m1_84 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_31 [cluster="Hangfire.Logging.ILog.Info(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m1_121 [cluster="System.Guid.NewGuid()", file="BackgroundJobServer.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m1_108 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_85 [cluster="Hangfire.JobStorage.GetComponents()", file="BackgroundJobServer.cs", label="Entry Hangfire.JobStorage.GetComponents()", span="58-58"];
m1_106 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="35-35"];
m1_90 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.GetDefaultProcesses()", span="203-203"];
m1_92 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.GetDefaultProcesses()", span="203-203"];
m1_35 [cluster="Hangfire.Server.ILongRunningProcess.CreateTask(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ILongRunningProcess.CreateTask(Hangfire.Server.BackgroundProcessContext)", span="48-48"];
m1_6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79"];
m1_8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79"];
m1_111 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27"];
m1_116 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="BackgroundJobServer.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m1_14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", span="99-99"];
m1_26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", span="99-99"];
m1_30 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobServer.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_2 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="56-56"];
m1_3 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", file="BackgroundJobServer.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage)", span="56-56"];
m1_64 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="BackgroundJobServer.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_123 [file="BackgroundJobServer.cs", label="Hangfire.BackgroundJobServer", span=""];
m3_15 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m3_16 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="BackgroundJobServerOptionsFacts.cs", label="return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(\r\n                JobId, name));", span="64-65"];
m3_17 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m3_10 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m3_11 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="BackgroundJobServerOptionsFacts.cs", label="Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="59-59"];
m3_12 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m3_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m3_18 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m3_19 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m3_14 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m3_0 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m3_1 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="candidateState == null", span="32-32"];
m3_3 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="connection == null", span="33-33"];
m3_5 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="CandidateState = candidateState", span="35-35"];
m3_6 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="CurrentState = currentState", span="36-36"];
m3_7 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="Connection = connection", span="37-37"];
m3_2 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="throw new ArgumentNullException(''candidateState'');", span="32-32"];
m3_4 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m3_8 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m3_20 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.Common.States.StateChangingContext", span=""];
m4_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="ServerId = serverId", span="35-35"];
m4_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="BackgroundProcessContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m4_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m4_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="serverId == null", span="30-30"];
m4_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="throw new ArgumentNullException(''serverId'');", span="30-30"];
m4_3 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="BackgroundProcessContext.cs", label="Entry HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m4_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundProcessContext.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m4_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="CancellationToken = cancellationToken", span="37-37"];
m4_4 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", color=green, community=0, file="BackgroundProcessContext.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", prediction=1, span="37-41"];
m4_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m4_12 [file="BackgroundProcessContext.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m4_18 [file="BackgroundProcessContext.cs", label="HangFire.States.ScheduledState", span=""];
m5_31 [cluster="Unk.NotNull", file="BackgroundProcessContextFacts.cs", label="Entry Unk.NotNull", span=""];
m5_24 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="BackgroundProcessContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39"];
m5_25 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="BackgroundProcessContextFacts.cs", label="var context = new BackgroundProcessContext(_serverId, _storage.Object, _cts.Token)", span="41-41"];
m5_26 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="BackgroundProcessContextFacts.cs", label="Assert.Equal(_serverId, context.ServerId)", span="43-43"];
m5_27 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="Assert.NotNull(context.ServerData)", prediction=2, span="44-44"];
m5_28 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="BackgroundProcessContextFacts.cs", label="Assert.Same(_storage.Object, context.Storage)", span="45-45"];
m5_29 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="BackgroundProcessContextFacts.cs", label="Assert.Equal(_cts.Token, context.CancellationToken)", span="46-46"];
m5_30 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", file="BackgroundProcessContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_CorrectlyInitializes_AllTheProperties()", span="39-39"];
m5_16 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m5_17 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(_serverId, null, _cts.Token))", span="32-33"];
m5_18 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessContextFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="35-35"];
m5_19 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundProcessContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="30-30"];
m5_23 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContextFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m5_32 [cluster="Unk.Same", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Same", span=""];
m5_0 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="BackgroundProcessContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14"];
m5_1 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="BackgroundProcessContextFacts.cs", label="_storage = new Mock<JobStorage>()", span="16-16"];
m5_2 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="BackgroundProcessContextFacts.cs", label="_cts = new CancellationTokenSource()", span="17-17"];
m5_3 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", file="BackgroundProcessContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.BackgroundProcessContextFacts()", span="14-14"];
m5_11 [cluster="Unk.Equal", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Equal", span=""];
m5_15 [cluster="BackgroundProcessContext.cstr", file="BackgroundProcessContextFacts.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m5_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="BackgroundProcessContextFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m5_4 [cluster="Mock<JobStorage>.cstr", file="BackgroundProcessContextFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m5_20 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="33-33"];
m5_12 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="24-24"];
m5_13 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new BackgroundProcessContext(null, _storage.Object, _cts.Token)", span="24-24"];
m5_14 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="24-24"];
m5_21 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new BackgroundProcessContext(_serverId, null, _cts.Token)", span="33-33"];
m5_22 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="33-33"];
m5_6 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundProcessContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21"];
m5_7 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundProcessContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessContext(null, _storage.Object, _cts.Token))", span="23-24"];
m5_8 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundProcessContextFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="26-26"];
m5_9 [cluster="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundProcessContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.BackgroundProcessContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="21-21"];
m5_33 [file="BackgroundProcessContextFacts.cs", label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", span=""];
m6_63 [cluster="HangFire.Web.RazorPage.Write(object)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m6_3 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="int from, perPage", span="64-64"];
m6_4 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", color=green, community=0, file="BackgroundProcessExtensions.cs", label="int.TryParse(Request.QueryString[''from''], out from)", prediction=3, span="66-66"];
m6_5 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m6_59 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m6_57 [cluster="Unk.TryParse", file="BackgroundProcessExtensions.cs", label="Entry Unk.TryParse", span=""];
m6_55 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m6_68 [cluster="string.ToUpperInvariant()", file="BackgroundProcessExtensions.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m6_62 [cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32"];
m6_0 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47"];
m6_1 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\r\n'')", span="51-51"];
m6_65 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m6_9 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="pager = new Pager(from, perPage, monitor.ProcessingCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/processing'')\r\n        }", span="74-77"];
m6_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundProcessExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_7 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="JobList<ProcessingJobDto> processingJobs", span="70-70"];
m6_8 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="72-72"];
m6_10 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="processingJobs = monitor\r\n            .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-80"];
m6_12 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="pager.TotalPageCount == 0", span="92-92"];
m6_19 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="152-152"];
m6_53 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(RenderPartial(new Paginator(pager)))", span="374-374"];
m6_11 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\r\n'')", span="87-87"];
m6_21 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label=processingJobs, span="178-178"];
m6_13 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No jobs are being processed right now'' +\r\n''.\r\n    </div>\r\n'')", span="98-99"];
m6_14 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="111-113"];
m6_15 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(Request.LinkTo(''/processing/requeue''))", span="118-118"];
m6_16 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="HangFire.States.SucceededState", span=""];
m6_17 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(Request.LinkTo(''/processing/delete''))", span="135-135"];
m6_18 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="140-147"];
m6_20 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th class=''''min-width''''>Server</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Started</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="157-173"];
m6_22 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="184-184"];
m6_52 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="363-363"];
m6_23 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="189-189"];
m6_24 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral('' '')", span="194-194"];
m6_25 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(job.Value.InProcessingState ? ''hover'' : null)", span="199-199"];
m6_26 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="204-204"];
m6_27 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="job.Value.InProcessingState", span="209-209"];
m6_28 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="215-216"];
m6_31 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="236-237"];
m6_29 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(job.Key)", span="221-221"];
m6_32 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="242-242"];
m6_30 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\'' />\r\n'')", span="226-226"];
m6_33 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\''>\r\n                                '')", span="247-247"];
m6_34 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(HtmlHelper.JobId(job.Key))", span="252-252"];
m6_35 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="257-257"];
m6_36 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="!job.Value.InProcessingState", span="262-262"];
m6_37 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="268-269"];
m6_38 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          '')", span="279-280"];
m6_39 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(job.Value.ServerId.ToUpperInvariant())", span="285-285"];
m6_40 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\r\n                        </td>\r\n                        <td>\r\n                  '' +\r\n''          <a class=\''job-method\'' href=\'''')", span="290-291"];
m6_41 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="296-296"];
m6_42 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\''>\r\n                                '')", span="301-301"];
m6_43 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="306-306"];
m6_44 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\r\n                            </a>\r\n                        </td>\r\n              '' +\r\n''          <td class=\''align-right\''>\r\n'')", span="311-312"];
m6_45 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="job.Value.StartedAt.HasValue", span="317-317"];
m6_46 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="323-323"];
m6_51 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''                        </td>\r\n                    </tr>\r\n'')", span="353-353"];
m6_47 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.StartedAt.Value))", span="328-328"];
m6_48 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="333-333"];
m6_49 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Write(job.Value.StartedAt)", span="338-338"];
m6_50 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="343-343"];
m6_54 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47"];
m6_64 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m6_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m6_66 [cluster="Unk.Write", file="BackgroundProcessExtensions.cs", label="Entry Unk.Write", span=""];
m6_67 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m6_58 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m6_56 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m6_61 [cluster="HttpRequestBase.LinkTo(string)", file="BackgroundProcessExtensions.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m6_60 [cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42"];
m6_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m6_71 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m6_72 [file="BackgroundProcessExtensions.cs", label="HangFire.Web.Pages.ProcessingJobsPage", span=""];
m10_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m10_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m11_0 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m11_1 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="InfiniteLoopComponentFacts.cs", label="transaction == null", span="12-12"];
m11_3 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="InfiniteLoopComponentFacts.cs", label="_transaction = transaction", span="14-14"];
m11_2 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="InfiniteLoopComponentFacts.cs", label="throw new ArgumentNullException(''transaction'');", span="12-12"];
m11_4 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m11_13 [cluster="Unk.EnqueueItemOnList", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m11_6 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m11_7 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="InfiniteLoopComponentFacts.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="19-20"];
m11_8 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", span="17-17"];
m11_9 [cluster="Unk.QueueCommand", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.QueueCommand", span=""];
m11_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", span="23-23"];
m11_15 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="InfiniteLoopComponentFacts.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="25-26"];
m11_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", span="23-23"];
m11_27 [cluster="Unk.TrimList", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.TrimList", span=""];
m11_24 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="32-33"];
m11_11 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="19-20"];
m11_10 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="19-20"];
m11_12 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="19-20"];
m11_18 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="25-26"];
m11_17 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="25-26"];
m11_19 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="25-26"];
m11_25 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="32-33"];
m11_26 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="32-33"];
m11_21 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", span="29-29"];
m11_22 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="InfiniteLoopComponentFacts.cs", label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="32-33"];
m11_23 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", span="29-29"];
m11_20 [cluster="Unk.RemoveItemFromList", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.RemoveItemFromList", span=""];
m11_28 [file="InfiniteLoopComponentFacts.cs", label="HangFire.Redis.DataTypes.RedisWriteOnlyList", span=""];
m11_29 [file="InfiniteLoopComponentFacts.cs", label=string, span=""];
m11_30 [file="InfiniteLoopComponentFacts.cs", label=string, span=""];
m11_31 [file="InfiniteLoopComponentFacts.cs", label=string, span=""];
m11_32 [file="InfiniteLoopComponentFacts.cs", label=string, span=""];
m11_33 [file="InfiniteLoopComponentFacts.cs", label=string, span=""];
m11_34 [file="InfiniteLoopComponentFacts.cs", label=int, span=""];
m11_35 [file="InfiniteLoopComponentFacts.cs", label=int, span=""];
m12_25 [cluster="Unk.OnScenarioStart", file="InfiniteLoopProcess.cs", label="Entry Unk.OnScenarioStart", span=""];
m12_26 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioCleanup()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ScenarioCleanup()", span="67-67"];
m12_27 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioCleanup()", file="InfiniteLoopProcess.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m12_28 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioCleanup()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ScenarioCleanup()", span="67-67"];
m12_29 [cluster="Unk.CollectScenarioErrors", file="InfiniteLoopProcess.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m12_21 [cluster="Unk.OnScenarioEnd", file="InfiniteLoopProcess.cs", label="Entry Unk.OnScenarioEnd", span=""];
m12_9 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureTearDown()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.FeatureTearDown()", span="40-40"];
m12_10 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureTearDown()", file="InfiniteLoopProcess.cs", label="testRunner.OnFeatureEnd()", span="42-42"];
m12_11 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureTearDown()", file="InfiniteLoopProcess.cs", label="testRunner = null", span="43-43"];
m12_12 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureTearDown()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.FeatureTearDown()", span="40-40"];
m12_88 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", span="199-199"];
m12_89 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should remove only those servers that were timed out'', ((string[])(null)))", span="201-201"];
m12_90 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="203-203"];
m12_91 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="this.FeatureBackground()", span="205-205"];
m12_92 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server \'Active\' that was started a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="207-207"];
m12_93 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.And(''a server \'TimedOut\' that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="209-209"];
m12_94 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="211-211"];
m12_95 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.Then(''the server \'TimedOut\' should be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="213-213"];
m12_96 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.But(''the server \'Active\' should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="215-215"];
m12_97 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="this.ScenarioCleanup()", span="217-217"];
m12_98 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveOnlyThoseServersThatWereTimedOut()", span="199-199"];
m12_45 [cluster="Unk.And", file="InfiniteLoopProcess.cs", label="Entry Unk.And", span=""];
m12_99 [cluster="Unk.But", file="InfiniteLoopProcess.cs", label="Entry Unk.But", span=""];
m12_5 [cluster="Unk.GetTestRunner", file="InfiniteLoopProcess.cs", label="Entry Unk.GetTestRunner", span=""];
m12_0 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m12_1 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="InfiniteLoopProcess.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m12_2 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server watchdog'', ''\r\n  As an Administrator, I would like if the crashed servers \r\n  are automaticall'' +\r\n                    ''y removed.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
m12_3 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="InfiniteLoopProcess.cs", label="testRunner.OnFeatureStart(featureInfo)", span="36-36"];
m12_4 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m12_58 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", span="130-130"];
m12_59 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should not remove the recently started server with no heartbeats'', ((string[])(null)))", span="132-132"];
m12_60 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="134-134"];
m12_61 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="this.FeatureBackground()", span="136-136"];
m12_62 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server that was started a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="138-138"];
m12_63 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.And(''there are no any heartbeats'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="140-140"];
m12_64 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142"];
m12_65 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.Then(''the server should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144"];
m12_66 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="this.ScenarioCleanup()", span="146-146"];
m12_67 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithNoHeartbeats()", span="130-130"];
m12_14 [cluster="HangFire.Tests.ServerWatchdogFeature.TestInitialize()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.TestInitialize()", span="47-47"];
m12_15 [cluster="HangFire.Tests.ServerWatchdogFeature.TestInitialize()", file="InfiniteLoopProcess.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Server watchdog''))", span="49-50"];
m12_16 [cluster="HangFire.Tests.ServerWatchdogFeature.TestInitialize()", file="InfiniteLoopProcess.cs", label="HangFire.Tests.ServerWatchdogFeature.FeatureSetup(null)", span="52-52"];
m12_17 [cluster="HangFire.Tests.ServerWatchdogFeature.TestInitialize()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.TestInitialize()", span="47-47"];
m12_18 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioTearDown()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ScenarioTearDown()", span="57-57"];
m12_19 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioTearDown()", file="InfiniteLoopProcess.cs", label="testRunner.OnScenarioEnd()", span="59-59"];
m12_20 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioTearDown()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ScenarioTearDown()", span="57-57"];
m12_68 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", span="153-153"];
m12_69 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should remove the long-running server with no heartbeats'', ((string[])(null)))", span="155-155"];
m12_70 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="157-157"];
m12_71 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="this.FeatureBackground()", span="159-159"];
m12_72 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="161-161"];
m12_73 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.And(''there are no any heartbeats'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="163-163"];
m12_74 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="165-165"];
m12_75 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="testRunner.Then(''the server should be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="167-167"];
m12_76 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="this.ScenarioCleanup()", span="169-169"];
m12_77 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheLong_RunningServerWithNoHeartbeats()", span="153-153"];
m12_13 [cluster="Unk.OnFeatureEnd", file="InfiniteLoopProcess.cs", label="Entry Unk.OnFeatureEnd", span=""];
m12_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="InfiniteLoopProcess.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m12_46 [cluster="Unk.When", file="InfiniteLoopProcess.cs", label="Entry Unk.When", span=""];
m12_48 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", span="107-107"];
m12_49 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should remove the server when its last heartbeat timed out'', ((string[])(null)))", span="109-109"];
m12_50 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="111-111"];
m12_51 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="this.FeatureBackground()", span="113-113"];
m12_52 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="115-115"];
m12_53 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.And(''its last heartbeat was a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="117-117"];
m12_54 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="119-119"];
m12_55 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="testRunner.Then(''the server should be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="121-121"];
m12_56 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="this.ScenarioCleanup()", span="123-123"];
m12_57 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ItShouldRemoveTheServerWhenItsLastHeartbeatTimedOut()", span="107-107"];
m12_30 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureBackground()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.FeatureBackground()", span="72-72"];
m12_31 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureBackground()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server watchdog'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76"];
m12_32 [cluster="HangFire.Tests.ServerWatchdogFeature.FeatureBackground()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.FeatureBackground()", span="72-72"];
m12_78 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", span="176-176"];
m12_79 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should not remove the recently started server with timed out heartbeat'', ((string[])(null)))", span="178-178"];
m12_80 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="180-180"];
m12_81 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="this.FeatureBackground()", span="182-182"];
m12_82 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server that was started a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="184-184"];
m12_83 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="testRunner.And(''its last heartbeat was a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="186-186"];
m12_84 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="188-188"];
m12_85 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="testRunner.Then(''the server should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="190-190"];
m12_86 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="this.ScenarioCleanup()", span="192-192"];
m12_87 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheRecentlyStartedServerWithTimedOutHeartbeat()", span="176-176"];
m12_44 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="InfiniteLoopProcess.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m12_47 [cluster="Unk.Then", file="InfiniteLoopProcess.cs", label="Entry Unk.Then", span=""];
m12_33 [cluster="Unk.Given", file="InfiniteLoopProcess.cs", label="Entry Unk.Given", span=""];
m12_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="InfiniteLoopProcess.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m12_34 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", span="84-84"];
m12_35 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should not remove the active server'', ((string[])(null)))", span="86-86"];
m12_36 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="88-88"];
m12_37 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="this.FeatureBackground()", span="90-90"];
m12_38 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="testRunner.Given(''a server that was started a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92"];
m12_39 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="testRunner.And(''its last heartbeat was a second ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="94-94"];
m12_40 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="testRunner.When(''the watchdog gets the job done'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="96-96"];
m12_41 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="testRunner.Then(''the server should not be removed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="98-98"];
m12_42 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="this.ScenarioCleanup()", span="100-100"];
m12_43 [cluster="HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ItShouldNotRemoveTheActiveServer()", span="84-84"];
m12_8 [cluster="Unk.OnFeatureStart", file="InfiniteLoopProcess.cs", label="Entry Unk.OnFeatureStart", span=""];
m12_22 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="InfiniteLoopProcess.cs", label="Entry HangFire.Tests.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m12_23 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="InfiniteLoopProcess.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m12_24 [cluster="HangFire.Tests.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="InfiniteLoopProcess.cs", label="Exit HangFire.Tests.ServerWatchdogFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m12_100 [file="InfiniteLoopProcess.cs", label="HangFire.Tests.ServerWatchdogFeature", span=""];
m13_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m13_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m14_30 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Program.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55"];
m14_31 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Program.cs", label="return In(interval, typeof(TJob), args);", span="58-58"];
m14_32 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Program.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55"];
m14_10 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="31-31"];
m14_14 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="jobType == null", span="33-33"];
m14_17 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="var queue = JobHelper.GetQueue(jobType)", span="40-40"];
m14_19 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="return client.CreateJob(GenerateId(), jobType, enqueuedState, args);", span="43-43"];
m14_15 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="throw new ArgumentNullException(''jobType'');", span="35-35"];
m14_16 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="var client = CreateJobClientCallback()", span="38-38"];
m14_18 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="41-41"];
m14_20 [cluster="HangFire.Perform.Async(System.Type, object)", file="Program.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="31-31"];
m14_4 [cluster="HangFire.Perform.Async<TJob>()", file="Program.cs", label="Entry HangFire.Perform.Async<TJob>()", span="13-13"];
m14_5 [cluster="HangFire.Perform.Async<TJob>()", file="Program.cs", label="return Async<TJob>(null);", span="16-16"];
m14_6 [cluster="HangFire.Perform.Async<TJob>()", file="Program.cs", label="Exit HangFire.Perform.Async<TJob>()", span="13-13"];
m14_43 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="Program.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m14_7 [cluster="HangFire.Perform.Async<TJob>(object)", file="Program.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="20-20"];
m14_8 [cluster="HangFire.Perform.Async<TJob>(object)", file="Program.cs", label="return Async(typeof(TJob), args);", span="23-23"];
m14_9 [cluster="HangFire.Perform.Async<TJob>(object)", file="Program.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="20-20"];
m14_23 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="Program.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="20-20"];
m14_25 [cluster="HangFire.Perform.GenerateId()", file="Program.cs", label="Entry HangFire.Perform.GenerateId()", span="77-77"];
m14_45 [cluster="HangFire.Perform.GenerateId()", file="Program.cs", label="return Guid.NewGuid().ToString();", span="79-79"];
m14_46 [cluster="HangFire.Perform.GenerateId()", file="Program.cs", label="Exit HangFire.Perform.GenerateId()", span="77-77"];
m14_34 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Program.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61"];
m14_35 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Program.cs", label="return In(interval, jobType, null);", span="63-63"];
m14_36 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Program.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61"];
m14_33 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66"];
m14_41 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="return client.CreateJob(GenerateId(), jobType, scheduledState, args);", span="73-73"];
m14_37 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="jobType == null", span="68-68"];
m14_40 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(interval))", span="72-72"];
m14_38 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="throw new ArgumentNullException(''jobType'');", span="68-68"];
m14_39 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="var client = CreateJobClientCallback()", span="70-70"];
m14_42 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Program.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66"];
m14_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="Program.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m14_24 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="Program.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m14_48 [cluster="System.Guid.ToString()", file="Program.cs", label="Entry System.Guid.ToString()", span="0-0"];
m14_27 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Program.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48"];
m14_28 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Program.cs", label="return In<TJob>(interval, null);", span="51-51"];
m14_29 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Program.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48"];
m14_44 [cluster="System.DateTime.Add(System.TimeSpan)", file="Program.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m14_26 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="Program.cs", label="Entry HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m14_11 [cluster="HangFire.Perform.Async(System.Type)", file="Program.cs", label="Entry HangFire.Perform.Async(System.Type)", span="26-26"];
m14_12 [cluster="HangFire.Perform.Async(System.Type)", color=green, community=0, file="Program.cs", label="return Async(jobType, null);", prediction=4, span="28-28"];
m14_13 [cluster="HangFire.Perform.Async(System.Type)", file="Program.cs", label="Exit HangFire.Perform.Async(System.Type)", span="26-26"];
m14_0 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="Program.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m14_1 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="Program.cs", label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m14_2 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="10-10"];
m14_47 [cluster="System.Guid.NewGuid()", file="Program.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m14_22 [cluster="System.Func<TResult>.Invoke()", file="Program.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m16_96 [cluster="Mock<T>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<T>.cstr", span=""];
m16_10 [cluster="System.Collections.Generic.List<T>.List()", file="ServerBootstrapperFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_7 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m16_33 [cluster="Hangfire.Server.ServerBootstrapper.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerBootstrapper.Execute(Hangfire.Server.BackgroundProcessContext)", span="33-33"];
m16_42 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="50-50"];
m16_47 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="50-50"];
m16_22 [cluster="Unk.Equal", file="ServerBootstrapperFacts.cs", label="Entry Unk.Equal", span=""];
m16_9 [cluster="Mock<IStorageConnection>.cstr", file="ServerBootstrapperFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m16_0 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="17-17"];
m16_6 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="17-17"];
m16_56 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="61-61"];
m16_64 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="61-61"];
m16_74 [cluster="System.Threading.Thread.Sleep(int)", file="ServerBootstrapperFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m16_65 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", span="93-93"];
m16_95 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", span="93-93"];
m16_32 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="88-88"];
m16_91 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="88-88"];
m16_16 [cluster="Unk.GetConnection", file="ServerBootstrapperFacts.cs", label="Entry Unk.GetConnection", span=""];
m16_97 [cluster="Unk.Add", file="ServerBootstrapperFacts.cs", label="Entry Unk.Add", span=""];
m16_81 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="79-79"];
m16_85 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="79-79"];
m16_11 [cluster="Unk.Setup", file="ServerBootstrapperFacts.cs", label="Entry Unk.Setup", span=""];
m16_55 [cluster="Unk.Dispose", file="ServerBootstrapperFacts.cs", label="Entry Unk.Dispose", span=""];
m16_27 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="38-38"];
m16_31 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="38-38"];
m16_48 [cluster="Unk.Exactly", file="ServerBootstrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m16_86 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="85-85"];
m16_13 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="25-25"];
m16_15 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="25-25"];
m16_23 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="32-32"];
m16_25 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="32-32"];
m16_35 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="44-46"];
m16_37 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="44-46"];
m16_39 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="46-46"];
m16_41 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="46-46"];
m16_49 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="56-56"];
m16_52 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="57-57"];
m16_51 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="56-56"];
m16_54 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="57-57"];
m16_67 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="65-65"];
m16_71 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="65-65"];
m16_75 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="74-74"];
m16_78 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="75-75"];
m16_69 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="65-65"];
m16_73 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="65-65"];
m16_77 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="74-74"];
m16_80 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="75-75"];
m16_88 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="85-85"];
m16_38 [cluster="Unk.AnnounceServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.AnnounceServer", span=""];
m16_17 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", span="29-29"];
m16_20 [cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="ServerBootstrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", span="29-29"];
m16_89 [cluster="Unk.RemoveServer", file="ServerBootstrapperFacts.cs", label="Entry Unk.RemoveServer", span=""];
m16_70 [cluster="Unk.Execute", file="ServerBootstrapperFacts.cs", label="Entry Unk.Execute", span=""];
m16_66 [cluster="Unk.Callback", file="ServerBootstrapperFacts.cs", label="Entry Unk.Callback", span=""];
m16_12 [cluster="Unk.Returns", file="ServerBootstrapperFacts.cs", label="Entry Unk.Returns", span=""];
m16_8 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="ServerBootstrapperFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m16_26 [cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>)", file="ServerBootstrapperFacts.cs", label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>)", span="27-27"];
m16_34 [cluster="Unk.Verify", file="ServerBootstrapperFacts.cs", label="Entry Unk.Verify", span=""];
m16_98 [file="ServerBootstrapperFacts.cs", label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span=""];
n102 -> n32  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
n102 -> n46  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
n102 -> n70  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
n102 -> n74  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
n102 -> n87  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
n102 -> n91  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
n103 -> n16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
n9 -> n96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
n10 -> n16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
n16 -> n19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n23 -> n26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
n23 -> n28  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
n23 -> n32  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
n30 -> n33  [color=darkseagreen4, key=1, label=jobId, style=dashed];
n38 -> n70  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
n38 -> n74  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
n39 -> n42  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
n39 -> n44  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n39 -> n46  [color=darkseagreen4, key=1, label=string, style=dashed];
n39 -> n51  [color=darkseagreen4, key=1, label="string[]", style=dashed];
n48 -> n51  [color=darkseagreen4, key=1, label=jobData, style=dashed];
n48 -> n53  [color=darkseagreen4, key=1, label=jobData, style=dashed];
n57 -> n60  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
n68 -> n70  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
n78 -> n82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>", style=dashed];
n79 -> n87  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
n95 -> n97  [color=darkseagreen4, key=1, label=handlerCollection, style=dashed];
n95 -> n98  [color=darkseagreen4, key=1, label=handlerCollection, style=dashed];
d16 -> d24  [color=green, key=1, label=server, style=dashed];
d9 -> d12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
d9 -> d14  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
d9 -> d25  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
d19 -> d24  [color=darkseagreen4, key=1, label=token, style=dashed];
d19 -> d22  [color=darkseagreen4, key=1, label=token, style=dashed];
d21 -> d24  [color=darkseagreen4, key=1, label=token, style=dashed];
d47 -> d50  [color=darkseagreen4, key=1, label=string, style=dashed];
d47 -> d52  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
d47 -> d54  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
d47 -> d56  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
d47 -> d57  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
d47 -> d63  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
d47 -> d58  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
d57 -> d62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d75 -> d63  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
d76 -> d63  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m0_12 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m0_12 -> m0_26  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m0_13 -> m0_20  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_13 -> m0_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_13 -> m0_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_13 -> m0_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m0_22 -> m0_36  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m0_22 -> m0_25  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m0_24 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_64 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_64 -> m0_15  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_64 -> m0_20  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_64 -> m0_24  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_64 -> m0_36  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_64 -> m0_49  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_64 -> m0_55  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m0_65 -> m0_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_66 -> m0_36  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m1_83 -> m1_97  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m1_83 -> m1_98  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m1_83 -> m1_101  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m1_83 -> m1_102  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_96 -> m1_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_99 -> m1_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_65 -> m1_68  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m1_65 -> m1_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m1_65 -> m1_74  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m1_65 -> m1_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m1_65 -> m1_77  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m1_65 -> m1_78  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m1_65 -> m1_79  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m3_20 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m3_20 -> m3_16  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_12 -> m4_7  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_18 -> m4_4  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m4_18 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m5_25 -> m5_27  [color=green, key=1, label=context, style=dashed];
m5_25 -> m5_28  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_25 -> m5_29  [color=darkseagreen4, key=1, label=context, style=dashed];
m5_17 -> m5_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_7 -> m5_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_33 -> m5_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m5_33 -> m5_21  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m5_33 -> m5_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m5_33 -> m5_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m5_33 -> m5_29  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.BackgroundProcessContextFacts", style=dashed];
m6_9 -> m6_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_9 -> m6_19  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_9 -> m6_53  [color=darkseagreen4, key=1, label=pager, style=dashed];
m6_10 -> m6_21  [color=darkseagreen4, key=1, label=processingJobs, style=dashed];
m6_21 -> m6_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_16 -> m6_4  [color=green, key=1, label="HangFire.States.SucceededState", style=dashed];
m6_16 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m6_23 -> m6_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_25 -> m6_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_25 -> m6_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_27 -> m6_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_27 -> m6_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_27 -> m6_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_29 -> m6_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_29 -> m6_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_32 -> m6_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_34 -> m6_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_36 -> m6_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_36 -> m6_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_39 -> m6_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_39 -> m6_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_41 -> m6_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_41 -> m6_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_43 -> m6_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_43 -> m6_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_45 -> m6_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_45 -> m6_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_47 -> m6_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_49 -> m6_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_72 -> m6_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m6_72 -> m6_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m11_6 -> m11_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_7 -> m11_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_14 -> m11_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_15 -> m11_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_21 -> m11_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_22 -> m11_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_28 -> m11_7  [color=darkseagreen4, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyList", style=dashed];
m11_28 -> m11_15  [color=darkseagreen4, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyList", style=dashed];
m11_28 -> m11_22  [color=darkseagreen4, key=1, label="HangFire.Redis.DataTypes.RedisWriteOnlyList", style=dashed];
m11_29 -> m11_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_30 -> m11_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_31 -> m11_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_32 -> m11_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_33 -> m11_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_34 -> m11_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m11_35 -> m11_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_100 -> m12_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_42  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_50  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_51  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_56  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_60  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_76  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_80  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_86  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_90  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_91  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m12_100 -> m12_97  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogFeature", style=dashed];
m14_10 -> m14_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_16 -> m14_19  [color=darkseagreen4, key=1, label=client, style=dashed];
m14_33 -> m14_41  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m14_39 -> m14_41  [color=darkseagreen4, key=1, label=client, style=dashed];
}
