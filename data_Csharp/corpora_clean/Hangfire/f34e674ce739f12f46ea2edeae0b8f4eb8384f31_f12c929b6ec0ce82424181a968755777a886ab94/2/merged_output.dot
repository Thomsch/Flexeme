digraph  {
n42 [label="HangFire.States.ApplyStateContext", span=""];
n0 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26"];
n1 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="connection == null", span="33-33"];
n3 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="newState == null", span="34-34"];
n5 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="_connection = connection", span="36-36"];
n6 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="OldStateName = oldStateName", span="37-37"];
n7 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="NewState = newState", span="38-38"];
n2 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="throw new ArgumentNullException(''connection'');", span="33-33"];
n4 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="throw new ArgumentNullException(''newState'');", span="34-34"];
n8 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="39-39"];
n9 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", label="Exit HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26"];
n11 [cluster="System.TimeSpan.FromDays(double)", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
n10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n12 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
n13 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="handlers == null", span="49-49"];
n15 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="filters == null", span="50-50"];
n18 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="handlers.GetHandlers(OldStateName)", span="54-54"];
n20 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label=filters, span="59-59"];
n23 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="handlers.GetHandlers(NewState.Name)", span="66-66"];
n25 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label=filters, span="71-71"];
n14 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="throw new ArgumentNullException(''handlers'');", span="49-49"];
n16 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="throw new ArgumentNullException(''filters'');", span="50-50"];
n17 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="var transaction = _connection.CreateWriteTransaction()", span="52-52"];
n32 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26"];
n19 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="handler.Unapply(this, transaction)", span="56-56"];
n21 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="filter.OnStateUnapplied(this, transaction)", span="61-61"];
n22 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="transaction.SetJobState(JobId, NewState)", span="64-64"];
n24 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="handler.Apply(this, transaction)", span="68-68"];
n26 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="filter.OnStateApplied(this, transaction)", span="73-73"];
n28 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="transaction.ExpireJob(JobId, JobExpirationTimeout)", span="78-78"];
n29 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="transaction.PersistJob(JobId)", span="82-82"];
n30 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="transaction.Commit()", span="85-85"];
n33 [cluster="HangFire.States.StateHandlerCollection.GetHandlers(string)", label="Entry HangFire.States.StateHandlerCollection.GetHandlers(string)", span="40-40"];
n34 [cluster="HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.States.IStateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="25-25"];
n35 [cluster="HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.States.IApplyStateFilter.OnStateUnapplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="36-36"];
n36 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
n37 [cluster="HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.States.IStateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="24-24"];
n27 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", color=red, community=0, label="1: NewState.ExpireJobOnApply", span="76-76"];
n38 [cluster="HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.States.IApplyStateFilter.OnStateApplied(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="29-29"];
n39 [cluster="HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", label="Entry HangFire.Storage.IWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="24-24"];
n40 [cluster="HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", label="Entry HangFire.Storage.IWriteOnlyTransaction.PersistJob(string)", span="25-25"];
n31 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", label="Exit HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
n41 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
d3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, label="1: Transaction = transaction", span="29-29"];
d6 [label="HangFire.Common.States.StateApplyingContext", span=""];
d0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
d1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", label="transaction == null", span="27-27"];
d4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
d2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
d5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_23 [cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66"];
m0_24 [cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="ApplyStateContextFacts.cs", label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68"];
m0_25 [cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66"];
m0_9 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ApplyStateContextFacts.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m0_76 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m0_5 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", span="36-36"];
m0_6 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", file="ApplyStateContextFacts.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults))", span="38-38"];
m0_7 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilter(string)", span="36-36"];
m0_116 [cluster="Unk.Apply", file="ApplyStateContextFacts.cs", label="Entry Unk.Apply", span=""];
m0_50 [cluster="Unk.ToDictionary", file="ApplyStateContextFacts.cs", label="Entry Unk.ToDictionary", span=""];
m0_86 [cluster="Unk.IsTrue", file="ApplyStateContextFacts.cs", label="Entry Unk.IsTrue", span=""];
m0_22 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12"];
m0_46 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94"];
m0_47 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="ApplyStateContextFacts.cs", label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96"];
m0_48 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="ApplyStateContextFacts.cs", label="When(''I create a job'')", span="97-97"];
m0_49 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94"];
m0_34 [cluster="Mock<JobState>.cstr", file="ApplyStateContextFacts.cs", label="Entry Mock<JobState>.cstr", span=""];
m0_108 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ApplyStateContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m0_87 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165"];
m0_88 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", color=green, community=0, file="ApplyStateContextFacts.cs", label="0: Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="167-167"];
m0_89 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheStorageDoesNotContainTheJob()", span="165-165"];
m0_106 [cluster="Unk.>", file="ApplyStateContextFacts.cs", label="Entry Unk.>", span=""];
m0_135 [cluster="Unk.AreNotEqual", file="ApplyStateContextFacts.cs", label="Entry Unk.AreNotEqual", span=""];
m0_77 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146"];
m0_78 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ApplyStateContextFacts.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(ClientSteps), null, null)", span="150-150"];
m0_80 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ApplyStateContextFacts.cs", label="_exception = ex", span="154-154"];
m0_79 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ApplyStateContextFacts.cs", label=Exception, span="152-152"];
m0_81 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="146-146"];
m0_0 [cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenAClient()", span="28-28"];
m0_1 [cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="ApplyStateContextFacts.cs", label="_client = new JobClient(\r\n                RedisFactory.BasicManager,\r\n                new JobCreator(_clientFilters, _exceptionFilters))", span="30-32"];
m0_2 [cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenAClient()", span="28-28"];
m0_117 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="203-203"];
m0_118 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="ApplyStateContextFacts.cs", label="Assert.IsNotNull(_exception)", span="205-205"];
m0_119 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="ApplyStateContextFacts.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="206-206"];
m0_120 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="203-203"];
m0_90 [cluster="Unk.IsFalse", file="ApplyStateContextFacts.cs", label="Entry Unk.IsFalse", span=""];
m0_107 [cluster="Unk.AreEqual", file="ApplyStateContextFacts.cs", label="Entry Unk.AreEqual", span=""];
m0_13 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48"];
m0_14 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="ApplyStateContextFacts.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, false, true))", span="50-50"];
m0_15 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="48-48"];
m0_147 [cluster="Unk.IsNull", file="ApplyStateContextFacts.cs", label="Entry Unk.IsNull", span=""];
m0_136 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="230-230"];
m0_137 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="232-232"];
m0_141 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="237-237"];
m0_138 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="var i = 0", span="234-234"];
m0_140 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="var filter = table.Rows[i][''Filter'']", span="236-236"];
m0_142 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="i++", span="234-234"];
m0_139 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="i < table.RowCount", span="234-234"];
m0_143 [cluster="HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="230-230"];
m0_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m0_45 [cluster="Unk.GetProperties", file="ApplyStateContextFacts.cs", label="Entry Unk.GetProperties", span=""];
m0_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ApplyStateContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_51 [cluster="Unk.When", file="ApplyStateContextFacts.cs", label="Entry Unk.When", span=""];
m0_97 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178"];
m0_100 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185"];
m0_101 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label=_arguments, span="186-186"];
m0_103 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189"];
m0_99 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183"];
m0_102 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188"];
m0_98 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182"];
m0_104 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178"];
m0_144 [cluster="HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", span="242-242"];
m0_145 [cluster="HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", file="ApplyStateContextFacts.cs", label="Assert.IsNull(_exception)", span="244-244"];
m0_146 [cluster="HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenNoExceptionWereThrown()", span="242-242"];
m0_82 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="159-159"];
m0_83 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ApplyStateContextFacts.cs", label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161"];
m0_84 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="159-159"];
m0_35 [cluster="Unk.Setup", file="ApplyStateContextFacts.cs", label="Entry Unk.Setup", span=""];
m0_123 [cluster="Unk.IsInstanceOfType", file="ApplyStateContextFacts.cs", label="Entry Unk.IsInstanceOfType", span=""];
m0_26 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJob()", span="73-73"];
m0_27 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75"];
m0_28 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="76-76"];
m0_29 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="77-77"];
m0_30 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="81-85"];
m0_32 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="_exception = ex", span="89-89"];
m0_31 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label=Exception, span="87-87"];
m0_33 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJob()", span="73-73"];
m0_66 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="120-120"];
m0_67 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ApplyStateContextFacts.cs", label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124"];
m0_69 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ApplyStateContextFacts.cs", label="_exception = ex", span="128-128"];
m0_68 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ApplyStateContextFacts.cs", label=Exception, span="126-126"];
m0_70 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="120-120"];
m0_122 [cluster="System.Type.GetType(string, bool)", file="ApplyStateContextFacts.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m0_113 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Entry lambda expression", span="197-197"];
m0_39 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Entry lambda expression", span="76-76"];
m0_42 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Entry lambda expression", span="77-77"];
m0_52 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Entry lambda expression", span="96-96"];
m0_55 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Entry lambda expression", span="96-96"];
m0_41 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Exit lambda expression", span="76-76"];
m0_40 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="x.StateName", span="76-76"];
m0_44 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Exit lambda expression", span="77-77"];
m0_43 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="x.GetProperties()", span="77-77"];
m0_54 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Exit lambda expression", span="96-96"];
m0_53 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="x[''Name'']", span="96-96"];
m0_57 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Exit lambda expression", span="96-96"];
m0_56 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="x[''Value'']", span="96-96"];
m0_114 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="197-197"];
m0_115 [cluster="lambda expression", file="ApplyStateContextFacts.cs", label="Exit lambda expression", span="197-197"];
m0_121 [cluster="Unk.IsNotNull", file="ApplyStateContextFacts.cs", label="Entry Unk.IsNotNull", span=""];
m0_112 [cluster="Unk.Verify", file="ApplyStateContextFacts.cs", label="Entry Unk.Verify", span=""];
m0_71 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133"];
m0_72 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ApplyStateContextFacts.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="137-137"];
m0_74 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ApplyStateContextFacts.cs", label="_exception = ex", span="141-141"];
m0_73 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ApplyStateContextFacts.cs", label=Exception, span="139-139"];
m0_75 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="133-133"];
m0_10 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42"];
m0_11 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="ApplyStateContextFacts.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, false, true))", span="44-44"];
m0_12 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="42-42"];
m0_8 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m0_58 [cluster="HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101"];
m0_59 [cluster="HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="ApplyStateContextFacts.cs", label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103"];
m0_60 [cluster="HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101"];
m0_105 [cluster="Unk.GetValueFromHash", file="ApplyStateContextFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m0_16 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54"];
m0_17 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="ApplyStateContextFacts.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56"];
m0_18 [cluster="HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54"];
m0_36 [cluster="Unk.Returns", file="ApplyStateContextFacts.cs", label="Entry Unk.Returns", span=""];
m0_124 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="211-211"];
m0_125 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="213-213"];
m0_129 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Assert.AreEqual(method, _clientFilterResults[i])", span="218-218"];
m0_126 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="var i = 0", span="215-215"];
m0_128 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="var method = table.Rows[i][''Method'']", span="217-217"];
m0_130 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="i++", span="215-215"];
m0_127 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="i < table.RowCount", span="215-215"];
m0_131 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="211-211"];
m0_19 [cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", span="60-60"];
m0_20 [cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", file="ApplyStateContextFacts.cs", label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62"];
m0_21 [cluster="HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheExceptionFilter(string)", span="60-60"];
m0_38 [cluster="Unk.CreateJob", file="ApplyStateContextFacts.cs", label="Entry Unk.CreateJob", span=""];
m0_4 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m0_109 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194"];
m0_110 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ApplyStateContextFacts.cs", label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="196-198"];
m0_111 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194"];
m0_61 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107"];
m0_64 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", color=green, community=0, file="ApplyStateContextFacts.cs", label="0: _exception = ex", span="115-115"];
m0_63 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="ApplyStateContextFacts.cs", label=Exception, span="113-113"];
m0_62 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="ApplyStateContextFacts.cs", label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111"];
m0_65 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107"];
m0_85 [cluster="Unk.ContainsKey", file="ApplyStateContextFacts.cs", label="Entry Unk.ContainsKey", span=""];
m0_132 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", span="223-223"];
m0_133 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", file="ApplyStateContextFacts.cs", label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="225-225"];
m0_134 [cluster="HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheClientFilterWasExecuted()", span="223-223"];
m0_148 [file="ApplyStateContextFacts.cs", label="HangFire.Tests.ClientSteps", span=""];
m1_19 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81"];
m1_20 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="job == null", span="83-83"];
m1_22 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="state == null", span="84-84"];
m1_24 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="var context = new CreateContext(_connection, _stateMachineFactory, job, state)", span="88-88"];
m1_21 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''job'');", span="83-83"];
m1_23 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''state'');", span="84-84"];
m1_25 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="_process.Run(context)", span="89-89"];
m1_26 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="return context.JobId;", span="91-91"];
m1_27 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label=Exception, span="93-93"];
m1_28 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="throw new CreateJobFailedException(''Job creation process has bee failed. See inner exception for details'', ex);", span="95-95"];
m1_29 [cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="81-81"];
m1_31 [cluster="HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", file="BackgroundJobClient.cs", label="Entry HangFire.Client.IJobCreationProcess.Run(HangFire.Client.CreateContext)", span="28-28"];
m1_32 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="BackgroundJobClient.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="34-34"];
m1_33 [cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.Dispose()", span="103-103"];
m1_34 [cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs", label="_connection.Dispose()", span="105-105"];
m1_35 [cluster="HangFire.BackgroundJobClient.Dispose()", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.Dispose()", span="103-103"];
m1_30 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="BackgroundJobClient.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m1_4 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="54-54"];
m1_5 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory)", span="54-54"];
m1_36 [cluster="System.IDisposable.Dispose()", file="BackgroundJobClient.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_2 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49"];
m1_3 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage)", span="49-49"];
m1_6 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66"];
m1_7 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="storage == null", span="71-71"];
m1_9 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="stateMachineFactory == null", span="72-72"];
m1_11 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="process == null", span="73-73"];
m1_13 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="_connection = storage.GetConnection()", span="75-75"];
m1_14 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="_stateMachineFactory = stateMachineFactory", span="76-76"];
m1_15 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="_process = process", span="77-77"];
m1_8 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''storage'');", span="71-71"];
m1_10 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="72-72"];
m1_12 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="throw new ArgumentNullException(''process'');", span="73-73"];
m1_16 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.BackgroundJobClient(HangFire.JobStorage, HangFire.States.IStateMachineFactory, HangFire.Client.IJobCreationProcess)", span="66-66"];
m1_18 [cluster="HangFire.JobStorage.GetConnection()", file="BackgroundJobClient.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m1_0 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClient.cs", label="Entry HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m1_1 [cluster="HangFire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClient.cs", label="Exit HangFire.BackgroundJobClient.BackgroundJobClient()", span="39-39"];
m1_37 [file="BackgroundJobClient.cs", label="HangFire.BackgroundJobClient", span=""];
m2_8 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="24-24"];
m2_9 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="BackgroundJobClientExtensions.cs", label="_redis.Dispose()", span="26-26"];
m2_10 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="24-24"];
m2_73 [cluster="int.ToString(System.IFormatProvider)", file="BackgroundJobClientExtensions.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m2_132 [cluster="Unk.FromNullableStringTimestamp", file="BackgroundJobClientExtensions.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m2_20 [cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17"];
m2_51 [cluster="Unk.SetRangeInHash", file="BackgroundJobClientExtensions.cs", label="Entry Unk.SetRangeInHash", span=""];
m2_17 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m2_18 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="36-36"];
m2_19 [cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34"];
m2_26 [cluster="System.TimeSpan.FromMinutes(double)", file="BackgroundJobClientExtensions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m2_6 [cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12"];
m2_131 [cluster="Unk.FromStringTimestamp", file="BackgroundJobClientExtensions.cs", label="Entry Unk.FromStringTimestamp", span=""];
m2_99 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m2_100 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="139-139"];
m2_111 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="utcNow > maxTime.Add(timeOut)", span="170-170"];
m2_101 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="140-140"];
m2_104 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label=serverNames, span="146-146"];
m2_102 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var utcNow = DateTime.UtcNow", span="142-142"];
m2_106 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="150-158"];
m2_109 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label=heartbeats, span="165-165"];
m2_103 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var pipeline = _redis.CreatePipeline()", span="144-144"];
m2_107 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", color=red, community=0, file="BackgroundJobClientExtensions.cs", label="0: pipeline.Flush()", span="161-161"];
m2_105 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var name = serverName", span="148-148"];
m2_108 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var removedServerCount = 0", span="164-164"];
m2_113 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="removedServerCount++", span="173-173"];
m2_114 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="return removedServerCount;", span="177-177"];
m2_110 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="167-168"];
m2_112 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="RemoveServer(_redis, heartbeat.Key)", span="172-172"];
m2_115 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137"];
m2_98 [cluster="Unk.SetEntryInHash", file="BackgroundJobClientExtensions.cs", label="Entry Unk.SetEntryInHash", span=""];
m2_68 [cluster="Unk.AddItemToSet", file="BackgroundJobClientExtensions.cs", label="Entry Unk.AddItemToSet", span=""];
m2_25 [cluster="string.Format(string, object)", file="BackgroundJobClientExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m2_148 [cluster="Unk.RemoveEntryFromHash", file="BackgroundJobClientExtensions.cs", label="Entry Unk.RemoveEntryFromHash", span=""];
m2_96 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="BackgroundJobClientExtensions.cs", label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="131-134"];
m2_95 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129"];
m2_97 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129"];
m2_94 [cluster="Unk.RemoveEntry", file="BackgroundJobClientExtensions.cs", label="Entry Unk.RemoveEntry", span=""];
m2_84 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="121-123"];
m2_81 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m2_82 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="BackgroundJobClientExtensions.cs", label="var transaction = redis.CreateTransaction()", span="115-115"];
m2_83 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="117-119"];
m2_85 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="BackgroundJobClientExtensions.cs", label="transaction.Commit()", span="125-125"];
m2_86 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113"];
m2_12 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29"];
m2_13 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="BackgroundJobClientExtensions.cs", label="return new RedisWriteOnlyTransaction(_redis.CreateTransaction());", span="31-31"];
m2_14 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29"];
m2_7 [cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11"];
m2_21 [cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobClientExtensions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m2_55 [cluster="Unk.ExpireEntryIn", file="BackgroundJobClientExtensions.cs", label="Entry Unk.ExpireEntryIn", span=""];
m2_42 [cluster="System.Guid.ToString()", file="BackgroundJobClientExtensions.cs", label="Entry System.Guid.ToString()", span="0-0"];
m2_118 [cluster="Unk.Flush", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Flush", span=""];
m2_15 [cluster="RedisWriteOnlyTransaction.cstr", file="BackgroundJobClientExtensions.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m2_133 [cluster="Unk.Add", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Add", span=""];
m2_121 [cluster="System.DateTime.Add(System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m2_72 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobClientExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_130 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="BackgroundJobClientExtensions.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m2_138 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="195-197"];
m2_134 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m2_135 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="var transaction = redis.CreateTransaction()", span="185-185"];
m2_136 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="187-190"];
m2_137 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="192-194"];
m2_139 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="transaction.Commit()", span="199-199"];
m2_140 [cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180"];
m2_77 [cluster="Unk.AddItemToList", file="BackgroundJobClientExtensions.cs", label="Entry Unk.AddItemToList", span=""];
m2_11 [cluster="Unk.Dispose", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Dispose", span=""];
m2_56 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81"];
m2_57 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="var transaction = _redis.CreateTransaction()", span="83-83"];
m2_58 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="85-86"];
m2_59 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="88-94"];
m2_60 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label=queues, span="96-96"];
m2_62 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="99-101"];
m2_63 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="transaction.Commit()", span="104-104"];
m2_61 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="var queue1 = queue", span="98-98"];
m2_64 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81"];
m2_90 [cluster="Unk.RemoveItemFromSet", file="BackgroundJobClientExtensions.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m2_119 [cluster="System.DateTime.DateTime(long)", file="BackgroundJobClientExtensions.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m2_78 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108"];
m2_79 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="BackgroundJobClientExtensions.cs", label="RemoveServer(_redis, serverId)", span="110-110"];
m2_80 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108"];
m2_37 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="70-72"];
m2_28 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50"];
m2_29 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var jobId = Guid.NewGuid().ToString()", span="56-56"];
m2_30 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="parameters.Add(''Type'', invocationData.Type)", span="58-58"];
m2_31 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="parameters.Add(''Method'', invocationData.Method)", span="59-59"];
m2_32 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="parameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="60-60"];
m2_33 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="parameters.Add(''Arguments'', JobHelper.ToJson(arguments))", span="61-61"];
m2_34 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="parameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="62-62"];
m2_36 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters))", span="66-68"];
m2_39 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="return jobId;", span="78-78"];
m2_35 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="var transaction = _redis.CreateTransaction()", span="64-64"];
m2_38 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="transaction.Commit()", span="75-75"];
m2_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50"];
m2_120 [cluster="System.Math.Max(long, long)", file="BackgroundJobClientExtensions.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m2_149 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="195-197"];
m2_49 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="66-68"];
m2_53 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="70-72"];
m2_48 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="66-68"];
m2_52 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="70-72"];
m2_50 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="66-68"];
m2_54 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="70-72"];
m2_66 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="85-86"];
m2_70 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="88-94"];
m2_75 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="99-101"];
m2_65 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="85-86"];
m2_69 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="88-94"];
m2_74 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="99-101"];
m2_67 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="85-86"];
m2_71 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="88-94"];
m2_76 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="99-101"];
m2_88 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="117-119"];
m2_92 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="121-123"];
m2_87 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="117-119"];
m2_91 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="121-123"];
m2_89 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="117-119"];
m2_93 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="121-123"];
m2_128 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="154-158"];
m2_123 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="151-153"];
m2_122 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="151-153"];
m2_127 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="154-158"];
m2_124 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="151-153"];
m2_129 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="154-158"];
m2_142 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="187-190"];
m2_146 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="192-194"];
m2_150 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="195-197"];
m2_141 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="187-190"];
m2_145 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Entry lambda expression", span="192-194"];
m2_143 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="187-190"];
m2_147 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="192-194"];
m2_151 [cluster="lambda expression", file="BackgroundJobClientExtensions.cs", label="Exit lambda expression", span="195-197"];
m2_45 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m2_22 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39"];
m2_23 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="BackgroundJobClientExtensions.cs", label="return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="41-43"];
m2_24 [cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39"];
m2_117 [cluster="Unk.CreatePipeline", file="BackgroundJobClientExtensions.cs", label="Entry Unk.CreatePipeline", span=""];
m2_144 [cluster="Unk.RemoveItemFromList", file="BackgroundJobClientExtensions.cs", label="Entry Unk.RemoveItemFromList", span=""];
m2_41 [cluster="System.Guid.NewGuid()", file="BackgroundJobClientExtensions.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m2_44 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m2_47 [cluster="Unk.Commit", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Commit", span=""];
m2_116 [cluster="Unk.GetAllItemsFromSet", file="BackgroundJobClientExtensions.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m2_126 [cluster="Unk.GetValuesFromHash", file="BackgroundJobClientExtensions.cs", label="Entry Unk.GetValuesFromHash", span=""];
m2_125 [cluster="Unk.Format", file="BackgroundJobClientExtensions.cs", label="Entry Unk.Format", span=""];
m2_46 [cluster="Unk.QueueCommand", file="BackgroundJobClientExtensions.cs", label="Entry Unk.QueueCommand", span=""];
m2_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m2_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="BackgroundJobClientExtensions.cs", label="_redis = redis", span="17-17"];
m2_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Jobs = new RedisJob(redis)", span="19-19"];
m2_3 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Sets = new RedisSet(redis)", span="20-20"];
m2_4 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Storage = storage", span="21-21"];
m2_5 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="BackgroundJobClientExtensions.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m2_43 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobClientExtensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_27 [cluster="Unk.AcquireLock", file="BackgroundJobClientExtensions.cs", label="Entry Unk.AcquireLock", span=""];
m2_16 [cluster="Unk.CreateTransaction", file="BackgroundJobClientExtensions.cs", label="Entry Unk.CreateTransaction", span=""];
m2_152 [file="BackgroundJobClientExtensions.cs", label="HangFire.Redis.RedisConnection", span=""];
m2_153 [file="BackgroundJobClientExtensions.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m2_154 [file="BackgroundJobClientExtensions.cs", label=jobId, span=""];
m2_155 [file="BackgroundJobClientExtensions.cs", label="System.TimeSpan", span=""];
m2_156 [file="BackgroundJobClientExtensions.cs", label=string, span=""];
m2_157 [file="BackgroundJobClientExtensions.cs", label=int, span=""];
m2_158 [file="BackgroundJobClientExtensions.cs", label=queue1, span=""];
m2_159 [file="BackgroundJobClientExtensions.cs", label=string, span=""];
m2_160 [file="BackgroundJobClientExtensions.cs", label=name, span=""];
m2_161 [file="BackgroundJobClientExtensions.cs", label=heartbeats, span=""];
m2_162 [file="BackgroundJobClientExtensions.cs", label=string, span=""];
m2_163 [file="BackgroundJobClientExtensions.cs", label=string, span=""];
m3_6 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="13-13"];
m3_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m3_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m3_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundJobClientExtensionsFacts.cs", label="var state = new FailedState(new Exception())", span="19-19"];
m3_31 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
m3_32 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42"];
m3_33 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="44-44"];
m3_34 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
m3_95 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
m3_96 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96"];
m3_97 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="98-98"];
m3_98 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
m3_5 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="new FailedState(null)", span="13-13"];
m3_4 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="13-13"];
m3_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m3_13 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24"];
m3_12 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="23-24"];
m3_10 [cluster="Unk.>", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.>", span=""];
m3_22 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34"];
m3_52 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
m3_53 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60"];
m3_54 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="62-62"];
m3_55 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
m3_24 [cluster="Unk.Verify", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Verify", span=""];
m3_3 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
m3_30 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="34-34"];
m3_41 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m3_194 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m3_151 [cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106"];
m3_176 [cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123"];
m3_102 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71"];
m3_67 [cluster="Unk.Enqueue", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Enqueue", span=""];
m3_59 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
m3_20 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="33-33"];
m3_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24"];
m3_23 [cluster="HangFire.States.FailedState.SerializeData()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m3_119 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
m3_120 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116"];
m3_121 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="118-118"];
m3_122 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
m3_106 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
m3_107 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104"];
m3_108 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108"];
m3_109 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
m3_126 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90"];
m3_169 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m3_170 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156"];
m3_171 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="158-158"];
m3_172 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m3_14 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="23-24"];
m3_15 [cluster="Unk.Create", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Create", span=""];
m3_16 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="24-24"];
m3_17 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="24-24"];
m3_18 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="24-24"];
m3_19 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
m3_193 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
m3_127 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="116-116"];
m3_29 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37"];
m3_36 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42"];
m3_50 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52"];
m3_25 [cluster="System.Exception.ToString()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry System.Exception.ToString()", span="0-0"];
m3_28 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.False(state.IsFinal)", span="41-41"];
m3_35 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="41-42"];
m3_37 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="41-42"];
m3_38 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="42-42"];
m3_46 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="50-50"];
m3_49 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="52-52"];
m3_51 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="52-52"];
m3_68 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="68-68"];
m3_71 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="70-70"];
m3_89 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="86-86"];
m3_92 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="88-88"];
m3_110 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="104-104"];
m3_113 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="106-108"];
m3_134 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="124-124"];
m3_137 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="126-128"];
m3_160 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="144-144"];
m3_163 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="146-148"];
m3_184 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="165-165"];
m3_187 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="167-169"];
m3_72 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70"];
m3_93 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88"];
m3_114 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108"];
m3_138 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128"];
m3_164 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148"];
m3_188 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169"];
m3_27 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs", label="var state = new FailedState(new Exception())", span="39-39"];
m3_26 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37"];
m3_40 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="42-42"];
m3_39 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="42-42"];
m3_48 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="50-50"];
m3_47 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="50-50"];
m3_70 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="68-68"];
m3_69 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="68-68"];
m3_73 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="70-70"];
m3_91 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="86-86"];
m3_90 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="86-86"];
m3_94 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="88-88"];
m3_112 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="104-104"];
m3_111 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="104-104"];
m3_115 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="106-108"];
m3_136 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="124-124"];
m3_135 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="124-124"];
m3_139 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="126-128"];
m3_148 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136"];
m3_174 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156"];
m3_162 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="144-144"];
m3_161 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="144-144"];
m3_165 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="146-148"];
m3_186 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="165-165"];
m3_185 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="165-165"];
m3_189 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="167-169"];
m3_56 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="59-60"];
m3_78 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="77-78"];
m3_99 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="95-96"];
m3_116 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="108-108"];
m3_123 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="115-116"];
m3_140 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="128-128"];
m3_147 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="135-136"];
m3_166 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="148-148"];
m3_173 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="155-156"];
m3_190 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="169-169"];
m3_149 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="135-136"];
m3_152 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="136-136"];
m3_175 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="155-156"];
m3_177 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="156-156"];
m3_58 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="59-60"];
m3_57 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60"];
m3_80 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="77-78"];
m3_79 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78"];
m3_101 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="95-96"];
m3_100 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96"];
m3_118 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="108-108"];
m3_117 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="state.Queue == ''critical''", span="108-108"];
m3_125 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="115-116"];
m3_124 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116"];
m3_142 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="128-128"];
m3_141 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="state.Queue == ''critical''", span="128-128"];
m3_168 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="148-148"];
m3_167 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="148-148"];
m3_192 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="169-169"];
m3_191 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="169-169"];
m3_61 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="60-60"];
m3_104 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="96-96"];
m3_153 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="StaticMethod()", span="136-136"];
m3_83 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="78-78"];
m3_128 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="116-116"];
m3_178 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="x.InstanceMethod()", span="156-156"];
m3_154 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="136-136"];
m3_179 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="156-156"];
m3_60 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="60-60"];
m3_82 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="78-78"];
m3_103 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Entry lambda expression", span="96-96"];
m3_62 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="60-60"];
m3_105 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="96-96"];
m3_84 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="78-78"];
m3_129 [cluster="lambda expression", file="BackgroundJobClientExtensionsFacts.cs", label="Exit lambda expression", span="116-116"];
m3_74 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
m3_75 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78"];
m3_76 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="80-80"];
m3_77 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
m3_85 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
m3_86 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86"];
m3_87 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88"];
m3_88 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
m3_42 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
m3_43 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50"];
m3_44 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52"];
m3_45 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
m3_81 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
m3_63 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
m3_64 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Enqueue(() => StaticMethod())", span="68-68"];
m3_65 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70"];
m3_66 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
m3_159 [cluster="Unk.Schedule", file="BackgroundJobClientExtensionsFacts.cs", label="Entry Unk.Schedule", span=""];
m3_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m3_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", color=green, community=0, file="BackgroundJobClientExtensionsFacts.cs", label="1: Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m3_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13"];
m3_155 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
m3_156 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144"];
m3_157 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148"];
m3_158 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
m3_180 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
m3_181 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165"];
m3_182 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169"];
m3_183 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
m3_143 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
m3_144 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136"];
m3_145 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="138-138"];
m3_146 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
m3_130 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
m3_131 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124"];
m3_132 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128"];
m3_133 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="BackgroundJobClientExtensionsFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
m3_195 [file="BackgroundJobClientExtensionsFacts.cs", label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span=""];
m5_25 [cluster="Unk.OnScenarioStart", file="BackgroundJobServer.cs", label="Entry Unk.OnScenarioStart", span=""];
m5_29 [cluster="Unk.CollectScenarioErrors", file="BackgroundJobServer.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m5_21 [cluster="Unk.OnScenarioEnd", file="BackgroundJobServer.cs", label="Entry Unk.OnScenarioEnd", span=""];
m5_55 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m5_56 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", color=red, community=0, file="BackgroundJobServer.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121"];
m5_57 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="this.ScenarioSetup(scenarioInfo)", span="123-123"];
m5_58 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125"];
m5_59 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127"];
m5_60 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129"];
m5_61 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131"];
m5_62 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="this.ScenarioCleanup()", span="133-133"];
m5_63 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119"];
m5_41 [cluster="Unk.And", file="BackgroundJobServer.cs", label="Entry Unk.And", span=""];
m5_54 [cluster="Unk.But", file="BackgroundJobServer.cs", label="Entry Unk.But", span=""];
m5_5 [cluster="Unk.GetTestRunner", file="BackgroundJobServer.cs", label="Entry Unk.GetTestRunner", span=""];
m5_26 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m5_27 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="BackgroundJobServer.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m5_28 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m5_0 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m5_1 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundJobServer.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m5_2 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundJobServer.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m5_3 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundJobServer.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m5_4 [cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m5_76 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m5_77 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169"];
m5_78 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="this.ScenarioSetup(scenarioInfo)", span="171-171"];
m5_79 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173"];
m5_80 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175"];
m5_81 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m5_82 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m5_83 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="this.ScenarioCleanup()", span="181-181"];
m5_84 [cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167"];
m5_30 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m5_31 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m5_32 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m5_33 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m5_34 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m5_35 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m5_36 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m5_37 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="this.ScenarioCleanup()", span="89-89"];
m5_38 [cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m5_9 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m5_10 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="BackgroundJobServer.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m5_11 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="BackgroundJobServer.cs", label="testRunner = null", span="42-42"];
m5_12 [cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m5_13 [cluster="Unk.OnFeatureEnd", file="BackgroundJobServer.cs", label="Entry Unk.OnFeatureEnd", span=""];
m5_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="BackgroundJobServer.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m5_42 [cluster="Unk.When", file="BackgroundJobServer.cs", label="Entry Unk.When", span=""];
m5_44 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m5_45 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98"];
m5_46 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="this.ScenarioSetup(scenarioInfo)", span="100-100"];
m5_47 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102"];
m5_48 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m5_49 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m5_50 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m5_51 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110"];
m5_52 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", color=red, community=0, file="BackgroundJobServer.cs", label="1: this.ScenarioCleanup()", span="112-112"];
m5_53 [cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96"];
m5_64 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m5_65 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142"];
m5_66 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="this.ScenarioSetup(scenarioInfo)", span="144-144"];
m5_67 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146"];
m5_68 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148"];
m5_69 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150"];
m5_70 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152"];
m5_71 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154"];
m5_72 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m5_73 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m5_74 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="this.ScenarioCleanup()", span="160-160"];
m5_75 [cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140"];
m5_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="BackgroundJobServer.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m5_43 [cluster="Unk.Then", file="BackgroundJobServer.cs", label="Entry Unk.Then", span=""];
m5_40 [cluster="Unk.Given", file="BackgroundJobServer.cs", label="Entry Unk.Given", span=""];
m5_85 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m5_86 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190"];
m5_87 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="this.ScenarioSetup(scenarioInfo)", span="192-192"];
m5_88 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194"];
m5_89 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196"];
m5_90 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m5_91 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m5_92 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="this.ScenarioCleanup()", span="202-202"];
m5_93 [cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188"];
m5_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="BackgroundJobServer.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m5_14 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m5_15 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="BackgroundJobServer.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m5_16 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="BackgroundJobServer.cs", label="HangFire.Tests.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m5_17 [cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46"];
m5_18 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m5_19 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="BackgroundJobServer.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m5_20 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m5_22 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="BackgroundJobServer.cs", label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m5_23 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="BackgroundJobServer.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m5_24 [cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="BackgroundJobServer.cs", label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m5_8 [cluster="Unk.OnFeatureStart", file="BackgroundJobServer.cs", label="Entry Unk.OnFeatureStart", span=""];
m5_94 [file="BackgroundJobServer.cs", label="HangFire.Tests.JobFetcherFeature", span=""];
m6_0 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m6_1 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs", label="context.Transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15"];
m6_2 [cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m6_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m6_5 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m6_6 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="BackgroundJobServerOptions.cs", label="context.Transaction.RemoveFromSet(''processing'', context.JobId)", span="20-20"];
m6_7 [cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18"];
m6_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m6_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m7_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="ClientExceptionContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m7_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m7_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="serverId == null", span="30-30"];
m7_3 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="storage == null", span="31-31"];
m7_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="ServerId = serverId", span="35-35"];
m7_7 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="Storage = storage", span="36-36"];
m7_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="CancellationToken = cancellationToken", span="37-37"];
m7_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="30-30"];
m7_4 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="throw new ArgumentNullException(''storage'');", span="31-31"];
m7_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="ServerData = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33"];
m7_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m7_12 [file="ClientExceptionContextFacts.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m8_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_35 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="CreateContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m8_23 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m8_24 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m8_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="var serializedValue = JobHelper.ToJson(value)", span="105-105"];
m8_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="!_parameters.ContainsKey(name)", span="107-107"];
m8_30 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="_parameters.Add(name, serializedValue)", span="109-109"];
m8_31 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="_parameters[name] = serializedValue", span="113-113"];
m8_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m8_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label=_jobWasCreated, span="100-100"];
m8_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102"];
m8_32 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m8_46 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="CreateContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m8_53 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="CreateContext.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m8_0 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m8_1 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs", label="Items = context.Items", span="40-40"];
m8_2 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs", label="JobId = context.JobId", span="41-41"];
m8_3 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs", label="_jobWasCreated = context._jobWasCreated", span="42-42"];
m8_4 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs", label="_parameters = context._parameters", span="43-43"];
m8_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m8_45 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="CreateContext.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m8_38 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m8_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="String.IsNullOrWhiteSpace(name)", span="131-131"];
m8_41 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137"];
m8_43 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143"];
m8_40 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="throw new ArgumentNullException(''name'');", span="131-131"];
m8_42 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label=Exception, span="139-139"];
m8_44 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m8_33 [cluster="string.IsNullOrWhiteSpace(string)", file="CreateContext.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m8_6 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m8_7 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="connection == null", span="52-52"];
m8_9 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="stateMachineFactory == null", span="53-53"];
m8_11 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="job == null", span="54-54"];
m8_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="initialState == null", span="55-55"];
m8_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="_stateMachineFactory = stateMachineFactory", span="57-57"];
m8_16 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="Connection = connection", span="59-59"];
m8_17 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="Job = job", span="60-60"];
m8_18 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="InitialState = initialState", span="61-61"];
m8_8 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="throw new ArgumentNullException(''connection'');", span="52-52"];
m8_10 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53"];
m8_12 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="throw new ArgumentNullException(''job'');", span="54-54"];
m8_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="throw new ArgumentNullException(''initialState'');", span="55-55"];
m8_19 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="Items = new Dictionary<string, object>()", span="63-63"];
m8_20 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m8_54 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="CreateContext.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m8_48 [cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m8_49 [cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149"];
m8_50 [cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151"];
m8_51 [cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="_jobWasCreated = true", span="152-152"];
m8_52 [cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContext.cs", label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m8_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="CreateContext.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CreateContext.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_47 [cluster="string.Format(string, object)", file="CreateContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m8_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CreateContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m8_55 [file="CreateContext.cs", label="HangFire.Client.CreateContext", span=""];
m9_110 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137"];
m9_111 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="139-139"];
m9_112 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs", label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141"];
m9_113 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs", label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142"];
m9_114 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137"];
m9_24 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
m9_25 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object))", span="34-35"];
m9_26 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="37-37"];
m9_27 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
m9_12 [cluster="Mock<IStateMachineFactory>.cstr", file="CreateContextFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m9_9 [cluster="Mock<IState>.cstr", file="CreateContextFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m9_63 [cluster="Unk.Same", file="CreateContextFacts.cs", label="Entry Unk.Same", span=""];
m9_71 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="CreateContextFacts.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m9_180 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241"];
m9_181 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="243-243"];
m9_183 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247"];
m9_182 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="context.CreateJob()", span="244-244"];
m9_184 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241"];
m9_196 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262"];
m9_197 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266"];
m9_198 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="268-268"];
m9_199 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="context.CreateJob()", span="269-269"];
m9_200 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="var contextCopy = new CreateContext(context)", span="271-271"];
m9_201 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273"];
m9_202 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262"];
m9_28 [cluster="Unk.Equal", file="CreateContextFacts.cs", label="Entry Unk.Equal", span=""];
m9_10 [cluster="Mock<IStorageConnection>.cstr", file="CreateContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m9_66 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82"];
m9_67 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="84-84"];
m9_68 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs", label="var contextCopy = new CreateContext(context)", span="85-85"];
m9_69 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs", label="Assert.Same(context.Items, contextCopy.Items)", span="87-87"];
m9_70 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82"];
m9_90 [cluster="Unk.DoesNotThrow", file="CreateContextFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m9_158 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213"];
m9_159 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="215-215"];
m9_160 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs", label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218"];
m9_161 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs", label="context.CreateJob()", span="220-220"];
m9_162 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs", label="Assert.Equal(''id'', context.JobId)", span="222-222"];
m9_163 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213"];
m9_120 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155"];
m9_121 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="157-157"];
m9_122 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name1'', ''value1'')", span="159-159"];
m9_123 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name2'', ''value2'')", span="160-160"];
m9_124 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs", label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162"];
m9_125 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155"];
m9_22 [cluster="Unk.>", file="CreateContextFacts.cs", label="Entry Unk.>", span=""];
m9_167 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226"];
m9_171 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", color=green, community=0, file="CreateContextFacts.cs", label="0: _stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>()))", span="233-237"];
m9_170 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs", label="context.CreateJob()", span="231-231"];
m9_168 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="228-228"];
m9_169 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229"];
m9_172 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226"];
m9_152 [cluster="HangFire.Client.CreateContext.CreateJob()", file="CreateContextFacts.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m9_0 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19"];
m9_2 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", color=green, community=0, file="CreateContextFacts.cs", label="1: _state = new Mock<IState>()", span="22-22"];
m9_1 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="_job = Job.FromExpression(() => Method())", span="21-21"];
m9_3 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="23-23"];
m9_4 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="24-24"];
m9_5 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26"];
m9_6 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28"];
m9_7 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19"];
m9_94 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119"];
m9_95 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="121-121"];
m9_96 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', null)", span="122-122"];
m9_97 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="CreateContextFacts.cs", label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="124-125"];
m9_98 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119"];
m9_188 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251"];
m9_189 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="253-253"];
m9_190 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="context.CreateJob()", span="255-255"];
m9_191 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258"];
m9_192 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251"];
m9_33 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41"];
m9_34 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CreateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44"];
m9_35 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CreateContextFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="46-46"];
m9_36 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41"];
m9_102 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129"];
m9_103 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="131-131"];
m9_104 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<int>(null))", span="132-133"];
m9_105 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129"];
m9_64 [cluster="Unk.NotNull", file="CreateContextFacts.cs", label="Entry Unk.NotNull", span=""];
m9_206 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277"];
m9_207 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="279-279"];
m9_210 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285"];
m9_208 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs", label="context.CreateJob()", span="280-280"];
m9_209 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs", label="var contextCopy = new CreateContext(context)", span="282-282"];
m9_211 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277"];
m9_47 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59"];
m9_48 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null))", span="61-63"];
m9_49 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs", label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65"];
m9_50 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59"];
m9_72 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91"];
m9_73 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="93-93"];
m9_74 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="CreateContextFacts.cs", label="var contextCopy = new CreateContext(context)", span="94-94"];
m9_75 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="CreateContextFacts.cs", label="Assert.Same(context.JobId, contextCopy.JobId)", span="96-96"];
m9_76 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91"];
m9_147 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200"];
m9_148 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="202-202"];
m9_150 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs", label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209"];
m9_149 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs", label="context.CreateJob()", span="204-204"];
m9_151 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200"];
m9_77 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100"];
m9_78 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="102-102"];
m9_79 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="103-104"];
m9_80 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="106-106"];
m9_81 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100"];
m9_13 [cluster="Unk.Setup", file="CreateContextFacts.cs", label="Entry Unk.Setup", span=""];
m9_65 [cluster="Unk.Null", file="CreateContextFacts.cs", label="Entry Unk.Null", span=""];
m9_62 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292"];
m9_216 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs", label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295"];
m9_217 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292"];
m9_157 [cluster="Unk.CreateInState", file="CreateContextFacts.cs", label="Entry Unk.CreateInState", span=""];
m9_193 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="258-258"];
m9_173 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="233-237"];
m9_174 [cluster="lambda expression", color=green, community=0, file="CreateContextFacts.cs", label="0: x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<IState>())", span="233-237"];
m9_175 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="233-237"];
m9_176 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="236-236"];
m9_30 [cluster="lambda expression", file="CreateContextFacts.cs", label="new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object)", span="35-35"];
m9_38 [cluster="lambda expression", file="CreateContextFacts.cs", label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44"];
m9_45 [cluster="lambda expression", file="CreateContextFacts.cs", label="new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object)", span="53-53"];
m9_52 [cluster="lambda expression", file="CreateContextFacts.cs", label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63"];
m9_204 [cluster="lambda expression", file="CreateContextFacts.cs", label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265"];
m9_15 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="21-21"];
m9_20 [cluster="lambda expression", file="CreateContextFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
m9_155 [cluster="lambda expression", file="CreateContextFacts.cs", label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209"];
m9_165 [cluster="lambda expression", file="CreateContextFacts.cs", label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217"];
m9_178 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="236-236"];
m9_177 [cluster="lambda expression", file="CreateContextFacts.cs", label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236"];
m9_19 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="27-27"];
m9_29 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="35-35"];
m9_31 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="35-35"];
m9_37 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="44-44"];
m9_39 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="44-44"];
m9_44 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="53-53"];
m9_46 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="53-53"];
m9_51 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="62-63"];
m9_53 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="62-63"];
m9_83 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.SetJobParameter(null, null)", span="104-104"];
m9_92 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', null)", span="115-115"];
m9_100 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', null)", span="125-125"];
m9_107 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.GetJobParameter<int>(null)", span="133-133"];
m9_138 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.GetJobParameter<int>(''name'')", span="184-184"];
m9_154 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="206-209"];
m9_164 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="217-217"];
m9_186 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', ''value'')", span="247-247"];
m9_194 [cluster="lambda expression", file="CreateContextFacts.cs", label="context.GetJobParameter<string>(''name'')", span="258-258"];
m9_203 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="264-265"];
m9_205 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="264-265"];
m9_17 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="21-21"];
m9_16 [cluster="lambda expression", file="CreateContextFacts.cs", label="Method()", span="21-21"];
m9_21 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="27-27"];
m9_82 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="104-104"];
m9_106 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="133-133"];
m9_137 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="184-184"];
m9_156 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="206-209"];
m9_166 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="217-217"];
m9_185 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="247-247"];
m9_212 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="285-285"];
m9_84 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="104-104"];
m9_91 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="115-115"];
m9_93 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="115-115"];
m9_99 [cluster="lambda expression", file="CreateContextFacts.cs", label="Entry lambda expression", span="125-125"];
m9_101 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="125-125"];
m9_108 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="133-133"];
m9_139 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="184-184"];
m9_187 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="247-247"];
m9_195 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="258-258"];
m9_213 [cluster="lambda expression", file="CreateContextFacts.cs", label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285"];
m9_214 [cluster="lambda expression", file="CreateContextFacts.cs", label="Exit lambda expression", span="285-285"];
m9_32 [cluster="CreateContext.cstr", file="CreateContextFacts.cs", label="Entry CreateContext.cstr", span=""];
m9_153 [cluster="Unk.Verify", file="CreateContextFacts.cs", label="Entry Unk.Verify", span=""];
m9_115 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146"];
m9_116 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="148-148"];
m9_117 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', ''value'')", span="149-149"];
m9_118 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs", label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151"];
m9_119 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146"];
m9_85 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="CreateContextFacts.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m9_40 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
m9_41 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53"];
m9_42 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="55-55"];
m9_43 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
m9_86 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110"];
m9_87 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="112-112"];
m9_88 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs", label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115"];
m9_89 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110"];
m9_11 [cluster="Mock<IStateMachine>.cstr", file="CreateContextFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m9_109 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="CreateContextFacts.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m9_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreateContextFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m9_23 [cluster="Unk.Create", file="CreateContextFacts.cs", label="Entry Unk.Create", span=""];
m9_14 [cluster="Unk.Returns", file="CreateContextFacts.cs", label="Entry Unk.Returns", span=""];
m9_126 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166"];
m9_127 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="168-168"];
m9_128 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170"];
m9_129 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', ''newValue'')", span="171-171"];
m9_130 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs", label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173"];
m9_131 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166"];
m9_54 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69"];
m9_55 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="71-71"];
m9_56 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Assert.Same(_connection.Object, context.Connection)", span="73-73"];
m9_57 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Assert.Same(_job, context.Job)", span="74-74"];
m9_58 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Assert.Same(_state.Object, context.InitialState)", span="75-75"];
m9_59 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Assert.NotNull(context.Items)", span="77-77"];
m9_60 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Assert.Null(context.JobId)", span="78-78"];
m9_61 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69"];
m9_18 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288"];
m9_215 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288"];
m9_132 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177"];
m9_133 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="179-179"];
m9_135 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184"];
m9_134 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', ''value'')", span="181-181"];
m9_136 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177"];
m9_179 [cluster="Unk.ContainsKey", file="CreateContextFacts.cs", label="Entry Unk.ContainsKey", span=""];
m9_140 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188"];
m9_141 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="var context = CreateContext()", span="190-190"];
m9_142 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="context.SetJobParameter(''name'', ''value'')", span="191-191"];
m9_143 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="var contextCopy = new CreateContext(context)", span="192-192"];
m9_144 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194"];
m9_145 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="Assert.Equal(''value'', value)", span="196-196"];
m9_146 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", file="CreateContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188"];
m9_218 [file="CreateContextFacts.cs", label="HangFire.Core.Tests.Client.CreateContextFacts", span=""];
m9_224 [file="CreateContextFacts.cs", label=context, span=""];
m9_225 [file="CreateContextFacts.cs", label=context, span=""];
m9_219 [file="CreateContextFacts.cs", label=context, span=""];
m9_220 [file="CreateContextFacts.cs", label=context, span=""];
m9_221 [file="CreateContextFacts.cs", label=context, span=""];
m9_222 [file="CreateContextFacts.cs", label=context, span=""];
m9_223 [file="CreateContextFacts.cs", label=context, span=""];
m9_226 [file="CreateContextFacts.cs", label=context, span=""];
m9_227 [file="CreateContextFacts.cs", label=context, span=""];
m9_228 [file="CreateContextFacts.cs", label=contextCopy, span=""];
m10_6 [cluster="Mock<IBackgroundProcess>.cstr", file="CreatedContextFacts.cs", label="Entry Mock<IBackgroundProcess>.cstr", span=""];
m10_7 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m10_22 [cluster="Unk.Same", file="CreatedContextFacts.cs", label="Entry Unk.Same", span=""];
m10_91 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", span="91-91"];
m10_92 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="CreatedContextFacts.cs", label="return new InfiniteLoopProcess(process);", span="93-93"];
m10_93 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", span="91-91"];
m10_16 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28"];
m10_17 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="CreatedContextFacts.cs", label="var process = CreateProcess(_innerComponent.Object)", span="30-30"];
m10_19 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="CreatedContextFacts.cs", label="Assert.Same(_innerComponent.Object, result)", span="32-32"];
m10_18 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="CreatedContextFacts.cs", label="var result = process.InnerProcess", span="31-31"];
m10_20 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28"];
m10_21 [cluster="Unk.CreateProcess", file="CreatedContextFacts.cs", label="Entry Unk.CreateProcess", span=""];
m10_32 [cluster="System.TimeSpan.FromMilliseconds(double)", file="CreatedContextFacts.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m10_90 [cluster="Unk.Equal", file="CreatedContextFacts.cs", label="Entry Unk.Equal", span=""];
m10_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14"];
m10_1 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="CreatedContextFacts.cs", label="_innerComponent = new Mock<IServerComponent>()", span="16-16"];
m10_76 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="CreatedContextFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m10_23 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36"];
m10_27 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="46-46"];
m10_25 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="var process = CreateProcess(_innerComponent.Object)", span="42-42"];
m10_26 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="_context.CancellationTokenSource.CancelAfter(TimeSpan.FromMilliseconds(100))", span="43-43"];
m10_28 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="_innerComponent.Verify(x => x.Execute(_context.CancellationTokenSource.Token), Times.AtLeast(5))", span="49-49"];
m10_24 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="_innerComponent.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="39-40"];
m10_29 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36"];
m10_43 [cluster="System.Threading.Thread.Sleep(int)", file="CreatedContextFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m10_11 [cluster="Unk.>", file="CreatedContextFacts.cs", label="Entry Unk.>", span=""];
m10_8 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22"];
m10_9 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", color=green, community=0, file="CreatedContextFacts.cs", label="0: Assert.Throws<ArgumentNullException>(() => new InfiniteLoopProcess(null))", span="24-24"];
m10_10 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22"];
m10_88 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="CreatedContextFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41"];
m10_15 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="CreatedContextFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m10_47 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="CreatedContextFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32"];
m10_2 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="CreatedContextFacts.cs", label="_innerProcess = new Mock<IBackgroundProcess>()", span="17-17"];
m10_3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="CreatedContextFacts.cs", label="_context = new BackgroundProcessContextMock()", span="18-18"];
m10_4 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14"];
m10_89 [cluster="Unk.ToString", file="CreatedContextFacts.cs", label="Entry Unk.ToString", span=""];
m10_51 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53"];
m10_55 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="63-63"];
m10_53 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="var process = CreateProcess(_innerProcess.Object)", span="59-59"];
m10_54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="_context.CancellationTokenSource.CancelAfter(TimeSpan.FromMilliseconds(100))", span="60-60"];
m10_56 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="_innerProcess.Verify(x => x.Execute(_context.Object), Times.AtLeast(5))", span="66-66"];
m10_52 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="_innerProcess.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="56-57"];
m10_57 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53"];
m10_30 [cluster="Unk.Setup", file="CreatedContextFacts.cs", label="Entry Unk.Setup", span=""];
m10_5 [cluster="Mock<IServerComponent>.cstr", file="CreatedContextFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m10_61 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="57-57"];
m10_12 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="24-24"];
m10_13 [cluster="lambda expression", color=green, community=0, file="CreatedContextFacts.cs", label="0: new InfiniteLoopProcess(null)", span="24-24"];
m10_14 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="24-24"];
m10_37 [cluster="lambda expression", file="CreatedContextFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="39-39"];
m10_59 [cluster="lambda expression", file="CreatedContextFacts.cs", label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="56-56"];
m10_81 [cluster="lambda expression", file="CreatedContextFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="80-80"];
m10_44 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="46-46"];
m10_36 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="39-39"];
m10_38 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="39-39"];
m10_64 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="63-63"];
m10_58 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="56-56"];
m10_60 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="56-56"];
m10_77 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="77-77"];
m10_80 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="80-80"];
m10_82 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="80-80"];
m10_45 [cluster="lambda expression", file="CreatedContextFacts.cs", label="process.Execute(_context.Object)", span="46-46"];
m10_49 [cluster="lambda expression", file="CreatedContextFacts.cs", label="x.Execute(_context.CancellationTokenSource.Token)", span="49-49"];
m10_65 [cluster="lambda expression", file="CreatedContextFacts.cs", label="process.Execute(_context.Object)", span="63-63"];
m10_68 [cluster="lambda expression", file="CreatedContextFacts.cs", label="x.Execute(_context.Object)", span="66-66"];
m10_78 [cluster="lambda expression", file="CreatedContextFacts.cs", label="process.Execute(_context.Object)", span="77-77"];
m10_48 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="49-49"];
m10_46 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="46-46"];
m10_67 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="66-66"];
m10_66 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="63-63"];
m10_79 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="77-77"];
m10_40 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Entry lambda expression", span="40-40"];
m10_50 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="49-49"];
m10_69 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="66-66"];
m10_42 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="40-40"];
m10_41 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Thread.Sleep(5)", span="40-40"];
m10_62 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Thread.Sleep(5)", span="57-57"];
m10_63 [cluster="lambda expression", file="CreatedContextFacts.cs", label="Exit lambda expression", span="57-57"];
m10_83 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84"];
m10_84 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="CreatedContextFacts.cs", label="var process = CreateProcess(_innerComponent.Object)", span="86-86"];
m10_86 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="CreatedContextFacts.cs", label="Assert.Equal(_innerComponent.Object.ToString(), result)", span="88-88"];
m10_85 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="CreatedContextFacts.cs", label="var result = process.ToString()", span="87-87"];
m10_87 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84"];
m10_70 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="CreatedContextFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70"];
m10_73 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="CreatedContextFacts.cs", label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="77-77"];
m10_71 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="CreatedContextFacts.cs", label="var process = CreateProcess(_innerComponent.Object)", span="73-73"];
m10_72 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="CreatedContextFacts.cs", label="_context.CancellationTokenSource.Cancel()", span="74-74"];
m10_74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="CreatedContextFacts.cs", label="_innerComponent.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="80-80"];
m10_75 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="CreatedContextFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70"];
m10_33 [cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="CreatedContextFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0"];
m10_34 [cluster="Unk.AtLeast", file="CreatedContextFacts.cs", label="Entry Unk.AtLeast", span=""];
m10_39 [cluster="Unk.Execute", file="CreatedContextFacts.cs", label="Entry Unk.Execute", span=""];
m10_31 [cluster="Unk.Callback", file="CreatedContextFacts.cs", label="Entry Unk.Callback", span=""];
m10_35 [cluster="Unk.Verify", file="CreatedContextFacts.cs", label="Entry Unk.Verify", span=""];
m10_94 [file="CreatedContextFacts.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m10_95 [file="CreatedContextFacts.cs", label=process, span=""];
m10_96 [file="CreatedContextFacts.cs", label=process, span=""];
m10_97 [file="CreatedContextFacts.cs", label=process, span=""];
m11_8 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m11_11 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="CreatingContextFacts.cs", label="1: var state = new Mock<IState>()", span="24-24"];
m11_10 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="var job = Job.FromExpression(() => TestMethod())", span="23-23"];
m11_12 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25"];
m11_13 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28"];
m11_9 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="var connection = new Mock<IStorageConnection>()", span="22-22"];
m11_14 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="var context = new CreatingContext(createContext)", span="29-29"];
m11_15 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="Assert.False(context.Canceled)", span="31-31"];
m11_16 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="CreatingContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20"];
m11_3 [cluster="Unk.>", file="CreatingContextFacts.cs", label="Entry Unk.>", span=""];
m11_20 [cluster="Mock<IStateMachineFactory>.cstr", file="CreatingContextFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m11_19 [cluster="Mock<IState>.cstr", file="CreatingContextFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m11_22 [cluster="Unk.False", file="CreatingContextFacts.cs", label="Entry Unk.False", span=""];
m11_7 [cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="CreatingContextFacts.cs", label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24"];
m11_18 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CreatingContextFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m11_0 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m11_1 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16"];
m11_2 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="CreatingContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13"];
m11_26 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="CreatingContextFacts.cs", label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m11_27 [cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="CreatingContextFacts.cs", label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34"];
m11_17 [cluster="Mock<IStorageConnection>.cstr", file="CreatingContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m11_4 [cluster="lambda expression", file="CreatingContextFacts.cs", label="Entry lambda expression", span="16-16"];
m11_23 [cluster="lambda expression", file="CreatingContextFacts.cs", label="Entry lambda expression", span="23-23"];
m11_25 [cluster="lambda expression", file="CreatingContextFacts.cs", label="Exit lambda expression", span="23-23"];
m11_24 [cluster="lambda expression", file="CreatingContextFacts.cs", label="TestMethod()", span="23-23"];
m11_5 [cluster="lambda expression", file="CreatingContextFacts.cs", label="new CreatingContext(null)", span="16-16"];
m11_6 [cluster="lambda expression", file="CreatingContextFacts.cs", label="Exit lambda expression", span="16-16"];
m11_21 [cluster="CreateContext.cstr", file="CreatingContextFacts.cs", label="Entry CreateContext.cstr", span=""];
m12_50 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ElectStateContext.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="56-56"];
m12_51 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ElectStateContext.cs", label="var server = CreateHeartbeat()", span="58-58"];
m12_52 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ElectStateContext.cs", label="server.Execute(_cts.Token)", span="60-60"];
m12_53 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ElectStateContext.cs", label="_connection.Verify(x => x.Heartbeat(ServerId))", span="62-62"];
m12_54 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="ElectStateContext.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="56-56"];
m12_18 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="ElectStateContext.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="29-30"];
m12_36 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="ElectStateContext.cs", label="server.Execute(_cts.Token)", span="49-49"];
m12_19 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ElectStateContext.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="32-32"];
m12_22 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="throw new ArgumentNullException(''filters'');", span="71-71"];
m12_41 [cluster="Unk.Execute", file="ElectStateContext.cs", label="Entry Unk.Execute", span=""];
m12_8 [cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.IState, string, HangFire.Storage.IStorageConnection)", file="ElectStateContext.cs", label="Exit HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.IState, string, HangFire.Storage.IStorageConnection)", span="27-27"];
m12_34 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="return CandidateState;", span="99-99"];
m12_35 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="Exit HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69"];
m12_37 [cluster="HangFire.States.IElectStateFilter.OnStateElection(HangFire.States.ElectStateContext)", file="ElectStateContext.cs", label="Entry HangFire.States.IElectStateFilter.OnStateElection(HangFire.States.ElectStateContext)", span="30-30"];
m12_38 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ElectStateContext.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_39 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="ElectStateContext.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26"];
m12_10 [cluster="HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs", label="Entry HangFire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="58-58"];
m12_21 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="filters == null", span="71-71"];
m12_16 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs", label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="65-66"];
m12_14 [cluster="lambda expression", file="ElectStateContext.cs", label="x.GetConnection()", span="23-23"];
m12_11 [cluster="Unk.Setup", file="ElectStateContext.cs", label="Entry Unk.Setup", span=""];
m12_12 [cluster="Unk.Returns", file="ElectStateContext.cs", label="Entry Unk.Returns", span=""];
m12_40 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", file="ElectStateContext.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddJobState(string, HangFire.States.IState)", span="27-27"];
m12_59 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="ElectStateContext.cs", label="return new ServerHeartbeat(_storage.Object, ServerId);", span="67-67"];
m12_60 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="ElectStateContext.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65"];
m12_58 [cluster="Unk.Heartbeat", file="ElectStateContext.cs", label="Entry Unk.Heartbeat", span=""];
m12_49 [cluster="Unk.Dispose", file="ElectStateContext.cs", label="Entry Unk.Dispose", span=""];
m12_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ElectStateContext.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m12_55 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="62-62"];
m12_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="ElectStateContext.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m12_15 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs", label="Entry HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63"];
m12_23 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", color=green, community=0, file="ElectStateContext.cs", label="0: var statesToAppend = new List<IState>()", span="73-73"];
m12_24 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label=filters, span="75-75"];
m12_25 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="var oldState = CandidateState", span="77-77"];
m12_31 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label=statesToAppend, span="90-90"];
m12_32 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="transaction.AddJobState(JobId, state)", span="92-92"];
m12_33 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="transaction.Commit()", span="95-95"];
m12_43 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="51-51"];
m12_46 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="52-52"];
m12_44 [cluster="lambda expression", file="ElectStateContext.cs", label="x.GetConnection()", span="51-51"];
m12_45 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="51-51"];
m12_47 [cluster="lambda expression", file="ElectStateContext.cs", label="x.Dispose()", span="52-52"];
m12_48 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="52-52"];
m12_56 [cluster="lambda expression", file="ElectStateContext.cs", label="x.Heartbeat(ServerId)", span="62-62"];
m12_57 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="62-62"];
m12_17 [cluster="HangFire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs", label="Exit HangFire.States.ElectStateContext.GetJobParameter<T>(string)", span="63-63"];
m12_20 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69"];
m12_0 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m12_2 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m12_4 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="_cts.Cancel()", span="21-21"];
m12_5 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="23-23"];
m12_6 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m12_7 [cluster="Mock<JobStorage>.cstr", file="ElectStateContext.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m12_1 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="_storage = new Mock<JobStorage>()", span="18-18"];
m12_3 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="ElectStateContext.cs", label="_cts = new CancellationTokenSource()", span="20-20"];
m12_26 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="ElectStateContext.cs", label="filter.OnStateElection(this)", span="78-78"];
m12_28 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ElectStateContext.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", span="38-39"];
m12_29 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ElectStateContext.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="41-41"];
m12_27 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ElectStateContext.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m12_30 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="ElectStateContext.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m12_42 [cluster="Unk.Verify", file="ElectStateContext.cs", label="HangFire.States.ElectStateContext", span=""];
m12_61 [file="ElectStateContext.cs", label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", span=""];
m13_5 [cluster="Unk.MapRoute", file="ElectStateContextFacts.cs", label="Entry Unk.MapRoute", span=""];
m13_4 [cluster="Unk.IgnoreRoute", file="ElectStateContextFacts.cs", label="Entry Unk.IgnoreRoute", span=""];
m13_0 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", span="7-7"];
m13_1 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", file="ElectStateContextFacts.cs", label="routes.IgnoreRoute(''{resource}.axd/{*pathInfo}'')", span="9-9"];
m13_2 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", color=red, community=0, file="ElectStateContextFacts.cs", label="1: routes.MapRoute(\r\n                name: ''Default'',\r\n                url: ''{action}/{id}'',\r\n                defaults: new { controller = ''Home'', action = ''Index'', id = UrlParameter.Optional }\r\n            )", span="11-15"];
m13_3 [cluster="Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", file="ElectStateContextFacts.cs", label="Exit Hangfire.Sample.Highlighter.RouteConfig.RegisterRoutes(RouteCollection)", span="7-7"];
m14_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m14_17 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedState.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m14_11 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="79-79"];
m14_12 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="var enqueuedState = context.NewState as EnqueuedState", span="81-81"];
m14_15 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="transaction.AddToQueue(enqueuedState.Queue, context.JobId)", span="89-89"];
m14_13 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="enqueuedState == null", span="82-82"];
m14_14 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Enqueued state.'',\r\n                        typeof(Handler).FullName));", span="84-86"];
m14_16 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="79-79"];
m14_0 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m14_1 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m14_20 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="92-92"];
m14_21 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="92-92"];
m14_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="EnqueuedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="30-30"];
m14_18 [cluster="string.Format(string, object)", file="EnqueuedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m14_10 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m14_2 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m14_3 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="EnqueuedAt = DateTime.UtcNow", span="38-38"];
m14_4 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Queue = queue", span="39-39"];
m14_5 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m14_6 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.SerializeData()", span="68-68"];
m14_7 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueuedAt'', JobHelper.ToStringTimestamp(EnqueuedAt) },\r\n                { ''Queue'', Queue }\r\n            };", span="70-74"];
m14_8 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.SerializeData()", span="68-68"];
m14_22 [file="EnqueuedState.cs", label="HangFire.States.EnqueuedState", span=""];
m15_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m15_35 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m15_25 [cluster="System.Collections.Generic.List<T>.List()", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m15_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="var connection = JobStorage.Current.GetConnection()", span="13-13"];
m15_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15"];
m15_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19"];
m15_7 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="RecurringJobs.Add(new RecurringJobDto { Id = id, Removed = true })", span="23-23"];
m15_8 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="var dto = new RecurringJobDto { Id = id }", span="27-27"];
m15_9 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.Cron = hash[''Cron'']", span="28-28"];
m15_4 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label=ids, span="17-17"];
m15_6 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="hash == null", span="21-21"];
m15_10 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="32-32"];
m15_27 [cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m15_31 [cluster="System.Collections.Generic.List<T>.Add(T)", file="EnqueuedStateHandlerFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m15_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="RecurringJobs = new List<RecurringJobDto>()", span="11-11"];
m15_32 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m15_33 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m15_29 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m15_36 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m15_26 [cluster="HangFire.JobStorage.GetConnection()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m15_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="EnqueuedStateHandlerFacts.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68"];
m15_28 [cluster="string.Format(string, object)", file="EnqueuedStateHandlerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_21 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="EnqueuedStateHandlerFacts.cs", label="1: hash.ContainsKey(''LastExecution'')", span="56-56"];
m15_16 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="hash.ContainsKey(''LastJobId'')", span="45-45"];
m15_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.LastJobState = stateData.Name", span="52-52"];
m15_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="stateData != null", span="50-50"];
m15_22 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.LastExecution = JobHelper.FromStringTimestamp(hash[''LastExecution''])", span="58-58"];
m15_23 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="RecurringJobs.Add(dto)", span="61-61"];
m15_14 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="hash.ContainsKey(''NextExecution'')", span="40-40"];
m15_15 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.NextExecution = JobHelper.FromStringTimestamp(hash[''NextExecution''])", span="42-42"];
m15_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.LastJobId = hash[''LastJobId'']", span="47-47"];
m15_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49"];
m15_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.Job = invocationData.Deserialize()", span="33-33"];
m15_13 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="dto.LoadException = ex", span="37-37"];
m15_12 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="HangFire.Server.WorkerContext", span=""];
m15_24 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="EnqueuedStateHandlerFacts.cs", label="Exit HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m15_37 [file="EnqueuedStateHandlerFacts.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
m16_3 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m16_4 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32"];
m16_5 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="context.CandidateState.StateName == SucceededState.Name", span="34-34"];
m16_8 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="context.CandidateState.StateName == FailedState.Name", span="48-48"];
m16_6 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=red, community=0, file="FailedState.cs", label="1: transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="36-40"];
m16_7 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46"];
m16_9 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54"];
m16_10 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60"];
m16_11 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="transaction.Commit()", span="63-63"];
m16_12 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="FailedState.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m16_14 [cluster="System.DateTime.ToString(string)", file="FailedState.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m16_0 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="FailedState.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m16_1 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="FailedState.cs", label="Order = 30", span="27-27"];
m16_2 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="FailedState.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m16_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="FailedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37"];
m16_18 [cluster="System.TimeSpan.FromDays(double)", file="FailedState.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m16_15 [cluster="string.Format(string, object)", file="FailedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="FailedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18"];
m16_16 [cluster="System.DateTime.AddMonths(int)", file="FailedState.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m16_20 [file="FailedState.cs", label="HangFire.Filters.StatisticsHistoryFilterAttribute", span=""];
m17_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="FailedStateFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m17_7 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="FailedStateFacts.cs", label="_redis = redisManager.GetClient()", span="23-23"];
m17_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="var serializedData = state.SerializeData()", span="29-29"];
m17_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.FailedAt), serializedData[''FailedAt''])", span="31-31"];
m17_19 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(''Message'', serializedData[''ExceptionMessage''])", span="33-33"];
m17_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="25-25"];
m17_23 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="41-41"];
m17_25 [cluster="System.Exception.ToString()", file="FailedStateFacts.cs", label="Entry System.Exception.ToString()", span="0-0"];
m17_26 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="38-38"];
m17_27 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="FailedStateFacts.cs", label="0: var state = new FailedState(new Exception())", span="40-40"];
m17_28 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="FailedStateFacts.cs", label="1: Assert.False(state.IsFinal)", span="42-42"];
m17_30 [cluster="Unk.False", file="FailedStateFacts.cs", label="Entry Unk.False", span=""];
m17_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(''System.Exception'', serializedData[''ExceptionType''])", span="32-32"];
m17_20 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="34-34"];
m17_22 [cluster="System.Exception.Exception(string)", file="FailedStateFacts.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m17_24 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m17_29 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="38-38"];
m17_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label=Exception, span="59-59"];
m17_32 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61"];
m17_33 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m17_37 [cluster="string.Format(string, object, object)", file="FailedStateFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m17_75 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="FailedStateFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m17_43 [cluster="HangFire.Client.JobClient.Dispose()", file="FailedStateFacts.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="65-65"];
m17_44 [cluster="HangFire.Client.JobClient.Dispose()", file="FailedStateFacts.cs", label="_redis.Dispose()", span="67-67"];
m17_45 [cluster="HangFire.Client.JobClient.Dispose()", file="FailedStateFacts.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="65-65"];
m17_13 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="FailedStateFacts.cs", label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30"];
m17_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="FailedStateFacts.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m17_8 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="FailedStateFacts.cs", label="_jobCreator = jobCreator", span="24-24"];
m17_9 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="FailedStateFacts.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m17_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Assert.Equal(FailedState.StateName, state.Name)", span="21-21"];
m17_11 [cluster="Unk.GetClient", file="FailedStateFacts.cs", label="Entry Unk.GetClient", span=""];
m17_38 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m17_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="var job = new Dictionary<string, string>()", span="73-73"];
m17_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74"];
m17_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75"];
m17_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="job[''State''] = String.Empty", span="76-76"];
m17_51 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77"];
m17_52 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="return job;", span="79-79"];
m17_53 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m17_35 [cluster="System.Type.IsAssignableFrom(System.Type)", file="FailedStateFacts.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m17_73 [cluster="object.GetType()", file="FailedStateFacts.cs", label="Entry object.GetType()", span="0-0"];
m17_55 [cluster="HangFire.JobHelper.ToJson(object)", file="FailedStateFacts.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="40-40"];
m17_56 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedStateFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m17_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="FailedStateFacts.cs", label="redisManager == null", span="20-20"];
m17_71 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="FailedStateFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m17_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m17_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14"];
m17_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="FailedStateFacts.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m17_5 [cluster="lambda expression", file="FailedStateFacts.cs", label="new FailedState(null)", span="14-14"];
m17_4 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="14-14"];
m17_6 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="14-14"];
m17_74 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="FailedStateFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m17_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedStateFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_76 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="FailedStateFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m17_72 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="FailedStateFacts.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m17_34 [cluster="string.IsNullOrEmpty(string)", file="FailedStateFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m17_46 [cluster="Unk.Dispose", file="FailedStateFacts.cs", label="Entry Unk.Dispose", span=""];
m17_41 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="FailedStateFacts.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m17_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="FailedStateFacts.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m17_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="FailedStateFacts.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m17_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m17_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="var result = new Dictionary<string, string>()", span="84-84"];
m17_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="obj == null", span="85-85"];
m17_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="TypeDescriptor.GetProperties(obj)", span="87-87"];
m17_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="var propertyValue = descriptor.GetValue(obj)", span="89-89"];
m17_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="return result;", span="85-85"];
m17_68 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="result.Add(descriptor.Name, value)", span="110-110"];
m17_69 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="return result;", span="113-113"];
m17_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106"];
m17_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="string value = null", span="90-90"];
m17_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="propertyValue != null", span="92-92"];
m17_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96"];
m17_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97"];
m17_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label=Exception, span="99-99"];
m17_70 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="FailedStateFacts.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m17_40 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="FailedStateFacts.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m17_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="FailedStateFacts.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m17_39 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="FailedStateFacts.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m17_78 [file="FailedStateFacts.cs", label="HangFire.Client.JobClient", span=""];
m19_0 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m19_1 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", file="IBackgroundJobClient.cs", label="Exit HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.State)", span="41-41"];
m20_0 [cluster="HangFire.Server.IJobPerformer.Perform()", file="IJobPerformer.cs", label="Entry HangFire.Server.IJobPerformer.Perform()", span="20-20"];
m20_1 [cluster="HangFire.Server.IJobPerformer.Perform()", file="IJobPerformer.cs", label="Exit HangFire.Server.IJobPerformer.Perform()", span="20-20"];
m21_2 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStateMachine.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m21_3 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="IStateMachine.cs", label="Exit HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m21_0 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStateMachine.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m21_1 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="IStateMachine.cs", label="Exit HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m22_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="IWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m22_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m22_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IWriteOnlyTransaction.cs", label="exception == null", span="28-28"];
m22_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IWriteOnlyTransaction.cs", label="Exception = exception", span="31-31"];
m22_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''exception'');", span="28-28"];
m22_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IWriteOnlyTransaction.cs", label="FailedAt = DateTime.UtcNow", span="30-30"];
m22_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="IWriteOnlyTransaction.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m22_13 [cluster="System.Exception.ToString()", file="IWriteOnlyTransaction.cs", label="Entry System.Exception.ToString()", span="0-0"];
m22_7 [cluster="HangFire.States.FailedState.SerializeData()", file="IWriteOnlyTransaction.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m22_8 [cluster="HangFire.States.FailedState.SerializeData()", file="IWriteOnlyTransaction.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50"];
m22_9 [cluster="HangFire.States.FailedState.SerializeData()", file="IWriteOnlyTransaction.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m22_12 [cluster="System.Exception.GetType()", file="IWriteOnlyTransaction.cs", label="Entry System.Exception.GetType()", span="0-0"];
m22_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="IWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m22_14 [file="IWriteOnlyTransaction.cs", label="HangFire.States.FailedState", span=""];
m25_22 [cluster="HangFire.JobActivator.JobActivator()", file="JobFacts.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m25_31 [cluster="System.Threading.Thread.Join()", file="JobFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m25_51 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="98-98"];
m25_52 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="AnnounceServer()", span="102-102"];
m25_53 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="StartServer()", span="103-103"];
m25_54 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label=true, span="105-105"];
m25_55 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="Heartbeat()", span="107-107"];
m25_57 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="StopServer()", span="115-115"];
m25_56 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="_stopped.WaitOne(HeartbeatInterval)", span="109-109"];
m25_58 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="RemoveServer(_redis, _context.ServerName)", span="116-116"];
m25_59 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label=Exception, span="118-118"];
m25_60 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="120-120"];
m25_61 [cluster="HangFire.Server.JobServer.RunServer()", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="98-98"];
m25_0 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33"];
m25_1 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_redis = redisManager.GetClient()", span="41-41"];
m25_2 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_redisManager = redisManager", span="43-43"];
m25_3 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_workerCount = workerCount", span="44-44"];
m25_4 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_queues = queues", span="45-45"];
m25_5 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_pollInterval = pollInterval", span="46-46"];
m25_6 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="queues == null", span="48-48"];
m25_8 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="pollInterval != pollInterval.Duration()", span="50-50"];
m25_10 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="55-55"];
m25_11 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                jobActivator ?? new JobActivator(),\r\n                new JobPerformer())", span="57-60"];
m25_7 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="throw new ArgumentNullException(''queues'');", span="48-48"];
m25_9 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="52-52"];
m25_12 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="62-66"];
m25_13 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="_serverThread.Start()", span="67-67"];
m25_14 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33"];
m25_89 [cluster="Unk.SetRangeInHash", file="JobFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m25_20 [cluster="string.Format(string, object, object)", file="JobFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m25_25 [cluster="System.Threading.Thread.Start()", file="JobFacts.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m25_26 [cluster="HangFire.Server.JobServer.Dispose()", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m25_27 [cluster="HangFire.Server.JobServer.Dispose()", file="JobFacts.cs", label="_stopped.Set()", span="72-72"];
m25_28 [cluster="HangFire.Server.JobServer.Dispose()", file="JobFacts.cs", label="_serverThread.Join()", span="73-73"];
m25_29 [cluster="HangFire.Server.JobServer.Dispose()", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="70-70"];
m25_42 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="JobFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m25_96 [cluster="Unk.SetEntryInHash", file="JobFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m25_81 [cluster="Unk.AddItemToSet", file="JobFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m25_85 [cluster="string.Format(string, object)", file="JobFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_88 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m25_41 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="JobFacts.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m25_109 [cluster="Unk.RemoveEntry", file="JobFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m25_18 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobFacts.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m25_87 [cluster="int.ToString()", file="JobFacts.cs", label="Entry int.ToString()", span="0-0"];
m25_19 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobFacts.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m25_38 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobFacts.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m25_30 [cluster="System.Threading.EventWaitHandle.Set()", file="JobFacts.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m25_94 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobFacts.cs", label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="153-156"];
m25_63 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m25_95 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m25_99 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", span="167-169"];
m25_65 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m25_97 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobFacts.cs", label="var transaction = redis.CreateTransaction()", span="161-161"];
m25_98 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", span="163-165"];
m25_100 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobFacts.cs", label="transaction.Commit()", span="171-171"];
m25_101 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m25_44 [cluster="HangFire.Server.JobServer.StopServer()", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="89-89"];
m25_45 [cluster="HangFire.Server.JobServer.StopServer()", file="JobFacts.cs", label="_serverWatchdog.Dispose()", span="91-91"];
m25_46 [cluster="HangFire.Server.JobServer.StopServer()", file="JobFacts.cs", label="_fetchedJobsWatcher.Dispose()", span="92-92"];
m25_47 [cluster="HangFire.Server.JobServer.StopServer()", file="JobFacts.cs", label="_schedulePoller.Dispose()", span="93-93"];
m25_48 [cluster="HangFire.Server.JobServer.StopServer()", file="JobFacts.cs", label="_manager.Dispose()", span="94-94"];
m25_49 [cluster="HangFire.Server.JobServer.StopServer()", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="89-89"];
m25_23 [cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobFacts.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="13-13"];
m25_15 [cluster="Unk.GetClient", file="JobFacts.cs", label="Entry Unk.GetClient", span=""];
m25_86 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_50 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobFacts.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m25_93 [cluster="Unk.AddItemToList", file="JobFacts.cs", label="Entry Unk.AddItemToList", span=""];
m25_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m25_67 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="var transaction = _redis.CreateTransaction()", span="126-126"];
m25_68 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="128-129"];
m25_69 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="131-137"];
m25_72 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="142-144"];
m25_73 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="transaction.Commit()", span="147-147"];
m25_70 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label=_queues, span="139-139"];
m25_71 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="var queue1 = queue", span="141-141"];
m25_74 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m25_105 [cluster="Unk.RemoveItemFromSet", file="JobFacts.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m25_66 [cluster="Unk.Fatal", file="JobFacts.cs", label="Entry Unk.Fatal", span=""];
m25_17 [cluster="System.TimeSpan.Duration()", file="JobFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m25_32 [cluster="HangFire.Server.JobServer.StartServer()", file="JobFacts.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="76-76"];
m25_33 [cluster="HangFire.Server.JobServer.StartServer()", file="JobFacts.cs", label="_manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", span="78-82"];
m25_34 [cluster="HangFire.Server.JobServer.StartServer()", file="JobFacts.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", span="84-84"];
m25_35 [cluster="HangFire.Server.JobServer.StartServer()", file="JobFacts.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", span="85-85"];
m25_36 [cluster="HangFire.Server.JobServer.StartServer()", file="JobFacts.cs", label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", span="86-86"];
m25_37 [cluster="HangFire.Server.JobServer.StartServer()", file="JobFacts.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="76-76"];
m25_106 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="167-169"];
m25_78 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="128-129"];
m25_82 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="131-137"];
m25_91 [cluster="lambda expression", file="JobFacts.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="142-144"];
m25_90 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="142-144"];
m25_79 [cluster="lambda expression", file="JobFacts.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="128-129"];
m25_80 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="128-129"];
m25_83 [cluster="lambda expression", file="JobFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="131-137"];
m25_84 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="131-137"];
m25_92 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="142-144"];
m25_103 [cluster="lambda expression", file="JobFacts.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", span="163-165"];
m25_107 [cluster="lambda expression", file="JobFacts.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", span="167-169"];
m25_102 [cluster="lambda expression", file="JobFacts.cs", label="Entry lambda expression", span="163-165"];
m25_104 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="163-165"];
m25_108 [cluster="lambda expression", file="JobFacts.cs", label="Exit lambda expression", span="167-169"];
m25_77 [cluster="Unk.Commit", file="JobFacts.cs", label="Entry Unk.Commit", span=""];
m25_64 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m25_21 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobFacts.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m25_40 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="JobFacts.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m25_43 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="JobFacts.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m25_76 [cluster="Unk.QueueCommand", file="JobFacts.cs", label="Entry Unk.QueueCommand", span=""];
m25_39 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="JobFacts.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18"];
m25_75 [cluster="Unk.CreateTransaction", file="JobFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m25_24 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobFacts.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m25_110 [file="JobFacts.cs", label="HangFire.Server.JobServer", span=""];
m25_111 [file="JobFacts.cs", label=queue1, span=""];
m25_112 [file="JobFacts.cs", label=string, span=""];
m27_8 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="JobList<FailedJobDto> failedJobs = monitor\n        .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="81-82"];
m27_9 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\n'')", span="88-88"];
m27_10 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="pager.TotalPageCount == 0", span="93-93"];
m27_29 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="233-234"];
m27_82 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m27_90 [cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="115-115"];
m27_14 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="124-131"];
m27_15 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(Request.LinkTo(''/failed/delete''))", span="136-136"];
m27_16 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="141-148"];
m27_17 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="153-153"];
m27_19 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="var index = 0", span="178-178"];
m27_0 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="14-14"];
m27_39 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", color=green, community=0, file="JobPerformanceProcessFacts.cs", label="1: return new ProcessingState(ServerId, WorkerNumber);", span="64-64"];
m27_37 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", span="59-59"];
m27_38 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", span="55-55"];
m27_40 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", span="62-62"];
m27_41 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="HangFire.Core.Tests.States.ProcessingStateFacts", span=""];
m27_42 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="job.Value.FailedAt.HasValue", span="312-312"];
m27_49 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="JobPerformanceProcessFacts.cs", label="1: Write(Request.LinkTo(''/job/'' + job.Key))", span="354-354"];
m27_48 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                        </td>\n                        <td>\n                      '' +\r\n''      <div>\n                                <a class=\''job-method\'' href=\'''')", span="348-349"];
m27_46 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(job.Value.FailedAt)", span="333-333"];
m27_50 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\''>\n                                    '')", span="359-359"];
m27_51 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="364-364"];
m27_35 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", span="55-55"];
m27_36 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="var state = CreateState()", span="57-57"];
m27_43 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318"];
m27_44 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="323-323"];
m27_1 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="JobPerformanceProcessFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null, WorkerNumber))", span="16-17"];
m27_2 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="14-14"];
m27_4 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="17-17"];
m27_5 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="new ProcessingState(null, WorkerNumber)", span="17-17"];
m27_7 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m27_11 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Entry lambda expression", span="24-24"];
m27_12 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="new ProcessingState(String.Empty, WorkerNumber)", span="24-24"];
m27_13 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="24-24"];
m27_18 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", span="62-62"];
m27_21 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="var state = CreateState()", span="37-37"];
m27_22 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="var data = state.SerializeData()", span="39-39"];
m27_23 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.StartedAt), data[''StartedAt''])", span="41-41"];
m27_24 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="Assert.Equal(ServerId, data[''ServerId''])", span="42-42"];
m27_25 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="Assert.Equal(WorkerNumber.ToString(CultureInfo.InvariantCulture), data[''WorkerNumber''])", span="43-43"];
m27_26 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="35-35"];
m27_27 [cluster="HangFire.States.ProcessingState.SerializeData()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m27_30 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="47-47"];
m27_31 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="var state = CreateState()", span="49-49"];
m27_32 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="Assert.False(state.IsFinal)", span="51-51"];
m27_33 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="47-47"];
m27_34 [cluster="Unk.False", file="JobPerformanceProcessFacts.cs", label="Entry Unk.False", span=""];
m27_45 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\''>\n                                    '')", span="328-328"];
m27_47 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\n                                </span>\n'')", span="338-338"];
m27_52 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\n                                </a>\n                            </div>\n'')", span="369-369"];
m27_54 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                                <div style=\''color: #888;\''>\n                      '' +\r\n''              '')", span="380-381"];
m27_55 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(job.Value.Reason)", span="386-386"];
m27_56 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral('' <a class=\''expander\'' href=\''#\''>More&nbsp;details...</a>\n                          '' +\r\n''      </div>\n'')", span="391-392"];
m27_57 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="402-402"];
m27_59 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                        <tr>\n                            <td colspan=\''2\'' class=\''f'' +\r\n''ailed-job-details\''>\n                                <div class=\''expandable\'' styl'' +\r\n''e=\'''')", span="413-415"];
m27_60 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(index++ == 0 ? ''display: block;'' : null)", span="420-420"];
m27_61 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\''>\n                                    <h4>'')", span="425-425"];
m27_62 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(job.Value.ExceptionType)", span="430-430"];
m27_63 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''</h4>\n                                    <p>\n                                   '' +\r\n''     '')", span="435-436"];
m27_64 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(job.Value.ExceptionMessage)", span="441-441"];
m27_65 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''\n                                    </p>\n\n'')", span="446-446"];
m27_67 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                                        <pre class=\''stack-trace\''>'')", span="457-457"];
m27_68 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="462-462"];
m27_69 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''</pre>\n'')", span="467-467"];
m27_70 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''                                </div>\n                            </td>\n        '' +\r\n''                </tr>\n'')", span="477-478"];
m27_71 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="489-489"];
m27_72 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Write(RenderPartial(new Paginator(pager)))", span="501-501"];
m27_53 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="374-374"];
m27_3 [cluster="Unk.>", file="JobPerformanceProcessFacts.cs", label="Entry Unk.>", span=""];
m27_6 [cluster="lambda expression", file="JobPerformanceProcessFacts.cs", label="Exit lambda expression", span="17-17"];
m27_20 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="35-35"];
m27_28 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m27_58 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="job.Value.InFailedState", span="407-407"];
m27_66 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="451-451"];
m27_73 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="JobPerformanceProcessFacts.cs", label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52"];
m27_81 [cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m27_78 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m27_76 [cluster="Unk.TryParse", file="JobPerformanceProcessFacts.cs", label="Entry Unk.TryParse", span=""];
m27_74 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m27_84 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m27_89 [cluster="string.IsNullOrEmpty(string)", file="JobPerformanceProcessFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m27_79 [cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m27_83 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m27_87 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m27_85 [cluster="Unk.Write", file="JobPerformanceProcessFacts.cs", label="Entry Unk.Write", span=""];
m27_86 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m27_77 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m27_75 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m27_80 [cluster="HttpRequestBase.LinkTo(string)", file="JobPerformanceProcessFacts.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m27_88 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m27_91 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="JobPerformanceProcessFacts.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m27_92 [file="JobPerformanceProcessFacts.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m28_59 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.PerformContext)", file="PerformContextFacts.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.PerformContext)", span="29-29"];
m28_76 [cluster="HangFire.Server.PerformContext.SetJobParameter(string, object)", file="PerformContextFacts.cs", label="Entry HangFire.Server.PerformContext.SetJobParameter(string, object)", span="64-64"];
m28_5 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="PerformContextFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m28_52 [cluster="Unk.Same", file="PerformContextFacts.cs", label="Entry Unk.Same", span=""];
m28_24 [cluster="Unk.Equal", file="PerformContextFacts.cs", label="Entry Unk.Equal", span=""];
m28_36 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
m28_37 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="PerformContextFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_workerContext, _connection.Object, JobId, null))", span="52-53"];
m28_38 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="PerformContextFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="55-55"];
m28_39 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
m28_95 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="119-119"];
m28_96 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="_connection.Setup(x => x.GetJobParameter(JobId, ''name'')).Returns(''value'')", span="121-121"];
m28_97 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="122-122"];
m28_98 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="124-125"];
m28_99 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="119-119"];
m28_50 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="128-128"];
m28_109 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CreateContext()", color=red, community=0, file="PerformContextFacts.cs", label="1: return new PerformContext(_workerContext, _connection.Object, JobId, _job);", span="130-130"];
m28_110 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CreateContext()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.CreateContext()", span="128-128"];
m28_11 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Method()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.Method()", span="133-133"];
m28_111 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Method()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.Method()", span="133-133"];
m28_15 [cluster="Unk.>", file="PerformContextFacts.cs", label="Entry Unk.>", span=""];
m28_28 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="PerformContextFacts.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35"];
m28_43 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="59-59"];
m28_44 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="61-61"];
m28_45 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Assert.NotNull(context.Items)", span="63-63"];
m28_46 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Assert.Same(_connection.Object, context.Connection)", span="64-64"];
m28_47 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Assert.Equal(JobId, context.JobId)", span="65-65"];
m28_48 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Assert.Same(_job, context.Job)", span="66-66"];
m28_49 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="59-59"];
m28_53 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="70-70"];
m28_54 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new PerformContext(null))", span="72-73"];
m28_55 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="70-70"];
m28_51 [cluster="Unk.NotNull", file="PerformContextFacts.cs", label="Entry Unk.NotNull", span=""];
m28_29 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="41-41"];
m28_30 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="PerformContextFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_workerContext, _connection.Object, null, _job))", span="43-44"];
m28_31 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="PerformContextFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="46-46"];
m28_32 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="41-41"];
m28_105 [cluster="Unk.GetJobParameter", file="PerformContextFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m28_60 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="77-77"];
m28_61 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="79-79"];
m28_62 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="var contextCopy = new PerformContext(context)", span="80-80"];
m28_63 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.Items, contextCopy.Items)", span="82-82"];
m28_64 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.Connection, contextCopy.Connection)", span="83-83"];
m28_65 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.JobId, contextCopy.JobId)", span="84-84"];
m28_66 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Assert.Same(context.Job, contextCopy.Job)", span="85-85"];
m28_67 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.CopyCtor_CopiesAllPropertyValues()", span="77-77"];
m28_100 [cluster="Unk.Setup", file="PerformContextFacts.cs", label="Entry Unk.Setup", span=""];
m28_77 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="100-100"];
m28_78 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="102-102"];
m28_79 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="context.SetJobParameter(''name'', ''value'')", span="104-104"];
m28_80 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="_connection.Verify(x => x.SetJobParameter(JobId, ''name'', ''\''value\''''))", span="106-106"];
m28_81 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ConvertsValueToJson_AndSetsItUsingConnection()", span="100-100"];
m28_12 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="25-25"];
m28_13 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="PerformContextFacts.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new PerformContext(null, _connection.Object, JobId, _job))", span="27-28"];
m28_14 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="25-25"];
m28_106 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="125-125"];
m28_8 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="21-21"];
m28_9 [cluster="lambda expression", file="PerformContextFacts.cs", label="Method()", span="21-21"];
m28_10 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="21-21"];
m28_16 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="28-28"];
m28_17 [cluster="lambda expression", file="PerformContextFacts.cs", label="new PerformContext(null, _connection.Object, JobId, _job)", span="28-28"];
m28_18 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="28-28"];
m28_25 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="35-35"];
m28_26 [cluster="lambda expression", color=red, community=0, file="PerformContextFacts.cs", label="0: new PerformContext(_workerContext, null, JobId, _job)", span="35-35"];
m28_27 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="35-35"];
m28_33 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="44-44"];
m28_34 [cluster="lambda expression", color=red, community=0, file="PerformContextFacts.cs", label="1: new PerformContext(_workerContext, _connection.Object, null, _job)", span="44-44"];
m28_35 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="44-44"];
m28_40 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="53-53"];
m28_41 [cluster="lambda expression", color=red, community=0, file="PerformContextFacts.cs", label="0: new PerformContext(_workerContext, _connection.Object, JobId, null)", span="53-53"];
m28_42 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="53-53"];
m28_56 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="73-73"];
m28_57 [cluster="lambda expression", file="PerformContextFacts.cs", label="new PerformContext(null)", span="73-73"];
m28_58 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="73-73"];
m28_74 [cluster="lambda expression", file="PerformContextFacts.cs", label="context.SetJobParameter(null, null)", span="94-94"];
m28_73 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="94-94"];
m28_75 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="94-94"];
m28_83 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="106-106"];
m28_84 [cluster="lambda expression", file="PerformContextFacts.cs", label="x.SetJobParameter(JobId, ''name'', ''\''value\'''')", span="106-106"];
m28_85 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="106-106"];
m28_92 [cluster="lambda expression", file="PerformContextFacts.cs", label="context.GetJobParameter<string>(null)", span="115-115"];
m28_91 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="115-115"];
m28_93 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="115-115"];
m28_102 [cluster="lambda expression", file="PerformContextFacts.cs", label="Entry lambda expression", span="121-121"];
m28_107 [cluster="lambda expression", file="PerformContextFacts.cs", label="context.GetJobParameter<int>(''name'')", span="125-125"];
m28_103 [cluster="lambda expression", file="PerformContextFacts.cs", label="x.GetJobParameter(JobId, ''name'')", span="121-121"];
m28_104 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="121-121"];
m28_108 [cluster="lambda expression", file="PerformContextFacts.cs", label="Exit lambda expression", span="125-125"];
m28_87 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="110-110"];
m28_88 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="112-112"];
m28_89 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<string>(null))", span="114-115"];
m28_90 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.GetJobParameter_ThrowsAnException_WhenNameIsNullOrEmpty()", span="110-110"];
m28_82 [cluster="Unk.Verify", file="PerformContextFacts.cs", label="Entry Unk.Verify", span=""];
m28_94 [cluster="HangFire.Server.PerformContext.GetJobParameter<T>(string)", file="PerformContextFacts.cs", label="Entry HangFire.Server.PerformContext.GetJobParameter<T>(string)", span="71-71"];
m28_7 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PerformContextFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m28_20 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
m28_21 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="PerformContextFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new PerformContext(_workerContext, null, JobId, _job))", span="34-35"];
m28_22 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="37-37"];
m28_23 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
m28_101 [cluster="Unk.Returns", file="PerformContextFacts.cs", label="Entry Unk.Returns", span=""];
m28_0 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="17-17"];
m28_1 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", color=red, community=0, file="PerformContextFacts.cs", label="0: _workerContext = new WorkerContext(''Server'', new string[0], 1)", span="19-19"];
m28_2 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="20-20"];
m28_3 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="_job = Job.FromExpression(() => Method())", span="21-21"];
m28_4 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.PerformContextFacts()", span="17-17"];
m28_6 [cluster="Mock<IStorageConnection>.cstr", file="PerformContextFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m28_86 [cluster="Unk.SetJobParameter", file="PerformContextFacts.cs", label="Entry Unk.SetJobParameter", span=""];
m28_19 [cluster="PerformContext.cstr", file="PerformContextFacts.cs", label="Entry PerformContext.cstr", span=""];
m28_68 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Entry HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="89-89"];
m28_69 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="var context = CreateContext()", span="91-91"];
m28_70 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="93-94"];
m28_71 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="96-96"];
m28_72 [cluster="HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", file="PerformContextFacts.cs", label="Exit HangFire.Core.Tests.Server.PerformContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNullOrEmpty()", span="89-89"];
m28_112 [file="PerformContextFacts.cs", label="HangFire.Core.Tests.Server.PerformContextFacts", span=""];
m28_113 [file="PerformContextFacts.cs", label=context, span=""];
m28_114 [file="PerformContextFacts.cs", label=context, span=""];
m28_115 [file="PerformContextFacts.cs", label=context, span=""];
m29_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="PreserveCultureAttributeFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m29_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m29_7 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", color=green, community=0, file="PreserveCultureAttributeFacts.cs", label="0: Storage = storage", span="36-36"];
m29_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="ServerId = serverId", span="35-35"];
m29_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="CancellationToken = cancellationToken", span="37-37"];
m29_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="ServerData = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33"];
m29_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="serverId == null", span="30-30"];
m29_3 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="storage == null", span="31-31"];
m29_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="30-30"];
m29_4 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="throw new ArgumentNullException(''storage'');", span="31-31"];
m29_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m29_12 [file="PreserveCultureAttributeFacts.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m30_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingState.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m30_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingState.cs", label="transaction == null", span="27-27"];
m30_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingState.cs", label="Transaction = transaction", span="29-29"];
m30_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingState.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m30_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ProcessingState.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m30_6 [file="ProcessingState.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m31_8 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ProcessingStateFacts.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m31_9 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ProcessingStateFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="33-33"];
m31_10 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ProcessingStateFacts.cs", label=_cancelsTheCreation, span="35-35"];
m31_26 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m31_17 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24"];
m31_3 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="ProcessingStateFacts.cs", label="_throwException = throwException", span="24-24"];
m31_19 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31"];
m31_20 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs", label="var state = new ProcessingState(''Server1'')", span="33-33"];
m31_21 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs", label="var data = state.SerializeData()", span="35-35"];
m31_23 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs", label="Assert.Equal(''Server1'', state.ServerName)", span="38-38"];
m31_22 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.StartedAt), data[''StartedAt''])", span="37-37"];
m31_24 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ProcessingStateFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31"];
m31_31 [cluster="Unk.False", file="ProcessingStateFacts.cs", label="Entry Unk.False", span=""];
m31_16 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs", label="Assert.Equal(ProcessingState.StateName, state.Name)", span="27-27"];
m31_7 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingStateFacts.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m31_11 [cluster="lambda expression", file="ProcessingStateFacts.cs", label="Entry lambda expression", span="20-20"];
m31_12 [cluster="lambda expression", file="ProcessingStateFacts.cs", label="new ProcessingState(String.Empty)", span="20-20"];
m31_13 [cluster="lambda expression", file="ProcessingStateFacts.cs", label="Exit lambda expression", span="20-20"];
m31_14 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ProcessingStateFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24"];
m31_27 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42"];
m31_28 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ProcessingStateFacts.cs", label="0: var state = new ProcessingState(''server'')", span="44-44"];
m31_29 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ProcessingStateFacts.cs", label="1: Assert.False(state.IsFinal)", span="46-46"];
m31_30 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ProcessingStateFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42"];
m31_15 [cluster="Unk.IsNotNull", file="ProcessingStateFacts.cs", label="Entry Unk.IsNotNull", span=""];
m31_25 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingStateFacts.cs", label="HangFire.Tests.TestClientFilter", span=""];
m31_18 [cluster="System.Exception.Exception()", file="ProcessingStateFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m31_0 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10"];
m31_1 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new ProcessingState(null))", span="12-13"];
m31_2 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ProcessingStateFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10"];
m31_4 [cluster="lambda expression", file="ProcessingStateFacts.cs", label="Entry lambda expression", span="13-13"];
m31_5 [cluster="lambda expression", file="ProcessingStateFacts.cs", label="new ProcessingState(null)", span="13-13"];
m31_6 [cluster="lambda expression", file="ProcessingStateFacts.cs", label="Exit lambda expression", span="13-13"];
m33_6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36"];
m33_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="_transaction.Dispose()", span="38-38"];
m33_8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="36-36"];
m33_128 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="152-152"];
m33_126 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m33_127 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="151-151"];
m33_129 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149"];
m33_90 [cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m33_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m33_156 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m33_157 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="175-176"];
m33_158 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173"];
m33_78 [cluster="Unk.SetRangeInHash", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.SetRangeInHash", span=""];
m33_111 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="141-141"];
m33_109 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m33_110 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="140-140"];
m33_112 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138"];
m33_169 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m33_170 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="188-189"];
m33_171 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185"];
m33_55 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95"];
m33_53 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m33_54 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92"];
m33_56 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="97-97"];
m33_57 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''State'', state.Name)", span="98-98"];
m33_58 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="state.Reason != null", span="100-100"];
m33_59 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''Reason'', state.Reason)", span="102-102"];
m33_60 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="105-107"];
m33_61 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="AddJobState(jobId, state)", span="109-109"];
m33_62 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m33_70 [cluster="Unk.SetEntryInHash", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.SetEntryInHash", span=""];
m33_98 [cluster="Unk.AddItemToSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.AddItemToSet", span=""];
m33_30 [cluster="string.Format(string, object)", file="RedisWriteOnlyTransaction.cs", label="Entry string.Format(string, object)", span="0-0"];
m33_74 [cluster="Unk.RemoveEntry", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.RemoveEntry", span=""];
m33_108 [cluster="Unk.IncrementValue", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.IncrementValue", span=""];
m33_38 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m33_39 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80"];
m33_40 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82"];
m33_41 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84"];
m33_42 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m33_31 [cluster="Unk.ExpireEntryIn", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.ExpireEntryIn", span=""];
m33_142 [cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m33_119 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m33_120 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="146-146"];
m33_121 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144"];
m33_136 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m33_137 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="157-158"];
m33_138 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155"];
m33_149 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m33_150 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="169-170"];
m33_151 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167"];
m33_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m33_9 [cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Dispose", span=""];
m33_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m33_11 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="!_transaction.Commit()", span="43-43"];
m33_12 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="int replayCount = 1", span="49-49"];
m33_13 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="int maxReplayCount = 3", span="50-50"];
m33_15 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="replayCount++ >= maxReplayCount", span="54-54"];
m33_14 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="!_transaction.Replay()", span="52-52"];
m33_16 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56"];
m33_17 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m33_64 [cluster="HangFire.States.State.SerializeData()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.States.State.SerializeData()", span="27-27"];
m33_172 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="188-189"];
m33_28 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66"];
m33_33 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70"];
m33_36 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74"];
m33_27 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="64-66"];
m33_32 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="68-70"];
m33_35 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="72-74"];
m33_29 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="64-66"];
m33_34 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="68-70"];
m33_37 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="72-74"];
m33_44 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80"];
m33_48 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82"];
m33_51 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84"];
m33_43 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="79-80"];
m33_47 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="81-82"];
m33_50 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="83-84"];
m33_45 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="79-80"];
m33_49 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="81-82"];
m33_52 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="83-84"];
m33_68 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92"];
m33_72 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95"];
m33_76 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="105-107"];
m33_67 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="89-92"];
m33_71 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="94-95"];
m33_75 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="105-107"];
m33_69 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="89-92"];
m33_73 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="94-95"];
m33_77 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="105-107"];
m33_87 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="119-121"];
m33_86 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="119-121"];
m33_88 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="119-121"];
m33_96 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="126-127"];
m33_100 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="129-130"];
m33_95 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="126-127"];
m33_99 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="129-130"];
m33_97 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="126-127"];
m33_101 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="129-130"];
m33_106 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="135-135"];
m33_105 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="135-135"];
m33_107 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="135-135"];
m33_114 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="140-140"];
m33_117 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="141-141"];
m33_113 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="140-140"];
m33_116 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="141-141"];
m33_115 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="140-140"];
m33_118 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="141-141"];
m33_123 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="146-146"];
m33_122 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="146-146"];
m33_124 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="146-146"];
m33_131 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="151-151"];
m33_134 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="152-152"];
m33_130 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="151-151"];
m33_133 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="152-152"];
m33_132 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="151-151"];
m33_135 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="152-152"];
m33_140 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="157-158"];
m33_139 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="157-158"];
m33_141 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="157-158"];
m33_147 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="163-164"];
m33_146 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="163-164"];
m33_148 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="163-164"];
m33_153 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="169-170"];
m33_152 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="169-170"];
m33_154 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="169-170"];
m33_160 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="175-176"];
m33_159 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="175-176"];
m33_161 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="175-176"];
m33_166 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="181-182"];
m33_165 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Entry lambda expression", span="181-182"];
m33_167 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="181-182"];
m33_173 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="188-189"];
m33_174 [cluster="lambda expression", file="RedisWriteOnlyTransaction.cs", label="Exit lambda expression", span="188-189"];
m33_85 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m33_143 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m33_144 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="163-164"];
m33_145 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161"];
m33_102 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m33_103 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="135-135"];
m33_104 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133"];
m33_168 [cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.RemoveItemFromList", span=""];
m33_24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74"];
m33_21 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m33_22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66"];
m33_23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70"];
m33_25 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m33_91 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m33_92 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="126-127"];
m33_93 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="129-130"];
m33_94 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124"];
m33_89 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m33_46 [cluster="Unk.Persist", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Persist", span=""];
m33_18 [cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m33_66 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112"];
m33_79 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="114-114"];
m33_80 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''State'', state.Name)", span="115-115"];
m33_81 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''Reason'', state.Reason)", span="116-116"];
m33_83 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="119-121"];
m33_82 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="117-117"];
m33_84 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="112-112"];
m33_19 [cluster="Unk.Replay", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Replay", span=""];
m33_20 [cluster="RedisException.cstr", file="RedisWriteOnlyTransaction.cs", label="Entry RedisException.cstr", span=""];
m33_26 [cluster="Unk.QueueCommand", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.QueueCommand", span=""];
m33_125 [cluster="Unk.DecrementValue", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.DecrementValue", span=""];
m33_175 [cluster="Unk.TrimList", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.TrimList", span=""];
m33_162 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m33_163 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="181-182"];
m33_164 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179"];
m33_155 [cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m33_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m33_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="transaction == null", span="31-31"];
m33_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="_transaction = transaction", span="33-33"];
m33_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''transaction'');", span="31-31"];
m33_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m33_176 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m33_177 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_178 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m33_179 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_180 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_181 [file="RedisWriteOnlyTransaction.cs", label="HangFire.States.State", span=""];
m33_182 [file="RedisWriteOnlyTransaction.cs", label=storedData, span=""];
m33_183 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_184 [file="RedisWriteOnlyTransaction.cs", label=storedData, span=""];
m33_185 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_186 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_187 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_188 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_189 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m33_190 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_191 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_192 [file="RedisWriteOnlyTransaction.cs", label="System.TimeSpan", span=""];
m33_193 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_194 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_195 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_196 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_197 [file="RedisWriteOnlyTransaction.cs", label=double, span=""];
m33_198 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_199 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_200 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_201 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_202 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_203 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_204 [file="RedisWriteOnlyTransaction.cs", label=string, span=""];
m33_205 [file="RedisWriteOnlyTransaction.cs", label=int, span=""];
m33_206 [file="RedisWriteOnlyTransaction.cs", label=int, span=""];
m35_0 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m35_1 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="RetryAttributeFacts.cs", label="_storage = new RedisStorage(RedisUtils.GetHostAndPort(), RedisUtils.GetDb())", span="14-14"];
m35_2 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="RetryAttributeFacts.cs", label="_token = new CancellationToken(true)", span="15-15"];
m35_3 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m35_44 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m35_45 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var redis = RedisUtils.CreateClient()", span="57-57"];
m35_46 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="60-60"];
m35_47 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="61-61"];
m35_50 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Assert.NotNull(JobHelper.DeserializeNullableDateTime(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="68-69"];
m35_48 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var watcher = CreateWatcher()", span="63-63"];
m35_49 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="watcher.Execute(_token)", span="66-66"];
m35_51 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m35_41 [cluster="Unk.GetAllEntriesFromHash", file="RetryAttributeFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m35_13 [cluster="Unk.Equal", file="RetryAttributeFacts.cs", label="Entry Unk.Equal", span=""];
m35_36 [cluster="Unk.SetEntryInHash", file="RetryAttributeFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m35_32 [cluster="Unk.AddItemToSet", file="RetryAttributeFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m35_35 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RetryAttributeFacts.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m35_27 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="Assert.Equal(''my-job'', listEntry)", span="47-47"];
m35_18 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m35_19 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="var redis = RedisUtils.CreateClient()", span="30-30"];
m35_20 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="33-33"];
m35_21 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="34-34"];
m35_22 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.SerializeDateTime(DateTime.UtcNow.AddDays(-1)))", span="35-36"];
m35_25 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="44-44"];
m35_26 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="var listEntry = redis.DequeueItemFromList(''hangfire:queue:my-queue'')", span="46-46"];
m35_28 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="49-49"];
m35_23 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="var watcher = CreateWatcher()", span="38-38"];
m35_24 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="watcher.Execute(_token)", span="41-41"];
m35_29 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="Assert.False(job.ContainsKey(''Fetched''))", span="50-50"];
m35_30 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m35_12 [cluster="Unk.>", file="RetryAttributeFacts.cs", label="Entry Unk.>", span=""];
m35_43 [cluster="Unk.False", file="RetryAttributeFacts.cs", label="Entry Unk.False", span=""];
m35_6 [cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37"];
m35_39 [cluster="Unk.GetListCount", file="RetryAttributeFacts.cs", label="Entry Unk.GetListCount", span=""];
m35_34 [cluster="System.DateTime.AddDays(double)", file="RetryAttributeFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m35_38 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="47-47"];
m35_17 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
m35_54 [cluster="Unk.NotNull", file="RetryAttributeFacts.cs", label="Entry Unk.NotNull", span=""];
m35_59 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.SerializeDateTime(DateTime.UtcNow.AddDays(-1)))", span="81-82"];
m35_55 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m35_56 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var redis = RedisUtils.CreateClient()", span="76-76"];
m35_57 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79"];
m35_58 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80"];
m35_62 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="90-90"];
m35_63 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue''))", span="91-91"];
m35_64 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="93-93"];
m35_60 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var watcher = CreateWatcher()", span="84-84"];
m35_61 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="watcher.Execute(_token)", span="87-87"];
m35_65 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Assert.False(job.ContainsKey(''Checked''))", span="94-94"];
m35_66 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m35_40 [cluster="Unk.DequeueItemFromList", file="RetryAttributeFacts.cs", label="Entry Unk.DequeueItemFromList", span=""];
m35_33 [cluster="Unk.AddItemToList", file="RetryAttributeFacts.cs", label="Entry Unk.AddItemToList", span=""];
m35_37 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m35_77 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="RetryAttributeFacts.cs", label="return new FetchedJobsWatcher(_storage);", span="123-123"];
m35_78 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m35_14 [cluster="lambda expression", file="RetryAttributeFacts.cs", label="Entry lambda expression", span="22-22"];
m35_15 [cluster="lambda expression", file="RetryAttributeFacts.cs", label="new FetchedJobsWatcher(null)", span="22-22"];
m35_16 [cluster="lambda expression", file="RetryAttributeFacts.cs", label="Exit lambda expression", span="22-22"];
m35_5 [cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20"];
m35_31 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m35_7 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="RetryAttributeFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m35_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="43-43"];
m35_52 [cluster="Unk.GetValueFromHash", file="RetryAttributeFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m35_72 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.SerializeDateTime(DateTime.UtcNow))", span="108-109"];
m35_67 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m35_68 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var redis = RedisUtils.CreateClient()", span="101-101"];
m35_69 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="104-104"];
m35_70 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="105-105"];
m35_71 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.SerializeDateTime(DateTime.UtcNow.AddDays(-1)))", span="106-107"];
m35_75 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="117-117"];
m35_73 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="var watcher = CreateWatcher()", span="111-111"];
m35_74 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="watcher.Execute(_token)", span="114-114"];
m35_76 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m35_8 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RetryAttributeFacts.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m35_9 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RetryAttributeFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null))", span="21-22"];
m35_10 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RetryAttributeFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="24-24"];
m35_11 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RetryAttributeFacts.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m35_53 [cluster="Unk.DeserializeNullableDateTime", file="RetryAttributeFacts.cs", label="Entry Unk.DeserializeNullableDateTime", span=""];
m35_42 [cluster="Unk.ContainsKey", file="RetryAttributeFacts.cs", label="Entry Unk.ContainsKey", span=""];
m35_79 [file="RetryAttributeFacts.cs", label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span=""];
m36_48 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69"];
m36_49 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="Perform.Async<TestJob>()", span="71-71"];
m36_50 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="73-79"];
m36_51 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="81-81"];
m36_52 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69"];
m36_133 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176"];
m36_134 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="ScheduledState.cs", label="Perform.In<TestJob>(TimeSpan.FromDays(1), new { Greeting = ''Hello'' })", span="178-178"];
m36_135 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="180-186"];
m36_136 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="188-188"];
m36_137 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176"];
m36_138 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="ScheduledState.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55"];
m36_63 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85"];
m36_64 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="ScheduledState.cs", label="Perform.Async<TestJob>(new { ArticleId = 3 })", span="87-87"];
m36_65 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n               Times.Once)", span="89-95"];
m36_66 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="97-97"];
m36_67 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85"];
m36_38 [cluster="HangFire.Perform.Async(System.Type, object)", file="ScheduledState.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="31-31"];
m36_95 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124"];
m36_96 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="ScheduledState.cs", label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { Count = long.MaxValue })", span="126-126"];
m36_97 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="128-134"];
m36_98 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="136-136"];
m36_99 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124"];
m36_53 [cluster="HangFire.Perform.Async<TJob>()", file="ScheduledState.cs", label="Entry HangFire.Perform.Async<TJob>()", span="13-13"];
m36_114 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219"];
m36_173 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="ScheduledState.cs", label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1));", span="221-223"];
m36_174 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219"];
m36_118 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160"];
m36_119 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="ScheduledState.cs", label="Perform.In<TestJob>(TimeSpan.FromDays(1))", span="162-162"];
m36_120 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="164-170"];
m36_121 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="172-172"];
m36_122 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160"];
m36_30 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40"];
m36_31 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Perform.Async(null)", span="42-42"];
m36_32 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40"];
m36_21 [cluster="Unk.>", file="ScheduledState.cs", label="Entry Unk.>", span=""];
m36_68 [cluster="HangFire.Perform.Async<TJob>(object)", file="ScheduledState.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="20-20"];
m36_107 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140"];
m36_108 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="ScheduledState.cs", label="Perform.In(TimeSpan.FromDays(-1), typeof(TestJob))", span="142-142"];
m36_109 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>()))", span="144-149"];
m36_110 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140"];
m36_20 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207"];
m36_162 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="ScheduledState.cs", label="return It.Is<EnqueuedState>(y => y.Queue == ''default'');", span="209-209"];
m36_163 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207"];
m36_81 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="ScheduledState.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61"];
m36_100 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="ScheduledState.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66"];
m36_8 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23"];
m36_9 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="Perform.Async(typeof (TestJob))", span="25-25"];
m36_10 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="27-33"];
m36_11 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="35-35"];
m36_12 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23"];
m36_19 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202"];
m36_157 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="ScheduledState.cs", label="return It.Is<Type>(y => y == typeof (TestJob));", span="204-204"];
m36_158 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202"];
m36_45 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63"];
m36_46 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Perform.Async(null, new { Greeting = ''Hello'' })", span="65-65"];
m36_47 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63"];
m36_123 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="ScheduledState.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48"];
m36_172 [cluster="System.DateTime.AddDays(double)", file="ScheduledState.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m36_152 [cluster="System.Guid.Parse(string)", file="ScheduledState.cs", label="Entry System.Guid.Parse(string)", span="0-0"];
m36_29 [cluster="Unk.Dispose", file="ScheduledState.cs", label="Entry Unk.Dispose", span=""];
m36_115 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154"];
m36_116 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Perform.In(TimeSpan.FromDays(1), null, new { Count = 1 })", span="156-156"];
m36_117 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154"];
m36_0 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14"];
m36_1 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="ScheduledState.cs", label="_jobClientMock = new Mock<IJobClient> { CallBase = false }", span="16-16"];
m36_2 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="ScheduledState.cs", label="Perform.CreateJobClientCallback \r\n                = () => _jobClientMock.Object", span="18-19"];
m36_3 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14"];
m36_13 [cluster="HangFire.Perform.Async(System.Type)", file="ScheduledState.cs", label="Entry HangFire.Perform.Async(System.Type)", span="26-26"];
m36_175 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="223-223"];
m36_5 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="19-19"];
m36_6 [cluster="lambda expression", file="ScheduledState.cs", label="_jobClientMock.Object", span="19-19"];
m36_7 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="19-19"];
m36_15 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="28-32"];
m36_26 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="35-35"];
m36_16 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="28-32"];
m36_17 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="28-32"];
m36_23 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="32-32"];
m36_24 [cluster="lambda expression", file="ScheduledState.cs", label="y == null", span="32-32"];
m36_25 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="32-32"];
m36_27 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="35-35"];
m36_28 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="35-35"];
m36_39 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="51-55"];
m36_42 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="58-58"];
m36_40 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="51-55"];
m36_41 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="51-55"];
m36_43 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="58-58"];
m36_44 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="58-58"];
m36_54 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="74-78"];
m36_60 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="81-81"];
m36_55 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="74-78"];
m36_56 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="74-78"];
m36_57 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="78-78"];
m36_58 [cluster="lambda expression", file="ScheduledState.cs", label="y == null", span="78-78"];
m36_59 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="78-78"];
m36_61 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="81-81"];
m36_62 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="81-81"];
m36_69 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="90-94"];
m36_72 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="97-97"];
m36_70 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="90-94"];
m36_71 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="90-94"];
m36_73 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="97-97"];
m36_74 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="97-97"];
m36_82 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="106-110"];
m36_89 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="113-113"];
m36_83 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="106-110"];
m36_84 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="106-110"];
m36_86 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="110-110"];
m36_87 [cluster="lambda expression", file="ScheduledState.cs", label="y == null", span="110-110"];
m36_88 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="110-110"];
m36_90 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="113-113"];
m36_91 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="113-113"];
m36_101 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="129-133"];
m36_104 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="136-136"];
m36_102 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="129-133"];
m36_103 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="129-133"];
m36_105 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="136-136"];
m36_106 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="136-136"];
m36_111 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="145-149"];
m36_112 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>())", span="145-149"];
m36_113 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="145-149"];
m36_124 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="165-169"];
m36_130 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="172-172"];
m36_125 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="165-169"];
m36_126 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="165-169"];
m36_127 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="169-169"];
m36_128 [cluster="lambda expression", file="ScheduledState.cs", label="y == null", span="169-169"];
m36_129 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="169-169"];
m36_131 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="172-172"];
m36_132 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="172-172"];
m36_139 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="181-185"];
m36_142 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="188-188"];
m36_140 [cluster="lambda expression", file="ScheduledState.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="181-185"];
m36_141 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="181-185"];
m36_143 [cluster="lambda expression", file="ScheduledState.cs", label="x.Dispose()", span="188-188"];
m36_144 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="188-188"];
m36_149 [cluster="lambda expression", file="ScheduledState.cs", label="var guid = Guid.Parse(actual)", span="195-195"];
m36_154 [cluster="lambda expression", file="ScheduledState.cs", label="validator(x)", span="199-199"];
m36_153 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="199-199"];
m36_148 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="193-197"];
m36_150 [cluster="lambda expression", file="ScheduledState.cs", label="return guid != Guid.Empty;", span="196-196"];
m36_151 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="193-197"];
m36_155 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="199-199"];
m36_159 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="204-204"];
m36_160 [cluster="lambda expression", file="ScheduledState.cs", label="y == typeof (TestJob)", span="204-204"];
m36_161 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="204-204"];
m36_164 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="209-209"];
m36_165 [cluster="lambda expression", file="ScheduledState.cs", label="y.Queue == ''default''", span="209-209"];
m36_166 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="209-209"];
m36_169 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="216-216"];
m36_170 [cluster="lambda expression", file="ScheduledState.cs", label="DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2)", span="216-216"];
m36_171 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="216-216"];
m36_176 [cluster="lambda expression", file="ScheduledState.cs", label="DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1)", span="223-223"];
m36_177 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="223-223"];
m36_33 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46"];
m36_34 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="ScheduledState.cs", label="Perform.Async(typeof (TestJob), new { Greeting = ''Hello'' })", span="48-48"];
m36_35 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="50-56"];
m36_36 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="58-58"];
m36_37 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46"];
m36_92 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118"];
m36_93 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Perform.In(TimeSpan.FromDays(1), null)", span="120-120"];
m36_94 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118"];
m36_85 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212"];
m36_167 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="ScheduledState.cs", label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2));", span="214-216"];
m36_168 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212"];
m36_18 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191"];
m36_145 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="ScheduledState.cs", label="Func<string, bool> validator = actual =>\r\n                {\r\n                    var guid = Guid.Parse(actual);\r\n                    return guid != Guid.Empty;\r\n                }", span="193-197"];
m36_146 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="ScheduledState.cs", label="return It.Is<string>(x => validator(x));", span="199-199"];
m36_147 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191"];
m36_156 [cluster="Unk.validator", file="ScheduledState.cs", label="Entry Unk.validator", span=""];
m36_22 [cluster="Unk.CreateJob", file="ScheduledState.cs", label="Entry Unk.CreateJob", span=""];
m36_4 [cluster="Mock<IJobClient>.cstr", file="ScheduledState.cs", label="Entry Mock<IJobClient>.cstr", span=""];
m36_14 [cluster="Unk.Verify", file="ScheduledState.cs", label="Entry Unk.Verify", span=""];
m36_75 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="ScheduledState.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101"];
m36_76 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="ScheduledState.cs", label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="103-103"];
m36_77 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="105-111"];
m36_78 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="ScheduledState.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="113-113"];
m36_79 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="ScheduledState.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101"];
m36_178 [file="ScheduledState.cs", label="HangFire.Tests.UnitTests.PerformTests", span=""];
m36_179 [file="ScheduledState.cs", label=validator, span=""];
m37_11 [cluster="System.DateTime.DateTime(int, int, int)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m37_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m37_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m37_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(date)", span="21-21"];
m37_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var date = new DateTime(2012, 12, 12)", span="20-20"];
m37_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Assert.Equal(date, state.EnqueueAt)", span="22-22"];
m37_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m37_34 [cluster="Unk.False", file="ScheduledStateFacts.cs", label="Entry Unk.False", span=""];
m37_0 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m37_1 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="13-13"];
m37_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14"];
m37_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m37_5 [cluster="Unk.Equal", file="ScheduledStateFacts.cs", label="Entry Unk.Equal", span=""];
m37_28 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="45-45"];
m37_30 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m37_31 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ScheduledStateFacts.cs", label="1: var state = new ScheduledState(DateTime.UtcNow)", span="47-47"];
m37_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="ScheduledStateFacts.cs", label="0: Assert.False(state.IsFinal)", span="49-49"];
m37_33 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m37_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m37_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36"];
m37_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var data = state.SerializeData()", span="38-38"];
m37_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.EnqueueAt), data[''EnqueueAt''])", span="40-40"];
m37_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.ScheduledAt), data[''ScheduledAt''])", span="41-41"];
m37_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m37_29 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m38_0 [cluster="HangFire.Tests.CriticalQueueJob.Perform()", file="ScheduledStateHandlerFacts.cs", label="Entry HangFire.Tests.CriticalQueueJob.Perform()", span="5-5"];
m38_1 [cluster="HangFire.Tests.CriticalQueueJob.Perform()", file="ScheduledStateHandlerFacts.cs", label="Exit HangFire.Tests.CriticalQueueJob.Perform()", span="5-5"];
m39_74 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m39_75 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns((string)null)", span="82-83"];
m39_76 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="84-84"];
m39_77 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="86-86"];
m39_78 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", color=red, community=0, file="SchedulePollerFacts.cs", label="0: _stateMachine.Verify(\r\n                x => x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>()),\r\n                Times.Never)", span="88-90"];
m39_79 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_DoesNotCallStateMachine_IfThereAreNoJobsToEnqueue()", span="80-80"];
m39_14 [cluster="Mock<IStateMachineFactory>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m39_56 [cluster="HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePollerFacts.cs", label="Entry HangFire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47"];
m39_37 [cluster="Unk.Equal", file="SchedulePollerFacts.cs", label="Entry Unk.Equal", span=""];
m39_65 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m39_66 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="69-69"];
m39_67 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="71-71"];
m39_68 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName }))", span="73-76"];
m39_69 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_MovesJobStateToEnqueued()", span="67-67"];
m39_20 [cluster="Unk.>", file="SchedulePollerFacts.cs", label="Entry Unk.>", span=""];
m39_41 [cluster="SchedulePoller.cstr", file="SchedulePollerFacts.cs", label="Entry SchedulePoller.cstr", span=""];
m39_29 [cluster="Unk.GetFirstByLowestScoreFromSet", file="SchedulePollerFacts.cs", label="Entry Unk.GetFirstByLowestScoreFromSet", span=""];
m39_25 [cluster="Unk.GetConnection", file="SchedulePollerFacts.cs", label="Entry Unk.GetConnection", span=""];
m39_49 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m39_50 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="var scheduler = CreateScheduler()", span="58-58"];
m39_51 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="scheduler.Execute(_token)", span="60-60"];
m39_52 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_storage.Verify(x => x.GetConnection())", span="62-62"];
m39_53 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="_connection.Verify(x => x.Dispose())", span="63-63"];
m39_54 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Execute_TakesConnectionAndDisposesIt()", span="56-56"];
m39_33 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m39_34 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan))", span="38-40"];
m39_35 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m39_36 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="36-36"];
m39_15 [cluster="Unk.Setup", file="SchedulePollerFacts.cs", label="Entry Unk.Setup", span=""];
m39_64 [cluster="Unk.Dispose", file="SchedulePollerFacts.cs", label="Entry Unk.Dispose", span=""];
m39_73 [cluster="Unk.TryToChangeState", file="SchedulePollerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m39_0 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m39_1 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage = new Mock<JobStorage>()", span="21-21"];
m39_2 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="22-22"];
m39_3 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="23-23"];
m39_4 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_token = new CancellationToken(true)", span="24-24"];
m39_5 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26"];
m39_6 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28"];
m39_7 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="30-30"];
m39_8 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="_connection.Setup(x => x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))).Returns(JobId)", span="31-32"];
m39_9 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.SchedulePollerFacts()", span="19-19"];
m39_83 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="83-83"];
m39_17 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="27-27"];
m39_22 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="30-30"];
m39_26 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="31-32"];
m39_18 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
m39_19 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="27-27"];
m39_23 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="30-30"];
m39_24 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="30-30"];
m39_27 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="31-32"];
m39_28 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="31-32"];
m39_30 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="32-32"];
m39_31 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="32-32"];
m39_32 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="32-32"];
m39_38 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="39-40"];
m39_39 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new SchedulePoller(\r\n                    null, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan)", span="39-40"];
m39_40 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="39-40"];
m39_46 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="49-50"];
m39_47 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan)", span="49-50"];
m39_48 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="49-50"];
m39_58 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="62-62"];
m39_61 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="63-63"];
m39_59 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetConnection()", span="62-62"];
m39_60 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="62-62"];
m39_62 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.Dispose()", span="63-63"];
m39_63 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="63-63"];
m39_70 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="73-76"];
m39_71 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<EnqueuedState>(),\r\n                new[] { ScheduledState.StateName })", span="73-76"];
m39_72 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="73-76"];
m39_80 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="82-83"];
m39_86 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Entry lambda expression", span="89-89"];
m39_81 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="x.GetFirstByLowestScoreFromSet(\r\n                ''schedule'', 0, It.Is<double>(time => time > 0))", span="82-83"];
m39_82 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="82-83"];
m39_84 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="time > 0", span="83-83"];
m39_85 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="83-83"];
m39_87 [cluster="lambda expression", color=red, community=0, file="SchedulePollerFacts.cs", label="1: x.TryToChangeState(It.IsAny<string>(), It.IsAny<State>(), It.IsAny<string[]>())", span="89-89"];
m39_88 [cluster="lambda expression", file="SchedulePollerFacts.cs", label="Exit lambda expression", span="89-89"];
m39_13 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="SchedulePollerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m39_57 [cluster="Unk.Verify", file="SchedulePollerFacts.cs", label="Entry Unk.Verify", span=""];
m39_55 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m39_89 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="return new SchedulePoller(_storage.Object, _stateMachineFactory.Object, Timeout.InfiniteTimeSpan);", span="95-95"];
m39_90 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.CreateScheduler()", span="93-93"];
m39_12 [cluster="Mock<IStateMachine>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m39_21 [cluster="Unk.Create", file="SchedulePollerFacts.cs", label="Entry Unk.Create", span=""];
m39_16 [cluster="Unk.Returns", file="SchedulePollerFacts.cs", label="Entry Unk.Returns", span=""];
m39_11 [cluster="Mock<IStorageConnection>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m39_10 [cluster="Mock<JobStorage>.cstr", file="SchedulePollerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m39_42 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Entry HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m39_43 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SchedulePoller(\r\n                    _storage.Object, null, Timeout.InfiniteTimeSpan))", span="48-50"];
m39_44 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="52-52"];
m39_45 [cluster="HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="SchedulePollerFacts.cs", label="Exit HangFire.Core.Tests.Server.SchedulePollerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46"];
m39_91 [file="SchedulePollerFacts.cs", label="HangFire.Core.Tests.Server.SchedulePollerFacts", span=""];
m41_47 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="103-103"];
m41_48 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="105-106"];
m41_49 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="108-108"];
m41_50 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="103-103"];
m41_35 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m41_39 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: _server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                name,\r\n                workers,\r\n                queues,\r\n                null,\r\n                TimeSpan.FromSeconds(1),\r\n                TimeSpan.FromSeconds(1))", span="84-91"];
m41_40 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m41_20 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m41_21 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="52-52"];
m41_22 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m41_5 [cluster="HangFire.Server.JobServer.Dispose()", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m41_29 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m41_30 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: WhenTheServerStartsWithWorkers(name, 1)", span="67-67"];
m41_31 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m41_74 [cluster="Unk.GetAllEntriesFromHash", file="SharedWorkerContextFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m41_64 [cluster="Unk.IsTrue", file="SharedWorkerContextFacts.cs", label="Entry Unk.IsTrue", span=""];
m41_6 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m41_7 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: Given(''a job'')", span="31-31"];
m41_8 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: Given(''the job was dequeued'')", span="32-32"];
m41_9 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m41_27 [cluster="Unk.AddItemToSet", file="SharedWorkerContextFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m41_15 [cluster="string.Format(string, object)", file="SharedWorkerContextFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m41_36 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m41_37 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: CreateServer(name, 1, new [] { queue1, queue2 })", span="79-79"];
m41_38 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m41_58 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="121-121"];
m41_59 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Thread.Sleep(_serverStartupTimeout)", span="123-123"];
m41_60 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="124-124"];
m41_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="121-121"];
m41_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="112-112"];
m41_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="114-115"];
m41_55 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", span="117-117"];
m41_56 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="112-112"];
m41_76 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="142-142"];
m41_77 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", span="144-144"];
m41_78 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Assert.AreEqual(2, registeredQueues.Count)", span="146-146"];
m41_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Assert.AreEqual(queue1, registeredQueues[0])", span="147-147"];
m41_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Assert.AreEqual(queue2, registeredQueues[1])", span="148-148"];
m41_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="142-142"];
m41_42 [cluster="System.TimeSpan.FromSeconds(double)", file="SharedWorkerContextFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m41_69 [cluster="Unk.IsFalse", file="SharedWorkerContextFacts.cs", label="Entry Unk.IsFalse", span=""];
m41_82 [cluster="Unk.AreEqual", file="SharedWorkerContextFacts.cs", label="Entry Unk.AreEqual", span=""];
m41_62 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="SharedWorkerContextFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m41_43 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="95-95"];
m41_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: WhenTheServerStarts(name)", span="97-97"];
m41_45 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: _server.Dispose()", span="98-98"];
m41_46 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="95-95"];
m41_41 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
m41_0 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m41_1 [cluster="HangFire.Tests.ServerSteps.TearDown()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: _server != null", span="21-21"];
m41_2 [cluster="HangFire.Tests.ServerSteps.TearDown()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: _server.Dispose()", span="23-23"];
m41_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: _server = null", span="24-24"];
m41_4 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m41_28 [cluster="Unk.AddItemToList", file="SharedWorkerContextFacts.cs", label="Entry Unk.AddItemToList", span=""];
m41_16 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m41_17 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: Given(''a job'')", span="45-45"];
m41_18 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="46-46"];
m41_19 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m41_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="135-135"];
m41_71 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SharedWorkerContextFacts.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", span="137-137"];
m41_72 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SharedWorkerContextFacts.cs", label="DictionaryAssert.ContainsFollowingItems(table, properties)", span="138-138"];
m41_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="135-135"];
m41_51 [cluster="Unk.GetAllItemsFromList", file="SharedWorkerContextFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m41_63 [cluster="Unk.SetContainsItem", file="SharedWorkerContextFacts.cs", label="Entry Unk.SetContainsItem", span=""];
m41_52 [cluster="Unk.Contains", file="SharedWorkerContextFacts.cs", label="Entry Unk.Contains", span=""];
m41_89 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="158-158"];
m41_88 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="SharedWorkerContextFacts.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", span="160-160"];
m41_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="158-158"];
m41_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m41_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: Given(String.Format(''a job of the '{0}' type'', type))", span="38-38"];
m41_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: Given(''the job was dequeued'')", span="39-39"];
m41_14 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m41_10 [cluster="Unk.Given", file="SharedWorkerContextFacts.cs", label="Entry Unk.Given", span=""];
m41_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m41_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m41_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="0: Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m41_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m41_57 [cluster="Unk.DoesNotContain", file="SharedWorkerContextFacts.cs", label="Entry Unk.DoesNotContain", span=""];
m41_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m41_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", color=green, community=0, file="SharedWorkerContextFacts.cs", label="1: CreateServer(name, workers, new [] { ''critical'' })", span="73-73"];
m41_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m41_85 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="152-152"];
m41_84 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="SharedWorkerContextFacts.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="154-154"];
m41_83 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="152-152"];
m41_75 [cluster="Unk.ContainsFollowingItems", file="SharedWorkerContextFacts.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m41_65 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="128-128"];
m41_66 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Thread.Sleep(_serverStartupTimeout)", span="130-130"];
m41_67 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="131-131"];
m41_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="SharedWorkerContextFacts.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="128-128"];
m41_86 [cluster="Unk.ContainsKey", file="SharedWorkerContextFacts.cs", label="Entry Unk.ContainsKey", span=""];
m41_90 [file="SharedWorkerContextFacts.cs", label="HangFire.Tests.ServerSteps", span=""];
m43_11 [cluster="Unk.EnqueueItemOnList", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m43_50 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m43_15 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="56-56"];
m43_16 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label="var connection = _storage.GetConnection()", span="59-59"];
m43_17 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="60-60"];
m43_18 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="62-62"];
m43_19 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label=recurringJobIds, span="64-64"];
m43_2 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''storage'');", span="42-42"];
m43_3 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="client == null", span="43-43"];
m43_4 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''client'');", span="43-43"];
m43_5 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="dateTimeProvider == null", span="44-44"];
m43_32 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="68-68"];
m43_59 [cluster="Unk.GetNextOccurrence", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetNextOccurrence", span=""];
m43_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m43_54 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m43_60 [cluster="HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m43_55 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m43_56 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="41-41"];
m43_38 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="var cron = recurringJob[''Cron'']", span="91-91"];
m43_39 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="92-92"];
m43_40 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="var currentTime = _dateTimeProvider.CurrentDateTime", span="94-94"];
m43_41 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: recurringJob.ContainsKey(''NextExecution'')", span="96-96"];
m43_26 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="SqlServerWriteOnlyTransaction.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="63-63"];
m43_43 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="nextExecution <= currentTime", span="100-100"];
m43_42 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="var nextExecution = JobHelper.FromStringTimestamp(recurringJob[''NextExecution''])", span="98-98"];
m43_52 [cluster="Unk.Parse", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Parse", span=""];
m43_28 [cluster="Unk.GetAllItemsFromList", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m43_29 [cluster="Unk.Contains", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Contains", span=""];
m43_33 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m43_34 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs", label="1: Entry HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87"];
m43_35 [cluster="Unk.WarnFormat", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.WarnFormat", span=""];
m43_36 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="89-89"];
m43_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m43_31 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", span="70-70"];
m43_7 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="_storage = storage", span="46-46"];
m43_9 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="_dateTimeProvider = dateTimeProvider", span="48-48"];
m43_8 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="_client = client", span="47-47"];
m43_10 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
m43_30 [cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m43_24 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label="Logger.WarnFormat(''Recurring job '{0}' can not be scheduled due to job load exception.'', ex, recurringJobId)", span="80-80"];
m43_25 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
m43_27 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m43_12 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35"];
m43_13 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", span="37-37"];
m43_14 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35"];
m43_20 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51"];
m43_22 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs", label="0: Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51"];
m43_21 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="SqlServerWriteOnlyTransaction.cs", label="Then(String.Format(''the '{0}' queue contains the job'', DefaultQueue))", span="53-53"];
m43_23 [cluster="Unk.Then", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.Then", span=""];
m43_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerWriteOnlyTransaction.cs", label="Assert.AreEqual(length, actualLength)", span="95-95"];
m43_48 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''NextExecution'', JobHelper.ToStringTimestamp(nextExecution) }\r\n                    })", span="119-124"];
m43_37 [cluster="Unk.DoesNotContain", file="SqlServerWriteOnlyTransaction.cs", label="Entry Unk.DoesNotContain", span=""];
m43_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerWriteOnlyTransaction.cs", label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="93-94"];
m43_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="91-91"];
m43_44 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="91-91"];
m43_49 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87"];
m43_58 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m43_61 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
m43_62 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="SqlServerWriteOnlyTransaction.cs", label="return ''Recurring Job Scheduler'';", span="130-130"];
m43_63 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="SqlServerWriteOnlyTransaction.cs", label="Exit HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
m43_6 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''dateTimeProvider'');", span="44-44"];
m43_51 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m43_0 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="Entry HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
m43_1 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="SqlServerWriteOnlyTransaction.cs", label="storage == null", span="42-42"];
m43_64 [file="SqlServerWriteOnlyTransaction.cs", label="HangFire.Server.RecurringJobScheduler", span=""];
m44_0 [cluster="HangFire.States.State.SerializeData()", file="State.cs", label="Entry HangFire.States.State.SerializeData()", span="27-27"];
m44_1 [cluster="HangFire.States.State.SerializeData()", color=red, community=0, file="State.cs", label="1: return new Dictionary<string, string>();", span="29-29"];
m44_2 [cluster="HangFire.States.State.SerializeData()", file="State.cs", label="Exit HangFire.States.State.SerializeData()", span="27-27"];
m44_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="State.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m45_7 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs", label="Entry HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18"];
m45_8 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=red, community=0, file="StateFacts.cs", label="1: var stateMock = new Mock<State>()", span="20-20"];
m45_9 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=red, community=0, file="StateFacts.cs", label="0: stateMock.CallBase = true", span="21-21"];
m45_10 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", color=red, community=0, file="StateFacts.cs", label="1: Assert.Empty(stateMock.Object.SerializeData())", span="23-23"];
m45_11 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", file="StateFacts.cs", label="Exit HangFire.Core.Tests.States.StateFacts.ShouldReturnEmptyStateDataByDefault()", span="18-18"];
m45_5 [cluster="Mock<State>.cstr", file="StateFacts.cs", label="Entry Mock<State>.cstr", span=""];
m45_6 [cluster="Unk.False", file="StateFacts.cs", label="Entry Unk.False", span=""];
m45_13 [cluster="Unk.Empty", file="StateFacts.cs", label="Entry Unk.Empty", span=""];
m45_12 [cluster="Unk.SerializeData", file="StateFacts.cs", label="Entry Unk.SerializeData", span=""];
m45_0 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs", label="Entry HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9"];
m45_1 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=red, community=0, file="StateFacts.cs", label="0: var stateMock = new Mock<State>()", span="11-11"];
m45_2 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=red, community=0, file="StateFacts.cs", label="1: stateMock.CallBase = true", span="12-12"];
m45_3 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", color=red, community=0, file="StateFacts.cs", label="0: Assert.False(stateMock.Object.ExpireJobOnApply)", span="14-14"];
m45_4 [cluster="HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", file="StateFacts.cs", label="Exit HangFire.Core.Tests.States.StateFacts.ShouldNotExpireJobOnApplyByDefault()", span="9-9"];
m46_38 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", span="132-132"];
m46_68 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="var filterInfo = GetFilters(context.Job)", span="136-136"];
m46_69 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="var electedState = ElectState(context, toState, oldStateName, filterInfo.ElectStateFilters)", span="138-138"];
m46_70 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="ApplyState(context, electedState, oldStateName, filterInfo.ApplyStateFilters)", span="139-139"];
m46_74 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="ApplyState(context, failedState, oldStateName, Enumerable.Empty<IApplyStateFilter>())", span="153-153"];
m46_71 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="return true;", span="142-142"];
m46_72 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label=Exception, span="144-144"];
m46_73 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="146-149"];
m46_75 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="return false;", span="156-156"];
m46_76 [cluster="HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ChangeState(HangFire.States.StateContext, HangFire.States.State, string)", span="132-132"];
m46_10 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m46_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="filters == null", span="47-47"];
m46_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="_getFiltersThunk = md => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49"];
m46_12 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="throw new ArgumentNullException(''filters'');", span="47-47"];
m46_14 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m46_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="StateMachine.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0"];
m46_66 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateMachine.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m46_90 [cluster="HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="StateMachine.cs", label="Entry HangFire.States.ApplyStateContext.ApplyState(HangFire.States.StateHandlerCollection, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="46-46"];
m46_67 [cluster="string.Format(string, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m46_78 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160"];
m46_81 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="StateMachine.cs", label="var context = new ElectStateContext(\r\n                stateContext, toState, fromStateName, _connection)", span="166-167"];
m46_82 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="StateMachine.cs", label="return context.ElectState(filters);", span="169-169"];
m46_83 [cluster="HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ElectState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="160-160"];
m46_79 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172"];
m46_86 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="StateMachine.cs", label="var context = new ApplyStateContext(\r\n                _connection, stateContext, electedState, oldStateName)", span="178-179"];
m46_87 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="StateMachine.cs", label="context.ApplyState(_handlerCollection, filters)", span="181-181"];
m46_88 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.States.StateContext, HangFire.States.State, string, System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>)", span="172-172"];
m46_0 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
m46_1 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="connection == null", span="34-34"];
m46_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="handlers == null", span="35-35"];
m46_5 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="_connection = connection", span="37-37"];
m46_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="_handlerCollection = GetHandlerCollection(handlers)", span="38-38"];
m46_2 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="throw new ArgumentNullException(''connection'');", span="34-34"];
m46_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="throw new ArgumentNullException(''handlers'');", span="35-35"];
m46_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="32-32"];
m46_35 [cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m46_89 [cluster="HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", file="StateMachine.cs", label="Entry HangFire.States.ApplyStateContext.ApplyStateContext(HangFire.Storage.IStorageConnection, HangFire.States.StateContext, HangFire.States.State, string)", span="26-26"];
m46_101 [cluster="HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", file="StateMachine.cs", label="Entry HangFire.States.StateHandlerCollection.AddHandler(HangFire.States.IStateHandler)", span="27-27"];
m46_36 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28"];
m46_63 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37"];
m46_77 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184"];
m46_91 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="StateMachine.cs", label="return new JobFilterInfo(_getFiltersThunk(job));", span="186-186"];
m46_92 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.Job)", span="184-184"];
m46_37 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="StateMachine.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m46_94 [cluster="System.Func<T, TResult>.Invoke(T)", file="StateMachine.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m46_23 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52"];
m46_24 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="job == null", span="57-57"];
m46_26 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="parameters == null", span="58-58"];
m46_28 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="state == null", span="59-59"];
m46_30 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="var jobId = _connection.CreateExpiredJob(\r\n                job,\r\n                parameters,\r\n                TimeSpan.FromHours(1))", span="61-64"];
m46_31 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="var context = new StateContext(jobId, job)", span="66-66"];
m46_32 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="ChangeState(context, state, null)", span="67-67"];
m46_25 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="throw new ArgumentNullException(''job'');", span="57-57"];
m46_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="throw new ArgumentNullException(''parameters'');", span="58-58"];
m46_29 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="59-59"];
m46_33 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="return jobId;", span="69-69"];
m46_34 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52"];
m46_65 [cluster="HangFire.Storage.JobData.EnsureLoaded()", file="StateMachine.cs", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
m46_39 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72"];
m46_40 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="jobId == null", span="75-75"];
m46_42 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="toState == null", span="76-76"];
m46_44 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="fromStates == null", span="77-77"];
m46_46 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="_connection.AcquireJobLock(jobId)", span="85-85"];
m46_48 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="var jobData = _connection.GetJobData(jobId)", span="89-89"];
m46_51 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="!fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="98-98"];
m46_56 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="toState = new FailedState(ex)\r\n                    {\r\n                        Reason = String.Format(\r\n                            ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                            toState.Name, jobId)\r\n                    }", span="115-120"];
m46_58 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="var context = new StateContext(jobId, jobData.Job)", span="125-125"];
m46_41 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''jobId'');", span="75-75"];
m46_43 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''toState'');", span="76-76"];
m46_45 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''fromStates'');", span="77-77"];
m46_47 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="bool loadSucceeded", span="87-87"];
m46_49 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="jobData == null", span="91-91"];
m46_53 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="jobData.EnsureLoaded()", span="105-105"];
m46_59 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="var stateChanged = ChangeState(context, toState, jobData.State)", span="126-126"];
m46_50 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="return false;", span="95-95"];
m46_52 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="return false;", span="100-100"];
m46_54 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="loadSucceeded = true", span="106-106"];
m46_55 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label=JobLoadException, span="108-108"];
m46_57 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="loadSucceeded = false", span="122-122"];
m46_60 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="return loadSucceeded && stateChanged;", span="128-128"];
m46_61 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72"];
m46_93 [cluster="HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", file="StateMachine.cs", label="Entry HangFire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.JobFilter>)", span="40-40"];
m46_100 [cluster="HangFire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachine.cs", label="Entry HangFire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22"];
m46_62 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="StateMachine.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="36-36"];
m46_22 [cluster="HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", file="StateMachine.cs", label="Entry HangFire.Common.JobFilter.JobFilter(object, HangFire.Common.JobFilterScope, int?)", span="38-38"];
m46_19 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="49-49"];
m46_16 [cluster="lambda expression", file="StateMachine.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="49-49"];
m46_15 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="49-49"];
m46_17 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="49-49"];
m46_20 [cluster="lambda expression", file="StateMachine.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="49-49"];
m46_21 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="49-49"];
m46_84 [cluster="HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", file="StateMachine.cs", label="Entry HangFire.States.ElectStateContext.ElectStateContext(HangFire.States.StateContext, HangFire.States.State, string, HangFire.Storage.IStorageConnection)", span="27-27"];
m46_18 [cluster="Unk.Select", file="StateMachine.cs", label="Entry Unk.Select", span=""];
m46_9 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189"];
m46_95 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="var handlerCollection = new StateHandlerCollection()", span="191-191"];
m46_96 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label=handlers, span="192-192"];
m46_97 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="handlerCollection.AddHandler(handler)", span="194-194"];
m46_98 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="return handlerCollection;", span="197-197"];
m46_99 [cluster="HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.GetHandlerCollection(System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>)", span="189-189"];
m46_85 [cluster="HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", file="StateMachine.cs", label="Entry HangFire.States.ElectStateContext.ElectState(System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>)", span="69-69"];
m46_80 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachine.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m46_102 [file="StateMachine.cs", label="HangFire.States.StateMachine", span=""];
m46_103 [file="StateMachine.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m47_35 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="StateMachineFacts.cs", label="ThenTheServerShouldBeRemoved(ServerSteps.DefaultServerName)", span="72-72"];
m47_31 [cluster="Unk.SetContainsItem", file="StateMachineFacts.cs", label="Entry Unk.SetContainsItem", span=""];
m47_4 [cluster="Unk.Parse", file="StateMachineFacts.cs", label="Entry Unk.Parse", span=""];
m47_5 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", color=green, community=0, file="StateMachineFacts.cs", label="0: Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", span="19-19"];
m47_6 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", file="StateMachineFacts.cs", label="var factory = CreateFactory()", span="21-21"];
m47_0 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", span="12-12"];
m47_1 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="StateMachineFacts.cs", label="_crontabSchedule = CrontabSchedule.Parse(''* * * * *'')", span="14-14"];
m47_2 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="StateMachineFacts.cs", label="_timeZone = TimeZoneInfo.Utc", span="15-15"];
m47_12 [cluster="string.Format(string, object)", file="StateMachineFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m47_32 [cluster="Unk.True", file="StateMachineFacts.cs", label="Entry Unk.True", span=""];
m47_7 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="StateMachineFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26"];
m47_8 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="StateMachineFacts.cs", label="Redis.Client.AddItemToSet(''hangfire:servers'', name)", span="28-28"];
m47_9 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=green, community=0, file="StateMachineFacts.cs", label="0: Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', name),\r\n                ''StartedAt'',\r\n                JobHelper.ToStringTimestamp(startedAt))", span="29-32"];
m47_14 [cluster="lambda expression", file="StateMachineFacts.cs", label="factory.GetInstant(null, _timeZone)", span="24-24"];
m47_11 [cluster="Unk.>", file="StateMachineFacts.cs", label="Entry Unk.>", span=""];
m47_13 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="24-24"];
m47_3 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="StateMachineFacts.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m47_37 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="StateMachineFacts.cs", label=factory, span=""];
m47_38 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="StateMachineFacts.cs", label=factory, span=""];
m47_39 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="StateMachineFacts.cs", label="Assert.IsFalse(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="79-80"];
m47_40 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="StateMachineFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="76-76"];
m47_41 [cluster="Unk.IsFalse", file="StateMachineFacts.cs", label="Entry Unk.IsFalse", span=""];
m47_10 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="StateMachineFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26"];
m47_33 [cluster="Unk.ContainsKey", file="StateMachineFacts.cs", label="Entry Unk.ContainsKey", span=""];
m47_34 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="StateMachineFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="70-70"];
m47_23 [cluster="lambda expression", file="StateMachineFacts.cs", label="factory.GetInstant(_crontabSchedule, null)", span="35-35"];
m47_20 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="StateMachineFacts.cs", label="Assert.Equal(''timeZone'', exception.ParamName)", span="37-37"];
m47_21 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", span="30-30"];
m47_22 [cluster="lambda expression", file="StateMachineFacts.cs", label="Entry lambda expression", span="35-35"];
m47_36 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="StateMachineFacts.cs", label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", span=""];
m47_15 [cluster="lambda expression", file="StateMachineFacts.cs", label="Exit lambda expression", span="24-24"];
m47_16 [cluster="Unk.GetInstant", file="StateMachineFacts.cs", label="Entry Unk.GetInstant", span=""];
m47_17 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="StateMachineFacts.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", span="30-30"];
m47_18 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", color=red, community=0, file="StateMachineFacts.cs", label="0: var factory = CreateFactory()", span="32-32"];
m47_19 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="StateMachineFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => factory.GetInstant(_crontabSchedule, null))", span="34-35"];
m47_27 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="StateMachineFacts.cs", label="var instant = factory.GetInstant(_crontabSchedule, _timeZone)", span="45-45"];
m47_28 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="StateMachineFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-2) < instant.NowInstant)", span="47-47"];
m47_29 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="StateMachineFacts.cs", label="Assert.True(instant.NowInstant < DateTime.UtcNow.AddMinutes(2))", span="48-48"];
m47_30 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="StateMachineFacts.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", span="41-41"];
m47_24 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="StateMachineFacts.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56"];
m47_25 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="StateMachineFacts.cs", label="ThenTheServerShouldNotBeRemoved(ServerSteps.DefaultServerName)", span="58-58"];
m47_26 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="StateMachineFacts.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56"];
m47_42 [file="StateMachineFacts.cs", label="HangFire.Tests.ServerWatchdogSteps", span=""];
m48_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m48_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m48_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="56-56"];
m48_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54"];
m48_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m48_3 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44"];
m48_4 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49"];
m48_5 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44"];
m48_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35"];
m48_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m48_1 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="SucceededAt = DateTime.UtcNow", span="29-29"];
m48_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27"];
m48_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m48_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59"];
m48_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="61-61"];
m48_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="59-59"];
m48_16 [file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m49_6 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17"];
m49_7 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="var state = new SucceededState()", span="19-19"];
m49_8 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="var data = state.SerializeData()", span="21-21"];
m49_9 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.SucceededAt), data[''SucceededAt''])", span="23-23"];
m49_10 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="17-17"];
m49_17 [cluster="Unk.True", file="SucceededStateFacts.cs", label="Entry Unk.True", span=""];
m49_5 [cluster="Unk.Equal", file="SucceededStateFacts.cs", label="Entry Unk.Equal", span=""];
m49_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10"];
m49_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="var state = new SucceededState()", span="12-12"];
m49_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", span="13-13"];
m49_3 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="10-10"];
m49_11 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44"];
m49_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27"];
m49_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs", label="var state = new SucceededState()", span="29-29"];
m49_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", color=red, community=0, file="SucceededStateFacts.cs", label="1: Assert.True(state.ExpireJobOnApply)", span="30-30"];
m49_16 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.ShouldExpireJobOnApply()", span="27-27"];
m49_4 [cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m49_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m50_23 [cluster="HangFire.Server.Worker.ToString()", file="Worker.cs", label="Entry HangFire.Server.Worker.ToString()", span="72-72"];
m50_24 [cluster="HangFire.Server.Worker.ToString()", file="Worker.cs", label="return ''Worker #'' + _context.WorkerNumber;", span="74-74"];
m50_25 [cluster="HangFire.Server.Worker.ToString()", file="Worker.cs", label="Exit HangFire.Server.Worker.ToString()", span="72-72"];
m50_0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30"];
m50_1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="0: storage == null", span="36-36"];
m50_3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="context == null", span="37-37"];
m50_5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="0: process == null", span="38-38"];
m50_7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="1: stateMachineFactory == null", span="39-39"];
m50_9 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="0: _storage = storage", span="41-41"];
m50_10 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="_context = context", span="42-42"];
m50_11 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="0: _process = process", span="43-43"];
m50_12 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="1: _stateMachineFactory = stateMachineFactory", span="44-44"];
m50_2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="1: throw new ArgumentNullException(''storage'');", span="36-36"];
m50_4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="37-37"];
m50_6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="1: throw new ArgumentNullException(''process'');", span="38-38"];
m50_8 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", color=red, community=0, file="Worker.cs", label="1: throw new ArgumentNullException(''stateMachineFactory'');", span="39-39"];
m50_13 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext, HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="30-30"];
m50_44 [cluster="HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="Worker.cs", label="Entry HangFire.States.IStateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="24-24"];
m50_22 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="77-77"];
m50_26 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs", label="1: var stateMachine = _stateMachineFactory.Create(connection)", span="82-82"];
m50_28 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="!stateMachine.TryToChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="85-88"];
m50_31 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var jobData = connection.GetJobData(jobId)", span="102-102"];
m50_33 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="105-105"];
m50_34 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="process.Run(performContext, jobData.Job)", span="107-107"];
m50_40 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="128-128"];
m50_27 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs", label="0: var processingState = new ProcessingState(_context.ServerName)", span="83-83"];
m50_29 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="return;", span="90-90"];
m50_30 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="Worker.cs", label="0: State state", span="98-98"];
m50_32 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="jobData.EnsureLoaded()", span="103-103"];
m50_35 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new SucceededState()", span="109-109"];
m50_36 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=JobPerformanceException, span="111-111"];
m50_38 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label=Exception, span="118-118"];
m50_37 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="113-116"];
m50_39 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="120-123"];
m50_41 [cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="Worker.cs", label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="77-77"];
m50_42 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="Worker.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m50_50 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m50_21 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30"];
m50_47 [cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="Worker.cs", label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35"];
m50_46 [cluster="HangFire.Storage.JobData.EnsureLoaded()", file="Worker.cs", label="Entry HangFire.Storage.JobData.EnsureLoaded()", span="27-27"];
m50_15 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47"];
m50_16 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs", label="0: var connection = _storage.GetConnection()", span="49-49"];
m50_17 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs", label="1: var nextJob = connection.FetchNextJob(_context.QueueNames, cancellationToken)", span="51-51"];
m50_18 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs", label="1: ProcessJob(nextJob.JobId, connection, _process)", span="55-55"];
m50_19 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs", label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47"];
m50_48 [cluster="HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", file="Worker.cs", label="Entry HangFire.Server.IJobPerformanceProcess.Run(HangFire.Server.PerformContext, HangFire.Server.IJobPerformer)", span="20-20"];
m50_45 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="37-37"];
m50_43 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m50_49 [cluster="HangFire.States.SucceededState.SucceededState()", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m50_20 [cluster="HangFire.JobStorage.GetConnection()", file="Worker.cs", label="Entry HangFire.JobStorage.GetConnection()", span="55-55"];
m50_51 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
m51_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="WorkerContext.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m51_49 [cluster="int.ToString(System.IFormatProvider)", file="WorkerContext.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m51_39 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="WorkerContext.cs", label=string, span=""];
m51_37 [cluster="string.Format(string, object)", file="WorkerContext.cs", label=string, span=""];
m51_28 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="transaction.Dispose()", span="83-83"];
m51_29 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="_storage.ReleaseConnection(connection)", span="84-84"];
m51_30 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="86-86"];
m51_36 [cluster="Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", file="WorkerContext.cs", label="System.TimeSpan", span=""];
m51_21 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="fetchedJob = connection.Query<FetchedJob>(\r\n                               fetchJobSqlTemplate,\r\n                               new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds },\r\n                               transaction)\r\n                               .SingleOrDefault()", span="67-71"];
m51_22 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label=SqlException, span="73-73"];
m51_23 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="transaction.Dispose()", span="75-75"];
m51_41 [cluster="System.TimeSpan.Negate()", file="WorkerContext.cs", label=string, span=""];
m51_42 [cluster="Unk.>", file="WorkerContext.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m51_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="WorkerContext.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m51_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="WorkerContext.cs", label="1: transaction == null", span="14-14"];
m51_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="WorkerContext.cs", label="1: _transaction = transaction", span="16-16"];
m51_5 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="WorkerContext.cs", label="_storage = storage", span="38-38"];
m51_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="WorkerContext.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m51_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="WorkerContext.cs", label="1: throw new ArgumentNullException(''transaction'');", span="14-14"];
m51_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="WorkerContext.cs", label="1: Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m51_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", color=green, community=0, file="WorkerContext.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="21-23"];
m51_48 [cluster="SqlServerFetchedJob.cstr", file="WorkerContext.cs", label="Entry SqlServerFetchedJob.cstr", span=""];
m51_9 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m51_45 [cluster="Unk.ReleaseConnection", file="WorkerContext.cs", label="Entry Unk.ReleaseConnection", span=""];
m51_46 [cluster="Unk.Rollback", file="WorkerContext.cs", label="Entry Unk.Rollback", span=""];
m51_50 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="WorkerContext.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", span="99-99"];
m51_51 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="WorkerContext.cs", label="string enqueueJobSql = string.Format(@''\r\ninsert into [{0}].JobQueue (JobId, Queue) values (@jobId, @queue)'', _storage.GetSchemaName())", span="101-102"];
m51_52 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="WorkerContext.cs", label="connection.Execute(enqueueJobSql, new { jobId = jobId, queue = queue })", span="104-104"];
m51_53 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="WorkerContext.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", span="99-99"];
m51_38 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="WorkerContext.cs", label=string, span=""];
m51_13 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="46-46"];
m51_15 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="SqlConnection connection = null", span="49-49"];
m51_16 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="WorkerContext.cs", label="1: SqlTransaction transaction = null", span="50-50"];
m51_17 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="string fetchJobSqlTemplate = string.Format(@''\r\ndelete top (1) from [{0}].JobQueue with (readpast, updlock, rowlock)\r\noutput DELETED.Id, DELETED.JobId, DELETED.Queue\r\nwhere (FetchedAt is null or FetchedAt < DATEADD(second, @timeout, GETUTCDATE()))\r\nand Queue in @queues'', _storage.GetSchemaName())", span="52-56"];
m51_44 [cluster="Unk.Dispose", file="WorkerContext.cs", label="Entry Unk.Dispose", span=""];
m51_31 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="87-87"];
m51_10 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="queues == null", span="45-45"];
m51_11 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="WorkerContext.cs", label="1: throw new ArgumentNullException(''queues'');", span="45-45"];
m51_12 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="queues.Length == 0", span="46-46"];
m51_18 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m51_19 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=green, community=0, file="WorkerContext.cs", label="1: connection = _storage.CreateAndOpenConnection()", span="62-62"];
m51_20 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted)", span="63-63"];
m51_25 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="throw;", span="77-77"];
m51_32 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="fetchedJob == null", span="89-89"];
m51_24 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="_storage.ReleaseConnection(connection)", span="76-76"];
m51_26 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="fetchedJob == null", span="80-80"];
m51_33 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="return new SqlServerFetchedJob(\r\n                _storage,\r\n                connection,\r\n                transaction,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="91-96"];
m51_40 [cluster="Unk.BeginTransaction", file="WorkerContext.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m51_27 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="transaction.Rollback()", span="82-82"];
m51_35 [cluster="System.ArgumentException.ArgumentException(string, string)", file="WorkerContext.cs", label=string, span=""];
m51_47 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="WorkerContext.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m51_14 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="FetchedJob fetchedJob = null", span="48-48"];
m51_54 [cluster="Unk.Execute", file="WorkerContext.cs", label="Entry Unk.Execute", span=""];
m51_43 [cluster="Unk.SingleOrDefault", file="WorkerContext.cs", label="Entry Unk.SingleOrDefault", span=""];
m51_34 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="WorkerContext.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", span=""];
m51_55 [file="WorkerContext.cs", label="Hangfire.SqlServer.SqlServerJobQueue", span=""];
m52_7 [cluster="Unk.>", file="WorkerContextFacts.cs", label="Entry Unk.>", span=""];
m52_3 [cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11"];
m52_11 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerContextFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m52_0 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11"];
m52_1 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", color=green, community=0, file="WorkerContextFacts.cs", label="1: _sharedContext = new SharedWorkerContextMock()", span="13-13"];
m52_2 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="WorkerContextFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11"];
m52_24 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContextFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22"];
m52_4 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17"];
m52_5 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", color=green, community=1, file="WorkerContextFacts.cs", label="0: Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null, WorkerNumber))", span="19-20"];
m52_6 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="WorkerContextFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17"];
m52_17 [cluster="Unk.Equal", file="WorkerContextFacts.cs", label="Entry Unk.Equal", span=""];
m52_16 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47"];
m52_30 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", color=green, community=0, file="WorkerContextFacts.cs", label="0: return new WorkerContext(_sharedContext.Object, WorkerNumber);", span="49-49"];
m52_31 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="WorkerContextFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47"];
m52_12 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24"];
m52_13 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", color=red, community=0, file="WorkerContextFacts.cs", label="0: var context = CreateContext()", span="26-26"];
m52_14 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="28-28"];
m52_15 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="WorkerContextFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24"];
m52_18 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="32-32"];
m52_19 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="WorkerContextFacts.cs", label="1: Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null))", span="34-35"];
m52_20 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="WorkerContextFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="32-32"];
m52_25 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="39-39"];
m52_26 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="var context = CreateContext()", span="41-41"];
m52_27 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="var contextCopy = new WorkerContext(context)", span="42-42"];
m52_28 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="44-44"];
m52_29 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="WorkerContextFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="39-39"];
m52_21 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="35-35"];
m52_8 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="20-20"];
m52_9 [cluster="lambda expression", color=green, community=0, file="WorkerContextFacts.cs", label="0: new WorkerContext(null, WorkerNumber)", span="20-20"];
m52_10 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="20-20"];
m52_22 [cluster="lambda expression", color=red, community=0, file="WorkerContextFacts.cs", label="1: new WorkerContext(null)", span="35-35"];
m52_23 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="35-35"];
m52_32 [file="WorkerContextFacts.cs", label="HangFire.Core.Tests.Server.WorkerContextFacts", span=""];
m54_219 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267"];
m54_220 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="270-271"];
m54_221 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="273-273"];
m54_222 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="276-276"];
m54_223 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="279-282"];
m54_224 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267"];
m54_16 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="WorkerFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m54_23 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m54_62 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71"];
m54_63 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=1, file="WorkerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, null, _process.Object, _stateMachineFactory.Object))", span="73-74"];
m54_64 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="WorkerFacts.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="76-76"];
m54_65 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71"];
m54_111 [cluster="Unk.DeleteJobFromQueue", file="WorkerFacts.cs", label="Entry Unk.DeleteJobFromQueue", span=""];
m54_57 [cluster="Unk.Equal", file="WorkerFacts.cs", label="Entry Unk.Equal", span=""];
m54_90 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="WorkerFacts.cs", label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47"];
m54_27 [cluster="System.Threading.CancellationToken.CancellationToken()", file="WorkerFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m54_112 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123"];
m54_113 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="126-130"];
m54_114 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="132-133"];
m54_115 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="135-139"];
m54_116 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="141-141"];
m54_117 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="144-144"];
m54_118 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123"];
m54_225 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="WorkerFacts.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m54_126 [cluster="Unk.Run", file="WorkerFacts.cs", label="Entry Unk.Run", span=""];
m54_183 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225"];
m54_184 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="228-228"];
m54_185 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="229-231"];
m54_188 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="239-242"];
m54_186 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="233-233"];
m54_187 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="236-236"];
m54_189 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225"];
m54_190 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m54_209 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs", label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m54_22 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="WorkerFacts.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m54_35 [cluster="Unk.>", file="WorkerFacts.cs", label="Entry Unk.>", span=""];
m54_52 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290"];
m54_234 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290"];
m54_172 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212"];
m54_173 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="214-214"];
m54_174 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="216-216"];
m54_175 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="218-221"];
m54_176 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212"];
m54_31 [cluster="Unk.GetConnection", file="WorkerFacts.cs", label="Entry Unk.GetConnection", span=""];
m54_18 [cluster="Mock<JobStorage>.cstr", file="WorkerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m54_119 [cluster="Unk.InSequence", file="WorkerFacts.cs", label="Entry Unk.InSequence", span=""];
m54_202 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246"];
m54_203 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="249-249"];
m54_204 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="250-252"];
m54_207 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="260-263"];
m54_205 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="254-254"];
m54_206 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="257-257"];
m54_208 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246"];
m54_141 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163"];
m54_142 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="165-165"];
m54_143 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="167-167"];
m54_144 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="169-174"];
m54_145 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163"];
m54_0 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24"];
m54_1 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="1: _queues = new[] { ''default'' }", span="26-26"];
m54_2 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="0: _context = new WorkerContext(''server'', _queues, 1)", span="27-27"];
m54_3 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="1: _process = new Mock<IJobPerformanceProcess>()", span="28-28"];
m54_4 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="0: _storage = new Mock<JobStorage>()", span="30-30"];
m54_5 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m54_6 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33"];
m54_7 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_processingJob = new ProcessingJob(''my-job'', ''my-queue'')", span="35-35"];
m54_8 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=1, file="WorkerFacts.cs", label="0: _connection.Setup(x => x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob)", span="37-38"];
m54_9 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="0: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="40-40"];
m54_10 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="41-41"];
m54_11 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=1, file="WorkerFacts.cs", label="0: _stateMachineFactory.Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="43-44"];
m54_12 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="1: _stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="46-49"];
m54_13 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=1, file="WorkerFacts.cs", label="0: _connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="51-55"];
m54_14 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_token = new CancellationToken()", span="58-58"];
m54_15 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24"];
m54_20 [cluster="Unk.Setup", file="WorkerFacts.cs", label="Entry Unk.Setup", span=""];
m54_98 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m54_152 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178"];
m54_153 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="181-186"];
m54_154 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="188-188"];
m54_155 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="191-191"];
m54_156 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="194-196"];
m54_157 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178"];
m54_36 [cluster="Unk.FetchNextJob", file="WorkerFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m54_83 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98"];
m54_84 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="100-100"];
m54_85 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="102-102"];
m54_86 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="104-104"];
m54_87 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="105-105"];
m54_88 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98"];
m54_191 [cluster="Unk.Throws", file="WorkerFacts.cs", label="Entry Unk.Throws", span=""];
m54_44 [cluster="Unk.TryToChangeState", file="WorkerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m54_229 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="279-282"];
m54_28 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="33-33"];
m54_32 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="37-37"];
m54_37 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="43-43"];
m54_41 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="46-49"];
m54_45 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="51-51"];
m54_49 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="54-54"];
m54_29 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="33-33"];
m54_30 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="33-33"];
m54_33 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="1: x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>())", span="37-37"];
m54_34 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="37-37"];
m54_38 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Create(_connection.Object)", span="43-43"];
m54_39 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="43-43"];
m54_42 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())", span="46-49"];
m54_43 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="46-49"];
m54_46 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="1: x.GetJobData(_processingJob.JobId)", span="51-51"];
m54_47 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="51-51"];
m54_50 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: Method()", span="54-54"];
m54_51 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="54-54"];
m54_58 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="65-65"];
m54_59 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="1: new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="65-65"];
m54_60 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="65-65"];
m54_66 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="74-74"];
m54_67 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="1: new Worker(_context, null, _process.Object, _stateMachineFactory.Object)", span="74-74"];
m54_68 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="74-74"];
m54_73 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="83-83"];
m54_74 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="1: new Worker(_context, _storage.Object, null, _stateMachineFactory.Object)", span="83-83"];
m54_75 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="83-83"];
m54_80 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="92-92"];
m54_81 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="1: new Worker(_context, _storage.Object, _process.Object, null)", span="92-92"];
m54_82 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="92-92"];
m54_92 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="104-104"];
m54_95 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="105-105"];
m54_93 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="104-104"];
m54_94 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="104-104"];
m54_96 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Dispose()", span="105-105"];
m54_97 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="105-105"];
m54_105 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="116-116"];
m54_108 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="119-119"];
m54_106 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.FetchNextJob(_queues, _token)", span="116-116"];
m54_107 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="116-116"];
m54_109 [cluster="lambda expression", file="WorkerFacts.cs", label="x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue)", span="119-119"];
m54_110 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="119-119"];
m54_120 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="127-128"];
m54_123 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="132-132"];
m54_127 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="136-137"];
m54_121 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="127-128"];
m54_122 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="127-128"];
m54_124 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="132-132"];
m54_125 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="132-132"];
m54_128 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="136-137"];
m54_129 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="136-137"];
m54_135 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="156-159"];
m54_136 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>())", span="156-159"];
m54_137 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="156-159"];
m54_138 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="158-158"];
m54_139 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: state.ServerName == _context.ServerName", span="158-158"];
m54_140 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="158-158"];
m54_146 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="169-174"];
m54_147 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="169-174"];
m54_148 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="169-174"];
m54_149 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="173-174"];
m54_150 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="173-174"];
m54_151 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="173-174"];
m54_158 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="182-185"];
m54_161 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="195-195"];
m54_159 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="182-185"];
m54_160 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="182-185"];
m54_162 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="195-195"];
m54_163 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="195-195"];
m54_169 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="206-208"];
m54_170 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="206-208"];
m54_171 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="206-208"];
m54_177 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="218-221"];
m54_178 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="218-221"];
m54_179 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="218-221"];
m54_180 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="221-221"];
m54_181 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="221-221"];
m54_182 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="221-221"];
m54_196 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="239-242"];
m54_199 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="241-241"];
m54_192 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="230-230"];
m54_195 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="239-242"];
m54_193 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="230-230"];
m54_194 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="230-230"];
m54_197 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="239-242"];
m54_198 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="241-241"];
m54_200 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="241-241"];
m54_214 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="260-263"];
m54_217 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="262-262"];
m54_210 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="251-251"];
m54_213 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="260-263"];
m54_211 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251"];
m54_212 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="251-251"];
m54_215 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="260-263"];
m54_216 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="262-262"];
m54_218 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="262-262"];
m54_226 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="270-270"];
m54_227 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(_processingJob.JobId)", span="270-270"];
m54_228 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="270-270"];
m54_230 [cluster="lambda expression", file="WorkerFacts.cs", label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="279-282"];
m54_231 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="279-282"];
m54_61 [cluster="Worker.cstr", file="WorkerFacts.cs", label="Entry Worker.cstr", span=""];
m54_130 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150"];
m54_131 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="152-152"];
m54_132 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="154-154"];
m54_133 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", color=red, community=0, file="WorkerFacts.cs", label="0: _stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>()))", span="156-159"];
m54_134 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150"];
m54_99 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109"];
m54_100 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="111-111"];
m54_101 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="113-113"];
m54_102 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", color=red, community=0, file="WorkerFacts.cs", label="1: _connection.Verify(\r\n                x => x.FetchNextJob(_queues, _token),\r\n                Times.Once)", span="115-117"];
m54_103 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="_connection.Verify(x => x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue))", span="119-119"];
m54_104 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109"];
m54_76 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89"];
m54_77 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=1, file="WorkerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, _process.Object, null))", span="91-92"];
m54_78 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="WorkerFacts.cs", label="0: Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="94-94"];
m54_79 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89"];
m54_89 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285"];
m54_232 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", color=red, community=0, file="WorkerFacts.cs", label="1: return new Worker(_context, _storage.Object, _process.Object, _stateMachineFactory.Object);", span="287-287"];
m54_233 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285"];
m54_91 [cluster="Unk.Verify", file="WorkerFacts.cs", label="Entry Unk.Verify", span=""];
m54_201 [cluster="Unk.Contains", file="WorkerFacts.cs", label="Entry Unk.Contains", span=""];
m54_69 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80"];
m54_70 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", color=red, community=1, file="WorkerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, null, _stateMachineFactory.Object))", span="82-83"];
m54_71 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", color=red, community=0, file="WorkerFacts.cs", label="0: Assert.Equal(''process'', exception.ParamName)", span="85-85"];
m54_72 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80"];
m54_53 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62"];
m54_54 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=red, community=0, file="WorkerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object))", span="64-65"];
m54_55 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="67-67"];
m54_56 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62"];
m54_25 [cluster="HangFire.Storage.JobData.JobData()", file="WorkerFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m54_24 [cluster="Mock<IStateMachine>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m54_26 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m54_40 [cluster="Unk.Create", file="WorkerFacts.cs", label="Entry Unk.Create", span=""];
m54_21 [cluster="Unk.Returns", file="WorkerFacts.cs", label="Entry Unk.Returns", span=""];
m54_19 [cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m54_48 [cluster="Unk.GetJobData", file="WorkerFacts.cs", label="Entry Unk.GetJobData", span=""];
m54_17 [cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerFacts.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m54_164 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200"];
m54_165 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="202-202"];
m54_166 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="worker.Execute(_token)", span="204-204"];
m54_167 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="206-208"];
m54_168 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200"];
m54_235 [file="WorkerFacts.cs", label="HangFire.Core.Tests.Server.WorkerFacts", span=""];
m54_236 [file="WorkerFacts.cs", label=exception, span=""];
m54_237 [file="WorkerFacts.cs", label=exception, span=""];
m55_27 [cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44"];
m55_15 [cluster="System.Collections.Generic.List<T>.List(int)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m55_24 [cluster="HangFire.Server.WorkerManager.Stop()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Stop()", span="51-51"];
m55_25 [cluster="HangFire.Server.WorkerManager.Stop()", file="WorkerManager.cs", label="_workerRunners.Stop()", span="53-53"];
m55_26 [cluster="HangFire.Server.WorkerManager.Stop()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Stop()", span="51-51"];
m55_16 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m55_14 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="WorkerManager.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m55_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m55_28 [cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Dispose()", span="56-56"];
m55_29 [cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs", label="_workerRunners.Dispose()", span="58-58"];
m55_30 [cluster="HangFire.Server.WorkerManager.Dispose()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Dispose()", span="56-56"];
m55_23 [cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36"];
m55_17 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="61-61"];
m55_32 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", color=green, community=0, file="WorkerManager.cs", label="1: return new ServerComponentRunner(new Worker(context));", span="63-63"];
m55_33 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="61-61"];
m55_31 [cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52"];
m55_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="WorkerManager.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m55_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="WorkerManager.cs", label="0: Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m55_2 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs", label="1: throw new ArgumentNullException(''sharedContext'');", span="30-30"];
m55_3 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs", label="0: workerCount <= 0", span="32-32"];
m55_4 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs", label="1: throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="32-32"];
m55_5 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="var workerRunners = new List<IServerComponentRunner>(workerCount)", span="34-34"];
m55_8 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", color=green, community=0, file="WorkerManager.cs", label="0: var workerContext = new WorkerContext(sharedContext, i)", span="37-37"];
m55_7 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="i <= workerCount", span="35-35"];
m55_6 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="var i = 1", span="35-35"];
m55_9 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="workerRunners.Add(CreateWorkerRunner(workerContext))", span="40-40"];
m55_11 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="_workerRunners = new ServerComponentRunnerCollection(workerRunners)", span="43-43"];
m55_10 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="i++", span="35-35"];
m55_12 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="28-28"];
m55_34 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m55_35 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="WorkerManager.cs", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27"];
m55_20 [cluster="HangFire.Server.WorkerManager.Start()", file="WorkerManager.cs", label="Entry HangFire.Server.WorkerManager.Start()", span="46-46"];
m55_21 [cluster="HangFire.Server.WorkerManager.Start()", file="WorkerManager.cs", label="_workerRunners.Start()", span="48-48"];
m55_22 [cluster="HangFire.Server.WorkerManager.Start()", file="WorkerManager.cs", label="Exit HangFire.Server.WorkerManager.Start()", span="46-46"];
m55_19 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="WorkerManager.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m55_36 [file="WorkerManager.cs", label="HangFire.Server.WorkerManager", span=""];
m56_3 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=red, community=0, file="WorkerManagerFacts.cs", label="0: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="24-24"];
m56_4 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="WorkerManagerFacts.cs", label="0: _workerRunners = new[]\r\n            {\r\n                new Mock<IServerComponentRunner>(), \r\n                new Mock<IServerComponentRunner>()\r\n            }", span="26-30"];
m56_5 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=red, community=0, file="WorkerManagerFacts.cs", label="1: _manager = new Mock<WorkerManager>(\r\n                ServerId, WorkerCount, Queues, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="32-33"];
m56_39 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="60-60"];
m56_48 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=0, file="WorkerManagerFacts.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="76-76"];
m56_47 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=red, community=1, file="WorkerManagerFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(\r\n                    ServerId, WorkerCount, Queues, null, _process.Object, _stateMachineFactory.Object))", span="72-74"];
m56_49 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="70-70"];
m56_50 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="73-74"];
m56_51 [cluster="lambda expression", color=red, community=1, file="WorkerManagerFacts.cs", label="1: new WorkerManager(\r\n                    ServerId, WorkerCount, Queues, null, _process.Object, _stateMachineFactory.Object)", span="73-74"];
m56_42 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="60-60"];
m56_46 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="70-70"];
m56_40 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", color=red, community=1, file="WorkerManagerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(\r\n                    ServerId, WorkerCount, null, _storage.Object, _process.Object, _stateMachineFactory.Object))", span="62-64"];
m56_52 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="73-74"];
m56_41 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", color=red, community=0, file="WorkerManagerFacts.cs", label="1: Assert.Equal(''queues'', exception.ParamName)", span="66-66"];
m56_43 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="63-64"];
m56_44 [cluster="lambda expression", color=red, community=1, file="WorkerManagerFacts.cs", label="0: new WorkerManager(\r\n                    ServerId, WorkerCount, null, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="63-64"];
m56_45 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="63-64"];
m56_53 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80"];
m56_102 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Dispose()", span="132-132"];
m56_105 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", span="130-130"];
m56_103 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Dispose())", span="134-134"];
m56_106 [cluster="Unk.Dispose", file="WorkerManagerFacts.cs", label="Entry Unk.Dispose", span=""];
m56_108 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Dispose()", span="134-134"];
m56_111 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Dispose()", span="135-135"];
m56_104 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Dispose_CallsDisposeMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Dispose())", span="135-135"];
m56_107 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="134-134"];
m56_109 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="134-134"];
m56_110 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="135-135"];
m56_112 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="135-135"];
m56_94 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="WorkerManagerFacts.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = storedData.ContainsKey(''State'') ? storedData[''State''] : null,\r\n                CreatedAt = JobHelper.FromNullableStringTimestamp(createdAt) ?? DateTime.MinValue,\r\n                LoadException = loadException\r\n            };", span="195-201"];
m56_114 [cluster="Dictionary<string, string>.cstr", file="WorkerManagerFacts.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m56_193 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m56_194 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330"];
m56_197 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var pipeline = Redis.CreatePipeline()", span="335-335"];
m56_206 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="RemoveServer(Redis, heartbeat.Key)", span="363-363"];
m56_195 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331"];
m56_198 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label=serverNames, span="337-337"];
m56_196 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var utcNow = DateTime.UtcNow", span="333-333"];
m56_200 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="341-349"];
m56_201 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="pipeline.Flush()", span="352-352"];
m56_205 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="utcNow > maxTime.Add(timeOut)", span="361-361"];
m56_204 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359"];
m56_207 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="removedServerCount++", span="364-364"];
m56_203 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label=heartbeats, span="356-356"];
m56_199 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var name = serverName", span="339-339"];
m56_202 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="var removedServerCount = 0", span="355-355"];
m56_208 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="return removedServerCount;", span="368-368"];
m56_209 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m56_101 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m56_30 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="43-44"];
m56_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m56_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", color=green, community=0, file="WorkerManagerFacts.cs", label="0: Redis = redis", span="34-34"];
m56_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", color=red, community=0, file="WorkerManagerFacts.cs", label="1: Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m56_6 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="WorkerManagerFacts.cs", label="_manager.Setup(x => x.CreateWorkerRunner(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerRunners[context.WorkerNumber - 1].Object)", span="35-36"];
m56_7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m56_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="WorkerManagerFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m56_33 [cluster="Unk.SetEntryInHash", color=red, community=0, file="WorkerManagerFacts.cs", label="0: Entry Unk.SetEntryInHash", span=""];
m56_34 [cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30"];
m56_35 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m56_55 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", color=red, community=0, file="WorkerManagerFacts.cs", label="1: Assert.Equal(''performanceProcess'', exception.ParamName)", span="86-86"];
m56_69 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", color=red, community=0, file="WorkerManagerFacts.cs", label="1: var context = new WorkerContext(ServerId, Queues, 1)", span="104-104"];
m56_70 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="var worker = manager.CreateWorkerRunner(context)", span="106-106"];
m56_71 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Assert.NotNull(worker)", span="108-108"];
m56_78 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Start())", span="116-116"];
m56_79 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Start())", span="117-117"];
m56_80 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", span="112-112"];
m56_81 [cluster="Unk.Start", file="WorkerManagerFacts.cs", label="Entry Unk.Start", span=""];
m56_82 [cluster="Unk.Verify", file="WorkerManagerFacts.cs", label="Entry Unk.Verify", span=""];
m56_83 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="116-116"];
m56_84 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Start()", span="116-116"];
m56_85 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="116-116"];
m56_86 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="117-117"];
m56_87 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Start()", span="117-117"];
m56_72 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="100-100"];
m56_73 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m56_77 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Start()", span="114-114"];
m56_90 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_manager.Object.Stop()", span="123-123"];
m56_88 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="117-117"];
m56_91 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[0].Verify(x => x.Stop())", span="125-125"];
m56_93 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", span="121-121"];
m56_74 [cluster="HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", file="WorkerManagerFacts.cs", label="Entry HangFire.Server.WorkerManager.CreateWorkerRunner(HangFire.Server.WorkerContext)", span="78-78"];
m56_76 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Start_CallsStartMethodOnAllWorkers()", span="112-112"];
m56_75 [cluster="Unk.NotNull", file="WorkerManagerFacts.cs", label="Entry Unk.NotNull", span=""];
m56_89 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", span="121-121"];
m56_92 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Stop_CallsStopMethodOnAllWorkers()", file="WorkerManagerFacts.cs", label="_workerRunners[1].Verify(x => x.Stop())", span="126-126"];
m56_95 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="125-125"];
m56_145 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m56_148 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="WorkerManagerFacts.cs", label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267"];
m56_146 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="WorkerManagerFacts.cs", label="key == null", span="265-265"];
m56_149 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="WorkerManagerFacts.cs", label="return result.Count != 0 ? result : null;", span="269-269"];
m56_147 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''key'');", span="265-265"];
m56_150 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m56_211 [cluster="Unk.CreatePipeline", file="WorkerManagerFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m56_54 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", color=red, community=1, file="WorkerManagerFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(\r\n                    ServerId, WorkerCount, Queues, _storage.Object, null, _stateMachineFactory.Object))", span="82-84"];
m56_123 [cluster="Unk.GetValueFromHash", file="WorkerManagerFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m56_31 [cluster="Unk.PopAndPushItemBetweenLists", file="WorkerManagerFacts.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m56_100 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="126-126"];
m56_99 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.Stop()", span="126-126"];
m56_132 [cluster="HashSet<string>.cstr", file="WorkerManagerFacts.cs", label="Entry HashSet<string>.cstr", span=""];
m56_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="WorkerManagerFacts.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46"];
m56_38 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="53-54"];
m56_97 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="125-125"];
m56_36 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="53-54"];
m56_37 [cluster="lambda expression", color=red, community=0, file="WorkerManagerFacts.cs", label="0: new WorkerManager(\r\n                    ServerId, 0, Queues, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="53-54"];
m56_226 [cluster="Unk.FromNullableStringTimestamp", file="WorkerManagerFacts.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m56_131 [cluster="Unk.GetAllItemsFromSortedSet", file="WorkerManagerFacts.cs", label="Entry Unk.GetAllItemsFromSortedSet", span=""];
m56_190 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m56_191 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="WorkerManagerFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="322-325"];
m56_192 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m56_189 [cluster="Unk.RemoveEntry", file="WorkerManagerFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m56_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75"];
m56_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=1, file="WorkerManagerFacts.cs", label="0: jobId == null", span="78-78"];
m56_25 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=red, community=0, file="WorkerManagerFacts.cs", label="0: Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="95-98"];
m56_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104"];
m56_120 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m56_121 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="WorkerManagerFacts.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237"];
m56_122 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m56_68 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", color=red, community=1, file="WorkerManagerFacts.cs", label="0: var manager = new WorkerManager(\r\n                ServerId, WorkerCount, Queues, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="102-103"];
m56_10 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m56_56 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="WorkerManagerFacts.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m56_185 [cluster="Unk.RemoveItemFromSet", file="WorkerManagerFacts.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m56_173 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m56_174 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="WorkerManagerFacts.cs", label="RemoveServer(Redis, serverId)", span="301-301"];
m56_175 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m56_186 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="312-314"];
m56_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="var queueIndex = 0", span="53-53"];
m56_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63"];
m56_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="57-57"];
m56_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59"];
m56_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="queueIndex == 0", span="65-65"];
m56_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70"];
m56_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="WorkerManagerFacts.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m56_29 [cluster="string.Format(string, object)", color=red, community=1, file="WorkerManagerFacts.cs", label="1: Entry string.Format(string, object)", span="0-0"];
m56_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="WorkerManagerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m56_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", color=red, community=1, file="WorkerManagerFacts.cs", label="1: Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m56_59 [cluster="Unk.QueueCommand", file="WorkerManagerFacts.cs", label="Entry Unk.QueueCommand", span=""];
m56_64 [cluster="Unk.SetRangeInHash", file="WorkerManagerFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m56_65 [cluster="lambda expression", color=red, community=1, file="WorkerManagerFacts.cs", label="1: new WorkerManager(\r\n                    ServerId, WorkerCount, Queues, _storage.Object, _process.Object, null)", span="93-94"];
m56_66 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138"];
m56_98 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m56_96 [cluster="Unk.GetAllEntriesFromHash", file="WorkerManagerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m56_62 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=0, file="WorkerManagerFacts.cs", label="1: Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="96-96"];
m56_165 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="279-285"];
m56_170 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292"];
m56_187 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314"];
m56_161 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277"];
m56_183 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310"];
m56_222 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="345-349"];
m56_216 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="342-344"];
m56_221 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Entry lambda expression", span="345-349"];
m56_188 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="312-314"];
m56_223 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="345-349"];
m56_217 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344"];
m56_218 [cluster="lambda expression", file="WorkerManagerFacts.cs", label="Exit lambda expression", span="342-344"];
m56_60 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="90-90"];
m56_219 [cluster="Unk.Format", file="WorkerManagerFacts.cs", label="Entry Unk.Format", span=""];
m56_136 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="WorkerManagerFacts.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m56_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", color=green, community=0, file="WorkerManagerFacts.cs", label="1: string queueName", span="52-52"];
m56_11 [cluster="Mock<IServerComponentRunner>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<IServerComponentRunner>.cstr", span=""];
m56_168 [cluster="int.ToString(System.IFormatProvider)", file="WorkerManagerFacts.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m56_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m56_130 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m56_163 [cluster="Unk.AddItemToSet", file="WorkerManagerFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m56_179 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="WorkerManagerFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314"];
m56_176 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m56_177 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="WorkerManagerFacts.cs", label="var transaction = redis.CreateTransaction()", span="306-306"];
m56_178 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="WorkerManagerFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310"];
m56_180 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="WorkerManagerFacts.cs", label="transaction.Commit()", span="316-316"];
m56_181 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m56_138 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m56_143 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260"];
m56_141 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="keyValuePairs == null", span="258-258"];
m56_139 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="key == null", span="257-257"];
m56_142 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258"];
m56_140 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m56_144 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m56_212 [cluster="Unk.Flush", file="WorkerManagerFacts.cs", label="Entry Unk.Flush", span=""];
m56_227 [cluster="Unk.Add", file="WorkerManagerFacts.cs", label="Entry Unk.Add", span=""];
m56_151 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m56_152 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="var transaction = Redis.CreateTransaction()", span="274-274"];
m56_153 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277"];
m56_154 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', context.WorkerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="279-285"];
m56_157 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292"];
m56_158 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="transaction.Commit()", span="295-295"];
m56_155 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="context.Queues", span="287-287"];
m56_156 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="var queue1 = queue", span="289-289"];
m56_159 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m56_67 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="WorkerManagerFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", span="100-100"];
m56_13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="string jobId", span="51-51"];
m56_172 [cluster="Unk.AddItemToList", file="WorkerManagerFacts.cs", label="Entry Unk.AddItemToList", span=""];
m56_213 [cluster="System.DateTime.DateTime(long)", file="WorkerManagerFacts.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m56_61 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", color=red, community=1, file="WorkerManagerFacts.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerManager(\r\n                    ServerId, WorkerCount, Queues, _storage.Object, _process.Object, null))", span="92-94"];
m56_63 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="WorkerManagerFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="90-90"];
m56_9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m56_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="WorkerManagerFacts.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62"];
m56_124 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m56_127 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="WorkerManagerFacts.cs", label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244"];
m56_125 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="WorkerManagerFacts.cs", label="key == null", span="242-242"];
m56_128 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="WorkerManagerFacts.cs", label="return new HashSet<string>(result);", span="245-245"];
m56_126 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="WorkerManagerFacts.cs", label="throw new ArgumentNullException(''key'');", span="242-242"];
m56_129 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m56_115 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="WorkerManagerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m56_133 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m56_134 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="WorkerManagerFacts.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252"];
m56_135 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m56_18 [cluster="Unk.>", color=green, community=0, file="WorkerManagerFacts.cs", label="1: Entry Unk.>", span=""];
m56_12 [cluster="Mock<WorkerManager>.cstr", file="WorkerManagerFacts.cs", label="Entry Mock<WorkerManager>.cstr", span=""];
m56_225 [cluster="Unk.FromStringTimestamp", file="WorkerManagerFacts.cs", label="Entry Unk.FromStringTimestamp", span=""];
m56_215 [cluster="System.DateTime.Add(System.TimeSpan)", file="WorkerManagerFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m56_116 [cluster="HangFire.Storage.StateData.StateData()", file="WorkerManagerFacts.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m56_167 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerManagerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m56_224 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="WorkerManagerFacts.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m56_214 [cluster="System.Math.Max(long, long)", file="WorkerManagerFacts.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m56_137 [cluster="Unk.FirstOrDefault", file="WorkerManagerFacts.cs", label="Entry Unk.FirstOrDefault", span=""];
m56_117 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="WorkerManagerFacts.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m56_118 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="WorkerManagerFacts.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230"];
m56_119 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="WorkerManagerFacts.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m56_210 [cluster="Unk.GetAllItemsFromSet", file="WorkerManagerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m56_220 [cluster="Unk.GetValuesFromHash", file="WorkerManagerFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m56_113 [file="WorkerManagerFacts.cs", label="HangFire.Core.Tests.Server.WorkerManagerFacts", span=""];
m56_228 [file="WorkerManagerFacts.cs", label="HangFire.Redis.RedisConnection", span=""];
m56_229 [file="WorkerManagerFacts.cs", label=jobId, span=""];
m56_231 [file="WorkerManagerFacts.cs", label="System.TimeSpan", span=""];
m56_230 [file="WorkerManagerFacts.cs", label=storedParameters, span=""];
m56_232 [file="WorkerManagerFacts.cs", label=string, span=""];
m56_233 [file="WorkerManagerFacts.cs", label="HangFire.Server.ServerContext", span=""];
m56_234 [file="WorkerManagerFacts.cs", label=queue1, span=""];
m56_235 [file="WorkerManagerFacts.cs", label=string, span=""];
m56_236 [file="WorkerManagerFacts.cs", label=name, span=""];
m56_237 [file="WorkerManagerFacts.cs", label=heartbeats, span=""];
m57_13 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m57_74 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105"];
m57_75 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="WriteTransactionFacts.cs", label="_stateData.Name = ''NotProcessing''", span="107-107"];
m57_76 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="WriteTransactionFacts.cs", label="var token = CreateToken()", span="108-108"];
m57_77 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="WriteTransactionFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="110-111"];
m57_78 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105"];
m57_18 [cluster="Unk.GetStateData", file="WriteTransactionFacts.cs", label="Entry Unk.GetStateData", span=""];
m57_37 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61"];
m57_38 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="WriteTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken()))", span="63-65"];
m57_39 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="WriteTransactionFacts.cs", label="Assert.Equal(''workerContext'', exception.ParamName)", span="67-67"];
m57_40 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61"];
m57_24 [cluster="Unk.Equal", file="WriteTransactionFacts.cs", label="Entry Unk.Equal", span=""];
m57_29 [cluster="System.Threading.CancellationToken.CancellationToken()", file="WriteTransactionFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m57_8 [cluster="Hangfire.Storage.StateData.StateData()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m57_53 [cluster="Unk.DoesNotThrow", file="WriteTransactionFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m57_23 [cluster="Unk.>", file="WriteTransactionFacts.cs", label="Entry Unk.>", span=""];
m57_82 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m57_83 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", color=green, community=0, file="WriteTransactionFacts.cs", label="0: _stateData.Data[''ServerId''] = ''AnotherServer''", span="117-117"];
m57_84 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="WriteTransactionFacts.cs", label="var token = CreateToken()", span="118-118"];
m57_85 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="WriteTransactionFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="120-121"];
m57_86 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m57_54 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m57_55 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="WriteTransactionFacts.cs", label="_shutdownToken = new CancellationToken(true)", span="88-88"];
m57_56 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="WriteTransactionFacts.cs", label="var token = CreateToken()", span="89-89"];
m57_57 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="WriteTransactionFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="91-92"];
m57_58 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m57_30 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m57_31 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="WriteTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken()))", span="53-55"];
m57_32 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="WriteTransactionFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="57-57"];
m57_33 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m57_19 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m57_20 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="WriteTransactionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken()))", span="43-45"];
m57_21 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="WriteTransactionFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="47-47"];
m57_22 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m57_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WriteTransactionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m57_63 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m57_64 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="WriteTransactionFacts.cs", label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", span="98-98"];
m57_65 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="WriteTransactionFacts.cs", label="var token = CreateToken()", span="99-99"];
m57_66 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="WriteTransactionFacts.cs", label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="101-101"];
m57_67 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m57_11 [cluster="Unk.Setup", file="WriteTransactionFacts.cs", label="Entry Unk.Setup", span=""];
m57_0 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="WriteTransactionFacts.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m57_1 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="WriteTransactionFacts.cs", label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m57_2 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="WriteTransactionFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m57_3 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="WriteTransactionFacts.cs", label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="32-32"];
m57_4 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="WriteTransactionFacts.cs", label="_workerContextMock = new WorkerContextMock { WorkerNumber = 1 }", span="34-34"];
m57_5 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="WriteTransactionFacts.cs", label="_workerContextMock.ServerId = ''Server''", span="35-35"];
m57_6 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="WriteTransactionFacts.cs", label="_shutdownToken = new CancellationToken(false)", span="37-37"];
m57_7 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m57_95 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="131-131"];
m57_26 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken())", span="44-45"];
m57_35 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken())", span="54-55"];
m57_42 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken())", span="64-65"];
m57_88 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="token.ThrowIfCancellationRequested()", span="121-121"];
m57_15 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="32-32"];
m57_25 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="44-45"];
m57_27 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="44-45"];
m57_34 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="54-55"];
m57_36 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="54-55"];
m57_41 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="64-65"];
m57_43 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="64-65"];
m57_60 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="token.ThrowIfCancellationRequested()", span="92-92"];
m57_68 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="98-98"];
m57_72 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="token.ThrowIfCancellationRequested()", span="101-101"];
m57_80 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="token.ThrowIfCancellationRequested()", span="111-111"];
m57_96 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="token.ThrowIfCancellationRequested()", span="131-131"];
m57_87 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="121-121"];
m57_89 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="121-121"];
m57_17 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="32-32"];
m57_16 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.GetStateData(JobId)", span="32-32"];
m57_69 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="x.GetStateData(It.IsAny<string>())", span="98-98"];
m57_59 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="92-92"];
m57_61 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="92-92"];
m57_70 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="98-98"];
m57_71 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="101-101"];
m57_73 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="101-101"];
m57_79 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Entry lambda expression", span="111-111"];
m57_81 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="111-111"];
m57_97 [cluster="lambda expression", file="WriteTransactionFacts.cs", label="Exit lambda expression", span="131-131"];
m57_90 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m57_91 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="WriteTransactionFacts.cs", label="_stateData.Data[''WorkerNumber''] = ''999''", span="127-127"];
m57_92 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="WriteTransactionFacts.cs", label="var token = CreateToken()", span="128-128"];
m57_93 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="WriteTransactionFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="130-131"];
m57_94 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m57_28 [cluster="ServerJobCancellationToken.cstr", file="WriteTransactionFacts.cs", label="Entry ServerJobCancellationToken.cstr", span=""];
m57_44 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m57_45 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="WriteTransactionFacts.cs", label="var token = CreateToken()", span="73-73"];
m57_46 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="WriteTransactionFacts.cs", label="Assert.Equal(_shutdownToken, token.ShutdownToken)", span="74-74"];
m57_47 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m57_14 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="WriteTransactionFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m57_62 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="WriteTransactionFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m57_48 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m57_98 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="WriteTransactionFacts.cs", label="return new ServerJobCancellationToken(\r\n                JobId, _connection.Object, _workerContextMock.Object, _shutdownToken);", span="136-137"];
m57_99 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m57_49 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="WriteTransactionFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m57_50 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", color=green, community=0, file="WriteTransactionFacts.cs", label="0: var token = CreateToken()", span="80-80"];
m57_51 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", color=green, community=0, file="WriteTransactionFacts.cs", label="0: Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="82-82"];
m57_52 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="WriteTransactionFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m57_12 [cluster="Unk.Returns", file="WriteTransactionFacts.cs", label="Entry Unk.Returns", span=""];
m57_10 [cluster="Mock<IStorageConnection>.cstr", file="WriteTransactionFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m57_100 [file="WriteTransactionFacts.cs", label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span=""];
m57_104 [file="WriteTransactionFacts.cs", label=token, span=""];
m57_101 [file="WriteTransactionFacts.cs", label=token, span=""];
m57_102 [file="WriteTransactionFacts.cs", label=token, span=""];
m57_103 [file="WriteTransactionFacts.cs", label=token, span=""];
m57_105 [file="WriteTransactionFacts.cs", label=token, span=""];
n42 -> n5  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n6  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n7  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n8  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n17  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n18  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n19  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n21  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n22  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n23  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n24  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n26  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n27  [color=red, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n28  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n42 -> n29  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
n0 -> n6  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n7  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n2 -> n9  [key=0, style=solid];
n2 -> n10  [key=2, style=dotted];
n4 -> n9  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n9 -> n0  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
n12 -> n18  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
n12 -> n20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
n12 -> n23  [color=darkseagreen4, key=1, label="HangFire.States.StateHandlerCollection", style=dashed];
n12 -> n25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n18 -> n33  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n23 -> n33  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [color=red, key=0, style=solid];
n14 -> n31  [key=0, style=solid];
n14 -> n10  [key=2, style=dotted];
n16 -> n31  [key=0, style=solid];
n16 -> n10  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n32  [key=2, style=dotted];
n17 -> n19  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n22  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n24  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n26  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n28  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n29  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n17 -> n30  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n19 -> n18  [key=0, style=solid];
n19 -> n34  [key=2, style=dotted];
n21 -> n20  [key=0, style=solid];
n21 -> n35  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n36  [key=2, style=dotted];
n24 -> n23  [key=0, style=solid];
n24 -> n37  [key=2, style=dotted];
n26 -> n25  [key=0, style=solid];
n26 -> n38  [key=2, style=dotted];
n28 -> n30  [key=0, style=solid];
n28 -> n39  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n40  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n41  [key=2, style=dotted];
n27 -> n28  [color=red, key=0, style=solid];
n27 -> n29  [color=red, key=0, style=solid];
n31 -> n12  [color=blue, key=0, style=bold];
d3 -> d4  [color=green, key=0, style=solid];
d6 -> d3  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
d0 -> d3  [color=green, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
d0 -> d1  [key=0, style=solid];
d1 -> d3  [color=green, key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d4 -> d0  [color=blue, key=0, style=bold];
d2 -> d4  [key=0, style=solid];
d2 -> d5  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_22  [key=2, style=dotted];
m0_24 -> m0_9  [key=2, style=dotted];
m0_25 -> m0_23  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_9  [key=2, style=dotted];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_47 -> m0_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_51  [key=2, style=dotted];
m0_49 -> m0_46  [color=blue, key=0, style=bold];
m0_87 -> m0_88  [color=green, key=0, style=solid];
m0_88 -> m0_89  [color=green, key=0, style=solid];
m0_88 -> m0_85  [color=green, key=2, style=dotted];
m0_88 -> m0_90  [color=green, key=2, style=dotted];
m0_89 -> m0_87  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_81  [key=0, style=solid];
m0_78 -> m0_76  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_81 -> m0_77  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_121  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_122  [key=2, style=dotted];
m0_119 -> m0_123  [key=2, style=dotted];
m0_120 -> m0_117  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_8  [key=2, style=dotted];
m0_14 -> m0_9  [key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_139  [color=darkseagreen4, key=1, label=Table, style=dashed];
m0_136 -> m0_140  [color=darkseagreen4, key=1, label=Table, style=dashed];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_107  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_107  [key=2, style=dotted];
m0_138 -> m0_141  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_140  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_138 -> m0_142  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_140 -> m0_141  [key=0, style=solid];
m0_142 -> m0_142  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_142 -> m0_139  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_143  [key=0, style=solid];
m0_143 -> m0_136  [color=blue, key=0, style=bold];
m0_97 -> m0_98  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_107  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=0, style=solid];
m0_103 -> m0_101  [key=0, style=solid];
m0_103 -> m0_103  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_103 -> m0_107  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_106  [key=2, style=dotted];
m0_99 -> m0_102  [color=darkseagreen4, key=1, label=args, style=dashed];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_102  [color=darkseagreen4, key=1, label=pair, style=dashed];
m0_102 -> m0_108  [key=2, style=dotted];
m0_102 -> m0_86  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_105  [key=2, style=dotted];
m0_104 -> m0_97  [color=blue, key=0, style=bold];
m0_144 -> m0_145  [key=0, style=solid];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_147  [key=2, style=dotted];
m0_146 -> m0_144  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_85  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_86  [key=2, style=dotted];
m0_84 -> m0_82  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_34  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_35  [key=2, style=dotted];
m0_28 -> m0_36  [key=2, style=dotted];
m0_28 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_35  [key=2, style=dotted];
m0_29 -> m0_37  [key=2, style=dotted];
m0_29 -> m0_36  [key=2, style=dotted];
m0_29 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_33  [key=0, style=solid];
m0_30 -> m0_38  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_33 -> m0_26  [color=blue, key=0, style=bold];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_70  [key=0, style=solid];
m0_67 -> m0_34  [key=2, style=dotted];
m0_67 -> m0_38  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_70 -> m0_66  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_40 -> m0_41  [key=0, style=solid];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_54 -> m0_52  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_57 -> m0_55  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_114 -> m0_106  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [key=2, style=dotted];
m0_115 -> m0_113  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_75  [key=0, style=solid];
m0_72 -> m0_76  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_71  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_8  [key=2, style=dotted];
m0_11 -> m0_9  [key=2, style=dotted];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_8  [key=2, style=dotted];
m0_59 -> m0_9  [key=2, style=dotted];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_8  [key=2, style=dotted];
m0_17 -> m0_9  [key=2, style=dotted];
m0_18 -> m0_16  [color=blue, key=0, style=bold];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_127  [color=darkseagreen4, key=1, label=Table, style=dashed];
m0_124 -> m0_128  [color=darkseagreen4, key=1, label=Table, style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_107  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_107  [key=2, style=dotted];
m0_126 -> m0_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_126 -> m0_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_130 -> m0_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_130 -> m0_127  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_131  [key=0, style=solid];
m0_131 -> m0_124  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_9  [key=2, style=dotted];
m0_21 -> m0_19  [color=blue, key=0, style=bold];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=2, style=dotted];
m0_110 -> m0_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_111 -> m0_109  [color=blue, key=0, style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_64 -> m0_65  [color=green, key=0, style=solid];
m0_63 -> m0_64  [color=green, key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_65  [key=0, style=solid];
m0_62 -> m0_34  [key=2, style=dotted];
m0_62 -> m0_38  [key=2, style=dotted];
m0_65 -> m0_61  [color=blue, key=0, style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=2, style=dotted];
m0_134 -> m0_132  [color=blue, key=0, style=bold];
m0_148 -> m0_64  [color=green, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_6  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_14  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_20  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_24  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_27  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_28  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_29  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_32  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_59  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_62  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_67  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_72  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_74  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_80  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_103  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_110  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_118  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_119  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_125  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_129  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_133  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_137  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_141  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m0_148 -> m0_145  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m1_19 -> m1_24  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_21 -> m1_29  [key=0, style=solid];
m1_21 -> d5  [key=2, style=dotted];
m1_23 -> m1_29  [key=0, style=solid];
m1_23 -> d5  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [key=2, style=dotted];
m1_26 -> m1_29  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=2, style=dotted];
m1_29 -> m1_19  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=2, style=dotted];
m1_35 -> m1_33  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m1_6 -> m1_11  [color=darkseagreen4, key=1, label="HangFire.Client.IJobCreationProcess", style=dashed];
m1_6 -> m1_13  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m1_6 -> m1_14  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m1_6 -> m1_15  [color=darkseagreen4, key=1, label="HangFire.Client.IJobCreationProcess", style=dashed];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_18  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_8 -> m1_16  [key=0, style=solid];
m1_8 -> d5  [key=2, style=dotted];
m1_10 -> m1_16  [key=0, style=solid];
m1_10 -> d5  [key=2, style=dotted];
m1_12 -> m1_16  [key=0, style=solid];
m1_12 -> d5  [key=2, style=dotted];
m1_16 -> m1_6  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_37 -> m1_13  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobClient", style=dashed];
m1_37 -> m1_14  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobClient", style=dashed];
m1_37 -> m1_15  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobClient", style=dashed];
m1_37 -> m1_24  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobClient", style=dashed];
m1_37 -> m1_25  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobClient", style=dashed];
m1_37 -> m1_34  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobClient", style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_8  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_111  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_116  [key=2, style=dotted];
m2_100 -> m2_104  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_109  [key=0, style=solid];
m2_111 -> m2_121  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_72  [key=2, style=dotted];
m2_101 -> m2_106  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m2_101 -> m2_128  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m2_101 -> m2_109  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_107  [color=red, key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_111  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m2_106 -> m2_104  [key=0, style=solid];
m2_106 -> m2_46  [key=2, style=dotted];
m2_106 -> m2_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_106 -> m2_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_114  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_117  [key=2, style=dotted];
m2_103 -> m2_106  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m2_103 -> m2_107  [color=red, key=1, label=pipeline, style=dashed];
m2_107 -> m2_108  [color=red, key=0, style=solid];
m2_107 -> m2_118  [color=red, key=2, style=dotted];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m2_105 -> m2_128  [color=darkseagreen4, key=1, label=name, style=dashed];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m2_108 -> m2_114  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m2_113 -> m2_109  [key=0, style=solid];
m2_113 -> m2_113  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m2_113 -> m2_114  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m2_114 -> m2_115  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_119  [key=2, style=dotted];
m2_110 -> m2_120  [key=2, style=dotted];
m2_110 -> m2_110  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m2_110 -> m2_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_81  [key=2, style=dotted];
m2_112 -> m2_112  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m2_115 -> m2_99  [color=blue, key=0, style=bold];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_25  [key=2, style=dotted];
m2_96 -> m2_45  [key=2, style=dotted];
m2_96 -> m2_98  [key=2, style=dotted];
m2_95 -> m2_96  [key=0, style=solid];
m2_97 -> m2_95  [color=blue, key=0, style=bold];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_46  [key=2, style=dotted];
m2_84 -> m2_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_81 -> m2_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_81 -> m2_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_81 -> m2_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_16  [key=2, style=dotted];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_82 -> m2_85  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_46  [key=2, style=dotted];
m2_83 -> m2_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_47  [key=2, style=dotted];
m2_86 -> m2_81  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=2, style=dotted];
m2_13 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_46  [key=2, style=dotted];
m2_138 -> m2_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_134 -> m2_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_134 -> m2_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_134 -> m2_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_134 -> m2_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_134 -> m2_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_16  [key=2, style=dotted];
m2_135 -> m2_137  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_135 -> m2_138  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_135 -> m2_139  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_46  [key=2, style=dotted];
m2_136 -> m2_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_46  [key=2, style=dotted];
m2_137 -> m2_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_47  [key=2, style=dotted];
m2_140 -> m2_134  [color=blue, key=0, style=bold];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_56 -> m2_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_56 -> m2_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_56 -> m2_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_56 -> m2_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_56 -> m2_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_16  [key=2, style=dotted];
m2_57 -> m2_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_57 -> m2_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_57 -> m2_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_46  [key=2, style=dotted];
m2_58 -> m2_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_46  [key=2, style=dotted];
m2_59 -> m2_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_63  [key=0, style=solid];
m2_62 -> m2_60  [key=0, style=solid];
m2_62 -> m2_46  [key=2, style=dotted];
m2_62 -> m2_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_47  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_75  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m2_64 -> m2_56  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=2, style=dotted];
m2_80 -> m2_78  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_46  [key=2, style=dotted];
m2_37 -> m2_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m2_28 -> m2_31  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m2_28 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m2_28 -> m2_33  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m2_28 -> m2_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_28 -> m2_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_28 -> m2_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_28 -> m2_37  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_28 -> m2_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_41  [key=2, style=dotted];
m2_29 -> m2_42  [key=2, style=dotted];
m2_29 -> m2_36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_29 -> m2_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_29 -> m2_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_29 -> m2_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_29 -> m2_39  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_43  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_43  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_43  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_44  [key=2, style=dotted];
m2_33 -> m2_43  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_45  [key=2, style=dotted];
m2_34 -> m2_43  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_46  [key=2, style=dotted];
m2_36 -> m2_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_16  [key=2, style=dotted];
m2_35 -> m2_37  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_47  [key=2, style=dotted];
m2_40 -> m2_28  [color=blue, key=0, style=bold];
m2_149 -> m2_150  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_25  [key=2, style=dotted];
m2_49 -> m2_51  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_25  [key=2, style=dotted];
m2_53 -> m2_55  [key=2, style=dotted];
m2_48 -> m2_49  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_54 -> m2_52  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_25  [key=2, style=dotted];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_73  [key=2, style=dotted];
m2_70 -> m2_45  [key=2, style=dotted];
m2_70 -> m2_51  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_25  [key=2, style=dotted];
m2_75 -> m2_77  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_67 -> m2_65  [color=blue, key=0, style=bold];
m2_71 -> m2_69  [color=blue, key=0, style=bold];
m2_76 -> m2_74  [color=blue, key=0, style=bold];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_90  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_25  [key=2, style=dotted];
m2_92 -> m2_94  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_89 -> m2_87  [color=blue, key=0, style=bold];
m2_93 -> m2_91  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_128 -> m2_130  [key=2, style=dotted];
m2_128 -> m2_131  [key=2, style=dotted];
m2_128 -> m2_132  [key=2, style=dotted];
m2_128 -> m2_133  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=2, style=dotted];
m2_123 -> m2_126  [key=2, style=dotted];
m2_122 -> m2_123  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_124 -> m2_122  [color=blue, key=0, style=bold];
m2_129 -> m2_127  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_25  [key=2, style=dotted];
m2_142 -> m2_144  [key=2, style=dotted];
m2_146 -> m2_147  [key=0, style=solid];
m2_146 -> m2_25  [key=2, style=dotted];
m2_146 -> m2_148  [key=2, style=dotted];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_25  [key=2, style=dotted];
m2_150 -> m2_148  [key=2, style=dotted];
m2_141 -> m2_142  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_143 -> m2_141  [color=blue, key=0, style=bold];
m2_147 -> m2_145  [color=blue, key=0, style=bold];
m2_151 -> m2_149  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_23 -> m2_26  [key=2, style=dotted];
m2_23 -> m2_27  [key=2, style=dotted];
m2_24 -> m2_22  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStorage", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_152 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_13  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_18  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_57  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_79  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_96  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_100  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_152 -> m2_112  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m2_153 -> m2_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m2_154 -> m2_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_154 -> m2_53  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m2_155 -> m2_53  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_156 -> m2_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_156 -> m2_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_156 -> m2_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_157 -> m2_70  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_158 -> m2_75  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m2_159 -> m2_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_159 -> m2_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_160 -> m2_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m2_160 -> m2_128  [color=darkseagreen4, key=1, label=name, style=dashed];
m2_161 -> m2_128  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m2_162 -> m2_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_163 -> m2_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_163 -> m2_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_163 -> m2_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_10  [key=2, style=dotted];
m3_7 -> m3_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_11  [key=2, style=dotted];
m3_9 -> m3_6  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_7  [key=2, style=dotted];
m3_9 -> m3_12  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_7  [key=2, style=dotted];
m3_32 -> m3_12  [key=2, style=dotted];
m3_32 -> m3_10  [key=2, style=dotted];
m3_32 -> m3_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_30  [key=2, style=dotted];
m3_33 -> m3_11  [key=2, style=dotted];
m3_34 -> m3_31  [color=blue, key=0, style=bold];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_10  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_97 -> m3_11  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_95  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_11 -> m3_8  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_13  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=2, style=dotted];
m3_22 -> m3_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_10  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_54 -> m3_11  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_52  [color=blue, key=0, style=bold];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_30 -> m3_28  [color=blue, key=0, style=bold];
m3_41 -> m3_194  [key=0, style=solid];
m3_194 -> m3_41  [color=blue, key=0, style=bold];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_25  [key=2, style=dotted];
m3_20 -> m3_13  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_15  [key=2, style=dotted];
m3_21 -> m3_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_21 -> m3_14  [color=blue, key=0, style=bold];
m3_23 -> m3_20  [color=blue, key=0, style=bold];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_10  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_121 -> m3_11  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_119  [color=blue, key=0, style=bold];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_67  [key=2, style=dotted];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_24  [key=2, style=dotted];
m3_108 -> m3_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_109 -> m3_106  [color=blue, key=0, style=bold];
m3_169 -> m3_170  [key=0, style=solid];
m3_170 -> m3_10  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_171 -> m3_11  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_172 -> m3_169  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_7  [key=2, style=dotted];
m3_15 -> m3_22  [key=2, style=dotted];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=state, style=dashed];
m3_15 -> m3_20  [color=darkseagreen4, key=1, label=state, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_23  [key=2, style=dotted];
m3_16 -> m3_18  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_16 -> m3_19  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_16 -> m3_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_24  [key=2, style=dotted];
m3_17 -> m3_13  [key=2, style=dotted];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_13  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_13  [key=2, style=dotted];
m3_19 -> m3_193  [key=0, style=solid];
m3_193 -> m3_19  [color=blue, key=0, style=bold];
m3_127 -> m3_128  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_10  [key=2, style=dotted];
m3_29 -> m3_15  [key=2, style=dotted];
m3_29 -> m3_26  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_10  [key=2, style=dotted];
m3_36 -> m3_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_10  [key=2, style=dotted];
m3_50 -> m3_15  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_37 -> m3_35  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_51 -> m3_49  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_163 -> m3_164  [key=0, style=solid];
m3_184 -> m3_185  [key=0, style=solid];
m3_187 -> m3_188  [key=0, style=solid];
m3_72 -> m3_10  [key=2, style=dotted];
m3_72 -> m3_15  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_93 -> m3_10  [key=2, style=dotted];
m3_93 -> m3_15  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_114 -> m3_10  [key=2, style=dotted];
m3_114 -> m3_15  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_138 -> m3_10  [key=2, style=dotted];
m3_138 -> m3_15  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_164 -> m3_10  [key=2, style=dotted];
m3_164 -> m3_15  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_188 -> m3_10  [key=2, style=dotted];
m3_188 -> m3_15  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_27 -> m3_25  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_7  [key=2, style=dotted];
m3_27 -> m3_12  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_19  [key=2, style=dotted];
m3_40 -> m3_38  [color=blue, key=0, style=bold];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=2, style=dotted];
m3_48 -> m3_46  [color=blue, key=0, style=bold];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_41  [key=2, style=dotted];
m3_70 -> m3_68  [color=blue, key=0, style=bold];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_19  [key=2, style=dotted];
m3_73 -> m3_71  [color=blue, key=0, style=bold];
m3_91 -> m3_89  [color=blue, key=0, style=bold];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_41  [key=2, style=dotted];
m3_94 -> m3_92  [color=blue, key=0, style=bold];
m3_112 -> m3_110  [color=blue, key=0, style=bold];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_19  [key=2, style=dotted];
m3_115 -> m3_113  [color=blue, key=0, style=bold];
m3_136 -> m3_134  [color=blue, key=0, style=bold];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_41  [key=2, style=dotted];
m3_139 -> m3_137  [color=blue, key=0, style=bold];
m3_148 -> n11  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_151  [key=2, style=dotted];
m3_148 -> m3_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_174 -> n11  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_176  [key=2, style=dotted];
m3_174 -> m3_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_162 -> m3_160  [color=blue, key=0, style=bold];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_19  [key=2, style=dotted];
m3_165 -> m3_163  [color=blue, key=0, style=bold];
m3_186 -> m3_184  [color=blue, key=0, style=bold];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_41  [key=2, style=dotted];
m3_189 -> m3_187  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_140 -> m3_141  [key=0, style=solid];
m3_147 -> m3_148  [key=0, style=solid];
m3_166 -> m3_167  [key=0, style=solid];
m3_173 -> m3_174  [key=0, style=solid];
m3_190 -> m3_191  [key=0, style=solid];
m3_149 -> m3_147  [color=blue, key=0, style=bold];
m3_152 -> m3_153  [key=0, style=solid];
m3_175 -> m3_173  [color=blue, key=0, style=bold];
m3_177 -> m3_178  [key=0, style=solid];
m3_58 -> m3_56  [color=blue, key=0, style=bold];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_59  [key=2, style=dotted];
m3_57 -> m3_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_80 -> m3_78  [color=blue, key=0, style=bold];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [key=2, style=dotted];
m3_79 -> m3_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_101 -> m3_99  [color=blue, key=0, style=bold];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=2, style=dotted];
m3_100 -> m3_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_118 -> m3_116  [color=blue, key=0, style=bold];
m3_117 -> m3_118  [key=0, style=solid];
m3_125 -> m3_123  [color=blue, key=0, style=bold];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_126  [key=2, style=dotted];
m3_124 -> m3_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_142 -> m3_140  [color=blue, key=0, style=bold];
m3_141 -> m3_142  [key=0, style=solid];
m3_168 -> m3_166  [color=blue, key=0, style=bold];
m3_167 -> m3_168  [key=0, style=solid];
m3_192 -> m3_190  [color=blue, key=0, style=bold];
m3_191 -> m3_192  [key=0, style=solid];
m3_61 -> m3_19  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_104 -> m3_19  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_153 -> m3_19  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_83 -> m3_41  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_128 -> m3_41  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_178 -> m3_41  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_154 -> m3_152  [color=blue, key=0, style=bold];
m3_179 -> m3_177  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_62 -> m3_60  [color=blue, key=0, style=bold];
m3_105 -> m3_103  [color=blue, key=0, style=bold];
m3_84 -> m3_82  [color=blue, key=0, style=bold];
m3_129 -> m3_127  [color=blue, key=0, style=bold];
m3_74 -> m3_75  [key=0, style=solid];
m3_75 -> m3_10  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_76 -> m3_11  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_74  [color=blue, key=0, style=bold];
m3_85 -> m3_86  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_10  [key=2, style=dotted];
m3_86 -> m3_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_24  [key=2, style=dotted];
m3_87 -> m3_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_88 -> m3_85  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_10  [key=2, style=dotted];
m3_43 -> m3_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_24  [key=2, style=dotted];
m3_44 -> m3_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_45 -> m3_42  [color=blue, key=0, style=bold];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_67  [key=2, style=dotted];
m3_64 -> m3_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_24  [key=2, style=dotted];
m3_65 -> m3_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_66 -> m3_63  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_5  [color=green, key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_3  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> n11  [key=2, style=dotted];
m3_156 -> m3_159  [key=2, style=dotted];
m3_156 -> m3_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_24  [key=2, style=dotted];
m3_157 -> m3_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_158 -> m3_155  [color=blue, key=0, style=bold];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> n11  [key=2, style=dotted];
m3_181 -> m3_10  [key=2, style=dotted];
m3_181 -> m3_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_24  [key=2, style=dotted];
m3_182 -> m3_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_183 -> m3_180  [color=blue, key=0, style=bold];
m3_143 -> m3_144  [key=0, style=solid];
m3_144 -> m3_10  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_145 -> m3_11  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_146 -> m3_143  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_10  [key=2, style=dotted];
m3_131 -> m3_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_24  [key=2, style=dotted];
m3_132 -> m3_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_133 -> m3_130  [color=blue, key=0, style=bold];
m3_195 -> m3_2  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_22  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_107  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m3_195 -> m3_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m5_55 -> m5_56  [color=red, key=0, style=solid];
m5_56 -> m5_57  [color=red, key=0, style=solid];
m5_56 -> m5_39  [color=red, key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_22  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_40  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_41  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_42  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_43  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_26  [key=2, style=dotted];
m5_63 -> m5_55  [color=blue, key=0, style=bold];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=2, style=dotted];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_14  [color=darkorchid, key=3, label="Field variable HangFire.JobStorage _storage", style=bold];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_5  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_6  [key=2, style=dotted];
m5_2 -> m5_7  [key=2, style=dotted];
m5_2 -> m5_31  [color=darkorchid, key=3, label="Field variable HangFire.Server.IServerComponentRunner _serverRunner", style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_8  [key=2, style=dotted];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_39  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_22  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_40  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_41  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_42  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_43  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_26  [key=2, style=dotted];
m5_84 -> m5_76  [color=blue, key=0, style=bold];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_39  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_22  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_40  [key=2, style=dotted];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_41  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_42  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_43  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_26  [key=2, style=dotted];
m5_38 -> m5_30  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_13  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_9  [color=blue, key=0, style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_39  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_22  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_40  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_41  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_42  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_43  [key=2, style=dotted];
m5_51 -> m5_52  [color=red, key=0, style=solid];
m5_51 -> m5_54  [key=2, style=dotted];
m5_52 -> m5_53  [color=red, key=0, style=solid];
m5_52 -> m5_26  [color=red, key=2, style=dotted];
m5_53 -> m5_44  [color=blue, key=0, style=bold];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_39  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_22  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_40  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_41  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_41  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_42  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_43  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_42  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_43  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_26  [key=2, style=dotted];
m5_75 -> m5_64  [color=blue, key=0, style=bold];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_39  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_22  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_40  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_41  [key=2, style=dotted];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_42  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_43  [key=2, style=dotted];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_26  [key=2, style=dotted];
m5_93 -> m5_85  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_0  [key=2, style=dotted];
m5_17 -> m5_14  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=2, style=dotted];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [key=2, style=dotted];
m5_24 -> m5_22  [color=blue, key=0, style=bold];
m5_94 -> m5_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_46  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_52  [color=red, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_66  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_74  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_78  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_83  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_87  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m5_94 -> m5_92  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherFeature", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=2, style=dotted];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_0 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m7_0 -> m7_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_2 -> m7_9  [key=0, style=solid];
m7_2 -> d5  [key=2, style=dotted];
m7_4 -> m7_9  [key=0, style=solid];
m7_4 -> d5  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_11  [key=2, style=dotted];
m7_9 -> m7_0  [color=blue, key=0, style=bold];
m7_12 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m7_12 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m7_12 -> m7_7  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m7_12 -> m7_8  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_23 -> m8_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_23 -> m8_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_23 -> m8_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_26  [key=0, style=solid];
m8_24 -> m8_33  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_35  [key=2, style=dotted];
m8_28 -> m8_30  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=0, style=solid];
m8_29 -> m8_36  [key=2, style=dotted];
m8_30 -> m8_32  [key=0, style=solid];
m8_30 -> m8_37  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_25 -> m8_32  [key=0, style=solid];
m8_25 -> d5  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=0, style=solid];
m8_27 -> m8_32  [key=0, style=solid];
m8_27 -> m8_34  [key=2, style=dotted];
m8_32 -> m8_23  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_38 -> m8_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_41  [key=0, style=solid];
m8_39 -> m8_33  [key=2, style=dotted];
m8_41 -> m8_44  [key=0, style=solid];
m8_41 -> m8_36  [key=2, style=dotted];
m8_41 -> m8_45  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_46  [key=2, style=dotted];
m8_43 -> m8_47  [key=2, style=dotted];
m8_40 -> m8_44  [key=0, style=solid];
m8_40 -> d5  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_44 -> m8_38  [color=blue, key=0, style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m8_6 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m8_6 -> m8_13  [color=green, key=1, label="HangFire.States.IState", style=dashed];
m8_6 -> m8_15  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m8_6 -> m8_16  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m8_6 -> m8_17  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m8_6 -> m8_18  [color=green, key=1, label="HangFire.States.IState", style=dashed];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_8 -> m8_20  [key=0, style=solid];
m8_8 -> d5  [key=2, style=dotted];
m8_10 -> m8_20  [key=0, style=solid];
m8_10 -> d5  [key=2, style=dotted];
m8_12 -> m8_20  [key=0, style=solid];
m8_12 -> d5  [key=2, style=dotted];
m8_14 -> m8_20  [key=0, style=solid];
m8_14 -> d5  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_22  [key=2, style=dotted];
m8_20 -> m8_6  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_53  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_54  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_48  [color=blue, key=0, style=bold];
m8_55 -> m8_1  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_3  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_4  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_15  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_18  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_19  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_29  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_30  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_31  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_41  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_49  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_50  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_55 -> m8_51  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m9_110 -> m9_111  [key=0, style=solid];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_62  [key=2, style=dotted];
m9_111 -> m9_113  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_109  [key=2, style=dotted];
m9_112 -> m9_28  [key=2, style=dotted];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_109  [key=2, style=dotted];
m9_113 -> m9_28  [key=2, style=dotted];
m9_114 -> m9_110  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_22  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=2, style=dotted];
m9_27 -> m9_24  [color=blue, key=0, style=bold];
m9_180 -> m9_181  [key=0, style=solid];
m9_181 -> m9_182  [key=0, style=solid];
m9_181 -> m9_62  [key=2, style=dotted];
m9_181 -> m9_183  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_181 -> m9_186  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_183 -> m9_22  [key=2, style=dotted];
m9_183 -> m9_184  [key=0, style=solid];
m9_183 -> m9_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_182 -> m9_152  [key=2, style=dotted];
m9_182 -> m9_183  [key=0, style=solid];
m9_184 -> m9_180  [color=blue, key=0, style=bold];
m9_196 -> m9_197  [key=0, style=solid];
m9_197 -> m9_198  [key=0, style=solid];
m9_197 -> m9_13  [key=2, style=dotted];
m9_197 -> m9_14  [key=2, style=dotted];
m9_197 -> m9_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_198 -> m9_199  [key=0, style=solid];
m9_198 -> m9_62  [key=2, style=dotted];
m9_198 -> m9_200  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_199 -> m9_152  [key=2, style=dotted];
m9_199 -> m9_200  [key=0, style=solid];
m9_200 -> m9_201  [key=0, style=solid];
m9_200 -> m9_71  [key=2, style=dotted];
m9_201 -> m9_28  [key=2, style=dotted];
m9_201 -> m9_202  [key=0, style=solid];
m9_202 -> m9_196  [color=blue, key=0, style=bold];
m9_66 -> m9_67  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_62  [key=2, style=dotted];
m9_67 -> m9_69  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_71  [key=2, style=dotted];
m9_69 -> m9_63  [key=2, style=dotted];
m9_69 -> m9_70  [key=0, style=solid];
m9_70 -> m9_66  [color=blue, key=0, style=bold];
m9_158 -> m9_159  [key=0, style=solid];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_62  [key=2, style=dotted];
m9_159 -> m9_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_159 -> m9_161  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_159 -> m9_162  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_160 -> m9_161  [key=0, style=solid];
m9_160 -> m9_13  [key=2, style=dotted];
m9_160 -> m9_14  [key=2, style=dotted];
m9_160 -> m9_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_161 -> m9_152  [key=2, style=dotted];
m9_161 -> m9_162  [key=0, style=solid];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_28  [key=2, style=dotted];
m9_163 -> m9_158  [color=blue, key=0, style=bold];
m9_120 -> m9_121  [key=0, style=solid];
m9_121 -> m9_122  [key=0, style=solid];
m9_121 -> m9_62  [key=2, style=dotted];
m9_121 -> m9_123  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_121 -> m9_124  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_85  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_85  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_109  [key=2, style=dotted];
m9_124 -> m9_28  [key=2, style=dotted];
m9_125 -> m9_120  [color=blue, key=0, style=bold];
m9_167 -> m9_168  [key=0, style=solid];
m9_171 -> m9_172  [color=green, key=0, style=solid];
m9_171 -> m9_153  [color=green, key=2, style=dotted];
m9_171 -> m9_173  [color=green, key=1, label="lambda expression", style=dashed];
m9_170 -> m9_171  [color=green, key=0, style=solid];
m9_170 -> m9_152  [key=2, style=dotted];
m9_168 -> m9_170  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_168 -> m9_169  [key=0, style=solid];
m9_168 -> m9_62  [key=2, style=dotted];
m9_169 -> m9_170  [key=0, style=solid];
m9_169 -> m9_85  [key=2, style=dotted];
m9_172 -> m9_167  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_2 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_9  [color=green, key=2, style=dotted];
m9_1 -> m9_2  [color=green, key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_12  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_14  [key=2, style=dotted];
m9_6 -> m9_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_7 -> m9_0  [color=blue, key=0, style=bold];
m9_94 -> m9_95  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_62  [key=2, style=dotted];
m9_95 -> m9_97  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_95 -> m9_100  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_85  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_90  [key=2, style=dotted];
m9_97 -> m9_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_98 -> m9_94  [color=blue, key=0, style=bold];
m9_188 -> m9_189  [key=0, style=solid];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_62  [key=2, style=dotted];
m9_189 -> m9_191  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_189 -> m9_194  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_190 -> m9_152  [key=2, style=dotted];
m9_190 -> m9_191  [key=0, style=solid];
m9_191 -> m9_192  [key=0, style=solid];
m9_191 -> m9_90  [key=2, style=dotted];
m9_191 -> m9_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_192 -> m9_188  [color=blue, key=0, style=bold];
m9_33 -> m9_34  [key=0, style=solid];
m9_34 -> m9_22  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_28  [key=2, style=dotted];
m9_36 -> m9_33  [color=blue, key=0, style=bold];
m9_102 -> m9_103  [key=0, style=solid];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_62  [key=2, style=dotted];
m9_103 -> m9_107  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_104 -> m9_22  [key=2, style=dotted];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_105 -> m9_102  [color=blue, key=0, style=bold];
m9_206 -> m9_207  [key=0, style=solid];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_62  [key=2, style=dotted];
m9_207 -> m9_209  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_210 -> m9_22  [key=2, style=dotted];
m9_210 -> m9_211  [key=0, style=solid];
m9_210 -> m9_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_208 -> m9_152  [key=2, style=dotted];
m9_208 -> m9_209  [key=0, style=solid];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_71  [key=2, style=dotted];
m9_209 -> m9_213  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m9_211 -> m9_206  [color=blue, key=0, style=bold];
m9_47 -> m9_48  [key=0, style=solid];
m9_48 -> m9_22  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_28  [key=2, style=dotted];
m9_50 -> m9_47  [color=blue, key=0, style=bold];
m9_72 -> m9_73  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_62  [key=2, style=dotted];
m9_73 -> m9_75  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_71  [key=2, style=dotted];
m9_75 -> m9_63  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_76 -> m9_72  [color=blue, key=0, style=bold];
m9_147 -> m9_148  [key=0, style=solid];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_62  [key=2, style=dotted];
m9_148 -> m9_150  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_148 -> m9_155  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_150 -> m9_153  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_152  [key=2, style=dotted];
m9_151 -> m9_147  [color=blue, key=0, style=bold];
m9_77 -> m9_78  [key=0, style=solid];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_62  [key=2, style=dotted];
m9_78 -> m9_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_79 -> m9_22  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_28  [key=2, style=dotted];
m9_81 -> m9_77  [color=blue, key=0, style=bold];
m9_62 -> m9_216  [key=0, style=solid];
m9_216 -> m9_217  [key=0, style=solid];
m9_216 -> m9_32  [key=2, style=dotted];
m9_217 -> m9_62  [color=blue, key=0, style=bold];
m9_193 -> m9_194  [key=0, style=solid];
m9_173 -> m9_174  [color=green, key=0, style=solid];
m9_174 -> m9_175  [color=green, key=0, style=solid];
m9_174 -> m9_22  [color=green, key=2, style=dotted];
m9_174 -> m9_157  [color=green, key=2, style=dotted];
m9_174 -> m9_176  [color=green, key=1, label="lambda expression", style=dashed];
m9_175 -> m9_173  [color=blue, key=0, style=bold];
m9_176 -> m9_177  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_32  [key=2, style=dotted];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_32  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_32  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_32  [key=2, style=dotted];
m9_204 -> m9_22  [key=2, style=dotted];
m9_204 -> m9_157  [key=2, style=dotted];
m9_204 -> m9_205  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_20 -> m9_22  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_23  [key=2, style=dotted];
m9_155 -> m9_22  [key=2, style=dotted];
m9_155 -> m9_157  [key=2, style=dotted];
m9_155 -> m9_156  [key=0, style=solid];
m9_165 -> m9_22  [key=2, style=dotted];
m9_165 -> m9_157  [key=2, style=dotted];
m9_165 -> m9_166  [key=0, style=solid];
m9_178 -> m9_176  [color=blue, key=0, style=bold];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_179  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_31 -> m9_29  [color=blue, key=0, style=bold];
m9_37 -> m9_38  [key=0, style=solid];
m9_39 -> m9_37  [color=blue, key=0, style=bold];
m9_44 -> m9_45  [key=0, style=solid];
m9_46 -> m9_44  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [key=0, style=solid];
m9_53 -> m9_51  [color=blue, key=0, style=bold];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_85  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_85  [key=2, style=dotted];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_85  [key=2, style=dotted];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_109  [key=2, style=dotted];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_109  [key=2, style=dotted];
m9_154 -> m9_155  [key=0, style=solid];
m9_164 -> m9_165  [key=0, style=solid];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_85  [key=2, style=dotted];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_109  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_205 -> m9_203  [color=blue, key=0, style=bold];
m9_17 -> m9_15  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_18  [key=2, style=dotted];
m9_21 -> m9_19  [color=blue, key=0, style=bold];
m9_82 -> m9_83  [key=0, style=solid];
m9_106 -> m9_107  [key=0, style=solid];
m9_137 -> m9_138  [key=0, style=solid];
m9_156 -> m9_154  [color=blue, key=0, style=bold];
m9_166 -> m9_164  [color=blue, key=0, style=bold];
m9_185 -> m9_186  [key=0, style=solid];
m9_212 -> m9_213  [key=0, style=solid];
m9_84 -> m9_82  [color=blue, key=0, style=bold];
m9_91 -> m9_92  [key=0, style=solid];
m9_93 -> m9_91  [color=blue, key=0, style=bold];
m9_99 -> m9_100  [key=0, style=solid];
m9_101 -> m9_99  [color=blue, key=0, style=bold];
m9_108 -> m9_106  [color=blue, key=0, style=bold];
m9_139 -> m9_137  [color=blue, key=0, style=bold];
m9_187 -> m9_185  [color=blue, key=0, style=bold];
m9_195 -> m9_193  [color=blue, key=0, style=bold];
m9_213 -> m9_85  [key=2, style=dotted];
m9_213 -> m9_214  [key=0, style=solid];
m9_214 -> m9_212  [color=blue, key=0, style=bold];
m9_115 -> m9_116  [key=0, style=solid];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_62  [key=2, style=dotted];
m9_116 -> m9_118  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_85  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_109  [key=2, style=dotted];
m9_118 -> m9_28  [key=2, style=dotted];
m9_119 -> m9_115  [color=blue, key=0, style=bold];
m9_40 -> m9_41  [key=0, style=solid];
m9_41 -> m9_22  [key=2, style=dotted];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_28  [key=2, style=dotted];
m9_43 -> m9_40  [color=blue, key=0, style=bold];
m9_86 -> m9_87  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_62  [key=2, style=dotted];
m9_87 -> m9_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [key=2, style=dotted];
m9_88 -> m9_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_89 -> m9_86  [color=blue, key=0, style=bold];
m9_126 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_62  [key=2, style=dotted];
m9_127 -> m9_129  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_127 -> m9_130  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_85  [key=2, style=dotted];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_85  [key=2, style=dotted];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_109  [key=2, style=dotted];
m9_130 -> m9_28  [key=2, style=dotted];
m9_131 -> m9_126  [color=blue, key=0, style=bold];
m9_54 -> m9_55  [key=0, style=solid];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_62  [key=2, style=dotted];
m9_55 -> m9_57  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_55 -> m9_58  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_55 -> m9_59  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_55 -> m9_60  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_63  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_63  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_63  [key=2, style=dotted];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_64  [key=2, style=dotted];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_65  [key=2, style=dotted];
m9_61 -> m9_54  [color=blue, key=0, style=bold];
m9_18 -> m9_215  [key=0, style=solid];
m9_215 -> m9_18  [color=blue, key=0, style=bold];
m9_132 -> m9_133  [key=0, style=solid];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_62  [key=2, style=dotted];
m9_133 -> m9_135  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_133 -> m9_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_135 -> m9_22  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_85  [key=2, style=dotted];
m9_136 -> m9_132  [color=blue, key=0, style=bold];
m9_140 -> m9_141  [key=0, style=solid];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_62  [key=2, style=dotted];
m9_141 -> m9_143  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_85  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_71  [key=2, style=dotted];
m9_144 -> m9_109  [key=2, style=dotted];
m9_144 -> m9_145  [key=0, style=solid];
m9_145 -> m9_28  [key=2, style=dotted];
m9_145 -> m9_146  [key=0, style=solid];
m9_146 -> m9_140  [color=blue, key=0, style=bold];
m9_218 -> m9_2  [color=green, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_171  [color=green, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_38  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_56  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_111  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_116  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_127  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_159  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_160  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_189  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_197  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_204  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_198  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_207  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_218 -> m9_216  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
m9_224 -> m9_155  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_225 -> m9_165  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_219 -> m9_83  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_220 -> m9_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_221 -> m9_100  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_222 -> m9_107  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_223 -> m9_138  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_226 -> m9_186  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_227 -> m9_194  [color=darkseagreen4, key=1, label=context, style=dashed];
m9_228 -> m9_213  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m10_91 -> m10_92  [key=0, style=solid];
m10_92 -> m10_15  [key=2, style=dotted];
m10_92 -> m10_93  [key=0, style=solid];
m10_93 -> m10_91  [color=blue, key=0, style=bold];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_21  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_22  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_20 -> m10_16  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_5  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_27 -> m10_11  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_25 -> m10_27  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_21  [key=2, style=dotted];
m10_25 -> m10_45  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_32  [key=2, style=dotted];
m10_26 -> m10_33  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_34  [key=2, style=dotted];
m10_28 -> m10_35  [key=2, style=dotted];
m10_28 -> m10_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_24 -> m10_30  [key=2, style=dotted];
m10_24 -> m10_31  [key=2, style=dotted];
m10_24 -> m10_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_29 -> m10_23  [color=blue, key=0, style=bold];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_11  [color=green, key=2, style=dotted];
m10_9 -> m10_12  [color=green, key=1, label="lambda expression", style=dashed];
m10_10 -> m10_8  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_7  [key=2, style=dotted];
m10_4 -> m10_0  [color=blue, key=0, style=bold];
m10_51 -> m10_52  [key=0, style=solid];
m10_55 -> m10_11  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid];
m10_55 -> m10_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_53 -> m10_55  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_21  [key=2, style=dotted];
m10_53 -> m10_65  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_32  [key=2, style=dotted];
m10_54 -> m10_33  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_56 -> m10_34  [key=2, style=dotted];
m10_56 -> m10_35  [key=2, style=dotted];
m10_56 -> m10_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_52 -> m10_30  [key=2, style=dotted];
m10_52 -> m10_31  [key=2, style=dotted];
m10_52 -> m10_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_57 -> m10_51  [color=blue, key=0, style=bold];
m10_61 -> m10_62  [key=0, style=solid];
m10_12 -> m10_13  [color=green, key=0, style=solid];
m10_13 -> m10_14  [color=green, key=0, style=solid];
m10_13 -> m10_15  [color=green, key=2, style=dotted];
m10_14 -> m10_12  [color=blue, key=0, style=bold];
m10_37 -> m10_11  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_39  [key=2, style=dotted];
m10_59 -> m10_11  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_39  [key=2, style=dotted];
m10_81 -> m10_11  [key=2, style=dotted];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_39  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_36 -> m10_37  [key=0, style=solid];
m10_38 -> m10_36  [color=blue, key=0, style=bold];
m10_64 -> m10_65  [key=0, style=solid];
m10_58 -> m10_59  [key=0, style=solid];
m10_60 -> m10_58  [color=blue, key=0, style=bold];
m10_77 -> m10_78  [key=0, style=solid];
m10_80 -> m10_81  [key=0, style=solid];
m10_82 -> m10_80  [color=blue, key=0, style=bold];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_47  [key=2, style=dotted];
m10_49 -> m10_39  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_47  [key=2, style=dotted];
m10_68 -> m10_39  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_47  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_46 -> m10_44  [color=blue, key=0, style=bold];
m10_67 -> m10_68  [key=0, style=solid];
m10_66 -> m10_64  [color=blue, key=0, style=bold];
m10_79 -> m10_77  [color=blue, key=0, style=bold];
m10_40 -> m10_41  [key=0, style=solid];
m10_50 -> m10_48  [color=blue, key=0, style=bold];
m10_69 -> m10_67  [color=blue, key=0, style=bold];
m10_42 -> m10_40  [color=blue, key=0, style=bold];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_43  [key=2, style=dotted];
m10_63 -> m10_61  [color=blue, key=0, style=bold];
m10_83 -> m10_84  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_21  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_89  [key=2, style=dotted];
m10_86 -> m10_90  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_88  [key=2, style=dotted];
m10_87 -> m10_83  [color=blue, key=0, style=bold];
m10_70 -> m10_71  [key=0, style=solid];
m10_73 -> m10_11  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_71 -> m10_73  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_21  [key=2, style=dotted];
m10_71 -> m10_78  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_76  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_35  [key=2, style=dotted];
m10_74 -> m10_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_75 -> m10_70  [color=blue, key=0, style=bold];
m10_94 -> m10_27  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_55  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_45  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_84  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_94 -> m10_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", style=dashed];
m10_95 -> m10_45  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_96 -> m10_65  [color=darkseagreen4, key=1, label=process, style=dashed];
m10_97 -> m10_78  [color=darkseagreen4, key=1, label=process, style=dashed];
m11_8 -> m11_9  [key=0, style=solid];
m11_11 -> m11_12  [color=green, key=0, style=solid];
m11_11 -> m11_19  [color=green, key=2, style=dotted];
m11_11 -> m11_13  [color=green, key=1, label=state, style=dashed];
m11_10 -> m11_11  [color=green, key=0, style=solid];
m11_10 -> m11_18  [key=2, style=dotted];
m11_10 -> m11_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_10 -> m11_13  [color=darkseagreen4, key=1, label=job, style=dashed];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_20  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_21  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m11_9 -> m11_17  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_7  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_22  [key=2, style=dotted];
m11_16 -> m11_8  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_26  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_25 -> m11_23  [color=blue, key=0, style=bold];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_26  [key=2, style=dotted];
m11_5 -> m11_7  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_4  [color=blue, key=0, style=bold];
m12_50 -> m12_51  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_40  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_41  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_42  [key=2, style=dotted];
m12_53 -> m12_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_54 -> m12_50  [color=blue, key=0, style=bold];
m12_18 -> m12_19  [color=red, key=0, style=solid];
m12_18 -> m12_21  [color=red, key=2, style=dotted];
m12_18 -> m12_23  [color=red, key=1, label="lambda expression", style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_41  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_22  [key=2, style=dotted];
m12_22 -> m12_35  [key=0, style=solid];
m12_22 -> d5  [key=2, style=dotted];
m12_8 -> m12_0  [color=blue, key=0, style=bold];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_40  [key=2, style=dotted];
m12_35 -> m12_20  [color=blue, key=0, style=bold];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_42  [key=2, style=dotted];
m12_37 -> m12_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_42  [key=2, style=dotted];
m12_38 -> m12_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_39 -> m12_34  [color=blue, key=0, style=bold];
m12_10 -> m12_11  [key=0, style=solid];
m12_21 -> m12_23  [color=green, key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=2, style=dotted];
m12_16 -> m12_19  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_16  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=2, style=dotted];
m12_11 -> m12_14  [key=2, style=dotted];
m12_12 -> m12_10  [color=blue, key=0, style=bold];
m12_40 -> m12_59  [key=0, style=solid];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_26  [key=2, style=dotted];
m12_60 -> m12_40  [color=blue, key=0, style=bold];
m12_55 -> m12_56  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_15 -> m12_13  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_23 -> m12_24  [color=green, key=0, style=solid];
m12_23 -> m12_36  [color=green, key=2, style=dotted];
m12_23 -> m12_28  [color=green, key=1, label=statesToAppend, style=dashed];
m12_23 -> m12_29  [color=green, key=1, label=statesToAppend, style=dashed];
m12_23 -> m12_31  [color=green, key=1, label=statesToAppend, style=dashed];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_26  [key=2, style=dotted];
m12_24 -> m12_29  [key=0, style=solid];
m12_25 -> m12_23  [color=blue, key=0, style=bold];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m12_25 -> m12_27  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_33  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_26  [key=2, style=dotted];
m12_32 -> m12_31  [key=0, style=solid];
m12_32 -> m12_40  [key=2, style=dotted];
m12_33 -> m12_31  [color=blue, key=0, style=bold];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_41  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_46 -> m12_47  [key=0, style=solid];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_16  [key=2, style=dotted];
m12_45 -> m12_43  [color=blue, key=0, style=bold];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=2, style=dotted];
m12_48 -> m12_46  [color=blue, key=0, style=bold];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_58  [key=2, style=dotted];
m12_57 -> m12_55  [color=blue, key=0, style=bold];
m12_17 -> m12_18  [color=red, key=0, style=solid];
m12_17 -> m12_15  [color=blue, key=0, style=bold];
m12_20 -> m12_17  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>", style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.States.IState", style=dashed];
m12_0 -> m12_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_7  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m12_2 -> d5  [key=2, style=dotted];
m12_2 -> m12_8  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_4 -> d5  [key=2, style=dotted];
m12_4 -> m12_8  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_10  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_11  [key=2, style=dotted];
m12_5 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_0  [color=blue, key=0, style=bold];
m12_7 -> m12_8  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=0, style=solid];
m12_1 -> m12_7  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=0, style=solid];
m12_3 -> m12_9  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_37  [key=2, style=dotted];
m12_28 -> m12_24  [key=0, style=solid];
m12_28 -> m12_38  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_21  [key=2, style=dotted];
m12_28 -> m12_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_34  [key=0, style=solid];
m12_29 -> m12_22  [key=2, style=dotted];
m12_27 -> m12_24  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_39  [key=2, style=dotted];
m12_30 -> m12_32  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m12_30 -> m12_33  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m12_30 -> m12_27  [color=blue, key=0, style=bold];
m12_42 -> m12_27  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_25  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_26  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_30  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_34  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_32  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_5  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_6  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_7  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_11  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_42 -> m12_16  [color=darkseagreen4, key=1, label="HangFire.States.ElectStateContext", style=dashed];
m12_61 -> m12_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m12_61 -> m12_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [color=red, key=1, label=RouteCollection, style=dashed];
m13_1 -> m13_2  [color=red, key=0, style=solid];
m13_1 -> m13_4  [key=2, style=dotted];
m13_2 -> m13_3  [color=red, key=0, style=solid];
m13_2 -> m13_5  [color=red, key=2, style=dotted];
m13_2 -> m13_2  [color=red, key=3, label="Field variable string JobId", style=bold];
m13_3 -> m13_0  [color=blue, key=0, style=bold];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_15  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_15  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_19  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=0, style=solid];
m14_14 -> m14_17  [key=2, style=dotted];
m14_14 -> m14_18  [key=2, style=dotted];
m14_16 -> m14_11  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_20  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_2  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_9  [key=2, style=dotted];
m14_7 -> m14_10  [key=2, style=dotted];
m14_8 -> m14_6  [color=blue, key=0, style=bold];
m14_22 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m14_22 -> m14_4  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m14_22 -> m14_7  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_5  [color=darkseagreen4, key=1, label=connection, style=dashed];
m15_2 -> m15_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_2 -> m15_8  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m15_2 -> m15_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m15_2 -> m15_26  [key=2, style=dotted];
m15_2 -> m15_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [key=0, style=solid];
m15_3 -> m15_27  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [key=0, style=solid];
m15_5 -> m15_21  [color=green, key=1, label=hash, style=dashed];
m15_5 -> m15_28  [key=2, style=dotted];
m15_5 -> m15_29  [key=2, style=dotted];
m15_5 -> m15_9  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_5 -> m15_10  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_5 -> m15_14  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_5 -> m15_15  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_5 -> m15_16  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_5 -> m15_17  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_5 -> m15_22  [color=darkseagreen4, key=1, label=hash, style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_4  [key=0, style=solid];
m15_7 -> m15_31  [key=2, style=dotted];
m15_7 -> m15_30  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_20  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_22  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_23  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_15  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_17  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_18  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_30  [key=2, style=dotted];
m15_8 -> m15_11  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_8 -> m15_13  [color=darkseagreen4, key=1, label=dto, style=dashed];
m15_9 -> m15_10  [key=0, style=solid];
m15_4 -> m15_10  [key=0, style=solid];
m15_4 -> d5  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_24  [key=0, style=solid];
m15_4 -> m15_7  [color=darkseagreen4, key=1, label=id, style=dashed];
m15_4 -> m15_8  [color=darkseagreen4, key=1, label=id, style=dashed];
m15_6 -> m15_10  [key=0, style=solid];
m15_6 -> d5  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=0, style=solid];
m15_10 -> m15_2  [color=blue, key=0, style=bold];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_32  [key=2, style=dotted];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_25  [key=2, style=dotted];
m15_21 -> m15_22  [color=green, key=0, style=solid];
m15_21 -> m15_23  [color=green, key=0, style=solid];
m15_21 -> m15_34  [color=green, key=2, style=dotted];
m15_16 -> m15_21  [color=green, key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_34  [key=2, style=dotted];
m15_20 -> m15_21  [color=green, key=0, style=solid];
m15_19 -> m15_21  [color=green, key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_35  [key=2, style=dotted];
m15_23 -> m15_4  [key=0, style=solid];
m15_23 -> m15_31  [key=2, style=dotted];
m15_14 -> m15_16  [key=0, style=solid];
m15_14 -> m15_34  [key=2, style=dotted];
m15_14 -> m15_15  [key=0, style=solid];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_35  [key=2, style=dotted];
m15_17 -> m15_18  [key=0, style=solid];
m15_18 -> m15_20  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_36  [key=2, style=dotted];
m15_11 -> m15_14  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_33  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_7  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m15_12 -> m15_8  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m15_12 -> m15_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m15_24 -> m15_0  [color=blue, key=0, style=bold];
m15_37 -> m15_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m15_37 -> m15_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m15_37 -> m15_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m16_3 -> m16_8  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> n32  [key=2, style=dotted];
m16_4 -> m16_6  [color=red, key=1, label=transaction, style=dashed];
m16_4 -> m16_7  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_4 -> m16_9  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_4 -> m16_10  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_4 -> m16_11  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m16_5 -> m16_6  [color=red, key=0, style=solid];
m16_5 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_11  [key=0, style=solid];
m16_6 -> m16_7  [color=red, key=0, style=solid];
m16_6 -> m16_14  [color=red, key=2, style=dotted];
m16_6 -> m16_15  [color=red, key=2, style=dotted];
m16_6 -> m16_16  [color=red, key=2, style=dotted];
m16_6 -> m16_17  [color=red, key=2, style=dotted];
m16_7 -> m16_11  [key=0, style=solid];
m16_7 -> m16_14  [key=2, style=dotted];
m16_7 -> m16_15  [key=2, style=dotted];
m16_7 -> m16_18  [key=2, style=dotted];
m16_7 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_14  [key=2, style=dotted];
m16_9 -> m16_15  [key=2, style=dotted];
m16_9 -> m16_16  [key=2, style=dotted];
m16_9 -> m16_17  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_14  [key=2, style=dotted];
m16_10 -> m16_15  [key=2, style=dotted];
m16_10 -> m16_18  [key=2, style=dotted];
m16_10 -> m16_17  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_19  [key=2, style=dotted];
m16_12 -> m16_3  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_20 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.Filters.StatisticsHistoryFilterAttribute", style=dashed];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_11  [key=2, style=dotted];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_19  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m17_16 -> m17_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m17_16 -> m17_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_16 -> m17_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m17_16 -> m17_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m17_16 -> m17_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m17_16 -> m17_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_16 -> m17_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_16 -> m17_18  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m17_16 -> m17_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_19  [key=0, style=solid];
m17_17 -> m17_34  [key=2, style=dotted];
m17_17 -> m17_24  [key=2, style=dotted];
m17_17 -> m17_13  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=0, style=solid];
m17_19 -> m17_13  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_23  [key=0, style=solid];
m17_21 -> m17_14  [color=blue, key=0, style=bold];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_25  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_27  [key=0, style=solid];
m17_25 -> m17_35  [key=2, style=dotted];
m17_26 -> m17_33  [key=0, style=solid];
m17_26 -> m17_36  [key=2, style=dotted];
m17_26 -> m17_37  [key=2, style=dotted];
m17_26 -> m17_27  [color=green, key=0, style=solid];
m17_27 -> m17_28  [color=green, key=0, style=solid];
m17_27 -> m17_38  [key=2, style=dotted];
m17_27 -> m17_7  [color=green, key=2, style=dotted];
m17_27 -> m17_12  [color=green, key=2, style=dotted];
m17_28 -> m17_29  [color=green, key=0, style=solid];
m17_28 -> m17_39  [key=2, style=dotted];
m17_28 -> m17_40  [key=2, style=dotted];
m17_28 -> m17_30  [color=green, key=2, style=dotted];
m17_30 -> m17_33  [key=0, style=solid];
m17_18 -> m17_33  [key=0, style=solid];
m17_18 -> d5  [key=2, style=dotted];
m17_18 -> m17_13  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_20 -> m17_33  [key=0, style=solid];
m17_20 -> d5  [key=2, style=dotted];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_25  [key=2, style=dotted];
m17_20 -> m17_13  [key=2, style=dotted];
m17_22 -> m17_33  [key=0, style=solid];
m17_22 -> d5  [key=2, style=dotted];
m17_24 -> m17_33  [key=0, style=solid];
m17_24 -> d5  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_41  [key=2, style=dotted];
m17_29 -> m17_26  [color=blue, key=0, style=bold];
m17_31 -> m17_32  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_42  [key=2, style=dotted];
m17_33 -> m17_16  [color=blue, key=0, style=bold];
m17_43 -> m17_44  [key=0, style=solid];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_46  [key=2, style=dotted];
m17_45 -> m17_43  [color=blue, key=0, style=bold];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [key=2, style=dotted];
m17_13 -> m17_16  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_16  [color=darkorchid, key=3, label="method methodReturn string CreateJob", style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_7  [key=2, style=dotted];
m17_9 -> m17_12  [key=2, style=dotted];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_2  [color=blue, key=0, style=bold];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_13  [key=2, style=dotted];
m17_11 -> m17_8  [color=blue, key=0, style=bold];
m17_38 -> m17_47  [key=0, style=solid];
m17_38 -> m17_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m17_38 -> m17_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_54  [key=2, style=dotted];
m17_47 -> m17_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_47 -> m17_50  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_47 -> m17_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_47 -> m17_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_48 -> m17_49  [key=0, style=solid];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_55  [key=2, style=dotted];
m17_50 -> m17_51  [key=0, style=solid];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_56  [key=2, style=dotted];
m17_52 -> m17_53  [key=0, style=solid];
m17_53 -> m17_38  [color=blue, key=0, style=bold];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_5  [key=0, style=solid];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m17_1 -> m17_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m17_2 -> m17_7  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m17_2 -> m17_8  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=0, style=solid];
m17_4 -> m17_9  [key=0, style=solid];
m17_4 -> d5  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_6 -> m17_9  [key=0, style=solid];
m17_6 -> d5  [key=2, style=dotted];
m17_6 -> m17_4  [color=blue, key=0, style=bold];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_12  [color=blue, key=0, style=bold];
m17_15 -> m17_7  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_22  [key=2, style=dotted];
m17_15 -> m17_17  [color=darkseagreen4, key=1, label=state, style=dashed];
m17_15 -> m17_20  [color=darkseagreen4, key=1, label=state, style=dashed];
m17_15 -> m17_57  [key=0, style=solid];
m17_15 -> m17_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m17_15 -> m17_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m17_15 -> m17_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_54  [key=2, style=dotted];
m17_57 -> m17_59  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_57 -> m17_68  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_57 -> m17_69  [color=darkseagreen4, key=1, label=result, style=dashed];
m17_58 -> m17_59  [key=0, style=solid];
m17_58 -> m17_60  [key=0, style=solid];
m17_60 -> m17_61  [key=0, style=solid];
m17_60 -> m17_69  [key=0, style=solid];
m17_60 -> m17_71  [key=2, style=dotted];
m17_60 -> m17_67  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m17_60 -> m17_68  [color=darkseagreen4, key=1, label=descriptor, style=dashed];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_72  [key=2, style=dotted];
m17_61 -> m17_63  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m17_61 -> m17_64  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m17_61 -> m17_65  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m17_59 -> m17_70  [key=0, style=solid];
m17_68 -> m17_60  [key=0, style=solid];
m17_68 -> m17_77  [key=2, style=dotted];
m17_69 -> m17_70  [key=0, style=solid];
m17_67 -> m17_70  [key=0, style=solid];
m17_67 -> m17_76  [key=2, style=dotted];
m17_67 -> m17_37  [key=2, style=dotted];
m17_67 -> m17_69  [color=darkorchid, key=3, label="method methodReturn IAppBuilder UseHangfireDashboard", style=bold];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_68  [color=darkseagreen4, key=1, label=value, style=dashed];
m17_62 -> m17_62  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_68  [key=0, style=solid];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_73  [key=2, style=dotted];
m17_64 -> m17_74  [key=2, style=dotted];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_68  [key=0, style=solid];
m17_65 -> m17_75  [key=2, style=dotted];
m17_66 -> m17_67  [key=0, style=solid];
m17_70 -> m17_15  [color=blue, key=0, style=bold];
m17_78 -> m17_7  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m17_78 -> m17_8  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m17_78 -> m17_13  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m17_78 -> m17_28  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m17_78 -> m17_29  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m17_78 -> m17_44  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_2  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_4  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_2 -> m22_5  [key=0, style=solid];
m22_2 -> d5  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_5 -> m22_0  [color=blue, key=0, style=bold];
m22_7 -> m22_8  [key=0, style=solid];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_10  [key=2, style=dotted];
m22_8 -> m22_11  [key=2, style=dotted];
m22_8 -> m22_12  [key=2, style=dotted];
m22_8 -> m22_13  [key=2, style=dotted];
m22_9 -> m22_7  [color=blue, key=0, style=bold];
m22_14 -> m22_3  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m22_14 -> m22_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m22_14 -> m22_8  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m25_51 -> m25_52  [key=0, style=solid];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_62  [key=2, style=dotted];
m25_53 -> m25_54  [key=0, style=solid];
m25_53 -> m25_32  [key=2, style=dotted];
m25_54 -> m25_55  [key=0, style=solid];
m25_54 -> m25_57  [key=0, style=solid];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_63  [key=2, style=dotted];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_44  [key=2, style=dotted];
m25_56 -> m25_54  [key=0, style=solid];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_64  [key=2, style=dotted];
m25_58 -> m25_59  [key=0, style=solid];
m25_58 -> m25_61  [key=0, style=solid];
m25_58 -> m25_65  [key=2, style=dotted];
m25_59 -> m25_60  [key=0, style=solid];
m25_60 -> m25_61  [key=0, style=solid];
m25_60 -> m25_66  [key=2, style=dotted];
m25_61 -> m25_51  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_2  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m25_0 -> m25_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_0 -> m25_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m25_0 -> m25_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_0 -> m25_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m25_0 -> m25_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_0 -> m25_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_0 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_15  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_8  [key=0, style=solid];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_10  [key=0, style=solid];
m25_8 -> m25_17  [key=2, style=dotted];
m25_8 -> m25_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_19  [key=2, style=dotted];
m25_10 -> m25_20  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_21  [key=2, style=dotted];
m25_11 -> m25_22  [key=2, style=dotted];
m25_11 -> m25_23  [key=2, style=dotted];
m25_7 -> m25_14  [key=0, style=solid];
m25_7 -> d5  [key=2, style=dotted];
m25_9 -> m25_14  [key=0, style=solid];
m25_9 -> m25_18  [key=2, style=dotted];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_24  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_25  [key=2, style=dotted];
m25_14 -> m25_0  [color=blue, key=0, style=bold];
m25_26 -> m25_27  [key=0, style=solid];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_30  [key=2, style=dotted];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_31  [key=2, style=dotted];
m25_29 -> m25_26  [color=blue, key=0, style=bold];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_85  [key=2, style=dotted];
m25_94 -> m25_88  [key=2, style=dotted];
m25_94 -> m25_96  [key=2, style=dotted];
m25_63 -> m25_94  [key=0, style=solid];
m25_95 -> m25_63  [color=blue, key=0, style=bold];
m25_99 -> m25_100  [key=0, style=solid];
m25_99 -> m25_76  [key=2, style=dotted];
m25_99 -> m25_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_65 -> m25_97  [key=0, style=solid];
m25_65 -> m25_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_65 -> m25_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_65 -> m25_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_65 -> m25_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_97 -> m25_98  [key=0, style=solid];
m25_97 -> m25_75  [key=2, style=dotted];
m25_97 -> m25_99  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_97 -> m25_100  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_98 -> m25_99  [key=0, style=solid];
m25_98 -> m25_76  [key=2, style=dotted];
m25_98 -> m25_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_100 -> m25_101  [key=0, style=solid];
m25_100 -> m25_77  [key=2, style=dotted];
m25_101 -> m25_65  [color=blue, key=0, style=bold];
m25_44 -> m25_45  [key=0, style=solid];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_50  [key=2, style=dotted];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_50  [key=2, style=dotted];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_50  [key=2, style=dotted];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_50  [key=2, style=dotted];
m25_49 -> m25_44  [color=blue, key=0, style=bold];
m25_62 -> m25_67  [key=0, style=solid];
m25_67 -> m25_68  [key=0, style=solid];
m25_67 -> m25_75  [key=2, style=dotted];
m25_67 -> m25_69  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_67 -> m25_72  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_67 -> m25_73  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_68 -> m25_69  [key=0, style=solid];
m25_68 -> m25_76  [key=2, style=dotted];
m25_68 -> m25_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_69 -> m25_70  [key=0, style=solid];
m25_69 -> m25_76  [key=2, style=dotted];
m25_69 -> m25_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_69 -> m25_34  [color=darkorchid, key=3, label="Local variable string test", style=bold];
m25_72 -> m25_70  [key=0, style=solid];
m25_72 -> m25_76  [key=2, style=dotted];
m25_72 -> m25_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_73 -> m25_74  [key=0, style=solid];
m25_73 -> m25_77  [key=2, style=dotted];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> m25_73  [key=0, style=solid];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_91  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m25_74 -> m25_62  [color=blue, key=0, style=bold];
m25_32 -> m25_33  [key=0, style=solid];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_38  [key=2, style=dotted];
m25_33 -> m25_39  [key=2, style=dotted];
m25_33 -> m25_40  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_38  [key=2, style=dotted];
m25_34 -> m25_41  [key=2, style=dotted];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_38  [key=2, style=dotted];
m25_35 -> m25_42  [key=2, style=dotted];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_38  [key=2, style=dotted];
m25_36 -> m25_43  [key=2, style=dotted];
m25_37 -> m25_32  [color=blue, key=0, style=bold];
m25_106 -> m25_107  [key=0, style=solid];
m25_78 -> m25_79  [key=0, style=solid];
m25_82 -> m25_83  [key=0, style=solid];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_85  [key=2, style=dotted];
m25_91 -> m25_93  [key=2, style=dotted];
m25_90 -> m25_91  [key=0, style=solid];
m25_79 -> m25_80  [key=0, style=solid];
m25_79 -> m25_81  [key=2, style=dotted];
m25_80 -> m25_78  [color=blue, key=0, style=bold];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_85  [key=2, style=dotted];
m25_83 -> m25_86  [key=2, style=dotted];
m25_83 -> m25_87  [key=2, style=dotted];
m25_83 -> m25_88  [key=2, style=dotted];
m25_83 -> m25_89  [key=2, style=dotted];
m25_84 -> m25_82  [color=blue, key=0, style=bold];
m25_92 -> m25_90  [color=blue, key=0, style=bold];
m25_103 -> m25_104  [key=0, style=solid];
m25_103 -> m25_105  [key=2, style=dotted];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_85  [key=2, style=dotted];
m25_107 -> m25_109  [key=2, style=dotted];
m25_102 -> m25_103  [key=0, style=solid];
m25_104 -> m25_102  [color=blue, key=0, style=bold];
m25_108 -> m25_106  [color=blue, key=0, style=bold];
m25_110 -> m25_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_4  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_5  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_12  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_13  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_27  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_28  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_33  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_35  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_36  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_52  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_53  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_55  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_67  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_68  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_79  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_83  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_70  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_72  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_91  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_110 -> m25_94  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m25_111 -> m25_91  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m25_112 -> m25_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_112 -> m25_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_81  [key=2, style=dotted];
m27_8 -> m27_20  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_3  [key=2, style=dotted];
m27_9 -> m27_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_9 -> m27_74  [key=2, style=dotted];
m27_10 -> m27_8  [color=blue, key=0, style=bold];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_12  [key=0, style=solid];
m27_29 -> m27_74  [key=2, style=dotted];
m27_29 -> m27_30  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_74  [key=2, style=dotted];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_18  [key=2, style=dotted];
m27_15 -> m27_80  [key=2, style=dotted];
m27_15 -> m27_82  [key=2, style=dotted];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_19  [key=2, style=dotted];
m27_16 -> m27_74  [key=2, style=dotted];
m27_17 -> m27_14  [color=blue, key=0, style=bold];
m27_17 -> m27_85  [key=2, style=dotted];
m27_17 -> m27_18  [key=0, style=solid];
m27_17 -> m27_83  [key=2, style=dotted];
m27_17 -> m27_84  [key=2, style=dotted];
m27_19 -> m27_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m27_19 -> m27_20  [key=0, style=solid];
m27_0 -> m27_1  [key=0, style=solid];
m27_39 -> m27_39  [color=green, key=1, label=job, style=dashed];
m27_39 -> m27_40  [color=green, key=0, style=solid];
m27_39 -> m27_41  [color=green, key=0, style=solid];
m27_39 -> m27_42  [color=green, key=1, label=job, style=dashed];
m27_39 -> m27_7  [key=2, style=dotted];
m27_37 -> m27_39  [color=green, key=1, label=job, style=dashed];
m27_37 -> m27_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_86  [key=2, style=dotted];
m27_37 -> m27_85  [key=2, style=dotted];
m27_37 -> m27_34  [key=2, style=dotted];
m27_38 -> m27_39  [color=green, key=0, style=solid];
m27_38 -> m27_74  [key=2, style=dotted];
m27_38 -> m27_35  [color=blue, key=0, style=bold];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_74  [key=2, style=dotted];
m27_40 -> m27_18  [color=blue, key=0, style=bold];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_74  [key=2, style=dotted];
m27_41 -> m27_15  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ProcessingStateFacts", style=dashed];
m27_41 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ProcessingStateFacts", style=dashed];
m27_41 -> m27_31  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ProcessingStateFacts", style=dashed];
m27_41 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ProcessingStateFacts", style=dashed];
m27_42 -> m27_49  [color=green, key=1, label=job, style=dashed];
m27_42 -> m27_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_48  [key=0, style=solid];
m27_42 -> m27_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_49 -> m27_49  [color=green, key=1, label=job, style=dashed];
m27_49 -> m27_50  [color=green, key=0, style=solid];
m27_49 -> m27_80  [color=green, key=2, style=dotted];
m27_49 -> m27_82  [color=green, key=2, style=dotted];
m27_49 -> m27_51  [color=green, key=1, label=job, style=dashed];
m27_48 -> m27_49  [color=green, key=0, style=solid];
m27_48 -> m27_74  [key=2, style=dotted];
m27_46 -> m27_49  [color=green, key=1, label=job, style=dashed];
m27_46 -> m27_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_46 -> m27_47  [key=0, style=solid];
m27_46 -> m27_82  [key=2, style=dotted];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_74  [key=2, style=dotted];
m27_51 -> m27_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_88  [key=2, style=dotted];
m27_51 -> m27_85  [key=2, style=dotted];
m27_51 -> m27_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_35 -> m27_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_35 -> m27_80  [key=2, style=dotted];
m27_35 -> m27_82  [key=2, style=dotted];
m27_35 -> m27_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_35 -> m27_36  [key=0, style=solid];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_74  [key=2, style=dotted];
m27_36 -> m27_18  [key=2, style=dotted];
m27_43 -> m27_74  [key=2, style=dotted];
m27_43 -> m27_44  [key=0, style=solid];
m27_44 -> m27_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_44 -> m27_82  [key=2, style=dotted];
m27_44 -> m27_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_87  [key=2, style=dotted];
m27_1 -> m27_74  [key=2, style=dotted];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=2, style=dotted];
m27_1 -> m27_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_75  [key=2, style=dotted];
m27_2 -> m27_0  [color=blue, key=0, style=bold];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_76  [key=2, style=dotted];
m27_4 -> m27_7  [color=darkseagreen4, key=1, label=from, style=dashed];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_76  [key=2, style=dotted];
m27_5 -> m27_7  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m27_7 -> m27_80  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_78  [key=2, style=dotted];
m27_7 -> m27_79  [key=2, style=dotted];
m27_7 -> m27_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m27_7 -> m27_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m27_7 -> m27_72  [color=darkseagreen4, key=1, label=pager, style=dashed];
m27_11 -> m27_74  [key=2, style=dotted];
m27_11 -> m27_73  [key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_12 -> m27_74  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_7  [key=2, style=dotted];
m27_13 -> m27_80  [key=2, style=dotted];
m27_13 -> m27_82  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_13 -> m27_11  [color=blue, key=0, style=bold];
m27_18 -> m27_74  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_39  [key=0, style=solid];
m27_21 -> m27_74  [key=2, style=dotted];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_18  [key=2, style=dotted];
m27_21 -> m27_23  [color=darkseagreen4, key=1, label=state, style=dashed];
m27_22 -> m27_82  [key=2, style=dotted];
m27_22 -> m27_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_24  [color=darkseagreen4, key=1, label=data, style=dashed];
m27_22 -> m27_27  [key=2, style=dotted];
m27_22 -> m27_25  [color=darkseagreen4, key=1, label=data, style=dashed];
m27_23 -> m27_74  [key=2, style=dotted];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_28  [key=2, style=dotted];
m27_23 -> m27_19  [key=2, style=dotted];
m27_24 -> m27_82  [key=2, style=dotted];
m27_24 -> m27_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_24 -> m27_25  [key=0, style=solid];
m27_24 -> m27_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_24 -> m27_19  [key=2, style=dotted];
m27_25 -> m27_74  [key=2, style=dotted];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_29  [key=2, style=dotted];
m27_25 -> m27_19  [key=2, style=dotted];
m27_26 -> m27_82  [key=2, style=dotted];
m27_26 -> m27_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_26 -> m27_20  [color=blue, key=0, style=bold];
m27_27 -> m27_74  [key=2, style=dotted];
m27_27 -> m27_28  [key=0, style=solid];
m27_30 -> m27_82  [key=2, style=dotted];
m27_30 -> m27_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_31 -> m27_74  [key=2, style=dotted];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_18  [key=2, style=dotted];
m27_32 -> m27_74  [key=2, style=dotted];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_34  [key=2, style=dotted];
m27_33 -> m27_82  [key=2, style=dotted];
m27_33 -> m27_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_33 -> m27_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_30  [color=blue, key=0, style=bold];
m27_34 -> m27_35  [key=0, style=solid];
m27_34 -> m27_74  [key=2, style=dotted];
m27_45 -> m27_46  [key=0, style=solid];
m27_45 -> m27_74  [key=2, style=dotted];
m27_47 -> m27_48  [key=0, style=solid];
m27_47 -> m27_74  [key=2, style=dotted];
m27_52 -> m27_74  [key=2, style=dotted];
m27_52 -> m27_53  [key=0, style=solid];
m27_54 -> m27_74  [key=2, style=dotted];
m27_54 -> m27_55  [key=0, style=solid];
m27_55 -> m27_82  [key=2, style=dotted];
m27_55 -> m27_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_55 -> m27_56  [key=0, style=solid];
m27_55 -> m27_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_56 -> m27_74  [key=2, style=dotted];
m27_56 -> m27_57  [key=0, style=solid];
m27_57 -> m27_74  [key=2, style=dotted];
m27_57 -> m27_58  [key=0, style=solid];
m27_59 -> m27_74  [key=2, style=dotted];
m27_59 -> m27_60  [key=0, style=solid];
m27_60 -> m27_82  [key=2, style=dotted];
m27_60 -> m27_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m27_60 -> m27_61  [key=0, style=solid];
m27_61 -> m27_74  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_62 -> m27_82  [key=2, style=dotted];
m27_62 -> m27_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_63 -> m27_74  [key=2, style=dotted];
m27_63 -> m27_64  [key=0, style=solid];
m27_64 -> m27_82  [key=2, style=dotted];
m27_64 -> m27_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_64 -> m27_65  [key=0, style=solid];
m27_64 -> m27_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_65 -> m27_74  [key=2, style=dotted];
m27_65 -> m27_66  [key=0, style=solid];
m27_67 -> m27_74  [key=2, style=dotted];
m27_67 -> m27_68  [key=0, style=solid];
m27_68 -> m27_85  [key=2, style=dotted];
m27_68 -> m27_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_90  [key=2, style=dotted];
m27_69 -> m27_74  [key=2, style=dotted];
m27_69 -> m27_70  [key=0, style=solid];
m27_70 -> m27_74  [key=2, style=dotted];
m27_70 -> m27_20  [key=0, style=solid];
m27_71 -> m27_74  [key=2, style=dotted];
m27_71 -> m27_72  [key=0, style=solid];
m27_72 -> m27_85  [key=2, style=dotted];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_91  [key=2, style=dotted];
m27_72 -> m27_84  [key=2, style=dotted];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_53 -> m27_57  [key=0, style=solid];
m27_53 -> m27_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_53 -> m27_89  [key=2, style=dotted];
m27_53 -> m27_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_3 -> m27_4  [key=0, style=solid];
m27_6 -> m27_7  [key=0, style=solid];
m27_6 -> m27_77  [key=2, style=dotted];
m27_6 -> m27_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m27_6 -> m27_4  [color=blue, key=0, style=bold];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_20 -> m27_71  [key=0, style=solid];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_28 -> m27_32  [key=0, style=solid];
m27_28 -> m27_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_28 -> m27_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_58 -> m27_20  [key=0, style=solid];
m27_58 -> m27_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_66 -> m27_67  [key=0, style=solid];
m27_66 -> m27_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_66 -> m27_70  [key=0, style=solid];
m27_66 -> m27_66  [color=darkseagreen4, key=1, label=job, style=dashed];
m27_66 -> m27_89  [key=2, style=dotted];
m27_73 -> m27_0  [color=blue, key=0, style=bold];
m27_92 -> m27_49  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_62  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_67  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_70  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m27_92 -> m27_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m28_36 -> m28_37  [color=red, key=0, style=solid];
m28_37 -> m28_38  [color=red, key=0, style=solid];
m28_37 -> m28_15  [color=red, key=2, style=dotted];
m28_37 -> m28_40  [color=red, key=1, label="lambda expression", style=dashed];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_24  [key=2, style=dotted];
m28_39 -> m28_36  [color=blue, key=0, style=bold];
m28_95 -> m28_96  [key=0, style=solid];
m28_96 -> m28_97  [key=0, style=solid];
m28_96 -> m28_100  [key=2, style=dotted];
m28_96 -> m28_101  [key=2, style=dotted];
m28_96 -> m28_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_97 -> m28_98  [key=0, style=solid];
m28_97 -> m28_50  [key=2, style=dotted];
m28_97 -> m28_107  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_98 -> m28_99  [key=0, style=solid];
m28_98 -> m28_15  [key=2, style=dotted];
m28_98 -> m28_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_99 -> m28_95  [color=blue, key=0, style=bold];
m28_50 -> m28_109  [color=red, key=0, style=solid];
m28_109 -> m28_110  [color=red, key=0, style=solid];
m28_109 -> m28_19  [color=red, key=2, style=dotted];
m28_110 -> m28_50  [color=blue, key=0, style=bold];
m28_11 -> m28_111  [key=0, style=solid];
m28_111 -> m28_11  [color=blue, key=0, style=bold];
m28_43 -> m28_44  [key=0, style=solid];
m28_44 -> m28_45  [key=0, style=solid];
m28_44 -> m28_50  [key=2, style=dotted];
m28_44 -> m28_46  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_44 -> m28_47  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_44 -> m28_48  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_45 -> m28_46  [key=0, style=solid];
m28_45 -> m28_51  [key=2, style=dotted];
m28_46 -> m28_47  [key=0, style=solid];
m28_46 -> m28_52  [key=2, style=dotted];
m28_47 -> m28_48  [key=0, style=solid];
m28_47 -> m28_24  [key=2, style=dotted];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_52  [key=2, style=dotted];
m28_49 -> m28_43  [color=blue, key=0, style=bold];
m28_53 -> m28_54  [key=0, style=solid];
m28_54 -> m28_55  [key=0, style=solid];
m28_54 -> m28_15  [key=2, style=dotted];
m28_54 -> m28_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_55 -> m28_53  [color=blue, key=0, style=bold];
m28_29 -> m28_30  [color=red, key=0, style=solid];
m28_30 -> m28_31  [color=red, key=0, style=solid];
m28_30 -> m28_15  [color=red, key=2, style=dotted];
m28_30 -> m28_33  [color=red, key=1, label="lambda expression", style=dashed];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_24  [key=2, style=dotted];
m28_32 -> m28_29  [color=blue, key=0, style=bold];
m28_60 -> m28_61  [key=0, style=solid];
m28_61 -> m28_62  [key=0, style=solid];
m28_61 -> m28_50  [key=2, style=dotted];
m28_61 -> m28_63  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_61 -> m28_64  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_61 -> m28_65  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_61 -> m28_66  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_62 -> m28_63  [key=0, style=solid];
m28_62 -> m28_59  [key=2, style=dotted];
m28_62 -> m28_64  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m28_62 -> m28_65  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m28_62 -> m28_66  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m28_63 -> m28_64  [key=0, style=solid];
m28_63 -> m28_52  [key=2, style=dotted];
m28_64 -> m28_65  [key=0, style=solid];
m28_64 -> m28_52  [key=2, style=dotted];
m28_65 -> m28_66  [key=0, style=solid];
m28_65 -> m28_52  [key=2, style=dotted];
m28_66 -> m28_67  [key=0, style=solid];
m28_66 -> m28_52  [key=2, style=dotted];
m28_67 -> m28_60  [color=blue, key=0, style=bold];
m28_77 -> m28_78  [key=0, style=solid];
m28_78 -> m28_79  [key=0, style=solid];
m28_78 -> m28_50  [key=2, style=dotted];
m28_79 -> m28_80  [key=0, style=solid];
m28_79 -> m28_76  [key=2, style=dotted];
m28_80 -> m28_81  [key=0, style=solid];
m28_80 -> m28_82  [key=2, style=dotted];
m28_80 -> m28_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_81 -> m28_77  [color=blue, key=0, style=bold];
m28_12 -> m28_13  [key=0, style=solid];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_15  [key=2, style=dotted];
m28_13 -> m28_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_14 -> m28_12  [color=blue, key=0, style=bold];
m28_106 -> m28_107  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_11  [key=2, style=dotted];
m28_10 -> m28_8  [color=blue, key=0, style=bold];
m28_16 -> m28_17  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_19  [key=2, style=dotted];
m28_18 -> m28_16  [color=blue, key=0, style=bold];
m28_25 -> m28_26  [color=red, key=0, style=solid];
m28_26 -> m28_27  [color=red, key=0, style=solid];
m28_26 -> m28_28  [color=red, key=2, style=dotted];
m28_27 -> m28_25  [color=blue, key=0, style=bold];
m28_33 -> m28_34  [color=red, key=0, style=solid];
m28_34 -> m28_35  [color=red, key=0, style=solid];
m28_34 -> m28_19  [color=red, key=2, style=dotted];
m28_35 -> m28_33  [color=blue, key=0, style=bold];
m28_40 -> m28_41  [color=red, key=0, style=solid];
m28_41 -> m28_42  [color=red, key=0, style=solid];
m28_41 -> m28_19  [color=red, key=2, style=dotted];
m28_42 -> m28_40  [color=blue, key=0, style=bold];
m28_56 -> m28_57  [key=0, style=solid];
m28_57 -> m28_58  [key=0, style=solid];
m28_57 -> m28_59  [key=2, style=dotted];
m28_58 -> m28_56  [color=blue, key=0, style=bold];
m28_74 -> m28_75  [key=0, style=solid];
m28_74 -> m28_76  [key=2, style=dotted];
m28_73 -> m28_74  [key=0, style=solid];
m28_75 -> m28_73  [color=blue, key=0, style=bold];
m28_83 -> m28_84  [key=0, style=solid];
m28_84 -> m28_85  [key=0, style=solid];
m28_84 -> m28_86  [key=2, style=dotted];
m28_85 -> m28_83  [color=blue, key=0, style=bold];
m28_92 -> m28_93  [key=0, style=solid];
m28_92 -> m28_94  [key=2, style=dotted];
m28_91 -> m28_92  [key=0, style=solid];
m28_93 -> m28_91  [color=blue, key=0, style=bold];
m28_102 -> m28_103  [key=0, style=solid];
m28_107 -> m28_108  [key=0, style=solid];
m28_107 -> m28_94  [key=2, style=dotted];
m28_103 -> m28_104  [key=0, style=solid];
m28_103 -> m28_105  [key=2, style=dotted];
m28_104 -> m28_102  [color=blue, key=0, style=bold];
m28_108 -> m28_106  [color=blue, key=0, style=bold];
m28_87 -> m28_88  [key=0, style=solid];
m28_88 -> m28_89  [key=0, style=solid];
m28_88 -> m28_50  [key=2, style=dotted];
m28_88 -> m28_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_89 -> m28_90  [key=0, style=solid];
m28_89 -> m28_15  [key=2, style=dotted];
m28_89 -> m28_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_90 -> m28_87  [color=blue, key=0, style=bold];
m28_20 -> m28_21  [color=red, key=0, style=solid];
m28_21 -> m28_22  [color=red, key=0, style=solid];
m28_21 -> m28_15  [color=red, key=2, style=dotted];
m28_21 -> m28_25  [color=red, key=1, label="lambda expression", style=dashed];
m28_22 -> m28_23  [key=0, style=solid];
m28_22 -> m28_24  [key=2, style=dotted];
m28_23 -> m28_20  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [color=red, key=0, style=solid];
m28_1 -> m28_2  [color=red, key=0, style=solid];
m28_1 -> m28_5  [color=red, key=2, style=dotted];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_6  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_7  [key=2, style=dotted];
m28_3 -> m28_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_4 -> m28_0  [color=blue, key=0, style=bold];
m28_68 -> m28_69  [key=0, style=solid];
m28_69 -> m28_70  [key=0, style=solid];
m28_69 -> m28_50  [key=2, style=dotted];
m28_69 -> m28_74  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_70 -> m28_71  [key=0, style=solid];
m28_70 -> m28_15  [key=2, style=dotted];
m28_70 -> m28_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_71 -> m28_72  [key=0, style=solid];
m28_71 -> m28_24  [key=2, style=dotted];
m28_72 -> m28_68  [color=blue, key=0, style=bold];
m28_112 -> m28_1  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_17  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_21  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_26  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_30  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_34  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_37  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_41  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_61  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_80  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_88  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_112 -> m28_109  [color=red, key=1, label="HangFire.Core.Tests.Server.PerformContextFacts", style=dashed];
m28_113 -> m28_74  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_114 -> m28_92  [color=darkseagreen4, key=1, label=context, style=dashed];
m28_115 -> m28_107  [color=darkseagreen4, key=1, label=context, style=dashed];
m29_0 -> m29_7  [color=green, key=1, label="Hangfire.JobStorage", style=dashed];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m29_0 -> m29_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_0 -> m29_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m29_7 -> m29_8  [color=green, key=0, style=solid];
m29_6 -> m29_7  [color=green, key=0, style=solid];
m29_8 -> m29_9  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_11  [key=2, style=dotted];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=0, style=solid];
m29_3 -> m29_5  [key=0, style=solid];
m29_3 -> m29_4  [key=0, style=solid];
m29_2 -> m29_9  [key=0, style=solid];
m29_2 -> d5  [key=2, style=dotted];
m29_4 -> m29_9  [key=0, style=solid];
m29_4 -> d5  [key=2, style=dotted];
m29_9 -> m29_0  [color=blue, key=0, style=bold];
m29_12 -> m29_7  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m29_12 -> m29_5  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m29_12 -> m29_6  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m29_12 -> m29_8  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=0, style=solid];
m30_3 -> m30_4  [key=0, style=solid];
m30_2 -> m30_4  [key=0, style=solid];
m30_2 -> d5  [key=2, style=dotted];
m30_4 -> m30_0  [color=blue, key=0, style=bold];
m30_6 -> m30_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m31_8 -> m31_9  [key=0, style=solid];
m31_8 -> m31_15  [key=2, style=dotted];
m31_9 -> m31_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_3  [key=2, style=dotted];
m31_9 -> m31_16  [key=2, style=dotted];
m31_9 -> m31_17  [key=2, style=dotted];
m31_10 -> m31_8  [color=blue, key=0, style=bold];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_12  [key=0, style=solid];
m31_17 -> m31_14  [color=blue, key=0, style=bold];
m31_3 -> m31_4  [key=0, style=solid];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_21  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m31_19 -> m31_23  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_15  [key=2, style=dotted];
m31_20 -> m31_7  [key=2, style=dotted];
m31_20 -> m31_22  [color=darkseagreen4, key=1, label=state, style=dashed];
m31_20 -> m31_23  [color=darkseagreen4, key=1, label=state, style=dashed];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_16  [key=2, style=dotted];
m31_21 -> m31_17  [key=2, style=dotted];
m31_21 -> m31_25  [key=2, style=dotted];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_18  [key=2, style=dotted];
m31_22 -> m31_23  [key=0, style=solid];
m31_22 -> m31_24  [key=0, style=solid];
m31_22 -> m31_26  [key=2, style=dotted];
m31_22 -> m31_18  [key=2, style=dotted];
m31_24 -> m31_19  [color=blue, key=0, style=bold];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_18  [key=2, style=dotted];
m31_7 -> m31_8  [key=0, style=solid];
m31_7 -> m31_11  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m31_11 -> m31_12  [key=0, style=solid];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_14  [key=0, style=solid];
m31_12 -> m31_7  [key=2, style=dotted];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_18  [key=2, style=dotted];
m31_13 -> m31_11  [color=blue, key=0, style=bold];
m31_14 -> m31_7  [color=blue, key=0, style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_27 -> m31_28  [color=green, key=0, style=solid];
m31_28 -> m31_29  [color=green, key=0, style=solid];
m31_28 -> m31_7  [color=green, key=2, style=dotted];
m31_29 -> m31_30  [color=green, key=0, style=solid];
m31_29 -> m31_31  [color=green, key=2, style=dotted];
m31_30 -> m31_27  [color=blue, key=0, style=bold];
m31_15 -> m31_7  [key=2, style=dotted];
m31_15 -> m31_16  [key=0, style=solid];
m31_25 -> m31_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_4  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_5  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_10  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_21  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_25 -> m31_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m31_0 -> m31_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_0 -> m31_4  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_0 -> m31_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_1 -> m31_3  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_0  [color=blue, key=0, style=bold];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_7  [key=2, style=dotted];
m31_6 -> m31_0  [color=blue, key=0, style=bold];
m31_6 -> m31_4  [color=blue, key=0, style=bold];
m33_6 -> m33_7  [key=0, style=solid];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_9  [key=2, style=dotted];
m33_8 -> m33_6  [color=blue, key=0, style=bold];
m33_128 -> m33_129  [key=0, style=solid];
m33_128 -> m33_26  [key=2, style=dotted];
m33_128 -> m33_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_126 -> m33_127  [key=0, style=solid];
m33_126 -> m33_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_126 -> m33_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_126 -> m33_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_127 -> m33_128  [key=0, style=solid];
m33_127 -> m33_26  [key=2, style=dotted];
m33_127 -> m33_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_129 -> m33_126  [color=blue, key=0, style=bold];
m33_156 -> m33_157  [key=0, style=solid];
m33_156 -> m33_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_157 -> m33_158  [key=0, style=solid];
m33_157 -> m33_26  [key=2, style=dotted];
m33_157 -> m33_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_158 -> m33_156  [color=blue, key=0, style=bold];
m33_111 -> m33_112  [key=0, style=solid];
m33_111 -> m33_26  [key=2, style=dotted];
m33_111 -> m33_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_109 -> m33_110  [key=0, style=solid];
m33_109 -> m33_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_109 -> m33_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_109 -> m33_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_110 -> m33_111  [key=0, style=solid];
m33_110 -> m33_26  [key=2, style=dotted];
m33_110 -> m33_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_112 -> m33_109  [color=blue, key=0, style=bold];
m33_169 -> m33_170  [key=0, style=solid];
m33_169 -> m33_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_170 -> m33_171  [key=0, style=solid];
m33_170 -> m33_26  [key=2, style=dotted];
m33_170 -> m33_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_171 -> m33_169  [color=blue, key=0, style=bold];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_26  [key=2, style=dotted];
m33_55 -> m33_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_53 -> m33_54  [key=0, style=solid];
m33_53 -> m33_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_53 -> m33_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_53 -> m33_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_53 -> m33_56  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_53 -> m33_57  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_53 -> m33_58  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_53 -> m33_59  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_53 -> m33_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_53 -> m33_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_53 -> m33_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_26  [key=2, style=dotted];
m33_54 -> m33_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_56 -> m33_57  [key=0, style=solid];
m33_56 -> m33_63  [key=2, style=dotted];
m33_56 -> m33_64  [key=2, style=dotted];
m33_56 -> m33_59  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_56 -> m33_60  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_56 -> m33_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_57 -> m33_58  [key=0, style=solid];
m33_57 -> m33_65  [key=2, style=dotted];
m33_58 -> m33_59  [key=0, style=solid];
m33_58 -> m33_60  [key=0, style=solid];
m33_59 -> m33_60  [key=0, style=solid];
m33_59 -> m33_65  [key=2, style=dotted];
m33_60 -> m33_61  [key=0, style=solid];
m33_60 -> m33_26  [key=2, style=dotted];
m33_60 -> m33_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_61 -> m33_62  [key=0, style=solid];
m33_61 -> m33_66  [key=2, style=dotted];
m33_62 -> m33_53  [color=blue, key=0, style=bold];
m33_38 -> m33_39  [key=0, style=solid];
m33_38 -> m33_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_38 -> m33_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_38 -> m33_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_38 -> m33_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_38 -> m33_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_39 -> m33_40  [key=0, style=solid];
m33_39 -> m33_26  [key=2, style=dotted];
m33_39 -> m33_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_40 -> m33_41  [key=0, style=solid];
m33_40 -> m33_26  [key=2, style=dotted];
m33_40 -> m33_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_41 -> m33_42  [key=0, style=solid];
m33_41 -> m33_26  [key=2, style=dotted];
m33_41 -> m33_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_42 -> m33_38  [color=blue, key=0, style=bold];
m33_119 -> m33_120  [key=0, style=solid];
m33_119 -> m33_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_120 -> m33_121  [key=0, style=solid];
m33_120 -> m33_26  [key=2, style=dotted];
m33_120 -> m33_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_121 -> m33_119  [color=blue, key=0, style=bold];
m33_136 -> m33_137  [key=0, style=solid];
m33_136 -> m33_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_137 -> m33_138  [key=0, style=solid];
m33_137 -> m33_26  [key=2, style=dotted];
m33_137 -> m33_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_138 -> m33_136  [color=blue, key=0, style=bold];
m33_149 -> m33_150  [key=0, style=solid];
m33_149 -> m33_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_150 -> m33_151  [key=0, style=solid];
m33_150 -> m33_26  [key=2, style=dotted];
m33_150 -> m33_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_151 -> m33_149  [color=blue, key=0, style=bold];
m33_10 -> m33_11  [key=0, style=solid];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_17  [key=0, style=solid];
m33_11 -> m33_18  [key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
m33_12 -> m33_12  [color=darkorchid, key=3, label="Local variable int replayCount", style=bold];
m33_13 -> m33_14  [key=0, style=solid];
m33_13 -> m33_15  [color=darkseagreen4, key=1, label=maxReplayCount, style=dashed];
m33_13 -> m33_13  [color=darkorchid, key=3, label="Local variable int maxReplayCount", style=bold];
m33_15 -> m33_16  [key=0, style=solid];
m33_15 -> m33_14  [key=0, style=solid];
m33_15 -> m33_15  [color=darkseagreen4, key=1, label=replayCount, style=dashed];
m33_14 -> m33_15  [key=0, style=solid];
m33_14 -> m33_17  [key=0, style=solid];
m33_14 -> m33_19  [key=2, style=dotted];
m33_16 -> m33_17  [key=0, style=solid];
m33_16 -> m33_20  [key=2, style=dotted];
m33_17 -> m33_10  [color=blue, key=0, style=bold];
m33_64 -> m33_0  [color=darkorchid, key=3, label="Field variable IRedisTransaction _transaction", style=bold];
m33_172 -> m33_173  [key=0, style=solid];
m33_28 -> m33_29  [key=0, style=solid];
m33_28 -> m33_30  [key=2, style=dotted];
m33_28 -> m33_31  [key=2, style=dotted];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_30  [key=2, style=dotted];
m33_33 -> m33_31  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_30  [key=2, style=dotted];
m33_36 -> m33_31  [key=2, style=dotted];
m33_27 -> m33_28  [key=0, style=solid];
m33_32 -> m33_33  [key=0, style=solid];
m33_35 -> m33_36  [key=0, style=solid];
m33_29 -> m33_27  [color=blue, key=0, style=bold];
m33_34 -> m33_32  [color=blue, key=0, style=bold];
m33_37 -> m33_35  [color=blue, key=0, style=bold];
m33_44 -> m33_45  [key=0, style=solid];
m33_44 -> m33_30  [key=2, style=dotted];
m33_44 -> m33_46  [key=2, style=dotted];
m33_48 -> m33_49  [key=0, style=solid];
m33_48 -> m33_30  [key=2, style=dotted];
m33_48 -> m33_46  [key=2, style=dotted];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_30  [key=2, style=dotted];
m33_51 -> m33_46  [key=2, style=dotted];
m33_43 -> m33_44  [key=0, style=solid];
m33_47 -> m33_48  [key=0, style=solid];
m33_50 -> m33_51  [key=0, style=solid];
m33_45 -> m33_43  [color=blue, key=0, style=bold];
m33_49 -> m33_47  [color=blue, key=0, style=bold];
m33_52 -> m33_50  [color=blue, key=0, style=bold];
m33_68 -> m33_69  [key=0, style=solid];
m33_68 -> m33_30  [key=2, style=dotted];
m33_68 -> m33_70  [key=2, style=dotted];
m33_72 -> m33_73  [key=0, style=solid];
m33_72 -> m33_30  [key=2, style=dotted];
m33_72 -> m33_74  [key=2, style=dotted];
m33_76 -> m33_77  [key=0, style=solid];
m33_76 -> m33_30  [key=2, style=dotted];
m33_76 -> m33_78  [key=2, style=dotted];
m33_67 -> m33_68  [key=0, style=solid];
m33_71 -> m33_72  [key=0, style=solid];
m33_75 -> m33_76  [key=0, style=solid];
m33_69 -> m33_67  [color=blue, key=0, style=bold];
m33_73 -> m33_71  [color=blue, key=0, style=bold];
m33_77 -> m33_75  [color=blue, key=0, style=bold];
m33_87 -> m33_88  [key=0, style=solid];
m33_87 -> m33_30  [key=2, style=dotted];
m33_87 -> m33_89  [key=2, style=dotted];
m33_87 -> m33_90  [key=2, style=dotted];
m33_86 -> m33_87  [key=0, style=solid];
m33_88 -> m33_86  [color=blue, key=0, style=bold];
m33_96 -> m33_97  [key=0, style=solid];
m33_96 -> m33_98  [key=2, style=dotted];
m33_100 -> m33_101  [key=0, style=solid];
m33_100 -> m33_30  [key=2, style=dotted];
m33_100 -> m33_90  [key=2, style=dotted];
m33_95 -> m33_96  [key=0, style=solid];
m33_99 -> m33_100  [key=0, style=solid];
m33_97 -> m33_95  [color=blue, key=0, style=bold];
m33_101 -> m33_99  [color=blue, key=0, style=bold];
m33_106 -> m33_107  [key=0, style=solid];
m33_106 -> m33_108  [key=2, style=dotted];
m33_105 -> m33_106  [key=0, style=solid];
m33_107 -> m33_105  [color=blue, key=0, style=bold];
m33_114 -> m33_115  [key=0, style=solid];
m33_114 -> m33_108  [key=2, style=dotted];
m33_117 -> m33_118  [key=0, style=solid];
m33_117 -> m33_31  [key=2, style=dotted];
m33_113 -> m33_114  [key=0, style=solid];
m33_116 -> m33_117  [key=0, style=solid];
m33_115 -> m33_113  [color=blue, key=0, style=bold];
m33_118 -> m33_116  [color=blue, key=0, style=bold];
m33_123 -> m33_124  [key=0, style=solid];
m33_123 -> m33_125  [key=2, style=dotted];
m33_122 -> m33_123  [key=0, style=solid];
m33_124 -> m33_122  [color=blue, key=0, style=bold];
m33_131 -> m33_132  [key=0, style=solid];
m33_131 -> m33_125  [key=2, style=dotted];
m33_134 -> m33_135  [key=0, style=solid];
m33_134 -> m33_31  [key=2, style=dotted];
m33_130 -> m33_131  [key=0, style=solid];
m33_133 -> m33_134  [key=0, style=solid];
m33_132 -> m33_130  [color=blue, key=0, style=bold];
m33_135 -> m33_133  [color=blue, key=0, style=bold];
m33_140 -> m33_141  [key=0, style=solid];
m33_140 -> m33_142  [key=2, style=dotted];
m33_139 -> m33_140  [key=0, style=solid];
m33_141 -> m33_139  [color=blue, key=0, style=bold];
m33_147 -> m33_148  [key=0, style=solid];
m33_147 -> m33_142  [key=2, style=dotted];
m33_146 -> m33_147  [key=0, style=solid];
m33_148 -> m33_146  [color=blue, key=0, style=bold];
m33_153 -> m33_154  [key=0, style=solid];
m33_153 -> m33_155  [key=2, style=dotted];
m33_152 -> m33_153  [key=0, style=solid];
m33_154 -> m33_152  [color=blue, key=0, style=bold];
m33_160 -> m33_161  [key=0, style=solid];
m33_160 -> m33_90  [key=2, style=dotted];
m33_159 -> m33_160  [key=0, style=solid];
m33_161 -> m33_159  [color=blue, key=0, style=bold];
m33_166 -> m33_167  [key=0, style=solid];
m33_166 -> m33_168  [key=2, style=dotted];
m33_165 -> m33_166  [key=0, style=solid];
m33_167 -> m33_165  [color=blue, key=0, style=bold];
m33_173 -> m33_174  [key=0, style=solid];
m33_173 -> m33_175  [key=2, style=dotted];
m33_174 -> m33_172  [color=blue, key=0, style=bold];
m33_143 -> m33_144  [key=0, style=solid];
m33_143 -> m33_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_144 -> m33_145  [key=0, style=solid];
m33_144 -> m33_26  [key=2, style=dotted];
m33_144 -> m33_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_145 -> m33_143  [color=blue, key=0, style=bold];
m33_102 -> m33_103  [key=0, style=solid];
m33_102 -> m33_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_103 -> m33_104  [key=0, style=solid];
m33_103 -> m33_26  [key=2, style=dotted];
m33_103 -> m33_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_104 -> m33_102  [color=blue, key=0, style=bold];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_26  [key=2, style=dotted];
m33_24 -> m33_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_21 -> m33_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_21 -> m33_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_21 -> m33_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_21 -> m33_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_26  [key=2, style=dotted];
m33_22 -> m33_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_26  [key=2, style=dotted];
m33_23 -> m33_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_25 -> m33_21  [color=blue, key=0, style=bold];
m33_91 -> m33_92  [key=0, style=solid];
m33_91 -> m33_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_91 -> m33_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_91 -> m33_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_92 -> m33_93  [key=0, style=solid];
m33_92 -> m33_26  [key=2, style=dotted];
m33_92 -> m33_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_93 -> m33_94  [key=0, style=solid];
m33_93 -> m33_26  [key=2, style=dotted];
m33_93 -> m33_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_94 -> m33_91  [color=blue, key=0, style=bold];
m33_66 -> m33_79  [key=0, style=solid];
m33_66 -> m33_80  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_66 -> m33_81  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_66 -> m33_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_66 -> m33_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_66 -> m33_53  [color=darkorchid, key=3, label="Parameter variable HangFire.States.State state", style=bold];
m33_79 -> m33_80  [key=0, style=solid];
m33_79 -> m33_63  [key=2, style=dotted];
m33_79 -> m33_64  [key=2, style=dotted];
m33_79 -> m33_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_79 -> m33_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_79 -> m33_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_79 -> m33_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_80 -> m33_81  [key=0, style=solid];
m33_80 -> m33_65  [key=2, style=dotted];
m33_81 -> m33_82  [key=0, style=solid];
m33_81 -> m33_65  [key=2, style=dotted];
m33_83 -> m33_84  [key=0, style=solid];
m33_83 -> m33_26  [key=2, style=dotted];
m33_83 -> m33_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_82 -> m33_83  [key=0, style=solid];
m33_82 -> m33_85  [key=2, style=dotted];
m33_82 -> m33_65  [key=2, style=dotted];
m33_84 -> m33_66  [color=blue, key=0, style=bold];
m33_162 -> m33_163  [key=0, style=solid];
m33_162 -> m33_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_163 -> m33_164  [key=0, style=solid];
m33_163 -> m33_26  [key=2, style=dotted];
m33_163 -> m33_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_164 -> m33_162  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_3  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_2 -> m33_4  [key=0, style=solid];
m33_2 -> d5  [key=2, style=dotted];
m33_4 -> m33_0  [color=blue, key=0, style=bold];
m33_176 -> m33_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_14  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_24  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_39  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_40  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_54  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_55  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_60  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_61  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_83  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_92  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_93  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_103  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_110  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_111  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_127  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_128  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_137  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_144  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_150  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_157  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_163  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_176 -> m33_170  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m33_177 -> m33_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_177 -> m33_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_177 -> m33_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_178 -> m33_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m33_178 -> m33_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m33_178 -> m33_36  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m33_179 -> m33_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_179 -> m33_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_179 -> m33_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_180 -> m33_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_180 -> m33_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_180 -> m33_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_181 -> m33_68  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m33_182 -> m33_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_183 -> m33_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_184 -> m33_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m33_185 -> m33_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_185 -> m33_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_186 -> m33_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_187 -> m33_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_188 -> m33_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_188 -> m33_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_189 -> m33_117  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m33_190 -> m33_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_191 -> m33_131  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_191 -> m33_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_192 -> m33_134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m33_193 -> m33_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_194 -> m33_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_195 -> m33_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_196 -> m33_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_197 -> m33_147  [color=darkseagreen4, key=1, label=double, style=dashed];
m33_198 -> m33_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_199 -> m33_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_200 -> m33_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_201 -> m33_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_202 -> m33_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_203 -> m33_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_204 -> m33_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_205 -> m33_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m33_206 -> m33_173  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_4  [key=2, style=dotted];
m35_1 -> m35_5  [key=2, style=dotted];
m35_1 -> m35_6  [key=2, style=dotted];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_7  [key=2, style=dotted];
m35_3 -> m35_0  [color=blue, key=0, style=bold];
m35_44 -> m35_45  [key=0, style=solid];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_31  [key=2, style=dotted];
m35_45 -> m35_47  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_45 -> m35_50  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_46 -> m35_47  [key=0, style=solid];
m35_46 -> m35_32  [key=2, style=dotted];
m35_47 -> m35_48  [key=0, style=solid];
m35_47 -> m35_33  [key=2, style=dotted];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_52  [key=2, style=dotted];
m35_50 -> m35_53  [key=2, style=dotted];
m35_50 -> m35_54  [key=2, style=dotted];
m35_48 -> m35_49  [key=0, style=solid];
m35_48 -> m35_37  [key=2, style=dotted];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_38  [key=2, style=dotted];
m35_51 -> m35_44  [color=blue, key=0, style=bold];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_13  [key=2, style=dotted];
m35_18 -> m35_19  [key=0, style=solid];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_31  [key=2, style=dotted];
m35_19 -> m35_21  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_22  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_25  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_26  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_28  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_32  [key=2, style=dotted];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_33  [key=2, style=dotted];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_34  [key=2, style=dotted];
m35_22 -> m35_35  [key=2, style=dotted];
m35_22 -> m35_36  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_39  [key=2, style=dotted];
m35_25 -> m35_13  [key=2, style=dotted];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_40  [key=2, style=dotted];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_41  [key=2, style=dotted];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_37  [key=2, style=dotted];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_38  [key=2, style=dotted];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_42  [key=2, style=dotted];
m35_29 -> m35_43  [key=2, style=dotted];
m35_30 -> m35_18  [color=blue, key=0, style=bold];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_34  [key=2, style=dotted];
m35_59 -> m35_35  [key=2, style=dotted];
m35_59 -> m35_36  [key=2, style=dotted];
m35_55 -> m35_56  [key=0, style=solid];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_31  [key=2, style=dotted];
m35_56 -> m35_58  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_59  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_62  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_63  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_64  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_32  [key=2, style=dotted];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_33  [key=2, style=dotted];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_39  [key=2, style=dotted];
m35_62 -> m35_13  [key=2, style=dotted];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_39  [key=2, style=dotted];
m35_63 -> m35_13  [key=2, style=dotted];
m35_64 -> m35_65  [key=0, style=solid];
m35_64 -> m35_41  [key=2, style=dotted];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_37  [key=2, style=dotted];
m35_61 -> m35_62  [key=0, style=solid];
m35_61 -> m35_38  [key=2, style=dotted];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_42  [key=2, style=dotted];
m35_65 -> m35_43  [key=2, style=dotted];
m35_66 -> m35_55  [color=blue, key=0, style=bold];
m35_37 -> m35_77  [key=0, style=solid];
m35_77 -> m35_78  [key=0, style=solid];
m35_77 -> m35_17  [key=2, style=dotted];
m35_78 -> m35_37  [color=blue, key=0, style=bold];
m35_14 -> m35_15  [key=0, style=solid];
m35_15 -> m35_16  [key=0, style=solid];
m35_15 -> m35_17  [key=2, style=dotted];
m35_16 -> m35_14  [color=blue, key=0, style=bold];
m35_72 -> m35_73  [key=0, style=solid];
m35_72 -> m35_35  [key=2, style=dotted];
m35_72 -> m35_36  [key=2, style=dotted];
m35_67 -> m35_68  [key=0, style=solid];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_31  [key=2, style=dotted];
m35_68 -> m35_70  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_71  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_72  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_75  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_32  [key=2, style=dotted];
m35_70 -> m35_71  [key=0, style=solid];
m35_70 -> m35_33  [key=2, style=dotted];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_34  [key=2, style=dotted];
m35_71 -> m35_35  [key=2, style=dotted];
m35_71 -> m35_36  [key=2, style=dotted];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_39  [key=2, style=dotted];
m35_75 -> m35_13  [key=2, style=dotted];
m35_73 -> m35_74  [key=0, style=solid];
m35_73 -> m35_37  [key=2, style=dotted];
m35_74 -> m35_75  [key=0, style=solid];
m35_74 -> m35_38  [key=2, style=dotted];
m35_76 -> m35_67  [color=blue, key=0, style=bold];
m35_8 -> m35_9  [key=0, style=solid];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_12  [key=2, style=dotted];
m35_9 -> m35_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_13  [key=2, style=dotted];
m35_11 -> m35_8  [color=blue, key=0, style=bold];
m35_79 -> m35_1  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_2  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_23  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_24  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_48  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_49  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_60  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_61  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_73  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_74  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_77  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m36_48 -> m36_49  [key=0, style=solid];
m36_49 -> m36_50  [key=0, style=solid];
m36_49 -> m36_53  [key=2, style=dotted];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_14  [key=2, style=dotted];
m36_50 -> m36_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_51 -> m36_52  [key=0, style=solid];
m36_51 -> m36_14  [key=2, style=dotted];
m36_51 -> m36_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_52 -> m36_48  [color=blue, key=0, style=bold];
m36_133 -> m36_134  [key=0, style=solid];
m36_134 -> m36_135  [key=0, style=solid];
m36_134 -> n11  [key=2, style=dotted];
m36_134 -> m36_138  [key=2, style=dotted];
m36_135 -> m36_136  [key=0, style=solid];
m36_135 -> m36_14  [key=2, style=dotted];
m36_135 -> m36_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_136 -> m36_137  [key=0, style=solid];
m36_136 -> m36_14  [key=2, style=dotted];
m36_136 -> m36_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_137 -> m36_133  [color=blue, key=0, style=bold];
m36_63 -> m36_64  [key=0, style=solid];
m36_64 -> m36_65  [key=0, style=solid];
m36_64 -> m36_68  [key=2, style=dotted];
m36_65 -> m36_66  [key=0, style=solid];
m36_65 -> m36_14  [key=2, style=dotted];
m36_65 -> m36_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_66 -> m36_67  [key=0, style=solid];
m36_66 -> m36_14  [key=2, style=dotted];
m36_66 -> m36_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_67 -> m36_63  [color=blue, key=0, style=bold];
m36_95 -> m36_96  [key=0, style=solid];
m36_96 -> m36_97  [key=0, style=solid];
m36_96 -> n11  [key=2, style=dotted];
m36_96 -> m36_100  [key=2, style=dotted];
m36_97 -> m36_98  [key=0, style=solid];
m36_97 -> m36_14  [key=2, style=dotted];
m36_97 -> m36_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_98 -> m36_99  [key=0, style=solid];
m36_98 -> m36_14  [key=2, style=dotted];
m36_98 -> m36_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_99 -> m36_95  [color=blue, key=0, style=bold];
m36_114 -> m36_173  [key=0, style=solid];
m36_173 -> m36_174  [key=0, style=solid];
m36_173 -> m36_21  [key=2, style=dotted];
m36_173 -> m36_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_174 -> m36_114  [color=blue, key=0, style=bold];
m36_118 -> m36_119  [key=0, style=solid];
m36_119 -> m36_120  [key=0, style=solid];
m36_119 -> n11  [key=2, style=dotted];
m36_119 -> m36_123  [key=2, style=dotted];
m36_120 -> m36_121  [key=0, style=solid];
m36_120 -> m36_14  [key=2, style=dotted];
m36_120 -> m36_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_121 -> m36_122  [key=0, style=solid];
m36_121 -> m36_14  [key=2, style=dotted];
m36_121 -> m36_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_122 -> m36_118  [color=blue, key=0, style=bold];
m36_30 -> m36_31  [key=0, style=solid];
m36_31 -> m36_32  [key=0, style=solid];
m36_31 -> m36_13  [key=2, style=dotted];
m36_32 -> m36_30  [color=blue, key=0, style=bold];
m36_107 -> m36_108  [key=0, style=solid];
m36_108 -> m36_109  [key=0, style=solid];
m36_108 -> n11  [key=2, style=dotted];
m36_108 -> m36_81  [key=2, style=dotted];
m36_109 -> m36_110  [key=0, style=solid];
m36_109 -> m36_14  [key=2, style=dotted];
m36_109 -> m36_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_110 -> m36_107  [color=blue, key=0, style=bold];
m36_20 -> m36_162  [key=0, style=solid];
m36_162 -> m36_163  [key=0, style=solid];
m36_162 -> m36_21  [key=2, style=dotted];
m36_162 -> m36_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_163 -> m36_20  [color=blue, key=0, style=bold];
m36_8 -> m36_9  [key=0, style=solid];
m36_9 -> m36_10  [key=0, style=solid];
m36_9 -> m36_13  [key=2, style=dotted];
m36_10 -> m36_11  [key=0, style=solid];
m36_10 -> m36_14  [key=2, style=dotted];
m36_10 -> m36_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_11 -> m36_12  [key=0, style=solid];
m36_11 -> m36_14  [key=2, style=dotted];
m36_11 -> m36_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_12 -> m36_8  [color=blue, key=0, style=bold];
m36_19 -> m36_157  [key=0, style=solid];
m36_157 -> m36_158  [key=0, style=solid];
m36_157 -> m36_21  [key=2, style=dotted];
m36_157 -> m36_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_158 -> m36_19  [color=blue, key=0, style=bold];
m36_45 -> m36_46  [key=0, style=solid];
m36_46 -> m36_47  [key=0, style=solid];
m36_46 -> m36_38  [key=2, style=dotted];
m36_47 -> m36_45  [color=blue, key=0, style=bold];
m36_115 -> m36_116  [key=0, style=solid];
m36_116 -> m36_117  [key=0, style=solid];
m36_116 -> n11  [key=2, style=dotted];
m36_116 -> m36_100  [key=2, style=dotted];
m36_117 -> m36_115  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_3 -> m36_0  [color=blue, key=0, style=bold];
m36_175 -> m36_176  [key=0, style=solid];
m36_5 -> m36_6  [key=0, style=solid];
m36_6 -> m36_7  [key=0, style=solid];
m36_7 -> m36_5  [color=blue, key=0, style=bold];
m36_15 -> m36_16  [key=0, style=solid];
m36_26 -> m36_27  [key=0, style=solid];
m36_16 -> m36_17  [key=0, style=solid];
m36_16 -> m36_18  [key=2, style=dotted];
m36_16 -> m36_19  [key=2, style=dotted];
m36_16 -> m36_20  [key=2, style=dotted];
m36_16 -> m36_21  [key=2, style=dotted];
m36_16 -> m36_22  [key=2, style=dotted];
m36_16 -> m36_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_17 -> m36_15  [color=blue, key=0, style=bold];
m36_23 -> m36_24  [key=0, style=solid];
m36_24 -> m36_25  [key=0, style=solid];
m36_25 -> m36_23  [color=blue, key=0, style=bold];
m36_27 -> m36_28  [key=0, style=solid];
m36_27 -> m36_29  [key=2, style=dotted];
m36_28 -> m36_26  [color=blue, key=0, style=bold];
m36_39 -> m36_40  [key=0, style=solid];
m36_42 -> m36_43  [key=0, style=solid];
m36_40 -> m36_41  [key=0, style=solid];
m36_40 -> m36_18  [key=2, style=dotted];
m36_40 -> m36_19  [key=2, style=dotted];
m36_40 -> m36_20  [key=2, style=dotted];
m36_40 -> m36_21  [key=2, style=dotted];
m36_40 -> m36_22  [key=2, style=dotted];
m36_41 -> m36_39  [color=blue, key=0, style=bold];
m36_43 -> m36_44  [key=0, style=solid];
m36_43 -> m36_29  [key=2, style=dotted];
m36_44 -> m36_42  [color=blue, key=0, style=bold];
m36_54 -> m36_55  [key=0, style=solid];
m36_60 -> m36_61  [key=0, style=solid];
m36_55 -> m36_56  [key=0, style=solid];
m36_55 -> m36_18  [key=2, style=dotted];
m36_55 -> m36_19  [key=2, style=dotted];
m36_55 -> m36_20  [key=2, style=dotted];
m36_55 -> m36_21  [key=2, style=dotted];
m36_55 -> m36_22  [key=2, style=dotted];
m36_55 -> m36_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_56 -> m36_54  [color=blue, key=0, style=bold];
m36_57 -> m36_58  [key=0, style=solid];
m36_58 -> m36_59  [key=0, style=solid];
m36_59 -> m36_57  [color=blue, key=0, style=bold];
m36_61 -> m36_62  [key=0, style=solid];
m36_61 -> m36_29  [key=2, style=dotted];
m36_62 -> m36_60  [color=blue, key=0, style=bold];
m36_69 -> m36_70  [key=0, style=solid];
m36_72 -> m36_73  [key=0, style=solid];
m36_70 -> m36_71  [key=0, style=solid];
m36_70 -> m36_18  [key=2, style=dotted];
m36_70 -> m36_19  [key=2, style=dotted];
m36_70 -> m36_20  [key=2, style=dotted];
m36_70 -> m36_21  [key=2, style=dotted];
m36_70 -> m36_22  [key=2, style=dotted];
m36_71 -> m36_69  [color=blue, key=0, style=bold];
m36_73 -> m36_74  [key=0, style=solid];
m36_73 -> m36_29  [key=2, style=dotted];
m36_74 -> m36_72  [color=blue, key=0, style=bold];
m36_82 -> m36_83  [key=0, style=solid];
m36_89 -> m36_90  [key=0, style=solid];
m36_83 -> m36_84  [key=0, style=solid];
m36_83 -> m36_18  [key=2, style=dotted];
m36_83 -> m36_19  [key=2, style=dotted];
m36_83 -> m36_85  [key=2, style=dotted];
m36_83 -> m36_21  [key=2, style=dotted];
m36_83 -> m36_22  [key=2, style=dotted];
m36_83 -> m36_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_84 -> m36_82  [color=blue, key=0, style=bold];
m36_86 -> m36_87  [key=0, style=solid];
m36_87 -> m36_88  [key=0, style=solid];
m36_88 -> m36_86  [color=blue, key=0, style=bold];
m36_90 -> m36_91  [key=0, style=solid];
m36_90 -> m36_29  [key=2, style=dotted];
m36_91 -> m36_89  [color=blue, key=0, style=bold];
m36_101 -> m36_102  [key=0, style=solid];
m36_104 -> m36_105  [key=0, style=solid];
m36_102 -> m36_103  [key=0, style=solid];
m36_102 -> m36_18  [key=2, style=dotted];
m36_102 -> m36_19  [key=2, style=dotted];
m36_102 -> m36_85  [key=2, style=dotted];
m36_102 -> m36_21  [key=2, style=dotted];
m36_102 -> m36_22  [key=2, style=dotted];
m36_103 -> m36_101  [color=blue, key=0, style=bold];
m36_105 -> m36_106  [key=0, style=solid];
m36_105 -> m36_29  [key=2, style=dotted];
m36_106 -> m36_104  [color=blue, key=0, style=bold];
m36_111 -> m36_112  [key=0, style=solid];
m36_112 -> m36_113  [key=0, style=solid];
m36_112 -> m36_21  [key=2, style=dotted];
m36_112 -> m36_114  [key=2, style=dotted];
m36_112 -> m36_22  [key=2, style=dotted];
m36_113 -> m36_111  [color=blue, key=0, style=bold];
m36_124 -> m36_125  [key=0, style=solid];
m36_130 -> m36_131  [key=0, style=solid];
m36_125 -> m36_126  [key=0, style=solid];
m36_125 -> m36_18  [key=2, style=dotted];
m36_125 -> m36_19  [key=2, style=dotted];
m36_125 -> m36_85  [key=2, style=dotted];
m36_125 -> m36_21  [key=2, style=dotted];
m36_125 -> m36_22  [key=2, style=dotted];
m36_125 -> m36_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_126 -> m36_124  [color=blue, key=0, style=bold];
m36_127 -> m36_128  [key=0, style=solid];
m36_128 -> m36_129  [key=0, style=solid];
m36_129 -> m36_127  [color=blue, key=0, style=bold];
m36_131 -> m36_132  [key=0, style=solid];
m36_131 -> m36_29  [key=2, style=dotted];
m36_132 -> m36_130  [color=blue, key=0, style=bold];
m36_139 -> m36_140  [key=0, style=solid];
m36_142 -> m36_143  [key=0, style=solid];
m36_140 -> m36_141  [key=0, style=solid];
m36_140 -> m36_18  [key=2, style=dotted];
m36_140 -> m36_19  [key=2, style=dotted];
m36_140 -> m36_85  [key=2, style=dotted];
m36_140 -> m36_21  [key=2, style=dotted];
m36_140 -> m36_22  [key=2, style=dotted];
m36_141 -> m36_139  [color=blue, key=0, style=bold];
m36_143 -> m36_144  [key=0, style=solid];
m36_143 -> m36_29  [key=2, style=dotted];
m36_144 -> m36_142  [color=blue, key=0, style=bold];
m36_149 -> m36_150  [key=0, style=solid];
m36_149 -> m36_152  [key=2, style=dotted];
m36_154 -> m36_155  [key=0, style=solid];
m36_154 -> m36_156  [key=2, style=dotted];
m36_153 -> m36_154  [key=0, style=solid];
m36_148 -> m36_149  [key=0, style=solid];
m36_150 -> m36_151  [key=0, style=solid];
m36_151 -> m36_148  [color=blue, key=0, style=bold];
m36_155 -> m36_153  [color=blue, key=0, style=bold];
m36_159 -> m36_160  [key=0, style=solid];
m36_160 -> m36_161  [key=0, style=solid];
m36_161 -> m36_159  [color=blue, key=0, style=bold];
m36_164 -> m36_165  [key=0, style=solid];
m36_165 -> m36_166  [key=0, style=solid];
m36_166 -> m36_164  [color=blue, key=0, style=bold];
m36_169 -> m36_170  [key=0, style=solid];
m36_170 -> m36_171  [key=0, style=solid];
m36_170 -> m36_172  [key=2, style=dotted];
m36_171 -> m36_169  [color=blue, key=0, style=bold];
m36_176 -> m36_177  [key=0, style=solid];
m36_176 -> m36_172  [key=2, style=dotted];
m36_177 -> m36_175  [color=blue, key=0, style=bold];
m36_33 -> m36_34  [key=0, style=solid];
m36_34 -> m36_35  [key=0, style=solid];
m36_34 -> m36_38  [key=2, style=dotted];
m36_35 -> m36_36  [key=0, style=solid];
m36_35 -> m36_14  [key=2, style=dotted];
m36_35 -> m36_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_36 -> m36_37  [key=0, style=solid];
m36_36 -> m36_14  [key=2, style=dotted];
m36_36 -> m36_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_37 -> m36_33  [color=blue, key=0, style=bold];
m36_92 -> m36_93  [key=0, style=solid];
m36_93 -> m36_94  [key=0, style=solid];
m36_93 -> n11  [key=2, style=dotted];
m36_93 -> m36_81  [key=2, style=dotted];
m36_94 -> m36_92  [color=blue, key=0, style=bold];
m36_85 -> m36_167  [key=0, style=solid];
m36_167 -> m36_168  [key=0, style=solid];
m36_167 -> m36_21  [key=2, style=dotted];
m36_167 -> m36_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_168 -> m36_85  [color=blue, key=0, style=bold];
m36_18 -> m36_145  [key=0, style=solid];
m36_145 -> m36_146  [key=0, style=solid];
m36_145 -> m36_149  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_145 -> m36_154  [color=darkseagreen4, key=1, label=validator, style=dashed];
m36_146 -> m36_147  [key=0, style=solid];
m36_146 -> m36_21  [key=2, style=dotted];
m36_146 -> m36_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_147 -> m36_18  [color=blue, key=0, style=bold];
m36_75 -> m36_76  [key=0, style=solid];
m36_76 -> m36_77  [key=0, style=solid];
m36_76 -> n11  [key=2, style=dotted];
m36_76 -> m36_81  [key=2, style=dotted];
m36_77 -> m36_78  [key=0, style=solid];
m36_77 -> m36_14  [key=2, style=dotted];
m36_77 -> m36_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_78 -> m36_79  [key=0, style=solid];
m36_78 -> m36_14  [key=2, style=dotted];
m36_78 -> m36_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_79 -> m36_75  [color=blue, key=0, style=bold];
m36_178 -> m36_1  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_2  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_6  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_10  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_11  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_35  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_36  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_50  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_51  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_65  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_66  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_77  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_78  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_97  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_98  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_109  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_120  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_121  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_135  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_178 -> m36_136  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m36_179 -> m36_154  [color=darkseagreen4, key=1, label=validator, style=dashed];
m37_6 -> m37_7  [key=0, style=solid];
m37_8 -> m37_4  [key=2, style=dotted];
m37_8 -> m37_9  [key=0, style=solid];
m37_7 -> m37_8  [key=0, style=solid];
m37_7 -> m37_11  [key=2, style=dotted];
m37_7 -> m37_9  [color=darkseagreen4, key=1, label=date, style=dashed];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_5  [key=2, style=dotted];
m37_10 -> m37_6  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_4  [key=2, style=dotted];
m37_1 -> m37_2  [key=0, style=solid];
m37_2 -> m37_3  [key=0, style=solid];
m37_2 -> m37_5  [key=2, style=dotted];
m37_3 -> m37_0  [color=blue, key=0, style=bold];
m37_30 -> m37_31  [color=green, key=0, style=solid];
m37_31 -> m37_32  [color=green, key=0, style=solid];
m37_31 -> m37_4  [color=green, key=2, style=dotted];
m37_32 -> m37_33  [color=green, key=0, style=solid];
m37_32 -> m37_34  [color=green, key=2, style=dotted];
m37_33 -> m37_30  [color=blue, key=0, style=bold];
m37_22 -> m37_23  [key=0, style=solid];
m37_23 -> m37_4  [key=2, style=dotted];
m37_23 -> m37_24  [key=0, style=solid];
m37_23 -> m37_11  [key=2, style=dotted];
m37_23 -> m37_25  [color=darkseagreen4, key=1, label=state, style=dashed];
m37_23 -> m37_26  [color=darkseagreen4, key=1, label=state, style=dashed];
m37_24 -> m37_25  [key=0, style=solid];
m37_24 -> m37_28  [key=2, style=dotted];
m37_24 -> m37_26  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_29  [key=2, style=dotted];
m37_25 -> m37_5  [key=2, style=dotted];
m37_26 -> m37_27  [key=0, style=solid];
m37_26 -> m37_29  [key=2, style=dotted];
m37_26 -> m37_5  [key=2, style=dotted];
m37_27 -> m37_22  [color=blue, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_0  [color=blue, key=0, style=bold];
m39_74 -> m39_75  [key=0, style=solid];
m39_75 -> m39_76  [key=0, style=solid];
m39_75 -> m39_15  [key=2, style=dotted];
m39_75 -> m39_16  [key=2, style=dotted];
m39_75 -> m39_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_76 -> m39_77  [key=0, style=solid];
m39_76 -> m39_55  [key=2, style=dotted];
m39_77 -> m39_78  [color=red, key=0, style=solid];
m39_77 -> m39_56  [key=2, style=dotted];
m39_78 -> m39_79  [color=red, key=0, style=solid];
m39_78 -> m39_57  [color=red, key=2, style=dotted];
m39_78 -> m39_86  [color=red, key=1, label="lambda expression", style=dashed];
m39_79 -> m39_74  [color=blue, key=0, style=bold];
m39_65 -> m39_66  [key=0, style=solid];
m39_66 -> m39_67  [key=0, style=solid];
m39_66 -> m39_55  [key=2, style=dotted];
m39_67 -> m39_68  [key=0, style=solid];
m39_67 -> m39_56  [key=2, style=dotted];
m39_68 -> m39_69  [key=0, style=solid];
m39_68 -> m39_57  [key=2, style=dotted];
m39_68 -> m39_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_69 -> m39_65  [color=blue, key=0, style=bold];
m39_49 -> m39_50  [key=0, style=solid];
m39_50 -> m39_51  [key=0, style=solid];
m39_50 -> m39_55  [key=2, style=dotted];
m39_51 -> m39_52  [key=0, style=solid];
m39_51 -> m39_56  [key=2, style=dotted];
m39_52 -> m39_53  [key=0, style=solid];
m39_52 -> m39_57  [key=2, style=dotted];
m39_52 -> m39_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_53 -> m39_54  [key=0, style=solid];
m39_53 -> m39_57  [key=2, style=dotted];
m39_53 -> m39_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_54 -> m39_49  [color=blue, key=0, style=bold];
m39_33 -> m39_34  [key=0, style=solid];
m39_34 -> m39_35  [key=0, style=solid];
m39_34 -> m39_20  [key=2, style=dotted];
m39_34 -> m39_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_35 -> m39_36  [key=0, style=solid];
m39_35 -> m39_37  [key=2, style=dotted];
m39_36 -> m39_33  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_10  [key=2, style=dotted];
m39_2 -> m39_3  [key=0, style=solid];
m39_2 -> m39_11  [key=2, style=dotted];
m39_3 -> m39_4  [key=0, style=solid];
m39_3 -> m39_12  [key=2, style=dotted];
m39_4 -> m39_5  [key=0, style=solid];
m39_4 -> m39_13  [key=2, style=dotted];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_14  [key=2, style=dotted];
m39_6 -> m39_7  [key=0, style=solid];
m39_6 -> m39_15  [key=2, style=dotted];
m39_6 -> m39_16  [key=2, style=dotted];
m39_6 -> m39_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_7 -> m39_8  [key=0, style=solid];
m39_7 -> m39_15  [key=2, style=dotted];
m39_7 -> m39_16  [key=2, style=dotted];
m39_7 -> m39_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_8 -> m39_9  [key=0, style=solid];
m39_8 -> m39_15  [key=2, style=dotted];
m39_8 -> m39_16  [key=2, style=dotted];
m39_8 -> m39_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_9 -> m39_0  [color=blue, key=0, style=bold];
m39_83 -> m39_84  [key=0, style=solid];
m39_17 -> m39_18  [key=0, style=solid];
m39_22 -> m39_23  [key=0, style=solid];
m39_26 -> m39_27  [key=0, style=solid];
m39_18 -> m39_19  [key=0, style=solid];
m39_18 -> m39_20  [key=2, style=dotted];
m39_18 -> m39_21  [key=2, style=dotted];
m39_19 -> m39_17  [color=blue, key=0, style=bold];
m39_23 -> m39_24  [key=0, style=solid];
m39_23 -> m39_25  [key=2, style=dotted];
m39_24 -> m39_22  [color=blue, key=0, style=bold];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_20  [key=2, style=dotted];
m39_27 -> m39_29  [key=2, style=dotted];
m39_27 -> m39_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_28 -> m39_26  [color=blue, key=0, style=bold];
m39_30 -> m39_31  [key=0, style=solid];
m39_31 -> m39_32  [key=0, style=solid];
m39_32 -> m39_30  [color=blue, key=0, style=bold];
m39_38 -> m39_39  [key=0, style=solid];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> m39_41  [key=2, style=dotted];
m39_40 -> m39_38  [color=blue, key=0, style=bold];
m39_46 -> m39_47  [key=0, style=solid];
m39_47 -> m39_48  [key=0, style=solid];
m39_47 -> m39_41  [key=2, style=dotted];
m39_48 -> m39_46  [color=blue, key=0, style=bold];
m39_58 -> m39_59  [key=0, style=solid];
m39_61 -> m39_62  [key=0, style=solid];
m39_59 -> m39_60  [key=0, style=solid];
m39_59 -> m39_25  [key=2, style=dotted];
m39_60 -> m39_58  [color=blue, key=0, style=bold];
m39_62 -> m39_63  [key=0, style=solid];
m39_62 -> m39_64  [key=2, style=dotted];
m39_63 -> m39_61  [color=blue, key=0, style=bold];
m39_70 -> m39_71  [key=0, style=solid];
m39_71 -> m39_72  [key=0, style=solid];
m39_71 -> m39_20  [key=2, style=dotted];
m39_71 -> m39_73  [key=2, style=dotted];
m39_72 -> m39_70  [color=blue, key=0, style=bold];
m39_80 -> m39_81  [key=0, style=solid];
m39_86 -> m39_87  [color=red, key=0, style=solid];
m39_81 -> m39_82  [key=0, style=solid];
m39_81 -> m39_20  [key=2, style=dotted];
m39_81 -> m39_29  [key=2, style=dotted];
m39_81 -> m39_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_82 -> m39_80  [color=blue, key=0, style=bold];
m39_84 -> m39_85  [key=0, style=solid];
m39_85 -> m39_83  [color=blue, key=0, style=bold];
m39_87 -> m39_88  [color=red, key=0, style=solid];
m39_87 -> m39_20  [color=red, key=2, style=dotted];
m39_87 -> m39_73  [color=red, key=2, style=dotted];
m39_88 -> m39_86  [color=blue, key=0, style=bold];
m39_55 -> m39_89  [key=0, style=solid];
m39_89 -> m39_90  [key=0, style=solid];
m39_89 -> m39_41  [key=2, style=dotted];
m39_90 -> m39_55  [color=blue, key=0, style=bold];
m39_42 -> m39_43  [key=0, style=solid];
m39_43 -> m39_44  [key=0, style=solid];
m39_43 -> m39_20  [key=2, style=dotted];
m39_43 -> m39_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_44 -> m39_45  [key=0, style=solid];
m39_44 -> m39_37  [key=2, style=dotted];
m39_45 -> m39_42  [color=blue, key=0, style=bold];
m39_91 -> m39_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_34  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_51  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_78  [color=red, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m39_91 -> m39_89  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.SchedulePollerFacts", style=dashed];
m41_47 -> m41_48  [color=green, key=0, style=solid];
m41_48 -> m41_49  [color=green, key=0, style=solid];
m41_48 -> m41_15  [color=green, key=2, style=dotted];
m41_48 -> m41_51  [color=green, key=2, style=dotted];
m41_49 -> m41_50  [color=green, key=0, style=solid];
m41_49 -> m41_52  [color=green, key=2, style=dotted];
m41_50 -> m41_47  [color=blue, key=0, style=bold];
m41_35 -> m41_30  [color=green, key=3, label="Parameter variable int workers", style=bold];
m41_35 -> m41_39  [color=green, key=0, style=solid];
m41_35 -> m41_32  [color=darkorchid, key=3, label="Parameter variable int workers", style=bold];
m41_35 -> m41_36  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m41_39 -> m41_40  [color=green, key=0, style=solid];
m41_39 -> m41_41  [color=green, key=2, style=dotted];
m41_39 -> m41_42  [color=green, key=2, style=dotted];
m41_40 -> m41_35  [color=blue, key=0, style=bold];
m41_20 -> m41_21  [color=green, key=0, style=solid];
m41_21 -> m41_22  [color=green, key=0, style=solid];
m41_21 -> m41_15  [color=green, key=2, style=dotted];
m41_21 -> m41_10  [color=green, key=2, style=dotted];
m41_22 -> m41_20  [color=blue, key=0, style=bold];
m41_29 -> m41_30  [color=green, key=0, style=solid];
m41_29 -> m41_43  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m41_30 -> m41_31  [color=green, key=0, style=solid];
m41_30 -> m41_32  [color=green, key=2, style=dotted];
m41_31 -> m41_29  [color=blue, key=0, style=bold];
m41_6 -> m41_7  [color=green, key=0, style=solid];
m41_7 -> m41_8  [color=green, key=0, style=solid];
m41_7 -> m41_10  [color=green, key=2, style=dotted];
m41_8 -> m41_9  [color=green, key=0, style=solid];
m41_8 -> m41_10  [color=green, key=2, style=dotted];
m41_9 -> m41_6  [color=blue, key=0, style=bold];
m41_36 -> m41_37  [color=green, key=0, style=solid];
m41_37 -> m41_38  [color=green, key=0, style=solid];
m41_37 -> m41_35  [color=green, key=2, style=dotted];
m41_38 -> m41_36  [color=blue, key=0, style=bold];
m41_58 -> m41_59  [key=0, style=solid];
m41_58 -> m41_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_59 -> m41_60  [key=0, style=solid];
m41_59 -> m41_62  [key=2, style=dotted];
m41_60 -> m41_61  [key=0, style=solid];
m41_60 -> m41_63  [key=2, style=dotted];
m41_60 -> m41_64  [key=2, style=dotted];
m41_61 -> m41_58  [color=blue, key=0, style=bold];
m41_53 -> m41_54  [color=green, key=0, style=solid];
m41_54 -> m41_55  [color=green, key=0, style=solid];
m41_54 -> m41_15  [color=green, key=2, style=dotted];
m41_54 -> m41_51  [color=green, key=2, style=dotted];
m41_55 -> m41_56  [color=green, key=0, style=solid];
m41_55 -> m41_57  [color=green, key=2, style=dotted];
m41_56 -> m41_53  [color=blue, key=0, style=bold];
m41_76 -> m41_77  [key=0, style=solid];
m41_76 -> m41_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_76 -> m41_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_77 -> m41_15  [key=2, style=dotted];
m41_77 -> m41_51  [key=2, style=dotted];
m41_77 -> m41_78  [key=0, style=solid];
m41_77 -> m41_79  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m41_77 -> m41_80  [color=darkseagreen4, key=1, label=registeredQueues, style=dashed];
m41_78 -> m41_79  [key=0, style=solid];
m41_78 -> m41_82  [key=2, style=dotted];
m41_79 -> m41_80  [key=0, style=solid];
m41_79 -> m41_82  [key=2, style=dotted];
m41_80 -> m41_81  [key=0, style=solid];
m41_80 -> m41_82  [key=2, style=dotted];
m41_81 -> m41_76  [color=blue, key=0, style=bold];
m41_43 -> m41_44  [color=green, key=0, style=solid];
m41_44 -> m41_45  [color=green, key=0, style=solid];
m41_44 -> m41_29  [color=green, key=2, style=dotted];
m41_45 -> m41_46  [color=green, key=0, style=solid];
m41_45 -> m41_5  [color=green, key=2, style=dotted];
m41_46 -> m41_43  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [color=green, key=0, style=solid];
m41_1 -> m41_2  [color=green, key=0, style=solid];
m41_1 -> m41_4  [color=green, key=0, style=solid];
m41_2 -> m41_3  [color=green, key=0, style=solid];
m41_2 -> m41_5  [color=green, key=2, style=dotted];
m41_3 -> m41_4  [color=green, key=0, style=solid];
m41_4 -> m41_0  [color=blue, key=0, style=bold];
m41_16 -> m41_17  [color=green, key=0, style=solid];
m41_16 -> m41_18  [color=green, key=1, label=string, style=dashed];
m41_17 -> m41_18  [color=green, key=0, style=solid];
m41_17 -> m41_10  [color=green, key=2, style=dotted];
m41_18 -> m41_19  [color=green, key=0, style=solid];
m41_18 -> m41_15  [color=green, key=2, style=dotted];
m41_18 -> m41_10  [color=green, key=2, style=dotted];
m41_19 -> m41_16  [color=blue, key=0, style=bold];
m41_70 -> m41_71  [key=0, style=solid];
m41_70 -> m41_72  [color=darkseagreen4, key=1, label=Table, style=dashed];
m41_71 -> m41_15  [key=2, style=dotted];
m41_71 -> m41_72  [key=0, style=solid];
m41_71 -> m41_74  [key=2, style=dotted];
m41_72 -> m41_73  [key=0, style=solid];
m41_72 -> m41_75  [key=2, style=dotted];
m41_73 -> m41_70  [color=blue, key=0, style=bold];
m41_89 -> m41_87  [color=blue, key=0, style=bold];
m41_88 -> m41_15  [key=2, style=dotted];
m41_88 -> m41_89  [key=0, style=solid];
m41_88 -> m41_86  [key=2, style=dotted];
m41_88 -> m41_69  [key=2, style=dotted];
m41_87 -> m41_88  [key=0, style=solid];
m41_11 -> m41_12  [color=green, key=0, style=solid];
m41_12 -> m41_13  [color=green, key=0, style=solid];
m41_12 -> m41_15  [color=green, key=2, style=dotted];
m41_12 -> m41_10  [color=green, key=2, style=dotted];
m41_13 -> m41_14  [color=green, key=0, style=solid];
m41_13 -> m41_10  [color=green, key=2, style=dotted];
m41_14 -> m41_11  [color=blue, key=0, style=bold];
m41_23 -> m41_24  [color=green, key=0, style=solid];
m41_23 -> m41_25  [color=green, key=1, label=string, style=dashed];
m41_24 -> m41_25  [color=green, key=0, style=solid];
m41_24 -> m41_27  [color=green, key=2, style=dotted];
m41_25 -> m41_26  [color=green, key=0, style=solid];
m41_25 -> m41_15  [color=green, key=2, style=dotted];
m41_25 -> m41_28  [color=green, key=2, style=dotted];
m41_26 -> m41_23  [color=blue, key=0, style=bold];
m41_32 -> m41_30  [color=green, key=3, label="Parameter variable int workers", style=bold];
m41_32 -> m41_33  [color=green, key=0, style=solid];
m41_32 -> m41_29  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m41_33 -> m41_34  [color=green, key=0, style=solid];
m41_33 -> m41_35  [color=green, key=2, style=dotted];
m41_34 -> m41_32  [color=blue, key=0, style=bold];
m41_85 -> m41_83  [color=blue, key=0, style=bold];
m41_84 -> m41_15  [key=2, style=dotted];
m41_84 -> m41_85  [key=0, style=solid];
m41_84 -> m41_86  [key=2, style=dotted];
m41_84 -> m41_69  [key=2, style=dotted];
m41_83 -> m41_84  [key=0, style=solid];
m41_65 -> m41_66  [key=0, style=solid];
m41_65 -> m41_67  [color=darkseagreen4, key=1, label=string, style=dashed];
m41_66 -> m41_67  [key=0, style=solid];
m41_66 -> m41_62  [key=2, style=dotted];
m41_67 -> m41_68  [key=0, style=solid];
m41_67 -> m41_63  [key=2, style=dotted];
m41_67 -> m41_69  [key=2, style=dotted];
m41_68 -> m41_65  [color=blue, key=0, style=bold];
m41_90 -> m41_1  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_2  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_3  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_30  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_33  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_37  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_39  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_44  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_45  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_59  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m41_90 -> m41_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m43_15 -> m43_13  [key=0, style=solid];
m43_15 -> m43_28  [key=2, style=dotted];
m43_15 -> m43_15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m43_16 -> m43_17  [key=0, style=solid];
m43_16 -> m43_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m43_16 -> m43_29  [key=2, style=dotted];
m43_16 -> m43_20  [color=darkseagreen4, key=1, label=connection, style=dashed];
m43_16 -> m43_22  [color=red, key=1, label=connection, style=dashed];
m43_17 -> m43_5  [key=2, style=dotted];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_6  [key=2, style=dotted];
m43_17 -> m43_30  [key=2, style=dotted];
m43_18 -> m43_5  [key=2, style=dotted];
m43_18 -> m43_19  [key=0, style=solid];
m43_18 -> m43_11  [key=2, style=dotted];
m43_18 -> m43_31  [key=2, style=dotted];
m43_19 -> m43_16  [color=blue, key=0, style=bold];
m43_19 -> m43_20  [key=0, style=solid];
m43_19 -> m43_25  [key=0, style=solid];
m43_19 -> m43_22  [color=red, key=1, label=recurringJobId, style=dashed];
m43_19 -> m43_24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m43_2 -> m43_3  [key=0, style=solid];
m43_2 -> m43_10  [key=0, style=solid];
m43_2 -> d5  [key=2, style=dotted];
m43_3 -> m43_5  [key=2, style=dotted];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_6  [key=2, style=dotted];
m43_4 -> m43_2  [color=blue, key=0, style=bold];
m43_4 -> m43_10  [key=0, style=solid];
m43_4 -> d5  [key=2, style=dotted];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_7  [key=0, style=solid];
m43_32 -> m43_30  [color=blue, key=0, style=bold];
m43_38 -> m43_39  [key=0, style=solid];
m43_39 -> m43_5  [key=2, style=dotted];
m43_39 -> m43_40  [key=0, style=solid];
m43_39 -> m43_42  [key=2, style=dotted];
m43_39 -> m43_52  [key=2, style=dotted];
m43_39 -> m43_46  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m43_39 -> m43_47  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m43_40 -> m43_41  [color=red, key=0, style=solid];
m43_40 -> m43_43  [key=2, style=dotted];
m43_40 -> m43_46  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
m43_41 -> m43_38  [color=blue, key=0, style=bold];
m43_41 -> m43_42  [color=red, key=0, style=solid];
m43_41 -> m43_47  [color=red, key=0, style=solid];
m43_41 -> m43_53  [color=red, key=2, style=dotted];
m43_26 -> m43_27  [key=0, style=solid];
m43_26 -> m43_29  [key=2, style=dotted];
m43_43 -> m43_44  [key=0, style=solid];
m43_43 -> m43_49  [key=0, style=solid];
m43_42 -> m43_43  [key=0, style=solid];
m43_42 -> m43_54  [key=2, style=dotted];
m43_42 -> m43_42  [color=darkorchid, key=3, label="Local variable string addStateSql", style=bold];
m43_33 -> m43_34  [color=green, key=0, style=solid];
m43_34 -> m43_35  [color=green, key=0, style=solid];
m43_34 -> m43_5  [color=green, key=2, style=dotted];
m43_34 -> m43_28  [color=green, key=2, style=dotted];
m43_34 -> m43_36  [key=0, style=solid];
m43_34 -> m43_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m43_34 -> m43_41  [color=red, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m43_34 -> m43_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m43_34 -> m43_46  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m43_34 -> m43_48  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m43_35 -> m43_36  [key=0, style=solid];
m43_35 -> m43_37  [key=2, style=dotted];
m43_36 -> m43_33  [color=blue, key=0, style=bold];
m43_36 -> m43_37  [key=0, style=solid];
m43_36 -> m43_50  [key=2, style=dotted];
m43_31 -> m43_5  [key=2, style=dotted];
m43_31 -> m43_32  [key=0, style=solid];
m43_31 -> m43_23  [key=2, style=dotted];
m43_7 -> m43_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_7 -> m43_8  [key=0, style=solid];
m43_9 -> m43_5  [key=2, style=dotted];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_11  [key=2, style=dotted];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_6  [key=2, style=dotted];
m43_10 -> m43_7  [color=blue, key=0, style=bold];
m43_10 -> m43_0  [color=blue, key=0, style=bold];
m43_30 -> m43_31  [key=0, style=solid];
m43_24 -> m43_25  [key=0, style=solid];
m43_24 -> m43_19  [key=0, style=solid];
m43_24 -> m43_35  [key=2, style=dotted];
m43_25 -> m43_5  [key=2, style=dotted];
m43_25 -> m43_28  [key=2, style=dotted];
m43_25 -> m43_26  [key=0, style=solid];
m43_25 -> m43_12  [color=blue, key=0, style=bold];
m43_27 -> m43_24  [color=blue, key=0, style=bold];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_16  [key=0, style=solid];
m43_13 -> m43_6  [key=2, style=dotted];
m43_13 -> m43_15  [key=2, style=dotted];
m43_14 -> m43_15  [key=0, style=solid];
m43_14 -> m43_26  [key=2, style=dotted];
m43_14 -> m43_27  [key=2, style=dotted];
m43_14 -> m43_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m43_14 -> m43_12  [color=blue, key=0, style=bold];
m43_20 -> m43_21  [key=0, style=solid];
m43_20 -> m43_32  [key=2, style=dotted];
m43_20 -> m43_33  [key=2, style=dotted];
m43_20 -> m43_22  [color=red, key=1, label=recurringJob, style=dashed];
m43_22 -> m43_23  [color=red, key=0, style=solid];
m43_22 -> m43_19  [color=red, key=0, style=solid];
m43_22 -> m43_34  [color=red, key=2, style=dotted];
m43_22 -> m43_20  [color=blue, key=0, style=bold];
m43_21 -> m43_22  [color=red, key=0, style=solid];
m43_21 -> m43_19  [key=0, style=solid];
m43_21 -> m43_5  [key=2, style=dotted];
m43_21 -> m43_23  [key=2, style=dotted];
m43_23 -> m43_24  [key=0, style=solid];
m43_23 -> m43_23  [color=darkorchid, key=3, label="Local variable string addAndSetStateSql", style=bold];
m43_46 -> m43_49  [key=0, style=solid];
m43_46 -> m43_32  [key=2, style=dotted];
m43_46 -> m43_57  [key=2, style=dotted];
m43_46 -> m43_58  [key=2, style=dotted];
m43_46 -> m43_59  [key=2, style=dotted];
m43_46 -> m43_60  [key=2, style=dotted];
m43_46 -> m43_47  [key=0, style=solid];
m43_46 -> m43_43  [key=2, style=dotted];
m43_48 -> m43_49  [key=0, style=solid];
m43_48 -> m43_32  [key=2, style=dotted];
m43_48 -> m43_57  [key=2, style=dotted];
m43_48 -> m43_58  [key=2, style=dotted];
m43_48 -> m43_60  [key=2, style=dotted];
m43_37 -> m43_38  [key=0, style=solid];
m43_37 -> m43_51  [key=2, style=dotted];
m43_37 -> m43_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m43_45 -> m43_46  [key=0, style=solid];
m43_45 -> m43_56  [key=2, style=dotted];
m43_45 -> m43_5  [key=2, style=dotted];
m43_45 -> m43_42  [key=2, style=dotted];
m43_47 -> m43_48  [key=0, style=solid];
m43_47 -> m43_59  [key=2, style=dotted];
m43_47 -> m43_44  [color=blue, key=0, style=bold];
m43_44 -> m43_45  [key=0, style=solid];
m43_44 -> m43_55  [key=2, style=dotted];
m43_44 -> m43_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m43_49 -> m43_34  [color=blue, key=0, style=bold];
m43_61 -> m43_62  [key=0, style=solid];
m43_62 -> m43_63  [key=0, style=solid];
m43_63 -> m43_61  [color=blue, key=0, style=bold];
m43_6 -> m43_10  [key=0, style=solid];
m43_6 -> d5  [key=2, style=dotted];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_3  [color=darkseagreen4, key=1, label="HangFire.IBackgroundJobClient", style=dashed];
m43_0 -> m43_5  [color=darkseagreen4, key=1, label="HangFire.Server.IDateTimeProvider", style=dashed];
m43_0 -> m43_7  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m43_0 -> m43_8  [color=darkseagreen4, key=1, label="HangFire.IBackgroundJobClient", style=dashed];
m43_0 -> m43_9  [color=darkseagreen4, key=1, label="HangFire.Server.IDateTimeProvider", style=dashed];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_3  [key=0, style=solid];
m43_64 -> m43_7  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_8  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_9  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_13  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_16  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_22  [color=red, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_40  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_45  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_46  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m43_64 -> m43_47  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
m44_0 -> m44_1  [color=red, key=0, style=solid];
m44_1 -> m44_2  [color=red, key=0, style=solid];
m44_1 -> m44_3  [color=red, key=2, style=dotted];
m44_2 -> m44_0  [color=blue, key=0, style=bold];
m45_7 -> m45_8  [color=red, key=0, style=solid];
m45_8 -> m45_9  [color=red, key=0, style=solid];
m45_8 -> m45_5  [color=red, key=2, style=dotted];
m45_9 -> m45_10  [color=red, key=0, style=solid];
m45_9 -> m45_9  [color=red, key=1, label=stateMock, style=dashed];
m45_10 -> m45_11  [color=red, key=0, style=solid];
m45_10 -> m45_12  [color=red, key=2, style=dotted];
m45_10 -> m45_13  [color=red, key=2, style=dotted];
m45_11 -> m45_7  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [color=red, key=0, style=solid];
m45_1 -> m45_2  [color=red, key=0, style=solid];
m45_1 -> m45_5  [color=red, key=2, style=dotted];
m45_2 -> m45_3  [color=red, key=0, style=solid];
m45_2 -> m45_2  [color=red, key=1, label=stateMock, style=dashed];
m45_3 -> m45_4  [color=red, key=0, style=solid];
m45_3 -> m45_6  [color=red, key=2, style=dotted];
m45_4 -> m45_0  [color=blue, key=0, style=bold];
m46_38 -> m46_68  [key=0, style=solid];
m46_38 -> m46_69  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
m46_38 -> m46_70  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
m46_38 -> m46_74  [color=darkseagreen4, key=1, label="HangFire.States.StateContext", style=dashed];
m46_38 -> m46_31  [color=darkorchid, key=3, label="Parameter variable HangFire.States.StateContext context", style=bold];
m46_38 -> m46_58  [color=darkorchid, key=3, label="Parameter variable HangFire.States.StateContext context", style=bold];
m46_38 -> m46_32  [color=darkorchid, key=3, label="Parameter variable string oldStateName", style=bold];
m46_38 -> m46_71  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m46_38 -> m46_50  [color=darkorchid, key=3, label="method methodReturn bool ChangeState", style=bold];
m46_68 -> m46_69  [key=0, style=solid];
m46_68 -> m46_77  [key=2, style=dotted];
m46_68 -> m46_70  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m46_69 -> m46_70  [key=0, style=solid];
m46_69 -> m46_78  [key=2, style=dotted];
m46_70 -> m46_71  [key=0, style=solid];
m46_70 -> m46_79  [key=2, style=dotted];
m46_74 -> m46_75  [key=0, style=solid];
m46_74 -> m46_80  [key=2, style=dotted];
m46_74 -> m46_79  [key=2, style=dotted];
m46_71 -> m46_76  [key=0, style=solid];
m46_72 -> m46_73  [key=0, style=solid];
m46_73 -> m46_74  [key=0, style=solid];
m46_73 -> m46_66  [key=2, style=dotted];
m46_75 -> m46_76  [key=0, style=solid];
m46_76 -> m46_38  [color=blue, key=0, style=bold];
m46_10 -> m46_11  [key=0, style=solid];
m46_10 -> m46_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m46_10 -> m46_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m46_11 -> m46_12  [key=0, style=solid];
m46_11 -> m46_13  [key=0, style=solid];
m46_13 -> m46_14  [key=0, style=solid];
m46_12 -> m46_14  [key=0, style=solid];
m46_12 -> d5  [key=2, style=dotted];
m46_14 -> m46_10  [color=blue, key=0, style=bold];
m46_66 -> m46_0  [color=darkorchid, key=3, label="Field variable HangFire.Storage.IStorageConnection _connection", style=bold];
m46_78 -> m46_81  [key=0, style=solid];
m46_78 -> m46_82  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IElectStateFilter>", style=dashed];
m46_81 -> m46_82  [key=0, style=solid];
m46_81 -> m46_84  [key=2, style=dotted];
m46_82 -> m46_83  [key=0, style=solid];
m46_82 -> m46_85  [key=2, style=dotted];
m46_83 -> m46_78  [color=blue, key=0, style=bold];
m46_79 -> m46_86  [key=0, style=solid];
m46_79 -> m46_87  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IApplyStateFilter>", style=dashed];
m46_86 -> m46_87  [key=0, style=solid];
m46_86 -> m46_89  [key=2, style=dotted];
m46_87 -> m46_88  [key=0, style=solid];
m46_87 -> m46_90  [key=2, style=dotted];
m46_88 -> m46_79  [color=blue, key=0, style=bold];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
m46_0 -> m46_5  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m46_0 -> m46_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_9  [key=2, style=dotted];
m46_2 -> m46_7  [key=0, style=solid];
m46_2 -> d5  [key=2, style=dotted];
m46_4 -> m46_7  [key=0, style=solid];
m46_4 -> d5  [key=2, style=dotted];
m46_7 -> m46_0  [color=blue, key=0, style=bold];
m46_77 -> m46_91  [key=0, style=solid];
m46_91 -> m46_92  [key=0, style=solid];
m46_91 -> m46_93  [key=2, style=dotted];
m46_91 -> m46_94  [key=2, style=dotted];
m46_92 -> m46_77  [color=blue, key=0, style=bold];
m46_23 -> m46_24  [key=0, style=solid];
m46_23 -> m46_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m46_23 -> m46_28  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m46_23 -> m46_30  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m46_23 -> m46_31  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m46_23 -> m46_32  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m46_24 -> m46_25  [key=0, style=solid];
m46_24 -> m46_26  [key=0, style=solid];
m46_26 -> m46_27  [key=0, style=solid];
m46_26 -> m46_28  [key=0, style=solid];
m46_28 -> m46_29  [key=0, style=solid];
m46_28 -> m46_30  [key=0, style=solid];
m46_30 -> m46_31  [key=0, style=solid];
m46_30 -> m46_35  [key=2, style=dotted];
m46_30 -> m46_36  [key=2, style=dotted];
m46_30 -> m46_33  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m46_31 -> m46_32  [key=0, style=solid];
m46_31 -> m46_37  [key=2, style=dotted];
m46_32 -> m46_33  [key=0, style=solid];
m46_32 -> m46_38  [key=2, style=dotted];
m46_25 -> m46_34  [key=0, style=solid];
m46_25 -> d5  [key=2, style=dotted];
m46_27 -> m46_34  [key=0, style=solid];
m46_27 -> d5  [key=2, style=dotted];
m46_29 -> m46_34  [key=0, style=solid];
m46_29 -> d5  [key=2, style=dotted];
m46_33 -> m46_34  [key=0, style=solid];
m46_34 -> m46_23  [color=blue, key=0, style=bold];
m46_65 -> m46_9  [color=darkorchid, key=3, label="Field variable HangFire.States.StateHandlerCollection _handlerCollection", style=bold];
m46_39 -> m46_40  [key=0, style=solid];
m46_39 -> m46_42  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m46_39 -> m46_44  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_39 -> m46_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_39 -> m46_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_39 -> m46_51  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m46_39 -> m46_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_39 -> m46_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m46_39 -> m46_50  [color=darkorchid, key=3, label="method methodReturn bool TryToChangeState", style=bold];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_42  [key=0, style=solid];
m46_42 -> m46_43  [key=0, style=solid];
m46_42 -> m46_44  [key=0, style=solid];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_46  [key=0, style=solid];
m46_46 -> m46_47  [key=0, style=solid];
m46_46 -> m46_62  [key=2, style=dotted];
m46_48 -> m46_49  [key=0, style=solid];
m46_48 -> m46_63  [key=2, style=dotted];
m46_48 -> m46_51  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_48 -> m46_53  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_48 -> m46_58  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_48 -> m46_59  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m46_51 -> m46_52  [key=0, style=solid];
m46_51 -> m46_53  [key=0, style=solid];
m46_51 -> m46_64  [key=2, style=dotted];
m46_56 -> m46_57  [key=0, style=solid];
m46_56 -> m46_66  [key=2, style=dotted];
m46_56 -> m46_67  [key=2, style=dotted];
m46_56 -> m46_56  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m46_56 -> m46_59  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m46_58 -> m46_59  [key=0, style=solid];
m46_58 -> m46_37  [key=2, style=dotted];
m46_41 -> m46_61  [key=0, style=solid];
m46_41 -> d5  [key=2, style=dotted];
m46_43 -> m46_61  [key=0, style=solid];
m46_43 -> d5  [key=2, style=dotted];
m46_45 -> m46_61  [key=0, style=solid];
m46_45 -> d5  [key=2, style=dotted];
m46_47 -> m46_48  [key=0, style=solid];
m46_49 -> m46_50  [key=0, style=solid];
m46_49 -> m46_51  [key=0, style=solid];
m46_53 -> m46_54  [key=0, style=solid];
m46_53 -> m46_65  [key=2, style=dotted];
m46_59 -> m46_60  [key=0, style=solid];
m46_59 -> m46_38  [key=2, style=dotted];
m46_50 -> m46_61  [key=0, style=solid];
m46_52 -> m46_61  [key=0, style=solid];
m46_54 -> m46_55  [key=0, style=solid];
m46_54 -> m46_58  [key=0, style=solid];
m46_55 -> m46_56  [key=0, style=solid];
m46_57 -> m46_58  [key=0, style=solid];
m46_57 -> m46_60  [color=darkseagreen4, key=1, label=loadSucceeded, style=dashed];
m46_60 -> m46_61  [key=0, style=solid];
m46_61 -> m46_39  [color=blue, key=0, style=bold];
m46_19 -> m46_20  [key=0, style=solid];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_18  [key=2, style=dotted];
m46_16 -> m46_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m46_15 -> m46_16  [key=0, style=solid];
m46_17 -> m46_15  [color=blue, key=0, style=bold];
m46_20 -> m46_21  [key=0, style=solid];
m46_20 -> m46_22  [key=2, style=dotted];
m46_21 -> m46_19  [color=blue, key=0, style=bold];
m46_9 -> m46_95  [key=0, style=solid];
m46_9 -> m46_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>", style=dashed];
m46_9 -> m46_0  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler> handlers", style=bold];
m46_95 -> m46_96  [key=0, style=solid];
m46_95 -> m46_100  [key=2, style=dotted];
m46_95 -> m46_97  [color=darkseagreen4, key=1, label=handlerCollection, style=dashed];
m46_95 -> m46_98  [color=darkseagreen4, key=1, label=handlerCollection, style=dashed];
m46_96 -> m46_97  [key=0, style=solid];
m46_96 -> m46_98  [key=0, style=solid];
m46_97 -> m46_96  [key=0, style=solid];
m46_97 -> m46_101  [key=2, style=dotted];
m46_98 -> m46_99  [key=0, style=solid];
m46_99 -> m46_9  [color=blue, key=0, style=bold];
m46_102 -> m46_5  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_6  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_13  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_30  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_32  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_46  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_48  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_59  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_69  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_70  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_74  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_81  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_86  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_87  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_102 -> m46_91  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m46_103 -> m46_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m47_35 -> m47_37  [key=2, style=dotted];
m47_35 -> m47_36  [key=0, style=solid];
m47_4 -> m47_5  [color=green, key=0, style=solid];
m47_5 -> m47_6  [color=green, key=0, style=solid];
m47_5 -> m47_7  [color=green, key=2, style=dotted];
m47_6 -> m47_4  [color=blue, key=0, style=bold];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_10  [key=2, style=dotted];
m47_6 -> m47_14  [color=darkseagreen4, key=1, label=factory, style=dashed];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> m47_3  [key=2, style=dotted];
m47_1 -> m47_4  [key=2, style=dotted];
m47_2 -> m47_0  [color=blue, key=0, style=bold];
m47_2 -> m47_3  [key=0, style=solid];
m47_7 -> m47_8  [key=0, style=solid];
m47_7 -> m47_11  [key=2, style=dotted];
m47_7 -> m47_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_7 -> m47_7  [color=darkorchid, key=3, label="Field variable string OldStateName", style=bold];
m47_7 -> m47_5  [color=green, key=3, label="Parameter variable string name", style=bold];
m47_7 -> m47_9  [color=green, key=1, label=string, style=dashed];
m47_7 -> m47_4  [color=darkorchid, key=3, label="Parameter variable System.DateTime startedAt", style=bold];
m47_8 -> m47_9  [color=green, key=0, style=solid];
m47_8 -> m47_12  [key=2, style=dotted];
m47_8 -> m47_8  [color=darkorchid, key=3, label="Field variable string JobId", style=bold];
m47_8 -> m47_11  [key=2, style=dotted];
m47_9 -> m47_5  [color=blue, key=0, style=bold];
m47_9 -> m47_10  [color=green, key=0, style=solid];
m47_9 -> m47_12  [color=green, key=2, style=dotted];
m47_9 -> m47_13  [color=green, key=2, style=dotted];
m47_9 -> m47_14  [color=green, key=2, style=dotted];
m47_14 -> m47_15  [key=0, style=solid];
m47_14 -> m47_16  [key=2, style=dotted];
m47_13 -> m47_14  [key=0, style=solid];
m47_3 -> m47_0  [color=blue, key=0, style=bold];
m47_37 -> m47_5  [color=green, key=3, label="Parameter variable string name", style=bold];
m47_37 -> m47_38  [key=0, style=solid];
m47_37 -> m47_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_37 -> m47_14  [color=darkseagreen4, key=1, label=factory, style=dashed];
m47_38 -> m47_39  [key=0, style=solid];
m47_38 -> m47_31  [key=2, style=dotted];
m47_38 -> m47_41  [key=2, style=dotted];
m47_38 -> m47_23  [color=darkseagreen4, key=1, label=factory, style=dashed];
m47_39 -> m47_12  [key=2, style=dotted];
m47_39 -> m47_40  [key=0, style=solid];
m47_39 -> m47_33  [key=2, style=dotted];
m47_39 -> m47_41  [key=2, style=dotted];
m47_40 -> m47_37  [color=blue, key=0, style=bold];
m47_10 -> m47_33  [key=0, style=solid];
m47_10 -> m47_7  [color=blue, key=0, style=bold];
m47_33 -> m47_34  [key=0, style=solid];
m47_33 -> m47_35  [key=2, style=dotted];
m47_34 -> m47_10  [color=blue, key=0, style=bold];
m47_34 -> m47_35  [key=0, style=solid];
m47_23 -> m47_24  [key=0, style=solid];
m47_23 -> m47_16  [key=2, style=dotted];
m47_20 -> m47_21  [key=0, style=solid];
m47_20 -> m47_12  [key=2, style=dotted];
m47_21 -> m47_22  [key=0, style=solid];
m47_21 -> m47_23  [key=2, style=dotted];
m47_21 -> m47_17  [color=blue, key=0, style=bold];
m47_22 -> m47_20  [color=blue, key=0, style=bold];
m47_22 -> m47_23  [key=0, style=solid];
m47_36 -> m47_34  [color=blue, key=0, style=bold];
m47_36 -> m47_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_36 -> m47_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_36 -> m47_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_36 -> m47_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_36 -> m47_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_36 -> m47_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_36 -> m47_27  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m47_15 -> m47_16  [key=0, style=solid];
m47_15 -> m47_13  [color=blue, key=0, style=bold];
m47_16 -> m47_12  [key=2, style=dotted];
m47_16 -> m47_13  [key=2, style=dotted];
m47_16 -> m47_14  [key=2, style=dotted];
m47_16 -> m47_17  [key=0, style=solid];
m47_17 -> m47_15  [color=blue, key=0, style=bold];
m47_17 -> m47_18  [color=red, key=0, style=solid];
m47_18 -> m47_19  [color=red, key=0, style=solid];
m47_18 -> m47_10  [color=red, key=2, style=dotted];
m47_18 -> m47_23  [color=red, key=1, label=factory, style=dashed];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_11  [key=2, style=dotted];
m47_19 -> m47_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_27 -> m47_5  [color=green, key=3, label="Parameter variable string name", style=bold];
m47_27 -> m47_28  [key=0, style=solid];
m47_27 -> m47_29  [color=darkseagreen4, key=1, label=instant, style=dashed];
m47_27 -> m47_16  [key=2, style=dotted];
m47_28 -> m47_29  [key=0, style=solid];
m47_28 -> m47_31  [key=2, style=dotted];
m47_28 -> m47_32  [key=2, style=dotted];
m47_29 -> m47_12  [key=2, style=dotted];
m47_29 -> m47_30  [key=0, style=solid];
m47_29 -> m47_33  [key=2, style=dotted];
m47_29 -> m47_32  [key=2, style=dotted];
m47_29 -> m47_31  [key=2, style=dotted];
m47_30 -> m47_27  [color=blue, key=0, style=bold];
m47_30 -> m47_25  [color=blue, key=0, style=bold];
m47_24 -> m47_22  [color=blue, key=0, style=bold];
m47_24 -> m47_25  [key=0, style=solid];
m47_25 -> m47_26  [key=0, style=solid];
m47_25 -> m47_27  [key=2, style=dotted];
m47_26 -> m47_27  [key=0, style=solid];
m47_26 -> m47_10  [key=2, style=dotted];
m47_26 -> m47_24  [color=blue, key=0, style=bold];
m47_42 -> m47_5  [color=green, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m47_42 -> m47_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m47_42 -> m47_21  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m47_42 -> m47_25  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m47_42 -> m47_35  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m48_8 -> m48_9  [key=0, style=solid];
m48_9 -> m48_10  [key=0, style=solid];
m48_9 -> m48_11  [key=2, style=dotted];
m48_10 -> m48_8  [color=blue, key=0, style=bold];
m48_3 -> m48_4  [key=0, style=solid];
m48_4 -> m48_5  [key=0, style=solid];
m48_4 -> m48_6  [key=2, style=dotted];
m48_4 -> m48_7  [key=2, style=dotted];
m48_5 -> m48_3  [color=blue, key=0, style=bold];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_2  [key=0, style=solid];
m48_2 -> m48_0  [color=blue, key=0, style=bold];
m48_12 -> m48_13  [key=0, style=solid];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> m48_15  [key=2, style=dotted];
m48_14 -> m48_12  [color=blue, key=0, style=bold];
m48_16 -> m48_1  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m48_16 -> m48_4  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m49_6 -> m49_7  [key=0, style=solid];
m49_7 -> m49_8  [key=0, style=solid];
m49_7 -> m49_4  [key=2, style=dotted];
m49_7 -> m49_9  [color=darkseagreen4, key=1, label=state, style=dashed];
m49_8 -> m49_9  [key=0, style=solid];
m49_8 -> m49_11  [key=2, style=dotted];
m49_9 -> m49_10  [key=0, style=solid];
m49_9 -> m49_12  [key=2, style=dotted];
m49_9 -> m49_5  [key=2, style=dotted];
m49_10 -> m49_6  [color=blue, key=0, style=bold];
m49_0 -> m49_1  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> m49_4  [key=2, style=dotted];
m49_2 -> m49_3  [key=0, style=solid];
m49_2 -> m49_5  [key=2, style=dotted];
m49_3 -> m49_0  [color=blue, key=0, style=bold];
m49_13 -> m49_14  [key=0, style=solid];
m49_14 -> m49_15  [color=red, key=0, style=solid];
m49_14 -> m49_4  [key=2, style=dotted];
m49_15 -> m49_16  [color=red, key=0, style=solid];
m49_15 -> m49_17  [color=red, key=2, style=dotted];
m49_16 -> m49_13  [color=blue, key=0, style=bold];
m50_23 -> m50_24  [key=0, style=solid];
m50_24 -> m50_25  [key=0, style=solid];
m50_25 -> m50_23  [color=blue, key=0, style=bold];
m50_0 -> m50_1  [color=red, key=0, style=solid];
m50_0 -> m50_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m50_0 -> m50_5  [color=red, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m50_0 -> m50_7  [color=red, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m50_0 -> m50_9  [color=red, key=1, label="HangFire.JobStorage", style=dashed];
m50_0 -> m50_10  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m50_0 -> m50_11  [color=red, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m50_0 -> m50_12  [color=red, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m50_1 -> m50_2  [color=red, key=0, style=solid];
m50_1 -> m50_3  [color=red, key=0, style=solid];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_5  [color=red, key=0, style=solid];
m50_5 -> m50_6  [color=red, key=0, style=solid];
m50_5 -> m50_7  [color=red, key=0, style=solid];
m50_7 -> m50_8  [color=red, key=0, style=solid];
m50_7 -> m50_9  [color=red, key=0, style=solid];
m50_9 -> m50_10  [color=red, key=0, style=solid];
m50_10 -> m50_11  [color=red, key=0, style=solid];
m50_11 -> m50_12  [color=red, key=0, style=solid];
m50_12 -> m50_13  [color=red, key=0, style=solid];
m50_2 -> m50_13  [color=red, key=0, style=solid];
m50_2 -> d5  [color=red, key=2, style=dotted];
m50_4 -> m50_13  [key=0, style=solid];
m50_4 -> d5  [key=2, style=dotted];
m50_6 -> m50_13  [color=red, key=0, style=solid];
m50_6 -> d5  [color=red, key=2, style=dotted];
m50_8 -> m50_13  [color=red, key=0, style=solid];
m50_8 -> d5  [color=red, key=2, style=dotted];
m50_13 -> m50_0  [color=blue, key=0, style=bold];
m50_22 -> m50_26  [color=red, key=0, style=solid];
m50_22 -> m50_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_22 -> m50_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_22 -> m50_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_22 -> m50_34  [color=darkseagreen4, key=1, label="HangFire.Server.IJobPerformanceProcess", style=dashed];
m50_22 -> m50_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m50_26 -> m50_27  [color=red, key=0, style=solid];
m50_26 -> m50_42  [color=red, key=2, style=dotted];
m50_26 -> m50_28  [color=red, key=1, label=stateMachine, style=dashed];
m50_26 -> m50_40  [color=red, key=1, label=stateMachine, style=dashed];
m50_28 -> m50_29  [key=0, style=solid];
m50_28 -> m50_30  [color=red, key=0, style=solid];
m50_28 -> m50_44  [key=2, style=dotted];
m50_31 -> m50_32  [key=0, style=solid];
m50_31 -> m50_45  [key=2, style=dotted];
m50_31 -> m50_33  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m50_31 -> m50_34  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m50_33 -> m50_34  [key=0, style=solid];
m50_33 -> m50_47  [key=2, style=dotted];
m50_34 -> m50_35  [key=0, style=solid];
m50_34 -> m50_48  [key=2, style=dotted];
m50_40 -> m50_41  [key=0, style=solid];
m50_40 -> m50_44  [key=2, style=dotted];
m50_27 -> m50_28  [color=red, key=0, style=solid];
m50_27 -> m50_43  [color=red, key=2, style=dotted];
m50_29 -> m50_41  [key=0, style=solid];
m50_30 -> m50_31  [color=red, key=0, style=solid];
m50_32 -> m50_33  [key=0, style=solid];
m50_32 -> m50_46  [key=2, style=dotted];
m50_35 -> m50_36  [key=0, style=solid];
m50_35 -> m50_38  [key=0, style=solid];
m50_35 -> m50_40  [key=0, style=solid];
m50_35 -> m50_49  [key=2, style=dotted];
m50_36 -> m50_37  [key=0, style=solid];
m50_38 -> m50_39  [key=0, style=solid];
m50_37 -> m50_40  [key=0, style=solid];
m50_37 -> m50_50  [key=2, style=dotted];
m50_39 -> m50_40  [key=0, style=solid];
m50_39 -> m50_50  [key=2, style=dotted];
m50_41 -> m50_22  [color=blue, key=0, style=bold];
m50_15 -> m50_16  [color=red, key=0, style=solid];
m50_15 -> m50_17  [color=red, key=1, label="System.Threading.CancellationToken", style=dashed];
m50_16 -> m50_17  [color=red, key=0, style=solid];
m50_16 -> m50_20  [color=red, key=2, style=dotted];
m50_16 -> m50_18  [color=red, key=1, label=connection, style=dashed];
m50_17 -> m50_18  [color=red, key=0, style=solid];
m50_17 -> m50_21  [color=red, key=2, style=dotted];
m50_18 -> m50_19  [color=red, key=0, style=solid];
m50_18 -> m50_22  [color=red, key=2, style=dotted];
m50_19 -> m50_15  [color=blue, key=0, style=bold];
m50_51 -> m50_9  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_10  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_11  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_12  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_16  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_17  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_18  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_26  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_27  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
m50_51 -> m50_33  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m51_8 -> m51_6  [color=blue, key=0, style=bold];
m51_39 -> m51_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_37 -> m51_19  [color=green, key=1, label=string, style=dashed];
m51_28 -> m51_29  [key=0, style=solid];
m51_28 -> m51_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_28 -> m51_44  [key=2, style=dotted];
m51_29 -> m51_9  [key=2, style=dotted];
m51_29 -> m51_30  [key=0, style=solid];
m51_29 -> m51_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_29 -> m51_45  [key=2, style=dotted];
m51_30 -> m51_28  [color=blue, key=0, style=bold];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_47  [key=2, style=dotted];
m51_30 -> m51_30  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_36 -> m51_11  [color=green, key=1, label="System.TimeSpan", style=dashed];
m51_21 -> m51_22  [key=0, style=solid];
m51_21 -> m51_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_21 -> m51_26  [key=0, style=solid];
m51_21 -> m51_41  [key=2, style=dotted];
m51_21 -> m51_42  [key=2, style=dotted];
m51_21 -> m51_43  [key=2, style=dotted];
m51_21 -> m51_32  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_21 -> m51_33  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m51_22 -> m51_9  [key=2, style=dotted];
m51_22 -> m51_23  [key=0, style=solid];
m51_22 -> m51_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m51_23 -> m51_21  [color=blue, key=0, style=bold];
m51_23 -> m51_24  [key=0, style=solid];
m51_23 -> m51_44  [key=2, style=dotted];
m51_41 -> m51_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_42 -> m51_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m51_0 -> m51_1  [color=red, key=0, style=solid];
m51_0 -> m51_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m51_0 -> m51_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m51_0 -> m51_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m51_1 -> m51_2  [color=red, key=0, style=solid];
m51_1 -> m51_3  [color=red, key=0, style=solid];
m51_3 -> m51_4  [color=red, key=0, style=solid];
m51_3 -> m51_5  [color=red, key=0, style=solid];
m51_5 -> m51_6  [key=0, style=solid];
m51_6 -> m51_7  [color=green, key=0, style=solid];
m51_6 -> m51_11  [color=green, key=1, label=string, style=dashed];
m51_2 -> m51_7  [color=red, key=0, style=solid];
m51_2 -> m51_8  [color=red, key=2, style=dotted];
m51_2 -> m51_4  [key=0, style=solid];
m51_2 -> d5  [key=2, style=dotted];
m51_4 -> m51_7  [color=red, key=0, style=solid];
m51_4 -> m51_8  [color=red, key=2, style=dotted];
m51_4 -> m51_0  [color=blue, key=0, style=bold];
m51_7 -> m51_0  [color=blue, key=0, style=bold];
m51_7 -> m51_8  [color=green, key=0, style=solid];
m51_7 -> m51_9  [color=green, key=2, style=dotted];
m51_7 -> m51_10  [color=green, key=1, label="lambda expression", style=dashed];
m51_9 -> m51_10  [key=0, style=solid];
m51_9 -> m51_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m51_9 -> m51_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_9 -> m51_21  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m51_50 -> m51_51  [key=0, style=solid];
m51_50 -> m51_52  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m51_51 -> m51_52  [key=0, style=solid];
m51_51 -> m51_36  [key=2, style=dotted];
m51_51 -> m51_37  [key=2, style=dotted];
m51_52 -> m51_53  [key=0, style=solid];
m51_52 -> m51_54  [key=2, style=dotted];
m51_53 -> m51_50  [color=blue, key=0, style=bold];
m51_38 -> m51_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m51_13 -> m51_34  [key=0, style=solid];
m51_13 -> m51_35  [key=2, style=dotted];
m51_15 -> m51_16  [color=green, key=0, style=solid];
m51_15 -> m51_19  [color=green, key=1, label=string, style=dashed];
m51_16 -> m51_17  [color=green, key=0, style=solid];
m51_16 -> m51_9  [color=green, key=2, style=dotted];
m51_16 -> m51_18  [color=green, key=1, label="lambda expression", style=dashed];
m51_17 -> m51_15  [color=blue, key=0, style=bold];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_36  [key=2, style=dotted];
m51_17 -> m51_37  [key=2, style=dotted];
m51_17 -> m51_21  [color=darkseagreen4, key=1, label=fetchJobSqlTemplate, style=dashed];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_38  [key=2, style=dotted];
m51_31 -> m51_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_10 -> m51_11  [color=green, key=0, style=solid];
m51_10 -> m51_12  [key=0, style=solid];
m51_11 -> m51_12  [color=green, key=0, style=solid];
m51_11 -> m51_13  [color=green, key=2, style=dotted];
m51_11 -> m51_14  [color=green, key=2, style=dotted];
m51_11 -> m51_34  [key=0, style=solid];
m51_11 -> m51_8  [key=2, style=dotted];
m51_12 -> m51_10  [color=blue, key=0, style=bold];
m51_12 -> m51_13  [key=0, style=solid];
m51_12 -> m51_14  [key=0, style=solid];
m51_18 -> m51_19  [color=green, key=0, style=solid];
m51_18 -> m51_38  [key=2, style=dotted];
m51_18 -> m51_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_18 -> m51_30  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m51_19 -> m51_20  [color=green, key=0, style=solid];
m51_19 -> m51_14  [color=green, key=2, style=dotted];
m51_19 -> m51_39  [key=2, style=dotted];
m51_19 -> m51_21  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_19 -> m51_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_19 -> m51_29  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_19 -> m51_33  [color=darkseagreen4, key=1, label=connection, style=dashed];
m51_20 -> m51_18  [color=blue, key=0, style=bold];
m51_20 -> m51_21  [key=0, style=solid];
m51_20 -> m51_40  [key=2, style=dotted];
m51_20 -> m51_23  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m51_20 -> m51_27  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m51_20 -> m51_28  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m51_20 -> m51_33  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m51_25 -> m51_14  [key=2, style=dotted];
m51_25 -> m51_26  [key=0, style=solid];
m51_25 -> m51_27  [key=2, style=dotted];
m51_25 -> m51_34  [key=0, style=solid];
m51_32 -> m51_14  [key=2, style=dotted];
m51_32 -> m51_33  [key=0, style=solid];
m51_32 -> m51_27  [key=2, style=dotted];
m51_32 -> m51_17  [key=0, style=solid];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_45  [key=2, style=dotted];
m51_26 -> m51_24  [color=blue, key=0, style=bold];
m51_26 -> m51_27  [key=0, style=solid];
m51_26 -> m51_32  [key=0, style=solid];
m51_33 -> m51_31  [color=blue, key=0, style=bold];
m51_33 -> m51_34  [key=0, style=solid];
m51_33 -> m51_48  [key=2, style=dotted];
m51_33 -> m51_49  [key=2, style=dotted];
m51_40 -> m51_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_46  [key=2, style=dotted];
m51_35 -> m51_11  [color=green, key=1, label=string, style=dashed];
m51_14 -> m51_15  [key=0, style=solid];
m51_34 -> m51_9  [color=blue, key=0, style=bold];
m51_34 -> m51_7  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m51_34 -> m51_16  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m51_34 -> m51_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m51_34 -> m51_22  [color=darkseagreen4, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m51_34 -> m51_29  [color=darkseagreen4, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m51_55 -> m51_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m51_55 -> m51_51  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m52_0 -> m52_1  [color=green, key=0, style=solid];
m52_1 -> m52_2  [color=green, key=0, style=solid];
m52_1 -> m52_3  [color=green, key=2, style=dotted];
m52_2 -> m52_0  [color=blue, key=0, style=bold];
m52_4 -> m52_5  [color=green, key=0, style=solid];
m52_5 -> m52_6  [color=green, key=0, style=solid];
m52_5 -> m52_7  [color=green, key=2, style=dotted];
m52_5 -> m52_8  [color=green, key=1, label="lambda expression", style=dashed];
m52_6 -> m52_4  [color=blue, key=0, style=bold];
m52_16 -> m52_30  [color=green, key=0, style=solid];
m52_30 -> m52_31  [color=green, key=0, style=solid];
m52_30 -> m52_11  [color=green, key=2, style=dotted];
m52_31 -> m52_16  [color=blue, key=0, style=bold];
m52_12 -> m52_13  [color=red, key=0, style=solid];
m52_13 -> m52_14  [color=red, key=0, style=solid];
m52_13 -> m52_16  [color=red, key=2, style=dotted];
m52_14 -> m52_15  [key=0, style=solid];
m52_14 -> m52_17  [key=2, style=dotted];
m52_15 -> m52_12  [color=blue, key=0, style=bold];
m52_18 -> m52_19  [color=red, key=0, style=solid];
m52_19 -> m52_20  [color=red, key=0, style=solid];
m52_19 -> m52_7  [color=red, key=2, style=dotted];
m52_19 -> m52_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m52_20 -> m52_18  [color=blue, key=0, style=bold];
m52_25 -> m52_26  [key=0, style=solid];
m52_26 -> m52_27  [key=0, style=solid];
m52_26 -> m52_16  [key=2, style=dotted];
m52_26 -> m52_28  [color=darkseagreen4, key=1, label=context, style=dashed];
m52_27 -> m52_28  [key=0, style=solid];
m52_27 -> m52_24  [key=2, style=dotted];
m52_28 -> m52_29  [key=0, style=solid];
m52_28 -> m52_17  [key=2, style=dotted];
m52_29 -> m52_25  [color=blue, key=0, style=bold];
m52_21 -> m52_22  [color=red, key=0, style=solid];
m52_8 -> m52_9  [color=green, key=0, style=solid];
m52_9 -> m52_10  [color=green, key=0, style=solid];
m52_9 -> m52_11  [color=green, key=2, style=dotted];
m52_10 -> m52_8  [color=blue, key=0, style=bold];
m52_22 -> m52_23  [color=red, key=0, style=solid];
m52_22 -> m52_24  [color=red, key=2, style=dotted];
m52_23 -> m52_21  [color=blue, key=0, style=bold];
m52_32 -> m52_1  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m52_32 -> m52_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m52_32 -> m52_26  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m52_32 -> m52_30  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m54_219 -> m54_220  [key=0, style=solid];
m54_220 -> m54_221  [key=0, style=solid];
m54_220 -> m54_20  [key=2, style=dotted];
m54_220 -> m54_25  [key=2, style=dotted];
m54_220 -> m54_225  [key=2, style=dotted];
m54_220 -> m54_21  [key=2, style=dotted];
m54_220 -> m54_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_221 -> m54_222  [key=0, style=solid];
m54_221 -> m54_89  [key=2, style=dotted];
m54_222 -> m54_223  [key=0, style=solid];
m54_222 -> m54_90  [key=2, style=dotted];
m54_223 -> m54_224  [key=0, style=solid];
m54_223 -> m54_91  [key=2, style=dotted];
m54_223 -> m54_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_224 -> m54_219  [color=blue, key=0, style=bold];
m54_62 -> m54_63  [color=red, key=0, style=solid];
m54_63 -> m54_64  [color=red, key=0, style=solid];
m54_63 -> m54_35  [color=red, key=2, style=dotted];
m54_63 -> m54_66  [color=red, key=1, label="lambda expression", style=dashed];
m54_64 -> m54_65  [color=red, key=0, style=solid];
m54_64 -> m54_57  [color=red, key=2, style=dotted];
m54_65 -> m54_62  [color=blue, key=0, style=bold];
m54_112 -> m54_113  [key=0, style=solid];
m54_113 -> m54_114  [key=0, style=solid];
m54_113 -> m54_20  [key=2, style=dotted];
m54_113 -> m54_119  [key=2, style=dotted];
m54_113 -> m54_21  [key=2, style=dotted];
m54_113 -> m54_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_114 -> m54_115  [key=0, style=solid];
m54_114 -> m54_20  [key=2, style=dotted];
m54_114 -> m54_119  [key=2, style=dotted];
m54_114 -> m54_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_115 -> m54_116  [key=0, style=solid];
m54_115 -> m54_20  [key=2, style=dotted];
m54_115 -> m54_119  [key=2, style=dotted];
m54_115 -> m54_21  [key=2, style=dotted];
m54_115 -> m54_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_116 -> m54_117  [key=0, style=solid];
m54_116 -> m54_89  [key=2, style=dotted];
m54_117 -> m54_118  [key=0, style=solid];
m54_117 -> m54_90  [key=2, style=dotted];
m54_118 -> m54_112  [color=blue, key=0, style=bold];
m54_183 -> m54_184  [key=0, style=solid];
m54_184 -> m54_185  [key=0, style=solid];
m54_184 -> m54_190  [key=2, style=dotted];
m54_184 -> m54_188  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_184 -> m54_196  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_184 -> m54_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_185 -> m54_186  [key=0, style=solid];
m54_185 -> m54_20  [key=2, style=dotted];
m54_185 -> m54_191  [key=2, style=dotted];
m54_185 -> m54_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_188 -> m54_189  [key=0, style=solid];
m54_188 -> m54_91  [key=2, style=dotted];
m54_188 -> m54_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_186 -> m54_187  [key=0, style=solid];
m54_186 -> m54_89  [key=2, style=dotted];
m54_187 -> m54_188  [key=0, style=solid];
m54_187 -> m54_90  [key=2, style=dotted];
m54_189 -> m54_183  [color=blue, key=0, style=bold];
m54_52 -> m54_234  [key=0, style=solid];
m54_234 -> m54_52  [color=blue, key=0, style=bold];
m54_172 -> m54_173  [key=0, style=solid];
m54_173 -> m54_174  [key=0, style=solid];
m54_173 -> m54_89  [key=2, style=dotted];
m54_174 -> m54_175  [key=0, style=solid];
m54_174 -> m54_90  [key=2, style=dotted];
m54_175 -> m54_176  [key=0, style=solid];
m54_175 -> m54_91  [key=2, style=dotted];
m54_175 -> m54_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_176 -> m54_172  [color=blue, key=0, style=bold];
m54_202 -> m54_203  [key=0, style=solid];
m54_203 -> m54_204  [key=0, style=solid];
m54_203 -> m54_190  [key=2, style=dotted];
m54_203 -> m54_207  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_203 -> m54_214  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_203 -> m54_217  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_204 -> m54_205  [key=0, style=solid];
m54_204 -> m54_20  [key=2, style=dotted];
m54_204 -> m54_209  [key=2, style=dotted];
m54_204 -> m54_191  [key=2, style=dotted];
m54_204 -> m54_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_207 -> m54_208  [key=0, style=solid];
m54_207 -> m54_91  [key=2, style=dotted];
m54_207 -> m54_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_205 -> m54_206  [key=0, style=solid];
m54_205 -> m54_89  [key=2, style=dotted];
m54_206 -> m54_207  [key=0, style=solid];
m54_206 -> m54_90  [key=2, style=dotted];
m54_208 -> m54_202  [color=blue, key=0, style=bold];
m54_141 -> m54_142  [key=0, style=solid];
m54_142 -> m54_143  [key=0, style=solid];
m54_142 -> m54_89  [key=2, style=dotted];
m54_143 -> m54_144  [key=0, style=solid];
m54_143 -> m54_90  [key=2, style=dotted];
m54_144 -> m54_145  [key=0, style=solid];
m54_144 -> m54_91  [key=2, style=dotted];
m54_144 -> m54_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_145 -> m54_141  [color=blue, key=0, style=bold];
m54_0 -> m54_1  [color=red, key=0, style=solid];
m54_1 -> m54_2  [color=red, key=0, style=solid];
m54_2 -> m54_3  [color=red, key=0, style=solid];
m54_2 -> m54_16  [color=red, key=2, style=dotted];
m54_3 -> m54_4  [color=red, key=0, style=solid];
m54_3 -> m54_17  [color=red, key=2, style=dotted];
m54_4 -> m54_5  [color=red, key=0, style=solid];
m54_4 -> m54_18  [color=red, key=2, style=dotted];
m54_5 -> m54_6  [key=0, style=solid];
m54_5 -> m54_19  [key=2, style=dotted];
m54_6 -> m54_7  [key=0, style=solid];
m54_6 -> m54_20  [key=2, style=dotted];
m54_6 -> m54_21  [key=2, style=dotted];
m54_6 -> m54_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_7 -> m54_8  [color=red, key=0, style=solid];
m54_7 -> m54_22  [key=2, style=dotted];
m54_8 -> m54_9  [color=red, key=0, style=solid];
m54_8 -> m54_20  [color=red, key=2, style=dotted];
m54_8 -> m54_21  [color=red, key=2, style=dotted];
m54_8 -> m54_32  [color=red, key=1, label="lambda expression", style=dashed];
m54_9 -> m54_10  [color=red, key=0, style=solid];
m54_9 -> m54_23  [color=red, key=2, style=dotted];
m54_10 -> m54_11  [color=red, key=0, style=solid];
m54_10 -> m54_24  [key=2, style=dotted];
m54_11 -> m54_12  [color=red, key=0, style=solid];
m54_11 -> m54_20  [color=red, key=2, style=dotted];
m54_11 -> m54_21  [color=red, key=2, style=dotted];
m54_11 -> m54_37  [color=red, key=1, label="lambda expression", style=dashed];
m54_12 -> m54_13  [color=red, key=0, style=solid];
m54_12 -> m54_20  [color=red, key=2, style=dotted];
m54_12 -> m54_21  [color=red, key=2, style=dotted];
m54_12 -> m54_41  [color=red, key=1, label="lambda expression", style=dashed];
m54_13 -> m54_14  [color=red, key=0, style=solid];
m54_13 -> m54_20  [color=red, key=2, style=dotted];
m54_13 -> m54_25  [color=red, key=2, style=dotted];
m54_13 -> m54_26  [color=red, key=2, style=dotted];
m54_13 -> m54_21  [color=red, key=2, style=dotted];
m54_13 -> m54_45  [color=red, key=1, label="lambda expression", style=dashed];
m54_13 -> m54_49  [color=red, key=1, label="lambda expression", style=dashed];
m54_14 -> m54_15  [key=0, style=solid];
m54_14 -> m54_27  [key=2, style=dotted];
m54_15 -> m54_0  [color=blue, key=0, style=bold];
m54_152 -> m54_153  [key=0, style=solid];
m54_153 -> m54_154  [key=0, style=solid];
m54_153 -> m54_20  [key=2, style=dotted];
m54_153 -> m54_21  [key=2, style=dotted];
m54_153 -> m54_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_154 -> m54_155  [key=0, style=solid];
m54_154 -> m54_89  [key=2, style=dotted];
m54_155 -> m54_156  [key=0, style=solid];
m54_155 -> m54_90  [key=2, style=dotted];
m54_156 -> m54_157  [key=0, style=solid];
m54_156 -> m54_91  [key=2, style=dotted];
m54_156 -> m54_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_157 -> m54_152  [color=blue, key=0, style=bold];
m54_83 -> m54_84  [key=0, style=solid];
m54_84 -> m54_85  [key=0, style=solid];
m54_84 -> m54_89  [key=2, style=dotted];
m54_85 -> m54_86  [key=0, style=solid];
m54_85 -> m54_90  [key=2, style=dotted];
m54_86 -> m54_87  [key=0, style=solid];
m54_86 -> m54_91  [key=2, style=dotted];
m54_86 -> m54_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_87 -> m54_88  [key=0, style=solid];
m54_87 -> m54_91  [key=2, style=dotted];
m54_87 -> m54_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_88 -> m54_83  [color=blue, key=0, style=bold];
m54_229 -> m54_230  [key=0, style=solid];
m54_28 -> m54_29  [key=0, style=solid];
m54_32 -> m54_33  [color=red, key=0, style=solid];
m54_37 -> m54_38  [color=red, key=0, style=solid];
m54_41 -> m54_42  [color=red, key=0, style=solid];
m54_45 -> m54_46  [color=red, key=0, style=solid];
m54_49 -> m54_50  [color=red, key=0, style=solid];
m54_29 -> m54_30  [key=0, style=solid];
m54_29 -> m54_31  [key=2, style=dotted];
m54_30 -> m54_28  [color=blue, key=0, style=bold];
m54_33 -> m54_34  [color=red, key=0, style=solid];
m54_33 -> m54_35  [color=red, key=2, style=dotted];
m54_33 -> m54_36  [color=red, key=2, style=dotted];
m54_34 -> m54_32  [color=blue, key=0, style=bold];
m54_38 -> m54_39  [color=red, key=0, style=solid];
m54_38 -> m54_40  [color=red, key=2, style=dotted];
m54_39 -> m54_37  [color=blue, key=0, style=bold];
m54_42 -> m54_43  [color=red, key=0, style=solid];
m54_42 -> m54_35  [color=red, key=2, style=dotted];
m54_42 -> m54_44  [color=red, key=2, style=dotted];
m54_43 -> m54_41  [color=blue, key=0, style=bold];
m54_46 -> m54_47  [color=red, key=0, style=solid];
m54_46 -> m54_48  [color=red, key=2, style=dotted];
m54_47 -> m54_45  [color=blue, key=0, style=bold];
m54_50 -> m54_51  [color=red, key=0, style=solid];
m54_50 -> m54_52  [color=red, key=2, style=dotted];
m54_51 -> m54_49  [color=blue, key=0, style=bold];
m54_58 -> m54_59  [color=red, key=0, style=solid];
m54_59 -> m54_60  [color=red, key=0, style=solid];
m54_59 -> m54_61  [color=red, key=2, style=dotted];
m54_60 -> m54_58  [color=blue, key=0, style=bold];
m54_66 -> m54_67  [color=red, key=0, style=solid];
m54_67 -> m54_68  [color=red, key=0, style=solid];
m54_67 -> m54_61  [color=red, key=2, style=dotted];
m54_68 -> m54_66  [color=blue, key=0, style=bold];
m54_73 -> m54_74  [color=red, key=0, style=solid];
m54_74 -> m54_75  [color=red, key=0, style=solid];
m54_74 -> m54_61  [color=red, key=2, style=dotted];
m54_75 -> m54_73  [color=blue, key=0, style=bold];
m54_80 -> m54_81  [color=red, key=0, style=solid];
m54_81 -> m54_82  [color=red, key=0, style=solid];
m54_81 -> m54_61  [color=red, key=2, style=dotted];
m54_82 -> m54_80  [color=blue, key=0, style=bold];
m54_92 -> m54_93  [key=0, style=solid];
m54_95 -> m54_96  [key=0, style=solid];
m54_93 -> m54_94  [key=0, style=solid];
m54_93 -> m54_31  [key=2, style=dotted];
m54_94 -> m54_92  [color=blue, key=0, style=bold];
m54_96 -> m54_97  [key=0, style=solid];
m54_96 -> m54_98  [key=2, style=dotted];
m54_97 -> m54_95  [color=blue, key=0, style=bold];
m54_105 -> m54_106  [color=red, key=0, style=solid];
m54_108 -> m54_109  [key=0, style=solid];
m54_106 -> m54_107  [color=red, key=0, style=solid];
m54_106 -> m54_36  [color=red, key=2, style=dotted];
m54_107 -> m54_105  [color=blue, key=0, style=bold];
m54_109 -> m54_110  [key=0, style=solid];
m54_109 -> m54_111  [key=2, style=dotted];
m54_110 -> m54_108  [color=blue, key=0, style=bold];
m54_120 -> m54_121  [key=0, style=solid];
m54_123 -> m54_124  [key=0, style=solid];
m54_127 -> m54_128  [key=0, style=solid];
m54_121 -> m54_122  [key=0, style=solid];
m54_121 -> m54_35  [key=2, style=dotted];
m54_121 -> m54_44  [key=2, style=dotted];
m54_122 -> m54_120  [color=blue, key=0, style=bold];
m54_124 -> m54_125  [key=0, style=solid];
m54_124 -> m54_35  [key=2, style=dotted];
m54_124 -> m54_126  [key=2, style=dotted];
m54_125 -> m54_123  [color=blue, key=0, style=bold];
m54_128 -> m54_129  [key=0, style=solid];
m54_128 -> m54_35  [key=2, style=dotted];
m54_128 -> m54_44  [key=2, style=dotted];
m54_129 -> m54_127  [color=blue, key=0, style=bold];
m54_135 -> m54_136  [color=red, key=0, style=solid];
m54_136 -> m54_137  [color=red, key=0, style=solid];
m54_136 -> m54_35  [color=red, key=2, style=dotted];
m54_136 -> m54_44  [color=red, key=2, style=dotted];
m54_136 -> m54_138  [color=red, key=1, label="lambda expression", style=dashed];
m54_137 -> m54_135  [color=blue, key=0, style=bold];
m54_138 -> m54_139  [color=red, key=0, style=solid];
m54_139 -> m54_140  [color=red, key=0, style=solid];
m54_140 -> m54_138  [color=blue, key=0, style=bold];
m54_146 -> m54_147  [key=0, style=solid];
m54_147 -> m54_148  [key=0, style=solid];
m54_147 -> m54_35  [key=2, style=dotted];
m54_147 -> m54_44  [key=2, style=dotted];
m54_147 -> m54_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_148 -> m54_146  [color=blue, key=0, style=bold];
m54_149 -> m54_150  [key=0, style=solid];
m54_150 -> m54_151  [key=0, style=solid];
m54_151 -> m54_149  [color=blue, key=0, style=bold];
m54_158 -> m54_159  [key=0, style=solid];
m54_161 -> m54_162  [key=0, style=solid];
m54_159 -> m54_160  [key=0, style=solid];
m54_159 -> m54_35  [key=2, style=dotted];
m54_159 -> m54_44  [key=2, style=dotted];
m54_160 -> m54_158  [color=blue, key=0, style=bold];
m54_162 -> m54_163  [key=0, style=solid];
m54_162 -> m54_35  [key=2, style=dotted];
m54_162 -> m54_126  [key=2, style=dotted];
m54_163 -> m54_161  [color=blue, key=0, style=bold];
m54_169 -> m54_170  [key=0, style=solid];
m54_170 -> m54_171  [key=0, style=solid];
m54_170 -> m54_35  [key=2, style=dotted];
m54_170 -> m54_126  [key=2, style=dotted];
m54_171 -> m54_169  [color=blue, key=0, style=bold];
m54_177 -> m54_178  [key=0, style=solid];
m54_178 -> m54_179  [key=0, style=solid];
m54_178 -> m54_35  [key=2, style=dotted];
m54_178 -> m54_44  [key=2, style=dotted];
m54_178 -> m54_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_179 -> m54_177  [color=blue, key=0, style=bold];
m54_180 -> m54_181  [key=0, style=solid];
m54_181 -> m54_182  [key=0, style=solid];
m54_182 -> m54_180  [color=blue, key=0, style=bold];
m54_196 -> m54_197  [key=0, style=solid];
m54_196 -> m54_35  [key=2, style=dotted];
m54_196 -> m54_44  [key=2, style=dotted];
m54_196 -> m54_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_199 -> m54_200  [key=0, style=solid];
m54_199 -> m54_201  [key=2, style=dotted];
m54_192 -> m54_193  [key=0, style=solid];
m54_195 -> m54_196  [key=0, style=solid];
m54_193 -> m54_194  [key=0, style=solid];
m54_193 -> m54_35  [key=2, style=dotted];
m54_193 -> m54_126  [key=2, style=dotted];
m54_194 -> m54_192  [color=blue, key=0, style=bold];
m54_197 -> m54_195  [color=blue, key=0, style=bold];
m54_198 -> m54_199  [key=0, style=solid];
m54_200 -> m54_198  [color=blue, key=0, style=bold];
m54_214 -> m54_215  [key=0, style=solid];
m54_214 -> m54_35  [key=2, style=dotted];
m54_214 -> m54_44  [key=2, style=dotted];
m54_214 -> m54_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_217 -> m54_218  [key=0, style=solid];
m54_210 -> m54_211  [key=0, style=solid];
m54_213 -> m54_214  [key=0, style=solid];
m54_211 -> m54_212  [key=0, style=solid];
m54_211 -> m54_35  [key=2, style=dotted];
m54_211 -> m54_126  [key=2, style=dotted];
m54_212 -> m54_210  [color=blue, key=0, style=bold];
m54_215 -> m54_213  [color=blue, key=0, style=bold];
m54_216 -> m54_217  [key=0, style=solid];
m54_218 -> m54_216  [color=blue, key=0, style=bold];
m54_226 -> m54_227  [key=0, style=solid];
m54_227 -> m54_228  [key=0, style=solid];
m54_227 -> m54_48  [key=2, style=dotted];
m54_228 -> m54_226  [color=blue, key=0, style=bold];
m54_230 -> m54_231  [key=0, style=solid];
m54_230 -> m54_35  [key=2, style=dotted];
m54_230 -> m54_44  [key=2, style=dotted];
m54_231 -> m54_229  [color=blue, key=0, style=bold];
m54_130 -> m54_131  [key=0, style=solid];
m54_131 -> m54_132  [key=0, style=solid];
m54_131 -> m54_89  [key=2, style=dotted];
m54_132 -> m54_133  [color=red, key=0, style=solid];
m54_132 -> m54_90  [key=2, style=dotted];
m54_133 -> m54_134  [color=red, key=0, style=solid];
m54_133 -> m54_91  [color=red, key=2, style=dotted];
m54_133 -> m54_135  [color=red, key=1, label="lambda expression", style=dashed];
m54_134 -> m54_130  [color=blue, key=0, style=bold];
m54_99 -> m54_100  [key=0, style=solid];
m54_100 -> m54_101  [key=0, style=solid];
m54_100 -> m54_89  [key=2, style=dotted];
m54_101 -> m54_102  [color=red, key=0, style=solid];
m54_101 -> m54_90  [key=2, style=dotted];
m54_102 -> m54_103  [color=red, key=0, style=solid];
m54_102 -> m54_91  [color=red, key=2, style=dotted];
m54_102 -> m54_105  [color=red, key=1, label="lambda expression", style=dashed];
m54_103 -> m54_104  [key=0, style=solid];
m54_103 -> m54_91  [key=2, style=dotted];
m54_103 -> m54_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_104 -> m54_99  [color=blue, key=0, style=bold];
m54_76 -> m54_77  [color=red, key=0, style=solid];
m54_77 -> m54_78  [color=red, key=0, style=solid];
m54_77 -> m54_35  [color=red, key=2, style=dotted];
m54_77 -> m54_80  [color=red, key=1, label="lambda expression", style=dashed];
m54_78 -> m54_79  [color=red, key=0, style=solid];
m54_78 -> m54_57  [color=red, key=2, style=dotted];
m54_79 -> m54_76  [color=blue, key=0, style=bold];
m54_89 -> m54_232  [color=red, key=0, style=solid];
m54_232 -> m54_233  [color=red, key=0, style=solid];
m54_232 -> m54_61  [color=red, key=2, style=dotted];
m54_233 -> m54_89  [color=blue, key=0, style=bold];
m54_69 -> m54_70  [color=red, key=0, style=solid];
m54_70 -> m54_71  [color=red, key=0, style=solid];
m54_70 -> m54_35  [color=red, key=2, style=dotted];
m54_70 -> m54_73  [color=red, key=1, label="lambda expression", style=dashed];
m54_71 -> m54_72  [color=red, key=0, style=solid];
m54_71 -> m54_57  [color=red, key=2, style=dotted];
m54_72 -> m54_69  [color=blue, key=0, style=bold];
m54_53 -> m54_54  [color=red, key=0, style=solid];
m54_54 -> m54_55  [color=red, key=0, style=solid];
m54_54 -> m54_35  [color=red, key=2, style=dotted];
m54_54 -> m54_58  [color=red, key=1, label="lambda expression", style=dashed];
m54_55 -> m54_56  [key=0, style=solid];
m54_55 -> m54_57  [key=2, style=dotted];
m54_56 -> m54_53  [color=blue, key=0, style=bold];
m54_164 -> m54_165  [key=0, style=solid];
m54_165 -> m54_166  [key=0, style=solid];
m54_165 -> m54_89  [key=2, style=dotted];
m54_166 -> m54_167  [key=0, style=solid];
m54_166 -> m54_90  [key=2, style=dotted];
m54_167 -> m54_168  [key=0, style=solid];
m54_167 -> m54_91  [key=2, style=dotted];
m54_167 -> m54_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m54_168 -> m54_164  [color=blue, key=0, style=bold];
m54_235 -> m54_1  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_2  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_3  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_4  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_8  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_33  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_9  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_10  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_11  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_38  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_12  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_13  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_46  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_14  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_54  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_59  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_63  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_67  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_70  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_74  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_77  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_81  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_84  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_100  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_102  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_106  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_128  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_116  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_133  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_136  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_139  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_142  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_143  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_165  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_185  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_186  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_196  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_204  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_205  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_206  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_207  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_220  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_227  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_221  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_222  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_223  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_235 -> m54_232  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m54_236 -> m54_196  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_236 -> m54_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_237 -> m54_214  [color=darkseagreen4, key=1, label=exception, style=dashed];
m54_237 -> m54_217  [color=darkseagreen4, key=1, label=exception, style=dashed];
m55_24 -> m55_25  [key=0, style=solid];
m55_25 -> m55_26  [key=0, style=solid];
m55_25 -> m55_27  [key=2, style=dotted];
m55_26 -> m55_24  [color=blue, key=0, style=bold];
m55_28 -> m55_29  [key=0, style=solid];
m55_29 -> m55_30  [key=0, style=solid];
m55_29 -> m55_31  [key=2, style=dotted];
m55_30 -> m55_28  [color=blue, key=0, style=bold];
m55_17 -> m55_8  [color=green, key=3, label="Parameter variable HangFire.Server.WorkerContext context", style=bold];
m55_17 -> m55_32  [color=green, key=0, style=solid];
m55_32 -> m55_33  [color=green, key=0, style=solid];
m55_32 -> m55_34  [color=green, key=2, style=dotted];
m55_32 -> m55_35  [color=green, key=2, style=dotted];
m55_33 -> m55_17  [color=blue, key=0, style=bold];
m55_0 -> m55_1  [color=green, key=0, style=solid];
m55_0 -> m55_3  [color=green, key=1, label=int, style=dashed];
m55_0 -> m55_8  [color=green, key=1, label="HangFire.Server.SharedWorkerContext", style=dashed];
m55_0 -> m55_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m55_0 -> m55_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m55_1 -> m55_2  [color=green, key=0, style=solid];
m55_1 -> m55_3  [color=green, key=0, style=solid];
m55_1 -> m55_0  [color=blue, key=0, style=bold];
m55_2 -> m55_12  [color=green, key=0, style=solid];
m55_2 -> d5  [color=green, key=2, style=dotted];
m55_3 -> m55_4  [color=green, key=0, style=solid];
m55_3 -> m55_5  [color=green, key=0, style=solid];
m55_4 -> m55_12  [color=green, key=0, style=solid];
m55_4 -> m55_14  [color=green, key=2, style=dotted];
m55_5 -> m55_6  [key=0, style=solid];
m55_5 -> m55_15  [key=2, style=dotted];
m55_5 -> m55_9  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m55_5 -> m55_11  [color=darkseagreen4, key=1, label=workerRunners, style=dashed];
m55_8 -> m55_9  [color=green, key=0, style=solid];
m55_8 -> m55_16  [color=green, key=2, style=dotted];
m55_7 -> m55_8  [color=green, key=0, style=solid];
m55_7 -> m55_7  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m55_7 -> m55_11  [key=0, style=solid];
m55_6 -> m55_8  [color=green, key=1, label=i, style=dashed];
m55_6 -> m55_7  [key=0, style=solid];
m55_6 -> m55_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_9 -> m55_17  [key=2, style=dotted];
m55_9 -> m55_10  [key=0, style=solid];
m55_9 -> m55_18  [key=2, style=dotted];
m55_11 -> m55_12  [key=0, style=solid];
m55_11 -> m55_19  [key=2, style=dotted];
m55_10 -> m55_7  [key=0, style=solid];
m55_10 -> m55_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m55_12 -> m55_0  [color=blue, key=0, style=bold];
m55_20 -> m55_21  [key=0, style=solid];
m55_21 -> m55_22  [key=0, style=solid];
m55_21 -> m55_23  [key=2, style=dotted];
m55_22 -> m55_20  [color=blue, key=0, style=bold];
m55_36 -> m55_9  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m55_36 -> m55_11  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m55_36 -> m55_21  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m55_36 -> m55_25  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m55_36 -> m55_29  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerManager", style=dashed];
m56_3 -> m56_4  [color=red, key=0, style=solid];
m56_3 -> m56_10  [color=red, key=2, style=dotted];
m56_4 -> m56_5  [color=red, key=0, style=solid];
m56_4 -> m56_106  [color=green, key=2, style=dotted];
m56_4 -> m56_11  [key=2, style=dotted];
m56_5 -> m56_3  [color=blue, key=0, style=bold];
m56_5 -> m56_6  [color=red, key=0, style=solid];
m56_5 -> m56_12  [color=red, key=2, style=dotted];
m56_39 -> m56_47  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m56_39 -> m56_50  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_39 -> m56_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_39 -> m56_40  [color=red, key=0, style=solid];
m56_39 -> m56_41  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m56_39 -> m56_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m56_48 -> m56_49  [color=red, key=0, style=solid];
m56_48 -> m56_11  [key=2, style=dotted];
m56_48 -> m56_50  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_48 -> m56_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m56_48 -> m56_27  [color=red, key=2, style=dotted];
m56_47 -> m56_48  [color=red, key=0, style=solid];
m56_47 -> m56_32  [key=2, style=dotted];
m56_47 -> m56_58  [key=2, style=dotted];
m56_47 -> m56_18  [color=red, key=2, style=dotted];
m56_47 -> m56_50  [color=red, key=1, label="lambda expression", style=dashed];
m56_49 -> m56_50  [key=0, style=solid];
m56_49 -> m56_59  [key=2, style=dotted];
m56_49 -> m56_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_49 -> m56_46  [color=blue, key=0, style=bold];
m56_50 -> m56_51  [color=red, key=0, style=solid];
m56_50 -> m56_59  [key=2, style=dotted];
m56_50 -> m56_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_50 -> m56_165  [key=0, style=solid];
m56_51 -> m56_52  [color=red, key=0, style=solid];
m56_51 -> m56_60  [key=2, style=dotted];
m56_51 -> m56_31  [color=red, key=2, style=dotted];
m56_42 -> m56_47  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m56_42 -> m56_49  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m56_42 -> m56_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m56_42 -> m56_43  [key=0, style=solid];
m56_42 -> m56_57  [key=2, style=dotted];
m56_42 -> m56_44  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m56_42 -> m56_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m56_42 -> m56_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m56_42 -> m56_39  [color=blue, key=0, style=bold];
m56_46 -> m56_47  [color=red, key=0, style=solid];
m56_46 -> m56_58  [key=2, style=dotted];
m56_40 -> m56_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_40 -> m56_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_40 -> m56_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_40 -> m56_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_40 -> m56_41  [color=red, key=0, style=solid];
m56_40 -> m56_54  [key=2, style=dotted];
m56_40 -> m56_55  [key=2, style=dotted];
m56_40 -> m56_52  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_40 -> m56_18  [color=red, key=2, style=dotted];
m56_40 -> m56_43  [color=red, key=1, label="lambda expression", style=dashed];
m56_52 -> m56_53  [key=0, style=solid];
m56_52 -> m56_50  [color=blue, key=0, style=bold];
m56_41 -> m56_42  [color=red, key=0, style=solid];
m56_41 -> m56_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m56_41 -> m56_56  [key=2, style=dotted];
m56_41 -> m56_43  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m56_41 -> m56_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m56_41 -> m56_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m56_41 -> m56_27  [color=red, key=2, style=dotted];
m56_43 -> m56_58  [key=2, style=dotted];
m56_43 -> m56_44  [color=red, key=0, style=solid];
m56_43 -> m56_161  [key=0, style=solid];
m56_44 -> m56_58  [key=2, style=dotted];
m56_44 -> m56_45  [color=red, key=0, style=solid];
m56_44 -> m56_31  [color=red, key=2, style=dotted];
m56_45 -> m56_46  [key=0, style=solid];
m56_45 -> m56_58  [key=2, style=dotted];
m56_45 -> m56_43  [color=blue, key=0, style=bold];
m56_53 -> m56_39  [color=blue, key=0, style=bold];
m56_53 -> m56_54  [color=red, key=0, style=solid];
m56_102 -> m56_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_102 -> m56_103  [key=0, style=solid];
m56_102 -> m56_106  [key=2, style=dotted];
m56_105 -> m56_106  [key=0, style=solid];
m56_105 -> m56_29  [key=2, style=dotted];
m56_105 -> m56_96  [key=2, style=dotted];
m56_105 -> m56_108  [color=darkseagreen4, key=1, label=entries, style=dashed];
m56_105 -> m56_111  [color=darkseagreen4, key=1, label=entries, style=dashed];
m56_105 -> m56_101  [color=blue, key=0, style=bold];
m56_103 -> m56_105  [key=0, style=solid];
m56_103 -> m56_104  [key=0, style=solid];
m56_103 -> m56_82  [key=2, style=dotted];
m56_103 -> m56_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_106 -> m56_107  [key=0, style=solid];
m56_106 -> m56_108  [key=0, style=solid];
m56_108 -> m56_109  [key=0, style=solid];
m56_108 -> m56_114  [key=2, style=dotted];
m56_108 -> m56_110  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m56_108 -> m56_111  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m56_108 -> m56_106  [key=2, style=dotted];
m56_111 -> m56_112  [key=0, style=solid];
m56_111 -> m56_116  [key=2, style=dotted];
m56_111 -> m56_97  [key=2, style=dotted];
m56_111 -> m56_106  [key=2, style=dotted];
m56_104 -> m56_112  [key=0, style=solid];
m56_104 -> d5  [key=2, style=dotted];
m56_104 -> m56_105  [key=0, style=solid];
m56_104 -> m56_82  [key=2, style=dotted];
m56_104 -> m56_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_107 -> m56_112  [key=0, style=solid];
m56_107 -> m56_108  [key=0, style=solid];
m56_109 -> m56_110  [key=0, style=solid];
m56_109 -> m56_115  [key=2, style=dotted];
m56_109 -> m56_107  [color=blue, key=0, style=bold];
m56_110 -> m56_111  [key=0, style=solid];
m56_110 -> m56_115  [key=2, style=dotted];
m56_112 -> m56_102  [color=blue, key=0, style=bold];
m56_112 -> m56_110  [color=blue, key=0, style=bold];
m56_94 -> m56_95  [key=0, style=solid];
m56_94 -> m56_100  [key=2, style=dotted];
m56_94 -> m56_97  [key=2, style=dotted];
m56_94 -> m56_101  [key=2, style=dotted];
m56_193 -> m56_194  [key=0, style=solid];
m56_193 -> m56_205  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m56_194 -> m56_195  [key=0, style=solid];
m56_194 -> m56_210  [key=2, style=dotted];
m56_194 -> m56_198  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m56_197 -> m56_198  [key=0, style=solid];
m56_197 -> m56_211  [key=2, style=dotted];
m56_197 -> m56_200  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m56_197 -> m56_201  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m56_206 -> m56_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m56_206 -> m56_207  [key=0, style=solid];
m56_206 -> m56_176  [key=2, style=dotted];
m56_195 -> m56_196  [key=0, style=solid];
m56_195 -> m56_167  [key=2, style=dotted];
m56_195 -> m56_200  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m56_195 -> m56_222  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m56_195 -> m56_203  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m56_198 -> m56_199  [key=0, style=solid];
m56_198 -> m56_201  [key=0, style=solid];
m56_196 -> m56_197  [key=0, style=solid];
m56_196 -> m56_205  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m56_200 -> m56_198  [key=0, style=solid];
m56_200 -> m56_59  [key=2, style=dotted];
m56_200 -> m56_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_200 -> m56_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_201 -> m56_202  [key=0, style=solid];
m56_201 -> m56_212  [key=2, style=dotted];
m56_205 -> m56_206  [key=0, style=solid];
m56_205 -> m56_203  [key=0, style=solid];
m56_205 -> m56_215  [key=2, style=dotted];
m56_204 -> m56_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m56_204 -> m56_205  [key=0, style=solid];
m56_204 -> m56_204  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m56_204 -> m56_213  [key=2, style=dotted];
m56_204 -> m56_214  [key=2, style=dotted];
m56_207 -> m56_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_207 -> m56_203  [key=0, style=solid];
m56_207 -> m56_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_203 -> m56_204  [key=0, style=solid];
m56_203 -> m56_208  [key=0, style=solid];
m56_199 -> m56_200  [key=0, style=solid];
m56_199 -> m56_222  [color=darkseagreen4, key=1, label=name, style=dashed];
m56_199 -> m56_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m56_202 -> m56_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_202 -> m56_203  [key=0, style=solid];
m56_202 -> m56_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m56_208 -> m56_209  [key=0, style=solid];
m56_209 -> m56_193  [color=blue, key=0, style=bold];
m56_101 -> m56_102  [key=0, style=solid];
m56_30 -> m56_28  [color=blue, key=0, style=bold];
m56_0 -> m56_1  [color=green, key=0, style=solid];
m56_1 -> m56_2  [color=green, key=0, style=solid];
m56_1 -> m56_8  [color=red, key=2, style=dotted];
m56_2 -> m56_3  [color=red, key=0, style=solid];
m56_2 -> m56_9  [color=red, key=2, style=dotted];
m56_2 -> m56_0  [color=blue, key=0, style=bold];
m56_6 -> m56_7  [key=0, style=solid];
m56_6 -> m56_13  [key=2, style=dotted];
m56_6 -> m56_14  [key=2, style=dotted];
m56_6 -> m56_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_6 -> m56_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_7 -> m56_0  [color=blue, key=0, style=bold];
m56_7 -> m56_8  [key=0, style=solid];
m56_32 -> m56_33  [color=red, key=0, style=solid];
m56_33 -> m56_34  [color=red, key=0, style=solid];
m56_33 -> m56_18  [color=red, key=2, style=dotted];
m56_33 -> m56_36  [color=red, key=1, label="lambda expression", style=dashed];
m56_34 -> m56_35  [key=0, style=solid];
m56_34 -> m56_27  [key=2, style=dotted];
m56_35 -> m56_32  [color=blue, key=0, style=bold];
m56_35 -> m56_36  [key=0, style=solid];
m56_55 -> m56_56  [color=red, key=0, style=solid];
m56_55 -> m56_27  [color=red, key=2, style=dotted];
m56_69 -> m56_70  [color=red, key=0, style=solid];
m56_69 -> m56_73  [color=red, key=2, style=dotted];
m56_70 -> m56_71  [key=0, style=solid];
m56_70 -> m56_29  [key=2, style=dotted];
m56_70 -> m56_96  [key=2, style=dotted];
m56_70 -> m56_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_79  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_85  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_86  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_94  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m56_70 -> m56_74  [key=2, style=dotted];
m56_71 -> m56_72  [key=0, style=solid];
m56_71 -> m56_73  [key=0, style=solid];
m56_71 -> m56_75  [key=2, style=dotted];
m56_78 -> m56_79  [key=0, style=solid];
m56_78 -> m56_80  [key=0, style=solid];
m56_78 -> m56_97  [key=2, style=dotted];
m56_78 -> m56_82  [key=2, style=dotted];
m56_78 -> m56_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_79 -> m56_80  [key=0, style=solid];
m56_79 -> m56_90  [color=darkseagreen4, key=1, label=type, style=dashed];
m56_79 -> m56_82  [key=2, style=dotted];
m56_79 -> m56_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_80 -> m56_81  [key=0, style=solid];
m56_80 -> m56_82  [key=0, style=solid];
m56_80 -> m56_97  [key=2, style=dotted];
m56_80 -> m56_76  [color=blue, key=0, style=bold];
m56_81 -> m56_82  [key=0, style=solid];
m56_81 -> m56_90  [color=darkseagreen4, key=1, label=method, style=dashed];
m56_82 -> m56_83  [key=0, style=solid];
m56_82 -> m56_84  [key=0, style=solid];
m56_82 -> m56_97  [key=2, style=dotted];
m56_83 -> m56_84  [key=0, style=solid];
m56_83 -> m56_90  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m56_84 -> m56_85  [key=0, style=solid];
m56_84 -> m56_86  [key=0, style=solid];
m56_84 -> m56_97  [key=2, style=dotted];
m56_84 -> m56_81  [key=2, style=dotted];
m56_85 -> m56_86  [key=0, style=solid];
m56_85 -> m56_90  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m56_85 -> m56_83  [color=blue, key=0, style=bold];
m56_86 -> m56_87  [key=0, style=solid];
m56_86 -> m56_88  [key=0, style=solid];
m56_86 -> m56_97  [key=2, style=dotted];
m56_87 -> m56_88  [key=0, style=solid];
m56_87 -> m56_94  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m56_87 -> m56_81  [key=2, style=dotted];
m56_72 -> m56_95  [key=0, style=solid];
m56_72 -> m56_67  [color=blue, key=0, style=bold];
m56_73 -> m56_74  [key=0, style=solid];
m56_73 -> m56_90  [color=darkseagreen4, key=1, label=type, style=dashed];
m56_77 -> m56_78  [key=0, style=solid];
m56_77 -> m56_94  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m56_77 -> m56_81  [key=2, style=dotted];
m56_90 -> m56_91  [key=0, style=solid];
m56_90 -> m56_98  [key=2, style=dotted];
m56_90 -> m56_94  [key=2, style=dotted];
m56_88 -> m56_89  [key=0, style=solid];
m56_88 -> m56_86  [color=blue, key=0, style=bold];
m56_91 -> m56_94  [key=0, style=solid];
m56_91 -> m56_92  [key=0, style=solid];
m56_91 -> m56_99  [key=2, style=dotted];
m56_91 -> m56_82  [key=2, style=dotted];
m56_91 -> m56_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_93 -> m56_94  [key=0, style=solid];
m56_93 -> m56_89  [color=blue, key=0, style=bold];
m56_74 -> m56_90  [color=darkseagreen4, key=1, label=method, style=dashed];
m56_74 -> m56_75  [key=0, style=solid];
m56_76 -> m56_77  [key=0, style=solid];
m56_76 -> m56_90  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m56_75 -> m56_90  [color=darkseagreen4, key=1, label=parameterTypes, style=dashed];
m56_75 -> m56_76  [key=0, style=solid];
m56_89 -> m56_90  [key=0, style=solid];
m56_92 -> m56_93  [key=0, style=solid];
m56_92 -> m56_82  [key=2, style=dotted];
m56_92 -> m56_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_95 -> m56_69  [color=blue, key=0, style=bold];
m56_95 -> m56_96  [key=0, style=solid];
m56_145 -> m56_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m56_145 -> m56_146  [key=0, style=solid];
m56_148 -> m56_149  [key=0, style=solid];
m56_148 -> m56_130  [key=2, style=dotted];
m56_148 -> m56_96  [key=2, style=dotted];
m56_146 -> m56_148  [key=0, style=solid];
m56_146 -> m56_147  [key=0, style=solid];
m56_149 -> m56_150  [key=0, style=solid];
m56_147 -> m56_150  [key=0, style=solid];
m56_147 -> d5  [key=2, style=dotted];
m56_150 -> m56_145  [color=blue, key=0, style=bold];
m56_54 -> m56_55  [color=red, key=0, style=solid];
m56_54 -> m56_18  [color=red, key=2, style=dotted];
m56_54 -> m56_57  [color=red, key=1, label="lambda expression", style=dashed];
m56_100 -> m56_98  [color=blue, key=0, style=bold];
m56_99 -> m56_100  [key=0, style=solid];
m56_99 -> m56_94  [key=2, style=dotted];
m56_8 -> m56_9  [key=0, style=solid];
m56_8 -> m56_10  [key=2, style=dotted];
m56_8 -> m56_11  [key=2, style=dotted];
m56_38 -> m56_36  [color=blue, key=0, style=bold];
m56_97 -> m56_95  [color=blue, key=0, style=bold];
m56_36 -> m56_37  [color=red, key=0, style=solid];
m56_36 -> m56_38  [key=2, style=dotted];
m56_36 -> m56_66  [key=0, style=solid];
m56_37 -> m56_35  [color=blue, key=0, style=bold];
m56_37 -> m56_38  [color=red, key=0, style=solid];
m56_37 -> m56_31  [color=red, key=2, style=dotted];
m56_190 -> m56_191  [key=0, style=solid];
m56_191 -> m56_192  [key=0, style=solid];
m56_191 -> m56_29  [key=2, style=dotted];
m56_191 -> m56_32  [key=2, style=dotted];
m56_191 -> m56_33  [key=2, style=dotted];
m56_192 -> m56_190  [color=blue, key=0, style=bold];
m56_23 -> m56_24  [color=red, key=0, style=solid];
m56_23 -> m56_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_23 -> m56_31  [key=2, style=dotted];
m56_23 -> m56_25  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m56_24 -> m56_25  [color=red, key=0, style=solid];
m56_24 -> m56_18  [color=red, key=2, style=dotted];
m56_24 -> m56_28  [color=red, key=1, label="lambda expression", style=dashed];
m56_24 -> m56_15  [key=0, style=solid];
m56_25 -> m56_26  [color=red, key=0, style=solid];
m56_25 -> m56_27  [color=red, key=2, style=dotted];
m56_25 -> m56_29  [key=2, style=dotted];
m56_25 -> m56_32  [key=2, style=dotted];
m56_25 -> m56_33  [key=2, style=dotted];
m56_26 -> m56_23  [color=blue, key=0, style=bold];
m56_26 -> m56_27  [key=0, style=solid];
m56_26 -> m56_34  [key=2, style=dotted];
m56_120 -> m56_121  [key=0, style=solid];
m56_121 -> m56_122  [key=0, style=solid];
m56_121 -> m56_29  [key=2, style=dotted];
m56_121 -> m56_123  [key=2, style=dotted];
m56_122 -> m56_120  [color=blue, key=0, style=bold];
m56_68 -> m56_69  [color=red, key=0, style=solid];
m56_68 -> m56_31  [color=red, key=2, style=dotted];
m56_68 -> m56_70  [color=red, key=1, label=manager, style=dashed];
m56_56 -> m56_53  [color=blue, key=0, style=bold];
m56_173 -> m56_174  [key=0, style=solid];
m56_174 -> m56_175  [key=0, style=solid];
m56_174 -> m56_176  [key=2, style=dotted];
m56_175 -> m56_173  [color=blue, key=0, style=bold];
m56_186 -> m56_187  [key=0, style=solid];
}
